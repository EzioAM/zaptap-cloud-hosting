{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-redux","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":55,"index":105}}],"key":"kZ4/idPhugyPFHafSDEx3FuasdM=","exportNames":["*"]}},{"name":"../../services/supabase/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":106},"end":{"line":3,"column":78,"index":184}}],"key":"a99TehitYkPR4mct+ady0jxcI4I=","exportNames":["*"]}},{"name":"../../store/slices/authSlice","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":185},"end":{"line":4,"column":53,"index":238}}],"key":"t7eKey/vDtOYKs5lwSt6x/8frDM=","exportNames":["*"]}},{"name":"../../store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":239},"end":{"line":5,"column":68,"index":307}}],"key":"L22hlTdNY/EnoVICoH7AmJpW7WM=","exportNames":["*"]}},{"name":"@react-native-community/netinfo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":432},"end":{"line":8,"column":54,"index":486}}],"key":"PqZcYTlMIVnzFjdViPzMiGUu7Hg=","exportNames":["*"]}},{"name":"../../constants/defaults","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":487},"end":{"line":9,"column":58,"index":545}}],"key":"Ye25I9WTFVUZPXhwgfQ8l+VQTx4=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":546},"end":{"line":10,"column":54,"index":600}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.AuthInitializer = undefined;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _react = _interopRequireWildcard(require(_dependencyMap[2]));\n  var _reactRedux = require(_dependencyMap[3]);\n  var _client = require(_dependencyMap[4]);\n  var _authSlice = _interopRequireDefault(require(_dependencyMap[5]));\n  var _store = require(_dependencyMap[6]);\n  var _netinfo = _interopRequireDefault(require(_dependencyMap[7]));\n  var _defaults = require(_dependencyMap[8]);\n  var _EventLogger = require(_dependencyMap[9]);\n  var _jsxRuntime = require(_dependencyMap[10]);\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  var AuthInitializer = exports.AuthInitializer = /*#__PURE__*/_react.default.memo(_ref => {\n    var children = _ref.children;\n    var dispatch = (0, _reactRedux.useDispatch)();\n    var authState = (0, _reactRedux.useSelector)(state => state.auth);\n    var hasInitialized = (0, _react.useRef)(false);\n    var tokenRefreshAttempted = (0, _react.useRef)(false);\n    (0, _react.useEffect)(() => {\n      // Prevent double initialization\n      if (hasInitialized.current) return;\n      hasInitialized.current = true;\n      _EventLogger.EventLogger.debug('Authentication', 'üîê AuthInitializer: Starting session restoration check...');\n\n      // DEFERRED: Check for existing session after UI renders to improve startup time\n      var initTimer = setTimeout(() => {\n        checkSession().catch(error => {\n          _EventLogger.EventLogger.warn('Authentication', 'Session check failed during startup, continuing without auth:', error);\n        });\n      }, 2000); // Extended delay for better startup performance\n\n      // Listen for auth state changes\n      var authListener;\n      try {\n        var _supabase$auth$onAuth = _client.supabase.auth.onAuthStateChange(/*#__PURE__*/function () {\n            var _ref2 = (0, _asyncToGenerator2.default)(function* (event, session) {\n              _EventLogger.EventLogger.debug('Authentication', 'Auth state changed:', event, session?.user?.email);\n              try {\n                if (event === 'SIGNED_IN' && session) {\n                  // Non-blocking profile fetch\n                  handleSignIn(session).catch(error => {\n                    _EventLogger.EventLogger.warn('Authentication', 'Profile fetch failed after sign in:', error);\n                  });\n                } else if (event === 'SIGNED_OUT') {\n                  _EventLogger.EventLogger.debug('Authentication', 'üö™ User signed out');\n                  dispatch(_authSlice.default.actions.signOutSuccess());\n\n                  // Clear API caches on sign out\n                  (0, _store.resetApiState)();\n\n                  // Reset refresh attempt flag\n                  tokenRefreshAttempted.current = false;\n                } else if (event === 'TOKEN_REFRESHED' && session) {\n                  _EventLogger.EventLogger.debug('Authentication', 'üîÑ Token refreshed successfully');\n                  dispatch(_authSlice.default.actions.updateTokens({\n                    accessToken: session.access_token,\n                    refreshToken: session.refresh_token\n                  }));\n\n                  // Clear any API errors that might have been caused by expired tokens\n                  (0, _store.resetApiState)();\n                } else if (event === 'USER_UPDATED' && session) {\n                  handleSignIn(session).catch(error => {\n                    _EventLogger.EventLogger.warn('Authentication', 'Profile update failed:', error);\n                  });\n                }\n              } catch (error) {\n                _EventLogger.EventLogger.error('Authentication', 'Auth state change handler error:', error);\n              }\n            });\n            return function (_x, _x2) {\n              return _ref2.apply(this, arguments);\n            };\n          }()),\n          data = _supabase$auth$onAuth.data;\n        authListener = data;\n      } catch (error) {\n        _EventLogger.EventLogger.warn('Authentication', 'Failed to set up auth listener:', error);\n      }\n      return () => {\n        clearTimeout(initTimer);\n        authListener?.subscription?.unsubscribe();\n      };\n    }, [dispatch]);\n    var handleSignIn = /*#__PURE__*/function () {\n      var _ref3 = (0, _asyncToGenerator2.default)(function* (session) {\n        try {\n          // Validate session before processing\n          if (!session || !session.user || !session.access_token) {\n            _EventLogger.EventLogger.error('Authentication', '‚ùå Invalid session data received');\n            dispatch(_authSlice.default.actions.signOutSuccess());\n            return;\n          }\n\n          // Immediately update Redux with basic session info - don't wait for profile\n          var basicUserData = {\n            id: session.user.id,\n            email: session.user.email,\n            name: session.user.user_metadata?.name || session.user.email?.split('@')[0] || 'User',\n            avatar_url: session.user.user_metadata?.avatar_url || _defaults.DEFAULT_AVATAR,\n            role: session.user.user_metadata?.role || 'user',\n            created_at: session.user.created_at\n          };\n          dispatch(_authSlice.default.actions.restoreSession({\n            user: basicUserData,\n            accessToken: session.access_token,\n            refreshToken: session.refresh_token\n          }));\n          _EventLogger.EventLogger.debug('Authentication', '‚úÖ User session updated successfully (basic)');\n\n          // Background profile fetch - don't block UI\n          try {\n            var _yield$supabase$from$ = yield _client.supabase.from('users').select('*').eq('id', session.user.id).single(),\n              profile = _yield$supabase$from$.data,\n              profileError = _yield$supabase$from$.error;\n            if (profileError) {\n              // Handle specific auth errors\n              if (profileError.message?.includes('JWT') || profileError.code === 'PGRST301') {\n                _EventLogger.EventLogger.warn('Authentication', '‚ö†Ô∏è JWT error during profile fetch, attempting token refresh...');\n                if (!tokenRefreshAttempted.current) {\n                  tokenRefreshAttempted.current = true;\n                  var refreshedSession = yield _client.supabase.auth.refreshSession();\n                  if (refreshedSession.data.session) {\n                    // Retry profile fetch with new token\n                    var _yield$supabase$from$2 = yield _client.supabase.from('users').select('*').eq('id', session.user.id).single(),\n                      retryProfile = _yield$supabase$from$2.data;\n                    if (retryProfile) {\n                      var enhancedUserData = {\n                        ...basicUserData,\n                        name: retryProfile.name || basicUserData.name,\n                        avatar_url: retryProfile.avatar_url || _defaults.DEFAULT_AVATAR,\n                        role: retryProfile.role || basicUserData.role,\n                        created_at: retryProfile.created_at || basicUserData.created_at\n                      };\n                      dispatch(_authSlice.default.actions.updateProfile(enhancedUserData));\n                      _EventLogger.EventLogger.debug('Authentication', '‚úÖ Profile data loaded after token refresh');\n                      return;\n                    }\n                  }\n                }\n                throw profileError;\n              }\n              throw profileError;\n            }\n            if (profile) {\n              var _enhancedUserData = {\n                id: profile.id,\n                email: profile.email,\n                name: profile.name || basicUserData.name,\n                avatar_url: profile.avatar_url || _defaults.DEFAULT_AVATAR,\n                role: profile.role || basicUserData.role,\n                created_at: profile.created_at || basicUserData.created_at\n              };\n              dispatch(_authSlice.default.actions.updateProfile(_enhancedUserData));\n              _EventLogger.EventLogger.debug('Authentication', '‚úÖ Profile data loaded and updated');\n            }\n          } catch (profileError) {\n            _EventLogger.EventLogger.warn('Authentication', '‚ö†Ô∏è Failed to fetch profile, using basic data:', profileError?.message || profileError);\n          }\n        } catch (error) {\n          _EventLogger.EventLogger.error('Authentication', '‚ùå Failed to handle sign in:', error);\n          // Even if everything fails, try basic session restore\n          var fallbackUserData = {\n            id: session.user.id,\n            email: session.user.email,\n            name: session.user.email?.split('@')[0] || 'User',\n            avatar_url: _defaults.DEFAULT_AVATAR,\n            role: 'user',\n            created_at: session.user.created_at\n          };\n          dispatch(_authSlice.default.actions.restoreSession({\n            user: fallbackUserData,\n            accessToken: session.access_token,\n            refreshToken: session.refresh_token\n          }));\n        }\n      });\n      return function handleSignIn(_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var checkSession = /*#__PURE__*/function () {\n      var _ref4 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          _EventLogger.EventLogger.debug('Authentication', 'üîç Checking for existing session...');\n\n          // Check network connectivity first to avoid unnecessary errors\n          var netInfo = yield _netinfo.default.fetch();\n          if (!netInfo.isConnected) {\n            _EventLogger.EventLogger.debug('Authentication', 'üì¥ No network connection - skipping session check');\n            // Don't clear auth state when offline - user might have valid cached session\n            return;\n          }\n\n          // First try to ensure we have a valid session (handles token refresh if needed)\n          var validSession = yield (0, _client.ensureValidSession)();\n          if (validSession) {\n            _EventLogger.EventLogger.debug('Authentication', '‚úÖ Found valid session for:', validSession.user.email);\n            _EventLogger.EventLogger.debug('Authentication', 'üîê AuthInitializer: Restoring user session automatically...');\n            // NON-BLOCKING: Handle sign in without waiting for profile fetch\n            handleSignIn(validSession).catch(error => {\n              _EventLogger.EventLogger.warn('Authentication', 'Profile fetch failed, continuing with basic auth:', error);\n            });\n            _EventLogger.EventLogger.debug('Authentication', '‚úÖ Session restored successfully - user will remain signed in!');\n          } else {\n            _EventLogger.EventLogger.debug('Authentication', '‚ÑπÔ∏è No valid session found - user needs to sign in');\n            dispatch(_authSlice.default.actions.signOutSuccess());\n\n            // Clear any stale API data\n            (0, _store.resetApiState)();\n          }\n        } catch (error) {\n          // Only log network errors once, not as errors\n          if (error?.message?.includes('Network request failed') || error?.message?.includes('Failed to fetch') || error?.name === 'NetworkError' || error?.name === 'AuthRetryableFetchError') {\n            _EventLogger.EventLogger.debug('Authentication', 'üì¥ Network unavailable for session check');\n            // Don't clear auth state when network is down\n            return;\n          }\n          _EventLogger.EventLogger.warn('Authentication', '‚ö†Ô∏è Session check failed:', error?.message || 'Unknown error');\n          // For non-network errors, clear auth state\n          dispatch(_authSlice.default.actions.signOutSuccess());\n\n          // Clear any stale API data\n          (0, _store.resetApiState)();\n        }\n      });\n      return function checkSession() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {\n      children: children\n    });\n  });\n});","lineCount":240,"map":[[8,2,1,0],[8,6,1,0,"_react"],[8,12,1,0],[8,15,1,0,"_interopRequireWildcard"],[8,38,1,0],[8,39,1,0,"require"],[8,46,1,0],[8,47,1,0,"_dependencyMap"],[8,61,1,0],[9,2,2,0],[9,6,2,0,"_reactRedux"],[9,17,2,0],[9,20,2,0,"require"],[9,27,2,0],[9,28,2,0,"_dependencyMap"],[9,42,2,0],[10,2,3,0],[10,6,3,0,"_client"],[10,13,3,0],[10,16,3,0,"require"],[10,23,3,0],[10,24,3,0,"_dependencyMap"],[10,38,3,0],[11,2,4,0],[11,6,4,0,"_authSlice"],[11,16,4,0],[11,19,4,0,"_interopRequireDefault"],[11,41,4,0],[11,42,4,0,"require"],[11,49,4,0],[11,50,4,0,"_dependencyMap"],[11,64,4,0],[12,2,5,0],[12,6,5,0,"_store"],[12,12,5,0],[12,15,5,0,"require"],[12,22,5,0],[12,23,5,0,"_dependencyMap"],[12,37,5,0],[13,2,8,0],[13,6,8,0,"_netinfo"],[13,14,8,0],[13,17,8,0,"_interopRequireDefault"],[13,39,8,0],[13,40,8,0,"require"],[13,47,8,0],[13,48,8,0,"_dependencyMap"],[13,62,8,0],[14,2,9,0],[14,6,9,0,"_defaults"],[14,15,9,0],[14,18,9,0,"require"],[14,25,9,0],[14,26,9,0,"_dependencyMap"],[14,40,9,0],[15,2,10,0],[15,6,10,0,"_EventLogger"],[15,18,10,0],[15,21,10,0,"require"],[15,28,10,0],[15,29,10,0,"_dependencyMap"],[15,43,10,0],[16,2,10,54],[16,6,10,54,"_jsxRuntime"],[16,17,10,54],[16,20,10,54,"require"],[16,27,10,54],[16,28,10,54,"_dependencyMap"],[16,42,10,54],[17,2,10,54],[17,11,10,54,"_interopRequireWildcard"],[17,35,10,54,"e"],[17,36,10,54],[17,38,10,54,"t"],[17,39,10,54],[17,68,10,54,"WeakMap"],[17,75,10,54],[17,81,10,54,"r"],[17,82,10,54],[17,89,10,54,"WeakMap"],[17,96,10,54],[17,100,10,54,"n"],[17,101,10,54],[17,108,10,54,"WeakMap"],[17,115,10,54],[17,127,10,54,"_interopRequireWildcard"],[17,150,10,54],[17,162,10,54,"_interopRequireWildcard"],[17,163,10,54,"e"],[17,164,10,54],[17,166,10,54,"t"],[17,167,10,54],[17,176,10,54,"t"],[17,177,10,54],[17,181,10,54,"e"],[17,182,10,54],[17,186,10,54,"e"],[17,187,10,54],[17,188,10,54,"__esModule"],[17,198,10,54],[17,207,10,54,"e"],[17,208,10,54],[17,214,10,54,"o"],[17,215,10,54],[17,217,10,54,"i"],[17,218,10,54],[17,220,10,54,"f"],[17,221,10,54],[17,226,10,54,"__proto__"],[17,235,10,54],[17,243,10,54,"default"],[17,250,10,54],[17,252,10,54,"e"],[17,253,10,54],[17,270,10,54,"e"],[17,271,10,54],[17,294,10,54,"e"],[17,295,10,54],[17,320,10,54,"e"],[17,321,10,54],[17,330,10,54,"f"],[17,331,10,54],[17,337,10,54,"o"],[17,338,10,54],[17,341,10,54,"t"],[17,342,10,54],[17,345,10,54,"n"],[17,346,10,54],[17,349,10,54,"r"],[17,350,10,54],[17,358,10,54,"o"],[17,359,10,54],[17,360,10,54,"has"],[17,363,10,54],[17,364,10,54,"e"],[17,365,10,54],[17,375,10,54,"o"],[17,376,10,54],[17,377,10,54,"get"],[17,380,10,54],[17,381,10,54,"e"],[17,382,10,54],[17,385,10,54,"o"],[17,386,10,54],[17,387,10,54,"set"],[17,390,10,54],[17,391,10,54,"e"],[17,392,10,54],[17,394,10,54,"f"],[17,395,10,54],[17,409,10,54,"_t"],[17,411,10,54],[17,415,10,54,"e"],[17,416,10,54],[17,432,10,54,"_t"],[17,434,10,54],[17,441,10,54,"hasOwnProperty"],[17,455,10,54],[17,456,10,54,"call"],[17,460,10,54],[17,461,10,54,"e"],[17,462,10,54],[17,464,10,54,"_t"],[17,466,10,54],[17,473,10,54,"i"],[17,474,10,54],[17,478,10,54,"o"],[17,479,10,54],[17,482,10,54,"Object"],[17,488,10,54],[17,489,10,54,"defineProperty"],[17,503,10,54],[17,508,10,54,"Object"],[17,514,10,54],[17,515,10,54,"getOwnPropertyDescriptor"],[17,539,10,54],[17,540,10,54,"e"],[17,541,10,54],[17,543,10,54,"_t"],[17,545,10,54],[17,552,10,54,"i"],[17,553,10,54],[17,554,10,54,"get"],[17,557,10,54],[17,561,10,54,"i"],[17,562,10,54],[17,563,10,54,"set"],[17,566,10,54],[17,570,10,54,"o"],[17,571,10,54],[17,572,10,54,"f"],[17,573,10,54],[17,575,10,54,"_t"],[17,577,10,54],[17,579,10,54,"i"],[17,580,10,54],[17,584,10,54,"f"],[17,585,10,54],[17,586,10,54,"_t"],[17,588,10,54],[17,592,10,54,"e"],[17,593,10,54],[17,594,10,54,"_t"],[17,596,10,54],[17,607,10,54,"f"],[17,608,10,54],[17,613,10,54,"e"],[17,614,10,54],[17,616,10,54,"t"],[17,617,10,54],[18,2,12,7],[18,6,12,13,"AuthInitializer"],[18,21,12,69],[18,24,12,69,"exports"],[18,31,12,69],[18,32,12,69,"AuthInitializer"],[18,47,12,69],[18,63,12,72,"React"],[18,77,12,77],[18,78,12,78,"memo"],[18,82,12,82],[18,83,12,83,"_ref"],[18,87,12,83],[18,91,12,101],[19,4,12,101],[19,8,12,86,"children"],[19,16,12,94],[19,19,12,94,"_ref"],[19,23,12,94],[19,24,12,86,"children"],[19,32,12,94],[20,4,13,2],[20,8,13,8,"dispatch"],[20,16,13,16],[20,19,13,19],[20,23,13,19,"useDispatch"],[20,46,13,30],[20,48,13,44],[20,49,13,45],[21,4,14,2],[21,8,14,8,"authState"],[21,17,14,17],[21,20,14,20],[21,24,14,20,"useSelector"],[21,47,14,31],[21,49,14,33,"state"],[21,54,14,49],[21,58,14,54,"state"],[21,63,14,59],[21,64,14,60,"auth"],[21,68,14,64],[21,69,14,65],[22,4,15,2],[22,8,15,8,"hasInitialized"],[22,22,15,22],[22,25,15,25],[22,29,15,25,"useRef"],[22,42,15,31],[22,44,15,32],[22,49,15,37],[22,50,15,38],[23,4,16,2],[23,8,16,8,"tokenRefreshAttempted"],[23,29,16,29],[23,32,16,32],[23,36,16,32,"useRef"],[23,49,16,38],[23,51,16,39],[23,56,16,44],[23,57,16,45],[24,4,18,2],[24,8,18,2,"useEffect"],[24,24,18,11],[24,26,18,12],[24,32,18,18],[25,6,19,4],[26,6,20,4],[26,10,20,8,"hasInitialized"],[26,24,20,22],[26,25,20,23,"current"],[26,32,20,30],[26,34,20,32],[27,6,21,4,"hasInitialized"],[27,20,21,18],[27,21,21,19,"current"],[27,28,21,26],[27,31,21,29],[27,35,21,33],[28,6,23,4,"EventLogger"],[28,30,23,15],[28,31,23,16,"debug"],[28,36,23,21],[28,37,23,22],[28,53,23,38],[28,55,23,40],[28,114,23,99],[28,115,23,100],[30,6,25,4],[31,6,26,4],[31,10,26,10,"initTimer"],[31,19,26,19],[31,22,26,22,"setTimeout"],[31,32,26,32],[31,33,26,33],[31,39,26,39],[32,8,27,6,"checkSession"],[32,20,27,18],[32,21,27,19],[32,22,27,20],[32,23,27,21,"catch"],[32,28,27,26],[32,29,27,27,"error"],[32,34,27,32],[32,38,27,36],[33,10,28,8,"EventLogger"],[33,34,28,19],[33,35,28,20,"warn"],[33,39,28,24],[33,40,28,25],[33,56,28,41],[33,58,28,43],[33,121,28,106],[33,123,28,108,"error"],[33,128,28,113],[33,129,28,114],[34,8,29,6],[34,9,29,7],[34,10,29,8],[35,6,30,4],[35,7,30,5],[35,9,30,7],[35,13,30,11],[35,14,30,12],[35,15,30,13],[35,16,30,14],[37,6,32,4],[38,6,33,4],[38,10,33,8,"authListener"],[38,22,33,25],[39,6,34,4],[39,10,34,8],[40,8,35,6],[40,12,35,6,"_supabase$auth$onAuth"],[40,33,35,6],[40,36,35,23,"supabase"],[40,52,35,31],[40,53,35,32,"auth"],[40,57,35,36],[40,58,35,37,"onAuthStateChange"],[40,75,35,54],[41,12,35,54],[41,16,35,54,"_ref2"],[41,21,35,54],[41,28,35,54,"_asyncToGenerator2"],[41,46,35,54],[41,47,35,54,"default"],[41,54,35,54],[41,56,35,55],[41,67,35,62,"event"],[41,72,35,67],[41,74,35,69,"session"],[41,81,35,76],[41,83,35,81],[42,14,36,8,"EventLogger"],[42,38,36,19],[42,39,36,20,"debug"],[42,44,36,25],[42,45,36,26],[42,61,36,42],[42,63,36,44],[42,84,36,65],[42,86,36,67,"event"],[42,91,36,72],[42,93,36,74,"session"],[42,100,36,81],[42,102,36,83,"user"],[42,106,36,87],[42,108,36,89,"email"],[42,113,36,94],[42,114,36,95],[43,14,38,8],[43,18,38,12],[44,16,39,10],[44,20,39,14,"event"],[44,25,39,19],[44,30,39,24],[44,41,39,35],[44,45,39,39,"session"],[44,52,39,46],[44,54,39,48],[45,18,40,12],[46,18,41,12,"handleSignIn"],[46,30,41,24],[46,31,41,25,"session"],[46,38,41,32],[46,39,41,33],[46,40,41,34,"catch"],[46,45,41,39],[46,46,41,40,"error"],[46,51,41,45],[46,55,41,49],[47,20,42,14,"EventLogger"],[47,44,42,25],[47,45,42,26,"warn"],[47,49,42,30],[47,50,42,31],[47,66,42,47],[47,68,42,49],[47,105,42,86],[47,107,42,88,"error"],[47,112,42,93],[47,113,42,94],[48,18,43,12],[48,19,43,13],[48,20,43,14],[49,16,44,8],[49,17,44,9],[49,23,44,15],[49,27,44,19,"event"],[49,32,44,24],[49,37,44,29],[49,49,44,41],[49,51,44,43],[50,18,45,10,"EventLogger"],[50,42,45,21],[50,43,45,22,"debug"],[50,48,45,27],[50,49,45,28],[50,65,45,44],[50,67,45,46],[50,87,45,66],[50,88,45,67],[51,18,46,10,"dispatch"],[51,26,46,18],[51,27,46,19,"authSlice"],[51,45,46,28],[51,46,46,29,"actions"],[51,53,46,36],[51,54,46,37,"signOutSuccess"],[51,68,46,51],[51,69,46,52],[51,70,46,53],[51,71,46,54],[53,18,48,10],[54,18,49,10],[54,22,49,10,"resetApiState"],[54,42,49,23],[54,44,49,24],[54,45,49,25],[56,18,51,10],[57,18,52,10,"tokenRefreshAttempted"],[57,39,52,31],[57,40,52,32,"current"],[57,47,52,39],[57,50,52,42],[57,55,52,47],[58,16,53,8],[58,17,53,9],[58,23,53,15],[58,27,53,19,"event"],[58,32,53,24],[58,37,53,29],[58,54,53,46],[58,58,53,50,"session"],[58,65,53,57],[58,67,53,59],[59,18,54,10,"EventLogger"],[59,42,54,21],[59,43,54,22,"debug"],[59,48,54,27],[59,49,54,28],[59,65,54,44],[59,67,54,46],[59,100,54,79],[59,101,54,80],[60,18,55,10,"dispatch"],[60,26,55,18],[60,27,55,19,"authSlice"],[60,45,55,28],[60,46,55,29,"actions"],[60,53,55,36],[60,54,55,37,"updateTokens"],[60,66,55,49],[60,67,55,50],[61,20,56,12,"accessToken"],[61,31,56,23],[61,33,56,25,"session"],[61,40,56,32],[61,41,56,33,"access_token"],[61,53,56,45],[62,20,57,12,"refreshToken"],[62,32,57,24],[62,34,57,26,"session"],[62,41,57,33],[62,42,57,34,"refresh_token"],[63,18,58,10],[63,19,58,11],[63,20,58,12],[63,21,58,13],[65,18,60,10],[66,18,61,10],[66,22,61,10,"resetApiState"],[66,42,61,23],[66,44,61,24],[66,45,61,25],[67,16,62,8],[67,17,62,9],[67,23,62,15],[67,27,62,19,"event"],[67,32,62,24],[67,37,62,29],[67,51,62,43],[67,55,62,47,"session"],[67,62,62,54],[67,64,62,56],[68,18,63,10,"handleSignIn"],[68,30,63,22],[68,31,63,23,"session"],[68,38,63,30],[68,39,63,31],[68,40,63,32,"catch"],[68,45,63,37],[68,46,63,38,"error"],[68,51,63,43],[68,55,63,47],[69,20,64,12,"EventLogger"],[69,44,64,23],[69,45,64,24,"warn"],[69,49,64,28],[69,50,64,29],[69,66,64,45],[69,68,64,47],[69,92,64,71],[69,94,64,73,"error"],[69,99,64,78],[69,100,64,79],[70,18,65,10],[70,19,65,11],[70,20,65,12],[71,16,66,10],[72,14,67,8],[72,15,67,9],[72,16,67,10],[72,23,67,17,"error"],[72,28,67,22],[72,30,67,24],[73,16,68,10,"EventLogger"],[73,40,68,21],[73,41,68,22,"error"],[73,46,68,27],[73,47,68,28],[73,63,68,44],[73,65,68,46],[73,99,68,80],[73,101,68,82,"error"],[73,106,68,96],[73,107,68,97],[74,14,69,8],[75,12,70,6],[75,13,70,7],[76,12,70,7],[76,29,70,7,"_x"],[76,31,70,7],[76,33,70,7,"_x2"],[76,36,70,7],[77,14,70,7],[77,21,70,7,"_ref2"],[77,26,70,7],[77,27,70,7,"apply"],[77,32,70,7],[77,39,70,7,"arguments"],[77,48,70,7],[78,12,70,7],[79,10,70,7],[79,14,70,8],[80,10,35,14,"data"],[80,14,35,18],[80,17,35,18,"_supabase$auth$onAuth"],[80,38,35,18],[80,39,35,14,"data"],[80,43,35,18],[81,8,71,6,"authListener"],[81,20,71,18],[81,23,71,21,"data"],[81,27,71,25],[82,6,72,4],[82,7,72,5],[82,8,72,6],[82,15,72,13,"error"],[82,20,72,18],[82,22,72,20],[83,8,73,6,"EventLogger"],[83,32,73,17],[83,33,73,18,"warn"],[83,37,73,22],[83,38,73,23],[83,54,73,39],[83,56,73,41],[83,89,73,74],[83,91,73,76,"error"],[83,96,73,81],[83,97,73,82],[84,6,74,4],[85,6,76,4],[85,13,76,11],[85,19,76,17],[86,8,77,6,"clearTimeout"],[86,20,77,18],[86,21,77,19,"initTimer"],[86,30,77,28],[86,31,77,29],[87,8,78,6,"authListener"],[87,20,78,18],[87,22,78,20,"subscription"],[87,34,78,32],[87,36,78,34,"unsubscribe"],[87,47,78,45],[87,48,78,46],[87,49,78,47],[88,6,79,4],[88,7,79,5],[89,4,80,2],[89,5,80,3],[89,7,80,5],[89,8,80,6,"dispatch"],[89,16,80,14],[89,17,80,15],[89,18,80,16],[90,4,82,2],[90,8,82,8,"handleSignIn"],[90,20,82,20],[91,6,82,20],[91,10,82,20,"_ref3"],[91,15,82,20],[91,22,82,20,"_asyncToGenerator2"],[91,40,82,20],[91,41,82,20,"default"],[91,48,82,20],[91,50,82,23],[91,61,82,30,"session"],[91,68,82,42],[91,70,82,47],[92,8,83,4],[92,12,83,8],[93,10,84,6],[94,10,85,6],[94,14,85,10],[94,15,85,11,"session"],[94,22,85,18],[94,26,85,22],[94,27,85,23,"session"],[94,34,85,30],[94,35,85,31,"user"],[94,39,85,35],[94,43,85,39],[94,44,85,40,"session"],[94,51,85,47],[94,52,85,48,"access_token"],[94,64,85,60],[94,66,85,62],[95,12,86,8,"EventLogger"],[95,36,86,19],[95,37,86,20,"error"],[95,42,86,25],[95,43,86,26],[95,59,86,42],[95,61,86,44],[95,94,86,77],[95,95,86,78],[96,12,87,8,"dispatch"],[96,20,87,16],[96,21,87,17,"authSlice"],[96,39,87,26],[96,40,87,27,"actions"],[96,47,87,34],[96,48,87,35,"signOutSuccess"],[96,62,87,49],[96,63,87,50],[96,64,87,51],[96,65,87,52],[97,12,88,8],[98,10,89,6],[100,10,91,6],[101,10,92,6],[101,14,92,12,"basicUserData"],[101,27,92,25],[101,30,92,28],[102,12,93,8,"id"],[102,14,93,10],[102,16,93,12,"session"],[102,23,93,19],[102,24,93,20,"user"],[102,28,93,24],[102,29,93,25,"id"],[102,31,93,27],[103,12,94,8,"email"],[103,17,94,13],[103,19,94,15,"session"],[103,26,94,22],[103,27,94,23,"user"],[103,31,94,27],[103,32,94,28,"email"],[103,37,94,34],[104,12,95,8,"name"],[104,16,95,12],[104,18,95,14,"session"],[104,25,95,21],[104,26,95,22,"user"],[104,30,95,26],[104,31,95,27,"user_metadata"],[104,44,95,40],[104,46,95,42,"name"],[104,50,95,46],[104,54,95,50,"session"],[104,61,95,57],[104,62,95,58,"user"],[104,66,95,62],[104,67,95,63,"email"],[104,72,95,68],[104,74,95,70,"split"],[104,79,95,75],[104,80,95,76],[104,83,95,79],[104,84,95,80],[104,85,95,81],[104,86,95,82],[104,87,95,83],[104,91,95,87],[104,97,95,93],[105,12,96,8,"avatar_url"],[105,22,96,18],[105,24,96,20,"session"],[105,31,96,27],[105,32,96,28,"user"],[105,36,96,32],[105,37,96,33,"user_metadata"],[105,50,96,46],[105,52,96,48,"avatar_url"],[105,62,96,58],[105,66,96,62,"DEFAULT_AVATAR"],[105,90,96,76],[106,12,97,8,"role"],[106,16,97,12],[106,18,97,14,"session"],[106,25,97,21],[106,26,97,22,"user"],[106,30,97,26],[106,31,97,27,"user_metadata"],[106,44,97,40],[106,46,97,42,"role"],[106,50,97,46],[106,54,97,50],[106,60,97,56],[107,12,98,8,"created_at"],[107,22,98,18],[107,24,98,20,"session"],[107,31,98,27],[107,32,98,28,"user"],[107,36,98,32],[107,37,98,33,"created_at"],[108,10,99,6],[108,11,99,7],[109,10,101,6,"dispatch"],[109,18,101,14],[109,19,101,15,"authSlice"],[109,37,101,24],[109,38,101,25,"actions"],[109,45,101,32],[109,46,101,33,"restoreSession"],[109,60,101,47],[109,61,101,48],[110,12,102,8,"user"],[110,16,102,12],[110,18,102,14,"basicUserData"],[110,31,102,27],[111,12,103,8,"accessToken"],[111,23,103,19],[111,25,103,21,"session"],[111,32,103,28],[111,33,103,29,"access_token"],[111,45,103,41],[112,12,104,8,"refreshToken"],[112,24,104,20],[112,26,104,22,"session"],[112,33,104,29],[112,34,104,30,"refresh_token"],[113,10,105,6],[113,11,105,7],[113,12,105,8],[113,13,105,9],[114,10,107,6,"EventLogger"],[114,34,107,17],[114,35,107,18,"debug"],[114,40,107,23],[114,41,107,24],[114,57,107,40],[114,59,107,42],[114,104,107,87],[114,105,107,88],[116,10,109,6],[117,10,110,6],[117,14,110,10],[118,12,111,8],[118,16,111,8,"_yield$supabase$from$"],[118,37,111,8],[118,46,111,61,"supabase"],[118,62,111,69],[118,63,112,11,"from"],[118,67,112,15],[118,68,112,16],[118,75,112,23],[118,76,112,24],[118,77,113,11,"select"],[118,83,113,17],[118,84,113,18],[118,87,113,21],[118,88,113,22],[118,89,114,11,"eq"],[118,91,114,13],[118,92,114,14],[118,96,114,18],[118,98,114,20,"session"],[118,105,114,27],[118,106,114,28,"user"],[118,110,114,32],[118,111,114,33,"id"],[118,113,114,35],[118,114,114,36],[118,115,115,11,"single"],[118,121,115,17],[118,122,115,18],[118,123,115,19],[119,14,111,22,"profile"],[119,21,111,29],[119,24,111,29,"_yield$supabase$from$"],[119,45,111,29],[119,46,111,16,"data"],[119,50,111,20],[120,14,111,38,"profileError"],[120,26,111,50],[120,29,111,50,"_yield$supabase$from$"],[120,50,111,50],[120,51,111,31,"error"],[120,56,111,36],[121,12,117,8],[121,16,117,12,"profileError"],[121,28,117,24],[121,30,117,26],[122,14,118,10],[123,14,119,10],[123,18,119,14,"profileError"],[123,30,119,26],[123,31,119,27,"message"],[123,38,119,34],[123,40,119,36,"includes"],[123,48,119,44],[123,49,119,45],[123,54,119,50],[123,55,119,51],[123,59,119,55,"profileError"],[123,71,119,67],[123,72,119,68,"code"],[123,76,119,72],[123,81,119,77],[123,91,119,87],[123,93,119,89],[124,16,120,12,"EventLogger"],[124,40,120,23],[124,41,120,24,"warn"],[124,45,120,28],[124,46,120,29],[124,62,120,45],[124,64,120,47],[124,128,120,111],[124,129,120,112],[125,16,121,12],[125,20,121,16],[125,21,121,17,"tokenRefreshAttempted"],[125,42,121,38],[125,43,121,39,"current"],[125,50,121,46],[125,52,121,48],[126,18,122,14,"tokenRefreshAttempted"],[126,39,122,35],[126,40,122,36,"current"],[126,47,122,43],[126,50,122,46],[126,54,122,50],[127,18,123,14],[127,22,123,20,"refreshedSession"],[127,38,123,36],[127,47,123,45,"supabase"],[127,63,123,53],[127,64,123,54,"auth"],[127,68,123,58],[127,69,123,59,"refreshSession"],[127,83,123,73],[127,84,123,74],[127,85,123,75],[128,18,124,14],[128,22,124,18,"refreshedSession"],[128,38,124,34],[128,39,124,35,"data"],[128,43,124,39],[128,44,124,40,"session"],[128,51,124,47],[128,53,124,49],[129,20,125,16],[130,20,126,16],[130,24,126,16,"_yield$supabase$from$2"],[130,46,126,16],[130,55,126,53,"supabase"],[130,71,126,61],[130,72,127,19,"from"],[130,76,127,23],[130,77,127,24],[130,84,127,31],[130,85,127,32],[130,86,128,19,"select"],[130,92,128,25],[130,93,128,26],[130,96,128,29],[130,97,128,30],[130,98,129,19,"eq"],[130,100,129,21],[130,101,129,22],[130,105,129,26],[130,107,129,28,"session"],[130,114,129,35],[130,115,129,36,"user"],[130,119,129,40],[130,120,129,41,"id"],[130,122,129,43],[130,123,129,44],[130,124,130,19,"single"],[130,130,130,25],[130,131,130,26],[130,132,130,27],[131,22,126,30,"retryProfile"],[131,34,126,42],[131,37,126,42,"_yield$supabase$from$2"],[131,59,126,42],[131,60,126,24,"data"],[131,64,126,28],[132,20,132,16],[132,24,132,20,"retryProfile"],[132,36,132,32],[132,38,132,34],[133,22,133,18],[133,26,133,24,"enhancedUserData"],[133,42,133,40],[133,45,133,43],[134,24,134,20],[134,27,134,23,"basicUserData"],[134,40,134,36],[135,24,135,20,"name"],[135,28,135,24],[135,30,135,26,"retryProfile"],[135,42,135,38],[135,43,135,39,"name"],[135,47,135,43],[135,51,135,47,"basicUserData"],[135,64,135,60],[135,65,135,61,"name"],[135,69,135,65],[136,24,136,20,"avatar_url"],[136,34,136,30],[136,36,136,32,"retryProfile"],[136,48,136,44],[136,49,136,45,"avatar_url"],[136,59,136,55],[136,63,136,59,"DEFAULT_AVATAR"],[136,87,136,73],[137,24,137,20,"role"],[137,28,137,24],[137,30,137,26,"retryProfile"],[137,42,137,38],[137,43,137,39,"role"],[137,47,137,43],[137,51,137,47,"basicUserData"],[137,64,137,60],[137,65,137,61,"role"],[137,69,137,65],[138,24,138,20,"created_at"],[138,34,138,30],[138,36,138,32,"retryProfile"],[138,48,138,44],[138,49,138,45,"created_at"],[138,59,138,55],[138,63,138,59,"basicUserData"],[138,76,138,72],[138,77,138,73,"created_at"],[139,22,139,18],[139,23,139,19],[140,22,141,18,"dispatch"],[140,30,141,26],[140,31,141,27,"authSlice"],[140,49,141,36],[140,50,141,37,"actions"],[140,57,141,44],[140,58,141,45,"updateProfile"],[140,71,141,58],[140,72,141,59,"enhancedUserData"],[140,88,141,75],[140,89,141,76],[140,90,141,77],[141,22,142,18,"EventLogger"],[141,46,142,29],[141,47,142,30,"debug"],[141,52,142,35],[141,53,142,36],[141,69,142,52],[141,71,142,54],[141,114,142,97],[141,115,142,98],[142,22,143,18],[143,20,144,16],[144,18,145,14],[145,16,146,12],[146,16,147,12],[146,22,147,18,"profileError"],[146,34,147,30],[147,14,148,10],[148,14,149,10],[148,20,149,16,"profileError"],[148,32,149,28],[149,12,150,8],[150,12,152,8],[150,16,152,12,"profile"],[150,23,152,19],[150,25,152,21],[151,14,153,10],[151,18,153,16,"enhancedUserData"],[151,35,153,32],[151,38,153,35],[152,16,154,12,"id"],[152,18,154,14],[152,20,154,16,"profile"],[152,27,154,23],[152,28,154,24,"id"],[152,30,154,26],[153,16,155,12,"email"],[153,21,155,17],[153,23,155,19,"profile"],[153,30,155,26],[153,31,155,27,"email"],[153,36,155,32],[154,16,156,12,"name"],[154,20,156,16],[154,22,156,18,"profile"],[154,29,156,25],[154,30,156,26,"name"],[154,34,156,30],[154,38,156,34,"basicUserData"],[154,51,156,47],[154,52,156,48,"name"],[154,56,156,52],[155,16,157,12,"avatar_url"],[155,26,157,22],[155,28,157,24,"profile"],[155,35,157,31],[155,36,157,32,"avatar_url"],[155,46,157,42],[155,50,157,46,"DEFAULT_AVATAR"],[155,74,157,60],[156,16,158,12,"role"],[156,20,158,16],[156,22,158,18,"profile"],[156,29,158,25],[156,30,158,26,"role"],[156,34,158,30],[156,38,158,34,"basicUserData"],[156,51,158,47],[156,52,158,48,"role"],[156,56,158,52],[157,16,159,12,"created_at"],[157,26,159,22],[157,28,159,24,"profile"],[157,35,159,31],[157,36,159,32,"created_at"],[157,46,159,42],[157,50,159,46,"basicUserData"],[157,63,159,59],[157,64,159,60,"created_at"],[158,14,160,10],[158,15,160,11],[159,14,162,10,"dispatch"],[159,22,162,18],[159,23,162,19,"authSlice"],[159,41,162,28],[159,42,162,29,"actions"],[159,49,162,36],[159,50,162,37,"updateProfile"],[159,63,162,50],[159,64,162,51,"enhancedUserData"],[159,81,162,67],[159,82,162,68],[159,83,162,69],[160,14,163,10,"EventLogger"],[160,38,163,21],[160,39,163,22,"debug"],[160,44,163,27],[160,45,163,28],[160,61,163,44],[160,63,163,46],[160,98,163,81],[160,99,163,82],[161,12,164,8],[162,10,165,6],[162,11,165,7],[162,12,165,8],[162,19,165,15,"profileError"],[162,31,165,32],[162,33,165,34],[163,12,166,8,"EventLogger"],[163,36,166,19],[163,37,166,20,"warn"],[163,41,166,24],[163,42,166,25],[163,58,166,41],[163,60,166,43],[163,107,166,90],[163,109,166,92,"profileError"],[163,121,166,104],[163,123,166,106,"message"],[163,130,166,113],[163,134,166,117,"profileError"],[163,146,166,129],[163,147,166,130],[164,10,167,6],[165,8,168,4],[165,9,168,5],[165,10,168,6],[165,17,168,13,"error"],[165,22,168,18],[165,24,168,20],[166,10,169,6,"EventLogger"],[166,34,169,17],[166,35,169,18,"error"],[166,40,169,23],[166,41,169,24],[166,57,169,40],[166,59,169,42],[166,88,169,71],[166,90,169,73,"error"],[166,95,169,87],[166,96,169,88],[167,10,170,6],[168,10,171,6],[168,14,171,12,"fallbackUserData"],[168,30,171,28],[168,33,171,31],[169,12,172,8,"id"],[169,14,172,10],[169,16,172,12,"session"],[169,23,172,19],[169,24,172,20,"user"],[169,28,172,24],[169,29,172,25,"id"],[169,31,172,27],[170,12,173,8,"email"],[170,17,173,13],[170,19,173,15,"session"],[170,26,173,22],[170,27,173,23,"user"],[170,31,173,27],[170,32,173,28,"email"],[170,37,173,34],[171,12,174,8,"name"],[171,16,174,12],[171,18,174,14,"session"],[171,25,174,21],[171,26,174,22,"user"],[171,30,174,26],[171,31,174,27,"email"],[171,36,174,32],[171,38,174,34,"split"],[171,43,174,39],[171,44,174,40],[171,47,174,43],[171,48,174,44],[171,49,174,45],[171,50,174,46],[171,51,174,47],[171,55,174,51],[171,61,174,57],[172,12,175,8,"avatar_url"],[172,22,175,18],[172,24,175,20,"DEFAULT_AVATAR"],[172,48,175,34],[173,12,176,8,"role"],[173,16,176,12],[173,18,176,14],[173,24,176,20],[174,12,177,8,"created_at"],[174,22,177,18],[174,24,177,20,"session"],[174,31,177,27],[174,32,177,28,"user"],[174,36,177,32],[174,37,177,33,"created_at"],[175,10,178,6],[175,11,178,7],[176,10,180,6,"dispatch"],[176,18,180,14],[176,19,180,15,"authSlice"],[176,37,180,24],[176,38,180,25,"actions"],[176,45,180,32],[176,46,180,33,"restoreSession"],[176,60,180,47],[176,61,180,48],[177,12,181,8,"user"],[177,16,181,12],[177,18,181,14,"fallbackUserData"],[177,34,181,30],[178,12,182,8,"accessToken"],[178,23,182,19],[178,25,182,21,"session"],[178,32,182,28],[178,33,182,29,"access_token"],[178,45,182,41],[179,12,183,8,"refreshToken"],[179,24,183,20],[179,26,183,22,"session"],[179,33,183,29],[179,34,183,30,"refresh_token"],[180,10,184,6],[180,11,184,7],[180,12,184,8],[180,13,184,9],[181,8,185,4],[182,6,186,2],[182,7,186,3],[183,6,186,3],[183,22,82,8,"handleSignIn"],[183,34,82,20,"handleSignIn"],[183,35,82,20,"_x3"],[183,38,82,20],[184,8,82,20],[184,15,82,20,"_ref3"],[184,20,82,20],[184,21,82,20,"apply"],[184,26,82,20],[184,33,82,20,"arguments"],[184,42,82,20],[185,6,82,20],[186,4,82,20],[186,7,186,3],[187,4,188,2],[187,8,188,8,"checkSession"],[187,20,188,20],[188,6,188,20],[188,10,188,20,"_ref4"],[188,15,188,20],[188,22,188,20,"_asyncToGenerator2"],[188,40,188,20],[188,41,188,20,"default"],[188,48,188,20],[188,50,188,23],[188,63,188,35],[189,8,189,4],[189,12,189,8],[190,10,190,6,"EventLogger"],[190,34,190,17],[190,35,190,18,"debug"],[190,40,190,23],[190,41,190,24],[190,57,190,40],[190,59,190,42],[190,96,190,79],[190,97,190,80],[192,10,192,6],[193,10,193,6],[193,14,193,12,"netInfo"],[193,21,193,19],[193,30,193,28,"NetInfo"],[193,46,193,35],[193,47,193,36,"fetch"],[193,52,193,41],[193,53,193,42],[193,54,193,43],[194,10,194,6],[194,14,194,10],[194,15,194,11,"netInfo"],[194,22,194,18],[194,23,194,19,"isConnected"],[194,34,194,30],[194,36,194,32],[195,12,195,8,"EventLogger"],[195,36,195,19],[195,37,195,20,"debug"],[195,42,195,25],[195,43,195,26],[195,59,195,42],[195,61,195,44],[195,112,195,95],[195,113,195,96],[196,12,196,8],[197,12,197,8],[198,10,198,6],[200,10,200,6],[201,10,201,6],[201,14,201,12,"validSession"],[201,26,201,24],[201,35,201,33],[201,39,201,33,"ensureValidSession"],[201,65,201,51],[201,67,201,52],[201,68,201,53],[202,10,203,6],[202,14,203,10,"validSession"],[202,26,203,22],[202,28,203,24],[203,12,204,8,"EventLogger"],[203,36,204,19],[203,37,204,20,"debug"],[203,42,204,25],[203,43,204,26],[203,59,204,42],[203,61,204,44],[203,89,204,72],[203,91,204,74,"validSession"],[203,103,204,86],[203,104,204,87,"user"],[203,108,204,91],[203,109,204,92,"email"],[203,114,204,97],[203,115,204,98],[204,12,205,8,"EventLogger"],[204,36,205,19],[204,37,205,20,"debug"],[204,42,205,25],[204,43,205,26],[204,59,205,42],[204,61,205,44],[204,122,205,105],[204,123,205,106],[205,12,206,8],[206,12,207,8,"handleSignIn"],[206,24,207,20],[206,25,207,21,"validSession"],[206,37,207,33],[206,38,207,34],[206,39,207,35,"catch"],[206,44,207,40],[206,45,207,41,"error"],[206,50,207,46],[206,54,207,50],[207,14,208,10,"EventLogger"],[207,38,208,21],[207,39,208,22,"warn"],[207,43,208,26],[207,44,208,27],[207,60,208,43],[207,62,208,45],[207,113,208,96],[207,115,208,98,"error"],[207,120,208,103],[207,121,208,104],[208,12,209,8],[208,13,209,9],[208,14,209,10],[209,12,210,8,"EventLogger"],[209,36,210,19],[209,37,210,20,"debug"],[209,42,210,25],[209,43,210,26],[209,59,210,42],[209,61,210,44],[209,124,210,107],[209,125,210,108],[210,10,211,6],[210,11,211,7],[210,17,211,13],[211,12,212,8,"EventLogger"],[211,36,212,19],[211,37,212,20,"debug"],[211,42,212,25],[211,43,212,26],[211,59,212,42],[211,61,212,44],[211,112,212,95],[211,113,212,96],[212,12,213,8,"dispatch"],[212,20,213,16],[212,21,213,17,"authSlice"],[212,39,213,26],[212,40,213,27,"actions"],[212,47,213,34],[212,48,213,35,"signOutSuccess"],[212,62,213,49],[212,63,213,50],[212,64,213,51],[212,65,213,52],[214,12,215,8],[215,12,216,8],[215,16,216,8,"resetApiState"],[215,36,216,21],[215,38,216,22],[215,39,216,23],[216,10,217,6],[217,8,218,4],[217,9,218,5],[217,10,218,6],[217,17,218,13,"error"],[217,22,218,23],[217,24,218,25],[218,10,219,6],[219,10,220,6],[219,14,220,10,"error"],[219,19,220,15],[219,21,220,17,"message"],[219,28,220,24],[219,30,220,26,"includes"],[219,38,220,34],[219,39,220,35],[219,63,220,59],[219,64,220,60],[219,68,221,10,"error"],[219,73,221,15],[219,75,221,17,"message"],[219,82,221,24],[219,84,221,26,"includes"],[219,92,221,34],[219,93,221,35],[219,110,221,52],[219,111,221,53],[219,115,222,10,"error"],[219,120,222,15],[219,122,222,17,"name"],[219,126,222,21],[219,131,222,26],[219,145,222,40],[219,149,223,10,"error"],[219,154,223,15],[219,156,223,17,"name"],[219,160,223,21],[219,165,223,26],[219,190,223,51],[219,192,223,53],[220,12,224,8,"EventLogger"],[220,36,224,19],[220,37,224,20,"debug"],[220,42,224,25],[220,43,224,26],[220,59,224,42],[220,61,224,44],[220,103,224,86],[220,104,224,87],[221,12,225,8],[222,12,226,8],[223,10,227,6],[224,10,229,6,"EventLogger"],[224,34,229,17],[224,35,229,18,"warn"],[224,39,229,22],[224,40,229,23],[224,56,229,39],[224,58,229,41],[224,84,229,67],[224,86,229,69,"error"],[224,91,229,74],[224,93,229,76,"message"],[224,100,229,83],[224,104,229,87],[224,119,229,102],[224,120,229,103],[225,10,230,6],[226,10,231,6,"dispatch"],[226,18,231,14],[226,19,231,15,"authSlice"],[226,37,231,24],[226,38,231,25,"actions"],[226,45,231,32],[226,46,231,33,"signOutSuccess"],[226,60,231,47],[226,61,231,48],[226,62,231,49],[226,63,231,50],[228,10,233,6],[229,10,234,6],[229,14,234,6,"resetApiState"],[229,34,234,19],[229,36,234,20],[229,37,234,21],[230,8,235,4],[231,6,236,2],[231,7,236,3],[232,6,236,3],[232,22,188,8,"checkSession"],[232,34,188,20,"checkSession"],[232,35,188,20],[233,8,188,20],[233,15,188,20,"_ref4"],[233,20,188,20],[233,21,188,20,"apply"],[233,26,188,20],[233,33,188,20,"arguments"],[233,42,188,20],[234,6,188,20],[235,4,188,20],[235,7,236,3],[236,4,238,2],[236,24,238,9],[236,28,238,9,"_jsxRuntime"],[236,39,238,9],[236,40,238,9,"jsx"],[236,43,238,9],[236,45,238,9,"_jsxRuntime"],[236,56,238,9],[236,57,238,9,"Fragment"],[236,65,238,9],[237,6,238,9,"children"],[237,14,238,9],[237,16,238,12,"children"],[238,4,238,20],[238,5,238,23],[238,6,238,24],[239,2,239,0],[239,3,239,1],[239,4,239,2],[240,0,239,3],[240,3]],"functionMap":{"names":["<global>","React.memo$argument_0","useSelector$argument_0","useEffect$argument_0","setTimeout$argument_0","checkSession._catch$argument_0","supabase.auth.onAuthStateChange$argument_0","handleSignIn._catch$argument_0","<anonymous>","handleSignIn","checkSession"],"mappings":"AAA;mFCW;gCCE,gCD;YEI;iCCQ;2BCC;ODE;KDC;uDGK;wCCM;aDE;sCCoB;WDE;OHK;WKM;KLG;GFC;uBQE;GRwG;uBSE;yCHmB;SGE;GT2B;CDG"}},"type":"js/module"}]}