{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@reduxjs/toolkit","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":80,"index":80}}],"key":"54oW2xbJyHE290wIe7uf9enEy7w=","exportNames":["*"]}},{"name":"../../services/offline/OfflineQueue","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":151},"end":{"line":3,"column":84,"index":235}}],"key":"VKX64fMlJtJi8U30CMLuMlZnKHQ=","exportNames":["*"]}},{"name":"../../services/offline/SyncManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":237},"end":{"line":4,"column":92,"index":329}}],"key":"Vx4yphZskdVV1RP6j8VjvWDxHZg=","exportNames":["*"]}},{"name":"../../services/analytics/AnalyticsService","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":331},"end":{"line":5,"column":67,"index":398}}],"key":"NNKdl+byoCYyyYGP/N603C3dfUo=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.updateSyncProgress = exports.updateSettings = exports.updateQueueStatistics = exports.updateNetworkState = exports.toggleAutoSync = exports.setSyncStatus = exports.setLastSyncTime = exports.selectSyncState = exports.selectSyncProgress = exports.selectQueueStats = exports.selectOptimisticUpdates = exports.selectOfflineSettings = exports.selectNetworkState = exports.selectIsSyncing = exports.selectIsOnline = exports.selectIsInitialized = exports.selectFailedOperations = exports.selectConnectionQuality = exports.retryFailedOperations = exports.resetOfflineState = exports.removeOptimisticUpdate = exports.removeFailedOperation = exports.initializeOfflineSystem = exports.forceSync = exports.enqueueOperation = exports.default = exports.clearSyncErrors = exports.clearOptimisticUpdates = exports.clearFailedOperations = exports.clearCompletedOperations = exports.addSyncError = exports.addOptimisticUpdate = exports.addFailedOperation = undefined;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _toolkit = require(_dependencyMap[2]);\n  var _OfflineQueue = require(_dependencyMap[3]);\n  var _SyncManager = require(_dependencyMap[4]);\n  var _AnalyticsService = require(_dependencyMap[5]);\n  /**\r\n   * Network connection state\r\n   */\n\n  /**\r\n   * Queue statistics\r\n   */\n\n  /**\r\n   * Sync state\r\n   */\n\n  /**\r\n   * Failed operation for retry tracking\r\n   */\n\n  /**\r\n   * Complete offline slice state\r\n   */\n\n  /**\r\n   * Initial state\r\n   */\n  var initialState = {\n    network: {\n      isOnline: false,\n      connectionType: 'unknown',\n      isInternetReachable: null,\n      lastConnectedTime: null,\n      connectionQuality: 'offline'\n    },\n    queue: {\n      total: 0,\n      pending: 0,\n      processing: 0,\n      completed: 0,\n      failed: 0,\n      deadLetter: 0\n    },\n    sync: {\n      isSyncing: false,\n      progress: {\n        total: 0,\n        completed: 0,\n        failed: 0,\n        inProgress: false\n      },\n      lastSyncTime: null,\n      nextSyncTime: null,\n      syncErrors: [],\n      autoSyncEnabled: true\n    },\n    failedOperations: [],\n    optimisticUpdates: {},\n    settings: {\n      enableOptimisticUpdates: true,\n      maxRetryAttempts: 3,\n      syncInterval: 30000,\n      // 30 seconds\n      enableBackgroundSync: true\n    },\n    isInitialized: false\n  };\n\n  /**\r\n   * Async thunk to initialize offline system\r\n   */\n  var initializeOfflineSystem = exports.initializeOfflineSystem = (0, _toolkit.createAsyncThunk)('offline/initialize', /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* (_, _ref) {\n      var dispatch = _ref.dispatch;\n      try {\n        _AnalyticsService.logger.info('OfflineSlice: Initializing offline system');\n\n        // Get initial network state\n        var networkInfo = _SyncManager.syncManager.getNetworkInfo();\n        if (networkInfo) {\n          dispatch(updateNetworkState(networkInfo));\n        }\n\n        // Get initial queue stats\n        var queueStats = _OfflineQueue.offlineQueue.getQueueStats();\n        dispatch(updateQueueStatistics(queueStats));\n\n        // Get initial sync state\n        var syncProgress = _SyncManager.syncManager.getSyncProgress();\n        dispatch(updateSyncProgress(syncProgress));\n        _AnalyticsService.logger.info('OfflineSlice: Offline system initialized');\n        return true;\n      } catch (error) {\n        _AnalyticsService.logger.error('OfflineSlice: Failed to initialize offline system', {\n          error\n        });\n        throw error;\n      }\n    });\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n\n  /**\r\n   * Async thunk to enqueue operation\r\n   */\n  var enqueueOperation = exports.enqueueOperation = (0, _toolkit.createAsyncThunk)('offline/enqueue', /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2.default)(function* (operation, _ref3) {\n      var dispatch = _ref3.dispatch;\n      try {\n        var operationId = yield _OfflineQueue.offlineQueue.enqueue({\n          type: operation.type,\n          payload: operation.payload,\n          priority: operation.priority || 'normal',\n          maxRetries: operation.maxRetries || 3\n        });\n\n        // Update queue statistics\n        var queueStats = _OfflineQueue.offlineQueue.getQueueStats();\n        dispatch(updateQueueStatistics(queueStats));\n        _AnalyticsService.logger.info('OfflineSlice: Operation enqueued', {\n          operationId,\n          type: operation.type\n        });\n        return {\n          operationId,\n          ...operation\n        };\n      } catch (error) {\n        _AnalyticsService.logger.error('OfflineSlice: Failed to enqueue operation', {\n          type: operation.type,\n          error\n        });\n        throw error;\n      }\n    });\n    return function (_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n\n  /**\r\n   * Async thunk to force sync\r\n   */\n  var forceSync = exports.forceSync = (0, _toolkit.createAsyncThunk)('offline/forceSync', /*#__PURE__*/function () {\n    var _ref6 = (0, _asyncToGenerator2.default)(function* (_, _ref5) {\n      var dispatch = _ref5.dispatch;\n      try {\n        _AnalyticsService.logger.info('OfflineSlice: Force sync requested');\n        yield _SyncManager.syncManager.forceSync();\n        return true;\n      } catch (error) {\n        _AnalyticsService.logger.error('OfflineSlice: Force sync failed', {\n          error\n        });\n        throw error;\n      }\n    });\n    return function (_x5, _x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }());\n\n  /**\r\n   * Async thunk to retry failed operations\r\n   */\n  var retryFailedOperations = exports.retryFailedOperations = (0, _toolkit.createAsyncThunk)('offline/retryFailed', /*#__PURE__*/function () {\n    var _ref8 = (0, _asyncToGenerator2.default)(function* (operationIds, _ref7) {\n      var dispatch = _ref7.dispatch;\n      try {\n        _AnalyticsService.logger.info('OfflineSlice: Retrying failed operations', {\n          operationIds: operationIds?.length || 'all'\n        });\n        var retryCount = 0;\n        if (operationIds && operationIds.length > 0) {\n          // Retry specific operations\n          for (var operationId of operationIds) {\n            var success = yield _OfflineQueue.offlineQueue.requeueFromDeadLetter(operationId);\n            if (success) {\n              retryCount++;\n            }\n          }\n        } else {\n          // Retry all dead letter operations\n          var deadLetterOperations = yield _OfflineQueue.offlineQueue.getDeadLetterQueue();\n          for (var operation of deadLetterOperations) {\n            var _success = yield _OfflineQueue.offlineQueue.requeueFromDeadLetter(operation.id);\n            if (_success) {\n              retryCount++;\n            }\n          }\n        }\n\n        // Update queue stats\n        var queueStats = _OfflineQueue.offlineQueue.getQueueStats();\n        dispatch(updateQueueStatistics(queueStats));\n\n        // Trigger sync if we have requeued operations\n        if (retryCount > 0) {\n          yield _SyncManager.syncManager.forceSync();\n        }\n        _AnalyticsService.logger.info('OfflineSlice: Retried failed operations', {\n          retryCount\n        });\n        return retryCount;\n      } catch (error) {\n        _AnalyticsService.logger.error('OfflineSlice: Failed to retry operations', {\n          error\n        });\n        throw error;\n      }\n    });\n    return function (_x7, _x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }());\n\n  /**\r\n   * Async thunk to clear completed operations\r\n   */\n  var clearCompletedOperations = exports.clearCompletedOperations = (0, _toolkit.createAsyncThunk)('offline/clearCompleted', /*#__PURE__*/function () {\n    var _ref0 = (0, _asyncToGenerator2.default)(function* (_, _ref9) {\n      var dispatch = _ref9.dispatch;\n      try {\n        _AnalyticsService.logger.info('OfflineSlice: Clearing completed operations');\n        var clearedCount = yield _OfflineQueue.offlineQueue.clearCompleted();\n\n        // Update queue stats\n        var queueStats = _OfflineQueue.offlineQueue.getQueueStats();\n        dispatch(updateQueueStatistics(queueStats));\n        _AnalyticsService.logger.info('OfflineSlice: Cleared completed operations', {\n          count: clearedCount\n        });\n        return clearedCount;\n      } catch (error) {\n        _AnalyticsService.logger.error('OfflineSlice: Failed to clear completed operations', {\n          error\n        });\n        throw error;\n      }\n    });\n    return function (_x9, _x0) {\n      return _ref0.apply(this, arguments);\n    };\n  }());\n\n  /**\r\n   * Offline slice\r\n   */\n  var offlineSlice = (0, _toolkit.createSlice)({\n    name: 'offline',\n    initialState,\n    reducers: {\n      /**\r\n       * Update network state\r\n       */\n      updateNetworkState: (state, action) => {\n        var _action$payload = action.payload,\n          isConnected = _action$payload.isConnected,\n          type = _action$payload.type,\n          isInternetReachable = _action$payload.isInternetReachable;\n\n        // Track when we went online/offline\n        if (isConnected && !state.network.isOnline) {\n          state.network.lastConnectedTime = Date.now();\n        }\n        state.network.isOnline = isConnected;\n        state.network.connectionType = type;\n        state.network.isInternetReachable = isInternetReachable;\n\n        // Determine connection quality\n        if (!isConnected || isInternetReachable === false) {\n          state.network.connectionQuality = 'offline';\n        } else {\n          switch (type) {\n            case 'wifi':\n            case 'ethernet':\n              state.network.connectionQuality = 'excellent';\n              break;\n            case 'cellular':\n              state.network.connectionQuality = 'good';\n              break;\n            case 'bluetooth':\n            case 'vpn':\n              state.network.connectionQuality = 'fair';\n              break;\n            default:\n              state.network.connectionQuality = 'poor';\n          }\n        }\n      },\n      /**\r\n       * Update queue statistics\r\n       */\n      updateQueueStatistics: (state, action) => {\n        state.queue = action.payload;\n      },\n      /**\r\n       * Update sync progress\r\n       */\n      updateSyncProgress: (state, action) => {\n        state.sync.progress = action.payload;\n        state.sync.isSyncing = action.payload.inProgress;\n      },\n      /**\r\n       * Set sync status\r\n       */\n      setSyncStatus: (state, action) => {\n        state.sync.isSyncing = action.payload;\n        if (!action.payload) {\n          // Reset progress when sync completes\n          state.sync.progress = initialState.sync.progress;\n        }\n      },\n      /**\r\n       * Set last sync time\r\n       */\n      setLastSyncTime: (state, action) => {\n        state.sync.lastSyncTime = action.payload;\n      },\n      /**\r\n       * Add sync error\r\n       */\n      addSyncError: (state, action) => {\n        state.sync.syncErrors.push(action.payload);\n        // Keep only last 10 errors\n        if (state.sync.syncErrors.length > 10) {\n          state.sync.syncErrors.shift();\n        }\n      },\n      /**\r\n       * Clear sync errors\r\n       */\n      clearSyncErrors: state => {\n        state.sync.syncErrors = [];\n      },\n      /**\r\n       * Add failed operation\r\n       */\n      addFailedOperation: (state, action) => {\n        var existingIndex = state.failedOperations.findIndex(op => op.id === action.payload.id);\n        if (existingIndex >= 0) {\n          state.failedOperations[existingIndex] = action.payload;\n        } else {\n          state.failedOperations.push(action.payload);\n        }\n\n        // Keep only last 50 failed operations\n        if (state.failedOperations.length > 50) {\n          state.failedOperations.shift();\n        }\n      },\n      /**\r\n       * Remove failed operation\r\n       */\n      removeFailedOperation: (state, action) => {\n        state.failedOperations = state.failedOperations.filter(op => op.id !== action.payload);\n      },\n      /**\r\n       * Clear failed operations\r\n       */\n      clearFailedOperations: state => {\n        state.failedOperations = [];\n      },\n      /**\r\n       * Add optimistic update\r\n       */\n      addOptimisticUpdate: (state, action) => {\n        if (state.settings.enableOptimisticUpdates) {\n          state.optimisticUpdates[action.payload.id] = action.payload.data;\n        }\n      },\n      /**\r\n       * Remove optimistic update\r\n       */\n      removeOptimisticUpdate: (state, action) => {\n        delete state.optimisticUpdates[action.payload];\n      },\n      /**\r\n       * Clear all optimistic updates\r\n       */\n      clearOptimisticUpdates: state => {\n        state.optimisticUpdates = {};\n      },\n      /**\r\n       * Update settings\r\n       */\n      updateSettings: (state, action) => {\n        state.settings = {\n          ...state.settings,\n          ...action.payload\n        };\n      },\n      /**\r\n       * Toggle auto sync\r\n       */\n      toggleAutoSync: state => {\n        state.sync.autoSyncEnabled = !state.sync.autoSyncEnabled;\n      },\n      /**\r\n       * Reset offline state\r\n       */\n      resetOfflineState: state => {\n        return {\n          ...initialState,\n          isInitialized: true\n        };\n      }\n    },\n    extraReducers: builder => {\n      builder\n      // Initialize offline system\n      .addCase(initializeOfflineSystem.fulfilled, state => {\n        state.isInitialized = true;\n      }).addCase(initializeOfflineSystem.rejected, (state, action) => {\n        state.isInitialized = false;\n        if (action.error.message) {\n          state.sync.syncErrors.push(`Initialization failed: ${action.error.message}`);\n        }\n      })\n\n      // Enqueue operation\n      .addCase(enqueueOperation.fulfilled, (state, action) => {\n        _AnalyticsService.logger.info('OfflineSlice: Operation enqueued successfully', {\n          operationId: action.payload.operationId\n        });\n      }).addCase(enqueueOperation.rejected, (state, action) => {\n        if (action.error.message) {\n          state.sync.syncErrors.push(`Failed to enqueue operation: ${action.error.message}`);\n        }\n      })\n\n      // Force sync\n      .addCase(forceSync.pending, state => {\n        state.sync.isSyncing = true;\n      }).addCase(forceSync.fulfilled, state => {\n        state.sync.lastSyncTime = Date.now();\n      }).addCase(forceSync.rejected, (state, action) => {\n        state.sync.isSyncing = false;\n        if (action.error.message) {\n          state.sync.syncErrors.push(`Force sync failed: ${action.error.message}`);\n        }\n      })\n\n      // Retry failed operations\n      .addCase(retryFailedOperations.fulfilled, (state, action) => {\n        _AnalyticsService.logger.info('OfflineSlice: Successfully retried operations', {\n          count: action.payload\n        });\n      }).addCase(retryFailedOperations.rejected, (state, action) => {\n        if (action.error.message) {\n          state.sync.syncErrors.push(`Failed to retry operations: ${action.error.message}`);\n        }\n      })\n\n      // Clear completed operations\n      .addCase(clearCompletedOperations.fulfilled, (state, action) => {\n        _AnalyticsService.logger.info('OfflineSlice: Successfully cleared completed operations', {\n          count: action.payload\n        });\n      }).addCase(clearCompletedOperations.rejected, (state, action) => {\n        if (action.error.message) {\n          state.sync.syncErrors.push(`Failed to clear completed operations: ${action.error.message}`);\n        }\n      });\n    }\n  });\n\n  // Export actions\n  var _offlineSlice$actions = offlineSlice.actions,\n    updateNetworkState = exports.updateNetworkState = _offlineSlice$actions.updateNetworkState,\n    updateQueueStatistics = exports.updateQueueStatistics = _offlineSlice$actions.updateQueueStatistics,\n    updateSyncProgress = exports.updateSyncProgress = _offlineSlice$actions.updateSyncProgress,\n    setSyncStatus = exports.setSyncStatus = _offlineSlice$actions.setSyncStatus,\n    setLastSyncTime = exports.setLastSyncTime = _offlineSlice$actions.setLastSyncTime,\n    addSyncError = exports.addSyncError = _offlineSlice$actions.addSyncError,\n    clearSyncErrors = exports.clearSyncErrors = _offlineSlice$actions.clearSyncErrors,\n    addFailedOperation = exports.addFailedOperation = _offlineSlice$actions.addFailedOperation,\n    removeFailedOperation = exports.removeFailedOperation = _offlineSlice$actions.removeFailedOperation,\n    clearFailedOperations = exports.clearFailedOperations = _offlineSlice$actions.clearFailedOperations,\n    addOptimisticUpdate = exports.addOptimisticUpdate = _offlineSlice$actions.addOptimisticUpdate,\n    removeOptimisticUpdate = exports.removeOptimisticUpdate = _offlineSlice$actions.removeOptimisticUpdate,\n    clearOptimisticUpdates = exports.clearOptimisticUpdates = _offlineSlice$actions.clearOptimisticUpdates,\n    updateSettings = exports.updateSettings = _offlineSlice$actions.updateSettings,\n    toggleAutoSync = exports.toggleAutoSync = _offlineSlice$actions.toggleAutoSync,\n    resetOfflineState = exports.resetOfflineState = _offlineSlice$actions.resetOfflineState;\n\n  // Selectors\n  var selectNetworkState = state => state.offline.network;\n  exports.selectNetworkState = selectNetworkState;\n  var selectIsOnline = state => state.offline.network.isOnline;\n  exports.selectIsOnline = selectIsOnline;\n  var selectConnectionQuality = state => state.offline.network.connectionQuality;\n  exports.selectConnectionQuality = selectConnectionQuality;\n  var selectQueueStats = state => state.offline.queue;\n  exports.selectQueueStats = selectQueueStats;\n  var selectSyncState = state => state.offline.sync;\n  exports.selectSyncState = selectSyncState;\n  var selectIsSyncing = state => state.offline.sync.isSyncing;\n  exports.selectIsSyncing = selectIsSyncing;\n  var selectSyncProgress = state => state.offline.sync.progress;\n  exports.selectSyncProgress = selectSyncProgress;\n  var selectFailedOperations = state => state.offline.failedOperations;\n  exports.selectFailedOperations = selectFailedOperations;\n  var selectOptimisticUpdates = state => state.offline.optimisticUpdates;\n  exports.selectOptimisticUpdates = selectOptimisticUpdates;\n  var selectOfflineSettings = state => state.offline.settings;\n  exports.selectOfflineSettings = selectOfflineSettings;\n  var selectIsInitialized = state => state.offline.isInitialized;\n\n  // Export reducer\n  exports.selectIsInitialized = selectIsInitialized;\n  var _default = exports.default = offlineSlice.reducer;\n});","lineCount":522,"map":[[8,2,1,0],[8,6,1,0,"_toolkit"],[8,14,1,0],[8,17,1,0,"require"],[8,24,1,0],[8,25,1,0,"_dependencyMap"],[8,39,1,0],[9,2,3,0],[9,6,3,0,"_OfflineQueue"],[9,19,3,0],[9,22,3,0,"require"],[9,29,3,0],[9,30,3,0,"_dependencyMap"],[9,44,3,0],[10,2,4,0],[10,6,4,0,"_SyncManager"],[10,18,4,0],[10,21,4,0,"require"],[10,28,4,0],[10,29,4,0,"_dependencyMap"],[10,43,4,0],[11,2,5,0],[11,6,5,0,"_AnalyticsService"],[11,23,5,0],[11,26,5,0,"require"],[11,33,5,0],[11,34,5,0,"_dependencyMap"],[11,48,5,0],[12,2,7,0],[13,0,8,0],[14,0,9,0],[16,2,18,0],[17,0,19,0],[18,0,20,0],[20,2,30,0],[21,0,31,0],[22,0,32,0],[24,2,42,0],[25,0,43,0],[26,0,44,0],[28,2,54,0],[29,0,55,0],[30,0,56,0],[32,2,72,0],[33,0,73,0],[34,0,74,0],[35,2,75,0],[35,6,75,6,"initialState"],[35,18,75,32],[35,21,75,35],[36,4,76,2,"network"],[36,11,76,9],[36,13,76,11],[37,6,77,4,"isOnline"],[37,14,77,12],[37,16,77,14],[37,21,77,19],[38,6,78,4,"connectionType"],[38,20,78,18],[38,22,78,20],[38,31,78,29],[39,6,79,4,"isInternetReachable"],[39,25,79,23],[39,27,79,25],[39,31,79,29],[40,6,80,4,"lastConnectedTime"],[40,23,80,21],[40,25,80,23],[40,29,80,27],[41,6,81,4,"connectionQuality"],[41,23,81,21],[41,25,81,23],[42,4,82,2],[42,5,82,3],[43,4,83,2,"queue"],[43,9,83,7],[43,11,83,9],[44,6,84,4,"total"],[44,11,84,9],[44,13,84,11],[44,14,84,12],[45,6,85,4,"pending"],[45,13,85,11],[45,15,85,13],[45,16,85,14],[46,6,86,4,"processing"],[46,16,86,14],[46,18,86,16],[46,19,86,17],[47,6,87,4,"completed"],[47,15,87,13],[47,17,87,15],[47,18,87,16],[48,6,88,4,"failed"],[48,12,88,10],[48,14,88,12],[48,15,88,13],[49,6,89,4,"deadLetter"],[49,16,89,14],[49,18,89,16],[50,4,90,2],[50,5,90,3],[51,4,91,2,"sync"],[51,8,91,6],[51,10,91,8],[52,6,92,4,"isSyncing"],[52,15,92,13],[52,17,92,15],[52,22,92,20],[53,6,93,4,"progress"],[53,14,93,12],[53,16,93,14],[54,8,94,6,"total"],[54,13,94,11],[54,15,94,13],[54,16,94,14],[55,8,95,6,"completed"],[55,17,95,15],[55,19,95,17],[55,20,95,18],[56,8,96,6,"failed"],[56,14,96,12],[56,16,96,14],[56,17,96,15],[57,8,97,6,"inProgress"],[57,18,97,16],[57,20,97,18],[58,6,98,4],[58,7,98,5],[59,6,99,4,"lastSyncTime"],[59,18,99,16],[59,20,99,18],[59,24,99,22],[60,6,100,4,"nextSyncTime"],[60,18,100,16],[60,20,100,18],[60,24,100,22],[61,6,101,4,"syncErrors"],[61,16,101,14],[61,18,101,16],[61,20,101,18],[62,6,102,4,"autoSyncEnabled"],[62,21,102,19],[62,23,102,21],[63,4,103,2],[63,5,103,3],[64,4,104,2,"failedOperations"],[64,20,104,18],[64,22,104,20],[64,24,104,22],[65,4,105,2,"optimisticUpdates"],[65,21,105,19],[65,23,105,21],[65,24,105,22],[65,25,105,23],[66,4,106,2,"settings"],[66,12,106,10],[66,14,106,12],[67,6,107,4,"enableOptimisticUpdates"],[67,29,107,27],[67,31,107,29],[67,35,107,33],[68,6,108,4,"maxRetryAttempts"],[68,22,108,20],[68,24,108,22],[68,25,108,23],[69,6,109,4,"syncInterval"],[69,18,109,16],[69,20,109,18],[69,25,109,23],[70,6,109,25],[71,6,110,4,"enableBackgroundSync"],[71,26,110,24],[71,28,110,26],[72,4,111,2],[72,5,111,3],[73,4,112,2,"isInitialized"],[73,17,112,15],[73,19,112,17],[74,2,113,0],[74,3,113,1],[76,2,115,0],[77,0,116,0],[78,0,117,0],[79,2,118,7],[79,6,118,13,"initializeOfflineSystem"],[79,29,118,36],[79,32,118,36,"exports"],[79,39,118,36],[79,40,118,36,"initializeOfflineSystem"],[79,63,118,36],[79,66,118,39],[79,70,118,39,"createAsyncThunk"],[79,95,118,55],[79,97,119,2],[79,117,119,22],[80,4,119,22],[80,8,119,22,"_ref2"],[80,13,119,22],[80,20,119,22,"_asyncToGenerator2"],[80,38,119,22],[80,39,119,22,"default"],[80,46,119,22],[80,48,120,2],[80,59,120,9,"_"],[80,60,120,10],[80,62,120,10,"_ref"],[80,66,120,10],[80,68,120,29],[81,6,120,29],[81,10,120,14,"dispatch"],[81,18,120,22],[81,21,120,22,"_ref"],[81,25,120,22],[81,26,120,14,"dispatch"],[81,34,120,22],[82,6,121,4],[82,10,121,8],[83,8,122,6,"logger"],[83,32,122,12],[83,33,122,13,"info"],[83,37,122,17],[83,38,122,18],[83,81,122,61],[83,82,122,62],[85,8,124,6],[86,8,125,6],[86,12,125,12,"networkInfo"],[86,23,125,23],[86,26,125,26,"syncManager"],[86,50,125,37],[86,51,125,38,"getNetworkInfo"],[86,65,125,52],[86,66,125,53],[86,67,125,54],[87,8,126,6],[87,12,126,10,"networkInfo"],[87,23,126,21],[87,25,126,23],[88,10,127,8,"dispatch"],[88,18,127,16],[88,19,127,17,"updateNetworkState"],[88,37,127,35],[88,38,127,36,"networkInfo"],[88,49,127,47],[88,50,127,48],[88,51,127,49],[89,8,128,6],[91,8,130,6],[92,8,131,6],[92,12,131,12,"queueStats"],[92,22,131,22],[92,25,131,25,"offlineQueue"],[92,51,131,37],[92,52,131,38,"getQueueStats"],[92,65,131,51],[92,66,131,52],[92,67,131,53],[93,8,132,6,"dispatch"],[93,16,132,14],[93,17,132,15,"updateQueueStatistics"],[93,38,132,36],[93,39,132,37,"queueStats"],[93,49,132,47],[93,50,132,48],[93,51,132,49],[95,8,134,6],[96,8,135,6],[96,12,135,12,"syncProgress"],[96,24,135,24],[96,27,135,27,"syncManager"],[96,51,135,38],[96,52,135,39,"getSyncProgress"],[96,67,135,54],[96,68,135,55],[96,69,135,56],[97,8,136,6,"dispatch"],[97,16,136,14],[97,17,136,15,"updateSyncProgress"],[97,35,136,33],[97,36,136,34,"syncProgress"],[97,48,136,46],[97,49,136,47],[97,50,136,48],[98,8,138,6,"logger"],[98,32,138,12],[98,33,138,13,"info"],[98,37,138,17],[98,38,138,18],[98,80,138,60],[98,81,138,61],[99,8,139,6],[99,15,139,13],[99,19,139,17],[100,6,140,4],[100,7,140,5],[100,8,140,6],[100,15,140,13,"error"],[100,20,140,18],[100,22,140,20],[101,8,141,6,"logger"],[101,32,141,12],[101,33,141,13,"error"],[101,38,141,18],[101,39,141,19],[101,90,141,70],[101,92,141,72],[102,10,141,74,"error"],[103,8,141,80],[103,9,141,81],[103,10,141,82],[104,8,142,6],[104,14,142,12,"error"],[104,19,142,17],[105,6,143,4],[106,4,144,2],[106,5,144,3],[107,4,144,3],[107,21,144,3,"_x"],[107,23,144,3],[107,25,144,3,"_x2"],[107,28,144,3],[108,6,144,3],[108,13,144,3,"_ref2"],[108,18,144,3],[108,19,144,3,"apply"],[108,24,144,3],[108,31,144,3,"arguments"],[108,40,144,3],[109,4,144,3],[110,2,144,3],[110,5,145,0],[110,6,145,1],[112,2,147,0],[113,0,148,0],[114,0,149,0],[115,2,150,7],[115,6,150,13,"enqueueOperation"],[115,22,150,29],[115,25,150,29,"exports"],[115,32,150,29],[115,33,150,29,"enqueueOperation"],[115,49,150,29],[115,52,150,32],[115,56,150,32,"createAsyncThunk"],[115,81,150,48],[115,83,151,2],[115,100,151,19],[116,4,151,19],[116,8,151,19,"_ref4"],[116,13,151,19],[116,20,151,19,"_asyncToGenerator2"],[116,38,151,19],[116,39,151,19,"default"],[116,46,151,19],[116,48,152,2],[116,59,152,9,"operation"],[116,68,157,3],[116,70,157,3,"_ref3"],[116,75,157,3],[116,77,157,22],[117,6,157,22],[117,10,157,7,"dispatch"],[117,18,157,15],[117,21,157,15,"_ref3"],[117,26,157,15],[117,27,157,7,"dispatch"],[117,35,157,15],[118,6,158,4],[118,10,158,8],[119,8,159,6],[119,12,159,12,"operationId"],[119,23,159,23],[119,32,159,32,"offlineQueue"],[119,58,159,44],[119,59,159,45,"enqueue"],[119,66,159,52],[119,67,159,53],[120,10,160,8,"type"],[120,14,160,12],[120,16,160,14,"operation"],[120,25,160,23],[120,26,160,24,"type"],[120,30,160,28],[121,10,161,8,"payload"],[121,17,161,15],[121,19,161,17,"operation"],[121,28,161,26],[121,29,161,27,"payload"],[121,36,161,34],[122,10,162,8,"priority"],[122,18,162,16],[122,20,162,18,"operation"],[122,29,162,27],[122,30,162,28,"priority"],[122,38,162,36],[122,42,162,40],[122,50,162,48],[123,10,163,8,"maxRetries"],[123,20,163,18],[123,22,163,20,"operation"],[123,31,163,29],[123,32,163,30,"maxRetries"],[123,42,163,40],[123,46,163,44],[124,8,164,6],[124,9,164,7],[124,10,164,8],[126,8,166,6],[127,8,167,6],[127,12,167,12,"queueStats"],[127,22,167,22],[127,25,167,25,"offlineQueue"],[127,51,167,37],[127,52,167,38,"getQueueStats"],[127,65,167,51],[127,66,167,52],[127,67,167,53],[128,8,168,6,"dispatch"],[128,16,168,14],[128,17,168,15,"updateQueueStatistics"],[128,38,168,36],[128,39,168,37,"queueStats"],[128,49,168,47],[128,50,168,48],[128,51,168,49],[129,8,170,6,"logger"],[129,32,170,12],[129,33,170,13,"info"],[129,37,170,17],[129,38,170,18],[129,72,170,52],[129,74,170,54],[130,10,171,8,"operationId"],[130,21,171,19],[131,10,172,8,"type"],[131,14,172,12],[131,16,172,14,"operation"],[131,25,172,23],[131,26,172,24,"type"],[132,8,173,6],[132,9,173,7],[132,10,173,8],[133,8,175,6],[133,15,175,13],[134,10,175,15,"operationId"],[134,21,175,26],[135,10,175,28],[135,13,175,31,"operation"],[136,8,175,41],[136,9,175,42],[137,6,176,4],[137,7,176,5],[137,8,176,6],[137,15,176,13,"error"],[137,20,176,18],[137,22,176,20],[138,8,177,6,"logger"],[138,32,177,12],[138,33,177,13,"error"],[138,38,177,18],[138,39,177,19],[138,82,177,62],[138,84,177,64],[139,10,178,8,"type"],[139,14,178,12],[139,16,178,14,"operation"],[139,25,178,23],[139,26,178,24,"type"],[139,30,178,28],[140,10,179,8,"error"],[141,8,180,6],[141,9,180,7],[141,10,180,8],[142,8,181,6],[142,14,181,12,"error"],[142,19,181,17],[143,6,182,4],[144,4,183,2],[144,5,183,3],[145,4,183,3],[145,21,183,3,"_x3"],[145,24,183,3],[145,26,183,3,"_x4"],[145,29,183,3],[146,6,183,3],[146,13,183,3,"_ref4"],[146,18,183,3],[146,19,183,3,"apply"],[146,24,183,3],[146,31,183,3,"arguments"],[146,40,183,3],[147,4,183,3],[148,2,183,3],[148,5,184,0],[148,6,184,1],[150,2,186,0],[151,0,187,0],[152,0,188,0],[153,2,189,7],[153,6,189,13,"forceSync"],[153,15,189,22],[153,18,189,22,"exports"],[153,25,189,22],[153,26,189,22,"forceSync"],[153,35,189,22],[153,38,189,25],[153,42,189,25,"createAsyncThunk"],[153,67,189,41],[153,69,190,2],[153,88,190,21],[154,4,190,21],[154,8,190,21,"_ref6"],[154,13,190,21],[154,20,190,21,"_asyncToGenerator2"],[154,38,190,21],[154,39,190,21,"default"],[154,46,190,21],[154,48,191,2],[154,59,191,9,"_"],[154,60,191,10],[154,62,191,10,"_ref5"],[154,67,191,10],[154,69,191,29],[155,6,191,29],[155,10,191,14,"dispatch"],[155,18,191,22],[155,21,191,22,"_ref5"],[155,26,191,22],[155,27,191,14,"dispatch"],[155,35,191,22],[156,6,192,4],[156,10,192,8],[157,8,193,6,"logger"],[157,32,193,12],[157,33,193,13,"info"],[157,37,193,17],[157,38,193,18],[157,74,193,54],[157,75,193,55],[158,8,194,6],[158,14,194,12,"syncManager"],[158,38,194,23],[158,39,194,24,"forceSync"],[158,48,194,33],[158,49,194,34],[158,50,194,35],[159,8,195,6],[159,15,195,13],[159,19,195,17],[160,6,196,4],[160,7,196,5],[160,8,196,6],[160,15,196,13,"error"],[160,20,196,18],[160,22,196,20],[161,8,197,6,"logger"],[161,32,197,12],[161,33,197,13,"error"],[161,38,197,18],[161,39,197,19],[161,72,197,52],[161,74,197,54],[162,10,197,56,"error"],[163,8,197,62],[163,9,197,63],[163,10,197,64],[164,8,198,6],[164,14,198,12,"error"],[164,19,198,17],[165,6,199,4],[166,4,200,2],[166,5,200,3],[167,4,200,3],[167,21,200,3,"_x5"],[167,24,200,3],[167,26,200,3,"_x6"],[167,29,200,3],[168,6,200,3],[168,13,200,3,"_ref6"],[168,18,200,3],[168,19,200,3,"apply"],[168,24,200,3],[168,31,200,3,"arguments"],[168,40,200,3],[169,4,200,3],[170,2,200,3],[170,5,201,0],[170,6,201,1],[172,2,203,0],[173,0,204,0],[174,0,205,0],[175,2,206,7],[175,6,206,13,"retryFailedOperations"],[175,27,206,34],[175,30,206,34,"exports"],[175,37,206,34],[175,38,206,34,"retryFailedOperations"],[175,59,206,34],[175,62,206,37],[175,66,206,37,"createAsyncThunk"],[175,91,206,53],[175,93,207,2],[175,114,207,23],[176,4,207,23],[176,8,207,23,"_ref8"],[176,13,207,23],[176,20,207,23,"_asyncToGenerator2"],[176,38,207,23],[176,39,207,23,"default"],[176,46,207,23],[176,48,208,2],[176,59,208,9,"operationIds"],[176,71,208,32],[176,73,208,32,"_ref7"],[176,78,208,32],[176,80,208,51],[177,6,208,51],[177,10,208,36,"dispatch"],[177,18,208,44],[177,21,208,44,"_ref7"],[177,26,208,44],[177,27,208,36,"dispatch"],[177,35,208,44],[178,6,209,4],[178,10,209,8],[179,8,210,6,"logger"],[179,32,210,12],[179,33,210,13,"info"],[179,37,210,17],[179,38,210,18],[179,80,210,60],[179,82,210,62],[180,10,211,8,"operationIds"],[180,22,211,20],[180,24,211,22,"operationIds"],[180,36,211,34],[180,38,211,36,"length"],[180,44,211,42],[180,48,211,46],[181,8,212,6],[181,9,212,7],[181,10,212,8],[182,8,214,6],[182,12,214,10,"retryCount"],[182,22,214,20],[182,25,214,23],[182,26,214,24],[183,8,216,6],[183,12,216,10,"operationIds"],[183,24,216,22],[183,28,216,26,"operationIds"],[183,40,216,38],[183,41,216,39,"length"],[183,47,216,45],[183,50,216,48],[183,51,216,49],[183,53,216,51],[184,10,217,8],[185,10,218,8],[185,15,218,13],[185,19,218,19,"operationId"],[185,30,218,30],[185,34,218,34,"operationIds"],[185,46,218,46],[185,48,218,48],[186,12,219,10],[186,16,219,16,"success"],[186,23,219,23],[186,32,219,32,"offlineQueue"],[186,58,219,44],[186,59,219,45,"requeueFromDeadLetter"],[186,80,219,66],[186,81,219,67,"operationId"],[186,92,219,78],[186,93,219,79],[187,12,220,10],[187,16,220,14,"success"],[187,23,220,21],[187,25,220,23],[188,14,221,12,"retryCount"],[188,24,221,22],[188,26,221,24],[189,12,222,10],[190,10,223,8],[191,8,224,6],[191,9,224,7],[191,15,224,13],[192,10,225,8],[193,10,226,8],[193,14,226,14,"deadLetterOperations"],[193,34,226,34],[193,43,226,43,"offlineQueue"],[193,69,226,55],[193,70,226,56,"getDeadLetterQueue"],[193,88,226,74],[193,89,226,75],[193,90,226,76],[194,10,227,8],[194,15,227,13],[194,19,227,19,"operation"],[194,28,227,28],[194,32,227,32,"deadLetterOperations"],[194,52,227,52],[194,54,227,54],[195,12,228,10],[195,16,228,16,"success"],[195,24,228,23],[195,33,228,32,"offlineQueue"],[195,59,228,44],[195,60,228,45,"requeueFromDeadLetter"],[195,81,228,66],[195,82,228,67,"operation"],[195,91,228,76],[195,92,228,77,"id"],[195,94,228,79],[195,95,228,80],[196,12,229,10],[196,16,229,14,"success"],[196,24,229,21],[196,26,229,23],[197,14,230,12,"retryCount"],[197,24,230,22],[197,26,230,24],[198,12,231,10],[199,10,232,8],[200,8,233,6],[202,8,235,6],[203,8,236,6],[203,12,236,12,"queueStats"],[203,22,236,22],[203,25,236,25,"offlineQueue"],[203,51,236,37],[203,52,236,38,"getQueueStats"],[203,65,236,51],[203,66,236,52],[203,67,236,53],[204,8,237,6,"dispatch"],[204,16,237,14],[204,17,237,15,"updateQueueStatistics"],[204,38,237,36],[204,39,237,37,"queueStats"],[204,49,237,47],[204,50,237,48],[204,51,237,49],[206,8,239,6],[207,8,240,6],[207,12,240,10,"retryCount"],[207,22,240,20],[207,25,240,23],[207,26,240,24],[207,28,240,26],[208,10,241,8],[208,16,241,14,"syncManager"],[208,40,241,25],[208,41,241,26,"forceSync"],[208,50,241,35],[208,51,241,36],[208,52,241,37],[209,8,242,6],[210,8,244,6,"logger"],[210,32,244,12],[210,33,244,13,"info"],[210,37,244,17],[210,38,244,18],[210,79,244,59],[210,81,244,61],[211,10,244,63,"retryCount"],[212,8,244,74],[212,9,244,75],[212,10,244,76],[213,8,245,6],[213,15,245,13,"retryCount"],[213,25,245,23],[214,6,246,4],[214,7,246,5],[214,8,246,6],[214,15,246,13,"error"],[214,20,246,18],[214,22,246,20],[215,8,247,6,"logger"],[215,32,247,12],[215,33,247,13,"error"],[215,38,247,18],[215,39,247,19],[215,81,247,61],[215,83,247,63],[216,10,247,65,"error"],[217,8,247,71],[217,9,247,72],[217,10,247,73],[218,8,248,6],[218,14,248,12,"error"],[218,19,248,17],[219,6,249,4],[220,4,250,2],[220,5,250,3],[221,4,250,3],[221,21,250,3,"_x7"],[221,24,250,3],[221,26,250,3,"_x8"],[221,29,250,3],[222,6,250,3],[222,13,250,3,"_ref8"],[222,18,250,3],[222,19,250,3,"apply"],[222,24,250,3],[222,31,250,3,"arguments"],[222,40,250,3],[223,4,250,3],[224,2,250,3],[224,5,251,0],[224,6,251,1],[226,2,253,0],[227,0,254,0],[228,0,255,0],[229,2,256,7],[229,6,256,13,"clearCompletedOperations"],[229,30,256,37],[229,33,256,37,"exports"],[229,40,256,37],[229,41,256,37,"clearCompletedOperations"],[229,65,256,37],[229,68,256,40],[229,72,256,40,"createAsyncThunk"],[229,97,256,56],[229,99,257,2],[229,123,257,26],[230,4,257,26],[230,8,257,26,"_ref0"],[230,13,257,26],[230,20,257,26,"_asyncToGenerator2"],[230,38,257,26],[230,39,257,26,"default"],[230,46,257,26],[230,48,258,2],[230,59,258,9,"_"],[230,60,258,10],[230,62,258,10,"_ref9"],[230,67,258,10],[230,69,258,29],[231,6,258,29],[231,10,258,14,"dispatch"],[231,18,258,22],[231,21,258,22,"_ref9"],[231,26,258,22],[231,27,258,14,"dispatch"],[231,35,258,22],[232,6,259,4],[232,10,259,8],[233,8,260,6,"logger"],[233,32,260,12],[233,33,260,13,"info"],[233,37,260,17],[233,38,260,18],[233,83,260,63],[233,84,260,64],[234,8,261,6],[234,12,261,12,"clearedCount"],[234,24,261,24],[234,33,261,33,"offlineQueue"],[234,59,261,45],[234,60,261,46,"clearCompleted"],[234,74,261,60],[234,75,261,61],[234,76,261,62],[236,8,263,6],[237,8,264,6],[237,12,264,12,"queueStats"],[237,22,264,22],[237,25,264,25,"offlineQueue"],[237,51,264,37],[237,52,264,38,"getQueueStats"],[237,65,264,51],[237,66,264,52],[237,67,264,53],[238,8,265,6,"dispatch"],[238,16,265,14],[238,17,265,15,"updateQueueStatistics"],[238,38,265,36],[238,39,265,37,"queueStats"],[238,49,265,47],[238,50,265,48],[238,51,265,49],[239,8,267,6,"logger"],[239,32,267,12],[239,33,267,13,"info"],[239,37,267,17],[239,38,267,18],[239,82,267,62],[239,84,267,64],[240,10,267,66,"count"],[240,15,267,71],[240,17,267,73,"clearedCount"],[241,8,267,86],[241,9,267,87],[241,10,267,88],[242,8,268,6],[242,15,268,13,"clearedCount"],[242,27,268,25],[243,6,269,4],[243,7,269,5],[243,8,269,6],[243,15,269,13,"error"],[243,20,269,18],[243,22,269,20],[244,8,270,6,"logger"],[244,32,270,12],[244,33,270,13,"error"],[244,38,270,18],[244,39,270,19],[244,91,270,71],[244,93,270,73],[245,10,270,75,"error"],[246,8,270,81],[246,9,270,82],[246,10,270,83],[247,8,271,6],[247,14,271,12,"error"],[247,19,271,17],[248,6,272,4],[249,4,273,2],[249,5,273,3],[250,4,273,3],[250,21,273,3,"_x9"],[250,24,273,3],[250,26,273,3,"_x0"],[250,29,273,3],[251,6,273,3],[251,13,273,3,"_ref0"],[251,18,273,3],[251,19,273,3,"apply"],[251,24,273,3],[251,31,273,3,"arguments"],[251,40,273,3],[252,4,273,3],[253,2,273,3],[253,5,274,0],[253,6,274,1],[255,2,276,0],[256,0,277,0],[257,0,278,0],[258,2,279,0],[258,6,279,6,"offlineSlice"],[258,18,279,18],[258,21,279,21],[258,25,279,21,"createSlice"],[258,45,279,32],[258,47,279,33],[259,4,280,2,"name"],[259,8,280,6],[259,10,280,8],[259,19,280,17],[260,4,281,2,"initialState"],[260,16,281,14],[261,4,282,2,"reducers"],[261,12,282,10],[261,14,282,12],[262,6,283,4],[263,0,284,0],[264,0,285,0],[265,6,286,4,"updateNetworkState"],[265,24,286,22],[265,26,286,24,"updateNetworkState"],[265,27,286,25,"state"],[265,32,286,30],[265,34,286,32,"action"],[265,40,286,66],[265,45,286,71],[266,8,287,6],[266,12,287,6,"_action$payload"],[266,27,287,6],[266,30,287,57,"action"],[266,36,287,63],[266,37,287,64,"payload"],[266,44,287,71],[267,10,287,14,"isConnected"],[267,21,287,25],[267,24,287,25,"_action$payload"],[267,39,287,25],[267,40,287,14,"isConnected"],[267,51,287,25],[268,10,287,27,"type"],[268,14,287,31],[268,17,287,31,"_action$payload"],[268,32,287,31],[268,33,287,27,"type"],[268,37,287,31],[269,10,287,33,"isInternetReachable"],[269,29,287,52],[269,32,287,52,"_action$payload"],[269,47,287,52],[269,48,287,33,"isInternetReachable"],[269,67,287,52],[271,8,289,6],[272,8,290,6],[272,12,290,10,"isConnected"],[272,23,290,21],[272,27,290,25],[272,28,290,26,"state"],[272,33,290,31],[272,34,290,32,"network"],[272,41,290,39],[272,42,290,40,"isOnline"],[272,50,290,48],[272,52,290,50],[273,10,291,8,"state"],[273,15,291,13],[273,16,291,14,"network"],[273,23,291,21],[273,24,291,22,"lastConnectedTime"],[273,41,291,39],[273,44,291,42,"Date"],[273,48,291,46],[273,49,291,47,"now"],[273,52,291,50],[273,53,291,51],[273,54,291,52],[274,8,292,6],[275,8,294,6,"state"],[275,13,294,11],[275,14,294,12,"network"],[275,21,294,19],[275,22,294,20,"isOnline"],[275,30,294,28],[275,33,294,31,"isConnected"],[275,44,294,42],[276,8,295,6,"state"],[276,13,295,11],[276,14,295,12,"network"],[276,21,295,19],[276,22,295,20,"connectionType"],[276,36,295,34],[276,39,295,37,"type"],[276,43,295,41],[277,8,296,6,"state"],[277,13,296,11],[277,14,296,12,"network"],[277,21,296,19],[277,22,296,20,"isInternetReachable"],[277,41,296,39],[277,44,296,42,"isInternetReachable"],[277,63,296,61],[279,8,298,6],[280,8,299,6],[280,12,299,10],[280,13,299,11,"isConnected"],[280,24,299,22],[280,28,299,26,"isInternetReachable"],[280,47,299,45],[280,52,299,50],[280,57,299,55],[280,59,299,57],[281,10,300,8,"state"],[281,15,300,13],[281,16,300,14,"network"],[281,23,300,21],[281,24,300,22,"connectionQuality"],[281,41,300,39],[281,44,300,42],[281,53,300,51],[282,8,301,6],[282,9,301,7],[282,15,301,13],[283,10,302,8],[283,18,302,16,"type"],[283,22,302,20],[284,12,303,10],[284,17,303,15],[284,23,303,21],[285,12,304,10],[285,17,304,15],[285,27,304,25],[286,14,305,12,"state"],[286,19,305,17],[286,20,305,18,"network"],[286,27,305,25],[286,28,305,26,"connectionQuality"],[286,45,305,43],[286,48,305,46],[286,59,305,57],[287,14,306,12],[288,12,307,10],[288,17,307,15],[288,27,307,25],[289,14,308,12,"state"],[289,19,308,17],[289,20,308,18,"network"],[289,27,308,25],[289,28,308,26,"connectionQuality"],[289,45,308,43],[289,48,308,46],[289,54,308,52],[290,14,309,12],[291,12,310,10],[291,17,310,15],[291,28,310,26],[292,12,311,10],[292,17,311,15],[292,22,311,20],[293,14,312,12,"state"],[293,19,312,17],[293,20,312,18,"network"],[293,27,312,25],[293,28,312,26,"connectionQuality"],[293,45,312,43],[293,48,312,46],[293,54,312,52],[294,14,313,12],[295,12,314,10],[296,14,315,12,"state"],[296,19,315,17],[296,20,315,18,"network"],[296,27,315,25],[296,28,315,26,"connectionQuality"],[296,45,315,43],[296,48,315,46],[296,54,315,52],[297,10,316,8],[298,8,317,6],[299,6,318,4],[299,7,318,5],[300,6,320,4],[301,0,321,0],[302,0,322,0],[303,6,323,4,"updateQueueStatistics"],[303,27,323,25],[303,29,323,27,"updateQueueStatistics"],[303,30,323,28,"state"],[303,35,323,33],[303,37,323,35,"action"],[303,43,323,73],[303,48,323,78],[304,8,324,6,"state"],[304,13,324,11],[304,14,324,12,"queue"],[304,19,324,17],[304,22,324,20,"action"],[304,28,324,26],[304,29,324,27,"payload"],[304,36,324,34],[305,6,325,4],[305,7,325,5],[306,6,327,4],[307,0,328,0],[308,0,329,0],[309,6,330,4,"updateSyncProgress"],[309,24,330,22],[309,26,330,24,"updateSyncProgress"],[309,27,330,25,"state"],[309,32,330,30],[309,34,330,32,"action"],[309,40,330,67],[309,45,330,72],[310,8,331,6,"state"],[310,13,331,11],[310,14,331,12,"sync"],[310,18,331,16],[310,19,331,17,"progress"],[310,27,331,25],[310,30,331,28,"action"],[310,36,331,34],[310,37,331,35,"payload"],[310,44,331,42],[311,8,332,6,"state"],[311,13,332,11],[311,14,332,12,"sync"],[311,18,332,16],[311,19,332,17,"isSyncing"],[311,28,332,26],[311,31,332,29,"action"],[311,37,332,35],[311,38,332,36,"payload"],[311,45,332,43],[311,46,332,44,"inProgress"],[311,56,332,54],[312,6,333,4],[312,7,333,5],[313,6,335,4],[314,0,336,0],[315,0,337,0],[316,6,338,4,"setSyncStatus"],[316,19,338,17],[316,21,338,19,"setSyncStatus"],[316,22,338,20,"state"],[316,27,338,25],[316,29,338,27,"action"],[316,35,338,57],[316,40,338,62],[317,8,339,6,"state"],[317,13,339,11],[317,14,339,12,"sync"],[317,18,339,16],[317,19,339,17,"isSyncing"],[317,28,339,26],[317,31,339,29,"action"],[317,37,339,35],[317,38,339,36,"payload"],[317,45,339,43],[318,8,340,6],[318,12,340,10],[318,13,340,11,"action"],[318,19,340,17],[318,20,340,18,"payload"],[318,27,340,25],[318,29,340,27],[319,10,341,8],[320,10,342,8,"state"],[320,15,342,13],[320,16,342,14,"sync"],[320,20,342,18],[320,21,342,19,"progress"],[320,29,342,27],[320,32,342,30,"initialState"],[320,44,342,42],[320,45,342,43,"sync"],[320,49,342,47],[320,50,342,48,"progress"],[320,58,342,56],[321,8,343,6],[322,6,344,4],[322,7,344,5],[323,6,346,4],[324,0,347,0],[325,0,348,0],[326,6,349,4,"setLastSyncTime"],[326,21,349,19],[326,23,349,21,"setLastSyncTime"],[326,24,349,22,"state"],[326,29,349,27],[326,31,349,29,"action"],[326,37,349,58],[326,42,349,63],[327,8,350,6,"state"],[327,13,350,11],[327,14,350,12,"sync"],[327,18,350,16],[327,19,350,17,"lastSyncTime"],[327,31,350,29],[327,34,350,32,"action"],[327,40,350,38],[327,41,350,39,"payload"],[327,48,350,46],[328,6,351,4],[328,7,351,5],[329,6,353,4],[330,0,354,0],[331,0,355,0],[332,6,356,4,"addSyncError"],[332,18,356,16],[332,20,356,18,"addSyncError"],[332,21,356,19,"state"],[332,26,356,24],[332,28,356,26,"action"],[332,34,356,55],[332,39,356,60],[333,8,357,6,"state"],[333,13,357,11],[333,14,357,12,"sync"],[333,18,357,16],[333,19,357,17,"syncErrors"],[333,29,357,27],[333,30,357,28,"push"],[333,34,357,32],[333,35,357,33,"action"],[333,41,357,39],[333,42,357,40,"payload"],[333,49,357,47],[333,50,357,48],[334,8,358,6],[335,8,359,6],[335,12,359,10,"state"],[335,17,359,15],[335,18,359,16,"sync"],[335,22,359,20],[335,23,359,21,"syncErrors"],[335,33,359,31],[335,34,359,32,"length"],[335,40,359,38],[335,43,359,41],[335,45,359,43],[335,47,359,45],[336,10,360,8,"state"],[336,15,360,13],[336,16,360,14,"sync"],[336,20,360,18],[336,21,360,19,"syncErrors"],[336,31,360,29],[336,32,360,30,"shift"],[336,37,360,35],[336,38,360,36],[336,39,360,37],[337,8,361,6],[338,6,362,4],[338,7,362,5],[339,6,364,4],[340,0,365,0],[341,0,366,0],[342,6,367,4,"clearSyncErrors"],[342,21,367,19],[342,23,367,22,"state"],[342,28,367,27],[342,32,367,32],[343,8,368,6,"state"],[343,13,368,11],[343,14,368,12,"sync"],[343,18,368,16],[343,19,368,17,"syncErrors"],[343,29,368,27],[343,32,368,30],[343,34,368,32],[344,6,369,4],[344,7,369,5],[345,6,371,4],[346,0,372,0],[347,0,373,0],[348,6,374,4,"addFailedOperation"],[348,24,374,22],[348,26,374,24,"addFailedOperation"],[348,27,374,25,"state"],[348,32,374,30],[348,34,374,32,"action"],[348,40,374,70],[348,45,374,75],[349,8,375,6],[349,12,375,12,"existingIndex"],[349,25,375,25],[349,28,375,28,"state"],[349,33,375,33],[349,34,375,34,"failedOperations"],[349,50,375,50],[349,51,375,51,"findIndex"],[349,60,375,60],[349,61,376,8,"op"],[349,63,376,10],[349,67,376,14,"op"],[349,69,376,16],[349,70,376,17,"id"],[349,72,376,19],[349,77,376,24,"action"],[349,83,376,30],[349,84,376,31,"payload"],[349,91,376,38],[349,92,376,39,"id"],[349,94,377,6],[349,95,377,7],[350,8,379,6],[350,12,379,10,"existingIndex"],[350,25,379,23],[350,29,379,27],[350,30,379,28],[350,32,379,30],[351,10,380,8,"state"],[351,15,380,13],[351,16,380,14,"failedOperations"],[351,32,380,30],[351,33,380,31,"existingIndex"],[351,46,380,44],[351,47,380,45],[351,50,380,48,"action"],[351,56,380,54],[351,57,380,55,"payload"],[351,64,380,62],[352,8,381,6],[352,9,381,7],[352,15,381,13],[353,10,382,8,"state"],[353,15,382,13],[353,16,382,14,"failedOperations"],[353,32,382,30],[353,33,382,31,"push"],[353,37,382,35],[353,38,382,36,"action"],[353,44,382,42],[353,45,382,43,"payload"],[353,52,382,50],[353,53,382,51],[354,8,383,6],[356,8,385,6],[357,8,386,6],[357,12,386,10,"state"],[357,17,386,15],[357,18,386,16,"failedOperations"],[357,34,386,32],[357,35,386,33,"length"],[357,41,386,39],[357,44,386,42],[357,46,386,44],[357,48,386,46],[358,10,387,8,"state"],[358,15,387,13],[358,16,387,14,"failedOperations"],[358,32,387,30],[358,33,387,31,"shift"],[358,38,387,36],[358,39,387,37],[358,40,387,38],[359,8,388,6],[360,6,389,4],[360,7,389,5],[361,6,391,4],[362,0,392,0],[363,0,393,0],[364,6,394,4,"removeFailedOperation"],[364,27,394,25],[364,29,394,27,"removeFailedOperation"],[364,30,394,28,"state"],[364,35,394,33],[364,37,394,35,"action"],[364,43,394,64],[364,48,394,69],[365,8,395,6,"state"],[365,13,395,11],[365,14,395,12,"failedOperations"],[365,30,395,28],[365,33,395,31,"state"],[365,38,395,36],[365,39,395,37,"failedOperations"],[365,55,395,53],[365,56,395,54,"filter"],[365,62,395,60],[365,63,396,8,"op"],[365,65,396,10],[365,69,396,14,"op"],[365,71,396,16],[365,72,396,17,"id"],[365,74,396,19],[365,79,396,24,"action"],[365,85,396,30],[365,86,396,31,"payload"],[365,93,397,6],[365,94,397,7],[366,6,398,4],[366,7,398,5],[367,6,400,4],[368,0,401,0],[369,0,402,0],[370,6,403,4,"clearFailedOperations"],[370,27,403,25],[370,29,403,28,"state"],[370,34,403,33],[370,38,403,38],[371,8,404,6,"state"],[371,13,404,11],[371,14,404,12,"failedOperations"],[371,30,404,28],[371,33,404,31],[371,35,404,33],[372,6,405,4],[372,7,405,5],[373,6,407,4],[374,0,408,0],[375,0,409,0],[376,6,410,4,"addOptimisticUpdate"],[376,25,410,23],[376,27,410,25,"addOptimisticUpdate"],[376,28,410,26,"state"],[376,33,410,31],[376,35,410,33,"action"],[376,41,410,81],[376,46,410,86],[377,8,411,6],[377,12,411,10,"state"],[377,17,411,15],[377,18,411,16,"settings"],[377,26,411,24],[377,27,411,25,"enableOptimisticUpdates"],[377,50,411,48],[377,52,411,50],[378,10,412,8,"state"],[378,15,412,13],[378,16,412,14,"optimisticUpdates"],[378,33,412,31],[378,34,412,32,"action"],[378,40,412,38],[378,41,412,39,"payload"],[378,48,412,46],[378,49,412,47,"id"],[378,51,412,49],[378,52,412,50],[378,55,412,53,"action"],[378,61,412,59],[378,62,412,60,"payload"],[378,69,412,67],[378,70,412,68,"data"],[378,74,412,72],[379,8,413,6],[380,6,414,4],[380,7,414,5],[381,6,416,4],[382,0,417,0],[383,0,418,0],[384,6,419,4,"removeOptimisticUpdate"],[384,28,419,26],[384,30,419,28,"removeOptimisticUpdate"],[384,31,419,29,"state"],[384,36,419,34],[384,38,419,36,"action"],[384,44,419,65],[384,49,419,70],[385,8,420,6],[385,15,420,13,"state"],[385,20,420,18],[385,21,420,19,"optimisticUpdates"],[385,38,420,36],[385,39,420,37,"action"],[385,45,420,43],[385,46,420,44,"payload"],[385,53,420,51],[385,54,420,52],[386,6,421,4],[386,7,421,5],[387,6,423,4],[388,0,424,0],[389,0,425,0],[390,6,426,4,"clearOptimisticUpdates"],[390,28,426,26],[390,30,426,29,"state"],[390,35,426,34],[390,39,426,39],[391,8,427,6,"state"],[391,13,427,11],[391,14,427,12,"optimisticUpdates"],[391,31,427,29],[391,34,427,32],[391,35,427,33],[391,36,427,34],[392,6,428,4],[392,7,428,5],[393,6,430,4],[394,0,431,0],[395,0,432,0],[396,6,433,4,"updateSettings"],[396,20,433,18],[396,22,433,20,"updateSettings"],[396,23,433,21,"state"],[396,28,433,26],[396,30,433,28,"action"],[396,36,433,84],[396,41,433,89],[397,8,434,6,"state"],[397,13,434,11],[397,14,434,12,"settings"],[397,22,434,20],[397,25,434,23],[398,10,434,25],[398,13,434,28,"state"],[398,18,434,33],[398,19,434,34,"settings"],[398,27,434,42],[399,10,434,44],[399,13,434,47,"action"],[399,19,434,53],[399,20,434,54,"payload"],[400,8,434,62],[400,9,434,63],[401,6,435,4],[401,7,435,5],[402,6,437,4],[403,0,438,0],[404,0,439,0],[405,6,440,4,"toggleAutoSync"],[405,20,440,18],[405,22,440,21,"state"],[405,27,440,26],[405,31,440,31],[406,8,441,6,"state"],[406,13,441,11],[406,14,441,12,"sync"],[406,18,441,16],[406,19,441,17,"autoSyncEnabled"],[406,34,441,32],[406,37,441,35],[406,38,441,36,"state"],[406,43,441,41],[406,44,441,42,"sync"],[406,48,441,46],[406,49,441,47,"autoSyncEnabled"],[406,64,441,62],[407,6,442,4],[407,7,442,5],[408,6,444,4],[409,0,445,0],[410,0,446,0],[411,6,447,4,"resetOfflineState"],[411,23,447,21],[411,25,447,24,"state"],[411,30,447,29],[411,34,447,34],[412,8,448,6],[412,15,448,13],[413,10,448,15],[413,13,448,18,"initialState"],[413,25,448,30],[414,10,448,32,"isInitialized"],[414,23,448,45],[414,25,448,47],[415,8,448,52],[415,9,448,53],[416,6,449,4],[417,4,450,2],[417,5,450,3],[418,4,451,2,"extraReducers"],[418,17,451,15],[418,19,451,18,"builder"],[418,26,451,25],[418,30,451,30],[419,6,452,4,"builder"],[420,6,453,6],[421,6,453,6],[421,7,454,7,"addCase"],[421,14,454,14],[421,15,454,15,"initializeOfflineSystem"],[421,38,454,38],[421,39,454,39,"fulfilled"],[421,48,454,48],[421,50,454,51,"state"],[421,55,454,56],[421,59,454,61],[422,8,455,8,"state"],[422,13,455,13],[422,14,455,14,"isInitialized"],[422,27,455,27],[422,30,455,30],[422,34,455,34],[423,6,456,6],[423,7,456,7],[423,8,456,8],[423,9,457,7,"addCase"],[423,16,457,14],[423,17,457,15,"initializeOfflineSystem"],[423,40,457,38],[423,41,457,39,"rejected"],[423,49,457,47],[423,51,457,49],[423,52,457,50,"state"],[423,57,457,55],[423,59,457,57,"action"],[423,65,457,63],[423,70,457,68],[424,8,458,8,"state"],[424,13,458,13],[424,14,458,14,"isInitialized"],[424,27,458,27],[424,30,458,30],[424,35,458,35],[425,8,459,8],[425,12,459,12,"action"],[425,18,459,18],[425,19,459,19,"error"],[425,24,459,24],[425,25,459,25,"message"],[425,32,459,32],[425,34,459,34],[426,10,460,10,"state"],[426,15,460,15],[426,16,460,16,"sync"],[426,20,460,20],[426,21,460,21,"syncErrors"],[426,31,460,31],[426,32,460,32,"push"],[426,36,460,36],[426,37,460,37],[426,63,460,63,"action"],[426,69,460,69],[426,70,460,70,"error"],[426,75,460,75],[426,76,460,76,"message"],[426,83,460,83],[426,85,460,85],[426,86,460,86],[427,8,461,8],[428,6,462,6],[428,7,462,7],[430,6,464,6],[431,6,464,6],[431,7,465,7,"addCase"],[431,14,465,14],[431,15,465,15,"enqueueOperation"],[431,31,465,31],[431,32,465,32,"fulfilled"],[431,41,465,41],[431,43,465,43],[431,44,465,44,"state"],[431,49,465,49],[431,51,465,51,"action"],[431,57,465,57],[431,62,465,62],[432,8,466,8,"logger"],[432,32,466,14],[432,33,466,15,"info"],[432,37,466,19],[432,38,466,20],[432,85,466,67],[432,87,466,69],[433,10,467,10,"operationId"],[433,21,467,21],[433,23,467,23,"action"],[433,29,467,29],[433,30,467,30,"payload"],[433,37,467,37],[433,38,467,38,"operationId"],[434,8,468,8],[434,9,468,9],[434,10,468,10],[435,6,469,6],[435,7,469,7],[435,8,469,8],[435,9,470,7,"addCase"],[435,16,470,14],[435,17,470,15,"enqueueOperation"],[435,33,470,31],[435,34,470,32,"rejected"],[435,42,470,40],[435,44,470,42],[435,45,470,43,"state"],[435,50,470,48],[435,52,470,50,"action"],[435,58,470,56],[435,63,470,61],[436,8,471,8],[436,12,471,12,"action"],[436,18,471,18],[436,19,471,19,"error"],[436,24,471,24],[436,25,471,25,"message"],[436,32,471,32],[436,34,471,34],[437,10,472,10,"state"],[437,15,472,15],[437,16,472,16,"sync"],[437,20,472,20],[437,21,472,21,"syncErrors"],[437,31,472,31],[437,32,472,32,"push"],[437,36,472,36],[437,37,472,37],[437,69,472,69,"action"],[437,75,472,75],[437,76,472,76,"error"],[437,81,472,81],[437,82,472,82,"message"],[437,89,472,89],[437,91,472,91],[437,92,472,92],[438,8,473,8],[439,6,474,6],[439,7,474,7],[441,6,476,6],[442,6,476,6],[442,7,477,7,"addCase"],[442,14,477,14],[442,15,477,15,"forceSync"],[442,24,477,24],[442,25,477,25,"pending"],[442,32,477,32],[442,34,477,35,"state"],[442,39,477,40],[442,43,477,45],[443,8,478,8,"state"],[443,13,478,13],[443,14,478,14,"sync"],[443,18,478,18],[443,19,478,19,"isSyncing"],[443,28,478,28],[443,31,478,31],[443,35,478,35],[444,6,479,6],[444,7,479,7],[444,8,479,8],[444,9,480,7,"addCase"],[444,16,480,14],[444,17,480,15,"forceSync"],[444,26,480,24],[444,27,480,25,"fulfilled"],[444,36,480,34],[444,38,480,37,"state"],[444,43,480,42],[444,47,480,47],[445,8,481,8,"state"],[445,13,481,13],[445,14,481,14,"sync"],[445,18,481,18],[445,19,481,19,"lastSyncTime"],[445,31,481,31],[445,34,481,34,"Date"],[445,38,481,38],[445,39,481,39,"now"],[445,42,481,42],[445,43,481,43],[445,44,481,44],[446,6,482,6],[446,7,482,7],[446,8,482,8],[446,9,483,7,"addCase"],[446,16,483,14],[446,17,483,15,"forceSync"],[446,26,483,24],[446,27,483,25,"rejected"],[446,35,483,33],[446,37,483,35],[446,38,483,36,"state"],[446,43,483,41],[446,45,483,43,"action"],[446,51,483,49],[446,56,483,54],[447,8,484,8,"state"],[447,13,484,13],[447,14,484,14,"sync"],[447,18,484,18],[447,19,484,19,"isSyncing"],[447,28,484,28],[447,31,484,31],[447,36,484,36],[448,8,485,8],[448,12,485,12,"action"],[448,18,485,18],[448,19,485,19,"error"],[448,24,485,24],[448,25,485,25,"message"],[448,32,485,32],[448,34,485,34],[449,10,486,10,"state"],[449,15,486,15],[449,16,486,16,"sync"],[449,20,486,20],[449,21,486,21,"syncErrors"],[449,31,486,31],[449,32,486,32,"push"],[449,36,486,36],[449,37,486,37],[449,59,486,59,"action"],[449,65,486,65],[449,66,486,66,"error"],[449,71,486,71],[449,72,486,72,"message"],[449,79,486,79],[449,81,486,81],[449,82,486,82],[450,8,487,8],[451,6,488,6],[451,7,488,7],[453,6,490,6],[454,6,490,6],[454,7,491,7,"addCase"],[454,14,491,14],[454,15,491,15,"retryFailedOperations"],[454,36,491,36],[454,37,491,37,"fulfilled"],[454,46,491,46],[454,48,491,48],[454,49,491,49,"state"],[454,54,491,54],[454,56,491,56,"action"],[454,62,491,62],[454,67,491,67],[455,8,492,8,"logger"],[455,32,492,14],[455,33,492,15,"info"],[455,37,492,19],[455,38,492,20],[455,85,492,67],[455,87,492,69],[456,10,493,10,"count"],[456,15,493,15],[456,17,493,17,"action"],[456,23,493,23],[456,24,493,24,"payload"],[457,8,494,8],[457,9,494,9],[457,10,494,10],[458,6,495,6],[458,7,495,7],[458,8,495,8],[458,9,496,7,"addCase"],[458,16,496,14],[458,17,496,15,"retryFailedOperations"],[458,38,496,36],[458,39,496,37,"rejected"],[458,47,496,45],[458,49,496,47],[458,50,496,48,"state"],[458,55,496,53],[458,57,496,55,"action"],[458,63,496,61],[458,68,496,66],[459,8,497,8],[459,12,497,12,"action"],[459,18,497,18],[459,19,497,19,"error"],[459,24,497,24],[459,25,497,25,"message"],[459,32,497,32],[459,34,497,34],[460,10,498,10,"state"],[460,15,498,15],[460,16,498,16,"sync"],[460,20,498,20],[460,21,498,21,"syncErrors"],[460,31,498,31],[460,32,498,32,"push"],[460,36,498,36],[460,37,498,37],[460,68,498,68,"action"],[460,74,498,74],[460,75,498,75,"error"],[460,80,498,80],[460,81,498,81,"message"],[460,88,498,88],[460,90,498,90],[460,91,498,91],[461,8,499,8],[462,6,500,6],[462,7,500,7],[464,6,502,6],[465,6,502,6],[465,7,503,7,"addCase"],[465,14,503,14],[465,15,503,15,"clearCompletedOperations"],[465,39,503,39],[465,40,503,40,"fulfilled"],[465,49,503,49],[465,51,503,51],[465,52,503,52,"state"],[465,57,503,57],[465,59,503,59,"action"],[465,65,503,65],[465,70,503,70],[466,8,504,8,"logger"],[466,32,504,14],[466,33,504,15,"info"],[466,37,504,19],[466,38,504,20],[466,95,504,77],[466,97,504,79],[467,10,505,10,"count"],[467,15,505,15],[467,17,505,17,"action"],[467,23,505,23],[467,24,505,24,"payload"],[468,8,506,8],[468,9,506,9],[468,10,506,10],[469,6,507,6],[469,7,507,7],[469,8,507,8],[469,9,508,7,"addCase"],[469,16,508,14],[469,17,508,15,"clearCompletedOperations"],[469,41,508,39],[469,42,508,40,"rejected"],[469,50,508,48],[469,52,508,50],[469,53,508,51,"state"],[469,58,508,56],[469,60,508,58,"action"],[469,66,508,64],[469,71,508,69],[470,8,509,8],[470,12,509,12,"action"],[470,18,509,18],[470,19,509,19,"error"],[470,24,509,24],[470,25,509,25,"message"],[470,32,509,32],[470,34,509,34],[471,10,510,10,"state"],[471,15,510,15],[471,16,510,16,"sync"],[471,20,510,20],[471,21,510,21,"syncErrors"],[471,31,510,31],[471,32,510,32,"push"],[471,36,510,36],[471,37,510,37],[471,78,510,78,"action"],[471,84,510,84],[471,85,510,85,"error"],[471,90,510,90],[471,91,510,91,"message"],[471,98,510,98],[471,100,510,100],[471,101,510,101],[472,8,511,8],[473,6,512,6],[473,7,512,7],[473,8,512,8],[474,4,513,2],[475,2,514,0],[475,3,514,1],[475,4,514,2],[477,2,516,0],[478,2,517,7],[478,6,517,7,"_offlineSlice$actions"],[478,27,517,7],[478,30,534,4,"offlineSlice"],[478,42,534,16],[478,43,534,17,"actions"],[478,50,534,24],[479,4,518,2,"updateNetworkState"],[479,22,518,20],[479,25,518,20,"exports"],[479,32,518,20],[479,33,518,20,"updateNetworkState"],[479,51,518,20],[479,54,518,20,"_offlineSlice$actions"],[479,75,518,20],[479,76,518,2,"updateNetworkState"],[479,94,518,20],[480,4,519,2,"updateQueueStatistics"],[480,25,519,23],[480,28,519,23,"exports"],[480,35,519,23],[480,36,519,23,"updateQueueStatistics"],[480,57,519,23],[480,60,519,23,"_offlineSlice$actions"],[480,81,519,23],[480,82,519,2,"updateQueueStatistics"],[480,103,519,23],[481,4,520,2,"updateSyncProgress"],[481,22,520,20],[481,25,520,20,"exports"],[481,32,520,20],[481,33,520,20,"updateSyncProgress"],[481,51,520,20],[481,54,520,20,"_offlineSlice$actions"],[481,75,520,20],[481,76,520,2,"updateSyncProgress"],[481,94,520,20],[482,4,521,2,"setSyncStatus"],[482,17,521,15],[482,20,521,15,"exports"],[482,27,521,15],[482,28,521,15,"setSyncStatus"],[482,41,521,15],[482,44,521,15,"_offlineSlice$actions"],[482,65,521,15],[482,66,521,2,"setSyncStatus"],[482,79,521,15],[483,4,522,2,"setLastSyncTime"],[483,19,522,17],[483,22,522,17,"exports"],[483,29,522,17],[483,30,522,17,"setLastSyncTime"],[483,45,522,17],[483,48,522,17,"_offlineSlice$actions"],[483,69,522,17],[483,70,522,2,"setLastSyncTime"],[483,85,522,17],[484,4,523,2,"addSyncError"],[484,16,523,14],[484,19,523,14,"exports"],[484,26,523,14],[484,27,523,14,"addSyncError"],[484,39,523,14],[484,42,523,14,"_offlineSlice$actions"],[484,63,523,14],[484,64,523,2,"addSyncError"],[484,76,523,14],[485,4,524,2,"clearSyncErrors"],[485,19,524,17],[485,22,524,17,"exports"],[485,29,524,17],[485,30,524,17,"clearSyncErrors"],[485,45,524,17],[485,48,524,17,"_offlineSlice$actions"],[485,69,524,17],[485,70,524,2,"clearSyncErrors"],[485,85,524,17],[486,4,525,2,"addFailedOperation"],[486,22,525,20],[486,25,525,20,"exports"],[486,32,525,20],[486,33,525,20,"addFailedOperation"],[486,51,525,20],[486,54,525,20,"_offlineSlice$actions"],[486,75,525,20],[486,76,525,2,"addFailedOperation"],[486,94,525,20],[487,4,526,2,"removeFailedOperation"],[487,25,526,23],[487,28,526,23,"exports"],[487,35,526,23],[487,36,526,23,"removeFailedOperation"],[487,57,526,23],[487,60,526,23,"_offlineSlice$actions"],[487,81,526,23],[487,82,526,2,"removeFailedOperation"],[487,103,526,23],[488,4,527,2,"clearFailedOperations"],[488,25,527,23],[488,28,527,23,"exports"],[488,35,527,23],[488,36,527,23,"clearFailedOperations"],[488,57,527,23],[488,60,527,23,"_offlineSlice$actions"],[488,81,527,23],[488,82,527,2,"clearFailedOperations"],[488,103,527,23],[489,4,528,2,"addOptimisticUpdate"],[489,23,528,21],[489,26,528,21,"exports"],[489,33,528,21],[489,34,528,21,"addOptimisticUpdate"],[489,53,528,21],[489,56,528,21,"_offlineSlice$actions"],[489,77,528,21],[489,78,528,2,"addOptimisticUpdate"],[489,97,528,21],[490,4,529,2,"removeOptimisticUpdate"],[490,26,529,24],[490,29,529,24,"exports"],[490,36,529,24],[490,37,529,24,"removeOptimisticUpdate"],[490,59,529,24],[490,62,529,24,"_offlineSlice$actions"],[490,83,529,24],[490,84,529,2,"removeOptimisticUpdate"],[490,106,529,24],[491,4,530,2,"clearOptimisticUpdates"],[491,26,530,24],[491,29,530,24,"exports"],[491,36,530,24],[491,37,530,24,"clearOptimisticUpdates"],[491,59,530,24],[491,62,530,24,"_offlineSlice$actions"],[491,83,530,24],[491,84,530,2,"clearOptimisticUpdates"],[491,106,530,24],[492,4,531,2,"updateSettings"],[492,18,531,16],[492,21,531,16,"exports"],[492,28,531,16],[492,29,531,16,"updateSettings"],[492,43,531,16],[492,46,531,16,"_offlineSlice$actions"],[492,67,531,16],[492,68,531,2,"updateSettings"],[492,82,531,16],[493,4,532,2,"toggleAutoSync"],[493,18,532,16],[493,21,532,16,"exports"],[493,28,532,16],[493,29,532,16,"toggleAutoSync"],[493,43,532,16],[493,46,532,16,"_offlineSlice$actions"],[493,67,532,16],[493,68,532,2,"toggleAutoSync"],[493,82,532,16],[494,4,533,2,"resetOfflineState"],[494,21,533,19],[494,24,533,19,"exports"],[494,31,533,19],[494,32,533,19,"resetOfflineState"],[494,49,533,19],[494,52,533,19,"_offlineSlice$actions"],[494,73,533,19],[494,74,533,2,"resetOfflineState"],[494,91,533,19],[496,2,536,0],[497,2,537,7],[497,6,537,13,"selectNetworkState"],[497,24,537,31],[497,27,537,35,"state"],[497,32,537,67],[497,36,537,72,"state"],[497,41,537,77],[497,42,537,78,"offline"],[497,49,537,85],[497,50,537,86,"network"],[497,57,537,93],[498,2,537,94,"exports"],[498,9,537,94],[498,10,537,94,"selectNetworkState"],[498,28,537,94],[498,31,537,94,"selectNetworkState"],[498,49,537,94],[499,2,538,7],[499,6,538,13,"selectIsOnline"],[499,20,538,27],[499,23,538,31,"state"],[499,28,538,63],[499,32,538,68,"state"],[499,37,538,73],[499,38,538,74,"offline"],[499,45,538,81],[499,46,538,82,"network"],[499,53,538,89],[499,54,538,90,"isOnline"],[499,62,538,98],[500,2,538,99,"exports"],[500,9,538,99],[500,10,538,99,"selectIsOnline"],[500,24,538,99],[500,27,538,99,"selectIsOnline"],[500,41,538,99],[501,2,539,7],[501,6,539,13,"selectConnectionQuality"],[501,29,539,36],[501,32,539,40,"state"],[501,37,539,72],[501,41,539,77,"state"],[501,46,539,82],[501,47,539,83,"offline"],[501,54,539,90],[501,55,539,91,"network"],[501,62,539,98],[501,63,539,99,"connectionQuality"],[501,80,539,116],[502,2,539,117,"exports"],[502,9,539,117],[502,10,539,117,"selectConnectionQuality"],[502,33,539,117],[502,36,539,117,"selectConnectionQuality"],[502,59,539,117],[503,2,540,7],[503,6,540,13,"selectQueueStats"],[503,22,540,29],[503,25,540,33,"state"],[503,30,540,65],[503,34,540,70,"state"],[503,39,540,75],[503,40,540,76,"offline"],[503,47,540,83],[503,48,540,84,"queue"],[503,53,540,89],[504,2,540,90,"exports"],[504,9,540,90],[504,10,540,90,"selectQueueStats"],[504,26,540,90],[504,29,540,90,"selectQueueStats"],[504,45,540,90],[505,2,541,7],[505,6,541,13,"selectSyncState"],[505,21,541,28],[505,24,541,32,"state"],[505,29,541,64],[505,33,541,69,"state"],[505,38,541,74],[505,39,541,75,"offline"],[505,46,541,82],[505,47,541,83,"sync"],[505,51,541,87],[506,2,541,88,"exports"],[506,9,541,88],[506,10,541,88,"selectSyncState"],[506,25,541,88],[506,28,541,88,"selectSyncState"],[506,43,541,88],[507,2,542,7],[507,6,542,13,"selectIsSyncing"],[507,21,542,28],[507,24,542,32,"state"],[507,29,542,64],[507,33,542,69,"state"],[507,38,542,74],[507,39,542,75,"offline"],[507,46,542,82],[507,47,542,83,"sync"],[507,51,542,87],[507,52,542,88,"isSyncing"],[507,61,542,97],[508,2,542,98,"exports"],[508,9,542,98],[508,10,542,98,"selectIsSyncing"],[508,25,542,98],[508,28,542,98,"selectIsSyncing"],[508,43,542,98],[509,2,543,7],[509,6,543,13,"selectSyncProgress"],[509,24,543,31],[509,27,543,35,"state"],[509,32,543,67],[509,36,543,72,"state"],[509,41,543,77],[509,42,543,78,"offline"],[509,49,543,85],[509,50,543,86,"sync"],[509,54,543,90],[509,55,543,91,"progress"],[509,63,543,99],[510,2,543,100,"exports"],[510,9,543,100],[510,10,543,100,"selectSyncProgress"],[510,28,543,100],[510,31,543,100,"selectSyncProgress"],[510,49,543,100],[511,2,544,7],[511,6,544,13,"selectFailedOperations"],[511,28,544,35],[511,31,544,39,"state"],[511,36,544,71],[511,40,544,76,"state"],[511,45,544,81],[511,46,544,82,"offline"],[511,53,544,89],[511,54,544,90,"failedOperations"],[511,70,544,106],[512,2,544,107,"exports"],[512,9,544,107],[512,10,544,107,"selectFailedOperations"],[512,32,544,107],[512,35,544,107,"selectFailedOperations"],[512,57,544,107],[513,2,545,7],[513,6,545,13,"selectOptimisticUpdates"],[513,29,545,36],[513,32,545,40,"state"],[513,37,545,72],[513,41,545,77,"state"],[513,46,545,82],[513,47,545,83,"offline"],[513,54,545,90],[513,55,545,91,"optimisticUpdates"],[513,72,545,108],[514,2,545,109,"exports"],[514,9,545,109],[514,10,545,109,"selectOptimisticUpdates"],[514,33,545,109],[514,36,545,109,"selectOptimisticUpdates"],[514,59,545,109],[515,2,546,7],[515,6,546,13,"selectOfflineSettings"],[515,27,546,34],[515,30,546,38,"state"],[515,35,546,70],[515,39,546,75,"state"],[515,44,546,80],[515,45,546,81,"offline"],[515,52,546,88],[515,53,546,89,"settings"],[515,61,546,97],[516,2,546,98,"exports"],[516,9,546,98],[516,10,546,98,"selectOfflineSettings"],[516,31,546,98],[516,34,546,98,"selectOfflineSettings"],[516,55,546,98],[517,2,547,7],[517,6,547,13,"selectIsInitialized"],[517,25,547,32],[517,28,547,36,"state"],[517,33,547,68],[517,37,547,73,"state"],[517,42,547,78],[517,43,547,79,"offline"],[517,50,547,86],[517,51,547,87,"isInitialized"],[517,64,547,100],[519,2,549,0],[520,2,549,0,"exports"],[520,9,549,0],[520,10,549,0,"selectIsInitialized"],[520,29,549,0],[520,32,549,0,"selectIsInitialized"],[520,51,549,0],[521,2,549,0],[521,6,549,0,"_default"],[521,14,549,0],[521,17,549,0,"exports"],[521,24,549,0],[521,25,549,0,"default"],[521,32,549,0],[521,35,550,15,"offlineSlice"],[521,47,550,27],[521,48,550,28,"reducer"],[521,55,550,35],[522,0,550,35],[522,3]],"functionMap":{"names":["<global>","createAsyncThunk$argument_1","createSlice$argument_0.reducers.updateNetworkState","createSlice$argument_0.reducers.updateQueueStatistics","createSlice$argument_0.reducers.updateSyncProgress","createSlice$argument_0.reducers.setSyncStatus","createSlice$argument_0.reducers.setLastSyncTime","createSlice$argument_0.reducers.addSyncError","createSlice$argument_0.reducers.clearSyncErrors","createSlice$argument_0.reducers.addFailedOperation","state.failedOperations.findIndex$argument_0","createSlice$argument_0.reducers.removeFailedOperation","state.failedOperations.filter$argument_0","createSlice$argument_0.reducers.clearFailedOperations","createSlice$argument_0.reducers.addOptimisticUpdate","createSlice$argument_0.reducers.removeOptimisticUpdate","createSlice$argument_0.reducers.clearOptimisticUpdates","createSlice$argument_0.reducers.updateSettings","createSlice$argument_0.reducers.toggleAutoSync","createSlice$argument_0.reducers.resetOfflineState","createSlice$argument_0.extraReducers","builder.addCase$argument_1","builder.addCase.addCase$argument_1","builder.addCase.addCase.addCase$argument_1","builder.addCase.addCase.addCase.addCase$argument_1","builder.addCase...addCase.addCase$argument_1","selectNetworkState","selectIsOnline","selectConnectionQuality","selectQueueStats","selectSyncState","selectIsSyncing","selectSyncProgress","selectFailedOperations","selectOptimisticUpdates","selectOfflineSettings","selectIsInitialized"],"mappings":"AAA;ECuH;GDwB;ECQ;GD+B;ECQ;GDS;ECQ;GD0C;ECQ;GDe;wBEa;KFgC;2BGK;KHE;wBIK;KJG;mBKK;KLM;qBMK;KNE;kBOK;KPM;qBQK;KRE;wBSK;QCE,iCD;KTa;2BWK;QCE,8BD;KXE;2BaK;KbE;yBcK;KdI;4BeK;KfE;4BgBK;KhBE;oBiBK;KjBE;oBkBK;KlBE;uBmBK;KnBE;iBoBE;kDCG;ODE;iDEC;OFK;2CGG;OHI;0CIC;OJI;kCKG;OLE;oCKC;OLE;mCKC;OLK;gDKG;OLI;+CKC;OLI;mDKG;OLI;kDKC;OLI;GpBC;kC0BwB,2D1B;8B2BC,oE3B;uC4BC,6E5B;gC6BC,yD7B;+B8BC,wD9B;+B+BC,kE/B;kCgCC,iEhC;sCiCC,oEjC;uCkCC,qElC;qCmCC,4DnC;mCoCC,iEpC"}},"type":"js/module"}]}