{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":69,"index":69}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":70},"end":{"line":2,"column":40,"index":110}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"../supabase/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":46,"index":157}}],"key":"q3G/dBcB/lyqe2ZqsudXc9dkd4E=","exportNames":["*"]}},{"name":"../../config/analytics","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":158},"end":{"line":12,"column":32,"index":354}}],"key":"4gjS6BEK9IQgu06QXmlywlo09Ys=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":355},"end":{"line":13,"column":54,"index":409}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.AnalyticsService = void 0;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _toConsumableArray2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[6], \"@react-native-async-storage/async-storage\"));\n  var _reactNative = require(_dependencyMap[7], \"react-native\");\n  var _client = require(_dependencyMap[8], \"../supabase/client\");\n  var _analytics = require(_dependencyMap[9], \"../../config/analytics\");\n  var _EventLogger = require(_dependencyMap[10], \"../../utils/EventLogger\");\n  // Legacy interface for backward compatibility\n  // Enhanced event interface\n  var AnalyticsService = exports.AnalyticsService = /*#__PURE__*/function () {\n    function AnalyticsService() {\n      (0, _classCallCheck2.default)(this, AnalyticsService);\n      this.eventQueue = [];\n      this.isInitialized = false;\n      this.isFlushing = false;\n      this.sessionStartTime = Date.now();\n      this.lastActivityTime = Date.now();\n      this.config = {\n        enabled: (0, _analytics.getAnalyticsConfig)().enabled,\n        hasConsent: false\n      };\n    }\n\n    /**\n     * Get singleton instance\n     */\n    return (0, _createClass2.default)(AnalyticsService, [{\n      key: \"initialize\",\n      value: (\n      /**\n       * Initialize analytics service\n       */\n      function () {\n        var _initialize = (0, _asyncToGenerator2.default)(function* () {\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          try {\n            _EventLogger.EventLogger.info('Analytics', 'Initializing analytics service', options);\n\n            // Load persisted settings in background to avoid blocking\n            this.loadPersistedData().catch(function (error) {\n              _EventLogger.EventLogger.warn('Analytics', 'Failed to load persisted data, continuing with defaults', error);\n            });\n\n            // Generate session ID if needed\n            if (!this.config.sessionId) {\n              this.config.sessionId = this.generateSessionId();\n              yield _asyncStorage.default.setItem(AnalyticsService.SESSION_ID_KEY, this.config.sessionId);\n            }\n\n            // Generate anonymous ID if needed\n            if (!this.config.anonymousId) {\n              this.config.anonymousId = this.generateAnonymousId();\n              yield _asyncStorage.default.setItem(AnalyticsService.ANONYMOUS_ID_KEY, this.config.anonymousId);\n            }\n\n            // Set up periodic flush\n            this.setupPeriodicFlush();\n\n            // Set up session management\n            this.setupSessionManagement();\n\n            // Load offline events\n            yield this.loadOfflineEvents();\n            this.isInitialized = true;\n            _EventLogger.EventLogger.info('Analytics', 'Analytics service initialized successfully');\n\n            // Track app opened event\n            this.track(_analytics.ANALYTICS_EVENTS.APP_OPENED, {\n              session_id: this.config.sessionId,\n              is_first_launch: !this.config.userId\n            });\n          } catch (error) {\n            _EventLogger.EventLogger.error('Analytics', 'Failed to initialize analytics', error);\n          }\n        });\n        function initialize() {\n          return _initialize.apply(this, arguments);\n        }\n        return initialize;\n      }()\n      /**\n       * Set user consent for analytics tracking\n       */\n      )\n    }, {\n      key: \"setConsent\",\n      value: (function () {\n        var _setConsent = (0, _asyncToGenerator2.default)(function* (consent) {\n          var _consent$analytics, _consent$performance, _consent$marketing, _consent$functional;\n          this.consentSettings = {\n            analytics: (_consent$analytics = consent.analytics) != null ? _consent$analytics : false,\n            performance: (_consent$performance = consent.performance) != null ? _consent$performance : false,\n            marketing: (_consent$marketing = consent.marketing) != null ? _consent$marketing : false,\n            functional: (_consent$functional = consent.functional) != null ? _consent$functional : true,\n            // Functional cookies are usually required\n            timestamp: new Date().toISOString()\n          };\n          this.config.hasConsent = this.consentSettings.analytics;\n          yield _asyncStorage.default.setItem(AnalyticsService.CONSENT_KEY, JSON.stringify(this.consentSettings));\n          _EventLogger.EventLogger.info('Analytics', 'User consent updated', this.consentSettings);\n\n          // Track consent event\n          if (this.consentSettings.analytics) {\n            this.track('consent_given', {\n              consent_types: Object.keys(consent)\n            });\n          }\n        });\n        function setConsent(_x) {\n          return _setConsent.apply(this, arguments);\n        }\n        return setConsent;\n      }()\n      /**\n       * Identify a user\n       */\n      )\n    }, {\n      key: \"identify\",\n      value: (function () {\n        var _identify = (0, _asyncToGenerator2.default)(function* (userId, properties) {\n          if (!this.hasConsent()) return;\n          this.config.userId = userId;\n          this.config.userProperties = Object.assign({}, this.config.userProperties, properties, {\n            user_id: userId\n          });\n          yield _asyncStorage.default.setItem(AnalyticsService.USER_ID_KEY, userId);\n          yield _asyncStorage.default.setItem(AnalyticsService.USER_PROPERTIES_KEY, JSON.stringify(this.config.userProperties));\n          _EventLogger.EventLogger.info('Analytics', 'User identified', {\n            userId: userId,\n            properties: properties\n          });\n\n          // Track user login if this is a new identification\n          this.track(_analytics.ANALYTICS_EVENTS.USER_LOGGED_IN, Object.assign({\n            user_id: userId\n          }, properties));\n        });\n        function identify(_x2, _x3) {\n          return _identify.apply(this, arguments);\n        }\n        return identify;\n      }()\n      /**\n       * Clear user identification (logout)\n       */\n      )\n    }, {\n      key: \"reset\",\n      value: (function () {\n        var _reset = (0, _asyncToGenerator2.default)(function* () {\n          var oldUserId = this.config.userId;\n          this.config.userId = undefined;\n          this.config.userProperties = {};\n          this.config.sessionId = this.generateSessionId();\n          yield _asyncStorage.default.multiRemove([AnalyticsService.USER_ID_KEY, AnalyticsService.USER_PROPERTIES_KEY, AnalyticsService.SESSION_ID_KEY]);\n          yield _asyncStorage.default.setItem(AnalyticsService.SESSION_ID_KEY, this.config.sessionId);\n          _EventLogger.EventLogger.info('Analytics', 'User context reset', {\n            oldUserId: oldUserId\n          });\n          if (oldUserId && this.hasConsent()) {\n            this.track(_analytics.ANALYTICS_EVENTS.USER_LOGGED_OUT, {\n              previous_user_id: oldUserId\n            });\n          }\n        });\n        function reset() {\n          return _reset.apply(this, arguments);\n        }\n        return reset;\n      }()\n      /**\n       * Update user properties\n       */\n      )\n    }, {\n      key: \"setUserProperties\",\n      value: (function () {\n        var _setUserProperties = (0, _asyncToGenerator2.default)(function* (properties) {\n          if (!this.hasConsent()) return;\n          this.config.userProperties = Object.assign({}, this.config.userProperties, properties);\n          yield _asyncStorage.default.setItem(AnalyticsService.USER_PROPERTIES_KEY, JSON.stringify(this.config.userProperties));\n          _EventLogger.EventLogger.info('Analytics', 'User properties updated', properties);\n        });\n        function setUserProperties(_x4) {\n          return _setUserProperties.apply(this, arguments);\n        }\n        return setUserProperties;\n      }()\n      /**\n       * Track an event\n       */\n      )\n    }, {\n      key: \"track\",\n      value: function track(eventName, properties) {\n        if (!this.shouldTrackEvent(eventName)) {\n          return;\n        }\n        try {\n          var event = {\n            event_name: eventName,\n            properties: this.enrichProperties(properties),\n            user_properties: this.config.userProperties,\n            timestamp: new Date().toISOString(),\n            session_id: this.config.sessionId,\n            user_id: this.config.userId,\n            anonymous_id: this.config.anonymousId,\n            context: this.buildContext()\n          };\n          this.eventQueue.push(event);\n          this.lastActivityTime = Date.now();\n          _EventLogger.EventLogger.analyticsEvent(eventName, properties);\n\n          // Auto-flush if queue is full\n          if (this.eventQueue.length >= (0, _analytics.getAnalyticsConfig)().batchSize) {\n            this.flush();\n          }\n        } catch (error) {\n          _EventLogger.EventLogger.error('Analytics', 'Failed to track event', error, {\n            eventName: eventName,\n            properties: properties\n          });\n        }\n      }\n\n      /**\n       * Track screen view\n       */\n    }, {\n      key: \"trackScreen\",\n      value: function trackScreen(screenName, properties) {\n        this.track(_analytics.ANALYTICS_EVENTS.SCREEN_VIEWED, Object.assign({\n          screen_name: screenName\n        }, properties));\n      }\n\n      /**\n       * Time an operation\n       */\n    }, {\n      key: \"time\",\n      value: function time(operation, fn) {\n        var _this = this;\n        var startTime = Date.now();\n        return fn().finally(function () {\n          var duration = Date.now() - startTime;\n          _this.track('operation_timed', {\n            operation: operation,\n            duration: duration\n          });\n        });\n      }\n\n      /**\n       * Track revenue event (for future premium features)\n       */\n    }, {\n      key: \"trackRevenue\",\n      value: function trackRevenue(amount) {\n        var currency = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'USD';\n        var properties = arguments.length > 2 ? arguments[2] : undefined;\n        this.track('revenue', Object.assign({\n          amount: amount,\n          currency: currency\n        }, properties));\n      }\n\n      /**\n       * Flush events to backend\n       */\n    }, {\n      key: \"flush\",\n      value: (function () {\n        var _flush = (0, _asyncToGenerator2.default)(function* () {\n          if (!this.hasConsent() || this.isFlushing || this.eventQueue.length === 0) {\n            return;\n          }\n          this.isFlushing = true;\n          var events = (0, _toConsumableArray2.default)(this.eventQueue);\n          this.eventQueue = [];\n          try {\n            var batch = {\n              events: events,\n              timestamp: new Date().toISOString(),\n              batch_id: this.generateBatchId()\n            };\n\n            // Store offline if network is unavailable\n            var isOnline = yield this.checkNetworkStatus();\n            if (!isOnline) {\n              yield this.storeOfflineEvents(events);\n              _EventLogger.EventLogger.info('Analytics', 'Events stored offline', {\n                count: events.length\n              });\n              return;\n            }\n\n            // Send to backend (using existing Supabase integration)\n            yield this.sendEventBatch(batch);\n            _EventLogger.EventLogger.info('Analytics', 'Events flushed successfully', {\n              count: events.length\n            });\n          } catch (error) {\n            var _this$eventQueue;\n            // Put events back in queue on failure\n            (_this$eventQueue = this.eventQueue).unshift.apply(_this$eventQueue, (0, _toConsumableArray2.default)(events));\n            yield this.storeOfflineEvents(events);\n            _EventLogger.EventLogger.error('Analytics', 'Failed to flush events', error);\n          } finally {\n            this.isFlushing = false;\n          }\n        });\n        function flush() {\n          return _flush.apply(this, arguments);\n        }\n        return flush;\n      }()\n      /**\n       * Legacy method for backward compatibility\n       */\n      )\n    }, {\n      key: \"hasConsent\",\n      value:\n      /**\n       * Check if we have user consent to track\n       */\n      function hasConsent() {\n        return this.config.hasConsent === true;\n      }\n\n      /**\n       * Check if we should track a specific event\n       */\n    }, {\n      key: \"shouldTrackEvent\",\n      value: function shouldTrackEvent(eventName) {\n        if (!this.isInitialized) {\n          _EventLogger.EventLogger.warn('Analytics', 'Attempted to track event before initialization', {\n            eventName: eventName\n          });\n          return false;\n        }\n        if (!this.config.enabled) {\n          return false;\n        }\n        if (!this.hasConsent()) {\n          return false;\n        }\n\n        // Apply sampling\n        var config = (0, _analytics.getAnalyticsConfig)();\n        var sampleRate = config.sampling.screenViews; // Default sampling rate\n\n        if (Math.random() > sampleRate) {\n          return false;\n        }\n        return true;\n      }\n\n      /**\n       * Enrich properties with default values and context\n       */\n    }, {\n      key: \"enrichProperties\",\n      value: function enrichProperties(properties) {\n        return Object.assign({}, _analytics.DEFAULT_EVENT_PROPERTIES, {\n          session_duration: Date.now() - this.sessionStartTime,\n          time_since_last_activity: Date.now() - this.lastActivityTime,\n          platform: _reactNative.Platform.OS\n        }, (0, _analytics.sanitizeEventProperties)(properties || {}));\n      }\n\n      /**\n       * Build context object\n       */\n    }, {\n      key: \"buildContext\",\n      value: function buildContext() {\n        return {\n          app: {\n            name: 'ZapTap',\n            version: '1.0.0',\n            // TODO: Get from package.json or Constants\n            build: __DEV__ ? 'development' : 'production'\n          },\n          device: {\n            type: _reactNative.Platform.OS === 'ios' ? 'ios' : 'android',\n            model: _reactNative.Platform.OS,\n            // Would need react-native-device-info for actual model\n            manufacturer: _reactNative.Platform.OS === 'ios' ? 'Apple' : 'Android'\n          },\n          os: {\n            name: _reactNative.Platform.OS,\n            version: _reactNative.Platform.Version.toString()\n          }\n        };\n      }\n\n      /**\n       * Load persisted data from storage\n       */\n    }, {\n      key: \"loadPersistedData\",\n      value: (function () {\n        var _loadPersistedData = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var _yield$AsyncStorage$m = yield _asyncStorage.default.multiGet([AnalyticsService.CONSENT_KEY, AnalyticsService.USER_ID_KEY, AnalyticsService.ANONYMOUS_ID_KEY, AnalyticsService.SESSION_ID_KEY, AnalyticsService.USER_PROPERTIES_KEY]),\n              _yield$AsyncStorage$m2 = (0, _slicedToArray2.default)(_yield$AsyncStorage$m, 5),\n              consent = _yield$AsyncStorage$m2[0],\n              userId = _yield$AsyncStorage$m2[1],\n              anonymousId = _yield$AsyncStorage$m2[2],\n              sessionId = _yield$AsyncStorage$m2[3],\n              userProperties = _yield$AsyncStorage$m2[4];\n            if (consent[1]) {\n              var _this$consentSettings, _this$consentSettings2;\n              this.consentSettings = JSON.parse(consent[1]);\n              this.config.hasConsent = (_this$consentSettings = (_this$consentSettings2 = this.consentSettings) == null ? void 0 : _this$consentSettings2.analytics) != null ? _this$consentSettings : false;\n            }\n            if (userId[1]) {\n              this.config.userId = userId[1];\n            }\n            if (anonymousId[1]) {\n              this.config.anonymousId = anonymousId[1];\n            }\n            if (sessionId[1]) {\n              this.config.sessionId = sessionId[1];\n            }\n            if (userProperties[1]) {\n              this.config.userProperties = JSON.parse(userProperties[1]);\n            }\n          } catch (error) {\n            _EventLogger.EventLogger.error('Analytics', 'Failed to load persisted data', error);\n          }\n        });\n        function loadPersistedData() {\n          return _loadPersistedData.apply(this, arguments);\n        }\n        return loadPersistedData;\n      }()\n      /**\n       * Setup periodic event flushing\n       */\n      )\n    }, {\n      key: \"setupPeriodicFlush\",\n      value: function setupPeriodicFlush() {\n        var _this2 = this;\n        setInterval(function () {\n          if (_this2.eventQueue.length > 0) {\n            _this2.flush();\n          }\n        }, (0, _analytics.getAnalyticsConfig)().flushInterval);\n      }\n\n      /**\n       * Setup session management\n       */\n    }, {\n      key: \"setupSessionManagement\",\n      value: function setupSessionManagement() {\n        var _this3 = this;\n        // Reset session after timeout\n        setInterval(function () {\n          var timeSinceLastActivity = Date.now() - _this3.lastActivityTime;\n          if (timeSinceLastActivity > (0, _analytics.getAnalyticsConfig)().sessionTimeout) {\n            _this3.startNewSession();\n          }\n        }, 60000); // Check every minute\n      }\n\n      /**\n       * Start a new session\n       */\n    }, {\n      key: \"startNewSession\",\n      value: (function () {\n        var _startNewSession = (0, _asyncToGenerator2.default)(function* () {\n          var oldSessionId = this.config.sessionId;\n          this.config.sessionId = this.generateSessionId();\n          this.sessionStartTime = Date.now();\n          this.lastActivityTime = Date.now();\n          yield _asyncStorage.default.setItem(AnalyticsService.SESSION_ID_KEY, this.config.sessionId);\n          if (this.hasConsent()) {\n            this.track('session_started', {\n              previous_session_id: oldSessionId\n            });\n          }\n        });\n        function startNewSession() {\n          return _startNewSession.apply(this, arguments);\n        }\n        return startNewSession;\n      }()\n      /**\n       * Load offline events\n       */\n      )\n    }, {\n      key: \"loadOfflineEvents\",\n      value: (function () {\n        var _loadOfflineEvents = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var offlineEvents = yield _asyncStorage.default.getItem(AnalyticsService.OFFLINE_EVENTS_KEY);\n            if (offlineEvents) {\n              var _this$eventQueue2;\n              var events = JSON.parse(offlineEvents);\n              (_this$eventQueue2 = this.eventQueue).unshift.apply(_this$eventQueue2, (0, _toConsumableArray2.default)(events));\n              yield _asyncStorage.default.removeItem(AnalyticsService.OFFLINE_EVENTS_KEY);\n              _EventLogger.EventLogger.info('Analytics', 'Loaded offline events', {\n                count: events.length\n              });\n            }\n          } catch (error) {\n            _EventLogger.EventLogger.error('Analytics', 'Failed to load offline events', error);\n          }\n        });\n        function loadOfflineEvents() {\n          return _loadOfflineEvents.apply(this, arguments);\n        }\n        return loadOfflineEvents;\n      }()\n      /**\n       * Store events offline\n       */\n      )\n    }, {\n      key: \"storeOfflineEvents\",\n      value: (function () {\n        var _storeOfflineEvents = (0, _asyncToGenerator2.default)(function* (events) {\n          try {\n            var existingEvents = yield _asyncStorage.default.getItem(AnalyticsService.OFFLINE_EVENTS_KEY);\n            var allEvents = existingEvents ? JSON.parse(existingEvents) : [];\n            allEvents.push.apply(allEvents, (0, _toConsumableArray2.default)(events));\n\n            // Limit offline storage\n            var maxOfflineEvents = (0, _analytics.getAnalyticsConfig)().maxOfflineEvents;\n            if (allEvents.length > maxOfflineEvents) {\n              allEvents.splice(0, allEvents.length - maxOfflineEvents);\n            }\n            yield _asyncStorage.default.setItem(AnalyticsService.OFFLINE_EVENTS_KEY, JSON.stringify(allEvents));\n          } catch (error) {\n            _EventLogger.EventLogger.error('Analytics', 'Failed to store offline events', error);\n          }\n        });\n        function storeOfflineEvents(_x5) {\n          return _storeOfflineEvents.apply(this, arguments);\n        }\n        return storeOfflineEvents;\n      }()\n      /**\n       * Send event batch to backend\n       */\n      )\n    }, {\n      key: \"sendEventBatch\",\n      value: (function () {\n        var _sendEventBatch = (0, _asyncToGenerator2.default)(function* (batch) {\n          try {\n            // For now, we'll send each event individually to the existing automation_analytics table\n            // In a real implementation, you'd want a dedicated analytics endpoint\n\n            var promises = batch.events.map(/*#__PURE__*/function () {\n              var _ref = (0, _asyncToGenerator2.default)(function* (event) {\n                var _yield$supabase$from$ = yield _client.supabase.from('app_analytics').insert({\n                    event_name: event.event_name,\n                    properties: event.properties,\n                    user_properties: event.user_properties,\n                    timestamp: event.timestamp,\n                    session_id: event.session_id,\n                    user_id: event.user_id,\n                    anonymous_id: event.anonymous_id,\n                    context: event.context,\n                    batch_id: batch.batch_id\n                  }),\n                  error = _yield$supabase$from$.error;\n                if (error) {\n                  throw error;\n                }\n              });\n              return function (_x7) {\n                return _ref.apply(this, arguments);\n              };\n            }());\n            yield Promise.all(promises);\n          } catch (error) {\n            // Fallback to console logging if backend is unavailable\n            _EventLogger.EventLogger.info('Analytics', 'Batch send failed, events logged locally', {\n              batch_id: batch.batch_id,\n              event_count: batch.events.length,\n              error: error\n            });\n            throw error;\n          }\n        });\n        function sendEventBatch(_x6) {\n          return _sendEventBatch.apply(this, arguments);\n        }\n        return sendEventBatch;\n      }()\n      /**\n       * Check network status\n       */\n      )\n    }, {\n      key: \"checkNetworkStatus\",\n      value: (function () {\n        var _checkNetworkStatus = (0, _asyncToGenerator2.default)(function* () {\n          // In a real implementation, use @react-native-community/netinfo\n          // For now, assume online\n          return true;\n        });\n        function checkNetworkStatus() {\n          return _checkNetworkStatus.apply(this, arguments);\n        }\n        return checkNetworkStatus;\n      }()\n      /**\n       * Generate a session ID\n       */\n      )\n    }, {\n      key: \"generateSessionId\",\n      value: function generateSessionId() {\n        return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n      }\n\n      /**\n       * Generate anonymous ID\n       */\n    }, {\n      key: \"generateAnonymousId\",\n      value: function generateAnonymousId() {\n        return `anon-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n      }\n\n      /**\n       * Generate batch ID\n       */\n    }, {\n      key: \"generateBatchId\",\n      value: function generateBatchId() {\n        return `batch-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n      }\n\n      /**\n       * Legacy method for backward compatibility - Generate a simple session ID\n       */\n    }], [{\n      key: \"getInstance\",\n      value: function getInstance() {\n        if (!AnalyticsService.instance) {\n          AnalyticsService.instance = new AnalyticsService();\n        }\n        return AnalyticsService.instance;\n      }\n    }, {\n      key: \"trackEvent\",\n      value: (function () {\n        var _trackEvent = (0, _asyncToGenerator2.default)(function* (event) {\n          try {\n            var analytics = AnalyticsService.getInstance();\n\n            // Convert legacy event to new format\n            var eventName = `automation_${event.event_type}`;\n            var properties = Object.assign({\n              automation_id: event.automation_id,\n              event_type: event.event_type\n            }, event.event_data);\n            analytics.track(eventName, properties);\n\n            // Also maintain legacy database tracking for backward compatibility\n            var _yield$supabase$auth$ = yield _client.supabase.auth.getUser(),\n              user = _yield$supabase$auth$.data.user;\n            var eventData = {\n              automation_id: event.automation_id,\n              event_type: event.event_type,\n              event_data: event.event_data || {},\n              user_id: (user == null ? void 0 : user.id) || event.user_id,\n              session_id: event.session_id || analytics.generateSessionId(),\n              user_agent: event.user_agent || (typeof navigator !== 'undefined' ? navigator.userAgent : 'Mobile App'),\n              created_at: new Date().toISOString()\n            };\n            var _yield$supabase$from$2 = yield _client.supabase.from('automation_analytics').insert(eventData),\n              error = _yield$supabase$from$2.error;\n            if (error) {\n              _EventLogger.EventLogger.error('Analytics', 'Failed to track legacy analytics event', error);\n              return false;\n            }\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Analytics', 'Legacy analytics tracking error', error);\n            return false;\n          }\n        });\n        function trackEvent(_x8) {\n          return _trackEvent.apply(this, arguments);\n        }\n        return trackEvent;\n      }()\n      /**\n       * Get analytics stats for an automation\n       */\n      )\n    }, {\n      key: \"getAutomationStats\",\n      value: (function () {\n        var _getAutomationStats = (0, _asyncToGenerator2.default)(function* (automationId) {\n          try {\n            // Get basic stats\n            var _yield$supabase$from$3 = yield _client.supabase.from('automation_analytics').select('event_type, user_id, created_at, location_data').eq('automation_id', automationId),\n              analytics = _yield$supabase$from$3.data,\n              error = _yield$supabase$from$3.error;\n            if (error) throw error;\n\n            // Process the data\n            var stats = {\n              views: (analytics == null ? void 0 : analytics.filter(function (a) {\n                return a.event_type === 'view';\n              }).length) || 0,\n              executions: (analytics == null ? void 0 : analytics.filter(function (a) {\n                return a.event_type === 'execution';\n              }).length) || 0,\n              shares: (analytics == null ? void 0 : analytics.filter(function (a) {\n                return a.event_type === 'share';\n              }).length) || 0,\n              downloads: (analytics == null ? void 0 : analytics.filter(function (a) {\n                return a.event_type === 'download';\n              }).length) || 0,\n              likes: (analytics == null ? void 0 : analytics.filter(function (a) {\n                return a.event_type === 'like';\n              }).length) || 0,\n              comments: (analytics == null ? void 0 : analytics.filter(function (a) {\n                return a.event_type === 'comment';\n              }).length) || 0,\n              unique_users: new Set(analytics == null ? void 0 : analytics.map(function (a) {\n                return a.user_id;\n              }).filter(Boolean)).size || 0,\n              last_activity: analytics != null && analytics.length ? analytics[analytics.length - 1].created_at : null,\n              daily_stats: this.generateDailyStats(analytics || []),\n              top_countries: this.generateCountryStats(analytics || [])\n            };\n            return stats;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Analytics', 'Failed to get analytics stats:', error);\n            return {\n              views: 0,\n              executions: 0,\n              shares: 0,\n              downloads: 0,\n              likes: 0,\n              comments: 0,\n              unique_users: 0,\n              last_activity: null,\n              daily_stats: [],\n              top_countries: []\n            };\n          }\n        });\n        function getAutomationStats(_x9) {\n          return _getAutomationStats.apply(this, arguments);\n        }\n        return getAutomationStats;\n      }()\n      /**\n       * Track automation view\n       */\n      )\n    }, {\n      key: \"trackView\",\n      value: (function () {\n        var _trackView = (0, _asyncToGenerator2.default)(function* (automationId, metadata) {\n          yield this.trackEvent({\n            automation_id: automationId,\n            event_type: 'view',\n            event_data: metadata\n          });\n        });\n        function trackView(_x0, _x1) {\n          return _trackView.apply(this, arguments);\n        }\n        return trackView;\n      }()\n      /**\n       * Track automation execution\n       */\n      )\n    }, {\n      key: \"trackExecution\",\n      value: (function () {\n        var _trackExecution = (0, _asyncToGenerator2.default)(function* (automationId, result) {\n          yield this.trackEvent({\n            automation_id: automationId,\n            event_type: 'execution',\n            event_data: {\n              success: result.success,\n              execution_time: result.executionTime,\n              steps_completed: result.stepsCompleted,\n              total_steps: result.totalSteps\n            }\n          });\n        });\n        function trackExecution(_x10, _x11) {\n          return _trackExecution.apply(this, arguments);\n        }\n        return trackExecution;\n      }()\n      /**\n       * Track automation share\n       */\n      )\n    }, {\n      key: \"trackShare\",\n      value: (function () {\n        var _trackShare = (0, _asyncToGenerator2.default)(function* (automationId, shareMethod) {\n          yield this.trackEvent({\n            automation_id: automationId,\n            event_type: 'share',\n            event_data: {\n              method: shareMethod\n            }\n          });\n        });\n        function trackShare(_x12, _x13) {\n          return _trackShare.apply(this, arguments);\n        }\n        return trackShare;\n      }())\n    }, {\n      key: \"generateSessionId\",\n      value: function generateSessionId() {\n        return Date.now().toString(36) + Math.random().toString(36).substr(2);\n      }\n\n      /**\n       * Generate daily stats from analytics data\n       */\n    }, {\n      key: \"generateDailyStats\",\n      value: function generateDailyStats(analytics) {\n        var daily = {};\n        analytics.forEach(function (event) {\n          var date = new Date(event.created_at).toISOString().split('T')[0];\n          if (!daily[date]) {\n            daily[date] = {\n              views: 0,\n              executions: 0,\n              shares: 0\n            };\n          }\n          if (event.event_type === 'view') daily[date].views++;\n          if (event.event_type === 'execution') daily[date].executions++;\n          if (event.event_type === 'share') daily[date].shares++;\n        });\n        return Object.entries(daily).map(function (_ref2) {\n          var _ref3 = (0, _slicedToArray2.default)(_ref2, 2),\n            date = _ref3[0],\n            stats = _ref3[1];\n          return Object.assign({\n            date: date\n          }, stats);\n        }).sort(function (a, b) {\n          return a.date.localeCompare(b.date);\n        }).slice(-30); // Last 30 days\n      }\n\n      /**\n       * Generate country stats from location data\n       */\n    }, {\n      key: \"generateCountryStats\",\n      value: function generateCountryStats(analytics) {\n        var countries = {};\n        analytics.forEach(function (event) {\n          var _event$location_data;\n          var country = ((_event$location_data = event.location_data) == null ? void 0 : _event$location_data.country) || 'Unknown';\n          countries[country] = (countries[country] || 0) + 1;\n        });\n        return Object.entries(countries).map(function (_ref4) {\n          var _ref5 = (0, _slicedToArray2.default)(_ref4, 2),\n            country = _ref5[0],\n            count = _ref5[1];\n          return {\n            country: country,\n            count: count\n          };\n        }).sort(function (a, b) {\n          return b.count - a.count;\n        }).slice(0, 10); // Top 10 countries\n      }\n\n      /**\n       * Get popular automations based on analytics\n       */\n    }, {\n      key: \"getPopularAutomations\",\n      value: (function () {\n        var _getPopularAutomations = (0, _asyncToGenerator2.default)(function* () {\n          var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n          try {\n            var _yield$supabase$from$4 = yield _client.supabase.from('automation_stats_detailed').select('*').order('view_count', {\n                ascending: false\n              }).limit(limit),\n              data = _yield$supabase$from$4.data,\n              error = _yield$supabase$from$4.error;\n            if (error) throw error;\n            return data || [];\n          } catch (error) {\n            _EventLogger.EventLogger.error('Analytics', 'Failed to get popular automations:', error);\n            return [];\n          }\n        });\n        function getPopularAutomations() {\n          return _getPopularAutomations.apply(this, arguments);\n        }\n        return getPopularAutomations;\n      }())\n    }]);\n  }();\n  // Storage keys\n  AnalyticsService.CONSENT_KEY = 'analytics_consent';\n  AnalyticsService.USER_ID_KEY = 'analytics_user_id';\n  AnalyticsService.ANONYMOUS_ID_KEY = 'analytics_anonymous_id';\n  AnalyticsService.SESSION_ID_KEY = 'analytics_session_id';\n  AnalyticsService.USER_PROPERTIES_KEY = 'analytics_user_properties';\n  AnalyticsService.OFFLINE_EVENTS_KEY = 'analytics_offline_events';\n});","lineCount":937,"map":[[12,2,1,0],[12,6,1,0,"_asyncStorage"],[12,19,1,0],[12,22,1,0,"_interopRequireDefault"],[12,44,1,0],[12,45,1,0,"require"],[12,52,1,0],[12,53,1,0,"_dependencyMap"],[12,67,1,0],[13,2,2,0],[13,6,2,0,"_reactNative"],[13,18,2,0],[13,21,2,0,"require"],[13,28,2,0],[13,29,2,0,"_dependencyMap"],[13,43,2,0],[14,2,3,0],[14,6,3,0,"_client"],[14,13,3,0],[14,16,3,0,"require"],[14,23,3,0],[14,24,3,0,"_dependencyMap"],[14,38,3,0],[15,2,4,0],[15,6,4,0,"_analytics"],[15,16,4,0],[15,19,4,0,"require"],[15,26,4,0],[15,27,4,0,"_dependencyMap"],[15,41,4,0],[16,2,13,0],[16,6,13,0,"_EventLogger"],[16,18,13,0],[16,21,13,0,"require"],[16,28,13,0],[16,29,13,0,"_dependencyMap"],[16,43,13,0],[17,2,15,0],[18,2,27,0],[19,2,27,0],[19,6,123,13,"AnalyticsService"],[19,22,123,29],[19,25,123,29,"exports"],[19,32,123,29],[19,33,123,29,"AnalyticsService"],[19,49,123,29],[20,4,141,2],[20,13,141,2,"AnalyticsService"],[20,30,141,2],[20,32,141,24],[21,6,141,24],[21,10,141,24,"_classCallCheck2"],[21,26,141,24],[21,27,141,24,"default"],[21,34,141,24],[21,42,141,24,"AnalyticsService"],[21,58,141,24],[22,6,141,24],[22,11,126,10,"eventQueue"],[22,21,126,20],[22,24,126,49],[22,26,126,51],[23,6,126,51],[23,11,127,10,"isInitialized"],[23,24,127,23],[23,27,127,26],[23,32,127,31],[24,6,127,31],[24,11,128,10,"isFlushing"],[24,21,128,20],[24,24,128,23],[24,29,128,28],[25,6,128,28],[25,11,129,10,"sessionStartTime"],[25,27,129,26],[25,30,129,29,"Date"],[25,34,129,33],[25,35,129,34,"now"],[25,38,129,37],[25,39,129,38],[25,40,129,39],[26,6,129,39],[26,11,130,10,"lastActivityTime"],[26,27,130,26],[26,30,130,29,"Date"],[26,34,130,33],[26,35,130,34,"now"],[26,38,130,37],[26,39,130,38],[26,40,130,39],[27,6,142,4],[27,10,142,8],[27,11,142,9,"config"],[27,17,142,15],[27,20,142,18],[28,8,143,6,"enabled"],[28,15,143,13],[28,17,143,15],[28,21,143,15,"getAnalyticsConfig"],[28,50,143,33],[28,52,143,34],[28,53,143,35],[28,54,143,36,"enabled"],[28,61,143,43],[29,8,144,6,"hasConsent"],[29,18,144,16],[29,20,144,18],[30,6,145,4],[30,7,145,5],[31,4,146,2],[33,4,148,2],[34,0,149,0],[35,0,150,0],[36,4,148,2],[36,15,148,2,"_createClass2"],[36,28,148,2],[36,29,148,2,"default"],[36,36,148,2],[36,38,148,2,"AnalyticsService"],[36,54,148,2],[37,6,148,2,"key"],[37,9,148,2],[38,6,148,2,"value"],[38,11,148,2],[39,6,158,2],[40,0,159,0],[41,0,160,0],[42,6,158,2],[43,8,158,2],[43,12,158,2,"_initialize"],[43,23,158,2],[43,30,158,2,"_asyncToGenerator2"],[43,48,158,2],[43,49,158,2,"default"],[43,56,158,2],[43,58,161,2],[43,71,166,25],[44,10,166,25],[44,14,161,26,"options"],[44,21,166,3],[44,24,166,3,"arguments"],[44,33,166,3],[44,34,166,3,"length"],[44,40,166,3],[44,48,166,3,"arguments"],[44,57,166,3],[44,65,166,3,"undefined"],[44,74,166,3],[44,77,166,3,"arguments"],[44,86,166,3],[44,92,166,6],[44,93,166,7],[44,94,166,8],[45,10,167,4],[45,14,167,8],[46,12,168,6,"EventLogger"],[46,36,168,17],[46,37,168,18,"info"],[46,41,168,22],[46,42,168,23],[46,53,168,34],[46,55,168,36],[46,87,168,68],[46,89,168,70,"options"],[46,96,168,77],[46,97,168,78],[48,12,170,6],[49,12,171,6],[49,16,171,10],[49,17,171,11,"loadPersistedData"],[49,34,171,28],[49,35,171,29],[49,36,171,30],[49,37,171,31,"catch"],[49,42,171,36],[49,43,171,37],[49,53,171,37,"error"],[49,58,171,42],[49,60,171,46],[50,14,172,8,"EventLogger"],[50,38,172,19],[50,39,172,20,"warn"],[50,43,172,24],[50,44,172,25],[50,55,172,36],[50,57,172,38],[50,114,172,95],[50,116,172,97,"error"],[50,121,172,102],[50,122,172,103],[51,12,173,6],[51,13,173,7],[51,14,173,8],[53,12,175,6],[54,12,176,6],[54,16,176,10],[54,17,176,11],[54,21,176,15],[54,22,176,16,"config"],[54,28,176,22],[54,29,176,23,"sessionId"],[54,38,176,32],[54,40,176,34],[55,14,177,8],[55,18,177,12],[55,19,177,13,"config"],[55,25,177,19],[55,26,177,20,"sessionId"],[55,35,177,29],[55,38,177,32],[55,42,177,36],[55,43,177,37,"generateSessionId"],[55,60,177,54],[55,61,177,55],[55,62,177,56],[56,14,178,8],[56,20,178,14,"AsyncStorage"],[56,41,178,26],[56,42,178,27,"setItem"],[56,49,178,34],[56,50,178,35,"AnalyticsService"],[56,66,178,51],[56,67,178,52,"SESSION_ID_KEY"],[56,81,178,66],[56,83,178,68],[56,87,178,72],[56,88,178,73,"config"],[56,94,178,79],[56,95,178,80,"sessionId"],[56,104,178,89],[56,105,178,90],[57,12,179,6],[59,12,181,6],[60,12,182,6],[60,16,182,10],[60,17,182,11],[60,21,182,15],[60,22,182,16,"config"],[60,28,182,22],[60,29,182,23,"anonymousId"],[60,40,182,34],[60,42,182,36],[61,14,183,8],[61,18,183,12],[61,19,183,13,"config"],[61,25,183,19],[61,26,183,20,"anonymousId"],[61,37,183,31],[61,40,183,34],[61,44,183,38],[61,45,183,39,"generateAnonymousId"],[61,64,183,58],[61,65,183,59],[61,66,183,60],[62,14,184,8],[62,20,184,14,"AsyncStorage"],[62,41,184,26],[62,42,184,27,"setItem"],[62,49,184,34],[62,50,184,35,"AnalyticsService"],[62,66,184,51],[62,67,184,52,"ANONYMOUS_ID_KEY"],[62,83,184,68],[62,85,184,70],[62,89,184,74],[62,90,184,75,"config"],[62,96,184,81],[62,97,184,82,"anonymousId"],[62,108,184,93],[62,109,184,94],[63,12,185,6],[65,12,187,6],[66,12,188,6],[66,16,188,10],[66,17,188,11,"setupPeriodicFlush"],[66,35,188,29],[66,36,188,30],[66,37,188,31],[68,12,190,6],[69,12,191,6],[69,16,191,10],[69,17,191,11,"setupSessionManagement"],[69,39,191,33],[69,40,191,34],[69,41,191,35],[71,12,193,6],[72,12,194,6],[72,18,194,12],[72,22,194,16],[72,23,194,17,"loadOfflineEvents"],[72,40,194,34],[72,41,194,35],[72,42,194,36],[73,12,196,6],[73,16,196,10],[73,17,196,11,"isInitialized"],[73,30,196,24],[73,33,196,27],[73,37,196,31],[74,12,197,6,"EventLogger"],[74,36,197,17],[74,37,197,18,"info"],[74,41,197,22],[74,42,197,23],[74,53,197,34],[74,55,197,36],[74,99,197,80],[74,100,197,81],[76,12,199,6],[77,12,200,6],[77,16,200,10],[77,17,200,11,"track"],[77,22,200,16],[77,23,200,17,"ANALYTICS_EVENTS"],[77,50,200,33],[77,51,200,34,"APP_OPENED"],[77,61,200,44],[77,63,200,46],[78,14,201,8,"session_id"],[78,24,201,18],[78,26,201,20],[78,30,201,24],[78,31,201,25,"config"],[78,37,201,31],[78,38,201,32,"sessionId"],[78,47,201,41],[79,14,202,8,"is_first_launch"],[79,29,202,23],[79,31,202,25],[79,32,202,26],[79,36,202,30],[79,37,202,31,"config"],[79,43,202,37],[79,44,202,38,"userId"],[80,12,203,6],[80,13,203,7],[80,14,203,8],[81,10,205,4],[81,11,205,5],[81,12,205,6],[81,19,205,13,"error"],[81,24,205,18],[81,26,205,20],[82,12,206,6,"EventLogger"],[82,36,206,17],[82,37,206,18,"error"],[82,42,206,23],[82,43,206,24],[82,54,206,35],[82,56,206,37],[82,88,206,69],[82,90,206,71,"error"],[82,95,206,85],[82,96,206,86],[83,10,207,4],[84,8,208,2],[84,9,208,3],[85,8,208,3],[85,17,161,15,"initialize"],[85,27,161,25,"initialize"],[85,28,161,25],[86,10,161,25],[86,17,161,25,"_initialize"],[86,28,161,25],[86,29,161,25,"apply"],[86,34,161,25],[86,41,161,25,"arguments"],[86,50,161,25],[87,8,161,25],[88,8,161,25],[88,15,161,15,"initialize"],[88,25,161,25],[89,6,161,25],[90,6,210,2],[91,0,211,0],[92,0,212,0],[93,6,210,2],[94,4,210,2],[95,6,210,2,"key"],[95,9,210,2],[96,6,210,2,"value"],[96,11,210,2],[97,8,210,2],[97,12,210,2,"_setConsent"],[97,23,210,2],[97,30,210,2,"_asyncToGenerator2"],[97,48,210,2],[97,49,210,2,"default"],[97,56,210,2],[97,58,213,2],[97,69,213,26,"consent"],[97,76,213,59],[97,78,213,76],[98,10,213,76],[98,14,213,76,"_consent$analytics"],[98,32,213,76],[98,34,213,76,"_consent$performance"],[98,54,213,76],[98,56,213,76,"_consent$marketing"],[98,74,213,76],[98,76,213,76,"_consent$functional"],[98,95,213,76],[99,10,214,4],[99,14,214,8],[99,15,214,9,"consentSettings"],[99,30,214,24],[99,33,214,27],[100,12,215,6,"analytics"],[100,21,215,15],[100,24,215,15,"_consent$analytics"],[100,42,215,15],[100,45,215,17,"consent"],[100,52,215,24],[100,53,215,25,"analytics"],[100,62,215,34],[100,74,215,34,"_consent$analytics"],[100,92,215,34],[100,95,215,38],[100,100,215,43],[101,12,216,6,"performance"],[101,23,216,17],[101,26,216,17,"_consent$performance"],[101,46,216,17],[101,49,216,19,"consent"],[101,56,216,26],[101,57,216,27,"performance"],[101,68,216,38],[101,80,216,38,"_consent$performance"],[101,100,216,38],[101,103,216,42],[101,108,216,47],[102,12,217,6,"marketing"],[102,21,217,15],[102,24,217,15,"_consent$marketing"],[102,42,217,15],[102,45,217,17,"consent"],[102,52,217,24],[102,53,217,25,"marketing"],[102,62,217,34],[102,74,217,34,"_consent$marketing"],[102,92,217,34],[102,95,217,38],[102,100,217,43],[103,12,218,6,"functional"],[103,22,218,16],[103,25,218,16,"_consent$functional"],[103,44,218,16],[103,47,218,18,"consent"],[103,54,218,25],[103,55,218,26,"functional"],[103,65,218,36],[103,77,218,36,"_consent$functional"],[103,96,218,36],[103,99,218,40],[103,103,218,44],[104,12,218,46],[105,12,219,6,"timestamp"],[105,21,219,15],[105,23,219,17],[105,27,219,21,"Date"],[105,31,219,25],[105,32,219,26],[105,33,219,27],[105,34,219,28,"toISOString"],[105,45,219,39],[105,46,219,40],[106,10,220,4],[106,11,220,5],[107,10,222,4],[107,14,222,8],[107,15,222,9,"config"],[107,21,222,15],[107,22,222,16,"hasConsent"],[107,32,222,26],[107,35,222,29],[107,39,222,33],[107,40,222,34,"consentSettings"],[107,55,222,49],[107,56,222,50,"analytics"],[107,65,222,59],[108,10,224,4],[108,16,224,10,"AsyncStorage"],[108,37,224,22],[108,38,224,23,"setItem"],[108,45,224,30],[108,46,225,6,"AnalyticsService"],[108,62,225,22],[108,63,225,23,"CONSENT_KEY"],[108,74,225,34],[108,76,226,6,"JSON"],[108,80,226,10],[108,81,226,11,"stringify"],[108,90,226,20],[108,91,226,21],[108,95,226,25],[108,96,226,26,"consentSettings"],[108,111,226,41],[108,112,227,4],[108,113,227,5],[109,10,229,4,"EventLogger"],[109,34,229,15],[109,35,229,16,"info"],[109,39,229,20],[109,40,229,21],[109,51,229,32],[109,53,229,34],[109,75,229,56],[109,77,229,58],[109,81,229,62],[109,82,229,63,"consentSettings"],[109,97,229,78],[109,98,229,79],[111,10,231,4],[112,10,232,4],[112,14,232,8],[112,18,232,12],[112,19,232,13,"consentSettings"],[112,34,232,28],[112,35,232,29,"analytics"],[112,44,232,38],[112,46,232,40],[113,12,233,6],[113,16,233,10],[113,17,233,11,"track"],[113,22,233,16],[113,23,233,17],[113,38,233,32],[113,40,233,34],[114,14,234,8,"consent_types"],[114,27,234,21],[114,29,234,23,"Object"],[114,35,234,29],[114,36,234,30,"keys"],[114,40,234,34],[114,41,234,35,"consent"],[114,48,234,42],[115,12,235,6],[115,13,235,7],[115,14,235,8],[116,10,236,4],[117,8,237,2],[117,9,237,3],[118,8,237,3],[118,17,213,15,"setConsent"],[118,27,213,25,"setConsent"],[118,28,213,25,"_x"],[118,30,213,25],[119,10,213,25],[119,17,213,25,"_setConsent"],[119,28,213,25],[119,29,213,25,"apply"],[119,34,213,25],[119,41,213,25,"arguments"],[119,50,213,25],[120,8,213,25],[121,8,213,25],[121,15,213,15,"setConsent"],[121,25,213,25],[122,6,213,25],[123,6,239,2],[124,0,240,0],[125,0,241,0],[126,6,239,2],[127,4,239,2],[128,6,239,2,"key"],[128,9,239,2],[129,6,239,2,"value"],[129,11,239,2],[130,8,239,2],[130,12,239,2,"_identify"],[130,21,239,2],[130,28,239,2,"_asyncToGenerator2"],[130,46,239,2],[130,47,239,2,"default"],[130,54,239,2],[130,56,242,2],[130,67,242,24,"userId"],[130,73,242,38],[130,75,242,40,"properties"],[130,85,242,67],[130,87,242,84],[131,10,243,4],[131,14,243,8],[131,15,243,9],[131,19,243,13],[131,20,243,14,"hasConsent"],[131,30,243,24],[131,31,243,25],[131,32,243,26],[131,34,243,28],[132,10,245,4],[132,14,245,8],[132,15,245,9,"config"],[132,21,245,15],[132,22,245,16,"userId"],[132,28,245,22],[132,31,245,25,"userId"],[132,37,245,31],[133,10,246,4],[133,14,246,8],[133,15,246,9,"config"],[133,21,246,15],[133,22,246,16,"userProperties"],[133,36,246,30],[133,39,246,30,"Object"],[133,45,246,30],[133,46,246,30,"assign"],[133,52,246,30],[133,57,246,38],[133,61,246,42],[133,62,246,43,"config"],[133,68,246,49],[133,69,246,50,"userProperties"],[133,83,246,64],[133,85,246,69,"properties"],[133,95,246,79],[134,12,246,81,"user_id"],[134,19,246,88],[134,21,246,90,"userId"],[135,10,246,96],[135,12,246,98],[136,10,248,4],[136,16,248,10,"AsyncStorage"],[136,37,248,22],[136,38,248,23,"setItem"],[136,45,248,30],[136,46,248,31,"AnalyticsService"],[136,62,248,47],[136,63,248,48,"USER_ID_KEY"],[136,74,248,59],[136,76,248,61,"userId"],[136,82,248,67],[136,83,248,68],[137,10,249,4],[137,16,249,10,"AsyncStorage"],[137,37,249,22],[137,38,249,23,"setItem"],[137,45,249,30],[137,46,250,6,"AnalyticsService"],[137,62,250,22],[137,63,250,23,"USER_PROPERTIES_KEY"],[137,82,250,42],[137,84,251,6,"JSON"],[137,88,251,10],[137,89,251,11,"stringify"],[137,98,251,20],[137,99,251,21],[137,103,251,25],[137,104,251,26,"config"],[137,110,251,32],[137,111,251,33,"userProperties"],[137,125,251,47],[137,126,252,4],[137,127,252,5],[138,10,254,4,"EventLogger"],[138,34,254,15],[138,35,254,16,"info"],[138,39,254,20],[138,40,254,21],[138,51,254,32],[138,53,254,34],[138,70,254,51],[138,72,254,53],[139,12,254,55,"userId"],[139,18,254,61],[139,20,254,55,"userId"],[139,26,254,61],[140,12,254,63,"properties"],[140,22,254,73],[140,24,254,63,"properties"],[141,10,254,74],[141,11,254,75],[141,12,254,76],[143,10,256,4],[144,10,257,4],[144,14,257,8],[144,15,257,9,"track"],[144,20,257,14],[144,21,257,15,"ANALYTICS_EVENTS"],[144,48,257,31],[144,49,257,32,"USER_LOGGED_IN"],[144,63,257,46],[144,65,257,46,"Object"],[144,71,257,46],[144,72,257,46,"assign"],[144,78,257,46],[145,12,258,6,"user_id"],[145,19,258,13],[145,21,258,15,"userId"],[146,10,258,21],[146,13,259,9,"properties"],[146,23,259,19],[146,24,260,5],[146,25,260,6],[147,8,261,2],[147,9,261,3],[148,8,261,3],[148,17,242,15,"identify"],[148,25,242,23,"identify"],[148,26,242,23,"_x2"],[148,29,242,23],[148,31,242,23,"_x3"],[148,34,242,23],[149,10,242,23],[149,17,242,23,"_identify"],[149,26,242,23],[149,27,242,23,"apply"],[149,32,242,23],[149,39,242,23,"arguments"],[149,48,242,23],[150,8,242,23],[151,8,242,23],[151,15,242,15,"identify"],[151,23,242,23],[152,6,242,23],[153,6,263,2],[154,0,264,0],[155,0,265,0],[156,6,263,2],[157,4,263,2],[158,6,263,2,"key"],[158,9,263,2],[159,6,263,2,"value"],[159,11,263,2],[160,8,263,2],[160,12,263,2,"_reset"],[160,18,263,2],[160,25,263,2,"_asyncToGenerator2"],[160,43,263,2],[160,44,263,2,"default"],[160,51,263,2],[160,53,266,2],[160,66,266,38],[161,10,267,4],[161,14,267,10,"oldUserId"],[161,23,267,19],[161,26,267,22],[161,30,267,26],[161,31,267,27,"config"],[161,37,267,33],[161,38,267,34,"userId"],[161,44,267,40],[162,10,269,4],[162,14,269,8],[162,15,269,9,"config"],[162,21,269,15],[162,22,269,16,"userId"],[162,28,269,22],[162,31,269,25,"undefined"],[162,40,269,34],[163,10,270,4],[163,14,270,8],[163,15,270,9,"config"],[163,21,270,15],[163,22,270,16,"userProperties"],[163,36,270,30],[163,39,270,33],[163,40,270,34],[163,41,270,35],[164,10,271,4],[164,14,271,8],[164,15,271,9,"config"],[164,21,271,15],[164,22,271,16,"sessionId"],[164,31,271,25],[164,34,271,28],[164,38,271,32],[164,39,271,33,"generateSessionId"],[164,56,271,50],[164,57,271,51],[164,58,271,52],[165,10,273,4],[165,16,273,10,"AsyncStorage"],[165,37,273,22],[165,38,273,23,"multiRemove"],[165,49,273,34],[165,50,273,35],[165,51,274,6,"AnalyticsService"],[165,67,274,22],[165,68,274,23,"USER_ID_KEY"],[165,79,274,34],[165,81,275,6,"AnalyticsService"],[165,97,275,22],[165,98,275,23,"USER_PROPERTIES_KEY"],[165,117,275,42],[165,119,276,6,"AnalyticsService"],[165,135,276,22],[165,136,276,23,"SESSION_ID_KEY"],[165,150,276,37],[165,151,277,5],[165,152,277,6],[166,10,278,4],[166,16,278,10,"AsyncStorage"],[166,37,278,22],[166,38,278,23,"setItem"],[166,45,278,30],[166,46,278,31,"AnalyticsService"],[166,62,278,47],[166,63,278,48,"SESSION_ID_KEY"],[166,77,278,62],[166,79,278,64],[166,83,278,68],[166,84,278,69,"config"],[166,90,278,75],[166,91,278,76,"sessionId"],[166,100,278,85],[166,101,278,86],[167,10,280,4,"EventLogger"],[167,34,280,15],[167,35,280,16,"info"],[167,39,280,20],[167,40,280,21],[167,51,280,32],[167,53,280,34],[167,73,280,54],[167,75,280,56],[168,12,280,58,"oldUserId"],[168,21,280,67],[168,23,280,58,"oldUserId"],[169,10,280,68],[169,11,280,69],[169,12,280,70],[170,10,282,4],[170,14,282,8,"oldUserId"],[170,23,282,17],[170,27,282,21],[170,31,282,25],[170,32,282,26,"hasConsent"],[170,42,282,36],[170,43,282,37],[170,44,282,38],[170,46,282,40],[171,12,283,6],[171,16,283,10],[171,17,283,11,"track"],[171,22,283,16],[171,23,283,17,"ANALYTICS_EVENTS"],[171,50,283,33],[171,51,283,34,"USER_LOGGED_OUT"],[171,66,283,49],[171,68,283,51],[172,14,284,8,"previous_user_id"],[172,30,284,24],[172,32,284,26,"oldUserId"],[173,12,285,6],[173,13,285,7],[173,14,285,8],[174,10,286,4],[175,8,287,2],[175,9,287,3],[176,8,287,3],[176,17,266,15,"reset"],[176,22,266,20,"reset"],[176,23,266,20],[177,10,266,20],[177,17,266,20,"_reset"],[177,23,266,20],[177,24,266,20,"apply"],[177,29,266,20],[177,36,266,20,"arguments"],[177,45,266,20],[178,8,266,20],[179,8,266,20],[179,15,266,15,"reset"],[179,20,266,20],[180,6,266,20],[181,6,289,2],[182,0,290,0],[183,0,291,0],[184,6,289,2],[185,4,289,2],[186,6,289,2,"key"],[186,9,289,2],[187,6,289,2,"value"],[187,11,289,2],[188,8,289,2],[188,12,289,2,"_setUserProperties"],[188,30,289,2],[188,37,289,2,"_asyncToGenerator2"],[188,55,289,2],[188,56,289,2,"default"],[188,63,289,2],[188,65,292,2],[188,76,292,33,"properties"],[188,86,292,59],[188,88,292,76],[189,10,293,4],[189,14,293,8],[189,15,293,9],[189,19,293,13],[189,20,293,14,"hasConsent"],[189,30,293,24],[189,31,293,25],[189,32,293,26],[189,34,293,28],[190,10,295,4],[190,14,295,8],[190,15,295,9,"config"],[190,21,295,15],[190,22,295,16,"userProperties"],[190,36,295,30],[190,39,295,30,"Object"],[190,45,295,30],[190,46,295,30,"assign"],[190,52,295,30],[190,57,295,38],[190,61,295,42],[190,62,295,43,"config"],[190,68,295,49],[190,69,295,50,"userProperties"],[190,83,295,64],[190,85,295,69,"properties"],[190,95,295,79],[190,96,295,81],[191,10,297,4],[191,16,297,10,"AsyncStorage"],[191,37,297,22],[191,38,297,23,"setItem"],[191,45,297,30],[191,46,298,6,"AnalyticsService"],[191,62,298,22],[191,63,298,23,"USER_PROPERTIES_KEY"],[191,82,298,42],[191,84,299,6,"JSON"],[191,88,299,10],[191,89,299,11,"stringify"],[191,98,299,20],[191,99,299,21],[191,103,299,25],[191,104,299,26,"config"],[191,110,299,32],[191,111,299,33,"userProperties"],[191,125,299,47],[191,126,300,4],[191,127,300,5],[192,10,302,4,"EventLogger"],[192,34,302,15],[192,35,302,16,"info"],[192,39,302,20],[192,40,302,21],[192,51,302,32],[192,53,302,34],[192,78,302,59],[192,80,302,61,"properties"],[192,90,302,71],[192,91,302,72],[193,8,303,2],[193,9,303,3],[194,8,303,3],[194,17,292,15,"setUserProperties"],[194,34,292,32,"setUserProperties"],[194,35,292,32,"_x4"],[194,38,292,32],[195,10,292,32],[195,17,292,32,"_setUserProperties"],[195,35,292,32],[195,36,292,32,"apply"],[195,41,292,32],[195,48,292,32,"arguments"],[195,57,292,32],[196,8,292,32],[197,8,292,32],[197,15,292,15,"setUserProperties"],[197,32,292,32],[198,6,292,32],[199,6,305,2],[200,0,306,0],[201,0,307,0],[202,6,305,2],[203,4,305,2],[204,6,305,2,"key"],[204,9,305,2],[205,6,305,2,"value"],[205,11,305,2],[205,13,308,2],[205,22,308,9,"track"],[205,27,308,14,"track"],[205,28,308,15,"eventName"],[205,37,308,32],[205,39,308,34,"properties"],[205,49,308,66],[205,51,308,74],[206,8,309,4],[206,12,309,8],[206,13,309,9],[206,17,309,13],[206,18,309,14,"shouldTrackEvent"],[206,34,309,30],[206,35,309,31,"eventName"],[206,44,309,40],[206,45,309,41],[206,47,309,43],[207,10,310,6],[208,8,311,4],[209,8,313,4],[209,12,313,8],[210,10,314,6],[210,14,314,12,"event"],[210,19,314,41],[210,22,314,44],[211,12,315,8,"event_name"],[211,22,315,18],[211,24,315,20,"eventName"],[211,33,315,29],[212,12,316,8,"properties"],[212,22,316,18],[212,24,316,20],[212,28,316,24],[212,29,316,25,"enrichProperties"],[212,45,316,41],[212,46,316,42,"properties"],[212,56,316,52],[212,57,316,53],[213,12,317,8,"user_properties"],[213,27,317,23],[213,29,317,25],[213,33,317,29],[213,34,317,30,"config"],[213,40,317,36],[213,41,317,37,"userProperties"],[213,55,317,51],[214,12,318,8,"timestamp"],[214,21,318,17],[214,23,318,19],[214,27,318,23,"Date"],[214,31,318,27],[214,32,318,28],[214,33,318,29],[214,34,318,30,"toISOString"],[214,45,318,41],[214,46,318,42],[214,47,318,43],[215,12,319,8,"session_id"],[215,22,319,18],[215,24,319,20],[215,28,319,24],[215,29,319,25,"config"],[215,35,319,31],[215,36,319,32,"sessionId"],[215,45,319,41],[216,12,320,8,"user_id"],[216,19,320,15],[216,21,320,17],[216,25,320,21],[216,26,320,22,"config"],[216,32,320,28],[216,33,320,29,"userId"],[216,39,320,35],[217,12,321,8,"anonymous_id"],[217,24,321,20],[217,26,321,22],[217,30,321,26],[217,31,321,27,"config"],[217,37,321,33],[217,38,321,34,"anonymousId"],[217,49,321,45],[218,12,322,8,"context"],[218,19,322,15],[218,21,322,17],[218,25,322,21],[218,26,322,22,"buildContext"],[218,38,322,34],[218,39,322,35],[219,10,323,6],[219,11,323,7],[220,10,325,6],[220,14,325,10],[220,15,325,11,"eventQueue"],[220,25,325,21],[220,26,325,22,"push"],[220,30,325,26],[220,31,325,27,"event"],[220,36,325,32],[220,37,325,33],[221,10,326,6],[221,14,326,10],[221,15,326,11,"lastActivityTime"],[221,31,326,27],[221,34,326,30,"Date"],[221,38,326,34],[221,39,326,35,"now"],[221,42,326,38],[221,43,326,39],[221,44,326,40],[222,10,328,6,"EventLogger"],[222,34,328,17],[222,35,328,18,"analyticsEvent"],[222,49,328,32],[222,50,328,33,"eventName"],[222,59,328,42],[222,61,328,44,"properties"],[222,71,328,54],[222,72,328,55],[224,10,330,6],[225,10,331,6],[225,14,331,10],[225,18,331,14],[225,19,331,15,"eventQueue"],[225,29,331,25],[225,30,331,26,"length"],[225,36,331,32],[225,40,331,36],[225,44,331,36,"getAnalyticsConfig"],[225,73,331,54],[225,75,331,55],[225,76,331,56],[225,77,331,57,"batchSize"],[225,86,331,66],[225,88,331,68],[226,12,332,8],[226,16,332,12],[226,17,332,13,"flush"],[226,22,332,18],[226,23,332,19],[226,24,332,20],[227,10,333,6],[228,8,334,4],[228,9,334,5],[228,10,334,6],[228,17,334,13,"error"],[228,22,334,18],[228,24,334,20],[229,10,335,6,"EventLogger"],[229,34,335,17],[229,35,335,18,"error"],[229,40,335,23],[229,41,335,24],[229,52,335,35],[229,54,335,37],[229,77,335,60],[229,79,335,62,"error"],[229,84,335,67],[229,86,335,78],[230,12,335,80,"eventName"],[230,21,335,89],[230,23,335,80,"eventName"],[230,32,335,89],[231,12,335,91,"properties"],[231,22,335,101],[231,24,335,91,"properties"],[232,10,335,102],[232,11,335,103],[232,12,335,104],[233,8,336,4],[234,6,337,2],[236,6,339,2],[237,0,340,0],[238,0,341,0],[239,4,339,2],[240,6,339,2,"key"],[240,9,339,2],[241,6,339,2,"value"],[241,11,339,2],[241,13,342,2],[241,22,342,9,"trackScreen"],[241,33,342,20,"trackScreen"],[241,34,342,21,"screenName"],[241,44,342,39],[241,46,342,41,"properties"],[241,56,342,73],[241,58,342,81],[242,8,343,4],[242,12,343,8],[242,13,343,9,"track"],[242,18,343,14],[242,19,343,15,"ANALYTICS_EVENTS"],[242,46,343,31],[242,47,343,32,"SCREEN_VIEWED"],[242,60,343,45],[242,62,343,45,"Object"],[242,68,343,45],[242,69,343,45,"assign"],[242,75,343,45],[243,10,344,6,"screen_name"],[243,21,344,17],[243,23,344,19,"screenName"],[244,8,344,29],[244,11,345,9,"properties"],[244,21,345,19],[244,22,346,5],[244,23,346,6],[245,6,347,2],[247,6,349,2],[248,0,350,0],[249,0,351,0],[250,4,349,2],[251,6,349,2,"key"],[251,9,349,2],[252,6,349,2,"value"],[252,11,349,2],[252,13,352,2],[252,22,352,9,"time"],[252,26,352,13,"time"],[252,27,352,17,"operation"],[252,36,352,34],[252,38,352,36,"fn"],[252,40,352,56],[252,42,352,70],[253,8,352,70],[253,12,352,70,"_this"],[253,17,352,70],[254,8,353,4],[254,12,353,10,"startTime"],[254,21,353,19],[254,24,353,22,"Date"],[254,28,353,26],[254,29,353,27,"now"],[254,32,353,30],[254,33,353,31],[254,34,353,32],[255,8,355,4],[255,15,355,11,"fn"],[255,17,355,13],[255,18,355,14],[255,19,355,15],[255,20,355,16,"finally"],[255,27,355,23],[255,28,355,24],[255,40,355,30],[256,10,356,6],[256,14,356,12,"duration"],[256,22,356,20],[256,25,356,23,"Date"],[256,29,356,27],[256,30,356,28,"now"],[256,33,356,31],[256,34,356,32],[256,35,356,33],[256,38,356,36,"startTime"],[256,47,356,45],[257,10,357,6,"_this"],[257,15,357,10],[257,16,357,11,"track"],[257,21,357,16],[257,22,357,17],[257,39,357,34],[257,41,357,36],[258,12,358,8,"operation"],[258,21,358,17],[258,23,358,8,"operation"],[258,32,358,17],[259,12,359,8,"duration"],[259,20,359,16],[259,22,359,8,"duration"],[260,10,360,6],[260,11,360,7],[260,12,360,8],[261,8,361,4],[261,9,361,5],[261,10,361,6],[262,6,362,2],[264,6,364,2],[265,0,365,0],[266,0,366,0],[267,4,364,2],[268,6,364,2,"key"],[268,9,364,2],[269,6,364,2,"value"],[269,11,364,2],[269,13,367,2],[269,22,367,9,"trackRevenue"],[269,34,367,21,"trackRevenue"],[269,35,367,22,"amount"],[269,41,367,36],[269,43,367,104],[270,8,367,104],[270,12,367,38,"currency"],[270,20,367,54],[270,23,367,54,"arguments"],[270,32,367,54],[270,33,367,54,"length"],[270,39,367,54],[270,47,367,54,"arguments"],[270,56,367,54],[270,64,367,54,"undefined"],[270,73,367,54],[270,76,367,54,"arguments"],[270,85,367,54],[270,91,367,57],[270,96,367,62],[271,8,367,62],[271,12,367,64,"properties"],[271,22,367,96],[271,25,367,96,"arguments"],[271,34,367,96],[271,35,367,96,"length"],[271,41,367,96],[271,48,367,96,"arguments"],[271,57,367,96],[271,63,367,96,"undefined"],[271,72,367,96],[272,8,368,4],[272,12,368,8],[272,13,368,9,"track"],[272,18,368,14],[272,19,368,15],[272,28,368,24],[272,30,368,24,"Object"],[272,36,368,24],[272,37,368,24,"assign"],[272,43,368,24],[273,10,369,6,"amount"],[273,16,369,12],[273,18,369,6,"amount"],[273,24,369,12],[274,10,370,6,"currency"],[274,18,370,14],[274,20,370,6,"currency"],[275,8,370,14],[275,11,371,9,"properties"],[275,21,371,19],[275,22,372,5],[275,23,372,6],[276,6,373,2],[278,6,375,2],[279,0,376,0],[280,0,377,0],[281,4,375,2],[282,6,375,2,"key"],[282,9,375,2],[283,6,375,2,"value"],[283,11,375,2],[284,8,375,2],[284,12,375,2,"_flush"],[284,18,375,2],[284,25,375,2,"_asyncToGenerator2"],[284,43,375,2],[284,44,375,2,"default"],[284,51,375,2],[284,53,378,2],[284,66,378,38],[285,10,379,4],[285,14,379,8],[285,15,379,9],[285,19,379,13],[285,20,379,14,"hasConsent"],[285,30,379,24],[285,31,379,25],[285,32,379,26],[285,36,379,30],[285,40,379,34],[285,41,379,35,"isFlushing"],[285,51,379,45],[285,55,379,49],[285,59,379,53],[285,60,379,54,"eventQueue"],[285,70,379,64],[285,71,379,65,"length"],[285,77,379,71],[285,82,379,76],[285,83,379,77],[285,85,379,79],[286,12,380,6],[287,10,381,4],[288,10,383,4],[288,14,383,8],[288,15,383,9,"isFlushing"],[288,25,383,19],[288,28,383,22],[288,32,383,26],[289,10,384,4],[289,14,384,10,"events"],[289,20,384,16],[289,27,384,16,"_toConsumableArray2"],[289,46,384,16],[289,47,384,16,"default"],[289,54,384,16],[289,56,384,23],[289,60,384,27],[289,61,384,28,"eventQueue"],[289,71,384,38],[289,72,384,39],[290,10,385,4],[290,14,385,8],[290,15,385,9,"eventQueue"],[290,25,385,19],[290,28,385,22],[290,30,385,24],[291,10,387,4],[291,14,387,8],[292,12,388,6],[292,16,388,12,"batch"],[292,21,388,29],[292,24,388,32],[293,14,389,8,"events"],[293,20,389,14],[293,22,389,8,"events"],[293,28,389,14],[294,14,390,8,"timestamp"],[294,23,390,17],[294,25,390,19],[294,29,390,23,"Date"],[294,33,390,27],[294,34,390,28],[294,35,390,29],[294,36,390,30,"toISOString"],[294,47,390,41],[294,48,390,42],[294,49,390,43],[295,14,391,8,"batch_id"],[295,22,391,16],[295,24,391,18],[295,28,391,22],[295,29,391,23,"generateBatchId"],[295,44,391,38],[295,45,391,39],[296,12,392,6],[296,13,392,7],[298,12,394,6],[299,12,395,6],[299,16,395,12,"isOnline"],[299,24,395,20],[299,33,395,29],[299,37,395,33],[299,38,395,34,"checkNetworkStatus"],[299,56,395,52],[299,57,395,53],[299,58,395,54],[300,12,396,6],[300,16,396,10],[300,17,396,11,"isOnline"],[300,25,396,19],[300,27,396,21],[301,14,397,8],[301,20,397,14],[301,24,397,18],[301,25,397,19,"storeOfflineEvents"],[301,43,397,37],[301,44,397,38,"events"],[301,50,397,44],[301,51,397,45],[302,14,398,8,"EventLogger"],[302,38,398,19],[302,39,398,20,"info"],[302,43,398,24],[302,44,398,25],[302,55,398,36],[302,57,398,38],[302,80,398,61],[302,82,398,63],[303,16,398,65,"count"],[303,21,398,70],[303,23,398,72,"events"],[303,29,398,78],[303,30,398,79,"length"],[304,14,398,86],[304,15,398,87],[304,16,398,88],[305,14,399,8],[306,12,400,6],[308,12,402,6],[309,12,403,6],[309,18,403,12],[309,22,403,16],[309,23,403,17,"sendEventBatch"],[309,37,403,31],[309,38,403,32,"batch"],[309,43,403,37],[309,44,403,38],[310,12,404,6,"EventLogger"],[310,36,404,17],[310,37,404,18,"info"],[310,41,404,22],[310,42,404,23],[310,53,404,34],[310,55,404,36],[310,84,404,65],[310,86,404,67],[311,14,404,69,"count"],[311,19,404,74],[311,21,404,76,"events"],[311,27,404,82],[311,28,404,83,"length"],[312,12,404,90],[312,13,404,91],[312,14,404,92],[313,10,406,4],[313,11,406,5],[313,12,406,6],[313,19,406,13,"error"],[313,24,406,18],[313,26,406,20],[314,12,406,20],[314,16,406,20,"_this$eventQueue"],[314,32,406,20],[315,12,407,6],[316,12,408,6],[316,13,408,6,"_this$eventQueue"],[316,29,408,6],[316,36,408,10],[316,37,408,11,"eventQueue"],[316,47,408,21],[316,49,408,22,"unshift"],[316,56,408,29],[316,57,408,29,"apply"],[316,62,408,29],[316,63,408,29,"_this$eventQueue"],[316,79,408,29],[316,85,408,29,"_toConsumableArray2"],[316,104,408,29],[316,105,408,29,"default"],[316,112,408,29],[316,114,408,33,"events"],[316,120,408,39],[316,122,408,40],[317,12,409,6],[317,18,409,12],[317,22,409,16],[317,23,409,17,"storeOfflineEvents"],[317,41,409,35],[317,42,409,36,"events"],[317,48,409,42],[317,49,409,43],[318,12,410,6,"EventLogger"],[318,36,410,17],[318,37,410,18,"error"],[318,42,410,23],[318,43,410,24],[318,54,410,35],[318,56,410,37],[318,80,410,61],[318,82,410,63,"error"],[318,87,410,77],[318,88,410,78],[319,10,411,4],[319,11,411,5],[319,20,411,14],[320,12,412,6],[320,16,412,10],[320,17,412,11,"isFlushing"],[320,27,412,21],[320,30,412,24],[320,35,412,29],[321,10,413,4],[322,8,414,2],[322,9,414,3],[323,8,414,3],[323,17,378,15,"flush"],[323,22,378,20,"flush"],[323,23,378,20],[324,10,378,20],[324,17,378,20,"_flush"],[324,23,378,20],[324,24,378,20,"apply"],[324,29,378,20],[324,36,378,20,"arguments"],[324,45,378,20],[325,8,378,20],[326,8,378,20],[326,15,378,15,"flush"],[326,20,378,20],[327,6,378,20],[328,6,416,2],[329,0,417,0],[330,0,418,0],[331,6,416,2],[332,4,416,2],[333,6,416,2,"key"],[333,9,416,2],[334,6,416,2,"value"],[334,11,416,2],[335,6,545,2],[336,0,546,0],[337,0,547,0],[338,6,548,2],[338,15,548,10,"hasConsent"],[338,25,548,20,"hasConsent"],[338,26,548,20],[338,28,548,32],[339,8,549,4],[339,15,549,11],[339,19,549,15],[339,20,549,16,"config"],[339,26,549,22],[339,27,549,23,"hasConsent"],[339,37,549,33],[339,42,549,38],[339,46,549,42],[340,6,550,2],[342,6,552,2],[343,0,553,0],[344,0,554,0],[345,4,552,2],[346,6,552,2,"key"],[346,9,552,2],[347,6,552,2,"value"],[347,11,552,2],[347,13,555,2],[347,22,555,10,"shouldTrackEvent"],[347,38,555,26,"shouldTrackEvent"],[347,39,555,27,"eventName"],[347,48,555,44],[347,50,555,55],[348,8,556,4],[348,12,556,8],[348,13,556,9],[348,17,556,13],[348,18,556,14,"isInitialized"],[348,31,556,27],[348,33,556,29],[349,10,557,6,"EventLogger"],[349,34,557,17],[349,35,557,18,"warn"],[349,39,557,22],[349,40,557,23],[349,51,557,34],[349,53,557,36],[349,101,557,84],[349,103,557,86],[350,12,557,88,"eventName"],[350,21,557,97],[350,23,557,88,"eventName"],[351,10,557,98],[351,11,557,99],[351,12,557,100],[352,10,558,6],[352,17,558,13],[352,22,558,18],[353,8,559,4],[354,8,561,4],[354,12,561,8],[354,13,561,9],[354,17,561,13],[354,18,561,14,"config"],[354,24,561,20],[354,25,561,21,"enabled"],[354,32,561,28],[354,34,561,30],[355,10,562,6],[355,17,562,13],[355,22,562,18],[356,8,563,4],[357,8,565,4],[357,12,565,8],[357,13,565,9],[357,17,565,13],[357,18,565,14,"hasConsent"],[357,28,565,24],[357,29,565,25],[357,30,565,26],[357,32,565,28],[358,10,566,6],[358,17,566,13],[358,22,566,18],[359,8,567,4],[361,8,569,4],[362,8,570,4],[362,12,570,10,"config"],[362,18,570,16],[362,21,570,19],[362,25,570,19,"getAnalyticsConfig"],[362,54,570,37],[362,56,570,38],[362,57,570,39],[363,8,571,4],[363,12,571,10,"sampleRate"],[363,22,571,20],[363,25,571,23,"config"],[363,31,571,29],[363,32,571,30,"sampling"],[363,40,571,38],[363,41,571,39,"screenViews"],[363,52,571,50],[363,53,571,51],[363,54,571,52],[365,8,573,4],[365,12,573,8,"Math"],[365,16,573,12],[365,17,573,13,"random"],[365,23,573,19],[365,24,573,20],[365,25,573,21],[365,28,573,24,"sampleRate"],[365,38,573,34],[365,40,573,36],[366,10,574,6],[366,17,574,13],[366,22,574,18],[367,8,575,4],[368,8,577,4],[368,15,577,11],[368,19,577,15],[369,6,578,2],[371,6,580,2],[372,0,581,0],[373,0,582,0],[374,4,580,2],[375,6,580,2,"key"],[375,9,580,2],[376,6,580,2,"value"],[376,11,580,2],[376,13,583,2],[376,22,583,10,"enrichProperties"],[376,38,583,26,"enrichProperties"],[376,39,583,27,"properties"],[376,49,583,59],[376,51,583,82],[377,8,584,4],[377,15,584,4,"Object"],[377,21,584,4],[377,22,584,4,"assign"],[377,28,584,4],[377,33,585,9,"DEFAULT_EVENT_PROPERTIES"],[377,68,585,33],[378,10,586,6,"session_duration"],[378,26,586,22],[378,28,586,24,"Date"],[378,32,586,28],[378,33,586,29,"now"],[378,36,586,32],[378,37,586,33],[378,38,586,34],[378,41,586,37],[378,45,586,41],[378,46,586,42,"sessionStartTime"],[378,62,586,58],[379,10,587,6,"time_since_last_activity"],[379,34,587,30],[379,36,587,32,"Date"],[379,40,587,36],[379,41,587,37,"now"],[379,44,587,40],[379,45,587,41],[379,46,587,42],[379,49,587,45],[379,53,587,49],[379,54,587,50,"lastActivityTime"],[379,70,587,66],[380,10,588,6,"platform"],[380,18,588,14],[380,20,588,16,"Platform"],[380,41,588,24],[380,42,588,25,"OS"],[381,8,588,27],[381,11,589,9],[381,15,589,9,"sanitizeEventProperties"],[381,49,589,32],[381,51,589,33,"properties"],[381,61,589,43],[381,65,589,47],[381,66,589,48],[381,67,589,49],[381,68,589,50],[382,6,591,2],[384,6,593,2],[385,0,594,0],[386,0,595,0],[387,4,593,2],[388,6,593,2,"key"],[388,9,593,2],[389,6,593,2,"value"],[389,11,593,2],[389,13,596,2],[389,22,596,10,"buildContext"],[389,34,596,22,"buildContext"],[389,35,596,22],[389,37,596,25],[390,8,597,4],[390,15,597,11],[391,10,598,6,"app"],[391,13,598,9],[391,15,598,11],[392,12,599,8,"name"],[392,16,599,12],[392,18,599,14],[392,26,599,22],[393,12,600,8,"version"],[393,19,600,15],[393,21,600,17],[393,28,600,24],[394,12,600,26],[395,12,601,8,"build"],[395,17,601,13],[395,19,601,15,"__DEV__"],[395,26,601,22],[395,29,601,25],[395,42,601,38],[395,45,601,41],[396,10,602,6],[396,11,602,7],[397,10,603,6,"device"],[397,16,603,12],[397,18,603,14],[398,12,604,8,"type"],[398,16,604,12],[398,18,604,14,"Platform"],[398,39,604,22],[398,40,604,23,"OS"],[398,42,604,25],[398,47,604,30],[398,52,604,35],[398,55,604,38],[398,60,604,43],[398,63,604,46],[398,72,604,55],[399,12,605,8,"model"],[399,17,605,13],[399,19,605,15,"Platform"],[399,40,605,23],[399,41,605,24,"OS"],[399,43,605,26],[400,12,605,28],[401,12,606,8,"manufacturer"],[401,24,606,20],[401,26,606,22,"Platform"],[401,47,606,30],[401,48,606,31,"OS"],[401,50,606,33],[401,55,606,38],[401,60,606,43],[401,63,606,46],[401,70,606,53],[401,73,606,56],[402,10,607,6],[402,11,607,7],[403,10,608,6,"os"],[403,12,608,8],[403,14,608,10],[404,12,609,8,"name"],[404,16,609,12],[404,18,609,14,"Platform"],[404,39,609,22],[404,40,609,23,"OS"],[404,42,609,25],[405,12,610,8,"version"],[405,19,610,15],[405,21,610,17,"Platform"],[405,42,610,25],[405,43,610,26,"Version"],[405,50,610,33],[405,51,610,34,"toString"],[405,59,610,42],[405,60,610,43],[406,10,611,6],[407,8,612,4],[407,9,612,5],[408,6,613,2],[410,6,615,2],[411,0,616,0],[412,0,617,0],[413,4,615,2],[414,6,615,2,"key"],[414,9,615,2],[415,6,615,2,"value"],[415,11,615,2],[416,8,615,2],[416,12,615,2,"_loadPersistedData"],[416,30,615,2],[416,37,615,2,"_asyncToGenerator2"],[416,55,615,2],[416,56,615,2,"default"],[416,63,615,2],[416,65,618,2],[416,78,618,51],[417,10,619,4],[417,14,619,8],[418,12,620,6],[418,16,620,6,"_yield$AsyncStorage$m"],[418,37,620,6],[418,46,626,16,"AsyncStorage"],[418,67,626,28],[418,68,626,29,"multiGet"],[418,76,626,37],[418,77,626,38],[418,78,627,8,"AnalyticsService"],[418,94,627,24],[418,95,627,25,"CONSENT_KEY"],[418,106,627,36],[418,108,628,8,"AnalyticsService"],[418,124,628,24],[418,125,628,25,"USER_ID_KEY"],[418,136,628,36],[418,138,629,8,"AnalyticsService"],[418,154,629,24],[418,155,629,25,"ANONYMOUS_ID_KEY"],[418,171,629,41],[418,173,630,8,"AnalyticsService"],[418,189,630,24],[418,190,630,25,"SESSION_ID_KEY"],[418,204,630,39],[418,206,631,8,"AnalyticsService"],[418,222,631,24],[418,223,631,25,"USER_PROPERTIES_KEY"],[418,242,631,44],[418,243,632,7],[418,244,632,8],[419,14,632,8,"_yield$AsyncStorage$m2"],[419,36,632,8],[419,43,632,8,"_slicedToArray2"],[419,58,632,8],[419,59,632,8,"default"],[419,66,632,8],[419,68,632,8,"_yield$AsyncStorage$m"],[419,89,632,8],[420,14,621,8,"consent"],[420,21,621,15],[420,24,621,15,"_yield$AsyncStorage$m2"],[420,46,621,15],[421,14,622,8,"userId"],[421,20,622,14],[421,23,622,14,"_yield$AsyncStorage$m2"],[421,45,622,14],[422,14,623,8,"anonymousId"],[422,25,623,19],[422,28,623,19,"_yield$AsyncStorage$m2"],[422,50,623,19],[423,14,624,8,"sessionId"],[423,23,624,17],[423,26,624,17,"_yield$AsyncStorage$m2"],[423,48,624,17],[424,14,625,8,"userProperties"],[424,28,625,22],[424,31,625,22,"_yield$AsyncStorage$m2"],[424,53,625,22],[425,12,634,6],[425,16,634,10,"consent"],[425,23,634,17],[425,24,634,18],[425,25,634,19],[425,26,634,20],[425,28,634,22],[426,14,634,22],[426,18,634,22,"_this$consentSettings"],[426,39,634,22],[426,41,634,22,"_this$consentSettings2"],[426,63,634,22],[427,14,635,8],[427,18,635,12],[427,19,635,13,"consentSettings"],[427,34,635,28],[427,37,635,31,"JSON"],[427,41,635,35],[427,42,635,36,"parse"],[427,47,635,41],[427,48,635,42,"consent"],[427,55,635,49],[427,56,635,50],[427,57,635,51],[427,58,635,52],[427,59,635,53],[428,14,636,8],[428,18,636,12],[428,19,636,13,"config"],[428,25,636,19],[428,26,636,20,"hasConsent"],[428,36,636,30],[428,40,636,30,"_this$consentSettings"],[428,61,636,30],[428,65,636,30,"_this$consentSettings2"],[428,87,636,30],[428,90,636,33],[428,94,636,37],[428,95,636,38,"consentSettings"],[428,110,636,53],[428,131,636,33,"_this$consentSettings2"],[428,153,636,33],[428,154,636,55,"analytics"],[428,163,636,64],[428,175,636,64,"_this$consentSettings"],[428,196,636,64],[428,199,636,68],[428,204,636,73],[429,12,637,6],[430,12,639,6],[430,16,639,10,"userId"],[430,22,639,16],[430,23,639,17],[430,24,639,18],[430,25,639,19],[430,27,639,21],[431,14,640,8],[431,18,640,12],[431,19,640,13,"config"],[431,25,640,19],[431,26,640,20,"userId"],[431,32,640,26],[431,35,640,29,"userId"],[431,41,640,35],[431,42,640,36],[431,43,640,37],[431,44,640,38],[432,12,641,6],[433,12,643,6],[433,16,643,10,"anonymousId"],[433,27,643,21],[433,28,643,22],[433,29,643,23],[433,30,643,24],[433,32,643,26],[434,14,644,8],[434,18,644,12],[434,19,644,13,"config"],[434,25,644,19],[434,26,644,20,"anonymousId"],[434,37,644,31],[434,40,644,34,"anonymousId"],[434,51,644,45],[434,52,644,46],[434,53,644,47],[434,54,644,48],[435,12,645,6],[436,12,647,6],[436,16,647,10,"sessionId"],[436,25,647,19],[436,26,647,20],[436,27,647,21],[436,28,647,22],[436,30,647,24],[437,14,648,8],[437,18,648,12],[437,19,648,13,"config"],[437,25,648,19],[437,26,648,20,"sessionId"],[437,35,648,29],[437,38,648,32,"sessionId"],[437,47,648,41],[437,48,648,42],[437,49,648,43],[437,50,648,44],[438,12,649,6],[439,12,651,6],[439,16,651,10,"userProperties"],[439,30,651,24],[439,31,651,25],[439,32,651,26],[439,33,651,27],[439,35,651,29],[440,14,652,8],[440,18,652,12],[440,19,652,13,"config"],[440,25,652,19],[440,26,652,20,"userProperties"],[440,40,652,34],[440,43,652,37,"JSON"],[440,47,652,41],[440,48,652,42,"parse"],[440,53,652,47],[440,54,652,48,"userProperties"],[440,68,652,62],[440,69,652,63],[440,70,652,64],[440,71,652,65],[440,72,652,66],[441,12,653,6],[442,10,654,4],[442,11,654,5],[442,12,654,6],[442,19,654,13,"error"],[442,24,654,18],[442,26,654,20],[443,12,655,6,"EventLogger"],[443,36,655,17],[443,37,655,18,"error"],[443,42,655,23],[443,43,655,24],[443,54,655,35],[443,56,655,37],[443,87,655,68],[443,89,655,70,"error"],[443,94,655,84],[443,95,655,85],[444,10,656,4],[445,8,657,2],[445,9,657,3],[446,8,657,3],[446,17,618,16,"loadPersistedData"],[446,34,618,33,"loadPersistedData"],[446,35,618,33],[447,10,618,33],[447,17,618,33,"_loadPersistedData"],[447,35,618,33],[447,36,618,33,"apply"],[447,41,618,33],[447,48,618,33,"arguments"],[447,57,618,33],[448,8,618,33],[449,8,618,33],[449,15,618,16,"loadPersistedData"],[449,32,618,33],[450,6,618,33],[451,6,659,2],[452,0,660,0],[453,0,661,0],[454,6,659,2],[455,4,659,2],[456,6,659,2,"key"],[456,9,659,2],[457,6,659,2,"value"],[457,11,659,2],[457,13,662,2],[457,22,662,10,"setupPeriodicFlush"],[457,40,662,28,"setupPeriodicFlush"],[457,41,662,28],[457,43,662,37],[458,8,662,37],[458,12,662,37,"_this2"],[458,18,662,37],[459,8,663,4,"setInterval"],[459,19,663,15],[459,20,663,16],[459,32,663,22],[460,10,664,6],[460,14,664,10,"_this2"],[460,20,664,14],[460,21,664,15,"eventQueue"],[460,31,664,25],[460,32,664,26,"length"],[460,38,664,32],[460,41,664,35],[460,42,664,36],[460,44,664,38],[461,12,665,8,"_this2"],[461,18,665,12],[461,19,665,13,"flush"],[461,24,665,18],[461,25,665,19],[461,26,665,20],[462,10,666,6],[463,8,667,4],[463,9,667,5],[463,11,667,7],[463,15,667,7,"getAnalyticsConfig"],[463,44,667,25],[463,46,667,26],[463,47,667,27],[463,48,667,28,"flushInterval"],[463,61,667,41],[463,62,667,42],[464,6,668,2],[466,6,670,2],[467,0,671,0],[468,0,672,0],[469,4,670,2],[470,6,670,2,"key"],[470,9,670,2],[471,6,670,2,"value"],[471,11,670,2],[471,13,673,2],[471,22,673,10,"setupSessionManagement"],[471,44,673,32,"setupSessionManagement"],[471,45,673,32],[471,47,673,41],[472,8,673,41],[472,12,673,41,"_this3"],[472,18,673,41],[473,8,674,4],[474,8,675,4,"setInterval"],[474,19,675,15],[474,20,675,16],[474,32,675,22],[475,10,676,6],[475,14,676,12,"timeSinceLastActivity"],[475,35,676,33],[475,38,676,36,"Date"],[475,42,676,40],[475,43,676,41,"now"],[475,46,676,44],[475,47,676,45],[475,48,676,46],[475,51,676,49,"_this3"],[475,57,676,53],[475,58,676,54,"lastActivityTime"],[475,74,676,70],[476,10,677,6],[476,14,677,10,"timeSinceLastActivity"],[476,35,677,31],[476,38,677,34],[476,42,677,34,"getAnalyticsConfig"],[476,71,677,52],[476,73,677,53],[476,74,677,54],[476,75,677,55,"sessionTimeout"],[476,89,677,69],[476,91,677,71],[477,12,678,8,"_this3"],[477,18,678,12],[477,19,678,13,"startNewSession"],[477,34,678,28],[477,35,678,29],[477,36,678,30],[478,10,679,6],[479,8,680,4],[479,9,680,5],[479,11,680,7],[479,16,680,12],[479,17,680,13],[479,18,680,14],[479,19,680,15],[480,6,681,2],[482,6,683,2],[483,0,684,0],[484,0,685,0],[485,4,683,2],[486,6,683,2,"key"],[486,9,683,2],[487,6,683,2,"value"],[487,11,683,2],[488,8,683,2],[488,12,683,2,"_startNewSession"],[488,28,683,2],[488,35,683,2,"_asyncToGenerator2"],[488,53,683,2],[488,54,683,2,"default"],[488,61,683,2],[488,63,686,2],[488,76,686,49],[489,10,687,4],[489,14,687,10,"oldSessionId"],[489,26,687,22],[489,29,687,25],[489,33,687,29],[489,34,687,30,"config"],[489,40,687,36],[489,41,687,37,"sessionId"],[489,50,687,46],[490,10,688,4],[490,14,688,8],[490,15,688,9,"config"],[490,21,688,15],[490,22,688,16,"sessionId"],[490,31,688,25],[490,34,688,28],[490,38,688,32],[490,39,688,33,"generateSessionId"],[490,56,688,50],[490,57,688,51],[490,58,688,52],[491,10,689,4],[491,14,689,8],[491,15,689,9,"sessionStartTime"],[491,31,689,25],[491,34,689,28,"Date"],[491,38,689,32],[491,39,689,33,"now"],[491,42,689,36],[491,43,689,37],[491,44,689,38],[492,10,690,4],[492,14,690,8],[492,15,690,9,"lastActivityTime"],[492,31,690,25],[492,34,690,28,"Date"],[492,38,690,32],[492,39,690,33,"now"],[492,42,690,36],[492,43,690,37],[492,44,690,38],[493,10,692,4],[493,16,692,10,"AsyncStorage"],[493,37,692,22],[493,38,692,23,"setItem"],[493,45,692,30],[493,46,692,31,"AnalyticsService"],[493,62,692,47],[493,63,692,48,"SESSION_ID_KEY"],[493,77,692,62],[493,79,692,64],[493,83,692,68],[493,84,692,69,"config"],[493,90,692,75],[493,91,692,76,"sessionId"],[493,100,692,85],[493,101,692,86],[494,10,694,4],[494,14,694,8],[494,18,694,12],[494,19,694,13,"hasConsent"],[494,29,694,23],[494,30,694,24],[494,31,694,25],[494,33,694,27],[495,12,695,6],[495,16,695,10],[495,17,695,11,"track"],[495,22,695,16],[495,23,695,17],[495,40,695,34],[495,42,695,36],[496,14,696,8,"previous_session_id"],[496,33,696,27],[496,35,696,29,"oldSessionId"],[497,12,697,6],[497,13,697,7],[497,14,697,8],[498,10,698,4],[499,8,699,2],[499,9,699,3],[500,8,699,3],[500,17,686,16,"startNewSession"],[500,32,686,31,"startNewSession"],[500,33,686,31],[501,10,686,31],[501,17,686,31,"_startNewSession"],[501,33,686,31],[501,34,686,31,"apply"],[501,39,686,31],[501,46,686,31,"arguments"],[501,55,686,31],[502,8,686,31],[503,8,686,31],[503,15,686,16,"startNewSession"],[503,30,686,31],[504,6,686,31],[505,6,701,2],[506,0,702,0],[507,0,703,0],[508,6,701,2],[509,4,701,2],[510,6,701,2,"key"],[510,9,701,2],[511,6,701,2,"value"],[511,11,701,2],[512,8,701,2],[512,12,701,2,"_loadOfflineEvents"],[512,30,701,2],[512,37,701,2,"_asyncToGenerator2"],[512,55,701,2],[512,56,701,2,"default"],[512,63,701,2],[512,65,704,2],[512,78,704,51],[513,10,705,4],[513,14,705,8],[514,12,706,6],[514,16,706,12,"offlineEvents"],[514,29,706,25],[514,38,706,34,"AsyncStorage"],[514,59,706,46],[514,60,706,47,"getItem"],[514,67,706,54],[514,68,706,55,"AnalyticsService"],[514,84,706,71],[514,85,706,72,"OFFLINE_EVENTS_KEY"],[514,103,706,90],[514,104,706,91],[515,12,707,6],[515,16,707,10,"offlineEvents"],[515,29,707,23],[515,31,707,25],[516,14,707,25],[516,18,707,25,"_this$eventQueue2"],[516,35,707,25],[517,14,708,8],[517,18,708,14,"events"],[517,24,708,46],[517,27,708,49,"JSON"],[517,31,708,53],[517,32,708,54,"parse"],[517,37,708,59],[517,38,708,60,"offlineEvents"],[517,51,708,73],[517,52,708,74],[518,14,709,8],[518,15,709,8,"_this$eventQueue2"],[518,32,709,8],[518,39,709,12],[518,40,709,13,"eventQueue"],[518,50,709,23],[518,52,709,24,"unshift"],[518,59,709,31],[518,60,709,31,"apply"],[518,65,709,31],[518,66,709,31,"_this$eventQueue2"],[518,83,709,31],[518,89,709,31,"_toConsumableArray2"],[518,108,709,31],[518,109,709,31,"default"],[518,116,709,31],[518,118,709,35,"events"],[518,124,709,41],[518,126,709,42],[519,14,710,8],[519,20,710,14,"AsyncStorage"],[519,41,710,26],[519,42,710,27,"removeItem"],[519,52,710,37],[519,53,710,38,"AnalyticsService"],[519,69,710,54],[519,70,710,55,"OFFLINE_EVENTS_KEY"],[519,88,710,73],[519,89,710,74],[520,14,711,8,"EventLogger"],[520,38,711,19],[520,39,711,20,"info"],[520,43,711,24],[520,44,711,25],[520,55,711,36],[520,57,711,38],[520,80,711,61],[520,82,711,63],[521,16,711,65,"count"],[521,21,711,70],[521,23,711,72,"events"],[521,29,711,78],[521,30,711,79,"length"],[522,14,711,86],[522,15,711,87],[522,16,711,88],[523,12,712,6],[524,10,713,4],[524,11,713,5],[524,12,713,6],[524,19,713,13,"error"],[524,24,713,18],[524,26,713,20],[525,12,714,6,"EventLogger"],[525,36,714,17],[525,37,714,18,"error"],[525,42,714,23],[525,43,714,24],[525,54,714,35],[525,56,714,37],[525,87,714,68],[525,89,714,70,"error"],[525,94,714,84],[525,95,714,85],[526,10,715,4],[527,8,716,2],[527,9,716,3],[528,8,716,3],[528,17,704,16,"loadOfflineEvents"],[528,34,704,33,"loadOfflineEvents"],[528,35,704,33],[529,10,704,33],[529,17,704,33,"_loadOfflineEvents"],[529,35,704,33],[529,36,704,33,"apply"],[529,41,704,33],[529,48,704,33,"arguments"],[529,57,704,33],[530,8,704,33],[531,8,704,33],[531,15,704,16,"loadOfflineEvents"],[531,32,704,33],[532,6,704,33],[533,6,718,2],[534,0,719,0],[535,0,720,0],[536,6,718,2],[537,4,718,2],[538,6,718,2,"key"],[538,9,718,2],[539,6,718,2,"value"],[539,11,718,2],[540,8,718,2],[540,12,718,2,"_storeOfflineEvents"],[540,31,718,2],[540,38,718,2,"_asyncToGenerator2"],[540,56,718,2],[540,57,718,2,"default"],[540,64,718,2],[540,66,721,2],[540,77,721,35,"events"],[540,83,721,67],[540,85,721,84],[541,10,722,4],[541,14,722,8],[542,12,723,6],[542,16,723,12,"existingEvents"],[542,30,723,26],[542,39,723,35,"AsyncStorage"],[542,60,723,47],[542,61,723,48,"getItem"],[542,68,723,55],[542,69,723,56,"AnalyticsService"],[542,85,723,72],[542,86,723,73,"OFFLINE_EVENTS_KEY"],[542,104,723,91],[542,105,723,92],[543,12,724,6],[543,16,724,12,"allEvents"],[543,25,724,21],[543,28,724,24,"existingEvents"],[543,42,724,38],[543,45,724,41,"JSON"],[543,49,724,45],[543,50,724,46,"parse"],[543,55,724,51],[543,56,724,52,"existingEvents"],[543,70,724,66],[543,71,724,67],[543,74,724,70],[543,76,724,72],[544,12,726,6,"allEvents"],[544,21,726,15],[544,22,726,16,"push"],[544,26,726,20],[544,27,726,20,"apply"],[544,32,726,20],[544,33,726,6,"allEvents"],[544,42,726,15],[544,48,726,15,"_toConsumableArray2"],[544,67,726,15],[544,68,726,15,"default"],[544,75,726,15],[544,77,726,24,"events"],[544,83,726,30],[544,85,726,31],[546,12,728,6],[547,12,729,6],[547,16,729,12,"maxOfflineEvents"],[547,32,729,28],[547,35,729,31],[547,39,729,31,"getAnalyticsConfig"],[547,68,729,49],[547,70,729,50],[547,71,729,51],[547,72,729,52,"maxOfflineEvents"],[547,88,729,68],[548,12,730,6],[548,16,730,10,"allEvents"],[548,25,730,19],[548,26,730,20,"length"],[548,32,730,26],[548,35,730,29,"maxOfflineEvents"],[548,51,730,45],[548,53,730,47],[549,14,731,8,"allEvents"],[549,23,731,17],[549,24,731,18,"splice"],[549,30,731,24],[549,31,731,25],[549,32,731,26],[549,34,731,28,"allEvents"],[549,43,731,37],[549,44,731,38,"length"],[549,50,731,44],[549,53,731,47,"maxOfflineEvents"],[549,69,731,63],[549,70,731,64],[550,12,732,6],[551,12,734,6],[551,18,734,12,"AsyncStorage"],[551,39,734,24],[551,40,734,25,"setItem"],[551,47,734,32],[551,48,734,33,"AnalyticsService"],[551,64,734,49],[551,65,734,50,"OFFLINE_EVENTS_KEY"],[551,83,734,68],[551,85,734,70,"JSON"],[551,89,734,74],[551,90,734,75,"stringify"],[551,99,734,84],[551,100,734,85,"allEvents"],[551,109,734,94],[551,110,734,95],[551,111,734,96],[552,10,735,4],[552,11,735,5],[552,12,735,6],[552,19,735,13,"error"],[552,24,735,18],[552,26,735,20],[553,12,736,6,"EventLogger"],[553,36,736,17],[553,37,736,18,"error"],[553,42,736,23],[553,43,736,24],[553,54,736,35],[553,56,736,37],[553,88,736,69],[553,90,736,71,"error"],[553,95,736,85],[553,96,736,86],[554,10,737,4],[555,8,738,2],[555,9,738,3],[556,8,738,3],[556,17,721,16,"storeOfflineEvents"],[556,35,721,34,"storeOfflineEvents"],[556,36,721,34,"_x5"],[556,39,721,34],[557,10,721,34],[557,17,721,34,"_storeOfflineEvents"],[557,36,721,34],[557,37,721,34,"apply"],[557,42,721,34],[557,49,721,34,"arguments"],[557,58,721,34],[558,8,721,34],[559,8,721,34],[559,15,721,16,"storeOfflineEvents"],[559,33,721,34],[560,6,721,34],[561,6,740,2],[562,0,741,0],[563,0,742,0],[564,6,740,2],[565,4,740,2],[566,6,740,2,"key"],[566,9,740,2],[567,6,740,2,"value"],[567,11,740,2],[568,8,740,2],[568,12,740,2,"_sendEventBatch"],[568,27,740,2],[568,34,740,2,"_asyncToGenerator2"],[568,52,740,2],[568,53,740,2,"default"],[568,60,740,2],[568,62,743,2],[568,73,743,31,"batch"],[568,78,743,48],[568,80,743,65],[569,10,744,4],[569,14,744,8],[570,12,745,6],[571,12,746,6],[573,12,748,6],[573,16,748,12,"promises"],[573,24,748,20],[573,27,748,23,"batch"],[573,32,748,28],[573,33,748,29,"events"],[573,39,748,35],[573,40,748,36,"map"],[573,43,748,39],[574,14,748,39],[574,18,748,39,"_ref"],[574,22,748,39],[574,29,748,39,"_asyncToGenerator2"],[574,47,748,39],[574,48,748,39,"default"],[574,55,748,39],[574,57,748,40],[574,68,748,47,"event"],[574,73,748,52],[574,75,748,57],[575,16,749,8],[575,20,749,8,"_yield$supabase$from$"],[575,41,749,8],[575,50,749,32,"supabase"],[575,66,749,40],[575,67,750,11,"from"],[575,71,750,15],[575,72,750,16],[575,87,750,31],[575,88,750,32],[575,89,751,11,"insert"],[575,95,751,17],[575,96,751,18],[576,20,752,12,"event_name"],[576,30,752,22],[576,32,752,24,"event"],[576,37,752,29],[576,38,752,30,"event_name"],[576,48,752,40],[577,20,753,12,"properties"],[577,30,753,22],[577,32,753,24,"event"],[577,37,753,29],[577,38,753,30,"properties"],[577,48,753,40],[578,20,754,12,"user_properties"],[578,35,754,27],[578,37,754,29,"event"],[578,42,754,34],[578,43,754,35,"user_properties"],[578,58,754,50],[579,20,755,12,"timestamp"],[579,29,755,21],[579,31,755,23,"event"],[579,36,755,28],[579,37,755,29,"timestamp"],[579,46,755,38],[580,20,756,12,"session_id"],[580,30,756,22],[580,32,756,24,"event"],[580,37,756,29],[580,38,756,30,"session_id"],[580,48,756,40],[581,20,757,12,"user_id"],[581,27,757,19],[581,29,757,21,"event"],[581,34,757,26],[581,35,757,27,"user_id"],[581,42,757,34],[582,20,758,12,"anonymous_id"],[582,32,758,24],[582,34,758,26,"event"],[582,39,758,31],[582,40,758,32,"anonymous_id"],[582,52,758,44],[583,20,759,12,"context"],[583,27,759,19],[583,29,759,21,"event"],[583,34,759,26],[583,35,759,27,"context"],[583,42,759,34],[584,20,760,12,"batch_id"],[584,28,760,20],[584,30,760,22,"batch"],[584,35,760,27],[584,36,760,28,"batch_id"],[585,18,761,10],[585,19,761,11],[585,20,761,12],[586,18,749,16,"error"],[586,23,749,21],[586,26,749,21,"_yield$supabase$from$"],[586,47,749,21],[586,48,749,16,"error"],[586,53,749,21],[587,16,763,8],[587,20,763,12,"error"],[587,25,763,17],[587,27,763,19],[588,18,764,10],[588,24,764,16,"error"],[588,29,764,21],[589,16,765,8],[590,14,766,6],[590,15,766,7],[591,14,766,7],[591,31,766,7,"_x7"],[591,34,766,7],[592,16,766,7],[592,23,766,7,"_ref"],[592,27,766,7],[592,28,766,7,"apply"],[592,33,766,7],[592,40,766,7,"arguments"],[592,49,766,7],[593,14,766,7],[594,12,766,7],[594,16,766,8],[595,12,768,6],[595,18,768,12,"Promise"],[595,25,768,19],[595,26,768,20,"all"],[595,29,768,23],[595,30,768,24,"promises"],[595,38,768,32],[595,39,768,33],[596,10,769,4],[596,11,769,5],[596,12,769,6],[596,19,769,13,"error"],[596,24,769,18],[596,26,769,20],[597,12,770,6],[598,12,771,6,"EventLogger"],[598,36,771,17],[598,37,771,18,"info"],[598,41,771,22],[598,42,771,23],[598,53,771,34],[598,55,771,36],[598,97,771,78],[598,99,771,80],[599,14,772,8,"batch_id"],[599,22,772,16],[599,24,772,18,"batch"],[599,29,772,23],[599,30,772,24,"batch_id"],[599,38,772,32],[600,14,773,8,"event_count"],[600,25,773,19],[600,27,773,21,"batch"],[600,32,773,26],[600,33,773,27,"events"],[600,39,773,33],[600,40,773,34,"length"],[600,46,773,40],[601,14,774,8,"error"],[601,19,774,13],[601,21,774,15,"error"],[602,12,775,6],[602,13,775,7],[602,14,775,8],[603,12,776,6],[603,18,776,12,"error"],[603,23,776,17],[604,10,777,4],[605,8,778,2],[605,9,778,3],[606,8,778,3],[606,17,743,16,"sendEventBatch"],[606,31,743,30,"sendEventBatch"],[606,32,743,30,"_x6"],[606,35,743,30],[607,10,743,30],[607,17,743,30,"_sendEventBatch"],[607,32,743,30],[607,33,743,30,"apply"],[607,38,743,30],[607,45,743,30,"arguments"],[607,54,743,30],[608,8,743,30],[609,8,743,30],[609,15,743,16,"sendEventBatch"],[609,29,743,30],[610,6,743,30],[611,6,780,2],[612,0,781,0],[613,0,782,0],[614,6,780,2],[615,4,780,2],[616,6,780,2,"key"],[616,9,780,2],[617,6,780,2,"value"],[617,11,780,2],[618,8,780,2],[618,12,780,2,"_checkNetworkStatus"],[618,31,780,2],[618,38,780,2,"_asyncToGenerator2"],[618,56,780,2],[618,57,780,2,"default"],[618,64,780,2],[618,66,783,2],[618,79,783,55],[619,10,784,4],[620,10,785,4],[621,10,786,4],[621,17,786,11],[621,21,786,15],[622,8,787,2],[622,9,787,3],[623,8,787,3],[623,17,783,16,"checkNetworkStatus"],[623,35,783,34,"checkNetworkStatus"],[623,36,783,34],[624,10,783,34],[624,17,783,34,"_checkNetworkStatus"],[624,36,783,34],[624,37,783,34,"apply"],[624,42,783,34],[624,49,783,34,"arguments"],[624,58,783,34],[625,8,783,34],[626,8,783,34],[626,15,783,16,"checkNetworkStatus"],[626,33,783,34],[627,6,783,34],[628,6,789,2],[629,0,790,0],[630,0,791,0],[631,6,789,2],[632,4,789,2],[633,6,789,2,"key"],[633,9,789,2],[634,6,789,2,"value"],[634,11,789,2],[634,13,792,2],[634,22,792,10,"generateSessionId"],[634,39,792,27,"generateSessionId"],[634,40,792,27],[634,42,792,38],[635,8,793,4],[635,15,793,11],[635,18,793,14,"Date"],[635,22,793,18],[635,23,793,19,"now"],[635,26,793,22],[635,27,793,23],[635,28,793,24],[635,32,793,28,"Math"],[635,36,793,32],[635,37,793,33,"random"],[635,43,793,39],[635,44,793,40],[635,45,793,41],[635,46,793,42,"toString"],[635,54,793,50],[635,55,793,51],[635,57,793,53],[635,58,793,54],[635,59,793,55,"substr"],[635,65,793,61],[635,66,793,62],[635,67,793,63],[635,69,793,65],[635,70,793,66],[635,71,793,67],[635,73,793,69],[636,6,794,2],[638,6,796,2],[639,0,797,0],[640,0,798,0],[641,4,796,2],[642,6,796,2,"key"],[642,9,796,2],[643,6,796,2,"value"],[643,11,796,2],[643,13,799,2],[643,22,799,10,"generateAnonymousId"],[643,41,799,29,"generateAnonymousId"],[643,42,799,29],[643,44,799,40],[644,8,800,4],[644,15,800,11],[644,23,800,19,"Date"],[644,27,800,23],[644,28,800,24,"now"],[644,31,800,27],[644,32,800,28],[644,33,800,29],[644,37,800,33,"Math"],[644,41,800,37],[644,42,800,38,"random"],[644,48,800,44],[644,49,800,45],[644,50,800,46],[644,51,800,47,"toString"],[644,59,800,55],[644,60,800,56],[644,62,800,58],[644,63,800,59],[644,64,800,60,"substr"],[644,70,800,66],[644,71,800,67],[644,72,800,68],[644,74,800,70],[644,75,800,71],[644,76,800,72],[644,78,800,74],[645,6,801,2],[647,6,803,2],[648,0,804,0],[649,0,805,0],[650,4,803,2],[651,6,803,2,"key"],[651,9,803,2],[652,6,803,2,"value"],[652,11,803,2],[652,13,806,2],[652,22,806,10,"generateBatchId"],[652,37,806,25,"generateBatchId"],[652,38,806,25],[652,40,806,36],[653,8,807,4],[653,15,807,11],[653,24,807,20,"Date"],[653,28,807,24],[653,29,807,25,"now"],[653,32,807,28],[653,33,807,29],[653,34,807,30],[653,38,807,34,"Math"],[653,42,807,38],[653,43,807,39,"random"],[653,49,807,45],[653,50,807,46],[653,51,807,47],[653,52,807,48,"toString"],[653,60,807,56],[653,61,807,57],[653,63,807,59],[653,64,807,60],[653,65,807,61,"substr"],[653,71,807,67],[653,72,807,68],[653,73,807,69],[653,75,807,71],[653,76,807,72],[653,77,807,73],[653,79,807,75],[654,6,808,2],[656,6,810,2],[657,0,811,0],[658,0,812,0],[659,4,810,2],[660,6,810,2,"key"],[660,9,810,2],[661,6,810,2,"value"],[661,11,810,2],[661,13,151,2],[661,22,151,16,"getInstance"],[661,33,151,27,"getInstance"],[661,34,151,27],[661,36,151,48],[662,8,152,4],[662,12,152,8],[662,13,152,9,"AnalyticsService"],[662,29,152,25],[662,30,152,26,"instance"],[662,38,152,34],[662,40,152,36],[663,10,153,6,"AnalyticsService"],[663,26,153,22],[663,27,153,23,"instance"],[663,35,153,31],[663,38,153,34],[663,42,153,38,"AnalyticsService"],[663,58,153,54],[663,59,153,55],[663,60,153,56],[664,8,154,4],[665,8,155,4],[665,15,155,11,"AnalyticsService"],[665,31,155,27],[665,32,155,28,"instance"],[665,40,155,36],[666,6,156,2],[667,4,156,3],[668,6,156,3,"key"],[668,9,156,3],[669,6,156,3,"value"],[669,11,156,3],[670,8,156,3],[670,12,156,3,"_trackEvent"],[670,23,156,3],[670,30,156,3,"_asyncToGenerator2"],[670,48,156,3],[670,49,156,3,"default"],[670,56,156,3],[670,58,419,2],[670,69,419,26,"event"],[670,74,419,47],[670,76,419,67],[671,10,420,4],[671,14,420,8],[672,12,421,6],[672,16,421,12,"analytics"],[672,25,421,21],[672,28,421,24,"AnalyticsService"],[672,44,421,40],[672,45,421,41,"getInstance"],[672,56,421,52],[672,57,421,53],[672,58,421,54],[674,12,423,6],[675,12,424,6],[675,16,424,12,"eventName"],[675,25,424,21],[675,28,424,24],[675,42,424,38,"event"],[675,47,424,43],[675,48,424,44,"event_type"],[675,58,424,54],[675,60,424,56],[676,12,425,6],[676,16,425,12,"properties"],[676,26,425,22],[676,29,425,22,"Object"],[676,35,425,22],[676,36,425,22,"assign"],[676,42,425,22],[677,14,426,8,"automation_id"],[677,27,426,21],[677,29,426,23,"event"],[677,34,426,28],[677,35,426,29,"automation_id"],[677,48,426,42],[678,14,427,8,"event_type"],[678,24,427,18],[678,26,427,20,"event"],[678,31,427,25],[678,32,427,26,"event_type"],[679,12,427,36],[679,15,428,11,"event"],[679,20,428,16],[679,21,428,17,"event_data"],[679,31,428,27],[679,32,429,7],[680,12,431,6,"analytics"],[680,21,431,15],[680,22,431,16,"track"],[680,27,431,21],[680,28,431,22,"eventName"],[680,37,431,31],[680,39,431,33,"properties"],[680,49,431,43],[680,50,431,44],[682,12,433,6],[683,12,434,6],[683,16,434,6,"_yield$supabase$auth$"],[683,37,434,6],[683,46,434,39,"supabase"],[683,62,434,47],[683,63,434,48,"auth"],[683,67,434,52],[683,68,434,53,"getUser"],[683,75,434,60],[683,76,434,61],[683,77,434,62],[684,14,434,22,"user"],[684,18,434,26],[684,21,434,26,"_yield$supabase$auth$"],[684,42,434,26],[684,43,434,14,"data"],[684,47,434,18],[684,48,434,22,"user"],[684,52,434,26],[685,12,436,6],[685,16,436,12,"eventData"],[685,25,436,21],[685,28,436,24],[686,14,437,8,"automation_id"],[686,27,437,21],[686,29,437,23,"event"],[686,34,437,28],[686,35,437,29,"automation_id"],[686,48,437,42],[687,14,438,8,"event_type"],[687,24,438,18],[687,26,438,20,"event"],[687,31,438,25],[687,32,438,26,"event_type"],[687,42,438,36],[688,14,439,8,"event_data"],[688,24,439,18],[688,26,439,20,"event"],[688,31,439,25],[688,32,439,26,"event_data"],[688,42,439,36],[688,46,439,40],[688,47,439,41],[688,48,439,42],[689,14,440,8,"user_id"],[689,21,440,15],[689,23,440,17],[689,24,440,17,"user"],[689,28,440,21],[689,48,440,17,"user"],[689,52,440,21],[689,53,440,23,"id"],[689,55,440,25],[689,60,440,29,"event"],[689,65,440,34],[689,66,440,35,"user_id"],[689,73,440,42],[690,14,441,8,"session_id"],[690,24,441,18],[690,26,441,20,"event"],[690,31,441,25],[690,32,441,26,"session_id"],[690,42,441,36],[690,46,441,40,"analytics"],[690,55,441,49],[690,56,441,50,"generateSessionId"],[690,73,441,67],[690,74,441,68],[690,75,441,69],[691,14,442,8,"user_agent"],[691,24,442,18],[691,26,442,20,"event"],[691,31,442,25],[691,32,442,26,"user_agent"],[691,42,442,36],[691,47,442,41],[691,54,442,48,"navigator"],[691,63,442,57],[691,68,442,62],[691,79,442,73],[691,82,442,76,"navigator"],[691,91,442,85],[691,92,442,86,"userAgent"],[691,101,442,95],[691,104,442,98],[691,116,442,110],[691,117,442,111],[692,14,443,8,"created_at"],[692,24,443,18],[692,26,443,20],[692,30,443,24,"Date"],[692,34,443,28],[692,35,443,29],[692,36,443,30],[692,37,443,31,"toISOString"],[692,48,443,42],[692,49,443,43],[693,12,444,6],[693,13,444,7],[694,12,446,6],[694,16,446,6,"_yield$supabase$from$2"],[694,38,446,6],[694,47,446,30,"supabase"],[694,63,446,38],[694,64,447,9,"from"],[694,68,447,13],[694,69,447,14],[694,91,447,36],[694,92,447,37],[694,93,448,9,"insert"],[694,99,448,15],[694,100,448,16,"eventData"],[694,109,448,25],[694,110,448,26],[695,14,446,14,"error"],[695,19,446,19],[695,22,446,19,"_yield$supabase$from$2"],[695,44,446,19],[695,45,446,14,"error"],[695,50,446,19],[696,12,450,6],[696,16,450,10,"error"],[696,21,450,15],[696,23,450,17],[697,14,451,8,"EventLogger"],[697,38,451,19],[697,39,451,20,"error"],[697,44,451,25],[697,45,451,26],[697,56,451,37],[697,58,451,39],[697,98,451,79],[697,100,451,81,"error"],[697,105,451,95],[697,106,451,96],[698,14,452,8],[698,21,452,15],[698,26,452,20],[699,12,453,6],[700,12,455,6],[700,19,455,13],[700,23,455,17],[701,10,456,4],[701,11,456,5],[701,12,456,6],[701,19,456,13,"error"],[701,24,456,18],[701,26,456,20],[702,12,457,6,"EventLogger"],[702,36,457,17],[702,37,457,18,"error"],[702,42,457,23],[702,43,457,24],[702,54,457,35],[702,56,457,37],[702,89,457,70],[702,91,457,72,"error"],[702,96,457,86],[702,97,457,87],[703,12,458,6],[703,19,458,13],[703,24,458,18],[704,10,459,4],[705,8,460,2],[705,9,460,3],[706,8,460,3],[706,17,419,15,"trackEvent"],[706,27,419,25,"trackEvent"],[706,28,419,25,"_x8"],[706,31,419,25],[707,10,419,25],[707,17,419,25,"_trackEvent"],[707,28,419,25],[707,29,419,25,"apply"],[707,34,419,25],[707,41,419,25,"arguments"],[707,50,419,25],[708,8,419,25],[709,8,419,25],[709,15,419,15,"trackEvent"],[709,25,419,25],[710,6,419,25],[711,6,462,2],[712,0,463,0],[713,0,464,0],[714,6,462,2],[715,4,462,2],[716,6,462,2,"key"],[716,9,462,2],[717,6,462,2,"value"],[717,11,462,2],[718,8,462,2],[718,12,462,2,"_getAutomationStats"],[718,31,462,2],[718,38,462,2,"_asyncToGenerator2"],[718,56,462,2],[718,57,462,2,"default"],[718,64,462,2],[718,66,465,2],[718,77,465,34,"automationId"],[718,89,465,54],[718,91,465,81],[719,10,466,4],[719,14,466,8],[720,12,467,6],[721,12,468,6],[721,16,468,6,"_yield$supabase$from$3"],[721,38,468,6],[721,47,468,47,"supabase"],[721,63,468,55],[721,64,469,9,"from"],[721,68,469,13],[721,69,469,14],[721,91,469,36],[721,92,469,37],[721,93,470,9,"select"],[721,99,470,15],[721,100,470,16],[721,148,470,64],[721,149,470,65],[721,150,471,9,"eq"],[721,152,471,11],[721,153,471,12],[721,168,471,27],[721,170,471,29,"automationId"],[721,182,471,41],[721,183,471,42],[722,14,468,20,"analytics"],[722,23,468,29],[722,26,468,29,"_yield$supabase$from$3"],[722,48,468,29],[722,49,468,14,"data"],[722,53,468,18],[723,14,468,31,"error"],[723,19,468,36],[723,22,468,36,"_yield$supabase$from$3"],[723,44,468,36],[723,45,468,31,"error"],[723,50,468,36],[724,12,473,6],[724,16,473,10,"error"],[724,21,473,15],[724,23,473,17],[724,29,473,23,"error"],[724,34,473,28],[726,12,475,6],[727,12,476,6],[727,16,476,12,"stats"],[727,21,476,33],[727,24,476,36],[728,14,477,8,"views"],[728,19,477,13],[728,21,477,15],[728,22,477,15,"analytics"],[728,31,477,24],[728,51,477,15,"analytics"],[728,60,477,24],[728,61,477,26,"filter"],[728,67,477,32],[728,68,477,33],[728,78,477,33,"a"],[728,79,477,34],[729,16,477,34],[729,23,477,38,"a"],[729,24,477,39],[729,25,477,40,"event_type"],[729,35,477,50],[729,40,477,55],[729,46,477,61],[730,14,477,61],[730,16,477,62],[730,17,477,63,"length"],[730,23,477,69],[730,28,477,73],[730,29,477,74],[731,14,478,8,"executions"],[731,24,478,18],[731,26,478,20],[731,27,478,20,"analytics"],[731,36,478,29],[731,56,478,20,"analytics"],[731,65,478,29],[731,66,478,31,"filter"],[731,72,478,37],[731,73,478,38],[731,83,478,38,"a"],[731,84,478,39],[732,16,478,39],[732,23,478,43,"a"],[732,24,478,44],[732,25,478,45,"event_type"],[732,35,478,55],[732,40,478,60],[732,51,478,71],[733,14,478,71],[733,16,478,72],[733,17,478,73,"length"],[733,23,478,79],[733,28,478,83],[733,29,478,84],[734,14,479,8,"shares"],[734,20,479,14],[734,22,479,16],[734,23,479,16,"analytics"],[734,32,479,25],[734,52,479,16,"analytics"],[734,61,479,25],[734,62,479,27,"filter"],[734,68,479,33],[734,69,479,34],[734,79,479,34,"a"],[734,80,479,35],[735,16,479,35],[735,23,479,39,"a"],[735,24,479,40],[735,25,479,41,"event_type"],[735,35,479,51],[735,40,479,56],[735,47,479,63],[736,14,479,63],[736,16,479,64],[736,17,479,65,"length"],[736,23,479,71],[736,28,479,75],[736,29,479,76],[737,14,480,8,"downloads"],[737,23,480,17],[737,25,480,19],[737,26,480,19,"analytics"],[737,35,480,28],[737,55,480,19,"analytics"],[737,64,480,28],[737,65,480,30,"filter"],[737,71,480,36],[737,72,480,37],[737,82,480,37,"a"],[737,83,480,38],[738,16,480,38],[738,23,480,42,"a"],[738,24,480,43],[738,25,480,44,"event_type"],[738,35,480,54],[738,40,480,59],[738,50,480,69],[739,14,480,69],[739,16,480,70],[739,17,480,71,"length"],[739,23,480,77],[739,28,480,81],[739,29,480,82],[740,14,481,8,"likes"],[740,19,481,13],[740,21,481,15],[740,22,481,15,"analytics"],[740,31,481,24],[740,51,481,15,"analytics"],[740,60,481,24],[740,61,481,26,"filter"],[740,67,481,32],[740,68,481,33],[740,78,481,33,"a"],[740,79,481,34],[741,16,481,34],[741,23,481,38,"a"],[741,24,481,39],[741,25,481,40,"event_type"],[741,35,481,50],[741,40,481,55],[741,46,481,61],[742,14,481,61],[742,16,481,62],[742,17,481,63,"length"],[742,23,481,69],[742,28,481,73],[742,29,481,74],[743,14,482,8,"comments"],[743,22,482,16],[743,24,482,18],[743,25,482,18,"analytics"],[743,34,482,27],[743,54,482,18,"analytics"],[743,63,482,27],[743,64,482,29,"filter"],[743,70,482,35],[743,71,482,36],[743,81,482,36,"a"],[743,82,482,37],[744,16,482,37],[744,23,482,41,"a"],[744,24,482,42],[744,25,482,43,"event_type"],[744,35,482,53],[744,40,482,58],[744,49,482,67],[745,14,482,67],[745,16,482,68],[745,17,482,69,"length"],[745,23,482,75],[745,28,482,79],[745,29,482,80],[746,14,483,8,"unique_users"],[746,26,483,20],[746,28,483,22],[746,32,483,26,"Set"],[746,35,483,29],[746,36,483,30,"analytics"],[746,45,483,39],[746,65,483,30,"analytics"],[746,74,483,39],[746,75,483,41,"map"],[746,78,483,44],[746,79,483,45],[746,89,483,45,"a"],[746,90,483,46],[747,16,483,46],[747,23,483,50,"a"],[747,24,483,51],[747,25,483,52,"user_id"],[747,32,483,59],[748,14,483,59],[748,16,483,60],[748,17,483,61,"filter"],[748,23,483,67],[748,24,483,68,"Boolean"],[748,31,483,75],[748,32,483,76],[748,33,483,77],[748,34,483,78,"size"],[748,38,483,82],[748,42,483,86],[748,43,483,87],[749,14,484,8,"last_activity"],[749,27,484,21],[749,29,484,23,"analytics"],[749,38,484,32],[749,50,484,23,"analytics"],[749,59,484,32],[749,60,484,34,"length"],[749,66,484,40],[749,69,484,43,"analytics"],[749,78,484,52],[749,79,484,53,"analytics"],[749,88,484,62],[749,89,484,63,"length"],[749,95,484,69],[749,98,484,72],[749,99,484,73],[749,100,484,74],[749,101,484,75,"created_at"],[749,111,484,85],[749,114,484,88],[749,118,484,92],[750,14,485,8,"daily_stats"],[750,25,485,19],[750,27,485,21],[750,31,485,25],[750,32,485,26,"generateDailyStats"],[750,50,485,44],[750,51,485,45,"analytics"],[750,60,485,54],[750,64,485,58],[750,66,485,60],[750,67,485,61],[751,14,486,8,"top_countries"],[751,27,486,21],[751,29,486,23],[751,33,486,27],[751,34,486,28,"generateCountryStats"],[751,54,486,48],[751,55,486,49,"analytics"],[751,64,486,58],[751,68,486,62],[751,70,486,64],[752,12,487,6],[752,13,487,7],[753,12,489,6],[753,19,489,13,"stats"],[753,24,489,18],[754,10,490,4],[754,11,490,5],[754,12,490,6],[754,19,490,13,"error"],[754,24,490,18],[754,26,490,20],[755,12,491,6,"EventLogger"],[755,36,491,17],[755,37,491,18,"error"],[755,42,491,23],[755,43,491,24],[755,54,491,35],[755,56,491,37],[755,88,491,69],[755,90,491,71,"error"],[755,95,491,85],[755,96,491,86],[756,12,492,6],[756,19,492,13],[757,14,493,8,"views"],[757,19,493,13],[757,21,493,15],[757,22,493,16],[758,14,494,8,"executions"],[758,24,494,18],[758,26,494,20],[758,27,494,21],[759,14,495,8,"shares"],[759,20,495,14],[759,22,495,16],[759,23,495,17],[760,14,496,8,"downloads"],[760,23,496,17],[760,25,496,19],[760,26,496,20],[761,14,497,8,"likes"],[761,19,497,13],[761,21,497,15],[761,22,497,16],[762,14,498,8,"comments"],[762,22,498,16],[762,24,498,18],[762,25,498,19],[763,14,499,8,"unique_users"],[763,26,499,20],[763,28,499,22],[763,29,499,23],[764,14,500,8,"last_activity"],[764,27,500,21],[764,29,500,23],[764,33,500,27],[765,14,501,8,"daily_stats"],[765,25,501,19],[765,27,501,21],[765,29,501,23],[766,14,502,8,"top_countries"],[766,27,502,21],[766,29,502,23],[767,12,503,6],[767,13,503,7],[768,10,504,4],[769,8,505,2],[769,9,505,3],[770,8,505,3],[770,17,465,15,"getAutomationStats"],[770,35,465,33,"getAutomationStats"],[770,36,465,33,"_x9"],[770,39,465,33],[771,10,465,33],[771,17,465,33,"_getAutomationStats"],[771,36,465,33],[771,37,465,33,"apply"],[771,42,465,33],[771,49,465,33,"arguments"],[771,58,465,33],[772,8,465,33],[773,8,465,33],[773,15,465,15,"getAutomationStats"],[773,33,465,33],[774,6,465,33],[775,6,507,2],[776,0,508,0],[777,0,509,0],[778,6,507,2],[779,4,507,2],[780,6,507,2,"key"],[780,9,507,2],[781,6,507,2,"value"],[781,11,507,2],[782,8,507,2],[782,12,507,2,"_trackView"],[782,22,507,2],[782,29,507,2,"_asyncToGenerator2"],[782,47,507,2],[782,48,507,2,"default"],[782,55,507,2],[782,57,510,2],[782,68,510,25,"automationId"],[782,80,510,45],[782,82,510,47,"metadata"],[782,90,510,77],[782,92,510,94],[783,10,511,4],[783,16,511,10],[783,20,511,14],[783,21,511,15,"trackEvent"],[783,31,511,25],[783,32,511,26],[784,12,512,6,"automation_id"],[784,25,512,19],[784,27,512,21,"automationId"],[784,39,512,33],[785,12,513,6,"event_type"],[785,22,513,16],[785,24,513,18],[785,30,513,24],[786,12,514,6,"event_data"],[786,22,514,16],[786,24,514,18,"metadata"],[787,10,515,4],[787,11,515,5],[787,12,515,6],[788,8,516,2],[788,9,516,3],[789,8,516,3],[789,17,510,15,"trackView"],[789,26,510,24,"trackView"],[789,27,510,24,"_x0"],[789,30,510,24],[789,32,510,24,"_x1"],[789,35,510,24],[790,10,510,24],[790,17,510,24,"_trackView"],[790,27,510,24],[790,28,510,24,"apply"],[790,33,510,24],[790,40,510,24,"arguments"],[790,49,510,24],[791,8,510,24],[792,8,510,24],[792,15,510,15,"trackView"],[792,24,510,24],[793,6,510,24],[794,6,518,2],[795,0,519,0],[796,0,520,0],[797,6,518,2],[798,4,518,2],[799,6,518,2,"key"],[799,9,518,2],[800,6,518,2,"value"],[800,11,518,2],[801,8,518,2],[801,12,518,2,"_trackExecution"],[801,27,518,2],[801,34,518,2,"_asyncToGenerator2"],[801,52,518,2],[801,53,518,2,"default"],[801,60,518,2],[801,62,521,2],[801,73,521,30,"automationId"],[801,85,521,50],[801,87,521,52,"result"],[801,93,521,79],[801,95,521,96],[802,10,522,4],[802,16,522,10],[802,20,522,14],[802,21,522,15,"trackEvent"],[802,31,522,25],[802,32,522,26],[803,12,523,6,"automation_id"],[803,25,523,19],[803,27,523,21,"automationId"],[803,39,523,33],[804,12,524,6,"event_type"],[804,22,524,16],[804,24,524,18],[804,35,524,29],[805,12,525,6,"event_data"],[805,22,525,16],[805,24,525,18],[806,14,526,8,"success"],[806,21,526,15],[806,23,526,17,"result"],[806,29,526,23],[806,30,526,24,"success"],[806,37,526,31],[807,14,527,8,"execution_time"],[807,28,527,22],[807,30,527,24,"result"],[807,36,527,30],[807,37,527,31,"executionTime"],[807,50,527,44],[808,14,528,8,"steps_completed"],[808,29,528,23],[808,31,528,25,"result"],[808,37,528,31],[808,38,528,32,"stepsCompleted"],[808,52,528,46],[809,14,529,8,"total_steps"],[809,25,529,19],[809,27,529,21,"result"],[809,33,529,27],[809,34,529,28,"totalSteps"],[810,12,530,6],[811,10,531,4],[811,11,531,5],[811,12,531,6],[812,8,532,2],[812,9,532,3],[813,8,532,3],[813,17,521,15,"trackExecution"],[813,31,521,29,"trackExecution"],[813,32,521,29,"_x10"],[813,36,521,29],[813,38,521,29,"_x11"],[813,42,521,29],[814,10,521,29],[814,17,521,29,"_trackExecution"],[814,32,521,29],[814,33,521,29,"apply"],[814,38,521,29],[814,45,521,29,"arguments"],[814,54,521,29],[815,8,521,29],[816,8,521,29],[816,15,521,15,"trackExecution"],[816,29,521,29],[817,6,521,29],[818,6,534,2],[819,0,535,0],[820,0,536,0],[821,6,534,2],[822,4,534,2],[823,6,534,2,"key"],[823,9,534,2],[824,6,534,2,"value"],[824,11,534,2],[825,8,534,2],[825,12,534,2,"_trackShare"],[825,23,534,2],[825,30,534,2,"_asyncToGenerator2"],[825,48,534,2],[825,49,534,2,"default"],[825,56,534,2],[825,58,537,2],[825,69,537,26,"automationId"],[825,81,537,46],[825,83,537,48,"shareMethod"],[825,94,537,67],[825,96,537,84],[826,10,538,4],[826,16,538,10],[826,20,538,14],[826,21,538,15,"trackEvent"],[826,31,538,25],[826,32,538,26],[827,12,539,6,"automation_id"],[827,25,539,19],[827,27,539,21,"automationId"],[827,39,539,33],[828,12,540,6,"event_type"],[828,22,540,16],[828,24,540,18],[828,31,540,25],[829,12,541,6,"event_data"],[829,22,541,16],[829,24,541,18],[830,14,541,20,"method"],[830,20,541,26],[830,22,541,28,"shareMethod"],[831,12,541,40],[832,10,542,4],[832,11,542,5],[832,12,542,6],[833,8,543,2],[833,9,543,3],[834,8,543,3],[834,17,537,15,"trackShare"],[834,27,537,25,"trackShare"],[834,28,537,25,"_x12"],[834,32,537,25],[834,34,537,25,"_x13"],[834,38,537,25],[835,10,537,25],[835,17,537,25,"_trackShare"],[835,28,537,25],[835,29,537,25,"apply"],[835,34,537,25],[835,41,537,25,"arguments"],[835,50,537,25],[836,8,537,25],[837,8,537,25],[837,15,537,15,"trackShare"],[837,25,537,25],[838,6,537,25],[839,4,537,25],[840,6,537,25,"key"],[840,9,537,25],[841,6,537,25,"value"],[841,11,537,25],[841,13,813,2],[841,22,813,17,"generateSessionId"],[841,39,813,34,"generateSessionId"],[841,40,813,34],[841,42,813,45],[842,8,814,4],[842,15,814,11,"Date"],[842,19,814,15],[842,20,814,16,"now"],[842,23,814,19],[842,24,814,20],[842,25,814,21],[842,26,814,22,"toString"],[842,34,814,30],[842,35,814,31],[842,37,814,33],[842,38,814,34],[842,41,814,37,"Math"],[842,45,814,41],[842,46,814,42,"random"],[842,52,814,48],[842,53,814,49],[842,54,814,50],[842,55,814,51,"toString"],[842,63,814,59],[842,64,814,60],[842,66,814,62],[842,67,814,63],[842,68,814,64,"substr"],[842,74,814,70],[842,75,814,71],[842,76,814,72],[842,77,814,73],[843,6,815,2],[845,6,817,2],[846,0,818,0],[847,0,819,0],[848,4,817,2],[849,6,817,2,"key"],[849,9,817,2],[850,6,817,2,"value"],[850,11,817,2],[850,13,820,2],[850,22,820,17,"generateDailyStats"],[850,40,820,35,"generateDailyStats"],[850,41,820,36,"analytics"],[850,50,820,52],[850,52,820,130],[851,8,821,4],[851,12,821,10,"daily"],[851,17,821,86],[851,20,821,89],[851,21,821,90],[851,22,821,91],[852,8,823,4,"analytics"],[852,17,823,13],[852,18,823,14,"forEach"],[852,25,823,21],[852,26,823,22],[852,36,823,22,"event"],[852,41,823,27],[852,43,823,31],[853,10,824,6],[853,14,824,12,"date"],[853,18,824,16],[853,21,824,19],[853,25,824,23,"Date"],[853,29,824,27],[853,30,824,28,"event"],[853,35,824,33],[853,36,824,34,"created_at"],[853,46,824,44],[853,47,824,45],[853,48,824,46,"toISOString"],[853,59,824,57],[853,60,824,58],[853,61,824,59],[853,62,824,60,"split"],[853,67,824,65],[853,68,824,66],[853,71,824,69],[853,72,824,70],[853,73,824,71],[853,74,824,72],[853,75,824,73],[854,10,825,6],[854,14,825,10],[854,15,825,11,"daily"],[854,20,825,16],[854,21,825,17,"date"],[854,25,825,21],[854,26,825,22],[854,28,825,24],[855,12,826,8,"daily"],[855,17,826,13],[855,18,826,14,"date"],[855,22,826,18],[855,23,826,19],[855,26,826,22],[856,14,826,24,"views"],[856,19,826,29],[856,21,826,31],[856,22,826,32],[857,14,826,34,"executions"],[857,24,826,44],[857,26,826,46],[857,27,826,47],[858,14,826,49,"shares"],[858,20,826,55],[858,22,826,57],[859,12,826,59],[859,13,826,60],[860,10,827,6],[861,10,829,6],[861,14,829,10,"event"],[861,19,829,15],[861,20,829,16,"event_type"],[861,30,829,26],[861,35,829,31],[861,41,829,37],[861,43,829,39,"daily"],[861,48,829,44],[861,49,829,45,"date"],[861,53,829,49],[861,54,829,50],[861,55,829,51,"views"],[861,60,829,56],[861,62,829,58],[862,10,830,6],[862,14,830,10,"event"],[862,19,830,15],[862,20,830,16,"event_type"],[862,30,830,26],[862,35,830,31],[862,46,830,42],[862,48,830,44,"daily"],[862,53,830,49],[862,54,830,50,"date"],[862,58,830,54],[862,59,830,55],[862,60,830,56,"executions"],[862,70,830,66],[862,72,830,68],[863,10,831,6],[863,14,831,10,"event"],[863,19,831,15],[863,20,831,16,"event_type"],[863,30,831,26],[863,35,831,31],[863,42,831,38],[863,44,831,40,"daily"],[863,49,831,45],[863,50,831,46,"date"],[863,54,831,50],[863,55,831,51],[863,56,831,52,"shares"],[863,62,831,58],[863,64,831,60],[864,8,832,4],[864,9,832,5],[864,10,832,6],[865,8,834,4],[865,15,834,11,"Object"],[865,21,834,17],[865,22,834,18,"entries"],[865,29,834,25],[865,30,834,26,"daily"],[865,35,834,31],[865,36,834,32],[865,37,835,7,"map"],[865,40,835,10],[865,41,835,11],[865,51,835,11,"_ref2"],[865,56,835,11],[866,10,835,11],[866,14,835,11,"_ref3"],[866,19,835,11],[866,26,835,11,"_slicedToArray2"],[866,41,835,11],[866,42,835,11,"default"],[866,49,835,11],[866,51,835,11,"_ref2"],[866,56,835,11],[867,12,835,13,"date"],[867,16,835,17],[867,19,835,17,"_ref3"],[867,24,835,17],[868,12,835,19,"stats"],[868,17,835,24],[868,20,835,24,"_ref3"],[868,25,835,24],[869,10,835,24],[869,17,835,24,"Object"],[869,23,835,24],[869,24,835,24,"assign"],[869,30,835,24],[870,12,835,33,"date"],[870,16,835,37],[870,18,835,33,"date"],[871,10,835,37],[871,13,835,42,"stats"],[871,18,835,47],[872,8,835,47],[872,9,835,50],[872,10,835,51],[872,11,836,7,"sort"],[872,15,836,11],[872,16,836,12],[872,26,836,13,"a"],[872,27,836,14],[872,29,836,16,"b"],[872,30,836,17],[873,10,836,17],[873,17,836,22,"a"],[873,18,836,23],[873,19,836,24,"date"],[873,23,836,28],[873,24,836,29,"localeCompare"],[873,37,836,42],[873,38,836,43,"b"],[873,39,836,44],[873,40,836,45,"date"],[873,44,836,49],[873,45,836,50],[874,8,836,50],[874,10,836,51],[874,11,837,7,"slice"],[874,16,837,12],[874,17,837,13],[874,18,837,14],[874,20,837,16],[874,21,837,17],[874,22,837,18],[874,23,837,19],[875,6,838,2],[877,6,840,2],[878,0,841,0],[879,0,842,0],[880,4,840,2],[881,6,840,2,"key"],[881,9,840,2],[882,6,840,2,"value"],[882,11,840,2],[882,13,843,2],[882,22,843,17,"generateCountryStats"],[882,42,843,37,"generateCountryStats"],[882,43,843,38,"analytics"],[882,52,843,54],[882,54,843,99],[883,8,844,4],[883,12,844,10,"countries"],[883,21,844,43],[883,24,844,46],[883,25,844,47],[883,26,844,48],[884,8,846,4,"analytics"],[884,17,846,13],[884,18,846,14,"forEach"],[884,25,846,21],[884,26,846,22],[884,36,846,22,"event"],[884,41,846,27],[884,43,846,31],[885,10,846,31],[885,14,846,31,"_event$location_data"],[885,34,846,31],[886,10,847,6],[886,14,847,12,"country"],[886,21,847,19],[886,24,847,22],[886,26,847,22,"_event$location_data"],[886,46,847,22],[886,49,847,22,"event"],[886,54,847,27],[886,55,847,28,"location_data"],[886,68,847,41],[886,89,847,22,"_event$location_data"],[886,109,847,22],[886,110,847,43,"country"],[886,117,847,50],[886,122,847,54],[886,131,847,63],[887,10,848,6,"countries"],[887,19,848,15],[887,20,848,16,"country"],[887,27,848,23],[887,28,848,24],[887,31,848,27],[887,32,848,28,"countries"],[887,41,848,37],[887,42,848,38,"country"],[887,49,848,45],[887,50,848,46],[887,54,848,50],[887,55,848,51],[887,59,848,55],[887,60,848,56],[888,8,849,4],[888,9,849,5],[888,10,849,6],[889,8,851,4],[889,15,851,11,"Object"],[889,21,851,17],[889,22,851,18,"entries"],[889,29,851,25],[889,30,851,26,"countries"],[889,39,851,35],[889,40,851,36],[889,41,852,7,"map"],[889,44,852,10],[889,45,852,11],[889,55,852,11,"_ref4"],[889,60,852,11],[890,10,852,11],[890,14,852,11,"_ref5"],[890,19,852,11],[890,26,852,11,"_slicedToArray2"],[890,41,852,11],[890,42,852,11,"default"],[890,49,852,11],[890,51,852,11,"_ref4"],[890,56,852,11],[891,12,852,13,"country"],[891,19,852,20],[891,22,852,20,"_ref5"],[891,27,852,20],[892,12,852,22,"count"],[892,17,852,27],[892,20,852,27,"_ref5"],[892,25,852,27],[893,10,852,27],[893,17,852,34],[894,12,852,36,"country"],[894,19,852,43],[894,21,852,36,"country"],[894,28,852,43],[895,12,852,45,"count"],[895,17,852,50],[895,19,852,45,"count"],[896,10,852,51],[896,11,852,52],[897,8,852,52],[897,9,852,53],[897,10,852,54],[897,11,853,7,"sort"],[897,15,853,11],[897,16,853,12],[897,26,853,13,"a"],[897,27,853,14],[897,29,853,16,"b"],[897,30,853,17],[898,10,853,17],[898,17,853,22,"b"],[898,18,853,23],[898,19,853,24,"count"],[898,24,853,29],[898,27,853,32,"a"],[898,28,853,33],[898,29,853,34,"count"],[898,34,853,39],[899,8,853,39],[899,10,853,40],[899,11,854,7,"slice"],[899,16,854,12],[899,17,854,13],[899,18,854,14],[899,20,854,16],[899,22,854,18],[899,23,854,19],[899,24,854,20],[899,25,854,21],[900,6,855,2],[902,6,857,2],[903,0,858,0],[904,0,859,0],[905,4,857,2],[906,6,857,2,"key"],[906,9,857,2],[907,6,857,2,"value"],[907,11,857,2],[908,8,857,2],[908,12,857,2,"_getPopularAutomations"],[908,34,857,2],[908,41,857,2,"_asyncToGenerator2"],[908,59,857,2],[908,60,857,2,"default"],[908,67,857,2],[908,69,860,2],[908,82,860,73],[909,10,860,73],[909,14,860,37,"limit"],[909,19,860,50],[909,22,860,50,"arguments"],[909,31,860,50],[909,32,860,50,"length"],[909,38,860,50],[909,46,860,50,"arguments"],[909,55,860,50],[909,63,860,50,"undefined"],[909,72,860,50],[909,75,860,50,"arguments"],[909,84,860,50],[909,90,860,53],[909,92,860,55],[910,10,861,4],[910,14,861,8],[911,12,862,6],[911,16,862,6,"_yield$supabase$from$4"],[911,38,862,6],[911,47,862,36,"supabase"],[911,63,862,44],[911,64,863,9,"from"],[911,68,863,13],[911,69,863,14],[911,96,863,41],[911,97,863,42],[911,98,864,9,"select"],[911,104,864,15],[911,105,864,16],[911,108,864,19],[911,109,864,20],[911,110,865,9,"order"],[911,115,865,14],[911,116,865,15],[911,128,865,27],[911,130,865,29],[912,16,865,31,"ascending"],[912,25,865,40],[912,27,865,42],[913,14,865,48],[913,15,865,49],[913,16,865,50],[913,17,866,9,"limit"],[913,22,866,14],[913,23,866,15,"limit"],[913,28,866,20],[913,29,866,21],[914,14,862,14,"data"],[914,18,862,18],[914,21,862,18,"_yield$supabase$from$4"],[914,43,862,18],[914,44,862,14,"data"],[914,48,862,18],[915,14,862,20,"error"],[915,19,862,25],[915,22,862,25,"_yield$supabase$from$4"],[915,44,862,25],[915,45,862,20,"error"],[915,50,862,25],[916,12,868,6],[916,16,868,10,"error"],[916,21,868,15],[916,23,868,17],[916,29,868,23,"error"],[916,34,868,28],[917,12,869,6],[917,19,869,13,"data"],[917,23,869,17],[917,27,869,21],[917,29,869,23],[918,10,870,4],[918,11,870,5],[918,12,870,6],[918,19,870,13,"error"],[918,24,870,18],[918,26,870,20],[919,12,871,6,"EventLogger"],[919,36,871,17],[919,37,871,18,"error"],[919,42,871,23],[919,43,871,24],[919,54,871,35],[919,56,871,37],[919,92,871,73],[919,94,871,75,"error"],[919,99,871,89],[919,100,871,90],[920,12,872,6],[920,19,872,13],[920,21,872,15],[921,10,873,4],[922,8,874,2],[922,9,874,3],[923,8,874,3],[923,17,860,15,"getPopularAutomations"],[923,38,860,36,"getPopularAutomations"],[923,39,860,36],[924,10,860,36],[924,17,860,36,"_getPopularAutomations"],[924,39,860,36],[924,40,860,36,"apply"],[924,45,860,36],[924,52,860,36,"arguments"],[924,61,860,36],[925,8,860,36],[926,8,860,36],[926,15,860,15,"getPopularAutomations"],[926,36,860,36],[927,6,860,36],[928,4,860,36],[929,2,860,36],[930,2,133,2],[931,2,123,13,"AnalyticsService"],[931,18,123,29],[931,19,134,26,"CONSENT_KEY"],[931,30,134,37],[931,33,134,40],[931,52,134,59],[932,2,123,13,"AnalyticsService"],[932,18,123,29],[932,19,135,26,"USER_ID_KEY"],[932,30,135,37],[932,33,135,40],[932,52,135,59],[933,2,123,13,"AnalyticsService"],[933,18,123,29],[933,19,136,26,"ANONYMOUS_ID_KEY"],[933,35,136,42],[933,38,136,45],[933,62,136,69],[934,2,123,13,"AnalyticsService"],[934,18,123,29],[934,19,137,26,"SESSION_ID_KEY"],[934,33,137,40],[934,36,137,43],[934,58,137,65],[935,2,123,13,"AnalyticsService"],[935,18,123,29],[935,19,138,26,"USER_PROPERTIES_KEY"],[935,38,138,45],[935,41,138,48],[935,68,138,75],[936,2,123,13,"AnalyticsService"],[936,18,123,29],[936,19,139,26,"OFFLINE_EVENTS_KEY"],[936,37,139,44],[936,40,139,47],[936,66,139,73],[937,0,139,73],[937,3]],"functionMap":{"names":["<global>","AnalyticsService","constructor","getInstance","initialize","loadPersistedData._catch$argument_0","setConsent","identify","reset","setUserProperties","track","trackScreen","time","fn._finally$argument_0","trackRevenue","flush","trackEvent","getAutomationStats","analytics.filter$argument_0","analytics.map$argument_0","trackView","trackExecution","trackShare","hasConsent","shouldTrackEvent","enrichProperties","buildContext","loadPersistedData","setupPeriodicFlush","setInterval$argument_0","setupSessionManagement","startNewSession","loadOfflineEvents","storeOfflineEvents","sendEventBatch","batch.events.map$argument_0","checkNetworkStatus","generateSessionId","generateAnonymousId","generateBatchId","generateDailyStats","analytics.forEach$argument_0","Object.entries.map$argument_0","Object.entries.map.sort$argument_0","generateCountryStats","getPopularAutomations"],"mappings":"AAA;OC0H;ECkB;GDK;EEK;GFK;EGK;qCCU;ODE;GHmC;EKK;GLwB;EMK;GNmB;EOK;GPqB;EQK;GRW;ESK;GT6B;EUK;GVK;EWK;wBCG;KDM;GXC;EaK;GbM;EcK;GdoC;EeK;GfyC;EgBK;iCCY,4BD;sCCC,iCD;kCCC,6BD;qCCC,gCD;iCCC,4BD;oCCC,+BD;6CEC,cF;GhBsB;EmBK;GnBM;EoBK;GpBW;EqBK;GrBM;EsBK;GtBE;EuBK;GvBuB;EwBK;GxBQ;EyBK;GzBiB;E0BK;G1BuC;E2BK;gBCC;KDI;G3BC;E6BK;gBDE;KCK;G7BC;E8BK;G9Ba;E+BK;G/BY;EgCK;GhCiB;EiCK;wCCK;ODkB;GjCY;EmCK;GnCI;EoCK;GpCE;EqCK;GrCE;EsCK;GtCE;EoCK;GpCE;EuCK;sBCG;KDS;WEG,uCF;YGC,sCH;GvCE;E2CK;sBHG;KGG;WFG,0CE;YDC,2BC;G3CE;E4CK;G5Cc"}},"type":"js/module"}]}