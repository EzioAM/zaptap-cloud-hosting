{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"../EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"Hq0v9QhXB1mWTev9pwNNdCMJcv4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.errorRecoveryManager = exports.ErrorRecoveryManager = undefined;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3]));\n  var _EventLogger = require(_dependencyMap[4]);\n  var ErrorRecoveryManager = exports.ErrorRecoveryManager = /*#__PURE__*/function () {\n    function ErrorRecoveryManager(config) {\n      (0, _classCallCheck2.default)(this, ErrorRecoveryManager);\n      this.retryConfig = {\n        maxAttempts: 3,\n        baseDelay: 1000,\n        maxDelay: 10000,\n        backoffMultiplier: 2,\n        jitter: true\n      };\n      this.recoveryStrategies = [];\n      if (config) {\n        this.retryConfig = {\n          ...this.retryConfig,\n          ...config\n        };\n      }\n      this.setupDefaultStrategies();\n    }\n\n    /**\n     * Execute an operation with automatic retry and recovery\n     */\n    return (0, _createClass2.default)(ErrorRecoveryManager, [{\n      key: \"executeWithRecovery\",\n      value: (function () {\n        var _executeWithRecovery = (0, _asyncToGenerator2.default)(function* (operation, context) {\n          var operationName = context.operationName,\n            _context$category = context.category,\n            category = _context$category === undefined ? 'Operation' : _context$category,\n            maxAttempts = context.maxAttempts,\n            _context$enableRecove = context.enableRecovery,\n            enableRecovery = _context$enableRecove === undefined ? true : _context$enableRecove;\n          var attempts = maxAttempts || this.retryConfig.maxAttempts;\n          for (var attempt = 1; attempt <= attempts; attempt++) {\n            try {\n              var result = yield operation();\n              if (attempt > 1) {\n                _EventLogger.EventLogger.info('ErrorRecovery', `Operation succeeded after retry`, {\n                  operationName,\n                  attempt,\n                  category\n                });\n              }\n              return result;\n            } catch (error) {\n              var isLastAttempt = attempt === attempts;\n              _EventLogger.EventLogger.warn('ErrorRecovery', `Operation failed on attempt ${attempt}`, {\n                operationName,\n                attempt,\n                maxAttempts: attempts,\n                error: error.message\n              });\n              if (isLastAttempt) {\n                // Try recovery strategies before giving up\n                if (enableRecovery) {\n                  var recovered = yield this.attemptRecovery(error, {\n                    operationName,\n                    category,\n                    attempt\n                  });\n                  if (recovered) {\n                    // Retry one more time after successful recovery\n                    try {\n                      var _result = yield operation();\n                      _EventLogger.EventLogger.info('ErrorRecovery', 'Operation succeeded after recovery', {\n                        operationName,\n                        category\n                      });\n                      return _result;\n                    } catch (retryError) {\n                      _EventLogger.EventLogger.error('ErrorRecovery', 'Operation failed even after recovery', retryError, {\n                        operationName,\n                        category\n                      });\n                    }\n                  }\n                }\n\n                // Final failure\n                _EventLogger.EventLogger.error('ErrorRecovery', `Operation failed after all attempts`, error, {\n                  operationName,\n                  category,\n                  totalAttempts: attempts\n                });\n                throw error;\n              }\n\n              // Calculate delay for next attempt\n              var delay = this.calculateDelay(attempt);\n              _EventLogger.EventLogger.info('ErrorRecovery', `Retrying operation in ${delay}ms`, {\n                operationName,\n                attempt,\n                delay\n              });\n              yield this.sleep(delay);\n            }\n          }\n          throw new Error(`Unexpected end of retry loop for ${operationName}`);\n        });\n        function executeWithRecovery(_x, _x2) {\n          return _executeWithRecovery.apply(this, arguments);\n        }\n        return executeWithRecovery;\n      }()\n      /**\n       * Register a custom recovery strategy\n       */\n      )\n    }, {\n      key: \"addRecoveryStrategy\",\n      value: function addRecoveryStrategy(strategy) {\n        this.recoveryStrategies.push(strategy);\n        this.recoveryStrategies.sort((a, b) => b.priority - a.priority);\n        _EventLogger.EventLogger.info('ErrorRecovery', 'Recovery strategy registered', {\n          strategyName: strategy.name,\n          priority: strategy.priority\n        });\n      }\n\n      /**\n       * Remove a recovery strategy\n       */\n    }, {\n      key: \"removeRecoveryStrategy\",\n      value: function removeRecoveryStrategy(strategyName) {\n        var index = this.recoveryStrategies.findIndex(s => s.name === strategyName);\n        if (index >= 0) {\n          this.recoveryStrategies.splice(index, 1);\n          _EventLogger.EventLogger.info('ErrorRecovery', 'Recovery strategy removed', {\n            strategyName\n          });\n        }\n      }\n\n      /**\n       * Update retry configuration\n       */\n    }, {\n      key: \"updateRetryConfig\",\n      value: function updateRetryConfig(config) {\n        this.retryConfig = {\n          ...this.retryConfig,\n          ...config\n        };\n        _EventLogger.EventLogger.info('ErrorRecovery', 'Retry configuration updated', {\n          config: this.retryConfig\n        });\n      }\n\n      /**\n       * Attempt to recover from an error using registered strategies\n       */\n    }, {\n      key: \"attemptRecovery\",\n      value: (function () {\n        var _attemptRecovery = (0, _asyncToGenerator2.default)(function* (error, context) {\n          _EventLogger.EventLogger.info('ErrorRecovery', 'Attempting error recovery', {\n            error: error.message,\n            strategies: this.recoveryStrategies.length\n          });\n          for (var strategy of this.recoveryStrategies) {\n            if (strategy.canRecover(error)) {\n              try {\n                _EventLogger.EventLogger.info('ErrorRecovery', `Trying recovery strategy: ${strategy.name}`, {\n                  error: error.message,\n                  strategy: strategy.name\n                });\n                var recovered = yield strategy.recover(error, context);\n                if (recovered) {\n                  _EventLogger.EventLogger.info('ErrorRecovery', `Recovery successful with strategy: ${strategy.name}`, {\n                    error: error.message,\n                    strategy: strategy.name\n                  });\n                  return true;\n                } else {\n                  _EventLogger.EventLogger.warn('ErrorRecovery', `Recovery failed with strategy: ${strategy.name}`, {\n                    error: error.message,\n                    strategy: strategy.name\n                  });\n                }\n              } catch (recoveryError) {\n                _EventLogger.EventLogger.error('ErrorRecovery', `Recovery strategy threw error: ${strategy.name}`, recoveryError, {\n                  originalError: error.message,\n                  strategy: strategy.name\n                });\n              }\n            }\n          }\n          _EventLogger.EventLogger.warn('ErrorRecovery', 'All recovery strategies failed', {\n            error: error.message,\n            strategiesAttempted: this.recoveryStrategies.length\n          });\n          return false;\n        });\n        function attemptRecovery(_x3, _x4) {\n          return _attemptRecovery.apply(this, arguments);\n        }\n        return attemptRecovery;\n      }()\n      /**\n       * Calculate delay with exponential backoff and optional jitter\n       */\n      )\n    }, {\n      key: \"calculateDelay\",\n      value: function calculateDelay(attempt) {\n        var exponentialDelay = Math.min(this.retryConfig.baseDelay * Math.pow(this.retryConfig.backoffMultiplier, attempt - 1), this.retryConfig.maxDelay);\n        if (this.retryConfig.jitter) {\n          // Add random jitter (Â±25% of calculated delay)\n          var jitterRange = exponentialDelay * 0.25;\n          var jitter = (Math.random() - 0.5) * 2 * jitterRange;\n          return Math.max(100, Math.round(exponentialDelay + jitter));\n        }\n        return exponentialDelay;\n      }\n\n      /**\n       * Sleep utility function\n       */\n    }, {\n      key: \"sleep\",\n      value: function sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n      }\n\n      /**\n       * Setup default recovery strategies\n       */\n    }, {\n      key: \"setupDefaultStrategies\",\n      value: function setupDefaultStrategies() {\n        var _this = this;\n        // Network error recovery\n        this.addRecoveryStrategy({\n          name: 'NetworkErrorRecovery',\n          canRecover: error => {\n            var networkPatterns = ['network request failed', 'fetch', 'network error', 'connection', 'timeout', 'abort'];\n            return networkPatterns.some(pattern => error.message.toLowerCase().includes(pattern.toLowerCase()));\n          },\n          recover: function () {\n            var _ref = (0, _asyncToGenerator2.default)(function* (error) {\n              // Check if network is available\n              var isOnline = navigator?.onLine ?? true;\n              if (!isOnline) {\n                _EventLogger.EventLogger.warn('ErrorRecovery', 'Device is offline, cannot recover network error');\n                return false;\n              }\n\n              // Simple network connectivity test\n              try {\n                var response = yield fetch('/ping', {\n                  method: 'HEAD',\n                  cache: 'no-cache'\n                });\n                return response.ok;\n              } catch {\n                return false;\n              }\n            });\n            return function recover(_x5) {\n              return _ref.apply(this, arguments);\n            };\n          }(),\n          priority: 10\n        });\n\n        // Cache clear recovery for storage errors\n        this.addRecoveryStrategy({\n          name: 'CacheClearRecovery',\n          canRecover: error => {\n            var cachePatterns = ['quotaexceeded', 'storage', 'cache', 'indexeddb', 'localstorage'];\n            return cachePatterns.some(pattern => error.message.toLowerCase().includes(pattern.toLowerCase()));\n          },\n          recover: function () {\n            var _ref2 = (0, _asyncToGenerator2.default)(function* (error) {\n              try {\n                // Clear various cache types\n                if (typeof caches !== 'undefined') {\n                  var cacheNames = yield caches.keys();\n                  yield Promise.all(cacheNames.map(name => caches.delete(name)));\n                }\n\n                // Clear localStorage (if quota exceeded)\n                try {\n                  localStorage.clear();\n                } catch {}\n                _EventLogger.EventLogger.info('ErrorRecovery', 'Caches cleared for recovery');\n                return true;\n              } catch {\n                return false;\n              }\n            });\n            return function recover(_x6) {\n              return _ref2.apply(this, arguments);\n            };\n          }(),\n          priority: 5\n        });\n\n        // Memory pressure recovery\n        this.addRecoveryStrategy({\n          name: 'MemoryRecovery',\n          canRecover: error => {\n            var memoryPatterns = ['out of memory', 'memory', 'heap', 'maximum call stack'];\n            return memoryPatterns.some(pattern => error.message.toLowerCase().includes(pattern.toLowerCase()));\n          },\n          recover: function () {\n            var _ref3 = (0, _asyncToGenerator2.default)(function* (error) {\n              try {\n                // Force garbage collection if available\n                if (window.gc) {\n                  window.gc();\n                }\n\n                // Clear any large data structures we might be holding\n                // This is app-specific and should be customized\n                _EventLogger.EventLogger.info('ErrorRecovery', 'Memory recovery attempted');\n\n                // Give it a moment to free up memory\n                yield _this.sleep(100);\n                return true;\n              } catch {\n                return false;\n              }\n            });\n            return function recover(_x7) {\n              return _ref3.apply(this, arguments);\n            };\n          }(),\n          priority: 3\n        });\n      }\n    }]);\n  }(); // Singleton instance\n  var errorRecoveryManager = exports.errorRecoveryManager = new ErrorRecoveryManager();\n});","lineCount":347,"map":[[10,2,1,0],[10,6,1,0,"_EventLogger"],[10,18,1,0],[10,21,1,0,"require"],[10,28,1,0],[10,29,1,0,"_dependencyMap"],[10,43,1,0],[11,2,1,45],[11,6,18,13,"ErrorRecoveryManager"],[11,26,18,33],[11,29,18,33,"exports"],[11,36,18,33],[11,37,18,33,"ErrorRecoveryManager"],[11,57,18,33],[12,4,29,2],[12,13,29,2,"ErrorRecoveryManager"],[12,34,29,14,"config"],[12,40,29,43],[12,42,29,45],[13,6,29,45],[13,10,29,45,"_classCallCheck2"],[13,26,29,45],[13,27,29,45,"default"],[13,34,29,45],[13,42,29,45,"ErrorRecoveryManager"],[13,62,29,45],[14,6,29,45],[14,11,19,10,"retryConfig"],[14,22,19,21],[14,25,19,37],[15,8,20,4,"maxAttempts"],[15,19,20,15],[15,21,20,17],[15,22,20,18],[16,8,21,4,"baseDelay"],[16,17,21,13],[16,19,21,15],[16,23,21,19],[17,8,22,4,"maxDelay"],[17,16,22,12],[17,18,22,14],[17,23,22,19],[18,8,23,4,"backoffMultiplier"],[18,25,23,21],[18,27,23,23],[18,28,23,24],[19,8,24,4,"jitter"],[19,14,24,10],[19,16,24,12],[20,6,25,2],[20,7,25,3],[21,6,25,3],[21,11,27,10,"recoveryStrategies"],[21,29,27,28],[21,32,27,51],[21,34,27,53],[22,6,30,4],[22,10,30,8,"config"],[22,16,30,14],[22,18,30,16],[23,8,31,6],[23,12,31,10],[23,13,31,11,"retryConfig"],[23,24,31,22],[23,27,31,25],[24,10,31,27],[24,13,31,30],[24,17,31,34],[24,18,31,35,"retryConfig"],[24,29,31,46],[25,10,31,48],[25,13,31,51,"config"],[26,8,31,58],[26,9,31,59],[27,6,32,4],[28,6,34,4],[28,10,34,8],[28,11,34,9,"setupDefaultStrategies"],[28,33,34,31],[28,34,34,32],[28,35,34,33],[29,4,35,2],[31,4,37,2],[32,0,38,0],[33,0,39,0],[34,4,37,2],[34,15,37,2,"_createClass2"],[34,28,37,2],[34,29,37,2,"default"],[34,36,37,2],[34,38,37,2,"ErrorRecoveryManager"],[34,58,37,2],[35,6,37,2,"key"],[35,9,37,2],[36,6,37,2,"value"],[36,11,37,2],[37,8,37,2],[37,12,37,2,"_executeWithRecovery"],[37,32,37,2],[37,39,37,2,"_asyncToGenerator2"],[37,57,37,2],[37,58,37,2,"default"],[37,65,37,2],[37,67,40,2],[37,78,41,4,"operation"],[37,87,41,31],[37,89,42,4,"context"],[37,96,47,5],[37,98,48,16],[38,10,49,4],[38,14,49,12,"operationName"],[38,27,49,25],[38,30,49,90,"context"],[38,37,49,97],[38,38,49,12,"operationName"],[38,51,49,25],[39,12,49,25,"_context$category"],[39,29,49,25],[39,32,49,90,"context"],[39,39,49,97],[39,40,49,27,"category"],[39,48,49,35],[40,12,49,27,"category"],[40,20,49,35],[40,23,49,35,"_context$category"],[40,40,49,35],[40,45,49,35,"undefined"],[40,54,49,35],[40,57,49,38],[40,68,49,49],[40,71,49,49,"_context$category"],[40,88,49,49],[41,12,49,51,"maxAttempts"],[41,23,49,62],[41,26,49,90,"context"],[41,33,49,97],[41,34,49,51,"maxAttempts"],[41,45,49,62],[42,12,49,62,"_context$enableRecove"],[42,33,49,62],[42,36,49,90,"context"],[42,43,49,97],[42,44,49,64,"enableRecovery"],[42,58,49,78],[43,12,49,64,"enableRecovery"],[43,26,49,78],[43,29,49,78,"_context$enableRecove"],[43,50,49,78],[43,55,49,78,"undefined"],[43,64,49,78],[43,67,49,81],[43,71,49,85],[43,74,49,85,"_context$enableRecove"],[43,95,49,85],[44,10,50,4],[44,14,50,10,"attempts"],[44,22,50,18],[44,25,50,21,"maxAttempts"],[44,36,50,32],[44,40,50,36],[44,44,50,40],[44,45,50,41,"retryConfig"],[44,56,50,52],[44,57,50,53,"maxAttempts"],[44,68,50,64],[45,10,52,4],[45,15,52,9],[45,19,52,13,"attempt"],[45,26,52,20],[45,29,52,23],[45,30,52,24],[45,32,52,26,"attempt"],[45,39,52,33],[45,43,52,37,"attempts"],[45,51,52,45],[45,53,52,47,"attempt"],[45,60,52,54],[45,62,52,56],[45,64,52,58],[46,12,53,6],[46,16,53,10],[47,14,54,8],[47,18,54,14,"result"],[47,24,54,20],[47,33,54,29,"operation"],[47,42,54,38],[47,43,54,39],[47,44,54,40],[48,14,56,8],[48,18,56,12,"attempt"],[48,25,56,19],[48,28,56,22],[48,29,56,23],[48,31,56,25],[49,16,57,10,"EventLogger"],[49,40,57,21],[49,41,57,22,"info"],[49,45,57,26],[49,46,58,12],[49,61,58,27],[49,63,59,12],[49,96,59,45],[49,98,60,12],[50,18,60,14,"operationName"],[50,31,60,27],[51,18,60,29,"attempt"],[51,25,60,36],[52,18,60,38,"category"],[53,16,60,47],[53,17,61,10],[53,18,61,11],[54,14,62,8],[55,14,64,8],[55,21,64,15,"result"],[55,27,64,21],[56,12,65,6],[56,13,65,7],[56,14,65,8],[56,21,65,15,"error"],[56,26,65,20],[56,28,65,22],[57,14,66,8],[57,18,66,14,"isLastAttempt"],[57,31,66,27],[57,34,66,30,"attempt"],[57,41,66,37],[57,46,66,42,"attempts"],[57,54,66,50],[58,14,68,8,"EventLogger"],[58,38,68,19],[58,39,68,20,"warn"],[58,43,68,24],[58,44,69,10],[58,59,69,25],[58,61,70,10],[58,92,70,41,"attempt"],[58,99,70,48],[58,101,70,50],[58,103,71,10],[59,16,71,12,"operationName"],[59,29,71,25],[60,16,71,27,"attempt"],[60,23,71,34],[61,16,71,36,"maxAttempts"],[61,27,71,47],[61,29,71,49,"attempts"],[61,37,71,57],[62,16,71,59,"error"],[62,21,71,64],[62,23,71,66,"error"],[62,28,71,71],[62,29,71,72,"message"],[63,14,71,80],[63,15,72,8],[63,16,72,9],[64,14,74,8],[64,18,74,12,"isLastAttempt"],[64,31,74,25],[64,33,74,27],[65,16,75,10],[66,16,76,10],[66,20,76,14,"enableRecovery"],[66,34,76,28],[66,36,76,30],[67,18,77,12],[67,22,77,18,"recovered"],[67,31,77,27],[67,40,77,36],[67,44,77,40],[67,45,77,41,"attemptRecovery"],[67,60,77,56],[67,61,77,57,"error"],[67,66,77,62],[67,68,77,73],[68,20,78,14,"operationName"],[68,33,78,27],[69,20,79,14,"category"],[69,28,79,22],[70,20,80,14,"attempt"],[71,18,81,12],[71,19,81,13],[71,20,81,14],[72,18,83,12],[72,22,83,16,"recovered"],[72,31,83,25],[72,33,83,27],[73,20,84,14],[74,20,85,14],[74,24,85,18],[75,22,86,16],[75,26,86,22,"result"],[75,33,86,28],[75,42,86,37,"operation"],[75,51,86,46],[75,52,86,47],[75,53,86,48],[76,22,87,16,"EventLogger"],[76,46,87,27],[76,47,87,28,"info"],[76,51,87,32],[76,52,88,18],[76,67,88,33],[76,69,89,18],[76,105,89,54],[76,107,90,18],[77,24,90,20,"operationName"],[77,37,90,33],[78,24,90,35,"category"],[79,22,90,44],[79,23,91,16],[79,24,91,17],[80,22,92,16],[80,29,92,23,"result"],[80,36,92,29],[81,20,93,14],[81,21,93,15],[81,22,93,16],[81,29,93,23,"retryError"],[81,39,93,33],[81,41,93,35],[82,22,94,16,"EventLogger"],[82,46,94,27],[82,47,94,28,"error"],[82,52,94,33],[82,53,95,18],[82,68,95,33],[82,70,96,18],[82,108,96,56],[82,110,97,18,"retryError"],[82,120,97,28],[82,122,98,18],[83,24,98,20,"operationName"],[83,37,98,33],[84,24,98,35,"category"],[85,22,98,44],[85,23,99,16],[85,24,99,17],[86,20,100,14],[87,18,101,12],[88,16,102,10],[90,16,104,10],[91,16,105,10,"EventLogger"],[91,40,105,21],[91,41,105,22,"error"],[91,46,105,27],[91,47,106,12],[91,62,106,27],[91,64,107,12],[91,101,107,49],[91,103,108,12,"error"],[91,108,108,17],[91,110,109,12],[92,18,109,14,"operationName"],[92,31,109,27],[93,18,109,29,"category"],[93,26,109,37],[94,18,109,39,"totalAttempts"],[94,31,109,52],[94,33,109,54,"attempts"],[95,16,109,63],[95,17,110,10],[95,18,110,11],[96,16,112,10],[96,22,112,16,"error"],[96,27,112,21],[97,14,113,8],[99,14,115,8],[100,14,116,8],[100,18,116,14,"delay"],[100,23,116,19],[100,26,116,22],[100,30,116,26],[100,31,116,27,"calculateDelay"],[100,45,116,41],[100,46,116,42,"attempt"],[100,53,116,49],[100,54,116,50],[101,14,117,8,"EventLogger"],[101,38,117,19],[101,39,117,20,"info"],[101,43,117,24],[101,44,118,10],[101,59,118,25],[101,61,119,10],[101,86,119,35,"delay"],[101,91,119,40],[101,95,119,44],[101,97,120,10],[102,16,120,12,"operationName"],[102,29,120,25],[103,16,120,27,"attempt"],[103,23,120,34],[104,16,120,36,"delay"],[105,14,120,42],[105,15,121,8],[105,16,121,9],[106,14,123,8],[106,20,123,14],[106,24,123,18],[106,25,123,19,"sleep"],[106,30,123,24],[106,31,123,25,"delay"],[106,36,123,30],[106,37,123,31],[107,12,124,6],[108,10,125,4],[109,10,127,4],[109,16,127,10],[109,20,127,14,"Error"],[109,25,127,19],[109,26,127,20],[109,62,127,56,"operationName"],[109,75,127,69],[109,77,127,71],[109,78,127,72],[110,8,128,2],[110,9,128,3],[111,8,128,3],[111,17,40,8,"executeWithRecovery"],[111,36,40,27,"executeWithRecovery"],[111,37,40,27,"_x"],[111,39,40,27],[111,41,40,27,"_x2"],[111,44,40,27],[112,10,40,27],[112,17,40,27,"_executeWithRecovery"],[112,37,40,27],[112,38,40,27,"apply"],[112,43,40,27],[112,50,40,27,"arguments"],[112,59,40,27],[113,8,40,27],[114,8,40,27],[114,15,40,8,"executeWithRecovery"],[114,34,40,27],[115,6,40,27],[116,6,130,2],[117,0,131,0],[118,0,132,0],[119,6,130,2],[120,4,130,2],[121,6,130,2,"key"],[121,9,130,2],[122,6,130,2,"value"],[122,11,130,2],[122,13,133,2],[122,22,133,2,"addRecoveryStrategy"],[122,41,133,21,"addRecoveryStrategy"],[122,42,133,22,"strategy"],[122,50,133,48],[122,52,133,56],[123,8,134,4],[123,12,134,8],[123,13,134,9,"recoveryStrategies"],[123,31,134,27],[123,32,134,28,"push"],[123,36,134,32],[123,37,134,33,"strategy"],[123,45,134,41],[123,46,134,42],[124,8,135,4],[124,12,135,8],[124,13,135,9,"recoveryStrategies"],[124,31,135,27],[124,32,135,28,"sort"],[124,36,135,32],[124,37,135,33],[124,38,135,34,"a"],[124,39,135,35],[124,41,135,37,"b"],[124,42,135,38],[124,47,135,43,"b"],[124,48,135,44],[124,49,135,45,"priority"],[124,57,135,53],[124,60,135,56,"a"],[124,61,135,57],[124,62,135,58,"priority"],[124,70,135,66],[124,71,135,67],[125,8,137,4,"EventLogger"],[125,32,137,15],[125,33,137,16,"info"],[125,37,137,20],[125,38,138,6],[125,53,138,21],[125,55,139,6],[125,85,139,36],[125,87,140,6],[126,10,140,8,"strategyName"],[126,22,140,20],[126,24,140,22,"strategy"],[126,32,140,30],[126,33,140,31,"name"],[126,37,140,35],[127,10,140,37,"priority"],[127,18,140,45],[127,20,140,47,"strategy"],[127,28,140,55],[127,29,140,56,"priority"],[128,8,140,65],[128,9,141,4],[128,10,141,5],[129,6,142,2],[131,6,144,2],[132,0,145,0],[133,0,146,0],[134,4,144,2],[135,6,144,2,"key"],[135,9,144,2],[136,6,144,2,"value"],[136,11,144,2],[136,13,147,2],[136,22,147,2,"removeRecoveryStrategy"],[136,44,147,24,"removeRecoveryStrategy"],[136,45,147,25,"strategyName"],[136,57,147,45],[136,59,147,53],[137,8,148,4],[137,12,148,10,"index"],[137,17,148,15],[137,20,148,18],[137,24,148,22],[137,25,148,23,"recoveryStrategies"],[137,43,148,41],[137,44,148,42,"findIndex"],[137,53,148,51],[137,54,148,52,"s"],[137,55,148,53],[137,59,148,57,"s"],[137,60,148,58],[137,61,148,59,"name"],[137,65,148,63],[137,70,148,68,"strategyName"],[137,82,148,80],[137,83,148,81],[138,8,149,4],[138,12,149,8,"index"],[138,17,149,13],[138,21,149,17],[138,22,149,18],[138,24,149,20],[139,10,150,6],[139,14,150,10],[139,15,150,11,"recoveryStrategies"],[139,33,150,29],[139,34,150,30,"splice"],[139,40,150,36],[139,41,150,37,"index"],[139,46,150,42],[139,48,150,44],[139,49,150,45],[139,50,150,46],[140,10,151,6,"EventLogger"],[140,34,151,17],[140,35,151,18,"info"],[140,39,151,22],[140,40,152,8],[140,55,152,23],[140,57,153,8],[140,84,153,35],[140,86,154,8],[141,12,154,10,"strategyName"],[142,10,154,23],[142,11,155,6],[142,12,155,7],[143,8,156,4],[144,6,157,2],[146,6,159,2],[147,0,160,0],[148,0,161,0],[149,4,159,2],[150,6,159,2,"key"],[150,9,159,2],[151,6,159,2,"value"],[151,11,159,2],[151,13,162,2],[151,22,162,2,"updateRetryConfig"],[151,39,162,19,"updateRetryConfig"],[151,40,162,20,"config"],[151,46,162,48],[151,48,162,56],[152,8,163,4],[152,12,163,8],[152,13,163,9,"retryConfig"],[152,24,163,20],[152,27,163,23],[153,10,163,25],[153,13,163,28],[153,17,163,32],[153,18,163,33,"retryConfig"],[153,29,163,44],[154,10,163,46],[154,13,163,49,"config"],[155,8,163,56],[155,9,163,57],[156,8,164,4,"EventLogger"],[156,32,164,15],[156,33,164,16,"info"],[156,37,164,20],[156,38,165,6],[156,53,165,21],[156,55,166,6],[156,84,166,35],[156,86,167,6],[157,10,167,8,"config"],[157,16,167,14],[157,18,167,16],[157,22,167,20],[157,23,167,21,"retryConfig"],[158,8,167,33],[158,9,168,4],[158,10,168,5],[159,6,169,2],[161,6,171,2],[162,0,172,0],[163,0,173,0],[164,4,171,2],[165,6,171,2,"key"],[165,9,171,2],[166,6,171,2,"value"],[166,11,171,2],[167,8,171,2],[167,12,171,2,"_attemptRecovery"],[167,28,171,2],[167,35,171,2,"_asyncToGenerator2"],[167,53,171,2],[167,54,171,2,"default"],[167,61,171,2],[167,63,174,2],[167,74,174,32,"error"],[167,79,174,44],[167,81,174,46,"context"],[167,88,174,58],[167,90,174,78],[168,10,175,4,"EventLogger"],[168,34,175,15],[168,35,175,16,"info"],[168,39,175,20],[168,40,176,6],[168,55,176,21],[168,57,177,6],[168,84,177,33],[168,86,178,6],[169,12,178,8,"error"],[169,17,178,13],[169,19,178,15,"error"],[169,24,178,20],[169,25,178,21,"message"],[169,32,178,28],[170,12,178,30,"strategies"],[170,22,178,40],[170,24,178,42],[170,28,178,46],[170,29,178,47,"recoveryStrategies"],[170,47,178,65],[170,48,178,66,"length"],[171,10,178,73],[171,11,179,4],[171,12,179,5],[172,10,181,4],[172,15,181,9],[172,19,181,15,"strategy"],[172,27,181,23],[172,31,181,27],[172,35,181,31],[172,36,181,32,"recoveryStrategies"],[172,54,181,50],[172,56,181,52],[173,12,182,6],[173,16,182,10,"strategy"],[173,24,182,18],[173,25,182,19,"canRecover"],[173,35,182,29],[173,36,182,30,"error"],[173,41,182,35],[173,42,182,36],[173,44,182,38],[174,14,183,8],[174,18,183,12],[175,16,184,10,"EventLogger"],[175,40,184,21],[175,41,184,22,"info"],[175,45,184,26],[175,46,185,12],[175,61,185,27],[175,63,186,12],[175,92,186,41,"strategy"],[175,100,186,49],[175,101,186,50,"name"],[175,105,186,54],[175,107,186,56],[175,109,187,12],[176,18,187,14,"error"],[176,23,187,19],[176,25,187,21,"error"],[176,30,187,26],[176,31,187,27,"message"],[176,38,187,34],[177,18,187,36,"strategy"],[177,26,187,44],[177,28,187,46,"strategy"],[177,36,187,54],[177,37,187,55,"name"],[178,16,187,60],[178,17,188,10],[178,18,188,11],[179,16,190,10],[179,20,190,16,"recovered"],[179,29,190,25],[179,38,190,34,"strategy"],[179,46,190,42],[179,47,190,43,"recover"],[179,54,190,50],[179,55,190,51,"error"],[179,60,190,56],[179,62,190,58,"context"],[179,69,190,65],[179,70,190,66],[180,16,192,10],[180,20,192,14,"recovered"],[180,29,192,23],[180,31,192,25],[181,18,193,12,"EventLogger"],[181,42,193,23],[181,43,193,24,"info"],[181,47,193,28],[181,48,194,14],[181,63,194,29],[181,65,195,14],[181,103,195,52,"strategy"],[181,111,195,60],[181,112,195,61,"name"],[181,116,195,65],[181,118,195,67],[181,120,196,14],[182,20,196,16,"error"],[182,25,196,21],[182,27,196,23,"error"],[182,32,196,28],[182,33,196,29,"message"],[182,40,196,36],[183,20,196,38,"strategy"],[183,28,196,46],[183,30,196,48,"strategy"],[183,38,196,56],[183,39,196,57,"name"],[184,18,196,62],[184,19,197,12],[184,20,197,13],[185,18,198,12],[185,25,198,19],[185,29,198,23],[186,16,199,10],[186,17,199,11],[186,23,199,17],[187,18,200,12,"EventLogger"],[187,42,200,23],[187,43,200,24,"warn"],[187,47,200,28],[187,48,201,14],[187,63,201,29],[187,65,202,14],[187,99,202,48,"strategy"],[187,107,202,56],[187,108,202,57,"name"],[187,112,202,61],[187,114,202,63],[187,116,203,14],[188,20,203,16,"error"],[188,25,203,21],[188,27,203,23,"error"],[188,32,203,28],[188,33,203,29,"message"],[188,40,203,36],[189,20,203,38,"strategy"],[189,28,203,46],[189,30,203,48,"strategy"],[189,38,203,56],[189,39,203,57,"name"],[190,18,203,62],[190,19,204,12],[190,20,204,13],[191,16,205,10],[192,14,206,8],[192,15,206,9],[192,16,206,10],[192,23,206,17,"recoveryError"],[192,36,206,30],[192,38,206,32],[193,16,207,10,"EventLogger"],[193,40,207,21],[193,41,207,22,"error"],[193,46,207,27],[193,47,208,12],[193,62,208,27],[193,64,209,12],[193,98,209,46,"strategy"],[193,106,209,54],[193,107,209,55,"name"],[193,111,209,59],[193,113,209,61],[193,115,210,12,"recoveryError"],[193,128,210,25],[193,130,211,12],[194,18,211,14,"originalError"],[194,31,211,27],[194,33,211,29,"error"],[194,38,211,34],[194,39,211,35,"message"],[194,46,211,42],[195,18,211,44,"strategy"],[195,26,211,52],[195,28,211,54,"strategy"],[195,36,211,62],[195,37,211,63,"name"],[196,16,211,68],[196,17,212,10],[196,18,212,11],[197,14,213,8],[198,12,214,6],[199,10,215,4],[200,10,217,4,"EventLogger"],[200,34,217,15],[200,35,217,16,"warn"],[200,39,217,20],[200,40,218,6],[200,55,218,21],[200,57,219,6],[200,89,219,38],[200,91,220,6],[201,12,220,8,"error"],[201,17,220,13],[201,19,220,15,"error"],[201,24,220,20],[201,25,220,21,"message"],[201,32,220,28],[202,12,220,30,"strategiesAttempted"],[202,31,220,49],[202,33,220,51],[202,37,220,55],[202,38,220,56,"recoveryStrategies"],[202,56,220,74],[202,57,220,75,"length"],[203,10,220,82],[203,11,221,4],[203,12,221,5],[204,10,223,4],[204,17,223,11],[204,22,223,16],[205,8,224,2],[205,9,224,3],[206,8,224,3],[206,17,174,16,"attemptRecovery"],[206,32,174,31,"attemptRecovery"],[206,33,174,31,"_x3"],[206,36,174,31],[206,38,174,31,"_x4"],[206,41,174,31],[207,10,174,31],[207,17,174,31,"_attemptRecovery"],[207,33,174,31],[207,34,174,31,"apply"],[207,39,174,31],[207,46,174,31,"arguments"],[207,55,174,31],[208,8,174,31],[209,8,174,31],[209,15,174,16,"attemptRecovery"],[209,30,174,31],[210,6,174,31],[211,6,226,2],[212,0,227,0],[213,0,228,0],[214,6,226,2],[215,4,226,2],[216,6,226,2,"key"],[216,9,226,2],[217,6,226,2,"value"],[217,11,226,2],[217,13,229,2],[217,22,229,10,"calculateDelay"],[217,36,229,24,"calculateDelay"],[217,37,229,25,"attempt"],[217,44,229,40],[217,46,229,50],[218,8,230,4],[218,12,230,10,"exponentialDelay"],[218,28,230,26],[218,31,230,29,"Math"],[218,35,230,33],[218,36,230,34,"min"],[218,39,230,37],[218,40,231,6],[218,44,231,10],[218,45,231,11,"retryConfig"],[218,56,231,22],[218,57,231,23,"baseDelay"],[218,66,231,32],[218,69,231,35,"Math"],[218,73,231,39],[218,74,231,40,"pow"],[218,77,231,43],[218,78,231,44],[218,82,231,48],[218,83,231,49,"retryConfig"],[218,94,231,60],[218,95,231,61,"backoffMultiplier"],[218,112,231,78],[218,114,231,80,"attempt"],[218,121,231,87],[218,124,231,90],[218,125,231,91],[218,126,231,92],[218,128,232,6],[218,132,232,10],[218,133,232,11,"retryConfig"],[218,144,232,22],[218,145,232,23,"maxDelay"],[218,153,233,4],[218,154,233,5],[219,8,235,4],[219,12,235,8],[219,16,235,12],[219,17,235,13,"retryConfig"],[219,28,235,24],[219,29,235,25,"jitter"],[219,35,235,31],[219,37,235,33],[220,10,236,6],[221,10,237,6],[221,14,237,12,"jitterRange"],[221,25,237,23],[221,28,237,26,"exponentialDelay"],[221,44,237,42],[221,47,237,45],[221,51,237,49],[222,10,238,6],[222,14,238,12,"jitter"],[222,20,238,18],[222,23,238,21],[222,24,238,22,"Math"],[222,28,238,26],[222,29,238,27,"random"],[222,35,238,33],[222,36,238,34],[222,37,238,35],[222,40,238,38],[222,43,238,41],[222,47,238,45],[222,48,238,46],[222,51,238,49,"jitterRange"],[222,62,238,60],[223,10,239,6],[223,17,239,13,"Math"],[223,21,239,17],[223,22,239,18,"max"],[223,25,239,21],[223,26,239,22],[223,29,239,25],[223,31,239,27,"Math"],[223,35,239,31],[223,36,239,32,"round"],[223,41,239,37],[223,42,239,38,"exponentialDelay"],[223,58,239,54],[223,61,239,57,"jitter"],[223,67,239,63],[223,68,239,64],[223,69,239,65],[224,8,240,4],[225,8,242,4],[225,15,242,11,"exponentialDelay"],[225,31,242,27],[226,6,243,2],[228,6,245,2],[229,0,246,0],[230,0,247,0],[231,4,245,2],[232,6,245,2,"key"],[232,9,245,2],[233,6,245,2,"value"],[233,11,245,2],[233,13,248,2],[233,22,248,10,"sleep"],[233,27,248,15,"sleep"],[233,28,248,16,"ms"],[233,30,248,26],[233,32,248,43],[234,8,249,4],[234,15,249,11],[234,19,249,15,"Promise"],[234,26,249,22],[234,27,249,23,"resolve"],[234,34,249,30],[234,38,249,34,"setTimeout"],[234,48,249,44],[234,49,249,45,"resolve"],[234,56,249,52],[234,58,249,54,"ms"],[234,60,249,56],[234,61,249,57],[234,62,249,58],[235,6,250,2],[237,6,252,2],[238,0,253,0],[239,0,254,0],[240,4,252,2],[241,6,252,2,"key"],[241,9,252,2],[242,6,252,2,"value"],[242,11,252,2],[242,13,255,2],[242,22,255,10,"setupDefaultStrategies"],[242,44,255,32,"setupDefaultStrategies"],[242,45,255,32],[242,47,255,41],[243,8,255,41],[243,12,255,41,"_this"],[243,17,255,41],[244,8,256,4],[245,8,257,4],[245,12,257,8],[245,13,257,9,"addRecoveryStrategy"],[245,32,257,28],[245,33,257,29],[246,10,258,6,"name"],[246,14,258,10],[246,16,258,12],[246,38,258,34],[247,10,259,6,"canRecover"],[247,20,259,16],[247,22,259,19,"error"],[247,27,259,31],[247,31,259,36],[248,12,260,8],[248,16,260,14,"networkPatterns"],[248,31,260,29],[248,34,260,32],[248,35,261,10],[248,59,261,34],[248,61,262,10],[248,68,262,17],[248,70,263,10],[248,85,263,25],[248,87,264,10],[248,99,264,22],[248,101,265,10],[248,110,265,19],[248,112,266,10],[248,119,266,17],[248,120,267,9],[249,12,268,8],[249,19,268,15,"networkPatterns"],[249,34,268,30],[249,35,268,31,"some"],[249,39,268,35],[249,40,268,36,"pattern"],[249,47,268,43],[249,51,269,10,"error"],[249,56,269,15],[249,57,269,16,"message"],[249,64,269,23],[249,65,269,24,"toLowerCase"],[249,76,269,35],[249,77,269,36],[249,78,269,37],[249,79,269,38,"includes"],[249,87,269,46],[249,88,269,47,"pattern"],[249,95,269,54],[249,96,269,55,"toLowerCase"],[249,107,269,66],[249,108,269,67],[249,109,269,68],[249,110,270,8],[249,111,270,9],[250,10,271,6],[250,11,271,7],[251,10,272,6,"recover"],[251,17,272,13],[252,12,272,13],[252,16,272,13,"_ref"],[252,20,272,13],[252,27,272,13,"_asyncToGenerator2"],[252,45,272,13],[252,46,272,13,"default"],[252,53,272,13],[252,55,272,15],[252,66,272,22,"error"],[252,71,272,34],[252,73,272,39],[253,14,273,8],[254,14,274,8],[254,18,274,14,"isOnline"],[254,26,274,22],[254,29,274,25,"navigator"],[254,38,274,34],[254,40,274,36,"onLine"],[254,46,274,42],[254,50,274,46],[254,54,274,50],[255,14,275,8],[255,18,275,12],[255,19,275,13,"isOnline"],[255,27,275,21],[255,29,275,23],[256,16,276,10,"EventLogger"],[256,40,276,21],[256,41,276,22,"warn"],[256,45,276,26],[256,46,276,27],[256,61,276,42],[256,63,276,44],[256,112,276,93],[256,113,276,94],[257,16,277,10],[257,23,277,17],[257,28,277,22],[258,14,278,8],[260,14,280,8],[261,14,281,8],[261,18,281,12],[262,16,282,10],[262,20,282,16,"response"],[262,28,282,24],[262,37,282,33,"fetch"],[262,42,282,38],[262,43,282,39],[262,50,282,46],[262,52,282,48],[263,18,283,12,"method"],[263,24,283,18],[263,26,283,20],[263,32,283,26],[264,18,284,12,"cache"],[264,23,284,17],[264,25,284,19],[265,16,285,10],[265,17,285,11],[265,18,285,12],[266,16,286,10],[266,23,286,17,"response"],[266,31,286,25],[266,32,286,26,"ok"],[266,34,286,28],[267,14,287,8],[267,15,287,9],[267,16,287,10],[267,22,287,16],[268,16,288,10],[268,23,288,17],[268,28,288,22],[269,14,289,8],[270,12,290,6],[270,13,290,7],[271,12,290,7],[271,28,272,6,"recover"],[271,35,272,13,"recover"],[271,36,272,13,"_x5"],[271,39,272,13],[272,14,272,13],[272,21,272,13,"_ref"],[272,25,272,13],[272,26,272,13,"apply"],[272,31,272,13],[272,38,272,13,"arguments"],[272,47,272,13],[273,12,272,13],[274,10,272,13],[274,13,290,7],[275,10,291,6,"priority"],[275,18,291,14],[275,20,291,16],[276,8,292,4],[276,9,292,5],[276,10,292,6],[278,8,294,4],[279,8,295,4],[279,12,295,8],[279,13,295,9,"addRecoveryStrategy"],[279,32,295,28],[279,33,295,29],[280,10,296,6,"name"],[280,14,296,10],[280,16,296,12],[280,36,296,32],[281,10,297,6,"canRecover"],[281,20,297,16],[281,22,297,19,"error"],[281,27,297,31],[281,31,297,36],[282,12,298,8],[282,16,298,14,"cachePatterns"],[282,29,298,27],[282,32,298,30],[282,33,299,10],[282,48,299,25],[282,50,300,10],[282,59,300,19],[282,61,301,10],[282,68,301,17],[282,70,302,10],[282,81,302,21],[282,83,303,10],[282,97,303,24],[282,98,304,9],[283,12,305,8],[283,19,305,15,"cachePatterns"],[283,32,305,28],[283,33,305,29,"some"],[283,37,305,33],[283,38,305,34,"pattern"],[283,45,305,41],[283,49,306,10,"error"],[283,54,306,15],[283,55,306,16,"message"],[283,62,306,23],[283,63,306,24,"toLowerCase"],[283,74,306,35],[283,75,306,36],[283,76,306,37],[283,77,306,38,"includes"],[283,85,306,46],[283,86,306,47,"pattern"],[283,93,306,54],[283,94,306,55,"toLowerCase"],[283,105,306,66],[283,106,306,67],[283,107,306,68],[283,108,307,8],[283,109,307,9],[284,10,308,6],[284,11,308,7],[285,10,309,6,"recover"],[285,17,309,13],[286,12,309,13],[286,16,309,13,"_ref2"],[286,21,309,13],[286,28,309,13,"_asyncToGenerator2"],[286,46,309,13],[286,47,309,13,"default"],[286,54,309,13],[286,56,309,15],[286,67,309,22,"error"],[286,72,309,34],[286,74,309,39],[287,14,310,8],[287,18,310,12],[288,16,311,10],[289,16,312,10],[289,20,312,14],[289,27,312,21,"caches"],[289,33,312,27],[289,38,312,32],[289,49,312,43],[289,51,312,45],[290,18,313,12],[290,22,313,18,"cacheNames"],[290,32,313,28],[290,41,313,37,"caches"],[290,47,313,43],[290,48,313,44,"keys"],[290,52,313,48],[290,53,313,49],[290,54,313,50],[291,18,314,12],[291,24,314,18,"Promise"],[291,31,314,25],[291,32,314,26,"all"],[291,35,314,29],[291,36,314,30,"cacheNames"],[291,46,314,40],[291,47,314,41,"map"],[291,50,314,44],[291,51,314,45,"name"],[291,55,314,49],[291,59,314,53,"caches"],[291,65,314,59],[291,66,314,60,"delete"],[291,72,314,66],[291,73,314,67,"name"],[291,77,314,71],[291,78,314,72],[291,79,314,73],[291,80,314,74],[292,16,315,10],[294,16,317,10],[295,16,318,10],[295,20,318,14],[296,18,319,12,"localStorage"],[296,30,319,24],[296,31,319,25,"clear"],[296,36,319,30],[296,37,319,31],[296,38,319,32],[297,16,320,10],[297,17,320,11],[297,18,320,12],[297,24,320,18],[297,25,320,19],[298,16,322,10,"EventLogger"],[298,40,322,21],[298,41,322,22,"info"],[298,45,322,26],[298,46,322,27],[298,61,322,42],[298,63,322,44],[298,92,322,73],[298,93,322,74],[299,16,323,10],[299,23,323,17],[299,27,323,21],[300,14,324,8],[300,15,324,9],[300,16,324,10],[300,22,324,16],[301,16,325,10],[301,23,325,17],[301,28,325,22],[302,14,326,8],[303,12,327,6],[303,13,327,7],[304,12,327,7],[304,28,309,6,"recover"],[304,35,309,13,"recover"],[304,36,309,13,"_x6"],[304,39,309,13],[305,14,309,13],[305,21,309,13,"_ref2"],[305,26,309,13],[305,27,309,13,"apply"],[305,32,309,13],[305,39,309,13,"arguments"],[305,48,309,13],[306,12,309,13],[307,10,309,13],[307,13,327,7],[308,10,328,6,"priority"],[308,18,328,14],[308,20,328,16],[309,8,329,4],[309,9,329,5],[309,10,329,6],[311,8,331,4],[312,8,332,4],[312,12,332,8],[312,13,332,9,"addRecoveryStrategy"],[312,32,332,28],[312,33,332,29],[313,10,333,6,"name"],[313,14,333,10],[313,16,333,12],[313,32,333,28],[314,10,334,6,"canRecover"],[314,20,334,16],[314,22,334,19,"error"],[314,27,334,31],[314,31,334,36],[315,12,335,8],[315,16,335,14,"memoryPatterns"],[315,30,335,28],[315,33,335,31],[315,34,336,10],[315,49,336,25],[315,51,337,10],[315,59,337,18],[315,61,338,10],[315,67,338,16],[315,69,339,10],[315,89,339,30],[315,90,340,9],[316,12,341,8],[316,19,341,15,"memoryPatterns"],[316,33,341,29],[316,34,341,30,"some"],[316,38,341,34],[316,39,341,35,"pattern"],[316,46,341,42],[316,50,342,10,"error"],[316,55,342,15],[316,56,342,16,"message"],[316,63,342,23],[316,64,342,24,"toLowerCase"],[316,75,342,35],[316,76,342,36],[316,77,342,37],[316,78,342,38,"includes"],[316,86,342,46],[316,87,342,47,"pattern"],[316,94,342,54],[316,95,342,55,"toLowerCase"],[316,106,342,66],[316,107,342,67],[316,108,342,68],[316,109,343,8],[316,110,343,9],[317,10,344,6],[317,11,344,7],[318,10,345,6,"recover"],[318,17,345,13],[319,12,345,13],[319,16,345,13,"_ref3"],[319,21,345,13],[319,28,345,13,"_asyncToGenerator2"],[319,46,345,13],[319,47,345,13,"default"],[319,54,345,13],[319,56,345,15],[319,67,345,22,"error"],[319,72,345,34],[319,74,345,39],[320,14,346,8],[320,18,346,12],[321,16,347,10],[322,16,348,10],[322,20,348,15,"window"],[322,26,348,21],[322,27,348,30,"gc"],[322,29,348,32],[322,31,348,34],[323,18,349,13,"window"],[323,24,349,19],[323,25,349,28,"gc"],[323,27,349,30],[323,28,349,31],[323,29,349,32],[324,16,350,10],[326,16,352,10],[327,16,353,10],[328,16,354,10,"EventLogger"],[328,40,354,21],[328,41,354,22,"info"],[328,45,354,26],[328,46,354,27],[328,61,354,42],[328,63,354,44],[328,90,354,71],[328,91,354,72],[330,16,356,10],[331,16,357,10],[331,22,357,16,"_this"],[331,27,357,20],[331,28,357,21,"sleep"],[331,33,357,26],[331,34,357,27],[331,37,357,30],[331,38,357,31],[332,16,358,10],[332,23,358,17],[332,27,358,21],[333,14,359,8],[333,15,359,9],[333,16,359,10],[333,22,359,16],[334,16,360,10],[334,23,360,17],[334,28,360,22],[335,14,361,8],[336,12,362,6],[336,13,362,7],[337,12,362,7],[337,28,345,6,"recover"],[337,35,345,13,"recover"],[337,36,345,13,"_x7"],[337,39,345,13],[338,14,345,13],[338,21,345,13,"_ref3"],[338,26,345,13],[338,27,345,13,"apply"],[338,32,345,13],[338,39,345,13,"arguments"],[338,48,345,13],[339,12,345,13],[340,10,345,13],[340,13,362,7],[341,10,363,6,"priority"],[341,18,363,14],[341,20,363,16],[342,8,364,4],[342,9,364,5],[342,10,364,6],[343,6,365,2],[344,4,365,3],[345,2,365,3],[345,7,368,0],[346,2,369,7],[346,6,369,13,"errorRecoveryManager"],[346,26,369,33],[346,29,369,33,"exports"],[346,36,369,33],[346,37,369,33,"errorRecoveryManager"],[346,57,369,33],[346,60,369,36],[346,64,369,40,"ErrorRecoveryManager"],[346,84,369,60],[346,85,369,61],[346,86,369,62],[347,0,369,63],[347,3]],"functionMap":{"names":["<global>","ErrorRecoveryManager","constructor","executeWithRecovery","addRecoveryStrategy","recoveryStrategies.sort$argument_0","removeRecoveryStrategy","recoveryStrategies.findIndex$argument_0","updateRetryConfig","attemptRecovery","calculateDelay","sleep","Promise$argument_0","setupDefaultStrategies","addRecoveryStrategy$argument_0.canRecover","networkPatterns.some$argument_0","addRecoveryStrategy$argument_0.recover","cachePatterns.some$argument_0","cacheNames.map$argument_0","memoryPatterns.some$argument_0"],"mappings":"AAA;OCiB;ECW;GDM;EEK;GFwF;EGK;iCCE,iCD;GHO;EKK;oDCC,4BD;GLS;EOK;GPO;EQK;GRkD;ESK;GTc;EUK;uBCC,kCD;GVC;EYK;kBCI;oCCS;qEDC;ODE;eGC;OHkB;kBCO;kCGQ;qEHC;ODE;eGC;6CEK,2BF;OHa;kBCO;mCKO;qELC;ODE;eGC;OHiB;GZG;CDC"}},"type":"js/module"}]}