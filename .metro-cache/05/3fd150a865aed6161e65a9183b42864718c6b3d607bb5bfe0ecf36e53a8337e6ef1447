{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /**\n   * Copyright Â© 2025 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * Fork of https://github.com/facebook/metro/blob/b8e9e64f1de97a67234e223f5ee21524b160e8a5/packages/metro-runtime/src/modules/asyncRequire.js#L1\n   * Adds worker support.\n   */\n  var _asyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  function maybeLoadBundle(moduleID, paths) {\n    var loadBundle = global[`${__METRO_GLOBAL_PREFIX__}__loadBundleAsync`];\n    if (loadBundle != null) {\n      var stringModuleID = String(moduleID);\n      if (paths != null) {\n        var bundlePath = paths[stringModuleID];\n        if (bundlePath != null) {\n          // NOTE: Errors will be swallowed by asyncRequire.prefetch\n          return loadBundle(bundlePath);\n        }\n      }\n    }\n    return undefined;\n  }\n  function asyncRequireImpl(moduleID, paths) {\n    var maybeLoadBundlePromise = maybeLoadBundle(moduleID, paths);\n    var importAll = function importAll() {\n      return require.importAll(moduleID);\n    };\n    if (maybeLoadBundlePromise != null) {\n      return maybeLoadBundlePromise.then(importAll);\n    }\n    return importAll();\n  }\n  function asyncRequire(_x, _x2, _x3) {\n    return _asyncRequire.apply(this, arguments);\n  } // Synchronous version of asyncRequire, which can still return a promise\n  // if the module is split.\n  function _asyncRequire() {\n    _asyncRequire = _asyncToGenerator(function* (moduleID, paths, moduleName // unused\n    ) {\n      return asyncRequireImpl(moduleID, paths);\n    });\n    return _asyncRequire.apply(this, arguments);\n  }\n  asyncRequire.unstable_importMaybeSync = function unstable_importMaybeSync(moduleID, paths) {\n    return asyncRequireImpl(moduleID, paths);\n  };\n  asyncRequire.prefetch = function (moduleID, paths, moduleName // unused\n  ) {\n    var _maybeLoadBundle;\n    (_maybeLoadBundle = maybeLoadBundle(moduleID, paths)) == null || _maybeLoadBundle.then(function () {}, function () {});\n  };\n  asyncRequire.unstable_resolve = function unstable_resolve(moduleID, paths) {\n    if (!paths) {\n      throw new Error('Bundle splitting is required for Web Worker imports');\n    }\n    var id = paths[moduleID];\n    if (!id) {\n      throw new Error('Worker import is missing from split bundle paths: ' + id);\n    }\n    return id;\n  };\n  module.exports = asyncRequire;\n});","lineCount":72,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,2,2,0],[14,6,2,0,"_asyncToGenerator"],[14,23,2,0],[14,26,2,0,"require"],[14,33,2,0],[14,34,2,0,"_dependencyMap"],[14,48,2,0],[15,2,12,0,"Object"],[15,8,12,6],[15,9,12,7,"defineProperty"],[15,23,12,21],[15,24,12,22,"exports"],[15,31,12,29],[15,33,12,31],[15,45,12,43],[15,47,12,45],[16,4,12,47,"value"],[16,9,12,52],[16,11,12,54],[17,2,12,59],[17,3,12,60],[17,4,12,61],[18,2,13,0],[18,11,13,9,"maybeLoadBundle"],[18,26,13,24,"maybeLoadBundle"],[18,27,13,25,"moduleID"],[18,35,13,33],[18,37,13,35,"paths"],[18,42,13,40],[18,44,13,42],[19,4,14,4],[19,8,14,10,"loadBundle"],[19,18,14,20],[19,21,14,23,"global"],[19,27,14,29],[19,28,14,30],[19,31,14,33,"__METRO_GLOBAL_PREFIX__"],[19,54,14,56],[19,73,14,75],[19,74,14,76],[20,4,15,4],[20,8,15,8,"loadBundle"],[20,18,15,18],[20,22,15,22],[20,26,15,26],[20,28,15,28],[21,6,16,8],[21,10,16,14,"stringModuleID"],[21,24,16,28],[21,27,16,31,"String"],[21,33,16,37],[21,34,16,38,"moduleID"],[21,42,16,46],[21,43,16,47],[22,6,17,8],[22,10,17,12,"paths"],[22,15,17,17],[22,19,17,21],[22,23,17,25],[22,25,17,27],[23,8,18,12],[23,12,18,18,"bundlePath"],[23,22,18,28],[23,25,18,31,"paths"],[23,30,18,36],[23,31,18,37,"stringModuleID"],[23,45,18,51],[23,46,18,52],[24,8,19,12],[24,12,19,16,"bundlePath"],[24,22,19,26],[24,26,19,30],[24,30,19,34],[24,32,19,36],[25,10,20,16],[26,10,21,16],[26,17,21,23,"loadBundle"],[26,27,21,33],[26,28,21,34,"bundlePath"],[26,38,21,44],[26,39,21,45],[27,8,22,12],[28,6,23,8],[29,4,24,4],[30,4,25,4],[30,11,25,11,"undefined"],[30,20,25,20],[31,2,26,0],[32,2,27,0],[32,11,27,9,"asyncRequireImpl"],[32,27,27,25,"asyncRequireImpl"],[32,28,27,26,"moduleID"],[32,36,27,34],[32,38,27,36,"paths"],[32,43,27,41],[32,45,27,43],[33,4,28,4],[33,8,28,10,"maybeLoadBundlePromise"],[33,30,28,32],[33,33,28,35,"maybeLoadBundle"],[33,48,28,50],[33,49,28,51,"moduleID"],[33,57,28,59],[33,59,28,61,"paths"],[33,64,28,66],[33,65,28,67],[34,4,29,4],[34,8,29,10,"importAll"],[34,17,29,19],[34,20,29,22],[34,29,29,10,"importAll"],[34,38,29,19,"importAll"],[34,39,29,19],[35,6,29,19],[35,13,29,28,"require"],[35,20,29,35],[35,21,29,36,"importAll"],[35,30,29,45],[35,31,29,46,"moduleID"],[35,39,29,54],[35,40,29,55],[36,4,29,55],[37,4,30,4],[37,8,30,8,"maybeLoadBundlePromise"],[37,30,30,30],[37,34,30,34],[37,38,30,38],[37,40,30,40],[38,6,31,8],[38,13,31,15,"maybeLoadBundlePromise"],[38,35,31,37],[38,36,31,38,"then"],[38,40,31,42],[38,41,31,43,"importAll"],[38,50,31,52],[38,51,31,53],[39,4,32,4],[40,4,33,4],[40,11,33,11,"importAll"],[40,20,33,20],[40,21,33,21],[40,22,33,22],[41,2,34,0],[42,2,34,1],[42,11,35,15,"asyncRequire"],[42,23,35,27,"asyncRequire"],[42,24,35,27,"_x"],[42,26,35,27],[42,28,35,27,"_x2"],[42,31,35,27],[42,33,35,27,"_x3"],[42,36,35,27],[43,4,35,27],[43,11,35,27,"_asyncRequire"],[43,24,35,27],[43,25,35,27,"apply"],[43,30,35,27],[43,37,35,27,"arguments"],[43,46,35,27],[44,2,35,27],[44,4,39,0],[45,2,40,0],[46,2,40,0],[46,11,40,0,"_asyncRequire"],[46,25,40,0],[47,4,40,0,"_asyncRequire"],[47,17,40,0],[47,20,40,0,"_asyncToGenerator"],[47,37,40,0],[47,38,35,0],[47,49,35,28,"moduleID"],[47,57,35,36],[47,59,35,38,"paths"],[47,64,35,43],[47,66,35,45,"moduleName"],[47,76,35,55],[47,77,35,56],[48,4,35,56],[48,6,36,2],[49,6,37,4],[49,13,37,11,"asyncRequireImpl"],[49,29,37,27],[49,30,37,28,"moduleID"],[49,38,37,36],[49,40,37,38,"paths"],[49,45,37,43],[49,46,37,44],[50,4,38,0],[50,5,38,1],[51,4,38,1],[51,11,38,1,"_asyncRequire"],[51,24,38,1],[51,25,38,1,"apply"],[51,30,38,1],[51,37,38,1,"arguments"],[51,46,38,1],[52,2,38,1],[53,2,41,0,"asyncRequire"],[53,14,41,12],[53,15,41,13,"unstable_importMaybeSync"],[53,39,41,37],[53,42,41,40],[53,51,41,49,"unstable_importMaybeSync"],[53,75,41,73,"unstable_importMaybeSync"],[53,76,41,74,"moduleID"],[53,84,41,82],[53,86,41,84,"paths"],[53,91,41,89],[53,93,41,91],[54,4,42,4],[54,11,42,11,"asyncRequireImpl"],[54,27,42,27],[54,28,42,28,"moduleID"],[54,36,42,36],[54,38,42,38,"paths"],[54,43,42,43],[54,44,42,44],[55,2,43,0],[55,3,43,1],[56,2,44,0,"asyncRequire"],[56,14,44,12],[56,15,44,13,"prefetch"],[56,23,44,21],[56,26,44,24],[56,36,44,34,"moduleID"],[56,44,44,42],[56,46,44,44,"paths"],[56,51,44,49],[56,53,44,51,"moduleName"],[56,63,44,61],[56,64,44,62],[57,2,44,62],[57,4,45,2],[58,4,45,2],[58,8,45,2,"_maybeLoadBundle"],[58,24,45,2],[59,4,46,4],[59,5,46,4,"_maybeLoadBundle"],[59,21,46,4],[59,24,46,4,"maybeLoadBundle"],[59,39,46,19],[59,40,46,20,"moduleID"],[59,48,46,28],[59,50,46,30,"paths"],[59,55,46,35],[59,56,46,36],[59,69,46,4,"_maybeLoadBundle"],[59,85,46,4],[59,86,46,38,"then"],[59,90,46,42],[59,91,46,43],[59,103,46,49],[59,104,46,51],[59,105,46,52],[59,107,46,54],[59,119,46,60],[59,120,46,62],[59,121,46,63],[59,122,46,64],[60,2,47,0],[60,3,47,1],[61,2,48,0,"asyncRequire"],[61,14,48,12],[61,15,48,13,"unstable_resolve"],[61,31,48,29],[61,34,48,32],[61,43,48,41,"unstable_resolve"],[61,59,48,57,"unstable_resolve"],[61,60,48,58,"moduleID"],[61,68,48,66],[61,70,48,68,"paths"],[61,75,48,73],[61,77,48,75],[62,4,49,4],[62,8,49,8],[62,9,49,9,"paths"],[62,14,49,14],[62,16,49,16],[63,6,50,8],[63,12,50,14],[63,16,50,18,"Error"],[63,21,50,23],[63,22,50,24],[63,75,50,77],[63,76,50,78],[64,4,51,4],[65,4,52,4],[65,8,52,10,"id"],[65,10,52,12],[65,13,52,15,"paths"],[65,18,52,20],[65,19,52,21,"moduleID"],[65,27,52,29],[65,28,52,30],[66,4,53,4],[66,8,53,8],[66,9,53,9,"id"],[66,11,53,11],[66,13,53,13],[67,6,54,8],[67,12,54,14],[67,16,54,18,"Error"],[67,21,54,23],[67,22,54,24],[67,74,54,76],[67,77,54,79,"id"],[67,79,54,81],[67,80,54,82],[68,4,55,4],[69,4,56,4],[69,11,56,11,"id"],[69,13,56,13],[70,2,57,0],[70,3,57,1],[71,2,58,0,"module"],[71,8,58,6],[71,9,58,7,"exports"],[71,16,58,14],[71,19,58,17,"asyncRequire"],[71,31,58,29],[72,0,58,30],[72,3]],"functionMap":{"names":["<global>","maybeLoadBundle","asyncRequireImpl","importAll","asyncRequire","unstable_importMaybeSync","asyncRequire.prefetch","maybeLoadBundle.then$argument_0","maybeLoadBundle.then$argument_1","unstable_resolve"],"mappings":"AAA;ACY;CDa;AEC;sBCE,iCD;CFK;AIC;CJG;wCKG;CLE;wBMC;2CCE,SD,EE,SF;CNC;gCSC;CTS"}},"type":"js/module"}]}