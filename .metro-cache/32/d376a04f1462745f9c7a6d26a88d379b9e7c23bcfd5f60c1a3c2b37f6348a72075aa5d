{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"X490zePjq+0IljAc8X0qcBg0iTo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":175},"end":{"line":6,"column":69,"index":244}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":246},"end":{"line":7,"column":40,"index":286}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"../supabase/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":288},"end":{"line":8,"column":46,"index":334}}],"key":"q3G/dBcB/lyqe2ZqsudXc9dkd4E=","exportNames":["*"]}},{"name":"../../config/analytics","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":336},"end":{"line":9,"column":58,"index":394}}],"key":"4gjS6BEK9IQgu06QXmlywlo09Ys=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":396},"end":{"line":10,"column":54,"index":450}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.trackUserAction = exports.setCurrentScreen = exports.reportError = exports.addContext = exports.addBreadcrumb = exports.CrashReporter = void 0;\n  var _toConsumableArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _defineProperty2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[6], \"@react-native-async-storage/async-storage\"));\n  var _reactNative = require(_dependencyMap[7], \"react-native\");\n  var _client = require(_dependencyMap[8], \"../supabase/client\");\n  var _analytics = require(_dependencyMap[9], \"../../config/analytics\");\n  var _EventLogger = require(_dependencyMap[10], \"../../utils/EventLogger\");\n  /**\r\n   * CrashReporter - Comprehensive error monitoring and crash reporting service\r\n   * Captures JavaScript errors, native crashes, and provides detailed error context\r\n   */\n  var CrashReporterService = /*#__PURE__*/function () {\n    function CrashReporterService() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      (0, _classCallCheck2.default)(this, CrashReporterService);\n      this.breadcrumbs = [];\n      this.userActions = [];\n      this.isInitialized = false;\n      this.reportQueue = [];\n      this.isFlushingReports = false;\n      this.databaseAvailable = false;\n      this.databaseUnavailableLogged = false;\n      this.config = Object.assign({\n        enabled: _analytics.ANALYTICS_CONFIG.errors.enabled,\n        environment: __DEV__ ? 'development' : 'production',\n        maxBreadcrumbs: _analytics.ANALYTICS_CONFIG.errors.maxBreadcrumbs,\n        maxUserActions: 50,\n        captureConsoleErrors: _analytics.ANALYTICS_CONFIG.errors.captureConsoleErrors,\n        captureUnhandledPromiseRejections: _analytics.ANALYTICS_CONFIG.errors.captureUnhandledPromiseRejections,\n        sampleRate: _analytics.ANALYTICS_CONFIG.errors.sampleRate\n      }, config);\n      this.sessionId = this.generateSessionId();\n    }\n\n    /**\r\n     * Initialize the crash reporter\r\n     */\n    return (0, _createClass2.default)(CrashReporterService, [{\n      key: \"initialize\",\n      value: (function () {\n        var _initialize = (0, _asyncToGenerator2.default)(function* () {\n          var _this = this;\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          try {\n            this.config = Object.assign({}, this.config, options);\n            if (!this.config.enabled) {\n              _EventLogger.EventLogger.info('CrashReporter', 'Crash reporting disabled');\n              this.isInitialized = true; // Mark as initialized even when disabled\n              return;\n            }\n\n            // Initialize synchronous setup first\n            yield Promise.resolve().then(function () {\n              // Setup global error handlers\n              _this.setupGlobalErrorHandlers();\n\n              // Setup console interception\n              _this.setupConsoleInterception();\n\n              // Setup periodic flush\n              _this.setupPeriodicFlush();\n            });\n\n            // Check database availability in background (only log once)\n            this.checkDatabaseAvailability().catch(function (error) {\n              if (!_this.databaseUnavailableLogged) {\n                _EventLogger.EventLogger.warn('CrashReporter', 'Database not available - reports will be stored locally only', error);\n                _this.databaseUnavailableLogged = true;\n              }\n              _this.databaseAvailable = false;\n            });\n\n            // Load offline reports in background\n            this.loadOfflineReports().catch(function (error) {\n              _EventLogger.EventLogger.error('CrashReporter', 'Failed to load offline reports', error);\n            });\n\n            // Add initial breadcrumb\n            this.addBreadcrumb({\n              category: 'lifecycle',\n              message: 'Crash reporter initialized',\n              level: 'info',\n              data: {\n                config: {\n                  enabled: this.config.enabled,\n                  environment: this.config.environment\n                }\n              }\n            });\n            this.isInitialized = true;\n            _EventLogger.EventLogger.info('CrashReporter', 'Crash reporter initialized successfully');\n          } catch (error) {\n            this.isInitialized = true; // Mark as initialized to prevent blocking\n            _EventLogger.EventLogger.error('CrashReporter', 'Failed to initialize crash reporter', error);\n          }\n        });\n        function initialize() {\n          return _initialize.apply(this, arguments);\n        }\n        return initialize;\n      }()\n      /**\r\n       * Check if the database is available and accessible\r\n       */\n      )\n    }, {\n      key: \"checkDatabaseAvailability\",\n      value: (function () {\n        var _checkDatabaseAvailability = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            if (!_client.supabase) {\n              throw new Error('Supabase client not initialized');\n            }\n\n            // Test table access with INSERT capability (more comprehensive than SELECT)\n            // Create a minimal test record to verify the table exists and we can write to it\n            var testReportId = `test-availability-${Date.now()}-${Math.random().toString(36).substr(2, 5)}`;\n            var _yield$supabase$from$ = yield _client.supabase.from('error_reports').insert({\n                id: testReportId,\n                error_name: 'DatabaseAvailabilityTest',\n                error_message: 'Test error for database availability check',\n                error_type: 'custom',\n                error_fatal: false,\n                severity: 'low',\n                fingerprint: 'test-availability-check',\n                context: {\n                  test: true\n                },\n                tags: {\n                  test: 'availability_check'\n                }\n              }),\n              insertError = _yield$supabase$from$.error;\n            if (insertError) {\n              // Handle specific error cases\n              if (insertError.code === '42P01') {\n                // Table does not exist\n                _EventLogger.EventLogger.warn('CrashReporter', 'Error reports table does not exist', {\n                  suggestion: 'Run the SQL setup script: scripts/setup-monitoring-tables.sql'\n                });\n              } else if (insertError.code === '42501') {\n                // Permission denied\n                _EventLogger.EventLogger.warn('CrashReporter', 'Permission denied for error reports table', {\n                  suggestion: 'Check RLS policies and authentication'\n                });\n              } else {\n                // Other database error\n                _EventLogger.EventLogger.warn('CrashReporter', 'Error reports table not accessible', {\n                  tableError: insertError.message,\n                  code: insertError.code\n                });\n              }\n              this.databaseAvailable = false;\n              throw new Error(`Table access error: ${insertError.message} (code: ${insertError.code})`);\n            }\n\n            // Clean up the test record\n            yield _client.supabase.from('error_reports').delete().eq('id', testReportId);\n            this.databaseAvailable = true;\n            _EventLogger.EventLogger.info('CrashReporter', 'Database available for error reporting');\n          } catch (error) {\n            this.databaseAvailable = false;\n\n            // Log specific guidance based on error type\n            var message = 'Database not available - will store reports locally';\n            var errorDetails = {\n              error: error instanceof Error ? error.message : String(error)\n            };\n            if (error instanceof Error) {\n              if (error.message.includes('42P01') || error.message.includes('does not exist')) {\n                message = 'Error reports table missing - run setup script to create tables';\n                errorDetails.setupScript = 'scripts/setup-monitoring-tables.sql';\n              } else if (error.message.includes('42501') || error.message.includes('permission')) {\n                message = 'Database permission denied - check RLS policies';\n              } else if (error.message.includes('not initialized')) {\n                message = 'Supabase not configured - check environment variables';\n              }\n            }\n            _EventLogger.EventLogger.warn('CrashReporter', message, errorDetails);\n            throw error;\n          }\n        });\n        function checkDatabaseAvailability() {\n          return _checkDatabaseAvailability.apply(this, arguments);\n        }\n        return checkDatabaseAvailability;\n      }()\n      /**\r\n       * Set user context\r\n       */\n      )\n    }, {\n      key: \"setUser\",\n      value: function setUser(userId, context) {\n        this.config.userId = userId;\n        this.config.userContext = context;\n        this.addBreadcrumb({\n          category: 'user',\n          message: 'User context updated',\n          level: 'info',\n          data: {\n            userId: userId,\n            context: context\n          }\n        });\n      }\n\n      /**\r\n       * Clear user context\r\n       */\n    }, {\n      key: \"clearUser\",\n      value: function clearUser() {\n        var oldUserId = this.config.userId;\n        this.config.userId = undefined;\n        this.config.userContext = undefined;\n        this.addBreadcrumb({\n          category: 'user',\n          message: 'User context cleared',\n          level: 'info',\n          data: {\n            oldUserId: oldUserId\n          }\n        });\n      }\n\n      /**\r\n       * Add a breadcrumb\r\n       */\n    }, {\n      key: \"addBreadcrumb\",\n      value: function addBreadcrumb(breadcrumb) {\n        if (!this.isInitialized) return;\n        var fullBreadcrumb = Object.assign({\n          timestamp: new Date().toISOString()\n        }, breadcrumb);\n        this.breadcrumbs.push(fullBreadcrumb);\n\n        // Maintain max breadcrumbs limit\n        if (this.breadcrumbs.length > this.config.maxBreadcrumbs) {\n          this.breadcrumbs = this.breadcrumbs.slice(-this.config.maxBreadcrumbs);\n        }\n      }\n\n      /**\r\n       * Track user action\r\n       */\n    }, {\n      key: \"trackUserAction\",\n      value: function trackUserAction(action) {\n        if (!this.isInitialized) return;\n        var fullAction = Object.assign({\n          timestamp: new Date().toISOString()\n        }, action);\n        this.userActions.push(fullAction);\n\n        // Maintain max actions limit\n        if (this.userActions.length > this.config.maxUserActions) {\n          this.userActions = this.userActions.slice(-this.config.maxUserActions);\n        }\n\n        // Also add as breadcrumb\n        this.addBreadcrumb({\n          category: 'user_action',\n          message: `${action.type}: ${action.target}`,\n          level: 'info',\n          data: action.data\n        });\n      }\n\n      /**\r\n       * Manually report an error\r\n       */\n    }, {\n      key: \"reportError\",\n      value: function reportError(error, context) {\n        var severity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'medium';\n        if (!this.shouldReportError()) return;\n        this.createAndQueueReport({\n          name: error.name,\n          message: error.message,\n          stack: error.stack,\n          type: 'custom',\n          fatal: false\n        }, context, severity);\n      }\n\n      /**\r\n       * Report a network error\r\n       */\n    }, {\n      key: \"reportNetworkError\",\n      value: function reportNetworkError(url, method, statusCode, error, context) {\n        if (!this.shouldReportError()) return;\n        this.createAndQueueReport({\n          name: 'NetworkError',\n          message: `${method} ${url} - ${statusCode}: ${error.message}`,\n          stack: error.stack,\n          type: 'network',\n          fatal: false\n        }, Object.assign({\n          url: url,\n          method: method,\n          statusCode: statusCode\n        }, context), 'medium');\n      }\n\n      /**\r\n       * Report a fatal error (app crash)\r\n       */\n    }, {\n      key: \"reportFatalError\",\n      value: function reportFatalError(error, context) {\n        this.createAndQueueReport({\n          name: error.name,\n          message: error.message,\n          stack: error.stack,\n          type: 'javascript',\n          fatal: true\n        }, context, 'critical');\n\n        // Immediately flush fatal errors\n        this.flushReports();\n      }\n\n      /**\r\n       * Set current screen context\r\n       */\n    }, {\n      key: \"setCurrentScreen\",\n      value: function setCurrentScreen(screenName, params) {\n        this.addBreadcrumb({\n          category: 'navigation',\n          message: `Navigated to ${screenName}`,\n          level: 'info',\n          data: {\n            screenName: screenName,\n            params: params\n          }\n        });\n\n        // Store current screen for error reports\n        this.config.userContext = Object.assign({}, this.config.userContext, {\n          current_screen: screenName,\n          screen_params: params\n        });\n      }\n\n      /**\r\n       * Add custom context\r\n       */\n    }, {\n      key: \"addContext\",\n      value: function addContext(key, value) {\n        this.config.userContext = Object.assign({}, this.config.userContext, (0, _defineProperty2.default)({}, key, value));\n      }\n\n      /**\r\n       * Create and queue an error report\r\n       */\n    }, {\n      key: \"createAndQueueReport\",\n      value: (function () {\n        var _createAndQueueReport = (0, _asyncToGenerator2.default)(function* (error, customContext) {\n          var severity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'medium';\n          try {\n            var report = {\n              id: this.generateReportId(),\n              timestamp: new Date().toISOString(),\n              error: error,\n              context: yield this.buildErrorContext(customContext),\n              breadcrumbs: (0, _toConsumableArray2.default)(this.breadcrumbs),\n              user_actions: (0, _toConsumableArray2.default)(this.userActions),\n              performance_metrics: yield this.getPerformanceMetrics(),\n              severity: severity,\n              fingerprint: this.generateFingerprint(error),\n              tags: {\n                environment: this.config.environment,\n                platform: _reactNative.Platform.OS,\n                version: '1.0.0' // TODO: Get from package.json\n              }\n            };\n\n            // Apply beforeSend filter\n            var finalReport = this.config.beforeSend ? this.config.beforeSend(report) : report;\n            if (!finalReport) return;\n            this.reportQueue.push(finalReport);\n            _EventLogger.EventLogger.error('CrashReporter', 'Error report queued', error, {\n              report_id: report.id,\n              severity: severity\n            });\n\n            // Auto-flush if queue is getting full or for critical errors\n            if (this.reportQueue.length >= 10 || severity === 'critical') {\n              this.flushReports();\n            }\n          } catch (reportError) {\n            _EventLogger.EventLogger.error('CrashReporter', 'Failed to create error report', reportError);\n          }\n        });\n        function createAndQueueReport(_x, _x2) {\n          return _createAndQueueReport.apply(this, arguments);\n        }\n        return createAndQueueReport;\n      }()\n      /**\r\n       * Build error context\r\n       */\n      )\n    }, {\n      key: \"buildErrorContext\",\n      value: (function () {\n        var _buildErrorContext = (0, _asyncToGenerator2.default)(function* (customContext) {\n          var _this$config$userCont;\n          var context = {\n            user_id: this.config.userId,\n            session_id: this.sessionId,\n            app_version: '1.0.0',\n            // TODO: Get from package.json or Constants\n            build_number: __DEV__ ? 'development' : 'production',\n            platform: _reactNative.Platform.OS,\n            os_version: _reactNative.Platform.Version.toString(),\n            screen_name: (_this$config$userCont = this.config.userContext) == null ? void 0 : _this$config$userCont.current_screen,\n            custom_context: Object.assign({}, this.config.userContext, customContext)\n          };\n\n          // Add device info if available\n          try {\n            // In a real implementation, you'd use react-native-device-info\n            // context.device_model = await DeviceInfo.getModel();\n            // context.memory_usage = await DeviceInfo.getTotalMemory();\n            // context.battery_level = await DeviceInfo.getBatteryLevel();\n          } catch (error) {\n            // Device info not available, continue without it\n          }\n          return context;\n        });\n        function buildErrorContext(_x3) {\n          return _buildErrorContext.apply(this, arguments);\n        }\n        return buildErrorContext;\n      }()\n      /**\r\n       * Get current performance metrics\r\n       */\n      )\n    }, {\n      key: \"getPerformanceMetrics\",\n      value: (function () {\n        var _getPerformanceMetrics = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            // In a real implementation, you'd collect actual performance metrics\n            var memoryPressure = false; // Would check actual memory pressure\n\n            return {\n              memory_pressure: memoryPressure\n              // cpu_usage: await getCpuUsage(),\n              // frame_drops: getFrameDrops(),\n            };\n          } catch (error) {\n            return undefined;\n          }\n        });\n        function getPerformanceMetrics() {\n          return _getPerformanceMetrics.apply(this, arguments);\n        }\n        return getPerformanceMetrics;\n      }()\n      /**\r\n       * Generate error fingerprint for deduplication\r\n       */\n      )\n    }, {\n      key: \"generateFingerprint\",\n      value: function generateFingerprint(error) {\n        var _error$stack;\n        // Simple fingerprint based on error type and first few lines of stack\n        var stackLines = ((_error$stack = error.stack) == null ? void 0 : _error$stack.split('\\n').slice(0, 3)) || [];\n        var fingerprintData = {\n          name: error.name,\n          message: error.message.slice(0, 100),\n          stack: stackLines.join('\\n')\n        };\n\n        // In a real implementation, you'd use a proper hashing function\n        return btoa(JSON.stringify(fingerprintData)).slice(0, 20);\n      }\n\n      /**\r\n       * Setup global error handlers\r\n       */\n    }, {\n      key: \"setupGlobalErrorHandlers\",\n      value: function setupGlobalErrorHandlers() {\n        var _this2 = this;\n        // Handle JavaScript errors\n        if (typeof ErrorUtils !== 'undefined') {\n          var originalHandler = ErrorUtils.getGlobalHandler();\n          ErrorUtils.setGlobalHandler(function (error, isFatal) {\n            _this2.createAndQueueReport({\n              name: error.name,\n              message: error.message,\n              stack: error.stack,\n              type: 'javascript',\n              fatal: isFatal\n            }, undefined, isFatal ? 'critical' : 'high');\n\n            // Call original handler\n            if (originalHandler) {\n              originalHandler(error, isFatal);\n            }\n          });\n        }\n\n        // Handle unhandled promise rejections\n        if (this.config.captureUnhandledPromiseRejections && typeof global !== 'undefined') {\n          var _originalHandler = global.onunhandledrejection;\n          global.onunhandledrejection = function (event) {\n            var _event$reason, _event$reason2, _event$promise;\n            _this2.createAndQueueReport({\n              name: 'UnhandledPromiseRejection',\n              message: ((_event$reason = event.reason) == null ? void 0 : _event$reason.message) || 'Unhandled promise rejection',\n              stack: (_event$reason2 = event.reason) == null ? void 0 : _event$reason2.stack,\n              type: 'unhandled_rejection',\n              fatal: false\n            }, {\n              promise: (_event$promise = event.promise) == null ? void 0 : _event$promise.toString()\n            }, 'high');\n            if (_originalHandler) {\n              _originalHandler(event);\n            }\n          };\n        }\n      }\n\n      /**\r\n       * Setup console interception\r\n       */\n    }, {\n      key: \"setupConsoleInterception\",\n      value: function setupConsoleInterception() {\n        var _this3 = this;\n        if (!this.config.captureConsoleErrors) return;\n\n        // Intercept console.error\n        this.originalConsoleError = console.error;\n        console.error = function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          _this3.addBreadcrumb({\n            category: 'console',\n            message: args.map(function (arg) {\n              return String(arg);\n            }).join(' '),\n            level: 'error'\n          });\n          _this3.originalConsoleError.apply(console, args);\n        };\n\n        // Intercept console.warn\n        this.originalConsoleWarn = console.warn;\n        console.warn = function () {\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n          _this3.addBreadcrumb({\n            category: 'console',\n            message: args.map(function (arg) {\n              return String(arg);\n            }).join(' '),\n            level: 'warning'\n          });\n          _this3.originalConsoleWarn.apply(console, args);\n        };\n      }\n\n      /**\r\n       * Setup periodic report flushing\r\n       */\n    }, {\n      key: \"setupPeriodicFlush\",\n      value: function setupPeriodicFlush() {\n        var _this4 = this;\n        // Delay initial flush to ensure services are fully ready\n        setTimeout(function () {\n          setInterval(function () {\n            if (_this4.isInitialized && _this4.config.enabled && _this4.reportQueue.length > 0) {\n              _EventLogger.EventLogger.debug('CrashReporter', 'Periodic flush triggered', {\n                queueLength: _this4.reportQueue.length\n              });\n              _this4.flushReports().catch(function (error) {\n                _EventLogger.EventLogger.error('CrashReporter', 'Periodic flush failed', error);\n              });\n            }\n          }, 60000); // Flush every minute\n        }, 5000); // Wait 5 seconds before starting periodic flush\n      }\n\n      /**\r\n       * Flush queued reports (public interface)\r\n       */\n    }, {\n      key: \"flush\",\n      value: (function () {\n        var _flush = (0, _asyncToGenerator2.default)(function* () {\n          if (!this.isInitialized) {\n            _EventLogger.EventLogger.warn('CrashReporter', 'Cannot flush before initialization');\n            return;\n          }\n          return this.flushReports();\n        });\n        function flush() {\n          return _flush.apply(this, arguments);\n        }\n        return flush;\n      }()\n      /**\r\n       * Flush queued reports (internal implementation)\r\n       */\n      )\n    }, {\n      key: \"flushReports\",\n      value: (function () {\n        var _flushReports = (0, _asyncToGenerator2.default)(function* () {\n          if (!this.config.enabled || !this.isInitialized || this.isFlushingReports || this.reportQueue.length === 0) {\n            _EventLogger.EventLogger.debug('CrashReporter', 'Skipping flush', {\n              enabled: this.config.enabled,\n              initialized: this.isInitialized,\n              flushing: this.isFlushingReports,\n              queueLength: this.reportQueue.length\n            });\n            return;\n          }\n\n          // If database is not available, just store reports offline and don't try to send\n          if (!this.databaseAvailable) {\n            var _reports = (0, _toConsumableArray2.default)(this.reportQueue);\n            this.reportQueue = [];\n            yield this.storeOfflineReports(_reports);\n            _EventLogger.EventLogger.debug('CrashReporter', 'Stored reports offline - database not available', {\n              count: _reports.length\n            });\n            return;\n          }\n          this.isFlushingReports = true;\n          var reports = (0, _toConsumableArray2.default)(this.reportQueue);\n          this.reportQueue = [];\n          try {\n            // Send to backend with detailed error tracking\n            yield this.sendReports(reports);\n            _EventLogger.EventLogger.info('CrashReporter', 'Reports flushed successfully', {\n              count: reports.length\n            });\n          } catch (error) {\n            var _this$reportQueue;\n            // Put reports back in queue and store offline\n            (_this$reportQueue = this.reportQueue).unshift.apply(_this$reportQueue, (0, _toConsumableArray2.default)(reports));\n            yield this.storeOfflineReports(reports);\n\n            // Log actual error details\n            var errorDetails = {\n              name: error instanceof Error ? error.name : 'UnknownError',\n              message: error instanceof Error ? error.message : String(error),\n              stack: error instanceof Error ? error.stack : undefined,\n              reportCount: reports.length,\n              isSupabaseError: error && typeof error === 'object' && 'code' in error,\n              errorCode: error && typeof error === 'object' && 'code' in error ? error.code : undefined\n            };\n            _EventLogger.EventLogger.error('CrashReporter', 'Failed to flush reports - detailed error', errorDetails);\n          } finally {\n            this.isFlushingReports = false;\n          }\n        });\n        function flushReports() {\n          return _flushReports.apply(this, arguments);\n        }\n        return flushReports;\n      }()\n      /**\r\n       * Send reports to backend\r\n       */\n      )\n    }, {\n      key: \"sendReports\",\n      value: (function () {\n        var _sendReports = (0, _asyncToGenerator2.default)(function* (reports) {\n          // Check if Supabase is properly configured\n          if (!_client.supabase) {\n            throw new Error('Supabase client not initialized');\n          }\n\n          // Database availability is already checked in checkDatabaseAvailability()\n          // No need to test again here since we only call this when databaseAvailable is true\n\n          var errors = [];\n          var results = yield Promise.allSettled(reports.map(/*#__PURE__*/function () {\n            var _ref = (0, _asyncToGenerator2.default)(function* (report) {\n              try {\n                var _yield$supabase$from$2 = yield _client.supabase.from('error_reports').insert({\n                    id: report.id,\n                    timestamp: report.timestamp,\n                    error_name: report.error.name,\n                    error_message: report.error.message,\n                    error_stack: report.error.stack,\n                    error_type: report.error.type,\n                    error_fatal: report.error.fatal,\n                    context: report.context,\n                    breadcrumbs: report.breadcrumbs,\n                    user_actions: report.user_actions,\n                    performance_metrics: report.performance_metrics,\n                    severity: report.severity,\n                    fingerprint: report.fingerprint,\n                    tags: report.tags\n                  }),\n                  error = _yield$supabase$from$2.error;\n                if (error) {\n                  _EventLogger.EventLogger.error('CrashReporter', `Failed to insert report ${report.id}`, {\n                    supabaseError: error,\n                    errorCode: error.code,\n                    errorMessage: error.message,\n                    reportId: report.id\n                  });\n                  throw new Error(`Supabase error: ${error.message} (code: ${error.code})`);\n                }\n                return {\n                  success: true,\n                  reportId: report.id\n                };\n              } catch (insertError) {\n                _EventLogger.EventLogger.error('CrashReporter', `Database insert failed for report ${report.id}`, {\n                  error: insertError,\n                  reportId: report.id\n                });\n                throw insertError;\n              }\n            });\n            return function (_x5) {\n              return _ref.apply(this, arguments);\n            };\n          }()));\n\n          // Collect all errors from failed insertions\n          results.forEach(function (result, index) {\n            if (result.status === 'rejected') {\n              errors.push(new Error(`Report ${reports[index].id}: ${result.reason}`));\n            }\n          });\n\n          // If any errors occurred, throw with details\n          if (errors.length > 0) {\n            var errorMessage = `Failed to send ${errors.length}/${reports.length} error reports:\\n${errors.map(function (e) {\n              return e.message;\n            }).join('\\n')}`;\n            _EventLogger.EventLogger.error('CrashReporter', 'Batch send failed with detailed errors', {\n              failedCount: errors.length,\n              totalCount: reports.length,\n              errors: errors.map(function (e) {\n                return {\n                  name: e.name,\n                  message: e.message,\n                  stack: e.stack\n                };\n              })\n            });\n            throw new Error(errorMessage);\n          }\n        });\n        function sendReports(_x4) {\n          return _sendReports.apply(this, arguments);\n        }\n        return sendReports;\n      }()\n      /**\r\n       * Load offline reports\r\n       */\n      )\n    }, {\n      key: \"loadOfflineReports\",\n      value: (function () {\n        var _loadOfflineReports = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var offlineReports = yield _asyncStorage.default.getItem(CrashReporterService.OFFLINE_REPORTS_KEY);\n            if (offlineReports) {\n              var _this$reportQueue2;\n              var reports = JSON.parse(offlineReports);\n              (_this$reportQueue2 = this.reportQueue).unshift.apply(_this$reportQueue2, (0, _toConsumableArray2.default)(reports));\n              yield _asyncStorage.default.removeItem(CrashReporterService.OFFLINE_REPORTS_KEY);\n              _EventLogger.EventLogger.info('CrashReporter', 'Loaded offline reports', {\n                count: reports.length\n              });\n\n              // Try to sync loaded reports when database becomes available\n              if (this.databaseAvailable) {\n                this.syncOfflineReports().catch(function (error) {\n                  _EventLogger.EventLogger.error('CrashReporter', 'Failed to sync offline reports immediately', error);\n                });\n              }\n            }\n          } catch (error) {\n            // Handle oversized data error specifically\n            if (error && typeof error === 'object' && 'message' in error && typeof error.message === 'string' && error.message.includes('Row too big')) {\n              _EventLogger.EventLogger.warn('CrashReporter', 'Offline reports too large, clearing data', {\n                error: error.message\n              });\n              yield this.clearOversizedOfflineData();\n              this.reportQueue = [];\n            } else {\n              _EventLogger.EventLogger.error('CrashReporter', 'Failed to load offline reports', error);\n            }\n          }\n        });\n        function loadOfflineReports() {\n          return _loadOfflineReports.apply(this, arguments);\n        }\n        return loadOfflineReports;\n      }()\n      /**\r\n       * Clear oversized offline data when it cannot be loaded\r\n       */\n      )\n    }, {\n      key: \"clearOversizedOfflineData\",\n      value: (function () {\n        var _clearOversizedOfflineData = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            yield _asyncStorage.default.removeItem(CrashReporterService.OFFLINE_REPORTS_KEY);\n            _EventLogger.EventLogger.info('CrashReporter', 'Cleared oversized offline reports');\n          } catch (error) {\n            _EventLogger.EventLogger.error('CrashReporter', 'Failed to clear offline data', error);\n          }\n        });\n        function clearOversizedOfflineData() {\n          return _clearOversizedOfflineData.apply(this, arguments);\n        }\n        return clearOversizedOfflineData;\n      }()\n      /**\r\n       * Store reports offline\r\n       */\n      )\n    }, {\n      key: \"storeOfflineReports\",\n      value: (function () {\n        var _storeOfflineReports = (0, _asyncToGenerator2.default)(function* (reports) {\n          try {\n            var existingReports = yield _asyncStorage.default.getItem(CrashReporterService.OFFLINE_REPORTS_KEY);\n            var allReports = existingReports ? JSON.parse(existingReports) : [];\n            allReports.push.apply(allReports, (0, _toConsumableArray2.default)(reports));\n\n            // Limit offline storage to prevent storage bloat (keep last 50 reports to avoid cursor overflow)\n            var maxOfflineReports = 50;\n            if (allReports.length > maxOfflineReports) {\n              allReports.splice(0, allReports.length - maxOfflineReports);\n              _EventLogger.EventLogger.debug('CrashReporter', `Trimmed offline reports to ${maxOfflineReports} most recent`);\n            }\n\n            // Check size before storing (rough estimate: 5KB per report max)\n            var estimatedSize = JSON.stringify(allReports).length;\n            if (estimatedSize > 250000) {\n              // ~250KB limit\n              // Keep only the most recent 25 if still too large\n              allReports.splice(0, allReports.length - 25);\n              _EventLogger.EventLogger.warn('CrashReporter', 'Offline reports too large, reduced to 25 most recent');\n            }\n            yield _asyncStorage.default.setItem(CrashReporterService.OFFLINE_REPORTS_KEY, JSON.stringify(allReports));\n            _EventLogger.EventLogger.info('CrashReporter', 'Stored reports offline', {\n              newCount: reports.length,\n              totalStored: allReports.length\n            });\n          } catch (error) {\n            _EventLogger.EventLogger.error('CrashReporter', 'Failed to store offline reports', error);\n          }\n        });\n        function storeOfflineReports(_x6) {\n          return _storeOfflineReports.apply(this, arguments);\n        }\n        return storeOfflineReports;\n      }()\n      /**\r\n       * Sync offline reports when database becomes available\r\n       */\n      )\n    }, {\n      key: \"syncOfflineReports\",\n      value: (function () {\n        var _syncOfflineReports = (0, _asyncToGenerator2.default)(function* () {\n          if (!this.databaseAvailable || !this.isInitialized) {\n            _EventLogger.EventLogger.debug('CrashReporter', 'Cannot sync offline reports - database not available or not initialized');\n            return;\n          }\n          try {\n            // Check if we have reports in queue that came from offline storage\n            if (this.reportQueue.length > 0) {\n              _EventLogger.EventLogger.info('CrashReporter', 'Syncing offline reports to database', {\n                count: this.reportQueue.length\n              });\n              yield this.flushReports();\n            }\n            _EventLogger.EventLogger.info('CrashReporter', 'Offline reports sync completed');\n          } catch (error) {\n            _EventLogger.EventLogger.error('CrashReporter', 'Failed to sync offline reports', error);\n          }\n        });\n        function syncOfflineReports() {\n          return _syncOfflineReports.apply(this, arguments);\n        }\n        return syncOfflineReports;\n      }()\n      /**\r\n       * Check database availability and sync offline data if newly available\r\n       */\n      )\n    }, {\n      key: \"recheckDatabaseAvailability\",\n      value: (function () {\n        var _recheckDatabaseAvailability = (0, _asyncToGenerator2.default)(function* () {\n          var wasAvailable = this.databaseAvailable;\n          try {\n            yield this.checkDatabaseAvailability();\n\n            // If database just became available, sync offline reports and reset log flag\n            if (!wasAvailable && this.databaseAvailable) {\n              _EventLogger.EventLogger.info('CrashReporter', 'Database became available - syncing offline reports');\n              this.databaseUnavailableLogged = false; // Reset so we can log again if it goes down\n              yield this.syncOfflineReports();\n            }\n          } catch (error) {\n            this.databaseAvailable = false;\n            _EventLogger.EventLogger.debug('CrashReporter', 'Database still not available');\n          }\n        });\n        function recheckDatabaseAvailability() {\n          return _recheckDatabaseAvailability.apply(this, arguments);\n        }\n        return recheckDatabaseAvailability;\n      }()\n      /**\r\n       * Check if we should report this error (sampling)\r\n       */\n      )\n    }, {\n      key: \"shouldReportError\",\n      value: function shouldReportError() {\n        if (!this.config.enabled || !this.isInitialized) {\n          return false;\n        }\n\n        // Always report in development\n        if (__DEV__) {\n          return true;\n        }\n\n        // Apply sample rate\n        return Math.random() < this.config.sampleRate;\n      }\n\n      /**\r\n       * Generate session ID\r\n       */\n    }, {\n      key: \"generateSessionId\",\n      value: function generateSessionId() {\n        return `crash-session-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n      }\n\n      /**\r\n       * Generate report ID\r\n       */\n    }, {\n      key: \"generateReportId\",\n      value: function generateReportId() {\n        return `crash-report-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n      }\n\n      /**\r\n       * Cleanup when shutting down\r\n       */\n    }, {\n      key: \"shutdown\",\n      value: (function () {\n        var _shutdown = (0, _asyncToGenerator2.default)(function* () {\n          // Restore original console methods\n          if (this.originalConsoleError) {\n            console.error = this.originalConsoleError;\n          }\n          if (this.originalConsoleWarn) {\n            console.warn = this.originalConsoleWarn;\n          }\n\n          // Flush remaining reports\n          if (this.reportQueue.length > 0) {\n            yield this.flushReports();\n          }\n          this.isInitialized = false;\n          _EventLogger.EventLogger.info('CrashReporter', 'Crash reporter shut down');\n        });\n        function shutdown() {\n          return _shutdown.apply(this, arguments);\n        }\n        return shutdown;\n      }())\n    }]);\n  }(); // Singleton instance\n  // Track if we've already logged database unavailability\n  // Storage keys\n  CrashReporterService.OFFLINE_REPORTS_KEY = 'crash_reports_offline';\n  CrashReporterService.SESSION_ID_KEY = 'crash_reporter_session_id';\n  var CrashReporter = exports.CrashReporter = new CrashReporterService();\n\n  // Convenience functions\n  var reportError = exports.reportError = function reportError(error, context, severity) {\n    CrashReporter.reportError(error, context, severity);\n  };\n  var addBreadcrumb = exports.addBreadcrumb = function addBreadcrumb(breadcrumb) {\n    CrashReporter.addBreadcrumb(breadcrumb);\n  };\n  var trackUserAction = exports.trackUserAction = function trackUserAction(action) {\n    CrashReporter.trackUserAction(action);\n  };\n  var setCurrentScreen = exports.setCurrentScreen = function setCurrentScreen(screenName, params) {\n    CrashReporter.setCurrentScreen(screenName, params);\n  };\n  var addContext = exports.addContext = function addContext(key, value) {\n    CrashReporter.addContext(key, value);\n  };\n\n  // Export types\n});","lineCount":1038,"map":[[12,2,6,0],[12,6,6,0,"_asyncStorage"],[12,19,6,0],[12,22,6,0,"_interopRequireDefault"],[12,44,6,0],[12,45,6,0,"require"],[12,52,6,0],[12,53,6,0,"_dependencyMap"],[12,67,6,0],[13,2,7,0],[13,6,7,0,"_reactNative"],[13,18,7,0],[13,21,7,0,"require"],[13,28,7,0],[13,29,7,0,"_dependencyMap"],[13,43,7,0],[14,2,8,0],[14,6,8,0,"_client"],[14,13,8,0],[14,16,8,0,"require"],[14,23,8,0],[14,24,8,0,"_dependencyMap"],[14,38,8,0],[15,2,9,0],[15,6,9,0,"_analytics"],[15,16,9,0],[15,19,9,0,"require"],[15,26,9,0],[15,27,9,0,"_dependencyMap"],[15,41,9,0],[16,2,10,0],[16,6,10,0,"_EventLogger"],[16,18,10,0],[16,21,10,0,"require"],[16,28,10,0],[16,29,10,0,"_dependencyMap"],[16,43,10,0],[17,2,1,0],[18,0,2,0],[19,0,3,0],[20,0,4,0],[21,2,1,0],[21,6,79,6,"CrashReporterService"],[21,26,79,26],[22,4,96,2],[22,13,96,2,"CrashReporterService"],[22,34,96,2],[22,36,96,57],[23,6,96,57],[23,10,96,14,"config"],[23,16,96,50],[23,19,96,50,"arguments"],[23,28,96,50],[23,29,96,50,"length"],[23,35,96,50],[23,43,96,50,"arguments"],[23,52,96,50],[23,60,96,50,"undefined"],[23,69,96,50],[23,72,96,50,"arguments"],[23,81,96,50],[23,87,96,53],[23,88,96,54],[23,89,96,55],[24,6,96,55],[24,10,96,55,"_classCallCheck2"],[24,26,96,55],[24,27,96,55,"default"],[24,34,96,55],[24,42,96,55,"CrashReporterService"],[24,62,96,55],[25,6,96,55],[25,11,81,10,"breadcrumbs"],[25,22,81,21],[25,25,81,38],[25,27,81,40],[26,6,81,40],[26,11,82,10,"userActions"],[26,22,82,21],[26,25,82,38],[26,27,82,40],[27,6,82,40],[27,11,83,10,"isInitialized"],[27,24,83,23],[27,27,83,26],[27,32,83,31],[28,6,83,31],[28,11,87,10,"reportQueue"],[28,22,87,21],[28,25,87,39],[28,27,87,41],[29,6,87,41],[29,11,88,10,"isFlushingReports"],[29,28,88,27],[29,31,88,30],[29,36,88,35],[30,6,88,35],[30,11,89,10,"databaseAvailable"],[30,28,89,27],[30,31,89,30],[30,36,89,35],[31,6,89,35],[31,11,90,10,"databaseUnavailableLogged"],[31,36,90,35],[31,39,90,38],[31,44,90,43],[32,6,97,4],[32,10,97,8],[32,11,97,9,"config"],[32,17,97,15],[32,20,97,15,"Object"],[32,26,97,15],[32,27,97,15,"assign"],[32,33,97,15],[33,8,98,6,"enabled"],[33,15,98,13],[33,17,98,15,"ANALYTICS_CONFIG"],[33,44,98,31],[33,45,98,32,"errors"],[33,51,98,38],[33,52,98,39,"enabled"],[33,59,98,46],[34,8,99,6,"environment"],[34,19,99,17],[34,21,99,19,"__DEV__"],[34,28,99,26],[34,31,99,29],[34,44,99,42],[34,47,99,45],[34,59,99,57],[35,8,100,6,"maxBreadcrumbs"],[35,22,100,20],[35,24,100,22,"ANALYTICS_CONFIG"],[35,51,100,38],[35,52,100,39,"errors"],[35,58,100,45],[35,59,100,46,"maxBreadcrumbs"],[35,73,100,60],[36,8,101,6,"maxUserActions"],[36,22,101,20],[36,24,101,22],[36,26,101,24],[37,8,102,6,"captureConsoleErrors"],[37,28,102,26],[37,30,102,28,"ANALYTICS_CONFIG"],[37,57,102,44],[37,58,102,45,"errors"],[37,64,102,51],[37,65,102,52,"captureConsoleErrors"],[37,85,102,72],[38,8,103,6,"captureUnhandledPromiseRejections"],[38,41,103,39],[38,43,103,41,"ANALYTICS_CONFIG"],[38,70,103,57],[38,71,103,58,"errors"],[38,77,103,64],[38,78,103,65,"captureUnhandledPromiseRejections"],[38,111,103,98],[39,8,104,6,"sampleRate"],[39,18,104,16],[39,20,104,18,"ANALYTICS_CONFIG"],[39,47,104,34],[39,48,104,35,"errors"],[39,54,104,41],[39,55,104,42,"sampleRate"],[40,6,104,52],[40,9,105,9,"config"],[40,15,105,15],[40,16,106,5],[41,6,108,4],[41,10,108,8],[41,11,108,9,"sessionId"],[41,20,108,18],[41,23,108,21],[41,27,108,25],[41,28,108,26,"generateSessionId"],[41,45,108,43],[41,46,108,44],[41,47,108,45],[42,4,109,2],[44,4,111,2],[45,0,112,0],[46,0,113,0],[47,4,111,2],[47,15,111,2,"_createClass2"],[47,28,111,2],[47,29,111,2,"default"],[47,36,111,2],[47,38,111,2,"CrashReporterService"],[47,58,111,2],[48,6,111,2,"key"],[48,9,111,2],[49,6,111,2,"value"],[49,11,111,2],[50,8,111,2],[50,12,111,2,"_initialize"],[50,23,111,2],[50,30,111,2,"_asyncToGenerator2"],[50,48,111,2],[50,49,111,2,"default"],[50,56,111,2],[50,58,114,2],[50,71,114,85],[51,10,114,85],[51,14,114,85,"_this"],[51,19,114,85],[52,10,114,85],[52,14,114,26,"options"],[52,21,114,63],[52,24,114,63,"arguments"],[52,33,114,63],[52,34,114,63,"length"],[52,40,114,63],[52,48,114,63,"arguments"],[52,57,114,63],[52,65,114,63,"undefined"],[52,74,114,63],[52,77,114,63,"arguments"],[52,86,114,63],[52,92,114,66],[52,93,114,67],[52,94,114,68],[53,10,115,4],[53,14,115,8],[54,12,116,6],[54,16,116,10],[54,17,116,11,"config"],[54,23,116,17],[54,26,116,17,"Object"],[54,32,116,17],[54,33,116,17,"assign"],[54,39,116,17],[54,44,116,25],[54,48,116,29],[54,49,116,30,"config"],[54,55,116,36],[54,57,116,41,"options"],[54,64,116,48],[54,65,116,50],[55,12,118,6],[55,16,118,10],[55,17,118,11],[55,21,118,15],[55,22,118,16,"config"],[55,28,118,22],[55,29,118,23,"enabled"],[55,36,118,30],[55,38,118,32],[56,14,119,8,"EventLogger"],[56,38,119,19],[56,39,119,20,"info"],[56,43,119,24],[56,44,119,25],[56,59,119,40],[56,61,119,42],[56,87,119,68],[56,88,119,69],[57,14,120,8],[57,18,120,12],[57,19,120,13,"isInitialized"],[57,32,120,26],[57,35,120,29],[57,39,120,33],[57,40,120,34],[57,41,120,35],[58,14,121,8],[59,12,122,6],[61,12,124,6],[62,12,125,6],[62,18,125,12,"Promise"],[62,25,125,19],[62,26,125,20,"resolve"],[62,33,125,27],[62,34,125,28],[62,35,125,29],[62,36,125,30,"then"],[62,40,125,34],[62,41,125,35],[62,53,125,41],[63,14,126,8],[64,14,127,8,"_this"],[64,19,127,12],[64,20,127,13,"setupGlobalErrorHandlers"],[64,44,127,37],[64,45,127,38],[64,46,127,39],[66,14,129,8],[67,14,130,8,"_this"],[67,19,130,12],[67,20,130,13,"setupConsoleInterception"],[67,44,130,37],[67,45,130,38],[67,46,130,39],[69,14,132,8],[70,14,133,8,"_this"],[70,19,133,12],[70,20,133,13,"setupPeriodicFlush"],[70,38,133,31],[70,39,133,32],[70,40,133,33],[71,12,134,6],[71,13,134,7],[71,14,134,8],[73,12,136,6],[74,12,137,6],[74,16,137,10],[74,17,137,11,"checkDatabaseAvailability"],[74,42,137,36],[74,43,137,37],[74,44,137,38],[74,45,137,39,"catch"],[74,50,137,44],[74,51,137,45],[74,61,137,45,"error"],[74,66,137,50],[74,68,137,54],[75,14,138,8],[75,18,138,12],[75,19,138,13,"_this"],[75,24,138,17],[75,25,138,18,"databaseUnavailableLogged"],[75,50,138,43],[75,52,138,45],[76,16,139,10,"EventLogger"],[76,40,139,21],[76,41,139,22,"warn"],[76,45,139,26],[76,46,139,27],[76,61,139,42],[76,63,139,44],[76,125,139,106],[76,127,139,108,"error"],[76,132,139,122],[76,133,139,123],[77,16,140,10,"_this"],[77,21,140,14],[77,22,140,15,"databaseUnavailableLogged"],[77,47,140,40],[77,50,140,43],[77,54,140,47],[78,14,141,8],[79,14,142,8,"_this"],[79,19,142,12],[79,20,142,13,"databaseAvailable"],[79,37,142,30],[79,40,142,33],[79,45,142,38],[80,12,143,6],[80,13,143,7],[80,14,143,8],[82,12,145,6],[83,12,146,6],[83,16,146,10],[83,17,146,11,"loadOfflineReports"],[83,35,146,29],[83,36,146,30],[83,37,146,31],[83,38,146,32,"catch"],[83,43,146,37],[83,44,146,38],[83,54,146,38,"error"],[83,59,146,43],[83,61,146,47],[84,14,147,8,"EventLogger"],[84,38,147,19],[84,39,147,20,"error"],[84,44,147,25],[84,45,147,26],[84,60,147,41],[84,62,147,43],[84,94,147,75],[84,96,147,77,"error"],[84,101,147,91],[84,102,147,92],[85,12,148,6],[85,13,148,7],[85,14,148,8],[87,12,150,6],[88,12,151,6],[88,16,151,10],[88,17,151,11,"addBreadcrumb"],[88,30,151,24],[88,31,151,25],[89,14,152,8,"category"],[89,22,152,16],[89,24,152,18],[89,35,152,29],[90,14,153,8,"message"],[90,21,153,15],[90,23,153,17],[90,51,153,45],[91,14,154,8,"level"],[91,19,154,13],[91,21,154,15],[91,27,154,21],[92,14,155,8,"data"],[92,18,155,12],[92,20,155,14],[93,16,156,10,"config"],[93,22,156,16],[93,24,156,18],[94,18,157,12,"enabled"],[94,25,157,19],[94,27,157,21],[94,31,157,25],[94,32,157,26,"config"],[94,38,157,32],[94,39,157,33,"enabled"],[94,46,157,40],[95,18,158,12,"environment"],[95,29,158,23],[95,31,158,25],[95,35,158,29],[95,36,158,30,"config"],[95,42,158,36],[95,43,158,37,"environment"],[96,16,159,10],[97,14,160,8],[98,12,161,6],[98,13,161,7],[98,14,161,8],[99,12,163,6],[99,16,163,10],[99,17,163,11,"isInitialized"],[99,30,163,24],[99,33,163,27],[99,37,163,31],[100,12,164,6,"EventLogger"],[100,36,164,17],[100,37,164,18,"info"],[100,41,164,22],[100,42,164,23],[100,57,164,38],[100,59,164,40],[100,100,164,81],[100,101,164,82],[101,10,166,4],[101,11,166,5],[101,12,166,6],[101,19,166,13,"error"],[101,24,166,18],[101,26,166,20],[102,12,167,6],[102,16,167,10],[102,17,167,11,"isInitialized"],[102,30,167,24],[102,33,167,27],[102,37,167,31],[102,38,167,32],[102,39,167,33],[103,12,168,6,"EventLogger"],[103,36,168,17],[103,37,168,18,"error"],[103,42,168,23],[103,43,168,24],[103,58,168,39],[103,60,168,41],[103,97,168,78],[103,99,168,80,"error"],[103,104,168,94],[103,105,168,95],[104,10,169,4],[105,8,170,2],[105,9,170,3],[106,8,170,3],[106,17,114,15,"initialize"],[106,27,114,25,"initialize"],[106,28,114,25],[107,10,114,25],[107,17,114,25,"_initialize"],[107,28,114,25],[107,29,114,25,"apply"],[107,34,114,25],[107,41,114,25,"arguments"],[107,50,114,25],[108,8,114,25],[109,8,114,25],[109,15,114,15,"initialize"],[109,25,114,25],[110,6,114,25],[111,6,172,2],[112,0,173,0],[113,0,174,0],[114,6,172,2],[115,4,172,2],[116,6,172,2,"key"],[116,9,172,2],[117,6,172,2,"value"],[117,11,172,2],[118,8,172,2],[118,12,172,2,"_checkDatabaseAvailability"],[118,38,172,2],[118,45,172,2,"_asyncToGenerator2"],[118,63,172,2],[118,64,172,2,"default"],[118,71,172,2],[118,73,175,2],[118,86,175,59],[119,10,176,4],[119,14,176,8],[120,12,177,6],[120,16,177,10],[120,17,177,11,"supabase"],[120,33,177,19],[120,35,177,21],[121,14,178,8],[121,20,178,14],[121,24,178,18,"Error"],[121,29,178,23],[121,30,178,24],[121,63,178,57],[121,64,178,58],[122,12,179,6],[124,12,181,6],[125,12,182,6],[126,12,183,6],[126,16,183,12,"testReportId"],[126,28,183,24],[126,31,183,27],[126,52,183,48,"Date"],[126,56,183,52],[126,57,183,53,"now"],[126,60,183,56],[126,61,183,57],[126,62,183,58],[126,66,183,62,"Math"],[126,70,183,66],[126,71,183,67,"random"],[126,77,183,73],[126,78,183,74],[126,79,183,75],[126,80,183,76,"toString"],[126,88,183,84],[126,89,183,85],[126,91,183,87],[126,92,183,88],[126,93,183,89,"substr"],[126,99,183,95],[126,100,183,96],[126,101,183,97],[126,103,183,99],[126,104,183,100],[126,105,183,101],[126,107,183,103],[127,12,185,6],[127,16,185,6,"_yield$supabase$from$"],[127,37,185,6],[127,46,185,43,"supabase"],[127,62,185,51],[127,63,186,9,"from"],[127,67,186,13],[127,68,186,14],[127,83,186,29],[127,84,186,30],[127,85,187,9,"insert"],[127,91,187,15],[127,92,187,16],[128,16,188,10,"id"],[128,18,188,12],[128,20,188,14,"testReportId"],[128,32,188,26],[129,16,189,10,"error_name"],[129,26,189,20],[129,28,189,22],[129,54,189,48],[130,16,190,10,"error_message"],[130,29,190,23],[130,31,190,25],[130,75,190,69],[131,16,191,10,"error_type"],[131,26,191,20],[131,28,191,22],[131,36,191,30],[132,16,192,10,"error_fatal"],[132,27,192,21],[132,29,192,23],[132,34,192,28],[133,16,193,10,"severity"],[133,24,193,18],[133,26,193,20],[133,31,193,25],[134,16,194,10,"fingerprint"],[134,27,194,21],[134,29,194,23],[134,54,194,48],[135,16,195,10,"context"],[135,23,195,17],[135,25,195,19],[136,18,195,21,"test"],[136,22,195,25],[136,24,195,27],[137,16,195,32],[137,17,195,33],[138,16,196,10,"tags"],[138,20,196,14],[138,22,196,16],[139,18,196,18,"test"],[139,22,196,22],[139,24,196,24],[140,16,196,45],[141,14,197,8],[141,15,197,9],[141,16,197,10],[142,14,185,21,"insertError"],[142,25,185,32],[142,28,185,32,"_yield$supabase$from$"],[142,49,185,32],[142,50,185,14,"error"],[142,55,185,19],[143,12,199,6],[143,16,199,10,"insertError"],[143,27,199,21],[143,29,199,23],[144,14,200,8],[145,14,201,8],[145,18,201,12,"insertError"],[145,29,201,23],[145,30,201,24,"code"],[145,34,201,28],[145,39,201,33],[145,46,201,40],[145,48,201,42],[146,16,202,10],[147,16,203,10,"EventLogger"],[147,40,203,21],[147,41,203,22,"warn"],[147,45,203,26],[147,46,203,27],[147,61,203,42],[147,63,203,44],[147,99,203,80],[147,101,203,82],[148,18,204,12,"suggestion"],[148,28,204,22],[148,30,204,24],[149,16,205,10],[149,17,205,18],[149,18,205,19],[150,14,206,8],[150,15,206,9],[150,21,206,15],[150,25,206,19,"insertError"],[150,36,206,30],[150,37,206,31,"code"],[150,41,206,35],[150,46,206,40],[150,53,206,47],[150,55,206,49],[151,16,207,10],[152,16,208,10,"EventLogger"],[152,40,208,21],[152,41,208,22,"warn"],[152,45,208,26],[152,46,208,27],[152,61,208,42],[152,63,208,44],[152,106,208,87],[152,108,208,89],[153,18,209,12,"suggestion"],[153,28,209,22],[153,30,209,24],[154,16,210,10],[154,17,210,18],[154,18,210,19],[155,14,211,8],[155,15,211,9],[155,21,211,15],[156,16,212,10],[157,16,213,10,"EventLogger"],[157,40,213,21],[157,41,213,22,"warn"],[157,45,213,26],[157,46,213,27],[157,61,213,42],[157,63,213,44],[157,99,213,80],[157,101,213,82],[158,18,214,12,"tableError"],[158,28,214,22],[158,30,214,24,"insertError"],[158,41,214,35],[158,42,214,36,"message"],[158,49,214,43],[159,18,215,12,"code"],[159,22,215,16],[159,24,215,18,"insertError"],[159,35,215,29],[159,36,215,30,"code"],[160,16,216,10],[160,17,216,18],[160,18,216,19],[161,14,217,8],[162,14,219,8],[162,18,219,12],[162,19,219,13,"databaseAvailable"],[162,36,219,30],[162,39,219,33],[162,44,219,38],[163,14,220,8],[163,20,220,14],[163,24,220,18,"Error"],[163,29,220,23],[163,30,220,24],[163,53,220,47,"insertError"],[163,64,220,58],[163,65,220,59,"message"],[163,72,220,66],[163,83,220,77,"insertError"],[163,94,220,88],[163,95,220,89,"code"],[163,99,220,93],[163,102,220,96],[163,103,220,97],[164,12,221,6],[166,12,223,6],[167,12,224,6],[167,18,224,12,"supabase"],[167,34,224,20],[167,35,225,9,"from"],[167,39,225,13],[167,40,225,14],[167,55,225,29],[167,56,225,30],[167,57,226,9,"delete"],[167,63,226,15],[167,64,226,16],[167,65,226,17],[167,66,227,9,"eq"],[167,68,227,11],[167,69,227,12],[167,73,227,16],[167,75,227,18,"testReportId"],[167,87,227,30],[167,88,227,31],[168,12,229,6],[168,16,229,10],[168,17,229,11,"databaseAvailable"],[168,34,229,28],[168,37,229,31],[168,41,229,35],[169,12,230,6,"EventLogger"],[169,36,230,17],[169,37,230,18,"info"],[169,41,230,22],[169,42,230,23],[169,57,230,38],[169,59,230,40],[169,99,230,80],[169,100,230,81],[170,10,232,4],[170,11,232,5],[170,12,232,6],[170,19,232,13,"error"],[170,24,232,18],[170,26,232,20],[171,12,233,6],[171,16,233,10],[171,17,233,11,"databaseAvailable"],[171,34,233,28],[171,37,233,31],[171,42,233,36],[173,12,235,6],[174,12,236,6],[174,16,236,10,"message"],[174,23,236,17],[174,26,236,20],[174,79,236,73],[175,12,237,6],[175,16,237,12,"errorDetails"],[175,28,237,29],[175,31,237,32],[176,14,238,8,"error"],[176,19,238,13],[176,21,238,15,"error"],[176,26,238,20],[176,38,238,32,"Error"],[176,43,238,37],[176,46,238,40,"error"],[176,51,238,45],[176,52,238,46,"message"],[176,59,238,53],[176,62,238,56,"String"],[176,68,238,62],[176,69,238,63,"error"],[176,74,238,68],[177,12,239,6],[177,13,239,7],[178,12,241,6],[178,16,241,10,"error"],[178,21,241,15],[178,33,241,27,"Error"],[178,38,241,32],[178,40,241,34],[179,14,242,8],[179,18,242,12,"error"],[179,23,242,17],[179,24,242,18,"message"],[179,31,242,25],[179,32,242,26,"includes"],[179,40,242,34],[179,41,242,35],[179,48,242,42],[179,49,242,43],[179,53,242,47,"error"],[179,58,242,52],[179,59,242,53,"message"],[179,66,242,60],[179,67,242,61,"includes"],[179,75,242,69],[179,76,242,70],[179,92,242,86],[179,93,242,87],[179,95,242,89],[180,16,243,10,"message"],[180,23,243,17],[180,26,243,20],[180,91,243,85],[181,16,244,10,"errorDetails"],[181,28,244,22],[181,29,244,23,"setupScript"],[181,40,244,34],[181,43,244,37],[181,80,244,74],[182,14,245,8],[182,15,245,9],[182,21,245,15],[182,25,245,19,"error"],[182,30,245,24],[182,31,245,25,"message"],[182,38,245,32],[182,39,245,33,"includes"],[182,47,245,41],[182,48,245,42],[182,55,245,49],[182,56,245,50],[182,60,245,54,"error"],[182,65,245,59],[182,66,245,60,"message"],[182,73,245,67],[182,74,245,68,"includes"],[182,82,245,76],[182,83,245,77],[182,95,245,89],[182,96,245,90],[182,98,245,92],[183,16,246,10,"message"],[183,23,246,17],[183,26,246,20],[183,75,246,69],[184,14,247,8],[184,15,247,9],[184,21,247,15],[184,25,247,19,"error"],[184,30,247,24],[184,31,247,25,"message"],[184,38,247,32],[184,39,247,33,"includes"],[184,47,247,41],[184,48,247,42],[184,65,247,59],[184,66,247,60],[184,68,247,62],[185,16,248,10,"message"],[185,23,248,17],[185,26,248,20],[185,81,248,75],[186,14,249,8],[187,12,250,6],[188,12,252,6,"EventLogger"],[188,36,252,17],[188,37,252,18,"warn"],[188,41,252,22],[188,42,252,23],[188,57,252,38],[188,59,252,40,"message"],[188,66,252,47],[188,68,252,49,"errorDetails"],[188,80,252,61],[188,81,252,62],[189,12,253,6],[189,18,253,12,"error"],[189,23,253,17],[190,10,254,4],[191,8,255,2],[191,9,255,3],[192,8,255,3],[192,17,175,16,"checkDatabaseAvailability"],[192,42,175,41,"checkDatabaseAvailability"],[192,43,175,41],[193,10,175,41],[193,17,175,41,"_checkDatabaseAvailability"],[193,43,175,41],[193,44,175,41,"apply"],[193,49,175,41],[193,56,175,41,"arguments"],[193,65,175,41],[194,8,175,41],[195,8,175,41],[195,15,175,16,"checkDatabaseAvailability"],[195,40,175,41],[196,6,175,41],[197,6,257,2],[198,0,258,0],[199,0,259,0],[200,6,257,2],[201,4,257,2],[202,6,257,2,"key"],[202,9,257,2],[203,6,257,2,"value"],[203,11,257,2],[203,13,260,2],[203,22,260,9,"setUser"],[203,29,260,16,"setUser"],[203,30,260,17,"userId"],[203,36,260,31],[203,38,260,33,"context"],[203,45,260,62],[203,47,260,70],[204,8,261,4],[204,12,261,8],[204,13,261,9,"config"],[204,19,261,15],[204,20,261,16,"userId"],[204,26,261,22],[204,29,261,25,"userId"],[204,35,261,31],[205,8,262,4],[205,12,262,8],[205,13,262,9,"config"],[205,19,262,15],[205,20,262,16,"userContext"],[205,31,262,27],[205,34,262,30,"context"],[205,41,262,37],[206,8,264,4],[206,12,264,8],[206,13,264,9,"addBreadcrumb"],[206,26,264,22],[206,27,264,23],[207,10,265,6,"category"],[207,18,265,14],[207,20,265,16],[207,26,265,22],[208,10,266,6,"message"],[208,17,266,13],[208,19,266,15],[208,41,266,37],[209,10,267,6,"level"],[209,15,267,11],[209,17,267,13],[209,23,267,19],[210,10,268,6,"data"],[210,14,268,10],[210,16,268,12],[211,12,268,14,"userId"],[211,18,268,20],[211,20,268,14,"userId"],[211,26,268,20],[212,12,268,22,"context"],[212,19,268,29],[212,21,268,22,"context"],[213,10,268,30],[214,8,269,4],[214,9,269,5],[214,10,269,6],[215,6,270,2],[217,6,272,2],[218,0,273,0],[219,0,274,0],[220,4,272,2],[221,6,272,2,"key"],[221,9,272,2],[222,6,272,2,"value"],[222,11,272,2],[222,13,275,2],[222,22,275,9,"clearUser"],[222,31,275,18,"clearUser"],[222,32,275,18],[222,34,275,27],[223,8,276,4],[223,12,276,10,"oldUserId"],[223,21,276,19],[223,24,276,22],[223,28,276,26],[223,29,276,27,"config"],[223,35,276,33],[223,36,276,34,"userId"],[223,42,276,40],[224,8,277,4],[224,12,277,8],[224,13,277,9,"config"],[224,19,277,15],[224,20,277,16,"userId"],[224,26,277,22],[224,29,277,25,"undefined"],[224,38,277,34],[225,8,278,4],[225,12,278,8],[225,13,278,9,"config"],[225,19,278,15],[225,20,278,16,"userContext"],[225,31,278,27],[225,34,278,30,"undefined"],[225,43,278,39],[226,8,280,4],[226,12,280,8],[226,13,280,9,"addBreadcrumb"],[226,26,280,22],[226,27,280,23],[227,10,281,6,"category"],[227,18,281,14],[227,20,281,16],[227,26,281,22],[228,10,282,6,"message"],[228,17,282,13],[228,19,282,15],[228,41,282,37],[229,10,283,6,"level"],[229,15,283,11],[229,17,283,13],[229,23,283,19],[230,10,284,6,"data"],[230,14,284,10],[230,16,284,12],[231,12,284,14,"oldUserId"],[231,21,284,23],[231,23,284,14,"oldUserId"],[232,10,284,24],[233,8,285,4],[233,9,285,5],[233,10,285,6],[234,6,286,2],[236,6,288,2],[237,0,289,0],[238,0,290,0],[239,4,288,2],[240,6,288,2,"key"],[240,9,288,2],[241,6,288,2,"value"],[241,11,288,2],[241,13,291,2],[241,22,291,9,"addBreadcrumb"],[241,35,291,22,"addBreadcrumb"],[241,36,291,23,"breadcrumb"],[241,46,291,64],[241,48,291,72],[242,8,292,4],[242,12,292,8],[242,13,292,9],[242,17,292,13],[242,18,292,14,"isInitialized"],[242,31,292,27],[242,33,292,29],[243,8,294,4],[243,12,294,10,"fullBreadcrumb"],[243,26,294,36],[243,29,294,36,"Object"],[243,35,294,36],[243,36,294,36,"assign"],[243,42,294,36],[244,10,295,6,"timestamp"],[244,19,295,15],[244,21,295,17],[244,25,295,21,"Date"],[244,29,295,25],[244,30,295,26],[244,31,295,27],[244,32,295,28,"toISOString"],[244,43,295,39],[244,44,295,40],[245,8,295,41],[245,11,296,9,"breadcrumb"],[245,21,296,19],[245,22,297,5],[246,8,299,4],[246,12,299,8],[246,13,299,9,"breadcrumbs"],[246,24,299,20],[246,25,299,21,"push"],[246,29,299,25],[246,30,299,26,"fullBreadcrumb"],[246,44,299,40],[246,45,299,41],[248,8,301,4],[249,8,302,4],[249,12,302,8],[249,16,302,12],[249,17,302,13,"breadcrumbs"],[249,28,302,24],[249,29,302,25,"length"],[249,35,302,31],[249,38,302,34],[249,42,302,38],[249,43,302,39,"config"],[249,49,302,45],[249,50,302,46,"maxBreadcrumbs"],[249,64,302,60],[249,66,302,62],[250,10,303,6],[250,14,303,10],[250,15,303,11,"breadcrumbs"],[250,26,303,22],[250,29,303,25],[250,33,303,29],[250,34,303,30,"breadcrumbs"],[250,45,303,41],[250,46,303,42,"slice"],[250,51,303,47],[250,52,303,48],[250,53,303,49],[250,57,303,53],[250,58,303,54,"config"],[250,64,303,60],[250,65,303,61,"maxBreadcrumbs"],[250,79,303,75],[250,80,303,76],[251,8,304,4],[252,6,305,2],[254,6,307,2],[255,0,308,0],[256,0,309,0],[257,4,307,2],[258,6,307,2,"key"],[258,9,307,2],[259,6,307,2,"value"],[259,11,307,2],[259,13,310,2],[259,22,310,9,"trackUserAction"],[259,37,310,24,"trackUserAction"],[259,38,310,25,"action"],[259,44,310,62],[259,46,310,70],[260,8,311,4],[260,12,311,8],[260,13,311,9],[260,17,311,13],[260,18,311,14,"isInitialized"],[260,31,311,27],[260,33,311,29],[261,8,313,4],[261,12,313,10,"fullAction"],[261,22,313,32],[261,25,313,32,"Object"],[261,31,313,32],[261,32,313,32,"assign"],[261,38,313,32],[262,10,314,6,"timestamp"],[262,19,314,15],[262,21,314,17],[262,25,314,21,"Date"],[262,29,314,25],[262,30,314,26],[262,31,314,27],[262,32,314,28,"toISOString"],[262,43,314,39],[262,44,314,40],[263,8,314,41],[263,11,315,9,"action"],[263,17,315,15],[263,18,316,5],[264,8,318,4],[264,12,318,8],[264,13,318,9,"userActions"],[264,24,318,20],[264,25,318,21,"push"],[264,29,318,25],[264,30,318,26,"fullAction"],[264,40,318,36],[264,41,318,37],[266,8,320,4],[267,8,321,4],[267,12,321,8],[267,16,321,12],[267,17,321,13,"userActions"],[267,28,321,24],[267,29,321,25,"length"],[267,35,321,31],[267,38,321,34],[267,42,321,38],[267,43,321,39,"config"],[267,49,321,45],[267,50,321,46,"maxUserActions"],[267,64,321,60],[267,66,321,62],[268,10,322,6],[268,14,322,10],[268,15,322,11,"userActions"],[268,26,322,22],[268,29,322,25],[268,33,322,29],[268,34,322,30,"userActions"],[268,45,322,41],[268,46,322,42,"slice"],[268,51,322,47],[268,52,322,48],[268,53,322,49],[268,57,322,53],[268,58,322,54,"config"],[268,64,322,60],[268,65,322,61,"maxUserActions"],[268,79,322,75],[268,80,322,76],[269,8,323,4],[271,8,325,4],[272,8,326,4],[272,12,326,8],[272,13,326,9,"addBreadcrumb"],[272,26,326,22],[272,27,326,23],[273,10,327,6,"category"],[273,18,327,14],[273,20,327,16],[273,33,327,29],[274,10,328,6,"message"],[274,17,328,13],[274,19,328,15],[274,22,328,18,"action"],[274,28,328,24],[274,29,328,25,"type"],[274,33,328,29],[274,38,328,34,"action"],[274,44,328,40],[274,45,328,41,"target"],[274,51,328,47],[274,53,328,49],[275,10,329,6,"level"],[275,15,329,11],[275,17,329,13],[275,23,329,19],[276,10,330,6,"data"],[276,14,330,10],[276,16,330,12,"action"],[276,22,330,18],[276,23,330,19,"data"],[277,8,331,4],[277,9,331,5],[277,10,331,6],[278,6,332,2],[280,6,334,2],[281,0,335,0],[282,0,336,0],[283,4,334,2],[284,6,334,2,"key"],[284,9,334,2],[285,6,334,2,"value"],[285,11,334,2],[285,13,337,2],[285,22,337,9,"reportError"],[285,33,337,20,"reportError"],[285,34,338,4,"error"],[285,39,338,16],[285,41,339,4,"context"],[285,48,339,33],[285,50,341,10],[286,8,341,10],[286,12,340,4,"severity"],[286,20,340,37],[286,23,340,37,"arguments"],[286,32,340,37],[286,33,340,37,"length"],[286,39,340,37],[286,47,340,37,"arguments"],[286,56,340,37],[286,64,340,37,"undefined"],[286,73,340,37],[286,76,340,37,"arguments"],[286,85,340,37],[286,91,340,40],[286,99,340,48],[287,8,342,4],[287,12,342,8],[287,13,342,9],[287,17,342,13],[287,18,342,14,"shouldReportError"],[287,35,342,31],[287,36,342,32],[287,37,342,33],[287,39,342,35],[288,8,344,4],[288,12,344,8],[288,13,344,9,"createAndQueueReport"],[288,33,344,29],[288,34,344,30],[289,10,345,6,"name"],[289,14,345,10],[289,16,345,12,"error"],[289,21,345,17],[289,22,345,18,"name"],[289,26,345,22],[290,10,346,6,"message"],[290,17,346,13],[290,19,346,15,"error"],[290,24,346,20],[290,25,346,21,"message"],[290,32,346,28],[291,10,347,6,"stack"],[291,15,347,11],[291,17,347,13,"error"],[291,22,347,18],[291,23,347,19,"stack"],[291,28,347,24],[292,10,348,6,"type"],[292,14,348,10],[292,16,348,12],[292,24,348,20],[293,10,349,6,"fatal"],[293,15,349,11],[293,17,349,13],[294,8,350,4],[294,9,350,5],[294,11,350,7,"context"],[294,18,350,14],[294,20,350,16,"severity"],[294,28,350,24],[294,29,350,25],[295,6,351,2],[297,6,353,2],[298,0,354,0],[299,0,355,0],[300,4,353,2],[301,6,353,2,"key"],[301,9,353,2],[302,6,353,2,"value"],[302,11,353,2],[302,13,356,2],[302,22,356,9,"reportNetworkError"],[302,40,356,27,"reportNetworkError"],[302,41,357,4,"url"],[302,44,357,15],[302,46,358,4,"method"],[302,52,358,18],[302,54,359,4,"statusCode"],[302,64,359,22],[302,66,360,4,"error"],[302,71,360,16],[302,73,361,4,"context"],[302,80,361,33],[302,82,362,10],[303,8,363,4],[303,12,363,8],[303,13,363,9],[303,17,363,13],[303,18,363,14,"shouldReportError"],[303,35,363,31],[303,36,363,32],[303,37,363,33],[303,39,363,35],[304,8,365,4],[304,12,365,8],[304,13,365,9,"createAndQueueReport"],[304,33,365,29],[304,34,365,30],[305,10,366,6,"name"],[305,14,366,10],[305,16,366,12],[305,30,366,26],[306,10,367,6,"message"],[306,17,367,13],[306,19,367,15],[306,22,367,18,"method"],[306,28,367,24],[306,32,367,28,"url"],[306,35,367,31],[306,41,367,37,"statusCode"],[306,51,367,47],[306,56,367,52,"error"],[306,61,367,57],[306,62,367,58,"message"],[306,69,367,65],[306,71,367,67],[307,10,368,6,"stack"],[307,15,368,11],[307,17,368,13,"error"],[307,22,368,18],[307,23,368,19,"stack"],[307,28,368,24],[308,10,369,6,"type"],[308,14,369,10],[308,16,369,12],[308,25,369,21],[309,10,370,6,"fatal"],[309,15,370,11],[309,17,370,13],[310,8,371,4],[310,9,371,5],[310,11,371,5,"Object"],[310,17,371,5],[310,18,371,5,"assign"],[310,24,371,5],[311,10,372,6,"url"],[311,13,372,9],[311,15,372,6,"url"],[311,18,372,9],[312,10,373,6,"method"],[312,16,373,12],[312,18,373,6,"method"],[312,24,373,12],[313,10,374,6,"statusCode"],[313,20,374,16],[313,22,374,6,"statusCode"],[314,8,374,16],[314,11,375,9,"context"],[314,18,375,16],[314,21,376,7],[314,29,376,15],[314,30,376,16],[315,6,377,2],[317,6,379,2],[318,0,380,0],[319,0,381,0],[320,4,379,2],[321,6,379,2,"key"],[321,9,379,2],[322,6,379,2,"value"],[322,11,379,2],[322,13,382,2],[322,22,382,9,"reportFatalError"],[322,38,382,25,"reportFatalError"],[322,39,382,26,"error"],[322,44,382,38],[322,46,382,40,"context"],[322,53,382,69],[322,55,382,77],[323,8,383,4],[323,12,383,8],[323,13,383,9,"createAndQueueReport"],[323,33,383,29],[323,34,383,30],[324,10,384,6,"name"],[324,14,384,10],[324,16,384,12,"error"],[324,21,384,17],[324,22,384,18,"name"],[324,26,384,22],[325,10,385,6,"message"],[325,17,385,13],[325,19,385,15,"error"],[325,24,385,20],[325,25,385,21,"message"],[325,32,385,28],[326,10,386,6,"stack"],[326,15,386,11],[326,17,386,13,"error"],[326,22,386,18],[326,23,386,19,"stack"],[326,28,386,24],[327,10,387,6,"type"],[327,14,387,10],[327,16,387,12],[327,28,387,24],[328,10,388,6,"fatal"],[328,15,388,11],[328,17,388,13],[329,8,389,4],[329,9,389,5],[329,11,389,7,"context"],[329,18,389,14],[329,20,389,16],[329,30,389,26],[329,31,389,27],[331,8,391,4],[332,8,392,4],[332,12,392,8],[332,13,392,9,"flushReports"],[332,25,392,21],[332,26,392,22],[332,27,392,23],[333,6,393,2],[335,6,395,2],[336,0,396,0],[337,0,397,0],[338,4,395,2],[339,6,395,2,"key"],[339,9,395,2],[340,6,395,2,"value"],[340,11,395,2],[340,13,398,2],[340,22,398,9,"setCurrentScreen"],[340,38,398,25,"setCurrentScreen"],[340,39,398,26,"screenName"],[340,49,398,44],[340,51,398,46,"params"],[340,57,398,74],[340,59,398,82],[341,8,399,4],[341,12,399,8],[341,13,399,9,"addBreadcrumb"],[341,26,399,22],[341,27,399,23],[342,10,400,6,"category"],[342,18,400,14],[342,20,400,16],[342,32,400,28],[343,10,401,6,"message"],[343,17,401,13],[343,19,401,15],[343,35,401,31,"screenName"],[343,45,401,41],[343,47,401,43],[344,10,402,6,"level"],[344,15,402,11],[344,17,402,13],[344,23,402,19],[345,10,403,6,"data"],[345,14,403,10],[345,16,403,12],[346,12,403,14,"screenName"],[346,22,403,24],[346,24,403,14,"screenName"],[346,34,403,24],[347,12,403,26,"params"],[347,18,403,32],[347,20,403,26,"params"],[348,10,403,33],[349,8,404,4],[349,9,404,5],[349,10,404,6],[351,8,406,4],[352,8,407,4],[352,12,407,8],[352,13,407,9,"config"],[352,19,407,15],[352,20,407,16,"userContext"],[352,31,407,27],[352,34,407,27,"Object"],[352,40,407,27],[352,41,407,27,"assign"],[352,47,407,27],[352,52,408,9],[352,56,408,13],[352,57,408,14,"config"],[352,63,408,20],[352,64,408,21,"userContext"],[352,75,408,32],[353,10,409,6,"current_screen"],[353,24,409,20],[353,26,409,22,"screenName"],[353,36,409,32],[354,10,410,6,"screen_params"],[354,23,410,19],[354,25,410,21,"params"],[355,8,410,27],[355,10,411,5],[356,6,412,2],[358,6,414,2],[359,0,415,0],[360,0,416,0],[361,4,414,2],[362,6,414,2,"key"],[362,9,414,2],[363,6,414,2,"value"],[363,11,414,2],[363,13,417,2],[363,22,417,9,"addContext"],[363,32,417,19,"addContext"],[363,33,417,20,"key"],[363,36,417,31],[363,38,417,33,"value"],[363,43,417,43],[363,45,417,51],[364,8,418,4],[364,12,418,8],[364,13,418,9,"config"],[364,19,418,15],[364,20,418,16,"userContext"],[364,31,418,27],[364,34,418,27,"Object"],[364,40,418,27],[364,41,418,27,"assign"],[364,47,418,27],[364,52,419,9],[364,56,419,13],[364,57,419,14,"config"],[364,63,419,20],[364,64,419,21,"userContext"],[364,75,419,32],[364,81,419,32,"_defineProperty2"],[364,97,419,32],[364,98,419,32,"default"],[364,105,419,32],[364,111,420,7,"key"],[364,114,420,10],[364,116,420,13,"value"],[364,121,420,18],[364,123,421,5],[365,6,422,2],[367,6,424,2],[368,0,425,0],[369,0,426,0],[370,4,424,2],[371,6,424,2,"key"],[371,9,424,2],[372,6,424,2,"value"],[372,11,424,2],[373,8,424,2],[373,12,424,2,"_createAndQueueReport"],[373,33,424,2],[373,40,424,2,"_asyncToGenerator2"],[373,58,424,2],[373,59,424,2,"default"],[373,66,424,2],[373,68,427,2],[373,79,428,4,"error"],[373,84,428,31],[373,86,429,4,"customContext"],[373,99,429,39],[373,101,431,19],[374,10,431,19],[374,14,430,4,"severity"],[374,22,430,37],[374,25,430,37,"arguments"],[374,34,430,37],[374,35,430,37,"length"],[374,41,430,37],[374,49,430,37,"arguments"],[374,58,430,37],[374,66,430,37,"undefined"],[374,75,430,37],[374,78,430,37,"arguments"],[374,87,430,37],[374,93,430,40],[374,101,430,48],[375,10,432,4],[375,14,432,8],[376,12,433,6],[376,16,433,12,"report"],[376,22,433,31],[376,25,433,34],[377,14,434,8,"id"],[377,16,434,10],[377,18,434,12],[377,22,434,16],[377,23,434,17,"generateReportId"],[377,39,434,33],[377,40,434,34],[377,41,434,35],[378,14,435,8,"timestamp"],[378,23,435,17],[378,25,435,19],[378,29,435,23,"Date"],[378,33,435,27],[378,34,435,28],[378,35,435,29],[378,36,435,30,"toISOString"],[378,47,435,41],[378,48,435,42],[378,49,435,43],[379,14,436,8,"error"],[379,19,436,13],[379,21,436,8,"error"],[379,26,436,13],[380,14,437,8,"context"],[380,21,437,15],[380,29,437,23],[380,33,437,27],[380,34,437,28,"buildErrorContext"],[380,51,437,45],[380,52,437,46,"customContext"],[380,65,437,59],[380,66,437,60],[381,14,438,8,"breadcrumbs"],[381,25,438,19],[381,31,438,19,"_toConsumableArray2"],[381,50,438,19],[381,51,438,19,"default"],[381,58,438,19],[381,60,438,25],[381,64,438,29],[381,65,438,30,"breadcrumbs"],[381,76,438,41],[381,77,438,42],[382,14,439,8,"user_actions"],[382,26,439,20],[382,32,439,20,"_toConsumableArray2"],[382,51,439,20],[382,52,439,20,"default"],[382,59,439,20],[382,61,439,26],[382,65,439,30],[382,66,439,31,"userActions"],[382,77,439,42],[382,78,439,43],[383,14,440,8,"performance_metrics"],[383,33,440,27],[383,41,440,35],[383,45,440,39],[383,46,440,40,"getPerformanceMetrics"],[383,67,440,61],[383,68,440,62],[383,69,440,63],[384,14,441,8,"severity"],[384,22,441,16],[384,24,441,8,"severity"],[384,32,441,16],[385,14,442,8,"fingerprint"],[385,25,442,19],[385,27,442,21],[385,31,442,25],[385,32,442,26,"generateFingerprint"],[385,51,442,45],[385,52,442,46,"error"],[385,57,442,51],[385,58,442,52],[386,14,443,8,"tags"],[386,18,443,12],[386,20,443,14],[387,16,444,10,"environment"],[387,27,444,21],[387,29,444,23],[387,33,444,27],[387,34,444,28,"config"],[387,40,444,34],[387,41,444,35,"environment"],[387,52,444,46],[388,16,445,10,"platform"],[388,24,445,18],[388,26,445,20,"Platform"],[388,47,445,28],[388,48,445,29,"OS"],[388,50,445,31],[389,16,446,10,"version"],[389,23,446,17],[389,25,446,19],[389,32,446,26],[389,33,446,28],[390,14,447,8],[391,12,448,6],[391,13,448,7],[393,12,450,6],[394,12,451,6],[394,16,451,12,"finalReport"],[394,27,451,23],[394,30,451,26],[394,34,451,30],[394,35,451,31,"config"],[394,41,451,37],[394,42,451,38,"beforeSend"],[394,52,451,48],[394,55,451,51],[394,59,451,55],[394,60,451,56,"config"],[394,66,451,62],[394,67,451,63,"beforeSend"],[394,77,451,73],[394,78,451,74,"report"],[394,84,451,80],[394,85,451,81],[394,88,451,84,"report"],[394,94,451,90],[395,12,452,6],[395,16,452,10],[395,17,452,11,"finalReport"],[395,28,452,22],[395,30,452,24],[396,12,454,6],[396,16,454,10],[396,17,454,11,"reportQueue"],[396,28,454,22],[396,29,454,23,"push"],[396,33,454,27],[396,34,454,28,"finalReport"],[396,45,454,39],[396,46,454,40],[397,12,455,6,"EventLogger"],[397,36,455,17],[397,37,455,18,"error"],[397,42,455,23],[397,43,455,24],[397,58,455,39],[397,60,455,41],[397,81,455,62],[397,83,455,64,"error"],[397,88,455,69],[397,90,455,78],[398,14,456,8,"report_id"],[398,23,456,17],[398,25,456,19,"report"],[398,31,456,25],[398,32,456,26,"id"],[398,34,456,28],[399,14,457,8,"severity"],[399,22,457,16],[399,24,457,8,"severity"],[400,12,458,6],[400,13,458,7],[400,14,458,8],[402,12,460,6],[403,12,461,6],[403,16,461,10],[403,20,461,14],[403,21,461,15,"reportQueue"],[403,32,461,26],[403,33,461,27,"length"],[403,39,461,33],[403,43,461,37],[403,45,461,39],[403,49,461,43,"severity"],[403,57,461,51],[403,62,461,56],[403,72,461,66],[403,74,461,68],[404,14,462,8],[404,18,462,12],[404,19,462,13,"flushReports"],[404,31,462,25],[404,32,462,26],[404,33,462,27],[405,12,463,6],[406,10,465,4],[406,11,465,5],[406,12,465,6],[406,19,465,13,"reportError"],[406,30,465,24],[406,32,465,26],[407,12,466,6,"EventLogger"],[407,36,466,17],[407,37,466,18,"error"],[407,42,466,23],[407,43,466,24],[407,58,466,39],[407,60,466,41],[407,91,466,72],[407,93,466,74,"reportError"],[407,104,466,94],[407,105,466,95],[408,10,467,4],[409,8,468,2],[409,9,468,3],[410,8,468,3],[410,17,427,16,"createAndQueueReport"],[410,37,427,36,"createAndQueueReport"],[410,38,427,36,"_x"],[410,40,427,36],[410,42,427,36,"_x2"],[410,45,427,36],[411,10,427,36],[411,17,427,36,"_createAndQueueReport"],[411,38,427,36],[411,39,427,36,"apply"],[411,44,427,36],[411,51,427,36,"arguments"],[411,60,427,36],[412,8,427,36],[413,8,427,36],[413,15,427,16,"createAndQueueReport"],[413,35,427,36],[414,6,427,36],[415,6,470,2],[416,0,471,0],[417,0,472,0],[418,6,470,2],[419,4,470,2],[420,6,470,2,"key"],[420,9,470,2],[421,6,470,2,"value"],[421,11,470,2],[422,8,470,2],[422,12,470,2,"_buildErrorContext"],[422,30,470,2],[422,37,470,2,"_asyncToGenerator2"],[422,55,470,2],[422,56,470,2,"default"],[422,63,470,2],[422,65,473,2],[422,76,473,34,"customContext"],[422,89,473,69],[422,91,473,104],[423,10,473,104],[423,14,473,104,"_this$config$userCont"],[423,35,473,104],[424,10,474,4],[424,14,474,10,"context"],[424,21,474,41],[424,24,474,44],[425,12,475,6,"user_id"],[425,19,475,13],[425,21,475,15],[425,25,475,19],[425,26,475,20,"config"],[425,32,475,26],[425,33,475,27,"userId"],[425,39,475,33],[426,12,476,6,"session_id"],[426,22,476,16],[426,24,476,18],[426,28,476,22],[426,29,476,23,"sessionId"],[426,38,476,32],[427,12,477,6,"app_version"],[427,23,477,17],[427,25,477,19],[427,32,477,26],[428,12,477,28],[429,12,478,6,"build_number"],[429,24,478,18],[429,26,478,20,"__DEV__"],[429,33,478,27],[429,36,478,30],[429,49,478,43],[429,52,478,46],[429,64,478,58],[430,12,479,6,"platform"],[430,20,479,14],[430,22,479,16,"Platform"],[430,43,479,24],[430,44,479,25,"OS"],[430,46,479,27],[431,12,480,6,"os_version"],[431,22,480,16],[431,24,480,18,"Platform"],[431,45,480,26],[431,46,480,27,"Version"],[431,53,480,34],[431,54,480,35,"toString"],[431,62,480,43],[431,63,480,44],[431,64,480,45],[432,12,481,6,"screen_name"],[432,23,481,17],[432,26,481,17,"_this$config$userCont"],[432,47,481,17],[432,50,481,19],[432,54,481,23],[432,55,481,24,"config"],[432,61,481,30],[432,62,481,31,"userContext"],[432,73,481,42],[432,94,481,19,"_this$config$userCont"],[432,115,481,19],[432,116,481,44,"current_screen"],[432,130,481,58],[433,12,482,6,"custom_context"],[433,26,482,20],[433,28,482,20,"Object"],[433,34,482,20],[433,35,482,20,"assign"],[433,41,482,20],[433,46,483,11],[433,50,483,15],[433,51,483,16,"config"],[433,57,483,22],[433,58,483,23,"userContext"],[433,69,483,34],[433,71,484,11,"customContext"],[433,84,484,24],[434,10,486,4],[434,11,486,5],[436,10,488,4],[437,10,489,4],[437,14,489,8],[438,12,490,6],[439,12,491,6],[440,12,492,6],[441,12,493,6],[442,10,493,6],[442,11,494,5],[442,12,494,6],[442,19,494,13,"error"],[442,24,494,18],[442,26,494,20],[443,12,495,6],[444,10,495,6],[445,10,498,4],[445,17,498,11,"context"],[445,24,498,18],[446,8,499,2],[446,9,499,3],[447,8,499,3],[447,17,473,16,"buildErrorContext"],[447,34,473,33,"buildErrorContext"],[447,35,473,33,"_x3"],[447,38,473,33],[448,10,473,33],[448,17,473,33,"_buildErrorContext"],[448,35,473,33],[448,36,473,33,"apply"],[448,41,473,33],[448,48,473,33,"arguments"],[448,57,473,33],[449,8,473,33],[450,8,473,33],[450,15,473,16,"buildErrorContext"],[450,32,473,33],[451,6,473,33],[452,6,501,2],[453,0,502,0],[454,0,503,0],[455,6,501,2],[456,4,501,2],[457,6,501,2,"key"],[457,9,501,2],[458,6,501,2,"value"],[458,11,501,2],[459,8,501,2],[459,12,501,2,"_getPerformanceMetrics"],[459,34,501,2],[459,41,501,2,"_asyncToGenerator2"],[459,59,501,2],[459,60,501,2,"default"],[459,67,501,2],[459,69,504,2],[459,82,504,85],[460,10,505,4],[460,14,505,8],[461,12,506,6],[462,12,507,6],[462,16,507,12,"memoryPressure"],[462,30,507,26],[462,33,507,29],[462,38,507,34],[462,39,507,35],[462,40,507,36],[464,12,509,6],[464,19,509,13],[465,14,510,8,"memory_pressure"],[465,29,510,23],[465,31,510,25,"memoryPressure"],[466,14,511,8],[467,14,512,8],[468,12,513,6],[468,13,513,7],[469,10,514,4],[469,11,514,5],[469,12,514,6],[469,19,514,13,"error"],[469,24,514,18],[469,26,514,20],[470,12,515,6],[470,19,515,13,"undefined"],[470,28,515,22],[471,10,516,4],[472,8,517,2],[472,9,517,3],[473,8,517,3],[473,17,504,16,"getPerformanceMetrics"],[473,38,504,37,"getPerformanceMetrics"],[473,39,504,37],[474,10,504,37],[474,17,504,37,"_getPerformanceMetrics"],[474,39,504,37],[474,40,504,37,"apply"],[474,45,504,37],[474,52,504,37,"arguments"],[474,61,504,37],[475,8,504,37],[476,8,504,37],[476,15,504,16,"getPerformanceMetrics"],[476,36,504,37],[477,6,504,37],[478,6,519,2],[479,0,520,0],[480,0,521,0],[481,6,519,2],[482,4,519,2],[483,6,519,2,"key"],[483,9,519,2],[484,6,519,2,"value"],[484,11,519,2],[484,13,522,2],[484,22,522,10,"generateFingerprint"],[484,41,522,29,"generateFingerprint"],[484,42,522,30,"error"],[484,47,522,57],[484,49,522,67],[485,8,522,67],[485,12,522,67,"_error$stack"],[485,24,522,67],[486,8,523,4],[487,8,524,4],[487,12,524,10,"stackLines"],[487,22,524,20],[487,25,524,23],[487,27,524,23,"_error$stack"],[487,39,524,23],[487,42,524,23,"error"],[487,47,524,28],[487,48,524,29,"stack"],[487,53,524,34],[487,74,524,23,"_error$stack"],[487,86,524,23],[487,87,524,36,"split"],[487,92,524,41],[487,93,524,42],[487,97,524,46],[487,98,524,47],[487,99,524,48,"slice"],[487,104,524,53],[487,105,524,54],[487,106,524,55],[487,108,524,57],[487,109,524,58],[487,110,524,59],[487,115,524,63],[487,117,524,65],[488,8,525,4],[488,12,525,10,"fingerprintData"],[488,27,525,25],[488,30,525,28],[489,10,526,6,"name"],[489,14,526,10],[489,16,526,12,"error"],[489,21,526,17],[489,22,526,18,"name"],[489,26,526,22],[490,10,527,6,"message"],[490,17,527,13],[490,19,527,15,"error"],[490,24,527,20],[490,25,527,21,"message"],[490,32,527,28],[490,33,527,29,"slice"],[490,38,527,34],[490,39,527,35],[490,40,527,36],[490,42,527,38],[490,45,527,41],[490,46,527,42],[491,10,528,6,"stack"],[491,15,528,11],[491,17,528,13,"stackLines"],[491,27,528,23],[491,28,528,24,"join"],[491,32,528,28],[491,33,528,29],[491,37,528,33],[492,8,529,4],[492,9,529,5],[494,8,531,4],[495,8,532,4],[495,15,532,11,"btoa"],[495,19,532,15],[495,20,532,16,"JSON"],[495,24,532,20],[495,25,532,21,"stringify"],[495,34,532,30],[495,35,532,31,"fingerprintData"],[495,50,532,46],[495,51,532,47],[495,52,532,48],[495,53,532,49,"slice"],[495,58,532,54],[495,59,532,55],[495,60,532,56],[495,62,532,58],[495,64,532,60],[495,65,532,61],[496,6,533,2],[498,6,535,2],[499,0,536,0],[500,0,537,0],[501,4,535,2],[502,6,535,2,"key"],[502,9,535,2],[503,6,535,2,"value"],[503,11,535,2],[503,13,538,2],[503,22,538,10,"setupGlobalErrorHandlers"],[503,46,538,34,"setupGlobalErrorHandlers"],[503,47,538,34],[503,49,538,43],[504,8,538,43],[504,12,538,43,"_this2"],[504,18,538,43],[505,8,539,4],[506,8,540,4],[506,12,540,8],[506,19,540,15,"ErrorUtils"],[506,29,540,25],[506,34,540,30],[506,45,540,41],[506,47,540,43],[507,10,541,6],[507,14,541,12,"originalHandler"],[507,29,541,27],[507,32,541,30,"ErrorUtils"],[507,42,541,40],[507,43,541,41,"getGlobalHandler"],[507,59,541,57],[507,60,541,58],[507,61,541,59],[508,10,542,6,"ErrorUtils"],[508,20,542,16],[508,21,542,17,"setGlobalHandler"],[508,37,542,33],[508,38,542,34],[508,48,542,35,"error"],[508,53,542,47],[508,55,542,49,"isFatal"],[508,62,542,65],[508,64,542,70],[509,12,543,8,"_this2"],[509,18,543,12],[509,19,543,13,"createAndQueueReport"],[509,39,543,33],[509,40,543,34],[510,14,544,10,"name"],[510,18,544,14],[510,20,544,16,"error"],[510,25,544,21],[510,26,544,22,"name"],[510,30,544,26],[511,14,545,10,"message"],[511,21,545,17],[511,23,545,19,"error"],[511,28,545,24],[511,29,545,25,"message"],[511,36,545,32],[512,14,546,10,"stack"],[512,19,546,15],[512,21,546,17,"error"],[512,26,546,22],[512,27,546,23,"stack"],[512,32,546,28],[513,14,547,10,"type"],[513,18,547,14],[513,20,547,16],[513,32,547,28],[514,14,548,10,"fatal"],[514,19,548,15],[514,21,548,17,"isFatal"],[515,12,549,8],[515,13,549,9],[515,15,549,11,"undefined"],[515,24,549,20],[515,26,549,22,"isFatal"],[515,33,549,29],[515,36,549,32],[515,46,549,42],[515,49,549,45],[515,55,549,51],[515,56,549,52],[517,12,551,8],[518,12,552,8],[518,16,552,12,"originalHandler"],[518,31,552,27],[518,33,552,29],[519,14,553,10,"originalHandler"],[519,29,553,25],[519,30,553,26,"error"],[519,35,553,31],[519,37,553,33,"isFatal"],[519,44,553,40],[519,45,553,41],[520,12,554,8],[521,10,555,6],[521,11,555,7],[521,12,555,8],[522,8,556,4],[524,8,558,4],[525,8,559,4],[525,12,559,8],[525,16,559,12],[525,17,559,13,"config"],[525,23,559,19],[525,24,559,20,"captureUnhandledPromiseRejections"],[525,57,559,53],[525,61,559,57],[525,68,559,64,"global"],[525,74,559,70],[525,79,559,75],[525,90,559,86],[525,92,559,88],[526,10,560,6],[526,14,560,12,"originalHandler"],[526,30,560,27],[526,33,560,30,"global"],[526,39,560,36],[526,40,560,37,"onunhandledrejection"],[526,60,560,57],[527,10,561,6,"global"],[527,16,561,12],[527,17,561,13,"onunhandledrejection"],[527,37,561,33],[527,40,561,36],[527,50,561,37,"event"],[527,55,561,47],[527,57,561,52],[528,12,561,52],[528,16,561,52,"_event$reason"],[528,29,561,52],[528,31,561,52,"_event$reason2"],[528,45,561,52],[528,47,561,52,"_event$promise"],[528,61,561,52],[529,12,562,8,"_this2"],[529,18,562,12],[529,19,562,13,"createAndQueueReport"],[529,39,562,33],[529,40,562,34],[530,14,563,10,"name"],[530,18,563,14],[530,20,563,16],[530,47,563,43],[531,14,564,10,"message"],[531,21,564,17],[531,23,564,19],[531,25,564,19,"_event$reason"],[531,38,564,19],[531,41,564,19,"event"],[531,46,564,24],[531,47,564,25,"reason"],[531,53,564,31],[531,74,564,19,"_event$reason"],[531,87,564,19],[531,88,564,33,"message"],[531,95,564,40],[531,100,564,44],[531,129,564,73],[532,14,565,10,"stack"],[532,19,565,15],[532,22,565,15,"_event$reason2"],[532,36,565,15],[532,39,565,17,"event"],[532,44,565,22],[532,45,565,23,"reason"],[532,51,565,29],[532,72,565,17,"_event$reason2"],[532,86,565,17],[532,87,565,31,"stack"],[532,92,565,36],[533,14,566,10,"type"],[533,18,566,14],[533,20,566,16],[533,41,566,37],[534,14,567,10,"fatal"],[534,19,567,15],[534,21,567,17],[535,12,568,8],[535,13,568,9],[535,15,568,11],[536,14,569,10,"promise"],[536,21,569,17],[536,24,569,17,"_event$promise"],[536,38,569,17],[536,41,569,19,"event"],[536,46,569,24],[536,47,569,25,"promise"],[536,54,569,32],[536,75,569,19,"_event$promise"],[536,89,569,19],[536,90,569,34,"toString"],[536,98,569,42],[536,99,569,43],[537,12,570,8],[537,13,570,9],[537,15,570,11],[537,21,570,17],[537,22,570,18],[538,12,572,8],[538,16,572,12,"originalHandler"],[538,32,572,27],[538,34,572,29],[539,14,573,10,"originalHandler"],[539,30,573,25],[539,31,573,26,"event"],[539,36,573,31],[539,37,573,32],[540,12,574,8],[541,10,575,6],[541,11,575,7],[542,8,576,4],[543,6,577,2],[545,6,579,2],[546,0,580,0],[547,0,581,0],[548,4,579,2],[549,6,579,2,"key"],[549,9,579,2],[550,6,579,2,"value"],[550,11,579,2],[550,13,582,2],[550,22,582,10,"setupConsoleInterception"],[550,46,582,34,"setupConsoleInterception"],[550,47,582,34],[550,49,582,43],[551,8,582,43],[551,12,582,43,"_this3"],[551,18,582,43],[552,8,583,4],[552,12,583,8],[552,13,583,9],[552,17,583,13],[552,18,583,14,"config"],[552,24,583,20],[552,25,583,21,"captureConsoleErrors"],[552,45,583,41],[552,47,583,43],[554,8,585,4],[555,8,586,4],[555,12,586,8],[555,13,586,9,"originalConsoleError"],[555,33,586,29],[555,36,586,32,"console"],[555,43,586,39],[555,44,586,40,"error"],[555,49,586,45],[556,8,587,4,"console"],[556,15,587,11],[556,16,587,12,"error"],[556,21,587,17],[556,24,587,20],[556,36,587,40],[557,10,587,40],[557,19,587,40,"_len"],[557,23,587,40],[557,26,587,40,"arguments"],[557,35,587,40],[557,36,587,40,"length"],[557,42,587,40],[557,44,587,24,"args"],[557,48,587,28],[557,55,587,28,"Array"],[557,60,587,28],[557,61,587,28,"_len"],[557,65,587,28],[557,68,587,28,"_key"],[557,72,587,28],[557,78,587,28,"_key"],[557,82,587,28],[557,85,587,28,"_len"],[557,89,587,28],[557,91,587,28,"_key"],[557,95,587,28],[558,12,587,24,"args"],[558,16,587,28],[558,17,587,28,"_key"],[558,21,587,28],[558,25,587,28,"arguments"],[558,34,587,28],[558,35,587,28,"_key"],[558,39,587,28],[559,10,587,28],[560,10,588,6,"_this3"],[560,16,588,10],[560,17,588,11,"addBreadcrumb"],[560,30,588,24],[560,31,588,25],[561,12,589,8,"category"],[561,20,589,16],[561,22,589,18],[561,31,589,27],[562,12,590,8,"message"],[562,19,590,15],[562,21,590,17,"args"],[562,25,590,21],[562,26,590,22,"map"],[562,29,590,25],[562,30,590,26],[562,40,590,26,"arg"],[562,43,590,29],[563,14,590,29],[563,21,590,33,"String"],[563,27,590,39],[563,28,590,40,"arg"],[563,31,590,43],[563,32,590,44],[564,12,590,44],[564,14,590,45],[564,15,590,46,"join"],[564,19,590,50],[564,20,590,51],[564,23,590,54],[564,24,590,55],[565,12,591,8,"level"],[565,17,591,13],[565,19,591,15],[566,10,592,6],[566,11,592,7],[566,12,592,8],[567,10,593,6,"_this3"],[567,16,593,10],[567,17,593,11,"originalConsoleError"],[567,37,593,31],[567,38,593,32,"apply"],[567,43,593,37],[567,44,593,38,"console"],[567,51,593,45],[567,53,593,47,"args"],[567,57,593,51],[567,58,593,52],[568,8,594,4],[568,9,594,5],[570,8,596,4],[571,8,597,4],[571,12,597,8],[571,13,597,9,"originalConsoleWarn"],[571,32,597,28],[571,35,597,31,"console"],[571,42,597,38],[571,43,597,39,"warn"],[571,47,597,43],[572,8,598,4,"console"],[572,15,598,11],[572,16,598,12,"warn"],[572,20,598,16],[572,23,598,19],[572,35,598,39],[573,10,598,39],[573,19,598,39,"_len2"],[573,24,598,39],[573,27,598,39,"arguments"],[573,36,598,39],[573,37,598,39,"length"],[573,43,598,39],[573,45,598,23,"args"],[573,49,598,27],[573,56,598,27,"Array"],[573,61,598,27],[573,62,598,27,"_len2"],[573,67,598,27],[573,70,598,27,"_key2"],[573,75,598,27],[573,81,598,27,"_key2"],[573,86,598,27],[573,89,598,27,"_len2"],[573,94,598,27],[573,96,598,27,"_key2"],[573,101,598,27],[574,12,598,23,"args"],[574,16,598,27],[574,17,598,27,"_key2"],[574,22,598,27],[574,26,598,27,"arguments"],[574,35,598,27],[574,36,598,27,"_key2"],[574,41,598,27],[575,10,598,27],[576,10,599,6,"_this3"],[576,16,599,10],[576,17,599,11,"addBreadcrumb"],[576,30,599,24],[576,31,599,25],[577,12,600,8,"category"],[577,20,600,16],[577,22,600,18],[577,31,600,27],[578,12,601,8,"message"],[578,19,601,15],[578,21,601,17,"args"],[578,25,601,21],[578,26,601,22,"map"],[578,29,601,25],[578,30,601,26],[578,40,601,26,"arg"],[578,43,601,29],[579,14,601,29],[579,21,601,33,"String"],[579,27,601,39],[579,28,601,40,"arg"],[579,31,601,43],[579,32,601,44],[580,12,601,44],[580,14,601,45],[580,15,601,46,"join"],[580,19,601,50],[580,20,601,51],[580,23,601,54],[580,24,601,55],[581,12,602,8,"level"],[581,17,602,13],[581,19,602,15],[582,10,603,6],[582,11,603,7],[582,12,603,8],[583,10,604,6,"_this3"],[583,16,604,10],[583,17,604,11,"originalConsoleWarn"],[583,36,604,30],[583,37,604,31,"apply"],[583,42,604,36],[583,43,604,37,"console"],[583,50,604,44],[583,52,604,46,"args"],[583,56,604,50],[583,57,604,51],[584,8,605,4],[584,9,605,5],[585,6,606,2],[587,6,608,2],[588,0,609,0],[589,0,610,0],[590,4,608,2],[591,6,608,2,"key"],[591,9,608,2],[592,6,608,2,"value"],[592,11,608,2],[592,13,611,2],[592,22,611,10,"setupPeriodicFlush"],[592,40,611,28,"setupPeriodicFlush"],[592,41,611,28],[592,43,611,37],[593,8,611,37],[593,12,611,37,"_this4"],[593,18,611,37],[594,8,612,4],[595,8,613,4,"setTimeout"],[595,18,613,14],[595,19,613,15],[595,31,613,21],[596,10,614,6,"setInterval"],[596,21,614,17],[596,22,614,18],[596,34,614,24],[597,12,615,8],[597,16,615,12,"_this4"],[597,22,615,16],[597,23,615,17,"isInitialized"],[597,36,615,30],[597,40,615,34,"_this4"],[597,46,615,38],[597,47,615,39,"config"],[597,53,615,45],[597,54,615,46,"enabled"],[597,61,615,53],[597,65,615,57,"_this4"],[597,71,615,61],[597,72,615,62,"reportQueue"],[597,83,615,73],[597,84,615,74,"length"],[597,90,615,80],[597,93,615,83],[597,94,615,84],[597,96,615,86],[598,14,616,10,"EventLogger"],[598,38,616,21],[598,39,616,22,"debug"],[598,44,616,27],[598,45,616,28],[598,60,616,43],[598,62,616,45],[598,88,616,71],[598,90,616,73],[599,16,616,75,"queueLength"],[599,27,616,86],[599,29,616,88,"_this4"],[599,35,616,92],[599,36,616,93,"reportQueue"],[599,47,616,104],[599,48,616,105,"length"],[600,14,616,112],[600,15,616,113],[600,16,616,114],[601,14,617,10,"_this4"],[601,20,617,14],[601,21,617,15,"flushReports"],[601,33,617,27],[601,34,617,28],[601,35,617,29],[601,36,617,30,"catch"],[601,41,617,35],[601,42,617,36],[601,52,617,36,"error"],[601,57,617,41],[601,59,617,45],[602,16,618,12,"EventLogger"],[602,40,618,23],[602,41,618,24,"error"],[602,46,618,29],[602,47,618,30],[602,62,618,45],[602,64,618,47],[602,87,618,70],[602,89,618,72,"error"],[602,94,618,86],[602,95,618,87],[603,14,619,10],[603,15,619,11],[603,16,619,12],[604,12,620,8],[605,10,621,6],[605,11,621,7],[605,13,621,9],[605,18,621,14],[605,19,621,15],[605,20,621,16],[605,21,621,17],[606,8,622,4],[606,9,622,5],[606,11,622,7],[606,15,622,11],[606,16,622,12],[606,17,622,13],[606,18,622,14],[607,6,623,2],[609,6,625,2],[610,0,626,0],[611,0,627,0],[612,4,625,2],[613,6,625,2,"key"],[613,9,625,2],[614,6,625,2,"value"],[614,11,625,2],[615,8,625,2],[615,12,625,2,"_flush"],[615,18,625,2],[615,25,625,2,"_asyncToGenerator2"],[615,43,625,2],[615,44,625,2,"default"],[615,51,625,2],[615,53,628,2],[615,66,628,38],[616,10,629,4],[616,14,629,8],[616,15,629,9],[616,19,629,13],[616,20,629,14,"isInitialized"],[616,33,629,27],[616,35,629,29],[617,12,630,6,"EventLogger"],[617,36,630,17],[617,37,630,18,"warn"],[617,41,630,22],[617,42,630,23],[617,57,630,38],[617,59,630,40],[617,95,630,76],[617,96,630,77],[618,12,631,6],[619,10,632,4],[620,10,633,4],[620,17,633,11],[620,21,633,15],[620,22,633,16,"flushReports"],[620,34,633,28],[620,35,633,29],[620,36,633,30],[621,8,634,2],[621,9,634,3],[622,8,634,3],[622,17,628,15,"flush"],[622,22,628,20,"flush"],[622,23,628,20],[623,10,628,20],[623,17,628,20,"_flush"],[623,23,628,20],[623,24,628,20,"apply"],[623,29,628,20],[623,36,628,20,"arguments"],[623,45,628,20],[624,8,628,20],[625,8,628,20],[625,15,628,15,"flush"],[625,20,628,20],[626,6,628,20],[627,6,636,2],[628,0,637,0],[629,0,638,0],[630,6,636,2],[631,4,636,2],[632,6,636,2,"key"],[632,9,636,2],[633,6,636,2,"value"],[633,11,636,2],[634,8,636,2],[634,12,636,2,"_flushReports"],[634,25,636,2],[634,32,636,2,"_asyncToGenerator2"],[634,50,636,2],[634,51,636,2,"default"],[634,58,636,2],[634,60,639,2],[634,73,639,46],[635,10,640,4],[635,14,640,8],[635,15,640,9],[635,19,640,13],[635,20,640,14,"config"],[635,26,640,20],[635,27,640,21,"enabled"],[635,34,640,28],[635,38,640,32],[635,39,640,33],[635,43,640,37],[635,44,640,38,"isInitialized"],[635,57,640,51],[635,61,640,55],[635,65,640,59],[635,66,640,60,"isFlushingReports"],[635,83,640,77],[635,87,640,81],[635,91,640,85],[635,92,640,86,"reportQueue"],[635,103,640,97],[635,104,640,98,"length"],[635,110,640,104],[635,115,640,109],[635,116,640,110],[635,118,640,112],[636,12,641,6,"EventLogger"],[636,36,641,17],[636,37,641,18,"debug"],[636,42,641,23],[636,43,641,24],[636,58,641,39],[636,60,641,41],[636,76,641,57],[636,78,641,59],[637,14,642,8,"enabled"],[637,21,642,15],[637,23,642,17],[637,27,642,21],[637,28,642,22,"config"],[637,34,642,28],[637,35,642,29,"enabled"],[637,42,642,36],[638,14,643,8,"initialized"],[638,25,643,19],[638,27,643,21],[638,31,643,25],[638,32,643,26,"isInitialized"],[638,45,643,39],[639,14,644,8,"flushing"],[639,22,644,16],[639,24,644,18],[639,28,644,22],[639,29,644,23,"isFlushingReports"],[639,46,644,40],[640,14,645,8,"queueLength"],[640,25,645,19],[640,27,645,21],[640,31,645,25],[640,32,645,26,"reportQueue"],[640,43,645,37],[640,44,645,38,"length"],[641,12,646,6],[641,13,646,7],[641,14,646,8],[642,12,647,6],[643,10,648,4],[645,10,650,4],[646,10,651,4],[646,14,651,8],[646,15,651,9],[646,19,651,13],[646,20,651,14,"databaseAvailable"],[646,37,651,31],[646,39,651,33],[647,12,652,6],[647,16,652,12,"reports"],[647,24,652,19],[647,31,652,19,"_toConsumableArray2"],[647,50,652,19],[647,51,652,19,"default"],[647,58,652,19],[647,60,652,26],[647,64,652,30],[647,65,652,31,"reportQueue"],[647,76,652,42],[647,77,652,43],[648,12,653,6],[648,16,653,10],[648,17,653,11,"reportQueue"],[648,28,653,22],[648,31,653,25],[648,33,653,27],[649,12,654,6],[649,18,654,12],[649,22,654,16],[649,23,654,17,"storeOfflineReports"],[649,42,654,36],[649,43,654,37,"reports"],[649,51,654,44],[649,52,654,45],[650,12,655,6,"EventLogger"],[650,36,655,17],[650,37,655,18,"debug"],[650,42,655,23],[650,43,655,24],[650,58,655,39],[650,60,655,41],[650,109,655,90],[650,111,655,92],[651,14,655,94,"count"],[651,19,655,99],[651,21,655,101,"reports"],[651,29,655,108],[651,30,655,109,"length"],[652,12,655,116],[652,13,655,117],[652,14,655,118],[653,12,656,6],[654,10,657,4],[655,10,659,4],[655,14,659,8],[655,15,659,9,"isFlushingReports"],[655,32,659,26],[655,35,659,29],[655,39,659,33],[656,10,660,4],[656,14,660,10,"reports"],[656,21,660,17],[656,28,660,17,"_toConsumableArray2"],[656,47,660,17],[656,48,660,17,"default"],[656,55,660,17],[656,57,660,24],[656,61,660,28],[656,62,660,29,"reportQueue"],[656,73,660,40],[656,74,660,41],[657,10,661,4],[657,14,661,8],[657,15,661,9,"reportQueue"],[657,26,661,20],[657,29,661,23],[657,31,661,25],[658,10,663,4],[658,14,663,8],[659,12,664,6],[660,12,665,6],[660,18,665,12],[660,22,665,16],[660,23,665,17,"sendReports"],[660,34,665,28],[660,35,665,29,"reports"],[660,42,665,36],[660,43,665,37],[661,12,666,6,"EventLogger"],[661,36,666,17],[661,37,666,18,"info"],[661,41,666,22],[661,42,666,23],[661,57,666,38],[661,59,666,40],[661,89,666,70],[661,91,666,72],[662,14,666,74,"count"],[662,19,666,79],[662,21,666,81,"reports"],[662,28,666,88],[662,29,666,89,"length"],[663,12,666,96],[663,13,666,97],[663,14,666,98],[664,10,668,4],[664,11,668,5],[664,12,668,6],[664,19,668,13,"error"],[664,24,668,18],[664,26,668,20],[665,12,668,20],[665,16,668,20,"_this$reportQueue"],[665,33,668,20],[666,12,669,6],[667,12,670,6],[667,13,670,6,"_this$reportQueue"],[667,30,670,6],[667,37,670,10],[667,38,670,11,"reportQueue"],[667,49,670,22],[667,51,670,23,"unshift"],[667,58,670,30],[667,59,670,30,"apply"],[667,64,670,30],[667,65,670,30,"_this$reportQueue"],[667,82,670,30],[667,88,670,30,"_toConsumableArray2"],[667,107,670,30],[667,108,670,30,"default"],[667,115,670,30],[667,117,670,34,"reports"],[667,124,670,41],[667,126,670,42],[668,12,671,6],[668,18,671,12],[668,22,671,16],[668,23,671,17,"storeOfflineReports"],[668,42,671,36],[668,43,671,37,"reports"],[668,50,671,44],[668,51,671,45],[670,12,673,6],[671,12,674,6],[671,16,674,12,"errorDetails"],[671,28,674,24],[671,31,674,27],[672,14,675,8,"name"],[672,18,675,12],[672,20,675,14,"error"],[672,25,675,19],[672,37,675,31,"Error"],[672,42,675,36],[672,45,675,39,"error"],[672,50,675,44],[672,51,675,45,"name"],[672,55,675,49],[672,58,675,52],[672,72,675,66],[673,14,676,8,"message"],[673,21,676,15],[673,23,676,17,"error"],[673,28,676,22],[673,40,676,34,"Error"],[673,45,676,39],[673,48,676,42,"error"],[673,53,676,47],[673,54,676,48,"message"],[673,61,676,55],[673,64,676,58,"String"],[673,70,676,64],[673,71,676,65,"error"],[673,76,676,70],[673,77,676,71],[674,14,677,8,"stack"],[674,19,677,13],[674,21,677,15,"error"],[674,26,677,20],[674,38,677,32,"Error"],[674,43,677,37],[674,46,677,40,"error"],[674,51,677,45],[674,52,677,46,"stack"],[674,57,677,51],[674,60,677,54,"undefined"],[674,69,677,63],[675,14,678,8,"reportCount"],[675,25,678,19],[675,27,678,21,"reports"],[675,34,678,28],[675,35,678,29,"length"],[675,41,678,35],[676,14,679,8,"isSupabaseError"],[676,29,679,23],[676,31,679,25,"error"],[676,36,679,30],[676,40,679,34],[676,47,679,41,"error"],[676,52,679,46],[676,57,679,51],[676,65,679,59],[676,69,679,63],[676,75,679,69],[676,79,679,73,"error"],[676,84,679,78],[677,14,680,8,"errorCode"],[677,23,680,17],[677,25,680,19,"error"],[677,30,680,24],[677,34,680,28],[677,41,680,35,"error"],[677,46,680,40],[677,51,680,45],[677,59,680,53],[677,63,680,57],[677,69,680,63],[677,73,680,67,"error"],[677,78,680,72],[677,81,680,76,"error"],[677,86,680,81],[677,87,680,90,"code"],[677,91,680,94],[677,94,680,97,"undefined"],[678,12,681,6],[678,13,681,7],[679,12,683,6,"EventLogger"],[679,36,683,17],[679,37,683,18,"error"],[679,42,683,23],[679,43,683,24],[679,58,683,39],[679,60,683,41],[679,102,683,83],[679,104,683,85,"errorDetails"],[679,116,683,104],[679,117,683,105],[680,10,684,4],[680,11,684,5],[680,20,684,14],[681,12,685,6],[681,16,685,10],[681,17,685,11,"isFlushingReports"],[681,34,685,28],[681,37,685,31],[681,42,685,36],[682,10,686,4],[683,8,687,2],[683,9,687,3],[684,8,687,3],[684,17,639,16,"flushReports"],[684,29,639,28,"flushReports"],[684,30,639,28],[685,10,639,28],[685,17,639,28,"_flushReports"],[685,30,639,28],[685,31,639,28,"apply"],[685,36,639,28],[685,43,639,28,"arguments"],[685,52,639,28],[686,8,639,28],[687,8,639,28],[687,15,639,16,"flushReports"],[687,27,639,28],[688,6,639,28],[689,6,689,2],[690,0,690,0],[691,0,691,0],[692,6,689,2],[693,4,689,2],[694,6,689,2,"key"],[694,9,689,2],[695,6,689,2,"value"],[695,11,689,2],[696,8,689,2],[696,12,689,2,"_sendReports"],[696,24,689,2],[696,31,689,2,"_asyncToGenerator2"],[696,49,689,2],[696,50,689,2,"default"],[696,57,689,2],[696,59,692,2],[696,70,692,28,"reports"],[696,77,692,50],[696,79,692,67],[697,10,693,4],[698,10,694,4],[698,14,694,8],[698,15,694,9,"supabase"],[698,31,694,17],[698,33,694,19],[699,12,695,6],[699,18,695,12],[699,22,695,16,"Error"],[699,27,695,21],[699,28,695,22],[699,61,695,55],[699,62,695,56],[700,10,696,4],[702,10,698,4],[703,10,699,4],[705,10,701,4],[705,14,701,10,"errors"],[705,20,701,25],[705,23,701,28],[705,25,701,30],[706,10,702,4],[706,14,702,10,"results"],[706,21,702,17],[706,30,702,26,"Promise"],[706,37,702,33],[706,38,702,34,"allSettled"],[706,48,702,44],[706,49,702,45,"reports"],[706,56,702,52],[706,57,702,53,"map"],[706,60,702,56],[707,12,702,56],[707,16,702,56,"_ref"],[707,20,702,56],[707,27,702,56,"_asyncToGenerator2"],[707,45,702,56],[707,46,702,56,"default"],[707,53,702,56],[707,55,702,57],[707,66,702,64,"report"],[707,72,702,70],[707,74,702,75],[708,14,703,6],[708,18,703,10],[709,16,704,8],[709,20,704,8,"_yield$supabase$from$2"],[709,42,704,8],[709,51,704,32,"supabase"],[709,67,704,40],[709,68,705,11,"from"],[709,72,705,15],[709,73,705,16],[709,88,705,31],[709,89,705,32],[709,90,706,11,"insert"],[709,96,706,17],[709,97,706,18],[710,20,707,12,"id"],[710,22,707,14],[710,24,707,16,"report"],[710,30,707,22],[710,31,707,23,"id"],[710,33,707,25],[711,20,708,12,"timestamp"],[711,29,708,21],[711,31,708,23,"report"],[711,37,708,29],[711,38,708,30,"timestamp"],[711,47,708,39],[712,20,709,12,"error_name"],[712,30,709,22],[712,32,709,24,"report"],[712,38,709,30],[712,39,709,31,"error"],[712,44,709,36],[712,45,709,37,"name"],[712,49,709,41],[713,20,710,12,"error_message"],[713,33,710,25],[713,35,710,27,"report"],[713,41,710,33],[713,42,710,34,"error"],[713,47,710,39],[713,48,710,40,"message"],[713,55,710,47],[714,20,711,12,"error_stack"],[714,31,711,23],[714,33,711,25,"report"],[714,39,711,31],[714,40,711,32,"error"],[714,45,711,37],[714,46,711,38,"stack"],[714,51,711,43],[715,20,712,12,"error_type"],[715,30,712,22],[715,32,712,24,"report"],[715,38,712,30],[715,39,712,31,"error"],[715,44,712,36],[715,45,712,37,"type"],[715,49,712,41],[716,20,713,12,"error_fatal"],[716,31,713,23],[716,33,713,25,"report"],[716,39,713,31],[716,40,713,32,"error"],[716,45,713,37],[716,46,713,38,"fatal"],[716,51,713,43],[717,20,714,12,"context"],[717,27,714,19],[717,29,714,21,"report"],[717,35,714,27],[717,36,714,28,"context"],[717,43,714,35],[718,20,715,12,"breadcrumbs"],[718,31,715,23],[718,33,715,25,"report"],[718,39,715,31],[718,40,715,32,"breadcrumbs"],[718,51,715,43],[719,20,716,12,"user_actions"],[719,32,716,24],[719,34,716,26,"report"],[719,40,716,32],[719,41,716,33,"user_actions"],[719,53,716,45],[720,20,717,12,"performance_metrics"],[720,39,717,31],[720,41,717,33,"report"],[720,47,717,39],[720,48,717,40,"performance_metrics"],[720,67,717,59],[721,20,718,12,"severity"],[721,28,718,20],[721,30,718,22,"report"],[721,36,718,28],[721,37,718,29,"severity"],[721,45,718,37],[722,20,719,12,"fingerprint"],[722,31,719,23],[722,33,719,25,"report"],[722,39,719,31],[722,40,719,32,"fingerprint"],[722,51,719,43],[723,20,720,12,"tags"],[723,24,720,16],[723,26,720,18,"report"],[723,32,720,24],[723,33,720,25,"tags"],[724,18,721,10],[724,19,721,11],[724,20,721,12],[725,18,704,16,"error"],[725,23,704,21],[725,26,704,21,"_yield$supabase$from$2"],[725,48,704,21],[725,49,704,16,"error"],[725,54,704,21],[726,16,723,8],[726,20,723,12,"error"],[726,25,723,17],[726,27,723,19],[727,18,724,10,"EventLogger"],[727,42,724,21],[727,43,724,22,"error"],[727,48,724,27],[727,49,724,28],[727,64,724,43],[727,66,724,45],[727,93,724,72,"report"],[727,99,724,78],[727,100,724,79,"id"],[727,102,724,81],[727,104,724,83],[727,106,724,85],[728,20,725,12,"supabaseError"],[728,33,725,25],[728,35,725,27,"error"],[728,40,725,32],[729,20,726,12,"errorCode"],[729,29,726,21],[729,31,726,23,"error"],[729,36,726,28],[729,37,726,29,"code"],[729,41,726,33],[730,20,727,12,"errorMessage"],[730,32,727,24],[730,34,727,26,"error"],[730,39,727,31],[730,40,727,32,"message"],[730,47,727,39],[731,20,728,12,"reportId"],[731,28,728,20],[731,30,728,22,"report"],[731,36,728,28],[731,37,728,29,"id"],[732,18,729,10],[732,19,729,18],[732,20,729,19],[733,18,730,10],[733,24,730,16],[733,28,730,20,"Error"],[733,33,730,25],[733,34,730,26],[733,53,730,45,"error"],[733,58,730,50],[733,59,730,51,"message"],[733,66,730,58],[733,77,730,69,"error"],[733,82,730,74],[733,83,730,75,"code"],[733,87,730,79],[733,90,730,82],[733,91,730,83],[734,16,731,8],[735,16,733,8],[735,23,733,15],[736,18,733,17,"success"],[736,25,733,24],[736,27,733,26],[736,31,733,30],[737,18,733,32,"reportId"],[737,26,733,40],[737,28,733,42,"report"],[737,34,733,48],[737,35,733,49,"id"],[738,16,733,52],[738,17,733,53],[739,14,734,6],[739,15,734,7],[739,16,734,8],[739,23,734,15,"insertError"],[739,34,734,26],[739,36,734,28],[740,16,735,8,"EventLogger"],[740,40,735,19],[740,41,735,20,"error"],[740,46,735,25],[740,47,735,26],[740,62,735,41],[740,64,735,43],[740,101,735,80,"report"],[740,107,735,86],[740,108,735,87,"id"],[740,110,735,89],[740,112,735,91],[740,114,735,93],[741,18,736,10,"error"],[741,23,736,15],[741,25,736,17,"insertError"],[741,36,736,28],[742,18,737,10,"reportId"],[742,26,737,18],[742,28,737,20,"report"],[742,34,737,26],[742,35,737,27,"id"],[743,16,738,8],[743,17,738,16],[743,18,738,17],[744,16,739,8],[744,22,739,14,"insertError"],[744,33,739,25],[745,14,740,6],[746,12,741,4],[746,13,741,5],[747,12,741,5],[747,29,741,5,"_x5"],[747,32,741,5],[748,14,741,5],[748,21,741,5,"_ref"],[748,25,741,5],[748,26,741,5,"apply"],[748,31,741,5],[748,38,741,5,"arguments"],[748,47,741,5],[749,12,741,5],[750,10,741,5],[750,14,741,6],[750,15,741,7],[752,10,743,4],[753,10,744,4,"results"],[753,17,744,11],[753,18,744,12,"forEach"],[753,25,744,19],[753,26,744,20],[753,36,744,21,"result"],[753,42,744,27],[753,44,744,29,"index"],[753,49,744,34],[753,51,744,39],[754,12,745,6],[754,16,745,10,"result"],[754,22,745,16],[754,23,745,17,"status"],[754,29,745,23],[754,34,745,28],[754,44,745,38],[754,46,745,40],[755,14,746,8,"errors"],[755,20,746,14],[755,21,746,15,"push"],[755,25,746,19],[755,26,746,20],[755,30,746,24,"Error"],[755,35,746,29],[755,36,746,30],[755,46,746,40,"reports"],[755,53,746,47],[755,54,746,48,"index"],[755,59,746,53],[755,60,746,54],[755,61,746,55,"id"],[755,63,746,57],[755,68,746,62,"result"],[755,74,746,68],[755,75,746,69,"reason"],[755,81,746,75],[755,83,746,77],[755,84,746,78],[755,85,746,79],[756,12,747,6],[757,10,748,4],[757,11,748,5],[757,12,748,6],[759,10,750,4],[760,10,751,4],[760,14,751,8,"errors"],[760,20,751,14],[760,21,751,15,"length"],[760,27,751,21],[760,30,751,24],[760,31,751,25],[760,33,751,27],[761,12,752,6],[761,16,752,12,"errorMessage"],[761,28,752,24],[761,31,752,27],[761,49,752,45,"errors"],[761,55,752,51],[761,56,752,52,"length"],[761,62,752,58],[761,66,752,62,"reports"],[761,73,752,69],[761,74,752,70,"length"],[761,80,752,76],[761,100,752,96,"errors"],[761,106,752,102],[761,107,752,103,"map"],[761,110,752,106],[761,111,752,107],[761,121,752,107,"e"],[761,122,752,108],[762,14,752,108],[762,21,752,112,"e"],[762,22,752,113],[762,23,752,114,"message"],[762,30,752,121],[763,12,752,121],[763,14,752,122],[763,15,752,123,"join"],[763,19,752,127],[763,20,752,128],[763,24,752,132],[763,25,752,133],[763,27,752,135],[764,12,753,6,"EventLogger"],[764,36,753,17],[764,37,753,18,"error"],[764,42,753,23],[764,43,753,24],[764,58,753,39],[764,60,753,41],[764,100,753,81],[764,102,753,83],[765,14,754,8,"failedCount"],[765,25,754,19],[765,27,754,21,"errors"],[765,33,754,27],[765,34,754,28,"length"],[765,40,754,34],[766,14,755,8,"totalCount"],[766,24,755,18],[766,26,755,20,"reports"],[766,33,755,27],[766,34,755,28,"length"],[766,40,755,34],[767,14,756,8,"errors"],[767,20,756,14],[767,22,756,16,"errors"],[767,28,756,22],[767,29,756,23,"map"],[767,32,756,26],[767,33,756,27],[767,43,756,27,"e"],[767,44,756,28],[768,16,756,28],[768,23,756,33],[769,18,756,35,"name"],[769,22,756,39],[769,24,756,41,"e"],[769,25,756,42],[769,26,756,43,"name"],[769,30,756,47],[770,18,756,49,"message"],[770,25,756,56],[770,27,756,58,"e"],[770,28,756,59],[770,29,756,60,"message"],[770,36,756,67],[771,18,756,69,"stack"],[771,23,756,74],[771,25,756,76,"e"],[771,26,756,77],[771,27,756,78,"stack"],[772,16,756,84],[772,17,756,85],[773,14,756,85],[773,15,756,86],[774,12,757,6],[774,13,757,14],[774,14,757,15],[775,12,758,6],[775,18,758,12],[775,22,758,16,"Error"],[775,27,758,21],[775,28,758,22,"errorMessage"],[775,40,758,34],[775,41,758,35],[776,10,759,4],[777,8,760,2],[777,9,760,3],[778,8,760,3],[778,17,692,16,"sendReports"],[778,28,692,27,"sendReports"],[778,29,692,27,"_x4"],[778,32,692,27],[779,10,692,27],[779,17,692,27,"_sendReports"],[779,29,692,27],[779,30,692,27,"apply"],[779,35,692,27],[779,42,692,27,"arguments"],[779,51,692,27],[780,8,692,27],[781,8,692,27],[781,15,692,16,"sendReports"],[781,26,692,27],[782,6,692,27],[783,6,762,2],[784,0,763,0],[785,0,764,0],[786,6,762,2],[787,4,762,2],[788,6,762,2,"key"],[788,9,762,2],[789,6,762,2,"value"],[789,11,762,2],[790,8,762,2],[790,12,762,2,"_loadOfflineReports"],[790,31,762,2],[790,38,762,2,"_asyncToGenerator2"],[790,56,762,2],[790,57,762,2,"default"],[790,64,762,2],[790,66,765,2],[790,79,765,52],[791,10,766,4],[791,14,766,8],[792,12,767,6],[792,16,767,12,"offlineReports"],[792,30,767,26],[792,39,767,35,"AsyncStorage"],[792,60,767,47],[792,61,767,48,"getItem"],[792,68,767,55],[792,69,767,56,"CrashReporterService"],[792,89,767,76],[792,90,767,77,"OFFLINE_REPORTS_KEY"],[792,109,767,96],[792,110,767,97],[793,12,768,6],[793,16,768,10,"offlineReports"],[793,30,768,24],[793,32,768,26],[794,14,768,26],[794,18,768,26,"_this$reportQueue2"],[794,36,768,26],[795,14,769,8],[795,18,769,14,"reports"],[795,25,769,36],[795,28,769,39,"JSON"],[795,32,769,43],[795,33,769,44,"parse"],[795,38,769,49],[795,39,769,50,"offlineReports"],[795,53,769,64],[795,54,769,65],[796,14,770,8],[796,15,770,8,"_this$reportQueue2"],[796,33,770,8],[796,40,770,12],[796,41,770,13,"reportQueue"],[796,52,770,24],[796,54,770,25,"unshift"],[796,61,770,32],[796,62,770,32,"apply"],[796,67,770,32],[796,68,770,32,"_this$reportQueue2"],[796,86,770,32],[796,92,770,32,"_toConsumableArray2"],[796,111,770,32],[796,112,770,32,"default"],[796,119,770,32],[796,121,770,36,"reports"],[796,128,770,43],[796,130,770,44],[797,14,771,8],[797,20,771,14,"AsyncStorage"],[797,41,771,26],[797,42,771,27,"removeItem"],[797,52,771,37],[797,53,771,38,"CrashReporterService"],[797,73,771,58],[797,74,771,59,"OFFLINE_REPORTS_KEY"],[797,93,771,78],[797,94,771,79],[798,14,772,8,"EventLogger"],[798,38,772,19],[798,39,772,20,"info"],[798,43,772,24],[798,44,772,25],[798,59,772,40],[798,61,772,42],[798,85,772,66],[798,87,772,68],[799,16,772,70,"count"],[799,21,772,75],[799,23,772,77,"reports"],[799,30,772,84],[799,31,772,85,"length"],[800,14,772,92],[800,15,772,93],[800,16,772,94],[802,14,774,8],[803,14,775,8],[803,18,775,12],[803,22,775,16],[803,23,775,17,"databaseAvailable"],[803,40,775,34],[803,42,775,36],[804,16,776,10],[804,20,776,14],[804,21,776,15,"syncOfflineReports"],[804,39,776,33],[804,40,776,34],[804,41,776,35],[804,42,776,36,"catch"],[804,47,776,41],[804,48,776,42],[804,58,776,42,"error"],[804,63,776,47],[804,65,776,51],[805,18,777,12,"EventLogger"],[805,42,777,23],[805,43,777,24,"error"],[805,48,777,29],[805,49,777,30],[805,64,777,45],[805,66,777,47],[805,110,777,91],[805,112,777,93,"error"],[805,117,777,107],[805,118,777,108],[806,16,778,10],[806,17,778,11],[806,18,778,12],[807,14,779,8],[808,12,780,6],[809,10,781,4],[809,11,781,5],[809,12,781,6],[809,19,781,13,"error"],[809,24,781,18],[809,26,781,20],[810,12,782,6],[811,12,783,6],[811,16,783,10,"error"],[811,21,783,15],[811,25,783,19],[811,32,783,26,"error"],[811,37,783,31],[811,42,783,36],[811,50,783,44],[811,54,783,48],[811,63,783,57],[811,67,783,61,"error"],[811,72,783,66],[811,76,784,10],[811,83,784,17,"error"],[811,88,784,22],[811,89,784,23,"message"],[811,96,784,30],[811,101,784,35],[811,109,784,43],[811,113,785,10,"error"],[811,118,785,15],[811,119,785,16,"message"],[811,126,785,23],[811,127,785,24,"includes"],[811,135,785,32],[811,136,785,33],[811,149,785,46],[811,150,785,47],[811,152,785,49],[812,14,786,8,"EventLogger"],[812,38,786,19],[812,39,786,20,"warn"],[812,43,786,24],[812,44,786,25],[812,59,786,40],[812,61,786,42],[812,103,786,84],[812,105,786,86],[813,16,786,88,"error"],[813,21,786,93],[813,23,786,95,"error"],[813,28,786,100],[813,29,786,101,"message"],[814,14,786,109],[814,15,786,110],[814,16,786,111],[815,14,787,8],[815,20,787,14],[815,24,787,18],[815,25,787,19,"clearOversizedOfflineData"],[815,50,787,44],[815,51,787,45],[815,52,787,46],[816,14,788,8],[816,18,788,12],[816,19,788,13,"reportQueue"],[816,30,788,24],[816,33,788,27],[816,35,788,29],[817,12,789,6],[817,13,789,7],[817,19,789,13],[818,14,790,8,"EventLogger"],[818,38,790,19],[818,39,790,20,"error"],[818,44,790,25],[818,45,790,26],[818,60,790,41],[818,62,790,43],[818,94,790,75],[818,96,790,77,"error"],[818,101,790,91],[818,102,790,92],[819,12,791,6],[820,10,792,4],[821,8,793,2],[821,9,793,3],[822,8,793,3],[822,17,765,16,"loadOfflineReports"],[822,35,765,34,"loadOfflineReports"],[822,36,765,34],[823,10,765,34],[823,17,765,34,"_loadOfflineReports"],[823,36,765,34],[823,37,765,34,"apply"],[823,42,765,34],[823,49,765,34,"arguments"],[823,58,765,34],[824,8,765,34],[825,8,765,34],[825,15,765,16,"loadOfflineReports"],[825,33,765,34],[826,6,765,34],[827,6,795,2],[828,0,796,0],[829,0,797,0],[830,6,795,2],[831,4,795,2],[832,6,795,2,"key"],[832,9,795,2],[833,6,795,2,"value"],[833,11,795,2],[834,8,795,2],[834,12,795,2,"_clearOversizedOfflineData"],[834,38,795,2],[834,45,795,2,"_asyncToGenerator2"],[834,63,795,2],[834,64,795,2,"default"],[834,71,795,2],[834,73,798,2],[834,86,798,59],[835,10,799,4],[835,14,799,8],[836,12,800,6],[836,18,800,12,"AsyncStorage"],[836,39,800,24],[836,40,800,25,"removeItem"],[836,50,800,35],[836,51,800,36,"CrashReporterService"],[836,71,800,56],[836,72,800,57,"OFFLINE_REPORTS_KEY"],[836,91,800,76],[836,92,800,77],[837,12,801,6,"EventLogger"],[837,36,801,17],[837,37,801,18,"info"],[837,41,801,22],[837,42,801,23],[837,57,801,38],[837,59,801,40],[837,94,801,75],[837,95,801,76],[838,10,802,4],[838,11,802,5],[838,12,802,6],[838,19,802,13,"error"],[838,24,802,18],[838,26,802,20],[839,12,803,6,"EventLogger"],[839,36,803,17],[839,37,803,18,"error"],[839,42,803,23],[839,43,803,24],[839,58,803,39],[839,60,803,41],[839,90,803,71],[839,92,803,73,"error"],[839,97,803,87],[839,98,803,88],[840,10,804,4],[841,8,805,2],[841,9,805,3],[842,8,805,3],[842,17,798,16,"clearOversizedOfflineData"],[842,42,798,41,"clearOversizedOfflineData"],[842,43,798,41],[843,10,798,41],[843,17,798,41,"_clearOversizedOfflineData"],[843,43,798,41],[843,44,798,41,"apply"],[843,49,798,41],[843,56,798,41,"arguments"],[843,65,798,41],[844,8,798,41],[845,8,798,41],[845,15,798,16,"clearOversizedOfflineData"],[845,40,798,41],[846,6,798,41],[847,6,807,2],[848,0,808,0],[849,0,809,0],[850,6,807,2],[851,4,807,2],[852,6,807,2,"key"],[852,9,807,2],[853,6,807,2,"value"],[853,11,807,2],[854,8,807,2],[854,12,807,2,"_storeOfflineReports"],[854,32,807,2],[854,39,807,2,"_asyncToGenerator2"],[854,57,807,2],[854,58,807,2,"default"],[854,65,807,2],[854,67,810,2],[854,78,810,36,"reports"],[854,85,810,58],[854,87,810,75],[855,10,811,4],[855,14,811,8],[856,12,812,6],[856,16,812,12,"existingReports"],[856,31,812,27],[856,40,812,36,"AsyncStorage"],[856,61,812,48],[856,62,812,49,"getItem"],[856,69,812,56],[856,70,812,57,"CrashReporterService"],[856,90,812,77],[856,91,812,78,"OFFLINE_REPORTS_KEY"],[856,110,812,97],[856,111,812,98],[857,12,813,6],[857,16,813,12,"allReports"],[857,26,813,22],[857,29,813,25,"existingReports"],[857,44,813,40],[857,47,813,43,"JSON"],[857,51,813,47],[857,52,813,48,"parse"],[857,57,813,53],[857,58,813,54,"existingReports"],[857,73,813,69],[857,74,813,70],[857,77,813,73],[857,79,813,75],[858,12,815,6,"allReports"],[858,22,815,16],[858,23,815,17,"push"],[858,27,815,21],[858,28,815,21,"apply"],[858,33,815,21],[858,34,815,6,"allReports"],[858,44,815,16],[858,50,815,16,"_toConsumableArray2"],[858,69,815,16],[858,70,815,16,"default"],[858,77,815,16],[858,79,815,25,"reports"],[858,86,815,32],[858,88,815,33],[860,12,817,6],[861,12,818,6],[861,16,818,12,"maxOfflineReports"],[861,33,818,29],[861,36,818,32],[861,38,818,34],[862,12,819,6],[862,16,819,10,"allReports"],[862,26,819,20],[862,27,819,21,"length"],[862,33,819,27],[862,36,819,30,"maxOfflineReports"],[862,53,819,47],[862,55,819,49],[863,14,820,8,"allReports"],[863,24,820,18],[863,25,820,19,"splice"],[863,31,820,25],[863,32,820,26],[863,33,820,27],[863,35,820,29,"allReports"],[863,45,820,39],[863,46,820,40,"length"],[863,52,820,46],[863,55,820,49,"maxOfflineReports"],[863,72,820,66],[863,73,820,67],[864,14,821,8,"EventLogger"],[864,38,821,19],[864,39,821,20,"debug"],[864,44,821,25],[864,45,821,26],[864,60,821,41],[864,62,821,43],[864,92,821,73,"maxOfflineReports"],[864,109,821,90],[864,123,821,104],[864,124,821,105],[865,12,822,6],[867,12,824,6],[868,12,825,6],[868,16,825,12,"estimatedSize"],[868,29,825,25],[868,32,825,28,"JSON"],[868,36,825,32],[868,37,825,33,"stringify"],[868,46,825,42],[868,47,825,43,"allReports"],[868,57,825,53],[868,58,825,54],[868,59,825,55,"length"],[868,65,825,61],[869,12,826,6],[869,16,826,10,"estimatedSize"],[869,29,826,23],[869,32,826,26],[869,38,826,32],[869,40,826,34],[870,14,826,36],[871,14,827,8],[872,14,828,8,"allReports"],[872,24,828,18],[872,25,828,19,"splice"],[872,31,828,25],[872,32,828,26],[872,33,828,27],[872,35,828,29,"allReports"],[872,45,828,39],[872,46,828,40,"length"],[872,52,828,46],[872,55,828,49],[872,57,828,51],[872,58,828,52],[873,14,829,8,"EventLogger"],[873,38,829,19],[873,39,829,20,"warn"],[873,43,829,24],[873,44,829,25],[873,59,829,40],[873,61,829,42],[873,115,829,96],[873,116,829,97],[874,12,830,6],[875,12,832,6],[875,18,832,12,"AsyncStorage"],[875,39,832,24],[875,40,832,25,"setItem"],[875,47,832,32],[875,48,832,33,"CrashReporterService"],[875,68,832,53],[875,69,832,54,"OFFLINE_REPORTS_KEY"],[875,88,832,73],[875,90,832,75,"JSON"],[875,94,832,79],[875,95,832,80,"stringify"],[875,104,832,89],[875,105,832,90,"allReports"],[875,115,832,100],[875,116,832,101],[875,117,832,102],[876,12,834,6,"EventLogger"],[876,36,834,17],[876,37,834,18,"info"],[876,41,834,22],[876,42,834,23],[876,57,834,38],[876,59,834,40],[876,83,834,64],[876,85,834,66],[877,14,835,8,"newCount"],[877,22,835,16],[877,24,835,18,"reports"],[877,31,835,25],[877,32,835,26,"length"],[877,38,835,32],[878,14,836,8,"totalStored"],[878,25,836,19],[878,27,836,21,"allReports"],[878,37,836,31],[878,38,836,32,"length"],[879,12,837,6],[879,13,837,7],[879,14,837,8],[880,10,838,4],[880,11,838,5],[880,12,838,6],[880,19,838,13,"error"],[880,24,838,18],[880,26,838,20],[881,12,839,6,"EventLogger"],[881,36,839,17],[881,37,839,18,"error"],[881,42,839,23],[881,43,839,24],[881,58,839,39],[881,60,839,41],[881,93,839,74],[881,95,839,76,"error"],[881,100,839,90],[881,101,839,91],[882,10,840,4],[883,8,841,2],[883,9,841,3],[884,8,841,3],[884,17,810,16,"storeOfflineReports"],[884,36,810,35,"storeOfflineReports"],[884,37,810,35,"_x6"],[884,40,810,35],[885,10,810,35],[885,17,810,35,"_storeOfflineReports"],[885,37,810,35],[885,38,810,35,"apply"],[885,43,810,35],[885,50,810,35,"arguments"],[885,59,810,35],[886,8,810,35],[887,8,810,35],[887,15,810,16,"storeOfflineReports"],[887,34,810,35],[888,6,810,35],[889,6,843,2],[890,0,844,0],[891,0,845,0],[892,6,843,2],[893,4,843,2],[894,6,843,2,"key"],[894,9,843,2],[895,6,843,2,"value"],[895,11,843,2],[896,8,843,2],[896,12,843,2,"_syncOfflineReports"],[896,31,843,2],[896,38,843,2,"_asyncToGenerator2"],[896,56,843,2],[896,57,843,2,"default"],[896,64,843,2],[896,66,846,2],[896,79,846,52],[897,10,847,4],[897,14,847,8],[897,15,847,9],[897,19,847,13],[897,20,847,14,"databaseAvailable"],[897,37,847,31],[897,41,847,35],[897,42,847,36],[897,46,847,40],[897,47,847,41,"isInitialized"],[897,60,847,54],[897,62,847,56],[898,12,848,6,"EventLogger"],[898,36,848,17],[898,37,848,18,"debug"],[898,42,848,23],[898,43,848,24],[898,58,848,39],[898,60,848,41],[898,133,848,114],[898,134,848,115],[899,12,849,6],[900,10,850,4],[901,10,852,4],[901,14,852,8],[902,12,853,6],[903,12,854,6],[903,16,854,10],[903,20,854,14],[903,21,854,15,"reportQueue"],[903,32,854,26],[903,33,854,27,"length"],[903,39,854,33],[903,42,854,36],[903,43,854,37],[903,45,854,39],[904,14,855,8,"EventLogger"],[904,38,855,19],[904,39,855,20,"info"],[904,43,855,24],[904,44,855,25],[904,59,855,40],[904,61,855,42],[904,98,855,79],[904,100,855,81],[905,16,855,83,"count"],[905,21,855,88],[905,23,855,90],[905,27,855,94],[905,28,855,95,"reportQueue"],[905,39,855,106],[905,40,855,107,"length"],[906,14,855,114],[906,15,855,115],[906,16,855,116],[907,14,856,8],[907,20,856,14],[907,24,856,18],[907,25,856,19,"flushReports"],[907,37,856,31],[907,38,856,32],[907,39,856,33],[908,12,857,6],[909,12,859,6,"EventLogger"],[909,36,859,17],[909,37,859,18,"info"],[909,41,859,22],[909,42,859,23],[909,57,859,38],[909,59,859,40],[909,91,859,72],[909,92,859,73],[910,10,860,4],[910,11,860,5],[910,12,860,6],[910,19,860,13,"error"],[910,24,860,18],[910,26,860,20],[911,12,861,6,"EventLogger"],[911,36,861,17],[911,37,861,18,"error"],[911,42,861,23],[911,43,861,24],[911,58,861,39],[911,60,861,41],[911,92,861,73],[911,94,861,75,"error"],[911,99,861,89],[911,100,861,90],[912,10,862,4],[913,8,863,2],[913,9,863,3],[914,8,863,3],[914,17,846,16,"syncOfflineReports"],[914,35,846,34,"syncOfflineReports"],[914,36,846,34],[915,10,846,34],[915,17,846,34,"_syncOfflineReports"],[915,36,846,34],[915,37,846,34,"apply"],[915,42,846,34],[915,49,846,34,"arguments"],[915,58,846,34],[916,8,846,34],[917,8,846,34],[917,15,846,16,"syncOfflineReports"],[917,33,846,34],[918,6,846,34],[919,6,865,2],[920,0,866,0],[921,0,867,0],[922,6,865,2],[923,4,865,2],[924,6,865,2,"key"],[924,9,865,2],[925,6,865,2,"value"],[925,11,865,2],[926,8,865,2],[926,12,865,2,"_recheckDatabaseAvailability"],[926,40,865,2],[926,47,865,2,"_asyncToGenerator2"],[926,65,865,2],[926,66,865,2,"default"],[926,73,865,2],[926,75,868,2],[926,88,868,60],[927,10,869,4],[927,14,869,10,"wasAvailable"],[927,26,869,22],[927,29,869,25],[927,33,869,29],[927,34,869,30,"databaseAvailable"],[927,51,869,47],[928,10,871,4],[928,14,871,8],[929,12,872,6],[929,18,872,12],[929,22,872,16],[929,23,872,17,"checkDatabaseAvailability"],[929,48,872,42],[929,49,872,43],[929,50,872,44],[931,12,874,6],[932,12,875,6],[932,16,875,10],[932,17,875,11,"wasAvailable"],[932,29,875,23],[932,33,875,27],[932,37,875,31],[932,38,875,32,"databaseAvailable"],[932,55,875,49],[932,57,875,51],[933,14,876,8,"EventLogger"],[933,38,876,19],[933,39,876,20,"info"],[933,43,876,24],[933,44,876,25],[933,59,876,40],[933,61,876,42],[933,114,876,95],[933,115,876,96],[934,14,877,8],[934,18,877,12],[934,19,877,13,"databaseUnavailableLogged"],[934,44,877,38],[934,47,877,41],[934,52,877,46],[934,53,877,47],[934,54,877,48],[935,14,878,8],[935,20,878,14],[935,24,878,18],[935,25,878,19,"syncOfflineReports"],[935,43,878,37],[935,44,878,38],[935,45,878,39],[936,12,879,6],[937,10,880,4],[937,11,880,5],[937,12,880,6],[937,19,880,13,"error"],[937,24,880,18],[937,26,880,20],[938,12,881,6],[938,16,881,10],[938,17,881,11,"databaseAvailable"],[938,34,881,28],[938,37,881,31],[938,42,881,36],[939,12,882,6,"EventLogger"],[939,36,882,17],[939,37,882,18,"debug"],[939,42,882,23],[939,43,882,24],[939,58,882,39],[939,60,882,41],[939,90,882,71],[939,91,882,72],[940,10,883,4],[941,8,884,2],[941,9,884,3],[942,8,884,3],[942,17,868,15,"recheckDatabaseAvailability"],[942,44,868,42,"recheckDatabaseAvailability"],[942,45,868,42],[943,10,868,42],[943,17,868,42,"_recheckDatabaseAvailability"],[943,45,868,42],[943,46,868,42,"apply"],[943,51,868,42],[943,58,868,42,"arguments"],[943,67,868,42],[944,8,868,42],[945,8,868,42],[945,15,868,15,"recheckDatabaseAvailability"],[945,42,868,42],[946,6,868,42],[947,6,886,2],[948,0,887,0],[949,0,888,0],[950,6,886,2],[951,4,886,2],[952,6,886,2,"key"],[952,9,886,2],[953,6,886,2,"value"],[953,11,886,2],[953,13,889,2],[953,22,889,10,"shouldReportError"],[953,39,889,27,"shouldReportError"],[953,40,889,27],[953,42,889,39],[954,8,890,4],[954,12,890,8],[954,13,890,9],[954,17,890,13],[954,18,890,14,"config"],[954,24,890,20],[954,25,890,21,"enabled"],[954,32,890,28],[954,36,890,32],[954,37,890,33],[954,41,890,37],[954,42,890,38,"isInitialized"],[954,55,890,51],[954,57,890,53],[955,10,891,6],[955,17,891,13],[955,22,891,18],[956,8,892,4],[958,8,894,4],[959,8,895,4],[959,12,895,8,"__DEV__"],[959,19,895,15],[959,21,895,17],[960,10,896,6],[960,17,896,13],[960,21,896,17],[961,8,897,4],[963,8,899,4],[964,8,900,4],[964,15,900,11,"Math"],[964,19,900,15],[964,20,900,16,"random"],[964,26,900,22],[964,27,900,23],[964,28,900,24],[964,31,900,27],[964,35,900,31],[964,36,900,32,"config"],[964,42,900,38],[964,43,900,39,"sampleRate"],[964,53,900,49],[965,6,901,2],[967,6,903,2],[968,0,904,0],[969,0,905,0],[970,4,903,2],[971,6,903,2,"key"],[971,9,903,2],[972,6,903,2,"value"],[972,11,903,2],[972,13,906,2],[972,22,906,10,"generateSessionId"],[972,39,906,27,"generateSessionId"],[972,40,906,27],[972,42,906,38],[973,8,907,4],[973,15,907,11],[973,32,907,28,"Date"],[973,36,907,32],[973,37,907,33,"now"],[973,40,907,36],[973,41,907,37],[973,42,907,38],[973,46,907,42,"Math"],[973,50,907,46],[973,51,907,47,"random"],[973,57,907,53],[973,58,907,54],[973,59,907,55],[973,60,907,56,"toString"],[973,68,907,64],[973,69,907,65],[973,71,907,67],[973,72,907,68],[973,73,907,69,"substr"],[973,79,907,75],[973,80,907,76],[973,81,907,77],[973,83,907,79],[973,84,907,80],[973,85,907,81],[973,87,907,83],[974,6,908,2],[976,6,910,2],[977,0,911,0],[978,0,912,0],[979,4,910,2],[980,6,910,2,"key"],[980,9,910,2],[981,6,910,2,"value"],[981,11,910,2],[981,13,913,2],[981,22,913,10,"generateReportId"],[981,38,913,26,"generateReportId"],[981,39,913,26],[981,41,913,37],[982,8,914,4],[982,15,914,11],[982,31,914,27,"Date"],[982,35,914,31],[982,36,914,32,"now"],[982,39,914,35],[982,40,914,36],[982,41,914,37],[982,45,914,41,"Math"],[982,49,914,45],[982,50,914,46,"random"],[982,56,914,52],[982,57,914,53],[982,58,914,54],[982,59,914,55,"toString"],[982,67,914,63],[982,68,914,64],[982,70,914,66],[982,71,914,67],[982,72,914,68,"substr"],[982,78,914,74],[982,79,914,75],[982,80,914,76],[982,82,914,78],[982,83,914,79],[982,84,914,80],[982,86,914,82],[983,6,915,2],[985,6,917,2],[986,0,918,0],[987,0,919,0],[988,4,917,2],[989,6,917,2,"key"],[989,9,917,2],[990,6,917,2,"value"],[990,11,917,2],[991,8,917,2],[991,12,917,2,"_shutdown"],[991,21,917,2],[991,28,917,2,"_asyncToGenerator2"],[991,46,917,2],[991,47,917,2,"default"],[991,54,917,2],[991,56,920,2],[991,69,920,41],[992,10,921,4],[993,10,922,4],[993,14,922,8],[993,18,922,12],[993,19,922,13,"originalConsoleError"],[993,39,922,33],[993,41,922,35],[994,12,923,6,"console"],[994,19,923,13],[994,20,923,14,"error"],[994,25,923,19],[994,28,923,22],[994,32,923,26],[994,33,923,27,"originalConsoleError"],[994,53,923,47],[995,10,924,4],[996,10,925,4],[996,14,925,8],[996,18,925,12],[996,19,925,13,"originalConsoleWarn"],[996,38,925,32],[996,40,925,34],[997,12,926,6,"console"],[997,19,926,13],[997,20,926,14,"warn"],[997,24,926,18],[997,27,926,21],[997,31,926,25],[997,32,926,26,"originalConsoleWarn"],[997,51,926,45],[998,10,927,4],[1000,10,929,4],[1001,10,930,4],[1001,14,930,8],[1001,18,930,12],[1001,19,930,13,"reportQueue"],[1001,30,930,24],[1001,31,930,25,"length"],[1001,37,930,31],[1001,40,930,34],[1001,41,930,35],[1001,43,930,37],[1002,12,931,6],[1002,18,931,12],[1002,22,931,16],[1002,23,931,17,"flushReports"],[1002,35,931,29],[1002,36,931,30],[1002,37,931,31],[1003,10,932,4],[1004,10,934,4],[1004,14,934,8],[1004,15,934,9,"isInitialized"],[1004,28,934,22],[1004,31,934,25],[1004,36,934,30],[1005,10,935,4,"EventLogger"],[1005,34,935,15],[1005,35,935,16,"info"],[1005,39,935,20],[1005,40,935,21],[1005,55,935,36],[1005,57,935,38],[1005,83,935,64],[1005,84,935,65],[1006,8,936,2],[1006,9,936,3],[1007,8,936,3],[1007,17,920,15,"shutdown"],[1007,25,920,23,"shutdown"],[1007,26,920,23],[1008,10,920,23],[1008,17,920,23,"_shutdown"],[1008,26,920,23],[1008,27,920,23,"apply"],[1008,32,920,23],[1008,39,920,23,"arguments"],[1008,48,920,23],[1009,8,920,23],[1010,8,920,23],[1010,15,920,15,"shutdown"],[1010,23,920,23],[1011,6,920,23],[1012,4,920,23],[1013,2,920,23],[1013,7,939,0],[1014,2,90,45],[1015,2,92,2],[1016,2,79,6,"CrashReporterService"],[1016,22,79,26],[1016,23,93,26,"OFFLINE_REPORTS_KEY"],[1016,42,93,45],[1016,45,93,48],[1016,68,93,71],[1017,2,79,6,"CrashReporterService"],[1017,22,79,26],[1017,23,94,26,"SESSION_ID_KEY"],[1017,37,94,40],[1017,40,94,43],[1017,67,94,70],[1018,2,940,7],[1018,6,940,13,"CrashReporter"],[1018,19,940,26],[1018,22,940,26,"exports"],[1018,29,940,26],[1018,30,940,26,"CrashReporter"],[1018,43,940,26],[1018,46,940,29],[1018,50,940,33,"CrashReporterService"],[1018,70,940,53],[1018,71,940,54],[1018,72,940,55],[1020,2,942,0],[1021,2,943,7],[1021,6,943,13,"reportError"],[1021,17,943,24],[1021,20,943,24,"exports"],[1021,27,943,24],[1021,28,943,24,"reportError"],[1021,39,943,24],[1021,42,943,27],[1021,51,943,13,"reportError"],[1021,62,943,24,"reportError"],[1021,63,943,28,"error"],[1021,68,943,40],[1021,70,943,42,"context"],[1021,77,943,71],[1021,79,943,73,"severity"],[1021,87,943,107],[1021,89,943,112],[1022,4,944,2,"CrashReporter"],[1022,17,944,15],[1022,18,944,16,"reportError"],[1022,29,944,27],[1022,30,944,28,"error"],[1022,35,944,33],[1022,37,944,35,"context"],[1022,44,944,42],[1022,46,944,44,"severity"],[1022,54,944,52],[1022,55,944,53],[1023,2,945,0],[1023,3,945,1],[1024,2,947,7],[1024,6,947,13,"addBreadcrumb"],[1024,19,947,26],[1024,22,947,26,"exports"],[1024,29,947,26],[1024,30,947,26,"addBreadcrumb"],[1024,43,947,26],[1024,46,947,29],[1024,55,947,13,"addBreadcrumb"],[1024,68,947,26,"addBreadcrumb"],[1024,69,947,30,"breadcrumb"],[1024,79,947,71],[1024,81,947,76],[1025,4,948,2,"CrashReporter"],[1025,17,948,15],[1025,18,948,16,"addBreadcrumb"],[1025,31,948,29],[1025,32,948,30,"breadcrumb"],[1025,42,948,40],[1025,43,948,41],[1026,2,949,0],[1026,3,949,1],[1027,2,951,7],[1027,6,951,13,"trackUserAction"],[1027,21,951,28],[1027,24,951,28,"exports"],[1027,31,951,28],[1027,32,951,28,"trackUserAction"],[1027,47,951,28],[1027,50,951,31],[1027,59,951,13,"trackUserAction"],[1027,74,951,28,"trackUserAction"],[1027,75,951,32,"action"],[1027,81,951,69],[1027,83,951,74],[1028,4,952,2,"CrashReporter"],[1028,17,952,15],[1028,18,952,16,"trackUserAction"],[1028,33,952,31],[1028,34,952,32,"action"],[1028,40,952,38],[1028,41,952,39],[1029,2,953,0],[1029,3,953,1],[1030,2,955,7],[1030,6,955,13,"setCurrentScreen"],[1030,22,955,29],[1030,25,955,29,"exports"],[1030,32,955,29],[1030,33,955,29,"setCurrentScreen"],[1030,49,955,29],[1030,52,955,32],[1030,61,955,13,"setCurrentScreen"],[1030,77,955,29,"setCurrentScreen"],[1030,78,955,33,"screenName"],[1030,88,955,51],[1030,90,955,53,"params"],[1030,96,955,81],[1030,98,955,86],[1031,4,956,2,"CrashReporter"],[1031,17,956,15],[1031,18,956,16,"setCurrentScreen"],[1031,34,956,32],[1031,35,956,33,"screenName"],[1031,45,956,43],[1031,47,956,45,"params"],[1031,53,956,51],[1031,54,956,52],[1032,2,957,0],[1032,3,957,1],[1033,2,959,7],[1033,6,959,13,"addContext"],[1033,16,959,23],[1033,19,959,23,"exports"],[1033,26,959,23],[1033,27,959,23,"addContext"],[1033,37,959,23],[1033,40,959,26],[1033,49,959,13,"addContext"],[1033,59,959,23,"addContext"],[1033,60,959,27,"key"],[1033,63,959,38],[1033,65,959,40,"value"],[1033,70,959,50],[1033,72,959,55],[1034,4,960,2,"CrashReporter"],[1034,17,960,15],[1034,18,960,16,"addContext"],[1034,28,960,26],[1034,29,960,27,"key"],[1034,32,960,30],[1034,34,960,32,"value"],[1034,39,960,37],[1034,40,960,38],[1035,2,961,0],[1035,3,961,1],[1037,2,963,0],[1038,0,963,0],[1038,3]],"functionMap":{"names":["<global>","CrashReporterService","CrashReporterService#constructor","CrashReporterService#initialize","Promise.resolve.then$argument_0","checkDatabaseAvailability._catch$argument_0","loadOfflineReports._catch$argument_0","CrashReporterService#checkDatabaseAvailability","CrashReporterService#setUser","CrashReporterService#clearUser","CrashReporterService#addBreadcrumb","CrashReporterService#trackUserAction","CrashReporterService#reportError","CrashReporterService#reportNetworkError","CrashReporterService#reportFatalError","CrashReporterService#setCurrentScreen","CrashReporterService#addContext","CrashReporterService#createAndQueueReport","CrashReporterService#buildErrorContext","CrashReporterService#getPerformanceMetrics","CrashReporterService#generateFingerprint","CrashReporterService#setupGlobalErrorHandlers","ErrorUtils.setGlobalHandler$argument_0","global.onunhandledrejection","CrashReporterService#setupConsoleInterception","console.error","args.map$argument_0","console.warn","CrashReporterService#setupPeriodicFlush","setTimeout$argument_0","setInterval$argument_0","flushReports._catch$argument_0","CrashReporterService#flush","CrashReporterService#flushReports","CrashReporterService#sendReports","reports.map$argument_0","results.forEach$argument_0","errors.map$argument_0","CrashReporterService#loadOfflineReports","syncOfflineReports._catch$argument_0","CrashReporterService#clearOversizedOfflineData","CrashReporterService#storeOfflineReports","CrashReporterService#syncOfflineReports","CrashReporterService#recheckDatabaseAvailability","CrashReporterService#shouldReportError","CrashReporterService#generateSessionId","CrashReporterService#generateReportId","CrashReporterService#shutdown","reportError","addBreadcrumb","trackUserAction","setCurrentScreen","addContext"],"mappings":"AAA;AC8E;ECiB;GDa;EEK;mCCW;ODS;6CEG;OFM;sCGG;OHE;GFsB;EMK;GNgF;EOK;GPU;EQK;GRW;ESK;GTc;EUK;GVsB;EWK;GXc;EYK;GZqB;EaK;GbW;EcK;Gdc;EeK;GfK;EgBK;GhByC;EiBK;GjB0B;EkBK;GlBa;EmBK;GnBW;EoBK;kCCI;ODa;oCEM;OFc;GpBE;EuBK;oBCK;0BCG,kBD;KDI;mBGI;0BDG,kBC;KHI;GvBC;E2BK;eCE;kBCC;oCCG;WDE;ODE;KDC;G3BC;E+BK;G/BM;EgCK;GhCgD;EiCK;yDCU;KDuC;oBEG;KFI;2GGI,cH;2BGI,2DH;GjCI;EqCK;0CCW;WDE;GrCe;EuCK;GvCO;EwCK;GxC+B;EyCK;GzCiB;E0CK;G1CgB;E2CK;G3CY;E4CK;G5CE;E6CK;G7CE;E8CK;G9CgB;CDC;2BgDM;ChDE;6BiDE;CjDE;+BkDE;ClDE;gCmDE;CnDE;0BoDE;CpDE"}},"type":"js/module"}]}