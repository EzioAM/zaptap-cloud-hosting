{"dependencies":[{"name":"@react-navigation/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":196,"index":211}}],"key":"Wm75LgE4xYscVWo0KoLFlflJQCo=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":212},"end":{"line":4,"column":31,"index":243}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"./LinkingContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":244},"end":{"line":5,"column":53,"index":297}}],"key":"r/0Yvi+HouDAqn4vN4m4I6AMfEI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useLinkBuilder = useLinkBuilder;\n  var _core = require(_dependencyMap[0], \"@react-navigation/core\");\n  var React = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  var _LinkingContext = require(_dependencyMap[2], \"./LinkingContext.js\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  /**\n   * Helpers to build href or action based on the linking options.\n   *\n   * @returns `buildHref` to build an `href` for screen and `buildAction` to build an action from an `href`.\n   */\n  function useLinkBuilder() {\n    var _options$getPathFromS, _options$getStateFrom, _options$getActionFro;\n    var navigation = React.useContext(_core.NavigationHelpersContext);\n    var route = React.useContext(_core.NavigationRouteContext);\n    var _React$useContext = React.useContext(_LinkingContext.LinkingContext),\n      options = _React$useContext.options;\n    var focusedRouteState = (0, _core.useStateForPath)();\n    var getPathFromStateHelper = (_options$getPathFromS = options == null ? void 0 : options.getPathFromState) != null ? _options$getPathFromS : _core.getPathFromState;\n    var getStateFromPathHelper = (_options$getStateFrom = options == null ? void 0 : options.getStateFromPath) != null ? _options$getStateFrom : _core.getStateFromPath;\n    var getActionFromStateHelper = (_options$getActionFro = options == null ? void 0 : options.getActionFromState) != null ? _options$getActionFro : _core.getActionFromState;\n    var buildHref = React.useCallback(function (name, params) {\n      var _findFocusedRoute;\n      if ((options == null ? void 0 : options.enabled) === false) {\n        return undefined;\n      }\n\n      // Check that we're inside:\n      // - navigator's context\n      // - route context of the navigator (could be a screen, tab, etc.)\n      // - route matches the state for path (from the screen's context)\n      // This ensures that we're inside a screen\n      var isScreen = navigation && route != null && route.key && focusedRouteState ? route.key === ((_findFocusedRoute = (0, _core.findFocusedRoute)(focusedRouteState)) == null ? void 0 : _findFocusedRoute.key) && navigation.getState().routes.some(function (r) {\n        return r.key === route.key;\n      }) : false;\n      var stateForRoute = {\n        routes: [{\n          name: name,\n          params: params\n        }]\n      };\n      var _constructState = function constructState(state) {\n        if (state) {\n          var _route = state.routes[0];\n\n          // If we're inside a screen and at the innermost route\n          // We need to replace the state with the provided one\n          // This assumes that we're navigating to a sibling route\n          if (isScreen && !_route.state) {\n            return stateForRoute;\n          }\n\n          // Otherwise, dive into the nested state of the route\n          return {\n            routes: [Object.assign({}, _route, {\n              state: _constructState(_route.state)\n            })]\n          };\n        }\n\n        // Once there is no more nested state, we're at the innermost route\n        // We can add a state based on provided parameters\n        // This assumes that we're navigating to a child of this route\n        // In this case, the helper is used in a navigator for its routes\n        return stateForRoute;\n      };\n      var state = _constructState(focusedRouteState);\n      var path = getPathFromStateHelper(state, options == null ? void 0 : options.config);\n      return path;\n    }, [options == null ? void 0 : options.enabled, options == null ? void 0 : options.config, route == null ? void 0 : route.key, navigation, focusedRouteState, getPathFromStateHelper]);\n    var buildAction = React.useCallback(function (href) {\n      if (!href.startsWith('/')) {\n        throw new Error(`The href must start with '/' (${href}).`);\n      }\n      var state = getStateFromPathHelper(href, options == null ? void 0 : options.config);\n      if (state) {\n        var action = getActionFromStateHelper(state, options == null ? void 0 : options.config);\n        return action != null ? action : _core.CommonActions.reset(state);\n      } else {\n        throw new Error('Failed to parse the href to a navigation state.');\n      }\n    }, [options == null ? void 0 : options.config, getStateFromPathHelper, getActionFromStateHelper]);\n    return {\n      buildHref: buildHref,\n      buildAction: buildAction\n    };\n  }\n});","lineCount":93,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"useLinkBuilder"],[7,24,1,13],[7,27,1,13,"useLinkBuilder"],[7,41,1,13],[8,2,3,0],[8,6,3,0,"_core"],[8,11,3,0],[8,14,3,0,"require"],[8,21,3,0],[8,22,3,0,"_dependencyMap"],[8,36,3,0],[9,2,4,0],[9,6,4,0,"React"],[9,11,4,0],[9,14,4,0,"_interopRequireWildcard"],[9,37,4,0],[9,38,4,0,"require"],[9,45,4,0],[9,46,4,0,"_dependencyMap"],[9,60,4,0],[10,2,5,0],[10,6,5,0,"_LinkingContext"],[10,21,5,0],[10,24,5,0,"require"],[10,31,5,0],[10,32,5,0,"_dependencyMap"],[10,46,5,0],[11,2,5,53],[11,11,5,53,"_interopRequireWildcard"],[11,35,5,53,"e"],[11,36,5,53],[11,38,5,53,"t"],[11,39,5,53],[11,68,5,53,"WeakMap"],[11,75,5,53],[11,81,5,53,"r"],[11,82,5,53],[11,89,5,53,"WeakMap"],[11,96,5,53],[11,100,5,53,"n"],[11,101,5,53],[11,108,5,53,"WeakMap"],[11,115,5,53],[11,127,5,53,"_interopRequireWildcard"],[11,150,5,53],[11,162,5,53,"_interopRequireWildcard"],[11,186,5,53,"e"],[11,187,5,53],[11,189,5,53,"t"],[11,190,5,53],[11,199,5,53,"t"],[11,200,5,53],[11,204,5,53,"e"],[11,205,5,53],[11,209,5,53,"e"],[11,210,5,53],[11,211,5,53,"__esModule"],[11,221,5,53],[11,230,5,53,"e"],[11,231,5,53],[11,237,5,53,"o"],[11,238,5,53],[11,240,5,53,"i"],[11,241,5,53],[11,243,5,53,"f"],[11,244,5,53],[11,249,5,53,"__proto__"],[11,258,5,53],[11,266,5,53,"default"],[11,273,5,53],[11,275,5,53,"e"],[11,276,5,53],[11,293,5,53,"e"],[11,294,5,53],[11,317,5,53,"e"],[11,318,5,53],[11,343,5,53,"e"],[11,344,5,53],[11,353,5,53,"f"],[11,354,5,53],[11,360,5,53,"o"],[11,361,5,53],[11,364,5,53,"t"],[11,365,5,53],[11,368,5,53,"n"],[11,369,5,53],[11,372,5,53,"r"],[11,373,5,53],[11,381,5,53,"o"],[11,382,5,53],[11,383,5,53,"has"],[11,386,5,53],[11,387,5,53,"e"],[11,388,5,53],[11,398,5,53,"o"],[11,399,5,53],[11,400,5,53,"get"],[11,403,5,53],[11,404,5,53,"e"],[11,405,5,53],[11,408,5,53,"o"],[11,409,5,53],[11,410,5,53,"set"],[11,413,5,53],[11,414,5,53,"e"],[11,415,5,53],[11,417,5,53,"f"],[11,418,5,53],[11,432,5,53,"_t"],[11,434,5,53],[11,438,5,53,"e"],[11,439,5,53],[11,455,5,53,"_t"],[11,457,5,53],[11,464,5,53,"hasOwnProperty"],[11,478,5,53],[11,479,5,53,"call"],[11,483,5,53],[11,484,5,53,"e"],[11,485,5,53],[11,487,5,53,"_t"],[11,489,5,53],[11,496,5,53,"i"],[11,497,5,53],[11,501,5,53,"o"],[11,502,5,53],[11,505,5,53,"Object"],[11,511,5,53],[11,512,5,53,"defineProperty"],[11,526,5,53],[11,531,5,53,"Object"],[11,537,5,53],[11,538,5,53,"getOwnPropertyDescriptor"],[11,562,5,53],[11,563,5,53,"e"],[11,564,5,53],[11,566,5,53,"_t"],[11,568,5,53],[11,575,5,53,"i"],[11,576,5,53],[11,577,5,53,"get"],[11,580,5,53],[11,584,5,53,"i"],[11,585,5,53],[11,586,5,53,"set"],[11,589,5,53],[11,593,5,53,"o"],[11,594,5,53],[11,595,5,53,"f"],[11,596,5,53],[11,598,5,53,"_t"],[11,600,5,53],[11,602,5,53,"i"],[11,603,5,53],[11,607,5,53,"f"],[11,608,5,53],[11,609,5,53,"_t"],[11,611,5,53],[11,615,5,53,"e"],[11,616,5,53],[11,617,5,53,"_t"],[11,619,5,53],[11,630,5,53,"f"],[11,631,5,53],[11,636,5,53,"e"],[11,637,5,53],[11,639,5,53,"t"],[11,640,5,53],[12,2,6,0],[13,0,7,0],[14,0,8,0],[15,0,9,0],[16,0,10,0],[17,2,11,7],[17,11,11,16,"useLinkBuilder"],[17,25,11,30,"useLinkBuilder"],[17,26,11,30],[17,28,11,33],[18,4,11,33],[18,8,11,33,"_options$getPathFromS"],[18,29,11,33],[18,31,11,33,"_options$getStateFrom"],[18,52,11,33],[18,54,11,33,"_options$getActionFro"],[18,75,11,33],[19,4,12,2],[19,8,12,8,"navigation"],[19,18,12,18],[19,21,12,21,"React"],[19,26,12,26],[19,27,12,27,"useContext"],[19,37,12,37],[19,38,12,38,"NavigationHelpersContext"],[19,68,12,62],[19,69,12,63],[20,4,13,2],[20,8,13,8,"route"],[20,13,13,13],[20,16,13,16,"React"],[20,21,13,21],[20,22,13,22,"useContext"],[20,32,13,32],[20,33,13,33,"NavigationRouteContext"],[20,61,13,55],[20,62,13,56],[21,4,14,2],[21,8,14,2,"_React$useContext"],[21,25,14,2],[21,28,16,6,"React"],[21,33,16,11],[21,34,16,12,"useContext"],[21,44,16,22],[21,45,16,23,"LinkingContext"],[21,75,16,37],[21,76,16,38],[22,6,15,4,"options"],[22,13,15,11],[22,16,15,11,"_React$useContext"],[22,33,15,11],[22,34,15,4,"options"],[22,41,15,11],[23,4,17,2],[23,8,17,8,"focusedRouteState"],[23,25,17,25],[23,28,17,28],[23,32,17,28,"useStateForPath"],[23,53,17,43],[23,55,17,44],[23,56,17,45],[24,4,18,2],[24,8,18,8,"getPathFromStateHelper"],[24,30,18,30],[24,34,18,30,"_options$getPathFromS"],[24,55,18,30],[24,58,18,33,"options"],[24,65,18,40],[24,85,18,33,"options"],[24,92,18,40],[24,93,18,42,"getPathFromState"],[24,109,18,58],[24,121,18,58,"_options$getPathFromS"],[24,142,18,58],[24,145,18,62,"getPathFromState"],[24,167,18,78],[25,4,19,2],[25,8,19,8,"getStateFromPathHelper"],[25,30,19,30],[25,34,19,30,"_options$getStateFrom"],[25,55,19,30],[25,58,19,33,"options"],[25,65,19,40],[25,85,19,33,"options"],[25,92,19,40],[25,93,19,42,"getStateFromPath"],[25,109,19,58],[25,121,19,58,"_options$getStateFrom"],[25,142,19,58],[25,145,19,62,"getStateFromPath"],[25,167,19,78],[26,4,20,2],[26,8,20,8,"getActionFromStateHelper"],[26,32,20,32],[26,36,20,32,"_options$getActionFro"],[26,57,20,32],[26,60,20,35,"options"],[26,67,20,42],[26,87,20,35,"options"],[26,94,20,42],[26,95,20,44,"getActionFromState"],[26,113,20,62],[26,125,20,62,"_options$getActionFro"],[26,146,20,62],[26,149,20,66,"getActionFromState"],[26,173,20,84],[27,4,21,2],[27,8,21,8,"buildHref"],[27,17,21,17],[27,20,21,20,"React"],[27,25,21,25],[27,26,21,26,"useCallback"],[27,37,21,37],[27,38,21,38],[27,48,21,39,"name"],[27,52,21,43],[27,54,21,45,"params"],[27,60,21,51],[27,62,21,56],[28,6,21,56],[28,10,21,56,"_findFocusedRoute"],[28,27,21,56],[29,6,22,4],[29,10,22,8],[29,11,22,8,"options"],[29,18,22,15],[29,38,22,8,"options"],[29,45,22,15],[29,46,22,17,"enabled"],[29,53,22,24],[29,59,22,29],[29,64,22,34],[29,66,22,36],[30,8,23,6],[30,15,23,13,"undefined"],[30,24,23,22],[31,6,24,4],[33,6,26,4],[34,6,27,4],[35,6,28,4],[36,6,29,4],[37,6,30,4],[38,6,31,4],[38,10,31,10,"isScreen"],[38,18,31,18],[38,21,31,21,"navigation"],[38,31,31,31],[38,35,31,35,"route"],[38,40,31,40],[38,52,31,35,"route"],[38,57,31,40],[38,58,31,42,"key"],[38,61,31,45],[38,65,31,49,"focusedRouteState"],[38,82,31,66],[38,85,31,69,"route"],[38,90,31,74],[38,91,31,75,"key"],[38,94,31,78],[38,101,31,78,"_findFocusedRoute"],[38,118,31,78],[38,121,31,83],[38,125,31,83,"findFocusedRoute"],[38,147,31,99],[38,149,31,100,"focusedRouteState"],[38,166,31,117],[38,167,31,118],[38,188,31,83,"_findFocusedRoute"],[38,205,31,83],[38,206,31,120,"key"],[38,209,31,123],[38,214,31,127,"navigation"],[38,224,31,137],[38,225,31,138,"getState"],[38,233,31,146],[38,234,31,147],[38,235,31,148],[38,236,31,149,"routes"],[38,242,31,155],[38,243,31,156,"some"],[38,247,31,160],[38,248,31,161],[38,258,31,161,"r"],[38,259,31,162],[39,8,31,162],[39,15,31,166,"r"],[39,16,31,167],[39,17,31,168,"key"],[39,20,31,171],[39,25,31,176,"route"],[39,30,31,181],[39,31,31,182,"key"],[39,34,31,185],[40,6,31,185],[40,8,31,186],[40,11,31,189],[40,16,31,194],[41,6,32,4],[41,10,32,10,"stateForRoute"],[41,23,32,23],[41,26,32,26],[42,8,33,6,"routes"],[42,14,33,12],[42,16,33,14],[42,17,33,15],[43,10,34,8,"name"],[43,14,34,12],[43,16,34,8,"name"],[43,20,34,12],[44,10,35,8,"params"],[44,16,35,14],[44,18,35,8,"params"],[45,8,36,6],[45,9,36,7],[46,6,37,4],[46,7,37,5],[47,6,38,4],[47,10,38,10,"constructState"],[47,25,38,24],[47,28,38,27],[47,37,38,10,"constructState"],[47,51,38,24,"constructState"],[47,52,38,27,"state"],[47,57,38,32],[47,59,38,36],[48,8,39,6],[48,12,39,10,"state"],[48,17,39,15],[48,19,39,17],[49,10,40,8],[49,14,40,14,"route"],[49,20,40,19],[49,23,40,22,"state"],[49,28,40,27],[49,29,40,28,"routes"],[49,35,40,34],[49,36,40,35],[49,37,40,36],[49,38,40,37],[51,10,42,8],[52,10,43,8],[53,10,44,8],[54,10,45,8],[54,14,45,12,"isScreen"],[54,22,45,20],[54,26,45,24],[54,27,45,25,"route"],[54,33,45,30],[54,34,45,31,"state"],[54,39,45,36],[54,41,45,38],[55,12,46,10],[55,19,46,17,"stateForRoute"],[55,32,46,30],[56,10,47,8],[58,10,49,8],[59,10,50,8],[59,17,50,15],[60,12,51,10,"routes"],[60,18,51,16],[60,20,51,18],[60,21,51,18,"Object"],[60,27,51,18],[60,28,51,18,"assign"],[60,34,51,18],[60,39,52,15,"route"],[60,45,52,20],[61,14,53,12,"state"],[61,19,53,17],[61,21,53,19,"constructState"],[61,36,53,33],[61,37,53,34,"route"],[61,43,53,39],[61,44,53,40,"state"],[61,49,53,45],[62,12,53,46],[63,10,55,8],[63,11,55,9],[64,8,56,6],[66,8,58,6],[67,8,59,6],[68,8,60,6],[69,8,61,6],[70,8,62,6],[70,15,62,13,"stateForRoute"],[70,28,62,26],[71,6,63,4],[71,7,63,5],[72,6,64,4],[72,10,64,10,"state"],[72,15,64,15],[72,18,64,18,"constructState"],[72,33,64,32],[72,34,64,33,"focusedRouteState"],[72,51,64,50],[72,52,64,51],[73,6,65,4],[73,10,65,10,"path"],[73,14,65,14],[73,17,65,17,"getPathFromStateHelper"],[73,39,65,39],[73,40,65,40,"state"],[73,45,65,45],[73,47,65,47,"options"],[73,54,65,54],[73,74,65,47,"options"],[73,81,65,54],[73,82,65,56,"config"],[73,88,65,62],[73,89,65,63],[74,6,66,4],[74,13,66,11,"path"],[74,17,66,15],[75,4,67,2],[75,5,67,3],[75,7,67,5],[75,8,67,6,"options"],[75,15,67,13],[75,35,67,6,"options"],[75,42,67,13],[75,43,67,15,"enabled"],[75,50,67,22],[75,52,67,24,"options"],[75,59,67,31],[75,79,67,24,"options"],[75,86,67,31],[75,87,67,33,"config"],[75,93,67,39],[75,95,67,41,"route"],[75,100,67,46],[75,120,67,41,"route"],[75,125,67,46],[75,126,67,48,"key"],[75,129,67,51],[75,131,67,53,"navigation"],[75,141,67,63],[75,143,67,65,"focusedRouteState"],[75,160,67,82],[75,162,67,84,"getPathFromStateHelper"],[75,184,67,106],[75,185,67,107],[75,186,67,108],[76,4,68,2],[76,8,68,8,"buildAction"],[76,19,68,19],[76,22,68,22,"React"],[76,27,68,27],[76,28,68,28,"useCallback"],[76,39,68,39],[76,40,68,40],[76,50,68,40,"href"],[76,54,68,44],[76,56,68,48],[77,6,69,4],[77,10,69,8],[77,11,69,9,"href"],[77,15,69,13],[77,16,69,14,"startsWith"],[77,26,69,24],[77,27,69,25],[77,30,69,28],[77,31,69,29],[77,33,69,31],[78,8,70,6],[78,14,70,12],[78,18,70,16,"Error"],[78,23,70,21],[78,24,70,22],[78,57,70,55,"href"],[78,61,70,59],[78,65,70,63],[78,66,70,64],[79,6,71,4],[80,6,72,4],[80,10,72,10,"state"],[80,15,72,15],[80,18,72,18,"getStateFromPathHelper"],[80,40,72,40],[80,41,72,41,"href"],[80,45,72,45],[80,47,72,47,"options"],[80,54,72,54],[80,74,72,47,"options"],[80,81,72,54],[80,82,72,56,"config"],[80,88,72,62],[80,89,72,63],[81,6,73,4],[81,10,73,8,"state"],[81,15,73,13],[81,17,73,15],[82,8,74,6],[82,12,74,12,"action"],[82,18,74,18],[82,21,74,21,"getActionFromStateHelper"],[82,45,74,45],[82,46,74,46,"state"],[82,51,74,51],[82,53,74,53,"options"],[82,60,74,60],[82,80,74,53,"options"],[82,87,74,60],[82,88,74,62,"config"],[82,94,74,68],[82,95,74,69],[83,8,75,6],[83,15,75,13,"action"],[83,21,75,19],[83,32,75,13,"action"],[83,38,75,19],[83,41,75,23,"CommonActions"],[83,60,75,36],[83,61,75,37,"reset"],[83,66,75,42],[83,67,75,43,"state"],[83,72,75,48],[83,73,75,49],[84,6,76,4],[84,7,76,5],[84,13,76,11],[85,8,77,6],[85,14,77,12],[85,18,77,16,"Error"],[85,23,77,21],[85,24,77,22],[85,73,77,71],[85,74,77,72],[86,6,78,4],[87,4,79,2],[87,5,79,3],[87,7,79,5],[87,8,79,6,"options"],[87,15,79,13],[87,35,79,6,"options"],[87,42,79,13],[87,43,79,15,"config"],[87,49,79,21],[87,51,79,23,"getStateFromPathHelper"],[87,73,79,45],[87,75,79,47,"getActionFromStateHelper"],[87,99,79,71],[87,100,79,72],[87,101,79,73],[88,4,80,2],[88,11,80,9],[89,6,81,4,"buildHref"],[89,15,81,13],[89,17,81,4,"buildHref"],[89,26,81,13],[90,6,82,4,"buildAction"],[90,17,82,15],[90,19,82,4,"buildAction"],[91,4,83,2],[91,5,83,3],[92,2,84,0],[93,0,84,1],[93,3]],"functionMap":{"names":["<global>","useLinkBuilder","buildHref","navigation.getState.routes.some$argument_0","constructState","buildAction"],"mappings":"AAA;OCU;sCCU;iKCU,wBD;2BEO;KFyB;GDI;wCIC;GJW;CDK"}},"type":"js/module"}]}