{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"expo-location","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":42,"index":42}}],"key":"GNP7AGCKsBRUhlnTZ4lIPpbkT9E=","exportNames":["*"]}},{"name":"expo-task-manager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":43},"end":{"line":2,"column":49,"index":92}}],"key":"bYMruywqSxptqIFJf3NLT25O6Io=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":93},"end":{"line":3,"column":37,"index":130}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"../../utils/Logger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":131},"end":{"line":4,"column":44,"index":175}}],"key":"i7w7ocd4fb1/Be+UUL1Uz1hIdRI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.locationTriggerService = exports.LocationTriggerService = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var Location = _interopRequireWildcard(require(_dependencyMap[4], \"expo-location\"));\n  var TaskManager = _interopRequireWildcard(require(_dependencyMap[5], \"expo-task-manager\"));\n  var _reactNative = require(_dependencyMap[6], \"react-native\");\n  var _Logger = require(_dependencyMap[7], \"../../utils/Logger\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  // Dynamic import to prevent circular dependency\n  // import { AutomationEngine } from '../automation/AutomationEngine';\n\n  var LOCATION_TASK_NAME = 'background-location-task';\n  var GEOFENCING_TASK_NAME = 'geofencing-task';\n  var LocationTriggerService = exports.LocationTriggerService = /*#__PURE__*/function () {\n    function LocationTriggerService() {\n      (0, _classCallCheck2.default)(this, LocationTriggerService);\n      this.activeRegions = new Map();\n      this.isMonitoring = false;\n      this.logger = new _Logger.Logger('LocationTriggerService');\n      this.setupTaskManager();\n    }\n    return (0, _createClass2.default)(LocationTriggerService, [{\n      key: \"setupTaskManager\",\n      value: function setupTaskManager() {\n        var _this = this;\n        // Define the background location task\n        TaskManager.defineTask(LOCATION_TASK_NAME, /*#__PURE__*/function () {\n          var _ref2 = (0, _asyncToGenerator2.default)(function* (_ref) {\n            var data = _ref.data,\n              error = _ref.error;\n            if (error) {\n              _this.logger.error('Background location task error', {\n                error: error.message\n              });\n              return;\n            }\n            if (data) {\n              var locations = data.locations;\n              _this.processLocationUpdate(locations[0]);\n            }\n          });\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n\n        // Define the geofencing task\n        TaskManager.defineTask(GEOFENCING_TASK_NAME, /*#__PURE__*/function () {\n          var _ref4 = (0, _asyncToGenerator2.default)(function* (_ref3) {\n            var data = _ref3.data,\n              error = _ref3.error;\n            if (error) {\n              _this.logger.error('Geofencing task error', {\n                error: error.message\n              });\n              return;\n            }\n            if (data) {\n              var eventType = data.eventType,\n                region = data.region;\n              yield _this.processGeofenceEvent(eventType, region);\n            }\n          });\n          return function (_x2) {\n            return _ref4.apply(this, arguments);\n          };\n        }());\n      }\n    }, {\n      key: \"requestPermissions\",\n      value: function () {\n        var _requestPermissions = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            // Request foreground location permission\n            var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n              foregroundStatus = _yield$Location$reque.status;\n            if (foregroundStatus !== 'granted') {\n              _reactNative.Alert.alert('Location Permission Required', 'Location-based automations require location access to work properly.');\n              return false;\n            }\n\n            // Request background location permission\n            var _yield$Location$reque2 = yield Location.requestBackgroundPermissionsAsync(),\n              backgroundStatus = _yield$Location$reque2.status;\n            if (backgroundStatus !== 'granted') {\n              _reactNative.Alert.alert('Background Location Required', 'To trigger automations when you arrive or leave locations, background location access is required.');\n              return false;\n            }\n            return true;\n          } catch (error) {\n            this.logger.error('Permission request failed', {\n              error: error.message\n            });\n            return false;\n          }\n        });\n        function requestPermissions() {\n          return _requestPermissions.apply(this, arguments);\n        }\n        return requestPermissions;\n      }()\n    }, {\n      key: \"addLocationTrigger\",\n      value: function () {\n        var _addLocationTrigger = (0, _asyncToGenerator2.default)(function* (automation, trigger) {\n          try {\n            var hasPermissions = yield this.requestPermissions();\n            if (!hasPermissions) {\n              return false;\n            }\n            var config = trigger.config;\n            var region = {\n              identifier: `${automation.id}_${trigger.id}`,\n              latitude: config.latitude,\n              longitude: config.longitude,\n              radius: config.radius,\n              automationId: automation.id,\n              triggerId: trigger.id,\n              triggerType: trigger.type\n            };\n\n            // Start geofencing for this region\n            yield Location.startGeofencingAsync(GEOFENCING_TASK_NAME, [{\n              identifier: region.identifier,\n              latitude: region.latitude,\n              longitude: region.longitude,\n              radius: region.radius,\n              notifyOnEnter: trigger.type === 'location_enter',\n              notifyOnExit: trigger.type === 'location_exit'\n            }]);\n            this.activeRegions.set(region.identifier, region);\n            this.logger.info('Location trigger added', {\n              automationId: automation.id,\n              triggerId: trigger.id,\n              location: config.name\n            });\n            if (!this.isMonitoring) {\n              yield this.startLocationMonitoring();\n            }\n            return true;\n          } catch (error) {\n            this.logger.error('Failed to add location trigger', {\n              error: error.message\n            });\n            _reactNative.Alert.alert('Error', `Failed to add location trigger: ${error.message}`);\n            return false;\n          }\n        });\n        function addLocationTrigger(_x3, _x4) {\n          return _addLocationTrigger.apply(this, arguments);\n        }\n        return addLocationTrigger;\n      }()\n    }, {\n      key: \"removeLocationTrigger\",\n      value: function () {\n        var _removeLocationTrigger = (0, _asyncToGenerator2.default)(function* (automationId, triggerId) {\n          try {\n            var identifier = `${automationId}_${triggerId}`;\n            if (this.activeRegions.has(identifier)) {\n              yield Location.stopGeofencingAsync(GEOFENCING_TASK_NAME);\n\n              // Remove this region and restart geofencing with remaining regions\n              this.activeRegions.delete(identifier);\n              if (this.activeRegions.size > 0) {\n                var remainingRegions = Array.from(this.activeRegions.values()).map(function (region) {\n                  return {\n                    identifier: region.identifier,\n                    latitude: region.latitude,\n                    longitude: region.longitude,\n                    radius: region.radius,\n                    notifyOnEnter: region.triggerType === 'location_enter',\n                    notifyOnExit: region.triggerType === 'location_exit'\n                  };\n                });\n                yield Location.startGeofencingAsync(GEOFENCING_TASK_NAME, remainingRegions);\n              } else {\n                yield this.stopLocationMonitoring();\n              }\n              this.logger.info('Location trigger removed', {\n                automationId: automationId,\n                triggerId: triggerId\n              });\n            }\n          } catch (error) {\n            this.logger.error('Failed to remove location trigger', {\n              error: error.message\n            });\n          }\n        });\n        function removeLocationTrigger(_x5, _x6) {\n          return _removeLocationTrigger.apply(this, arguments);\n        }\n        return removeLocationTrigger;\n      }()\n    }, {\n      key: \"startLocationMonitoring\",\n      value: function () {\n        var _startLocationMonitoring = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            yield Location.startLocationUpdatesAsync(LOCATION_TASK_NAME, {\n              accuracy: Location.Accuracy.Balanced,\n              timeInterval: 30000,\n              // 30 seconds\n              distanceInterval: 100,\n              // 100 meters\n              deferredUpdatesInterval: 60000,\n              // 1 minute\n              showsBackgroundLocationIndicator: true,\n              foregroundService: {\n                notificationTitle: 'Zaptap',\n                notificationBody: 'Location-based automations are active'\n              }\n            });\n            this.isMonitoring = true;\n            this.logger.info('Location monitoring started');\n          } catch (error) {\n            this.logger.error('Failed to start location monitoring', {\n              error: error.message\n            });\n          }\n        });\n        function startLocationMonitoring() {\n          return _startLocationMonitoring.apply(this, arguments);\n        }\n        return startLocationMonitoring;\n      }()\n    }, {\n      key: \"stopLocationMonitoring\",\n      value: function () {\n        var _stopLocationMonitoring = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            yield Location.stopLocationUpdatesAsync(LOCATION_TASK_NAME);\n            yield Location.stopGeofencingAsync(GEOFENCING_TASK_NAME);\n            this.isMonitoring = false;\n            this.logger.info('Location monitoring stopped');\n          } catch (error) {\n            this.logger.error('Failed to stop location monitoring', {\n              error: error.message\n            });\n          }\n        });\n        function stopLocationMonitoring() {\n          return _stopLocationMonitoring.apply(this, arguments);\n        }\n        return stopLocationMonitoring;\n      }()\n    }, {\n      key: \"processLocationUpdate\",\n      value: function processLocationUpdate(location) {\n        this.logger.debug('Location update received', {\n          latitude: location.coords.latitude,\n          longitude: location.coords.longitude,\n          accuracy: location.coords.accuracy\n        });\n\n        // Manual geofence checking as fallback\n        for (var region of this.activeRegions.values()) {\n          var distance = this.calculateDistance(location.coords.latitude, location.coords.longitude, region.latitude, region.longitude);\n          if (distance <= region.radius) {\n            this.logger.info('Manual geofence triggered', {\n              regionId: region.identifier,\n              distance: distance,\n              radius: region.radius\n            });\n            // This could trigger enter events for manual checking\n          }\n        }\n      }\n    }, {\n      key: \"processGeofenceEvent\",\n      value: function () {\n        var _processGeofenceEvent = (0, _asyncToGenerator2.default)(function* (eventType, region) {\n          try {\n            var regionData = this.activeRegions.get(region.identifier);\n            if (!regionData) {\n              this.logger.warn('Unknown geofence region', {\n                identifier: region.identifier\n              });\n              return;\n            }\n            this.logger.info('Geofence event triggered', {\n              eventType: eventType,\n              regionId: region.identifier,\n              automationId: regionData.automationId\n            });\n\n            // Check if this is the right event type for this trigger\n            var shouldTrigger = eventType === 'enter' && regionData.triggerType === 'location_enter' || eventType === 'exit' && regionData.triggerType === 'location_exit';\n            if (shouldTrigger) {\n              yield this.executeTriggeredAutomation(regionData);\n            }\n          } catch (error) {\n            this.logger.error('Failed to process geofence event', {\n              error: error.message\n            });\n          }\n        });\n        function processGeofenceEvent(_x7, _x8) {\n          return _processGeofenceEvent.apply(this, arguments);\n        }\n        return processGeofenceEvent;\n      }()\n    }, {\n      key: \"executeTriggeredAutomation\",\n      value: function () {\n        var _executeTriggeredAutomation = (0, _asyncToGenerator2.default)(function* (region) {\n          try {\n            // In a real implementation, you would fetch the automation from storage\n            // For now, we'll show a notification that the trigger fired\n            _reactNative.Alert.alert('Location Trigger Activated! 🎯', `Automation triggered at location. Region: ${region.identifier}`, [{\n              text: 'OK'\n            }]);\n            this.logger.info('Location-triggered automation executed', {\n              automationId: region.automationId,\n              triggerId: region.triggerId,\n              triggerType: region.triggerType\n            });\n          } catch (error) {\n            this.logger.error('Failed to execute triggered automation', {\n              error: error.message\n            });\n          }\n        });\n        function executeTriggeredAutomation(_x9) {\n          return _executeTriggeredAutomation.apply(this, arguments);\n        }\n        return executeTriggeredAutomation;\n      }()\n    }, {\n      key: \"calculateDistance\",\n      value: function calculateDistance(lat1, lon1, lat2, lon2) {\n        var R = 6371000; // Earth's radius in meters\n        var dLat = this.toRadians(lat2 - lat1);\n        var dLon = this.toRadians(lon2 - lon1);\n        var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(this.toRadians(lat1)) * Math.cos(this.toRadians(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        return R * c;\n      }\n    }, {\n      key: \"toRadians\",\n      value: function toRadians(degrees) {\n        return degrees * (Math.PI / 180);\n      }\n    }, {\n      key: \"getCurrentLocation\",\n      value: function () {\n        var _getCurrentLocation = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var hasPermissions = yield this.requestPermissions();\n            if (!hasPermissions) {\n              return null;\n            }\n            var location = yield Location.getCurrentPositionAsync({\n              accuracy: Location.Accuracy.High\n            });\n            return location;\n          } catch (error) {\n            this.logger.error('Failed to get current location', {\n              error: error.message\n            });\n            return null;\n          }\n        });\n        function getCurrentLocation() {\n          return _getCurrentLocation.apply(this, arguments);\n        }\n        return getCurrentLocation;\n      }()\n    }, {\n      key: \"getActiveRegions\",\n      value: function getActiveRegions() {\n        return Array.from(this.activeRegions.values());\n      }\n    }, {\n      key: \"isLocationServicesEnabled\",\n      value: function () {\n        var _isLocationServicesEnabled = (0, _asyncToGenerator2.default)(function* () {\n          return yield Location.hasServicesEnabledAsync();\n        });\n        function isLocationServicesEnabled() {\n          return _isLocationServicesEnabled.apply(this, arguments);\n        }\n        return isLocationServicesEnabled;\n      }()\n    }, {\n      key: \"stopAllLocationTriggers\",\n      value: function () {\n        var _stopAllLocationTriggers = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            yield this.stopLocationMonitoring();\n            this.activeRegions.clear();\n            this.logger.info('All location triggers stopped');\n          } catch (error) {\n            this.logger.error('Failed to stop all location triggers', {\n              error: error.message\n            });\n          }\n        });\n        function stopAllLocationTriggers() {\n          return _stopAllLocationTriggers.apply(this, arguments);\n        }\n        return stopAllLocationTriggers;\n      }()\n    }]);\n  }();\n  var locationTriggerService = exports.locationTriggerService = new LocationTriggerService();\n});","lineCount":414,"map":[[10,2,1,0],[10,6,1,0,"Location"],[10,14,1,0],[10,17,1,0,"_interopRequireWildcard"],[10,40,1,0],[10,41,1,0,"require"],[10,48,1,0],[10,49,1,0,"_dependencyMap"],[10,63,1,0],[11,2,2,0],[11,6,2,0,"TaskManager"],[11,17,2,0],[11,20,2,0,"_interopRequireWildcard"],[11,43,2,0],[11,44,2,0,"require"],[11,51,2,0],[11,52,2,0,"_dependencyMap"],[11,66,2,0],[12,2,3,0],[12,6,3,0,"_reactNative"],[12,18,3,0],[12,21,3,0,"require"],[12,28,3,0],[12,29,3,0,"_dependencyMap"],[12,43,3,0],[13,2,4,0],[13,6,4,0,"_Logger"],[13,13,4,0],[13,16,4,0,"require"],[13,23,4,0],[13,24,4,0,"_dependencyMap"],[13,38,4,0],[14,2,4,44],[14,11,4,44,"_interopRequireWildcard"],[14,35,4,44,"e"],[14,36,4,44],[14,38,4,44,"t"],[14,39,4,44],[14,68,4,44,"WeakMap"],[14,75,4,44],[14,81,4,44,"r"],[14,82,4,44],[14,89,4,44,"WeakMap"],[14,96,4,44],[14,100,4,44,"n"],[14,101,4,44],[14,108,4,44,"WeakMap"],[14,115,4,44],[14,127,4,44,"_interopRequireWildcard"],[14,150,4,44],[14,162,4,44,"_interopRequireWildcard"],[14,186,4,44,"e"],[14,187,4,44],[14,189,4,44,"t"],[14,190,4,44],[14,199,4,44,"t"],[14,200,4,44],[14,204,4,44,"e"],[14,205,4,44],[14,209,4,44,"e"],[14,210,4,44],[14,211,4,44,"__esModule"],[14,221,4,44],[14,230,4,44,"e"],[14,231,4,44],[14,237,4,44,"o"],[14,238,4,44],[14,240,4,44,"i"],[14,241,4,44],[14,243,4,44,"f"],[14,244,4,44],[14,249,4,44,"__proto__"],[14,258,4,44],[14,266,4,44,"default"],[14,273,4,44],[14,275,4,44,"e"],[14,276,4,44],[14,293,4,44,"e"],[14,294,4,44],[14,317,4,44,"e"],[14,318,4,44],[14,343,4,44,"e"],[14,344,4,44],[14,353,4,44,"f"],[14,354,4,44],[14,360,4,44,"o"],[14,361,4,44],[14,364,4,44,"t"],[14,365,4,44],[14,368,4,44,"n"],[14,369,4,44],[14,372,4,44,"r"],[14,373,4,44],[14,381,4,44,"o"],[14,382,4,44],[14,383,4,44,"has"],[14,386,4,44],[14,387,4,44,"e"],[14,388,4,44],[14,398,4,44,"o"],[14,399,4,44],[14,400,4,44,"get"],[14,403,4,44],[14,404,4,44,"e"],[14,405,4,44],[14,408,4,44,"o"],[14,409,4,44],[14,410,4,44,"set"],[14,413,4,44],[14,414,4,44,"e"],[14,415,4,44],[14,417,4,44,"f"],[14,418,4,44],[14,432,4,44,"_t"],[14,434,4,44],[14,438,4,44,"e"],[14,439,4,44],[14,455,4,44,"_t"],[14,457,4,44],[14,464,4,44,"hasOwnProperty"],[14,478,4,44],[14,479,4,44,"call"],[14,483,4,44],[14,484,4,44,"e"],[14,485,4,44],[14,487,4,44,"_t"],[14,489,4,44],[14,496,4,44,"i"],[14,497,4,44],[14,501,4,44,"o"],[14,502,4,44],[14,505,4,44,"Object"],[14,511,4,44],[14,512,4,44,"defineProperty"],[14,526,4,44],[14,531,4,44,"Object"],[14,537,4,44],[14,538,4,44,"getOwnPropertyDescriptor"],[14,562,4,44],[14,563,4,44,"e"],[14,564,4,44],[14,566,4,44,"_t"],[14,568,4,44],[14,575,4,44,"i"],[14,576,4,44],[14,577,4,44,"get"],[14,580,4,44],[14,584,4,44,"i"],[14,585,4,44],[14,586,4,44,"set"],[14,589,4,44],[14,593,4,44,"o"],[14,594,4,44],[14,595,4,44,"f"],[14,596,4,44],[14,598,4,44,"_t"],[14,600,4,44],[14,602,4,44,"i"],[14,603,4,44],[14,607,4,44,"f"],[14,608,4,44],[14,609,4,44,"_t"],[14,611,4,44],[14,615,4,44,"e"],[14,616,4,44],[14,617,4,44,"_t"],[14,619,4,44],[14,630,4,44,"f"],[14,631,4,44],[14,636,4,44,"e"],[14,637,4,44],[14,639,4,44,"t"],[14,640,4,44],[15,2,6,0],[16,2,7,0],[18,2,9,0],[18,6,9,6,"LOCATION_TASK_NAME"],[18,24,9,24],[18,27,9,27],[18,53,9,53],[19,2,10,0],[19,6,10,6,"GEOFENCING_TASK_NAME"],[19,26,10,26],[19,29,10,29],[19,46,10,46],[20,2,10,47],[20,6,22,13,"LocationTriggerService"],[20,28,22,35],[20,31,22,35,"exports"],[20,38,22,35],[20,39,22,35,"LocationTriggerService"],[20,61,22,35],[21,4,27,2],[21,13,27,2,"LocationTriggerService"],[21,36,27,2],[21,38,27,16],[22,6,27,16],[22,10,27,16,"_classCallCheck2"],[22,26,27,16],[22,27,27,16,"default"],[22,34,27,16],[22,42,27,16,"LocationTriggerService"],[22,64,27,16],[23,6,27,16],[23,11,24,10,"activeRegions"],[23,24,24,23],[23,27,24,55],[23,31,24,59,"Map"],[23,34,24,62],[23,35,24,63],[23,36,24,64],[24,6,24,64],[24,11,25,10,"isMonitoring"],[24,23,25,22],[24,26,25,34],[24,31,25,39],[25,6,28,4],[25,10,28,8],[25,11,28,9,"logger"],[25,17,28,15],[25,20,28,18],[25,24,28,22,"Logger"],[25,38,28,28],[25,39,28,29],[25,63,28,53],[25,64,28,54],[26,6,29,4],[26,10,29,8],[26,11,29,9,"setupTaskManager"],[26,27,29,25],[26,28,29,26],[26,29,29,27],[27,4,30,2],[28,4,30,3],[28,15,30,3,"_createClass2"],[28,28,30,3],[28,29,30,3,"default"],[28,36,30,3],[28,38,30,3,"LocationTriggerService"],[28,60,30,3],[29,6,30,3,"key"],[29,9,30,3],[30,6,30,3,"value"],[30,11,30,3],[30,13,32,2],[30,22,32,10,"setupTaskManager"],[30,38,32,26,"setupTaskManager"],[30,39,32,26],[30,41,32,29],[31,8,32,29],[31,12,32,29,"_this"],[31,17,32,29],[32,8,33,4],[33,8,34,4,"TaskManager"],[33,19,34,15],[33,20,34,16,"defineTask"],[33,30,34,26],[33,31,34,27,"LOCATION_TASK_NAME"],[33,49,34,45],[34,10,34,45],[34,14,34,45,"_ref2"],[34,19,34,45],[34,26,34,45,"_asyncToGenerator2"],[34,44,34,45],[34,45,34,45,"default"],[34,52,34,45],[34,54,34,47],[34,65,34,47,"_ref"],[34,69,34,47],[34,71,34,79],[35,12,34,79],[35,16,34,56,"data"],[35,20,34,60],[35,23,34,60,"_ref"],[35,27,34,60],[35,28,34,56,"data"],[35,32,34,60],[36,14,34,62,"error"],[36,19,34,67],[36,22,34,67,"_ref"],[36,26,34,67],[36,27,34,62,"error"],[36,32,34,67],[37,12,35,6],[37,16,35,10,"error"],[37,21,35,15],[37,23,35,17],[38,14,36,8,"_this"],[38,19,36,12],[38,20,36,13,"logger"],[38,26,36,19],[38,27,36,20,"error"],[38,32,36,25],[38,33,36,26],[38,65,36,58],[38,67,36,60],[39,16,36,62,"error"],[39,21,36,67],[39,23,36,69,"error"],[39,28,36,74],[39,29,36,75,"message"],[40,14,36,83],[40,15,36,84],[40,16,36,85],[41,14,37,8],[42,12,38,6],[43,12,40,6],[43,16,40,10,"data"],[43,20,40,14],[43,22,40,16],[44,14,41,8],[44,18,41,16,"locations"],[44,27,41,25],[44,30,41,30,"data"],[44,34,41,34],[44,35,41,16,"locations"],[44,44,41,25],[45,14,42,8,"_this"],[45,19,42,12],[45,20,42,13,"processLocationUpdate"],[45,41,42,34],[45,42,42,35,"locations"],[45,51,42,44],[45,52,42,45],[45,53,42,46],[45,54,42,47],[45,55,42,48],[46,12,43,6],[47,10,44,4],[47,11,44,5],[48,10,44,5],[48,27,44,5,"_x"],[48,29,44,5],[49,12,44,5],[49,19,44,5,"_ref2"],[49,24,44,5],[49,25,44,5,"apply"],[49,30,44,5],[49,37,44,5,"arguments"],[49,46,44,5],[50,10,44,5],[51,8,44,5],[51,12,44,6],[53,8,46,4],[54,8,47,4,"TaskManager"],[54,19,47,15],[54,20,47,16,"defineTask"],[54,30,47,26],[54,31,47,27,"GEOFENCING_TASK_NAME"],[54,51,47,47],[55,10,47,47],[55,14,47,47,"_ref4"],[55,19,47,47],[55,26,47,47,"_asyncToGenerator2"],[55,44,47,47],[55,45,47,47,"default"],[55,52,47,47],[55,54,47,49],[55,65,47,49,"_ref3"],[55,70,47,49],[55,72,47,81],[56,12,47,81],[56,16,47,58,"data"],[56,20,47,62],[56,23,47,62,"_ref3"],[56,28,47,62],[56,29,47,58,"data"],[56,33,47,62],[57,14,47,64,"error"],[57,19,47,69],[57,22,47,69,"_ref3"],[57,27,47,69],[57,28,47,64,"error"],[57,33,47,69],[58,12,48,6],[58,16,48,10,"error"],[58,21,48,15],[58,23,48,17],[59,14,49,8,"_this"],[59,19,49,12],[59,20,49,13,"logger"],[59,26,49,19],[59,27,49,20,"error"],[59,32,49,25],[59,33,49,26],[59,56,49,49],[59,58,49,51],[60,16,49,53,"error"],[60,21,49,58],[60,23,49,60,"error"],[60,28,49,65],[60,29,49,66,"message"],[61,14,49,74],[61,15,49,75],[61,16,49,76],[62,14,50,8],[63,12,51,6],[64,12,53,6],[64,16,53,10,"data"],[64,20,53,14],[64,22,53,16],[65,14,54,8],[65,18,54,16,"eventType"],[65,27,54,25],[65,30,54,38,"data"],[65,34,54,42],[65,35,54,16,"eventType"],[65,44,54,25],[66,16,54,27,"region"],[66,22,54,33],[66,25,54,38,"data"],[66,29,54,42],[66,30,54,27,"region"],[66,36,54,33],[67,14,55,8],[67,20,55,14,"_this"],[67,25,55,18],[67,26,55,19,"processGeofenceEvent"],[67,46,55,39],[67,47,55,40,"eventType"],[67,56,55,49],[67,58,55,51,"region"],[67,64,55,57],[67,65,55,58],[68,12,56,6],[69,10,57,4],[69,11,57,5],[70,10,57,5],[70,27,57,5,"_x2"],[70,30,57,5],[71,12,57,5],[71,19,57,5,"_ref4"],[71,24,57,5],[71,25,57,5,"apply"],[71,30,57,5],[71,37,57,5,"arguments"],[71,46,57,5],[72,10,57,5],[73,8,57,5],[73,12,57,6],[74,6,58,2],[75,4,58,3],[76,6,58,3,"key"],[76,9,58,3],[77,6,58,3,"value"],[77,11,58,3],[78,8,58,3],[78,12,58,3,"_requestPermissions"],[78,31,58,3],[78,38,58,3,"_asyncToGenerator2"],[78,56,58,3],[78,57,58,3,"default"],[78,64,58,3],[78,66,60,2],[78,79,60,47],[79,10,61,4],[79,14,61,8],[80,12,62,6],[81,12,63,6],[81,16,63,6,"_yield$Location$reque"],[81,37,63,6],[81,46,63,49,"Location"],[81,54,63,57],[81,55,63,58,"requestForegroundPermissionsAsync"],[81,88,63,91],[81,89,63,92],[81,90,63,93],[82,14,63,22,"foregroundStatus"],[82,30,63,38],[82,33,63,38,"_yield$Location$reque"],[82,54,63,38],[82,55,63,14,"status"],[82,61,63,20],[83,12,64,6],[83,16,64,10,"foregroundStatus"],[83,32,64,26],[83,37,64,31],[83,46,64,40],[83,48,64,42],[84,14,65,8,"Alert"],[84,32,65,13],[84,33,65,14,"alert"],[84,38,65,19],[84,39,66,10],[84,69,66,40],[84,71,67,10],[84,141,68,8],[84,142,68,9],[85,14,69,8],[85,21,69,15],[85,26,69,20],[86,12,70,6],[88,12,72,6],[89,12,73,6],[89,16,73,6,"_yield$Location$reque2"],[89,38,73,6],[89,47,73,49,"Location"],[89,55,73,57],[89,56,73,58,"requestBackgroundPermissionsAsync"],[89,89,73,91],[89,90,73,92],[89,91,73,93],[90,14,73,22,"backgroundStatus"],[90,30,73,38],[90,33,73,38,"_yield$Location$reque2"],[90,55,73,38],[90,56,73,14,"status"],[90,62,73,20],[91,12,74,6],[91,16,74,10,"backgroundStatus"],[91,32,74,26],[91,37,74,31],[91,46,74,40],[91,48,74,42],[92,14,75,8,"Alert"],[92,32,75,13],[92,33,75,14,"alert"],[92,38,75,19],[92,39,76,10],[92,69,76,40],[92,71,77,10],[92,171,78,8],[92,172,78,9],[93,14,79,8],[93,21,79,15],[93,26,79,20],[94,12,80,6],[95,12,82,6],[95,19,82,13],[95,23,82,17],[96,10,83,4],[96,11,83,5],[96,12,83,6],[96,19,83,13,"error"],[96,24,83,23],[96,26,83,25],[97,12,84,6],[97,16,84,10],[97,17,84,11,"logger"],[97,23,84,17],[97,24,84,18,"error"],[97,29,84,23],[97,30,84,24],[97,57,84,51],[97,59,84,53],[98,14,84,55,"error"],[98,19,84,60],[98,21,84,62,"error"],[98,26,84,67],[98,27,84,68,"message"],[99,12,84,76],[99,13,84,77],[99,14,84,78],[100,12,85,6],[100,19,85,13],[100,24,85,18],[101,10,86,4],[102,8,87,2],[102,9,87,3],[103,8,87,3],[103,17,60,8,"requestPermissions"],[103,35,60,26,"requestPermissions"],[103,36,60,26],[104,10,60,26],[104,17,60,26,"_requestPermissions"],[104,36,60,26],[104,37,60,26,"apply"],[104,42,60,26],[104,49,60,26,"arguments"],[104,58,60,26],[105,8,60,26],[106,8,60,26],[106,15,60,8,"requestPermissions"],[106,33,60,26],[107,6,60,26],[108,4,60,26],[109,6,60,26,"key"],[109,9,60,26],[110,6,60,26,"value"],[110,11,60,26],[111,8,60,26],[111,12,60,26,"_addLocationTrigger"],[111,31,60,26],[111,38,60,26,"_asyncToGenerator2"],[111,56,60,26],[111,57,60,26,"default"],[111,64,60,26],[111,66,89,2],[111,77,90,4,"automation"],[111,87,90,30],[111,89,91,4,"trigger"],[111,96,91,30],[111,98,92,22],[112,10,93,4],[112,14,93,8],[113,12,94,6],[113,16,94,12,"hasPermissions"],[113,30,94,26],[113,39,94,35],[113,43,94,39],[113,44,94,40,"requestPermissions"],[113,62,94,58],[113,63,94,59],[113,64,94,60],[114,12,95,6],[114,16,95,10],[114,17,95,11,"hasPermissions"],[114,31,95,25],[114,33,95,27],[115,14,96,8],[115,21,96,15],[115,26,96,20],[116,12,97,6],[117,12,99,6],[117,16,99,12,"config"],[117,22,99,18],[117,25,99,21,"trigger"],[117,32,99,28],[117,33,99,29,"config"],[117,39,99,60],[118,12,100,6],[118,16,100,12,"region"],[118,22,100,34],[118,25,100,37],[119,14,101,8,"identifier"],[119,24,101,18],[119,26,101,20],[119,29,101,23,"automation"],[119,39,101,33],[119,40,101,34,"id"],[119,42,101,36],[119,46,101,40,"trigger"],[119,53,101,47],[119,54,101,48,"id"],[119,56,101,50],[119,58,101,52],[120,14,102,8,"latitude"],[120,22,102,16],[120,24,102,18,"config"],[120,30,102,24],[120,31,102,25,"latitude"],[120,39,102,33],[121,14,103,8,"longitude"],[121,23,103,17],[121,25,103,19,"config"],[121,31,103,25],[121,32,103,26,"longitude"],[121,41,103,35],[122,14,104,8,"radius"],[122,20,104,14],[122,22,104,16,"config"],[122,28,104,22],[122,29,104,23,"radius"],[122,35,104,29],[123,14,105,8,"automationId"],[123,26,105,20],[123,28,105,22,"automation"],[123,38,105,32],[123,39,105,33,"id"],[123,41,105,35],[124,14,106,8,"triggerId"],[124,23,106,17],[124,25,106,19,"trigger"],[124,32,106,26],[124,33,106,27,"id"],[124,35,106,29],[125,14,107,8,"triggerType"],[125,25,107,19],[125,27,107,21,"trigger"],[125,34,107,28],[125,35,107,29,"type"],[126,12,108,6],[126,13,108,7],[128,12,110,6],[129,12,111,6],[129,18,111,12,"Location"],[129,26,111,20],[129,27,111,21,"startGeofencingAsync"],[129,47,111,41],[129,48,111,42,"GEOFENCING_TASK_NAME"],[129,68,111,62],[129,70,111,64],[129,71,112,8],[130,14,113,10,"identifier"],[130,24,113,20],[130,26,113,22,"region"],[130,32,113,28],[130,33,113,29,"identifier"],[130,43,113,39],[131,14,114,10,"latitude"],[131,22,114,18],[131,24,114,20,"region"],[131,30,114,26],[131,31,114,27,"latitude"],[131,39,114,35],[132,14,115,10,"longitude"],[132,23,115,19],[132,25,115,21,"region"],[132,31,115,27],[132,32,115,28,"longitude"],[132,41,115,37],[133,14,116,10,"radius"],[133,20,116,16],[133,22,116,18,"region"],[133,28,116,24],[133,29,116,25,"radius"],[133,35,116,31],[134,14,117,10,"notifyOnEnter"],[134,27,117,23],[134,29,117,25,"trigger"],[134,36,117,32],[134,37,117,33,"type"],[134,41,117,37],[134,46,117,42],[134,62,117,58],[135,14,118,10,"notifyOnExit"],[135,26,118,22],[135,28,118,24,"trigger"],[135,35,118,31],[135,36,118,32,"type"],[135,40,118,36],[135,45,118,41],[136,12,119,8],[136,13,119,9],[136,14,120,7],[136,15,120,8],[137,12,122,6],[137,16,122,10],[137,17,122,11,"activeRegions"],[137,30,122,24],[137,31,122,25,"set"],[137,34,122,28],[137,35,122,29,"region"],[137,41,122,35],[137,42,122,36,"identifier"],[137,52,122,46],[137,54,122,48,"region"],[137,60,122,54],[137,61,122,55],[138,12,123,6],[138,16,123,10],[138,17,123,11,"logger"],[138,23,123,17],[138,24,123,18,"info"],[138,28,123,22],[138,29,123,23],[138,53,123,47],[138,55,123,49],[139,14,124,8,"automationId"],[139,26,124,20],[139,28,124,22,"automation"],[139,38,124,32],[139,39,124,33,"id"],[139,41,124,35],[140,14,125,8,"triggerId"],[140,23,125,17],[140,25,125,19,"trigger"],[140,32,125,26],[140,33,125,27,"id"],[140,35,125,29],[141,14,126,8,"location"],[141,22,126,16],[141,24,126,18,"config"],[141,30,126,24],[141,31,126,25,"name"],[142,12,127,6],[142,13,127,7],[142,14,127,8],[143,12,129,6],[143,16,129,10],[143,17,129,11],[143,21,129,15],[143,22,129,16,"isMonitoring"],[143,34,129,28],[143,36,129,30],[144,14,130,8],[144,20,130,14],[144,24,130,18],[144,25,130,19,"startLocationMonitoring"],[144,48,130,42],[144,49,130,43],[144,50,130,44],[145,12,131,6],[146,12,133,6],[146,19,133,13],[146,23,133,17],[147,10,134,4],[147,11,134,5],[147,12,134,6],[147,19,134,13,"error"],[147,24,134,23],[147,26,134,25],[148,12,135,6],[148,16,135,10],[148,17,135,11,"logger"],[148,23,135,17],[148,24,135,18,"error"],[148,29,135,23],[148,30,135,24],[148,62,135,56],[148,64,135,58],[149,14,135,60,"error"],[149,19,135,65],[149,21,135,67,"error"],[149,26,135,72],[149,27,135,73,"message"],[150,12,135,81],[150,13,135,82],[150,14,135,83],[151,12,136,6,"Alert"],[151,30,136,11],[151,31,136,12,"alert"],[151,36,136,17],[151,37,136,18],[151,44,136,25],[151,46,136,27],[151,81,136,62,"error"],[151,86,136,67],[151,87,136,68,"message"],[151,94,136,75],[151,96,136,77],[151,97,136,78],[152,12,137,6],[152,19,137,13],[152,24,137,18],[153,10,138,4],[154,8,139,2],[154,9,139,3],[155,8,139,3],[155,17,89,8,"addLocationTrigger"],[155,35,89,26,"addLocationTrigger"],[155,36,89,26,"_x3"],[155,39,89,26],[155,41,89,26,"_x4"],[155,44,89,26],[156,10,89,26],[156,17,89,26,"_addLocationTrigger"],[156,36,89,26],[156,37,89,26,"apply"],[156,42,89,26],[156,49,89,26,"arguments"],[156,58,89,26],[157,8,89,26],[158,8,89,26],[158,15,89,8,"addLocationTrigger"],[158,33,89,26],[159,6,89,26],[160,4,89,26],[161,6,89,26,"key"],[161,9,89,26],[162,6,89,26,"value"],[162,11,89,26],[163,8,89,26],[163,12,89,26,"_removeLocationTrigger"],[163,34,89,26],[163,41,89,26,"_asyncToGenerator2"],[163,59,89,26],[163,60,89,26,"default"],[163,67,89,26],[163,69,141,2],[163,80,141,30,"automationId"],[163,92,141,50],[163,94,141,52,"triggerId"],[163,103,141,69],[163,105,141,86],[164,10,142,4],[164,14,142,8],[165,12,143,6],[165,16,143,12,"identifier"],[165,26,143,22],[165,29,143,25],[165,32,143,28,"automationId"],[165,44,143,40],[165,48,143,44,"triggerId"],[165,57,143,53],[165,59,143,55],[166,12,145,6],[166,16,145,10],[166,20,145,14],[166,21,145,15,"activeRegions"],[166,34,145,28],[166,35,145,29,"has"],[166,38,145,32],[166,39,145,33,"identifier"],[166,49,145,43],[166,50,145,44],[166,52,145,46],[167,14,146,8],[167,20,146,14,"Location"],[167,28,146,22],[167,29,146,23,"stopGeofencingAsync"],[167,48,146,42],[167,49,146,43,"GEOFENCING_TASK_NAME"],[167,69,146,63],[167,70,146,64],[169,14,148,8],[170,14,149,8],[170,18,149,12],[170,19,149,13,"activeRegions"],[170,32,149,26],[170,33,149,27,"delete"],[170,39,149,33],[170,40,149,34,"identifier"],[170,50,149,44],[170,51,149,45],[171,14,151,8],[171,18,151,12],[171,22,151,16],[171,23,151,17,"activeRegions"],[171,36,151,30],[171,37,151,31,"size"],[171,41,151,35],[171,44,151,38],[171,45,151,39],[171,47,151,41],[172,16,152,10],[172,20,152,16,"remainingRegions"],[172,36,152,32],[172,39,152,35,"Array"],[172,44,152,40],[172,45,152,41,"from"],[172,49,152,45],[172,50,152,46],[172,54,152,50],[172,55,152,51,"activeRegions"],[172,68,152,64],[172,69,152,65,"values"],[172,75,152,71],[172,76,152,72],[172,77,152,73],[172,78,152,74],[172,79,152,75,"map"],[172,82,152,78],[172,83,152,79],[172,93,152,79,"region"],[172,99,152,85],[173,18,152,85],[173,25,152,90],[174,20,153,12,"identifier"],[174,30,153,22],[174,32,153,24,"region"],[174,38,153,30],[174,39,153,31,"identifier"],[174,49,153,41],[175,20,154,12,"latitude"],[175,28,154,20],[175,30,154,22,"region"],[175,36,154,28],[175,37,154,29,"latitude"],[175,45,154,37],[176,20,155,12,"longitude"],[176,29,155,21],[176,31,155,23,"region"],[176,37,155,29],[176,38,155,30,"longitude"],[176,47,155,39],[177,20,156,12,"radius"],[177,26,156,18],[177,28,156,20,"region"],[177,34,156,26],[177,35,156,27,"radius"],[177,41,156,33],[178,20,157,12,"notifyOnEnter"],[178,33,157,25],[178,35,157,27,"region"],[178,41,157,33],[178,42,157,34,"triggerType"],[178,53,157,45],[178,58,157,50],[178,74,157,66],[179,20,158,12,"notifyOnExit"],[179,32,158,24],[179,34,158,26,"region"],[179,40,158,32],[179,41,158,33,"triggerType"],[179,52,158,44],[179,57,158,49],[180,18,159,10],[180,19,159,11],[181,16,159,11],[181,17,159,12],[181,18,159,13],[182,16,161,10],[182,22,161,16,"Location"],[182,30,161,24],[182,31,161,25,"startGeofencingAsync"],[182,51,161,45],[182,52,161,46,"GEOFENCING_TASK_NAME"],[182,72,161,66],[182,74,161,68,"remainingRegions"],[182,90,161,84],[182,91,161,85],[183,14,162,8],[183,15,162,9],[183,21,162,15],[184,16,163,10],[184,22,163,16],[184,26,163,20],[184,27,163,21,"stopLocationMonitoring"],[184,49,163,43],[184,50,163,44],[184,51,163,45],[185,14,164,8],[186,14,166,8],[186,18,166,12],[186,19,166,13,"logger"],[186,25,166,19],[186,26,166,20,"info"],[186,30,166,24],[186,31,166,25],[186,57,166,51],[186,59,166,53],[187,16,166,55,"automationId"],[187,28,166,67],[187,30,166,55,"automationId"],[187,42,166,67],[188,16,166,69,"triggerId"],[188,25,166,78],[188,27,166,69,"triggerId"],[189,14,166,79],[189,15,166,80],[189,16,166,81],[190,12,167,6],[191,10,168,4],[191,11,168,5],[191,12,168,6],[191,19,168,13,"error"],[191,24,168,23],[191,26,168,25],[192,12,169,6],[192,16,169,10],[192,17,169,11,"logger"],[192,23,169,17],[192,24,169,18,"error"],[192,29,169,23],[192,30,169,24],[192,65,169,59],[192,67,169,61],[193,14,169,63,"error"],[193,19,169,68],[193,21,169,70,"error"],[193,26,169,75],[193,27,169,76,"message"],[194,12,169,84],[194,13,169,85],[194,14,169,86],[195,10,170,4],[196,8,171,2],[196,9,171,3],[197,8,171,3],[197,17,141,8,"removeLocationTrigger"],[197,38,141,29,"removeLocationTrigger"],[197,39,141,29,"_x5"],[197,42,141,29],[197,44,141,29,"_x6"],[197,47,141,29],[198,10,141,29],[198,17,141,29,"_removeLocationTrigger"],[198,39,141,29],[198,40,141,29,"apply"],[198,45,141,29],[198,52,141,29,"arguments"],[198,61,141,29],[199,8,141,29],[200,8,141,29],[200,15,141,8,"removeLocationTrigger"],[200,36,141,29],[201,6,141,29],[202,4,141,29],[203,6,141,29,"key"],[203,9,141,29],[204,6,141,29,"value"],[204,11,141,29],[205,8,141,29],[205,12,141,29,"_startLocationMonitoring"],[205,36,141,29],[205,43,141,29,"_asyncToGenerator2"],[205,61,141,29],[205,62,141,29,"default"],[205,69,141,29],[205,71,173,2],[205,84,173,57],[206,10,174,4],[206,14,174,8],[207,12,175,6],[207,18,175,12,"Location"],[207,26,175,20],[207,27,175,21,"startLocationUpdatesAsync"],[207,52,175,46],[207,53,175,47,"LOCATION_TASK_NAME"],[207,71,175,65],[207,73,175,67],[208,14,176,8,"accuracy"],[208,22,176,16],[208,24,176,18,"Location"],[208,32,176,26],[208,33,176,27,"Accuracy"],[208,41,176,35],[208,42,176,36,"Balanced"],[208,50,176,44],[209,14,177,8,"timeInterval"],[209,26,177,20],[209,28,177,22],[209,33,177,27],[210,14,177,29],[211,14,178,8,"distanceInterval"],[211,30,178,24],[211,32,178,26],[211,35,178,29],[212,14,178,31],[213,14,179,8,"deferredUpdatesInterval"],[213,37,179,31],[213,39,179,33],[213,44,179,38],[214,14,179,40],[215,14,180,8,"showsBackgroundLocationIndicator"],[215,46,180,40],[215,48,180,42],[215,52,180,46],[216,14,181,8,"foregroundService"],[216,31,181,25],[216,33,181,27],[217,16,182,10,"notificationTitle"],[217,33,182,27],[217,35,182,29],[217,43,182,37],[218,16,183,10,"notificationBody"],[218,32,183,26],[218,34,183,28],[219,14,184,8],[220,12,185,6],[220,13,185,7],[220,14,185,8],[221,12,187,6],[221,16,187,10],[221,17,187,11,"isMonitoring"],[221,29,187,23],[221,32,187,26],[221,36,187,30],[222,12,188,6],[222,16,188,10],[222,17,188,11,"logger"],[222,23,188,17],[222,24,188,18,"info"],[222,28,188,22],[222,29,188,23],[222,58,188,52],[222,59,188,53],[223,10,189,4],[223,11,189,5],[223,12,189,6],[223,19,189,13,"error"],[223,24,189,23],[223,26,189,25],[224,12,190,6],[224,16,190,10],[224,17,190,11,"logger"],[224,23,190,17],[224,24,190,18,"error"],[224,29,190,23],[224,30,190,24],[224,67,190,61],[224,69,190,63],[225,14,190,65,"error"],[225,19,190,70],[225,21,190,72,"error"],[225,26,190,77],[225,27,190,78,"message"],[226,12,190,86],[226,13,190,87],[226,14,190,88],[227,10,191,4],[228,8,192,2],[228,9,192,3],[229,8,192,3],[229,17,173,16,"startLocationMonitoring"],[229,40,173,39,"startLocationMonitoring"],[229,41,173,39],[230,10,173,39],[230,17,173,39,"_startLocationMonitoring"],[230,41,173,39],[230,42,173,39,"apply"],[230,47,173,39],[230,54,173,39,"arguments"],[230,63,173,39],[231,8,173,39],[232,8,173,39],[232,15,173,16,"startLocationMonitoring"],[232,38,173,39],[233,6,173,39],[234,4,173,39],[235,6,173,39,"key"],[235,9,173,39],[236,6,173,39,"value"],[236,11,173,39],[237,8,173,39],[237,12,173,39,"_stopLocationMonitoring"],[237,35,173,39],[237,42,173,39,"_asyncToGenerator2"],[237,60,173,39],[237,61,173,39,"default"],[237,68,173,39],[237,70,194,2],[237,83,194,56],[238,10,195,4],[238,14,195,8],[239,12,196,6],[239,18,196,12,"Location"],[239,26,196,20],[239,27,196,21,"stopLocationUpdatesAsync"],[239,51,196,45],[239,52,196,46,"LOCATION_TASK_NAME"],[239,70,196,64],[239,71,196,65],[240,12,197,6],[240,18,197,12,"Location"],[240,26,197,20],[240,27,197,21,"stopGeofencingAsync"],[240,46,197,40],[240,47,197,41,"GEOFENCING_TASK_NAME"],[240,67,197,61],[240,68,197,62],[241,12,198,6],[241,16,198,10],[241,17,198,11,"isMonitoring"],[241,29,198,23],[241,32,198,26],[241,37,198,31],[242,12,199,6],[242,16,199,10],[242,17,199,11,"logger"],[242,23,199,17],[242,24,199,18,"info"],[242,28,199,22],[242,29,199,23],[242,58,199,52],[242,59,199,53],[243,10,200,4],[243,11,200,5],[243,12,200,6],[243,19,200,13,"error"],[243,24,200,23],[243,26,200,25],[244,12,201,6],[244,16,201,10],[244,17,201,11,"logger"],[244,23,201,17],[244,24,201,18,"error"],[244,29,201,23],[244,30,201,24],[244,66,201,60],[244,68,201,62],[245,14,201,64,"error"],[245,19,201,69],[245,21,201,71,"error"],[245,26,201,76],[245,27,201,77,"message"],[246,12,201,85],[246,13,201,86],[246,14,201,87],[247,10,202,4],[248,8,203,2],[248,9,203,3],[249,8,203,3],[249,17,194,16,"stopLocationMonitoring"],[249,39,194,38,"stopLocationMonitoring"],[249,40,194,38],[250,10,194,38],[250,17,194,38,"_stopLocationMonitoring"],[250,40,194,38],[250,41,194,38,"apply"],[250,46,194,38],[250,53,194,38,"arguments"],[250,62,194,38],[251,8,194,38],[252,8,194,38],[252,15,194,16,"stopLocationMonitoring"],[252,37,194,38],[253,6,194,38],[254,4,194,38],[255,6,194,38,"key"],[255,9,194,38],[256,6,194,38,"value"],[256,11,194,38],[256,13,205,2],[256,22,205,10,"processLocationUpdate"],[256,43,205,31,"processLocationUpdate"],[256,44,205,32,"location"],[256,52,205,65],[256,54,205,73],[257,8,206,4],[257,12,206,8],[257,13,206,9,"logger"],[257,19,206,15],[257,20,206,16,"debug"],[257,25,206,21],[257,26,206,22],[257,52,206,48],[257,54,206,50],[258,10,207,6,"latitude"],[258,18,207,14],[258,20,207,16,"location"],[258,28,207,24],[258,29,207,25,"coords"],[258,35,207,31],[258,36,207,32,"latitude"],[258,44,207,40],[259,10,208,6,"longitude"],[259,19,208,15],[259,21,208,17,"location"],[259,29,208,25],[259,30,208,26,"coords"],[259,36,208,32],[259,37,208,33,"longitude"],[259,46,208,42],[260,10,209,6,"accuracy"],[260,18,209,14],[260,20,209,16,"location"],[260,28,209,24],[260,29,209,25,"coords"],[260,35,209,31],[260,36,209,32,"accuracy"],[261,8,210,4],[261,9,210,5],[261,10,210,6],[263,8,212,4],[264,8,213,4],[264,13,213,9],[264,17,213,15,"region"],[264,23,213,21],[264,27,213,25],[264,31,213,29],[264,32,213,30,"activeRegions"],[264,45,213,43],[264,46,213,44,"values"],[264,52,213,50],[264,53,213,51],[264,54,213,52],[264,56,213,54],[265,10,214,6],[265,14,214,12,"distance"],[265,22,214,20],[265,25,214,23],[265,29,214,27],[265,30,214,28,"calculateDistance"],[265,47,214,45],[265,48,215,8,"location"],[265,56,215,16],[265,57,215,17,"coords"],[265,63,215,23],[265,64,215,24,"latitude"],[265,72,215,32],[265,74,216,8,"location"],[265,82,216,16],[265,83,216,17,"coords"],[265,89,216,23],[265,90,216,24,"longitude"],[265,99,216,33],[265,101,217,8,"region"],[265,107,217,14],[265,108,217,15,"latitude"],[265,116,217,23],[265,118,218,8,"region"],[265,124,218,14],[265,125,218,15,"longitude"],[265,134,219,6],[265,135,219,7],[266,10,221,6],[266,14,221,10,"distance"],[266,22,221,18],[266,26,221,22,"region"],[266,32,221,28],[266,33,221,29,"radius"],[266,39,221,35],[266,41,221,37],[267,12,222,8],[267,16,222,12],[267,17,222,13,"logger"],[267,23,222,19],[267,24,222,20,"info"],[267,28,222,24],[267,29,222,25],[267,56,222,52],[267,58,222,54],[268,14,223,10,"regionId"],[268,22,223,18],[268,24,223,20,"region"],[268,30,223,26],[268,31,223,27,"identifier"],[268,41,223,37],[269,14,224,10,"distance"],[269,22,224,18],[269,24,224,10,"distance"],[269,32,224,18],[270,14,225,10,"radius"],[270,20,225,16],[270,22,225,18,"region"],[270,28,225,24],[270,29,225,25,"radius"],[271,12,226,8],[271,13,226,9],[271,14,226,10],[272,12,227,8],[273,10,228,6],[274,8,229,4],[275,6,230,2],[276,4,230,3],[277,6,230,3,"key"],[277,9,230,3],[278,6,230,3,"value"],[278,11,230,3],[279,8,230,3],[279,12,230,3,"_processGeofenceEvent"],[279,33,230,3],[279,40,230,3,"_asyncToGenerator2"],[279,58,230,3],[279,59,230,3,"default"],[279,66,230,3],[279,68,232,2],[279,79,232,37,"eventType"],[279,88,232,54],[279,90,232,56,"region"],[279,96,232,67],[279,98,232,84],[280,10,233,4],[280,14,233,8],[281,12,234,6],[281,16,234,12,"regionData"],[281,26,234,22],[281,29,234,25],[281,33,234,29],[281,34,234,30,"activeRegions"],[281,47,234,43],[281,48,234,44,"get"],[281,51,234,47],[281,52,234,48,"region"],[281,58,234,54],[281,59,234,55,"identifier"],[281,69,234,65],[281,70,234,66],[282,12,235,6],[282,16,235,10],[282,17,235,11,"regionData"],[282,27,235,21],[282,29,235,23],[283,14,236,8],[283,18,236,12],[283,19,236,13,"logger"],[283,25,236,19],[283,26,236,20,"warn"],[283,30,236,24],[283,31,236,25],[283,56,236,50],[283,58,236,52],[284,16,236,54,"identifier"],[284,26,236,64],[284,28,236,66,"region"],[284,34,236,72],[284,35,236,73,"identifier"],[285,14,236,84],[285,15,236,85],[285,16,236,86],[286,14,237,8],[287,12,238,6],[288,12,240,6],[288,16,240,10],[288,17,240,11,"logger"],[288,23,240,17],[288,24,240,18,"info"],[288,28,240,22],[288,29,240,23],[288,55,240,49],[288,57,240,51],[289,14,241,8,"eventType"],[289,23,241,17],[289,25,241,8,"eventType"],[289,34,241,17],[290,14,242,8,"regionId"],[290,22,242,16],[290,24,242,18,"region"],[290,30,242,24],[290,31,242,25,"identifier"],[290,41,242,35],[291,14,243,8,"automationId"],[291,26,243,20],[291,28,243,22,"regionData"],[291,38,243,32],[291,39,243,33,"automationId"],[292,12,244,6],[292,13,244,7],[292,14,244,8],[294,12,246,6],[295,12,247,6],[295,16,247,12,"shouldTrigger"],[295,29,247,25],[295,32,248,9,"eventType"],[295,41,248,18],[295,46,248,23],[295,53,248,30],[295,57,248,34,"regionData"],[295,67,248,44],[295,68,248,45,"triggerType"],[295,79,248,56],[295,84,248,61],[295,100,248,77],[295,104,249,9,"eventType"],[295,113,249,18],[295,118,249,23],[295,124,249,29],[295,128,249,33,"regionData"],[295,138,249,43],[295,139,249,44,"triggerType"],[295,150,249,55],[295,155,249,60],[295,170,249,76],[296,12,251,6],[296,16,251,10,"shouldTrigger"],[296,29,251,23],[296,31,251,25],[297,14,252,8],[297,20,252,14],[297,24,252,18],[297,25,252,19,"executeTriggeredAutomation"],[297,51,252,45],[297,52,252,46,"regionData"],[297,62,252,56],[297,63,252,57],[298,12,253,6],[299,10,254,4],[299,11,254,5],[299,12,254,6],[299,19,254,13,"error"],[299,24,254,23],[299,26,254,25],[300,12,255,6],[300,16,255,10],[300,17,255,11,"logger"],[300,23,255,17],[300,24,255,18,"error"],[300,29,255,23],[300,30,255,24],[300,64,255,58],[300,66,255,60],[301,14,255,62,"error"],[301,19,255,67],[301,21,255,69,"error"],[301,26,255,74],[301,27,255,75,"message"],[302,12,255,83],[302,13,255,84],[302,14,255,85],[303,10,256,4],[304,8,257,2],[304,9,257,3],[305,8,257,3],[305,17,232,16,"processGeofenceEvent"],[305,37,232,36,"processGeofenceEvent"],[305,38,232,36,"_x7"],[305,41,232,36],[305,43,232,36,"_x8"],[305,46,232,36],[306,10,232,36],[306,17,232,36,"_processGeofenceEvent"],[306,38,232,36],[306,39,232,36,"apply"],[306,44,232,36],[306,51,232,36,"arguments"],[306,60,232,36],[307,8,232,36],[308,8,232,36],[308,15,232,16,"processGeofenceEvent"],[308,35,232,36],[309,6,232,36],[310,4,232,36],[311,6,232,36,"key"],[311,9,232,36],[312,6,232,36,"value"],[312,11,232,36],[313,8,232,36],[313,12,232,36,"_executeTriggeredAutomation"],[313,39,232,36],[313,46,232,36,"_asyncToGenerator2"],[313,64,232,36],[313,65,232,36,"default"],[313,72,232,36],[313,74,259,2],[313,85,259,43,"region"],[313,91,259,65],[313,93,259,82],[314,10,260,4],[314,14,260,8],[315,12,261,6],[316,12,262,6],[317,12,263,6,"Alert"],[317,30,263,11],[317,31,263,12,"alert"],[317,36,263,17],[317,37,264,8],[317,69,264,40],[317,71,265,8],[317,116,265,53,"region"],[317,122,265,59],[317,123,265,60,"identifier"],[317,133,265,70],[317,135,265,72],[317,137,266,8],[317,138,266,9],[318,14,266,11,"text"],[318,18,266,15],[318,20,266,17],[319,12,266,22],[319,13,266,23],[319,14,267,6],[319,15,267,7],[320,12,269,6],[320,16,269,10],[320,17,269,11,"logger"],[320,23,269,17],[320,24,269,18,"info"],[320,28,269,22],[320,29,269,23],[320,69,269,63],[320,71,269,65],[321,14,270,8,"automationId"],[321,26,270,20],[321,28,270,22,"region"],[321,34,270,28],[321,35,270,29,"automationId"],[321,47,270,41],[322,14,271,8,"triggerId"],[322,23,271,17],[322,25,271,19,"region"],[322,31,271,25],[322,32,271,26,"triggerId"],[322,41,271,35],[323,14,272,8,"triggerType"],[323,25,272,19],[323,27,272,21,"region"],[323,33,272,27],[323,34,272,28,"triggerType"],[324,12,273,6],[324,13,273,7],[324,14,273,8],[325,10,274,4],[325,11,274,5],[325,12,274,6],[325,19,274,13,"error"],[325,24,274,23],[325,26,274,25],[326,12,275,6],[326,16,275,10],[326,17,275,11,"logger"],[326,23,275,17],[326,24,275,18,"error"],[326,29,275,23],[326,30,275,24],[326,70,275,64],[326,72,275,66],[327,14,275,68,"error"],[327,19,275,73],[327,21,275,75,"error"],[327,26,275,80],[327,27,275,81,"message"],[328,12,275,89],[328,13,275,90],[328,14,275,91],[329,10,276,4],[330,8,277,2],[330,9,277,3],[331,8,277,3],[331,17,259,16,"executeTriggeredAutomation"],[331,43,259,42,"executeTriggeredAutomation"],[331,44,259,42,"_x9"],[331,47,259,42],[332,10,259,42],[332,17,259,42,"_executeTriggeredAutomation"],[332,44,259,42],[332,45,259,42,"apply"],[332,50,259,42],[332,57,259,42,"arguments"],[332,66,259,42],[333,8,259,42],[334,8,259,42],[334,15,259,16,"executeTriggeredAutomation"],[334,41,259,42],[335,6,259,42],[336,4,259,42],[337,6,259,42,"key"],[337,9,259,42],[338,6,259,42,"value"],[338,11,259,42],[338,13,279,2],[338,22,279,10,"calculateDistance"],[338,39,279,27,"calculateDistance"],[338,40,279,28,"lat1"],[338,44,279,40],[338,46,279,42,"lon1"],[338,50,279,54],[338,52,279,56,"lat2"],[338,56,279,68],[338,58,279,70,"lon2"],[338,62,279,82],[338,64,279,92],[339,8,280,4],[339,12,280,10,"R"],[339,13,280,11],[339,16,280,14],[339,23,280,21],[339,24,280,22],[339,25,280,23],[340,8,281,4],[340,12,281,10,"dLat"],[340,16,281,14],[340,19,281,17],[340,23,281,21],[340,24,281,22,"toRadians"],[340,33,281,31],[340,34,281,32,"lat2"],[340,38,281,36],[340,41,281,39,"lat1"],[340,45,281,43],[340,46,281,44],[341,8,282,4],[341,12,282,10,"dLon"],[341,16,282,14],[341,19,282,17],[341,23,282,21],[341,24,282,22,"toRadians"],[341,33,282,31],[341,34,282,32,"lon2"],[341,38,282,36],[341,41,282,39,"lon1"],[341,45,282,43],[341,46,282,44],[342,8,283,4],[342,12,283,10,"a"],[342,13,283,11],[342,16,284,6,"Math"],[342,20,284,10],[342,21,284,11,"sin"],[342,24,284,14],[342,25,284,15,"dLat"],[342,29,284,19],[342,32,284,22],[342,33,284,23],[342,34,284,24],[342,37,284,27,"Math"],[342,41,284,31],[342,42,284,32,"sin"],[342,45,284,35],[342,46,284,36,"dLat"],[342,50,284,40],[342,53,284,43],[342,54,284,44],[342,55,284,45],[342,58,285,6,"Math"],[342,62,285,10],[342,63,285,11,"cos"],[342,66,285,14],[342,67,285,15],[342,71,285,19],[342,72,285,20,"toRadians"],[342,81,285,29],[342,82,285,30,"lat1"],[342,86,285,34],[342,87,285,35],[342,88,285,36],[342,91,285,39,"Math"],[342,95,285,43],[342,96,285,44,"cos"],[342,99,285,47],[342,100,285,48],[342,104,285,52],[342,105,285,53,"toRadians"],[342,114,285,62],[342,115,285,63,"lat2"],[342,119,285,67],[342,120,285,68],[342,121,285,69],[342,124,286,6,"Math"],[342,128,286,10],[342,129,286,11,"sin"],[342,132,286,14],[342,133,286,15,"dLon"],[342,137,286,19],[342,140,286,22],[342,141,286,23],[342,142,286,24],[342,145,286,27,"Math"],[342,149,286,31],[342,150,286,32,"sin"],[342,153,286,35],[342,154,286,36,"dLon"],[342,158,286,40],[342,161,286,43],[342,162,286,44],[342,163,286,45],[343,8,287,4],[343,12,287,10,"c"],[343,13,287,11],[343,16,287,14],[343,17,287,15],[343,20,287,18,"Math"],[343,24,287,22],[343,25,287,23,"atan2"],[343,30,287,28],[343,31,287,29,"Math"],[343,35,287,33],[343,36,287,34,"sqrt"],[343,40,287,38],[343,41,287,39,"a"],[343,42,287,40],[343,43,287,41],[343,45,287,43,"Math"],[343,49,287,47],[343,50,287,48,"sqrt"],[343,54,287,52],[343,55,287,53],[343,56,287,54],[343,59,287,57,"a"],[343,60,287,58],[343,61,287,59],[343,62,287,60],[344,8,288,4],[344,15,288,11,"R"],[344,16,288,12],[344,19,288,15,"c"],[344,20,288,16],[345,6,289,2],[346,4,289,3],[347,6,289,3,"key"],[347,9,289,3],[348,6,289,3,"value"],[348,11,289,3],[348,13,291,2],[348,22,291,10,"toRadians"],[348,31,291,19,"toRadians"],[348,32,291,20,"degrees"],[348,39,291,35],[348,41,291,45],[349,8,292,4],[349,15,292,11,"degrees"],[349,22,292,18],[349,26,292,22,"Math"],[349,30,292,26],[349,31,292,27,"PI"],[349,33,292,29],[349,36,292,32],[349,39,292,35],[349,40,292,36],[350,6,293,2],[351,4,293,3],[352,6,293,3,"key"],[352,9,293,3],[353,6,293,3,"value"],[353,11,293,3],[354,8,293,3],[354,12,293,3,"_getCurrentLocation"],[354,31,293,3],[354,38,293,3,"_asyncToGenerator2"],[354,56,293,3],[354,57,293,3,"default"],[354,64,293,3],[354,66,295,2],[354,79,295,70],[355,10,296,4],[355,14,296,8],[356,12,297,6],[356,16,297,12,"hasPermissions"],[356,30,297,26],[356,39,297,35],[356,43,297,39],[356,44,297,40,"requestPermissions"],[356,62,297,58],[356,63,297,59],[356,64,297,60],[357,12,298,6],[357,16,298,10],[357,17,298,11,"hasPermissions"],[357,31,298,25],[357,33,298,27],[358,14,299,8],[358,21,299,15],[358,25,299,19],[359,12,300,6],[360,12,302,6],[360,16,302,12,"location"],[360,24,302,20],[360,33,302,29,"Location"],[360,41,302,37],[360,42,302,38,"getCurrentPositionAsync"],[360,65,302,61],[360,66,302,62],[361,14,303,8,"accuracy"],[361,22,303,16],[361,24,303,18,"Location"],[361,32,303,26],[361,33,303,27,"Accuracy"],[361,41,303,35],[361,42,303,36,"High"],[362,12,304,6],[362,13,304,7],[362,14,304,8],[363,12,306,6],[363,19,306,13,"location"],[363,27,306,21],[364,10,307,4],[364,11,307,5],[364,12,307,6],[364,19,307,13,"error"],[364,24,307,23],[364,26,307,25],[365,12,308,6],[365,16,308,10],[365,17,308,11,"logger"],[365,23,308,17],[365,24,308,18,"error"],[365,29,308,23],[365,30,308,24],[365,62,308,56],[365,64,308,58],[366,14,308,60,"error"],[366,19,308,65],[366,21,308,67,"error"],[366,26,308,72],[366,27,308,73,"message"],[367,12,308,81],[367,13,308,82],[367,14,308,83],[368,12,309,6],[368,19,309,13],[368,23,309,17],[369,10,310,4],[370,8,311,2],[370,9,311,3],[371,8,311,3],[371,17,295,8,"getCurrentLocation"],[371,35,295,26,"getCurrentLocation"],[371,36,295,26],[372,10,295,26],[372,17,295,26,"_getCurrentLocation"],[372,36,295,26],[372,37,295,26,"apply"],[372,42,295,26],[372,49,295,26,"arguments"],[372,58,295,26],[373,8,295,26],[374,8,295,26],[374,15,295,8,"getCurrentLocation"],[374,33,295,26],[375,6,295,26],[376,4,295,26],[377,6,295,26,"key"],[377,9,295,26],[378,6,295,26,"value"],[378,11,295,26],[378,13,313,2],[378,22,313,2,"getActiveRegions"],[378,38,313,18,"getActiveRegions"],[378,39,313,18],[378,41,313,39],[379,8,314,4],[379,15,314,11,"Array"],[379,20,314,16],[379,21,314,17,"from"],[379,25,314,21],[379,26,314,22],[379,30,314,26],[379,31,314,27,"activeRegions"],[379,44,314,40],[379,45,314,41,"values"],[379,51,314,47],[379,52,314,48],[379,53,314,49],[379,54,314,50],[380,6,315,2],[381,4,315,3],[382,6,315,3,"key"],[382,9,315,3],[383,6,315,3,"value"],[383,11,315,3],[384,8,315,3],[384,12,315,3,"_isLocationServicesEnabled"],[384,38,315,3],[384,45,315,3,"_asyncToGenerator2"],[384,63,315,3],[384,64,315,3,"default"],[384,71,315,3],[384,73,317,2],[384,86,317,54],[385,10,318,4],[385,23,318,17,"Location"],[385,31,318,25],[385,32,318,26,"hasServicesEnabledAsync"],[385,55,318,49],[385,56,318,50],[385,57,318,51],[386,8,319,2],[386,9,319,3],[387,8,319,3],[387,17,317,8,"isLocationServicesEnabled"],[387,42,317,33,"isLocationServicesEnabled"],[387,43,317,33],[388,10,317,33],[388,17,317,33,"_isLocationServicesEnabled"],[388,43,317,33],[388,44,317,33,"apply"],[388,49,317,33],[388,56,317,33,"arguments"],[388,65,317,33],[389,8,317,33],[390,8,317,33],[390,15,317,8,"isLocationServicesEnabled"],[390,40,317,33],[391,6,317,33],[392,4,317,33],[393,6,317,33,"key"],[393,9,317,33],[394,6,317,33,"value"],[394,11,317,33],[395,8,317,33],[395,12,317,33,"_stopAllLocationTriggers"],[395,36,317,33],[395,43,317,33,"_asyncToGenerator2"],[395,61,317,33],[395,62,317,33,"default"],[395,69,317,33],[395,71,321,2],[395,84,321,49],[396,10,322,4],[396,14,322,8],[397,12,323,6],[397,18,323,12],[397,22,323,16],[397,23,323,17,"stopLocationMonitoring"],[397,45,323,39],[397,46,323,40],[397,47,323,41],[398,12,324,6],[398,16,324,10],[398,17,324,11,"activeRegions"],[398,30,324,24],[398,31,324,25,"clear"],[398,36,324,30],[398,37,324,31],[398,38,324,32],[399,12,325,6],[399,16,325,10],[399,17,325,11,"logger"],[399,23,325,17],[399,24,325,18,"info"],[399,28,325,22],[399,29,325,23],[399,60,325,54],[399,61,325,55],[400,10,326,4],[400,11,326,5],[400,12,326,6],[400,19,326,13,"error"],[400,24,326,23],[400,26,326,25],[401,12,327,6],[401,16,327,10],[401,17,327,11,"logger"],[401,23,327,17],[401,24,327,18,"error"],[401,29,327,23],[401,30,327,24],[401,68,327,62],[401,70,327,64],[402,14,327,66,"error"],[402,19,327,71],[402,21,327,73,"error"],[402,26,327,78],[402,27,327,79,"message"],[403,12,327,87],[403,13,327,88],[403,14,327,89],[404,10,328,4],[405,8,329,2],[405,9,329,3],[406,8,329,3],[406,17,321,8,"stopAllLocationTriggers"],[406,40,321,31,"stopAllLocationTriggers"],[406,41,321,31],[407,10,321,31],[407,17,321,31,"_stopAllLocationTriggers"],[407,41,321,31],[407,42,321,31,"apply"],[407,47,321,31],[407,54,321,31,"arguments"],[407,63,321,31],[408,8,321,31],[409,8,321,31],[409,15,321,8,"stopAllLocationTriggers"],[409,38,321,31],[410,6,321,31],[411,4,321,31],[412,2,321,31],[413,2,332,7],[413,6,332,13,"locationTriggerService"],[413,28,332,35],[413,31,332,35,"exports"],[413,38,332,35],[413,39,332,35,"locationTriggerService"],[413,61,332,35],[413,64,332,38],[413,68,332,42,"LocationTriggerService"],[413,90,332,64],[413,91,332,65],[413,92,332,66],[414,0,332,67],[414,3]],"functionMap":{"names":["<global>","LocationTriggerService","constructor","setupTaskManager","TaskManager.defineTask$argument_1","requestPermissions","addLocationTrigger","removeLocationTrigger","Array.from.map$argument_0","startLocationMonitoring","stopLocationMonitoring","processLocationUpdate","processGeofenceEvent","executeTriggeredAutomation","calculateDistance","toRadians","getCurrentLocation","getActiveRegions","isLocationServicesEnabled","stopAllLocationTriggers"],"mappings":"AAA;OCqB;ECK;GDG;EEE;+CCE;KDU;iDCG;KDU;GFC;EIE;GJ2B;EKE;GLkD;EME;+ECW;YDO;GNY;EQE;GRmB;ESE;GTS;EUE;GVyB;EWE;GXyB;EYE;GZkB;EaE;GbU;EcE;GdE;EeE;GfgB;EgBE;GhBE;EiBE;GjBE;EkBE;GlBQ;CDC"}},"type":"js/module"}]}