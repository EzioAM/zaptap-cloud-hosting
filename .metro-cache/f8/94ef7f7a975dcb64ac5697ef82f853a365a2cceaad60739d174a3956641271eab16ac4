{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"aU3Lrys8xTVpYSDJal2nhppojC8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"X490zePjq+0IljAc8X0qcBg0iTo=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":7,"column":22,"index":133}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":134},"end":{"line":8,"column":66,"index":200}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"]}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":201},"end":{"line":9,"column":63,"index":264}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"]}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":415},"end":{"line":16,"column":56,"index":471}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":650},"end":{"line":24,"column":47,"index":697}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":738},"end":{"line":32,"column":18,"index":830}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"]}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":831},"end":{"line":33,"column":43,"index":874}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"]}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":34,"column":0,"index":875},"end":{"line":34,"column":64,"index":939}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"]}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":35,"column":0,"index":940},"end":{"line":35,"column":77,"index":1017}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"]}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":36,"column":0,"index":1018},"end":{"line":36,"column":55,"index":1073}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"]}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":37,"column":0,"index":1074},"end":{"line":37,"column":49,"index":1123}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"]}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var _toConsumableArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n  var _defineProperty2 = _interopRequireDefault(require(_dependencyMap[7], \"@babel/runtime/helpers/defineProperty\"));\n  var React = _interopRequireWildcard(require(_dependencyMap[8], \"react\"));\n  var _reactNative = require(_dependencyMap[9], \"react-native\");\n  var _customDirectEventTypes = require(_dependencyMap[10], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[11], \"../RNGestureHandlerModule\"));\n  var _State = require(_dependencyMap[12], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[13], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[14], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[15], \"./utils\");\n  var _findNodeHandle = _interopRequireDefault(require(_dependencyMap[16], \"../findNodeHandle\"));\n  var _utils2 = require(_dependencyMap[17], \"../utils\");\n  var _ActionType = require(_dependencyMap[18], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[19], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = _interopRequireDefault(require(_dependencyMap[20], \"../GestureHandlerRootViewContext\"));\n  var _ghQueueMicrotask = require(_dependencyMap[21], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[22], \"../mountRegistry\");\n  var _jsxDevRuntime = require(_dependencyMap[23], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-gesture-handler/src/handlers/createHandler.tsx\",\n    _UIManagerAny$getView;\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var UIManagerAny = _reactNative.UIManager;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  var customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  var customGHEventsConfig = Object.assign({\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  }, (0, _utils2.isFabric)() && _reactNative.Platform.OS === 'android' && customGHEventsConfigFabricAndroid);\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = Object.assign({}, UIManagerAny.genericDirectEventTypes, customGHEventsConfig);\n  // In newer versions of RN the `genericDirectEventTypes` is located in the object\n  // returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n  // it compatible with RN 61+\n  var UIManagerConstants = (_UIManagerAny$getView = UIManagerAny.getViewManagerConfig == null ? void 0 : UIManagerAny.getViewManagerConfig('getConstants')) != null ? _UIManagerAny$getView : UIManagerAny.getConstants == null ? void 0 : UIManagerAny.getConstants();\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = Object.assign({}, UIManagerConstants.genericDirectEventTypes, customGHEventsConfig);\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  var _UIManagerAny$setJSRe = UIManagerAny.setJSResponder,\n    oldSetJSResponder = _UIManagerAny$setJSRe === void 0 ? function () {\n      // no-op\n    } : _UIManagerAny$setJSRe,\n    _UIManagerAny$clearJS = UIManagerAny.clearJSResponder,\n    oldClearJSResponder = _UIManagerAny$clearJS === void 0 ? function () {\n      // no-op\n    } : _UIManagerAny$clearJS;\n  UIManagerAny.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  var allowTouches = true;\n  var DEV_ON_ANDROID = __DEV__ && _reactNative.Platform.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', function () {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  var stateToPropMappings = (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({}, _State.State.UNDETERMINED, undefined), _State.State.BEGAN, 'onBegan'), _State.State.FAILED, 'onFailed'), _State.State.CANCELLED, 'onCancelled'), _State.State.ACTIVE, 'onActivated'), _State.State.END, 'onEnded');\n\n  // TODO(TS) fix event types\n\n  var UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler(_ref) {\n    var name = _ref.name,\n      _ref$allowedProps = _ref.allowedProps,\n      allowedProps = _ref$allowedProps === void 0 ? [] : _ref$allowedProps,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config,\n      transformProps = _ref.transformProps,\n      _ref$customNativeProp = _ref.customNativeProps,\n      customNativeProps = _ref$customNativeProp === void 0 ? [] : _ref$customNativeProp;\n    var Handler = /*#__PURE__*/function (_React$Component) {\n      function Handler(props) {\n        var _this;\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = _callSuper(this, Handler, [props]);\n        _this.onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onGestureEvent === 'function') {\n              _this.props.onGestureEvent == null || _this.props.onGestureEvent(event);\n            }\n          } else {\n            _this.props.onGestureHandlerEvent == null || _this.props.onGestureHandlerEvent(event);\n          }\n        };\n        // TODO(TS) - make sure this is right type for event\n        _this.onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onHandlerStateChange === 'function') {\n              _this.props.onHandlerStateChange == null || _this.props.onHandlerStateChange(event);\n            }\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange == null || _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n        _this.refHandler = function (node) {\n          var _props;\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          // @ts-ignore Since React 19 ref is accessible as standard prop\n          // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n          var ref = (0, _utils2.isReact19)() ? (_props = child.props) == null ? void 0 : _props.ref : child == null ? void 0 : child.ref;\n          if (!ref) {\n            return;\n          }\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        };\n        _this.createGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n        _this.attachGestureHandler = function (newViewTag) {\n          _this.viewTag = newViewTag;\n          if (_reactNative.Platform.OS === 'web') {\n            // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            _this.propsRef);\n          } else {\n            (0, _handlersRegistry.registerOldGestureHandler)(_this.handlerTag, {\n              onGestureEvent: _this.onGestureHandlerEvent,\n              onGestureStateChange: _this.onGestureHandlerStateChange\n            });\n            var actionType = function (_this$props, _this$props2) {\n              var onGestureEvent = (_this$props = _this.props) == null ? void 0 : _this$props.onGestureEvent;\n              var isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              var onHandlerStateChange = (_this$props2 = _this.props) == null ? void 0 : _this$props2.onHandlerStateChange;\n              var isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              var isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _ActionType.ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n              }\n            }();\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, actionType);\n          }\n          (0, _utils.scheduleFlushOperations)();\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(function () {\n            _mountRegistry.MountRegistry.gestureHandlerWillMount(_this);\n          });\n        };\n        _this.updateGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n          (0, _utils.scheduleFlushOperations)();\n        };\n        _this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        _this.config = {};\n        _this.propsRef = /*#__PURE__*/React.createRef();\n        _this.isMountedRef = /*#__PURE__*/React.createRef();\n        _this.state = {\n          allowTouches: allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = _this.handlerTag;\n        }\n        return _this;\n      }\n      (0, _inherits2.default)(Handler, _React$Component);\n      return (0, _createClass2.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n          var props = this.props;\n          this.isMountedRef.current = true;\n          if (DEV_ON_ANDROID) {\n            this.inspectorToggleListener = _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', function () {\n              _this2.setState(function (_) {\n                return {\n                  allowTouches: allowTouches\n                };\n              });\n              _this2.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          if (hasUnresolvedRefs(props)) {\n            // If there are unresolved refs (e.g. \".current\" has not yet been set)\n            // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n            // _update method that will try to update native handler props using\n            // queueMicrotask. This makes it so update() function gets called after all\n            // react components are mounted and we expect the missing ref object to\n            // be resolved by then.\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(function () {\n              _this2.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config));\n          if (!this.viewNode) {\n            throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n          }\n          this.attachGestureHandler((0, _findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, _findNodeHandle.default)(this.viewNode);\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n          }\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          var _this$inspectorToggle;\n          (_this$inspectorToggle = this.inspectorToggleListener) == null || _this$inspectorToggle.remove();\n          this.isMountedRef.current = false;\n          if (_reactNative.Platform.OS !== 'web') {\n            (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n          }\n          _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n          (0, _utils.scheduleFlushOperations)();\n          // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n          var handlerID = this.props.id;\n          if (handlerID) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete _handlersRegistry.handlerIDToTag[handlerID];\n          }\n          _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n        }\n      }, {\n        key: \"update\",\n        value: function update(remainingTries) {\n          var _this3 = this;\n          if (!this.isMountedRef.current) {\n            return;\n          }\n          var props = this.props;\n\n          // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n          // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n          // again is easy enough fix.\n          if (hasUnresolvedRefs(props) && remainingTries > 0) {\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(function () {\n              _this3.update(remainingTries - 1);\n            });\n          } else {\n            var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n            if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n              this.updateGestureHandler(newConfig);\n            }\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = Object.assign({}, this.props, updates);\n          var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props$testID;\n          if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && _reactNative.Platform.OS !== 'web') {\n            throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n          }\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props3 = this.props,\n            onGestureEvent = _this$props3.onGestureEvent,\n            onGestureHandlerEvent = _this$props3.onGestureHandlerEvent;\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props4 = this.props,\n            onHandlerStateChange = _this$props4.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props4.onGestureHandlerStateChange;\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var events = {\n            onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n            onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n          };\n          this.propsRef.current = events;\n          var child = null;\n          try {\n            child = React.Children.only(this.props.children);\n          } catch (e) {\n            throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n          }\n          var grandChildren = child.props.children;\n          if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = React.Children.toArray(grandChildren);\n            grandChildren.push(/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_PressabilityDebugView.PressabilityDebugView, {\n              color: \"mediumspringgreen\",\n              hitSlop: child.props.hitSlop\n            }, \"pressabilityDebugView\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 11\n            }, this));\n          }\n          return /*#__PURE__*/React.cloneElement(child, Object.assign({\n            ref: this.refHandler,\n            collapsable: false\n          }, (0, _utils2.isTestEnv)() ? {\n            handlerType: name,\n            handlerTag: this.handlerTag,\n            enabled: this.props.enabled\n          } : {}, {\n            testID: (_this$props$testID = this.props.testID) != null ? _this$props$testID : child.props.testID\n          }, events), grandChildren);\n        }\n      }]);\n    }(React.Component);\n    Handler.displayName = name;\n    Handler.contextType = _GestureHandlerRootViewContext.default;\n    return Handler;\n  }\n});","lineCount":406,"map":[[14,2,1,0],[14,6,1,0,"React"],[14,11,1,0],[14,14,1,0,"_interopRequireWildcard"],[14,37,1,0],[14,38,1,0,"require"],[14,45,1,0],[14,46,1,0,"_dependencyMap"],[14,60,1,0],[15,2,2,0],[15,6,2,0,"_reactNative"],[15,18,2,0],[15,21,2,0,"require"],[15,28,2,0],[15,29,2,0,"_dependencyMap"],[15,43,2,0],[16,2,8,0],[16,6,8,0,"_customDirectEventTypes"],[16,29,8,0],[16,32,8,0,"require"],[16,39,8,0],[16,40,8,0,"_dependencyMap"],[16,54,8,0],[17,2,9,0],[17,6,9,0,"_RNGestureHandlerModule"],[17,29,9,0],[17,32,9,0,"_interopRequireDefault"],[17,54,9,0],[17,55,9,0,"require"],[17,62,9,0],[17,63,9,0,"_dependencyMap"],[17,77,9,0],[18,2,10,0],[18,6,10,0,"_State"],[18,12,10,0],[18,15,10,0,"require"],[18,22,10,0],[18,23,10,0,"_dependencyMap"],[18,37,10,0],[19,2,11,0],[19,6,11,0,"_handlersRegistry"],[19,23,11,0],[19,26,11,0,"require"],[19,33,11,0],[19,34,11,0,"_dependencyMap"],[19,48,11,0],[20,2,16,0],[20,6,16,0,"_getNextHandlerTag"],[20,24,16,0],[20,27,16,0,"require"],[20,34,16,0],[20,35,16,0,"_dependencyMap"],[20,49,16,0],[21,2,23,0],[21,6,23,0,"_utils"],[21,12,23,0],[21,15,23,0,"require"],[21,22,23,0],[21,23,23,0,"_dependencyMap"],[21,37,23,0],[22,2,24,0],[22,6,24,0,"_findNodeHandle"],[22,21,24,0],[22,24,24,0,"_interopRequireDefault"],[22,46,24,0],[22,47,24,0,"require"],[22,54,24,0],[22,55,24,0,"_dependencyMap"],[22,69,24,0],[23,2,26,0],[23,6,26,0,"_utils2"],[23,13,26,0],[23,16,26,0,"require"],[23,23,26,0],[23,24,26,0,"_dependencyMap"],[23,38,26,0],[24,2,33,0],[24,6,33,0,"_ActionType"],[24,17,33,0],[24,20,33,0,"require"],[24,27,33,0],[24,28,33,0,"_dependencyMap"],[24,42,33,0],[25,2,34,0],[25,6,34,0,"_PressabilityDebugView"],[25,28,34,0],[25,31,34,0,"require"],[25,38,34,0],[25,39,34,0,"_dependencyMap"],[25,53,34,0],[26,2,35,0],[26,6,35,0,"_GestureHandlerRootViewContext"],[26,36,35,0],[26,39,35,0,"_interopRequireDefault"],[26,61,35,0],[26,62,35,0,"require"],[26,69,35,0],[26,70,35,0,"_dependencyMap"],[26,84,35,0],[27,2,36,0],[27,6,36,0,"_ghQueueMicrotask"],[27,23,36,0],[27,26,36,0,"require"],[27,33,36,0],[27,34,36,0,"_dependencyMap"],[27,48,36,0],[28,2,37,0],[28,6,37,0,"_mountRegistry"],[28,20,37,0],[28,23,37,0,"require"],[28,30,37,0],[28,31,37,0,"_dependencyMap"],[28,45,37,0],[29,2,37,49],[29,6,37,49,"_jsxDevRuntime"],[29,20,37,49],[29,23,37,49,"require"],[29,30,37,49],[29,31,37,49,"_dependencyMap"],[29,45,37,49],[30,2,37,49],[30,6,37,49,"_jsxFileName"],[30,18,37,49],[31,4,37,49,"_UIManagerAny$getView"],[31,25,37,49],[32,2,37,49],[32,11,37,49,"_interopRequireWildcard"],[32,35,37,49,"e"],[32,36,37,49],[32,38,37,49,"t"],[32,39,37,49],[32,68,37,49,"WeakMap"],[32,75,37,49],[32,81,37,49,"r"],[32,82,37,49],[32,89,37,49,"WeakMap"],[32,96,37,49],[32,100,37,49,"n"],[32,101,37,49],[32,108,37,49,"WeakMap"],[32,115,37,49],[32,127,37,49,"_interopRequireWildcard"],[32,150,37,49],[32,162,37,49,"_interopRequireWildcard"],[32,186,37,49,"e"],[32,187,37,49],[32,189,37,49,"t"],[32,190,37,49],[32,199,37,49,"t"],[32,200,37,49],[32,204,37,49,"e"],[32,205,37,49],[32,209,37,49,"e"],[32,210,37,49],[32,211,37,49,"__esModule"],[32,221,37,49],[32,230,37,49,"e"],[32,231,37,49],[32,237,37,49,"o"],[32,238,37,49],[32,240,37,49,"i"],[32,241,37,49],[32,243,37,49,"f"],[32,244,37,49],[32,249,37,49,"__proto__"],[32,258,37,49],[32,266,37,49,"default"],[32,273,37,49],[32,275,37,49,"e"],[32,276,37,49],[32,293,37,49,"e"],[32,294,37,49],[32,317,37,49,"e"],[32,318,37,49],[32,343,37,49,"e"],[32,344,37,49],[32,353,37,49,"f"],[32,354,37,49],[32,360,37,49,"o"],[32,361,37,49],[32,364,37,49,"t"],[32,365,37,49],[32,368,37,49,"n"],[32,369,37,49],[32,372,37,49,"r"],[32,373,37,49],[32,381,37,49,"o"],[32,382,37,49],[32,383,37,49,"has"],[32,386,37,49],[32,387,37,49,"e"],[32,388,37,49],[32,398,37,49,"o"],[32,399,37,49],[32,400,37,49,"get"],[32,403,37,49],[32,404,37,49,"e"],[32,405,37,49],[32,408,37,49,"o"],[32,409,37,49],[32,410,37,49,"set"],[32,413,37,49],[32,414,37,49,"e"],[32,415,37,49],[32,417,37,49,"f"],[32,418,37,49],[32,432,37,49,"_t"],[32,434,37,49],[32,438,37,49,"e"],[32,439,37,49],[32,455,37,49,"_t"],[32,457,37,49],[32,464,37,49,"hasOwnProperty"],[32,478,37,49],[32,479,37,49,"call"],[32,483,37,49],[32,484,37,49,"e"],[32,485,37,49],[32,487,37,49,"_t"],[32,489,37,49],[32,496,37,49,"i"],[32,497,37,49],[32,501,37,49,"o"],[32,502,37,49],[32,505,37,49,"Object"],[32,511,37,49],[32,512,37,49,"defineProperty"],[32,526,37,49],[32,531,37,49,"Object"],[32,537,37,49],[32,538,37,49,"getOwnPropertyDescriptor"],[32,562,37,49],[32,563,37,49,"e"],[32,564,37,49],[32,566,37,49,"_t"],[32,568,37,49],[32,575,37,49,"i"],[32,576,37,49],[32,577,37,49,"get"],[32,580,37,49],[32,584,37,49,"i"],[32,585,37,49],[32,586,37,49,"set"],[32,589,37,49],[32,593,37,49,"o"],[32,594,37,49],[32,595,37,49,"f"],[32,596,37,49],[32,598,37,49,"_t"],[32,600,37,49],[32,602,37,49,"i"],[32,603,37,49],[32,607,37,49,"f"],[32,608,37,49],[32,609,37,49,"_t"],[32,611,37,49],[32,615,37,49,"e"],[32,616,37,49],[32,617,37,49,"_t"],[32,619,37,49],[32,630,37,49,"f"],[32,631,37,49],[32,636,37,49,"e"],[32,637,37,49],[32,639,37,49,"t"],[32,640,37,49],[33,2,37,49],[33,11,37,49,"_callSuper"],[33,22,37,49,"t"],[33,23,37,49],[33,25,37,49,"o"],[33,26,37,49],[33,28,37,49,"e"],[33,29,37,49],[33,40,37,49,"o"],[33,41,37,49],[33,48,37,49,"_getPrototypeOf2"],[33,64,37,49],[33,65,37,49,"default"],[33,72,37,49],[33,74,37,49,"o"],[33,75,37,49],[33,82,37,49,"_possibleConstructorReturn2"],[33,109,37,49],[33,110,37,49,"default"],[33,117,37,49],[33,119,37,49,"t"],[33,120,37,49],[33,122,37,49,"_isNativeReflectConstruct"],[33,147,37,49],[33,152,37,49,"Reflect"],[33,159,37,49],[33,160,37,49,"construct"],[33,169,37,49],[33,170,37,49,"o"],[33,171,37,49],[33,173,37,49,"e"],[33,174,37,49],[33,186,37,49,"_getPrototypeOf2"],[33,202,37,49],[33,203,37,49,"default"],[33,210,37,49],[33,212,37,49,"t"],[33,213,37,49],[33,215,37,49,"constructor"],[33,226,37,49],[33,230,37,49,"o"],[33,231,37,49],[33,232,37,49,"apply"],[33,237,37,49],[33,238,37,49,"t"],[33,239,37,49],[33,241,37,49,"e"],[33,242,37,49],[34,2,37,49],[34,11,37,49,"_isNativeReflectConstruct"],[34,37,37,49],[34,51,37,49,"t"],[34,52,37,49],[34,56,37,49,"Boolean"],[34,63,37,49],[34,64,37,49,"prototype"],[34,73,37,49],[34,74,37,49,"valueOf"],[34,81,37,49],[34,82,37,49,"call"],[34,86,37,49],[34,87,37,49,"Reflect"],[34,94,37,49],[34,95,37,49,"construct"],[34,104,37,49],[34,105,37,49,"Boolean"],[34,112,37,49],[34,145,37,49,"t"],[34,146,37,49],[34,159,37,49,"_isNativeReflectConstruct"],[34,184,37,49],[34,196,37,49,"_isNativeReflectConstruct"],[34,222,37,49],[34,235,37,49,"t"],[34,236,37,49],[35,2,40,0],[35,6,40,6,"UIManagerAny"],[35,18,40,18],[35,21,40,21,"UIManager"],[35,43,40,37],[36,2,42,0,"customDirectEventTypes"],[36,48,42,22],[36,49,42,23,"topGestureHandlerEvent"],[36,71,42,45],[36,74,42,48],[37,4,43,2,"registrationName"],[37,20,43,18],[37,22,43,20],[38,2,44,0],[38,3,44,1],[39,2,46,0],[39,6,46,6,"customGHEventsConfigFabricAndroid"],[39,39,46,39],[39,42,46,42],[40,4,47,2,"topOnGestureHandlerEvent"],[40,28,47,26],[40,30,47,28],[41,6,47,30,"registrationName"],[41,22,47,46],[41,24,47,48],[42,4,47,72],[42,5,47,73],[43,4,48,2,"topOnGestureHandlerStateChange"],[43,34,48,32],[43,36,48,34],[44,6,49,4,"registrationName"],[44,22,49,20],[44,24,49,22],[45,4,50,2],[46,2,51,0],[46,3,51,1],[47,2,53,0],[47,6,53,6,"customGHEventsConfig"],[47,26,53,26],[47,29,53,26,"Object"],[47,35,53,26],[47,36,53,26,"assign"],[47,42,53,26],[48,4,54,2,"onGestureHandlerEvent"],[48,25,54,23],[48,27,54,25],[49,6,54,27,"registrationName"],[49,22,54,43],[49,24,54,45],[50,4,54,69],[50,5,54,70],[51,4,55,2,"onGestureHandlerStateChange"],[51,31,55,29],[51,33,55,31],[52,6,56,4,"registrationName"],[52,22,56,20],[52,24,56,22],[53,4,57,2],[54,2,57,3],[54,5,67,6],[54,9,67,6,"isFabric"],[54,25,67,14],[54,27,67,15],[54,28,67,16],[54,32,68,4,"Platform"],[54,53,68,12],[54,54,68,13,"OS"],[54,56,68,15],[54,61,68,20],[54,70,68,29],[54,74,69,4,"customGHEventsConfigFabricAndroid"],[54,107,69,37],[54,108,70,1],[56,2,72,0],[57,2,73,0],[58,2,74,0],[59,2,75,0],[60,2,76,0,"UIManagerAny"],[60,14,76,12],[60,15,76,13,"genericDirectEventTypes"],[60,38,76,36],[60,41,76,36,"Object"],[60,47,76,36],[60,48,76,36,"assign"],[60,54,76,36],[60,59,77,5,"UIManagerAny"],[60,71,77,17],[60,72,77,18,"genericDirectEventTypes"],[60,95,77,41],[60,97,78,5,"customGHEventsConfig"],[60,117,78,25],[60,118,79,1],[61,2,80,0],[62,2,81,0],[63,2,82,0],[64,2,83,0],[64,6,83,6,"UIManagerConstants"],[64,24,83,24],[64,28,83,24,"_UIManagerAny$getView"],[64,49,83,24],[64,52,84,2,"UIManagerAny"],[64,64,84,14],[64,65,84,15,"getViewManagerConfig"],[64,85,84,35],[64,105,84,2,"UIManagerAny"],[64,117,84,14],[64,118,84,15,"getViewManagerConfig"],[64,138,84,35],[64,139,84,38],[64,153,84,52],[64,154,84,53],[64,166,84,53,"_UIManagerAny$getView"],[64,187,84,53],[64,190,85,2,"UIManagerAny"],[64,202,85,14],[64,203,85,15,"getConstants"],[64,215,85,27],[64,235,85,2,"UIManagerAny"],[64,247,85,14],[64,248,85,15,"getConstants"],[64,260,85,27],[64,261,85,30],[64,262,85,31],[65,2,87,0],[65,6,87,4,"UIManagerConstants"],[65,24,87,22],[65,26,87,24],[66,4,88,2,"UIManagerConstants"],[66,22,88,20],[66,23,88,21,"genericDirectEventTypes"],[66,46,88,44],[66,49,88,44,"Object"],[66,55,88,44],[66,56,88,44,"assign"],[66,62,88,44],[66,67,89,7,"UIManagerConstants"],[66,85,89,25],[66,86,89,26,"genericDirectEventTypes"],[66,109,89,49],[66,111,90,7,"customGHEventsConfig"],[66,131,90,27],[66,132,91,3],[67,2,92,0],[69,2,94,0],[70,2,95,0],[70,6,95,0,"_UIManagerAny$setJSRe"],[70,27,95,0],[70,30,102,4,"UIManagerAny"],[70,42,102,16],[70,43,96,2,"setJSResponder"],[70,57,96,16],[71,4,96,18,"oldSetJSResponder"],[71,21,96,35],[71,24,96,35,"_UIManagerAny$setJSRe"],[71,45,96,35],[71,59,96,38],[71,71,96,44],[72,6,97,4],[73,4,97,4],[73,5,98,3],[73,8,98,3,"_UIManagerAny$setJSRe"],[73,29,98,3],[74,4,98,3,"_UIManagerAny$clearJS"],[74,25,98,3],[74,28,102,4,"UIManagerAny"],[74,40,102,16],[74,41,99,2,"clearJSResponder"],[74,57,99,18],[75,4,99,20,"oldClearJSResponder"],[75,23,99,39],[75,26,99,39,"_UIManagerAny$clearJS"],[75,47,99,39],[75,61,99,42],[75,73,99,48],[76,6,100,4],[77,4,100,4],[77,5,101,3],[77,8,101,3,"_UIManagerAny$clearJS"],[77,29,101,3],[78,2,103,0,"UIManagerAny"],[78,14,103,12],[78,15,103,13,"setJSResponder"],[78,29,103,27],[78,32,103,30],[78,42,103,31,"tag"],[78,45,103,42],[78,47,103,44,"blockNativeResponder"],[78,67,103,73],[78,69,103,78],[79,4,104,2,"RNGestureHandlerModule"],[79,35,104,24],[79,36,104,25,"handleSetJSResponder"],[79,56,104,45],[79,57,104,46,"tag"],[79,60,104,49],[79,62,104,51,"blockNativeResponder"],[79,82,104,71],[79,83,104,72],[80,4,105,2,"oldSetJSResponder"],[80,21,105,19],[80,22,105,20,"tag"],[80,25,105,23],[80,27,105,25,"blockNativeResponder"],[80,47,105,45],[80,48,105,46],[81,2,106,0],[81,3,106,1],[82,2,107,0,"UIManagerAny"],[82,14,107,12],[82,15,107,13,"clearJSResponder"],[82,31,107,29],[82,34,107,32],[82,46,107,38],[83,4,108,2,"RNGestureHandlerModule"],[83,35,108,24],[83,36,108,25,"handleClearJSResponder"],[83,58,108,47],[83,59,108,48],[83,60,108,49],[84,4,109,2,"oldClearJSResponder"],[84,23,109,21],[84,24,109,22],[84,25,109,23],[85,2,110,0],[85,3,110,1],[86,2,112,0],[86,6,112,4,"allowTouches"],[86,18,112,16],[86,21,112,19],[86,25,112,23],[87,2,113,0],[87,6,113,6,"DEV_ON_ANDROID"],[87,20,113,20],[87,23,113,23,"__DEV__"],[87,30,113,30],[87,34,113,34,"Platform"],[87,55,113,42],[87,56,113,43,"OS"],[87,58,113,45],[87,63,113,50],[87,72,113,59],[88,2,114,0],[89,2,115,0],[90,2,116,0],[90,6,116,4,"DEV_ON_ANDROID"],[90,20,116,18],[90,22,116,20],[91,4,117,2,"DeviceEventEmitter"],[91,35,117,20],[91,36,117,21,"addListener"],[91,47,117,32],[91,48,117,33],[91,72,117,57],[91,74,117,59],[91,86,117,65],[92,6,118,4,"allowTouches"],[92,18,118,16],[92,21,118,19],[92,22,118,20,"allowTouches"],[92,34,118,32],[93,4,119,2],[93,5,119,3],[93,6,119,4],[94,2,120,0],[95,2,125,0],[95,11,125,9,"hasUnresolvedRefs"],[95,28,125,26,"hasUnresolvedRefs"],[95,29,126,2,"props"],[95,34,126,24],[95,36,127,2],[96,4,128,2],[97,4,129,2],[97,8,129,8,"extract"],[97,15,129,15],[97,18,129,18],[97,27,129,8,"extract"],[97,34,129,15,"extract"],[97,35,129,19,"refs"],[97,39,129,36],[97,41,129,41],[98,6,130,4],[98,10,130,8],[98,11,130,9,"Array"],[98,16,130,14],[98,17,130,15,"isArray"],[98,24,130,22],[98,25,130,23,"refs"],[98,29,130,27],[98,30,130,28],[98,32,130,30],[99,8,131,6],[99,15,131,13,"refs"],[99,19,131,17],[99,23,131,21,"refs"],[99,27,131,25],[99,28,131,26,"current"],[99,35,131,33],[99,40,131,38],[99,44,131,42],[100,6,132,4],[101,6,133,4],[101,13,133,11,"refs"],[101,17,133,15],[101,18,133,16,"some"],[101,22,133,20],[101,23,133,21],[101,33,133,22,"r"],[101,34,133,23],[102,8,133,23],[102,15,133,28,"r"],[102,16,133,29],[102,20,133,33,"r"],[102,21,133,34],[102,22,133,35,"current"],[102,29,133,42],[102,34,133,47],[102,38,133,51],[103,6,133,51],[103,8,133,52],[104,4,134,2],[104,5,134,3],[105,4,135,2],[105,11,135,9,"extract"],[105,18,135,16],[105,19,135,17,"props"],[105,24,135,22],[105,25,135,23],[105,47,135,45],[105,48,135,46],[105,49,135,47],[105,53,135,51,"extract"],[105,60,135,58],[105,61,135,59,"props"],[105,66,135,64],[105,67,135,65],[105,76,135,74],[105,77,135,75],[105,78,135,76],[106,2,136,0],[107,2,138,0],[107,6,138,6,"stateToPropMappings"],[107,25,138,25],[107,32,138,25,"_defineProperty2"],[107,48,138,25],[107,49,138,25,"default"],[107,56,138,25],[107,62,138,25,"_defineProperty2"],[107,78,138,25],[107,79,138,25,"default"],[107,86,138,25],[107,92,138,25,"_defineProperty2"],[107,108,138,25],[107,109,138,25,"default"],[107,116,138,25],[107,122,138,25,"_defineProperty2"],[107,138,138,25],[107,139,138,25,"default"],[107,146,138,25],[107,152,138,25,"_defineProperty2"],[107,168,138,25],[107,169,138,25,"default"],[107,176,138,25],[107,182,138,25,"_defineProperty2"],[107,198,138,25],[107,199,138,25,"default"],[107,206,138,25],[107,212,139,3,"State"],[107,224,139,8],[107,225,139,9,"UNDETERMINED"],[107,237,139,21],[107,239,139,24,"undefined"],[107,248,139,33],[107,251,140,3,"State"],[107,263,140,8],[107,264,140,9,"BEGAN"],[107,269,140,14],[107,271,140,17],[107,280,140,26],[107,283,141,3,"State"],[107,295,141,8],[107,296,141,9,"FAILED"],[107,302,141,15],[107,304,141,18],[107,314,141,28],[107,317,142,3,"State"],[107,329,142,8],[107,330,142,9,"CANCELLED"],[107,339,142,18],[107,341,142,21],[107,354,142,34],[107,357,143,3,"State"],[107,369,143,8],[107,370,143,9,"ACTIVE"],[107,376,143,15],[107,378,143,18],[107,391,143,31],[107,394,144,3,"State"],[107,406,144,8],[107,407,144,9,"END"],[107,410,144,12],[107,412,144,15],[107,421,144,24],[107,422,145,10],[109,2,156,0],[111,2,170,0],[111,6,170,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[111,33,170,33],[111,36,170,36],[111,37,170,37],[113,2,172,0],[114,2,173,15],[114,11,173,24,"createHandler"],[114,24,173,37,"createHandler"],[114,25,173,37,"_ref"],[114,29,173,37],[114,31,182,76],[115,4,182,76],[115,8,177,2,"name"],[115,12,177,6],[115,15,177,6,"_ref"],[115,19,177,6],[115,20,177,2,"name"],[115,24,177,6],[116,6,177,6,"_ref$allowedProps"],[116,23,177,6],[116,26,177,6,"_ref"],[116,30,177,6],[116,31,178,2,"allowedProps"],[116,43,178,14],[117,6,178,2,"allowedProps"],[117,18,178,14],[117,21,178,14,"_ref$allowedProps"],[117,38,178,14],[117,52,178,17],[117,54,178,19],[117,57,178,19,"_ref$allowedProps"],[117,74,178,19],[118,6,178,19,"_ref$config"],[118,17,178,19],[118,20,178,19,"_ref"],[118,24,178,19],[118,25,179,2,"config"],[118,31,179,8],[119,6,179,2,"config"],[119,12,179,8],[119,15,179,8,"_ref$config"],[119,26,179,8],[119,40,179,11],[119,41,179,12],[119,42,179,13],[119,45,179,13,"_ref$config"],[119,56,179,13],[120,6,180,2,"transformProps"],[120,20,180,16],[120,23,180,16,"_ref"],[120,27,180,16],[120,28,180,2,"transformProps"],[120,42,180,16],[121,6,180,16,"_ref$customNativeProp"],[121,27,180,16],[121,30,180,16,"_ref"],[121,34,180,16],[121,35,181,2,"customNativeProps"],[121,52,181,19],[122,6,181,2,"customNativeProps"],[122,23,181,19],[122,26,181,19,"_ref$customNativeProp"],[122,47,181,19],[122,61,181,22],[122,63,181,24],[122,66,181,24,"_ref$customNativeProp"],[122,87,181,24],[123,4,181,24],[123,8,186,8,"Handler"],[123,15,186,15],[123,41,186,15,"_React$Component"],[123,57,186,15],[124,6,201,4],[124,15,201,4,"Handler"],[124,23,201,16,"props"],[124,28,201,48],[124,30,201,50],[125,8,201,50],[125,12,201,50,"_this"],[125,17,201,50],[126,8,201,50],[126,12,201,50,"_classCallCheck2"],[126,28,201,50],[126,29,201,50,"default"],[126,36,201,50],[126,44,201,50,"Handler"],[126,51,201,50],[127,8,202,6,"_this"],[127,13,202,6],[127,16,202,6,"_callSuper"],[127,26,202,6],[127,33,202,6,"Handler"],[127,40,202,6],[127,43,202,12,"props"],[127,48,202,17],[128,8,202,19,"_this"],[128,13,202,19],[128,14,284,12,"onGestureHandlerEvent"],[128,35,284,33],[128,38,284,36],[128,48,284,37,"event"],[128,53,284,59],[128,55,284,64],[129,10,285,6],[129,14,285,10,"event"],[129,19,285,15],[129,20,285,16,"nativeEvent"],[129,31,285,27],[129,32,285,28,"handlerTag"],[129,42,285,38],[129,47,285,43,"_this"],[129,52,285,43],[129,53,285,48,"handlerTag"],[129,63,285,58],[129,65,285,60],[130,12,286,8],[130,16,286,12],[130,23,286,19,"_this"],[130,28,286,19],[130,29,286,24,"props"],[130,34,286,29],[130,35,286,30,"onGestureEvent"],[130,49,286,44],[130,54,286,49],[130,64,286,59],[130,66,286,61],[131,14,287,10,"_this"],[131,19,287,10],[131,20,287,15,"props"],[131,25,287,20],[131,26,287,21,"onGestureEvent"],[131,40,287,35],[131,52,287,10,"_this"],[131,57,287,10],[131,58,287,15,"props"],[131,63,287,20],[131,64,287,21,"onGestureEvent"],[131,78,287,35],[131,79,287,38,"event"],[131,84,287,43],[131,85,287,44],[132,12,288,8],[133,10,289,6],[133,11,289,7],[133,17,289,13],[134,12,290,8,"_this"],[134,17,290,8],[134,18,290,13,"props"],[134,23,290,18],[134,24,290,19,"onGestureHandlerEvent"],[134,45,290,40],[134,57,290,8,"_this"],[134,62,290,8],[134,63,290,13,"props"],[134,68,290,18],[134,69,290,19,"onGestureHandlerEvent"],[134,90,290,40],[134,91,290,43,"event"],[134,96,290,48],[134,97,290,49],[135,10,291,6],[136,8,292,4],[136,9,292,5],[137,8,294,4],[138,8,294,4,"_this"],[138,13,294,4],[138,14,295,12,"onGestureHandlerStateChange"],[138,41,295,39],[138,44,295,42],[138,54,296,6,"event"],[138,59,296,39],[138,61,297,9],[139,10,298,6],[139,14,298,10,"event"],[139,19,298,15],[139,20,298,16,"nativeEvent"],[139,31,298,27],[139,32,298,28,"handlerTag"],[139,42,298,38],[139,47,298,43,"_this"],[139,52,298,43],[139,53,298,48,"handlerTag"],[139,63,298,58],[139,65,298,60],[140,12,299,8],[140,16,299,12],[140,23,299,19,"_this"],[140,28,299,19],[140,29,299,24,"props"],[140,34,299,29],[140,35,299,30,"onHandlerStateChange"],[140,55,299,50],[140,60,299,55],[140,70,299,65],[140,72,299,67],[141,14,300,10,"_this"],[141,19,300,10],[141,20,300,15,"props"],[141,25,300,20],[141,26,300,21,"onHandlerStateChange"],[141,46,300,41],[141,58,300,10,"_this"],[141,63,300,10],[141,64,300,15,"props"],[141,69,300,20],[141,70,300,21,"onHandlerStateChange"],[141,90,300,41],[141,91,300,44,"event"],[141,96,300,49],[141,97,300,50],[142,12,301,8],[143,12,303,8],[143,16,303,14,"state"],[143,21,303,42],[143,24,303,45,"event"],[143,29,303,50],[143,30,303,51,"nativeEvent"],[143,41,303,62],[143,42,303,63,"state"],[143,47,303,68],[144,12,304,8],[144,16,304,14,"stateEventName"],[144,30,304,28],[144,33,304,31,"stateToPropMappings"],[144,52,304,50],[144,53,304,51,"state"],[144,58,304,56],[144,59,304,57],[145,12,305,8],[145,16,305,14,"eventHandler"],[145,28,305,26],[145,31,305,29,"stateEventName"],[145,45,305,43],[145,49,305,47,"_this"],[145,54,305,47],[145,55,305,52,"props"],[145,60,305,57],[145,61,305,58,"stateEventName"],[145,75,305,72],[145,76,305,73],[146,12,306,8],[146,16,306,12,"eventHandler"],[146,28,306,24],[146,32,306,28],[146,39,306,35,"eventHandler"],[146,51,306,47],[146,56,306,52],[146,66,306,62],[146,68,306,64],[147,14,307,10,"eventHandler"],[147,26,307,22],[147,27,307,23,"event"],[147,32,307,28],[147,33,307,29],[148,12,308,8],[149,10,309,6],[149,11,309,7],[149,17,309,13],[150,12,310,8,"_this"],[150,17,310,8],[150,18,310,13,"props"],[150,23,310,18],[150,24,310,19,"onGestureHandlerStateChange"],[150,51,310,46],[150,63,310,8,"_this"],[150,68,310,8],[150,69,310,13,"props"],[150,74,310,18],[150,75,310,19,"onGestureHandlerStateChange"],[150,102,310,46],[150,103,310,49,"event"],[150,108,310,54],[150,109,310,55],[151,10,311,6],[152,8,312,4],[152,9,312,5],[153,8,312,5,"_this"],[153,13,312,5],[153,14,314,12,"refHandler"],[153,24,314,22],[153,27,314,25],[153,37,314,26,"node"],[153,41,314,35],[153,43,314,40],[154,10,314,40],[154,14,314,40,"_props"],[154,20,314,40],[155,10,315,6,"_this"],[155,15,315,6],[155,16,315,11,"viewNode"],[155,24,315,19],[155,27,315,22,"node"],[155,31,315,26],[156,10,317,6],[156,14,317,12,"child"],[156,19,317,17],[156,22,317,20,"React"],[156,27,317,25],[156,28,317,26,"Children"],[156,36,317,34],[156,37,317,35,"only"],[156,41,317,39],[156,42,317,40,"_this"],[156,47,317,40],[156,48,317,45,"props"],[156,53,317,50],[156,54,317,51,"children"],[156,62,317,59],[156,63,317,60],[157,10,318,6],[158,10,319,6],[159,10,320,6],[159,14,320,12,"ref"],[159,17,320,15],[159,20,320,18],[159,24,320,18,"isReact19"],[159,41,320,27],[159,43,320,28],[159,44,320,29],[159,48,320,29,"_props"],[159,54,320,29],[159,57,320,33,"child"],[159,62,320,38],[159,63,320,56,"props"],[159,68,320,61],[159,89,320,32,"_props"],[159,95,320,32],[159,96,320,63,"ref"],[159,99,320,66],[159,102,320,69,"child"],[159,107,320,74],[159,127,320,69,"child"],[159,132,320,74],[159,133,320,76,"ref"],[159,136,320,79],[160,10,322,6],[160,14,322,10],[160,15,322,11,"ref"],[160,18,322,14],[160,20,322,16],[161,12,323,8],[162,10,324,6],[163,10,326,6],[163,14,326,10],[163,21,326,17,"ref"],[163,24,326,20],[163,29,326,25],[163,39,326,35],[163,41,326,37],[164,12,327,8,"ref"],[164,15,327,11],[164,16,327,12,"node"],[164,20,327,16],[164,21,327,17],[165,10,328,6],[165,11,328,7],[165,17,328,13],[166,12,329,8,"ref"],[166,15,329,11],[166,16,329,12,"current"],[166,23,329,19],[166,26,329,22,"node"],[166,30,329,26],[167,10,330,6],[168,8,331,4],[168,9,331,5],[169,8,331,5,"_this"],[169,13,331,5],[169,14,333,12,"createGestureHandler"],[169,34,333,32],[169,37,333,35],[169,47,334,6,"newConfig"],[169,56,334,50],[169,58,335,9],[170,10,336,6,"_this"],[170,15,336,6],[170,16,336,11,"config"],[170,22,336,17],[170,25,336,20,"newConfig"],[170,34,336,29],[171,10,338,6,"RNGestureHandlerModule"],[171,41,338,28],[171,42,338,29,"createGestureHandler"],[171,62,338,49],[171,63,339,8,"name"],[171,67,339,12],[171,69,340,8,"_this"],[171,74,340,8],[171,75,340,13,"handlerTag"],[171,85,340,23],[171,87,341,8,"newConfig"],[171,96,342,6],[171,97,342,7],[172,8,343,4],[172,9,343,5],[173,8,343,5,"_this"],[173,13,343,5],[173,14,345,12,"attachGestureHandler"],[173,34,345,32],[173,37,345,35],[173,47,345,36,"newViewTag"],[173,57,345,54],[173,59,345,59],[174,10,346,6,"_this"],[174,15,346,6],[174,16,346,11,"viewTag"],[174,23,346,18],[174,26,346,21,"newViewTag"],[174,36,346,31],[175,10,348,6],[175,14,348,10,"Platform"],[175,35,348,18],[175,36,348,19,"OS"],[175,38,348,21],[175,43,348,26],[175,48,348,31],[175,50,348,33],[176,12,349,8],[177,12,351,10,"RNGestureHandlerModule"],[177,43,351,32],[177,44,351,33,"attachGestureHandler"],[177,64,351,53],[177,65,353,10,"_this"],[177,70,353,10],[177,71,353,15,"handlerTag"],[177,81,353,25],[177,83,354,10,"newViewTag"],[177,93,354,20],[177,95,355,10,"ActionType"],[177,117,355,20],[177,118,355,21,"JS_FUNCTION_OLD_API"],[177,137,355,40],[178,12,355,42],[179,12,356,10,"_this"],[179,17,356,10],[179,18,356,15,"propsRef"],[179,26,357,8],[179,27,357,9],[180,10,358,6],[180,11,358,7],[180,17,358,13],[181,12,359,8],[181,16,359,8,"registerOldGestureHandler"],[181,59,359,33],[181,61,359,34,"_this"],[181,66,359,34],[181,67,359,39,"handlerTag"],[181,77,359,49],[181,79,359,51],[182,14,360,10,"onGestureEvent"],[182,28,360,24],[182,30,360,26,"_this"],[182,35,360,26],[182,36,360,31,"onGestureHandlerEvent"],[182,57,360,52],[183,14,361,10,"onGestureStateChange"],[183,34,361,30],[183,36,361,32,"_this"],[183,41,361,32],[183,42,361,37,"onGestureHandlerStateChange"],[184,12,362,8],[184,13,362,9],[184,14,362,10],[185,12,364,8],[185,16,364,14,"actionType"],[185,26,364,24],[185,29,364,28],[185,39,364,28,"_this$props"],[185,50,364,28],[185,52,364,28,"_this$props2"],[185,64,364,28],[185,66,364,34],[186,14,365,10],[186,18,365,16,"onGestureEvent"],[186,32,365,30],[186,36,365,30,"_this$props"],[186,47,365,30],[186,50,365,33,"_this"],[186,55,365,33],[186,56,365,38,"props"],[186,61,365,43],[186,82,365,33,"_this$props"],[186,93,365,33],[186,94,365,45,"onGestureEvent"],[186,108,365,59],[187,14,366,10],[187,18,366,16,"isGestureHandlerWorklet"],[187,41,366,39],[187,44,367,12,"onGestureEvent"],[187,58,367,26],[187,63,368,13],[187,72,368,22],[187,76,368,26,"onGestureEvent"],[187,90,368,40],[187,94,369,14],[187,115,369,35],[187,119,369,39,"onGestureEvent"],[187,133,369,53],[187,134,369,54],[188,14,370,10],[188,18,370,16,"onHandlerStateChange"],[188,38,370,36],[188,42,370,36,"_this$props2"],[188,54,370,36],[188,57,370,39,"_this"],[188,62,370,39],[188,63,370,44,"props"],[188,68,370,49],[188,89,370,39,"_this$props2"],[188,101,370,39],[188,102,370,51,"onHandlerStateChange"],[188,122,370,71],[189,14,371,10],[189,18,371,16,"isStateChangeHandlerWorklet"],[189,45,371,43],[189,48,372,12,"onHandlerStateChange"],[189,68,372,32],[189,73,373,13],[189,82,373,22],[189,86,373,26,"onHandlerStateChange"],[189,106,373,46],[189,110,374,14],[189,131,374,35],[189,135,374,39,"onHandlerStateChange"],[189,155,374,59],[189,156,374,60],[190,14,375,10],[190,18,375,16,"isReanimatedHandler"],[190,37,375,35],[190,40,376,12,"isGestureHandlerWorklet"],[190,63,376,35],[190,67,376,39,"isStateChangeHandlerWorklet"],[190,94,376,66],[191,14,377,10],[191,18,377,14,"isReanimatedHandler"],[191,37,377,33],[191,39,377,35],[192,16,378,12],[193,16,379,12],[193,23,379,19,"ActionType"],[193,45,379,29],[193,46,379,30,"REANIMATED_WORKLET"],[193,64,379,48],[194,14,380,10],[194,15,380,11],[194,21,380,17],[194,25,380,21,"onGestureEvent"],[194,39,380,35],[194,43,380,39],[194,55,380,51],[194,59,380,55,"onGestureEvent"],[194,73,380,69],[194,75,380,71],[195,16,381,12],[196,16,382,12],[196,23,382,19,"ActionType"],[196,45,382,29],[196,46,382,30,"NATIVE_ANIMATED_EVENT"],[196,67,382,51],[197,14,383,10],[197,15,383,11],[197,21,383,17],[198,16,384,12],[199,16,385,12],[199,23,385,19,"ActionType"],[199,45,385,29],[199,46,385,30,"JS_FUNCTION_OLD_API"],[199,65,385,49],[200,14,386,10],[201,12,387,8],[201,13,387,9],[201,14,387,11],[201,15,387,12],[202,12,389,8,"RNGestureHandlerModule"],[202,43,389,30],[202,44,389,31,"attachGestureHandler"],[202,64,389,51],[202,65,390,10,"_this"],[202,70,390,10],[202,71,390,15,"handlerTag"],[202,81,390,25],[202,83,391,10,"newViewTag"],[202,93,391,20],[202,95,392,10,"actionType"],[202,105,393,8],[202,106,393,9],[203,10,394,6],[204,10,396,6],[204,14,396,6,"scheduleFlushOperations"],[204,44,396,29],[204,46,396,30],[204,47,396,31],[205,10,398,6],[205,14,398,6,"ghQueueMicrotask"],[205,48,398,22],[205,50,398,23],[205,62,398,29],[206,12,399,8,"MountRegistry"],[206,40,399,21],[206,41,399,22,"gestureHandlerWillMount"],[206,64,399,45],[206,65,399,45,"_this"],[206,70,399,50],[206,71,399,51],[207,10,400,6],[207,11,400,7],[207,12,400,8],[208,8,401,4],[208,9,401,5],[209,8,401,5,"_this"],[209,13,401,5],[209,14,403,12,"updateGestureHandler"],[209,34,403,32],[209,37,403,35],[209,47,404,6,"newConfig"],[209,56,404,50],[209,58,405,9],[210,10,406,6,"_this"],[210,15,406,6],[210,16,406,11,"config"],[210,22,406,17],[210,25,406,20,"newConfig"],[210,34,406,29],[211,10,408,6,"RNGestureHandlerModule"],[211,41,408,28],[211,42,408,29,"updateGestureHandler"],[211,62,408,49],[211,63,408,50,"_this"],[211,68,408,50],[211,69,408,55,"handlerTag"],[211,79,408,65],[211,81,408,67,"newConfig"],[211,90,408,76],[211,91,408,77],[212,10,409,6],[212,14,409,6,"scheduleFlushOperations"],[212,44,409,29],[212,46,409,30],[212,47,409,31],[213,8,410,4],[213,9,410,5],[214,8,203,6,"_this"],[214,13,203,6],[214,14,203,11,"handlerTag"],[214,24,203,21],[214,27,203,24],[214,31,203,24,"getNextHandlerTag"],[214,67,203,41],[214,69,203,42],[214,70,203,43],[215,8,204,6,"_this"],[215,13,204,6],[215,14,204,11,"config"],[215,20,204,17],[215,23,204,20],[215,24,204,21],[215,25,204,22],[216,8,205,6,"_this"],[216,13,205,6],[216,14,205,11,"propsRef"],[216,22,205,19],[216,38,205,22,"React"],[216,43,205,27],[216,44,205,28,"createRef"],[216,53,205,37],[216,54,205,38],[216,55,205,39],[217,8,206,6,"_this"],[217,13,206,6],[217,14,206,11,"isMountedRef"],[217,26,206,23],[217,42,206,26,"React"],[217,47,206,31],[217,48,206,32,"createRef"],[217,57,206,41],[217,58,206,42],[217,59,206,43],[218,8,207,6,"_this"],[218,13,207,6],[218,14,207,11,"state"],[218,19,207,16],[218,22,207,19],[219,10,207,21,"allowTouches"],[219,22,207,33],[219,24,207,21,"allowTouches"],[220,8,207,34],[220,9,207,35],[221,8,208,6],[221,12,208,10,"props"],[221,17,208,15],[221,18,208,16,"id"],[221,20,208,18],[221,22,208,20],[222,10,209,8],[222,14,209,12,"handlerIDToTag"],[222,46,209,26],[222,47,209,27,"props"],[222,52,209,32],[222,53,209,33,"id"],[222,55,209,35],[222,56,209,36],[222,61,209,41,"undefined"],[222,70,209,50],[222,72,209,52],[223,12,210,10],[223,18,210,16],[223,22,210,20,"Error"],[223,27,210,25],[223,28,210,26],[223,48,210,46,"props"],[223,53,210,51],[223,54,210,52,"id"],[223,56,210,54],[223,78,210,76],[223,79,210,77],[224,10,211,8],[225,10,212,8,"handlerIDToTag"],[225,42,212,22],[225,43,212,23,"props"],[225,48,212,28],[225,49,212,29,"id"],[225,51,212,31],[225,52,212,32],[225,55,212,35,"_this"],[225,60,212,35],[225,61,212,40,"handlerTag"],[225,71,212,50],[226,8,213,6],[227,8,213,7],[227,15,213,7,"_this"],[227,20,213,7],[228,6,214,4],[229,6,214,5],[229,10,214,5,"_inherits2"],[229,20,214,5],[229,21,214,5,"default"],[229,28,214,5],[229,30,214,5,"Handler"],[229,37,214,5],[229,39,214,5,"_React$Component"],[229,55,214,5],[230,6,214,5],[230,17,214,5,"_createClass2"],[230,30,214,5],[230,31,214,5,"default"],[230,38,214,5],[230,40,214,5,"Handler"],[230,47,214,5],[231,8,214,5,"key"],[231,11,214,5],[232,8,214,5,"value"],[232,13,214,5],[232,15,216,4],[232,24,216,4,"componentDidMount"],[232,41,216,21,"componentDidMount"],[232,42,216,21],[232,44,216,24],[233,10,216,24],[233,14,216,24,"_this2"],[233,20,216,24],[234,10,217,6],[234,14,217,12,"props"],[234,19,217,34],[234,22,217,37],[234,26,217,41],[234,27,217,42,"props"],[234,32,217,47],[235,10,218,6],[235,14,218,10],[235,15,218,11,"isMountedRef"],[235,27,218,23],[235,28,218,24,"current"],[235,35,218,31],[235,38,218,34],[235,42,218,38],[236,10,220,6],[236,14,220,10,"DEV_ON_ANDROID"],[236,28,220,24],[236,30,220,26],[237,12,221,8],[237,16,221,12],[237,17,221,13,"inspectorToggleListener"],[237,40,221,36],[237,43,221,39,"DeviceEventEmitter"],[237,74,221,57],[237,75,221,58,"addListener"],[237,86,221,69],[237,87,222,10],[237,111,222,34],[237,113,223,10],[237,125,223,16],[238,14,224,12,"_this2"],[238,20,224,16],[238,21,224,17,"setState"],[238,29,224,25],[238,30,224,26],[238,40,224,27,"_"],[238,41,224,28],[239,16,224,28],[239,23,224,34],[240,18,224,36,"allowTouches"],[240,30,224,48],[240,32,224,36,"allowTouches"],[241,16,224,49],[241,17,224,50],[242,14,224,50],[242,15,224,51],[242,16,224,52],[243,14,225,12,"_this2"],[243,20,225,16],[243,21,225,17,"update"],[243,27,225,23],[243,28,225,24,"UNRESOLVED_REFS_RETRY_LIMIT"],[243,55,225,51],[243,56,225,52],[244,12,226,10],[244,13,227,8],[244,14,227,9],[245,10,228,6],[246,10,229,6],[246,14,229,10,"hasUnresolvedRefs"],[246,31,229,27],[246,32,229,28,"props"],[246,37,229,33],[246,38,229,34],[246,40,229,36],[247,12,230,8],[248,12,231,8],[249,12,232,8],[250,12,233,8],[251,12,234,8],[252,12,235,8],[253,12,236,8],[253,16,236,8,"ghQueueMicrotask"],[253,50,236,24],[253,52,236,25],[253,64,236,31],[254,14,237,10,"_this2"],[254,20,237,14],[254,21,237,15,"update"],[254,27,237,21],[254,28,237,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[254,55,237,49],[254,56,237,50],[255,12,238,8],[255,13,238,9],[255,14,238,10],[256,10,239,6],[257,10,241,6],[257,14,241,10],[257,15,241,11,"createGestureHandler"],[257,35,241,31],[257,36,242,8],[257,40,242,8,"filterConfig"],[257,59,242,20],[257,61,243,10,"transformProps"],[257,75,243,24],[257,78,243,27,"transformProps"],[257,92,243,41],[257,93,243,42],[257,97,243,46],[257,98,243,47,"props"],[257,103,243,52],[257,104,243,53],[257,107,243,56],[257,111,243,60],[257,112,243,61,"props"],[257,117,243,66],[257,122,243,66,"concat"],[257,128,243,66],[257,133,243,66,"_toConsumableArray2"],[257,152,243,66],[257,153,243,66,"default"],[257,160,243,66],[257,162,244,14,"allowedProps"],[257,174,244,26],[257,181,244,26,"_toConsumableArray2"],[257,200,244,26],[257,201,244,26,"default"],[257,208,244,26],[257,210,244,31,"customNativeProps"],[257,227,244,48],[257,231,245,10,"config"],[257,237,246,8],[257,238,247,6],[257,239,247,7],[258,10,249,6],[258,14,249,10],[258,15,249,11],[258,19,249,15],[258,20,249,16,"viewNode"],[258,28,249,24],[258,30,249,26],[259,12,250,8],[259,18,250,14],[259,22,250,18,"Error"],[259,27,250,23],[259,28,251,10],[259,75,251,57,"Handler"],[259,82,251,64],[259,83,251,65,"displayName"],[259,94,251,76],[259,154,252,8],[259,155,252,9],[260,10,253,6],[261,10,255,6],[261,14,255,10],[261,15,255,11,"attachGestureHandler"],[261,35,255,31],[261,36,255,32],[261,40,255,32,"findNodeHandle"],[261,63,255,46],[261,65,255,47],[261,69,255,51],[261,70,255,52,"viewNode"],[261,78,255,60],[261,79,255,71],[261,80,255,72],[261,81,255,73],[261,82,255,74],[262,8,256,4],[263,6,256,5],[264,8,256,5,"key"],[264,11,256,5],[265,8,256,5,"value"],[265,13,256,5],[265,15,258,4],[265,24,258,4,"componentDidUpdate"],[265,42,258,22,"componentDidUpdate"],[265,43,258,22],[265,45,258,25],[266,10,259,6],[266,14,259,12,"viewTag"],[266,21,259,19],[266,24,259,22],[266,28,259,22,"findNodeHandle"],[266,51,259,36],[266,53,259,37],[266,57,259,41],[266,58,259,42,"viewNode"],[266,66,259,50],[266,67,259,51],[267,10,260,6],[267,14,260,10],[267,18,260,14],[267,19,260,15,"viewTag"],[267,26,260,22],[267,31,260,27,"viewTag"],[267,38,260,34],[267,40,260,36],[268,12,261,8],[268,16,261,12],[268,17,261,13,"attachGestureHandler"],[268,37,261,33],[268,38,261,34,"viewTag"],[268,45,261,51],[268,46,261,52],[268,47,261,53],[268,48,261,54],[269,10,262,6],[270,10,263,6],[270,14,263,10],[270,15,263,11,"update"],[270,21,263,17],[270,22,263,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[270,49,263,45],[270,50,263,46],[271,8,264,4],[272,6,264,5],[273,8,264,5,"key"],[273,11,264,5],[274,8,264,5,"value"],[274,13,264,5],[274,15,266,4],[274,24,266,4,"componentWillUnmount"],[274,44,266,24,"componentWillUnmount"],[274,45,266,24],[274,47,266,27],[275,10,266,27],[275,14,266,27,"_this$inspectorToggle"],[275,35,266,27],[276,10,267,6],[276,11,267,6,"_this$inspectorToggle"],[276,32,267,6],[276,39,267,10],[276,40,267,11,"inspectorToggleListener"],[276,63,267,34],[276,76,267,6,"_this$inspectorToggle"],[276,97,267,6],[276,98,267,36,"remove"],[276,104,267,42],[276,105,267,43],[276,106,267,44],[277,10,268,6],[277,14,268,10],[277,15,268,11,"isMountedRef"],[277,27,268,23],[277,28,268,24,"current"],[277,35,268,31],[277,38,268,34],[277,43,268,39],[278,10,269,6],[278,14,269,10,"Platform"],[278,35,269,18],[278,36,269,19,"OS"],[278,38,269,21],[278,43,269,26],[278,48,269,31],[278,50,269,33],[279,12,270,8],[279,16,270,8,"unregisterOldGestureHandler"],[279,61,270,35],[279,63,270,36],[279,67,270,40],[279,68,270,41,"handlerTag"],[279,78,270,51],[279,79,270,52],[280,10,271,6],[281,10,272,6,"RNGestureHandlerModule"],[281,41,272,28],[281,42,272,29,"dropGestureHandler"],[281,60,272,47],[281,61,272,48],[281,65,272,52],[281,66,272,53,"handlerTag"],[281,76,272,63],[281,77,272,64],[282,10,273,6],[282,14,273,6,"scheduleFlushOperations"],[282,44,273,29],[282,46,273,30],[282,47,273,31],[283,10,274,6],[284,10,275,6],[284,14,275,12,"handlerID"],[284,23,275,41],[284,26,275,44],[284,30,275,48],[284,31,275,49,"props"],[284,36,275,54],[284,37,275,55,"id"],[284,39,275,57],[285,10,276,6],[285,14,276,10,"handlerID"],[285,23,276,19],[285,25,276,21],[286,12,277,8],[287,12,278,8],[287,19,278,15,"handlerIDToTag"],[287,51,278,29],[287,52,278,30,"handlerID"],[287,61,278,39],[287,62,278,40],[288,10,279,6],[289,10,281,6,"MountRegistry"],[289,38,281,19],[289,39,281,20,"gestureHandlerWillUnmount"],[289,64,281,45],[289,65,281,46],[289,69,281,50],[289,70,281,51],[290,8,282,4],[291,6,282,5],[292,8,282,5,"key"],[292,11,282,5],[293,8,282,5,"value"],[293,13,282,5],[293,15,412,4],[293,24,412,12,"update"],[293,30,412,18,"update"],[293,31,412,19,"remainingTries"],[293,45,412,41],[293,47,412,43],[294,10,412,43],[294,14,412,43,"_this3"],[294,20,412,43],[295,10,413,6],[295,14,413,10],[295,15,413,11],[295,19,413,15],[295,20,413,16,"isMountedRef"],[295,32,413,28],[295,33,413,29,"current"],[295,40,413,36],[295,42,413,38],[296,12,414,8],[297,10,415,6],[298,10,417,6],[298,14,417,12,"props"],[298,19,417,34],[298,22,417,37],[298,26,417,41],[298,27,417,42,"props"],[298,32,417,47],[300,10,419,6],[301,10,420,6],[302,10,421,6],[303,10,422,6],[303,14,422,10,"hasUnresolvedRefs"],[303,31,422,27],[303,32,422,28,"props"],[303,37,422,33],[303,38,422,34],[303,42,422,38,"remainingTries"],[303,56,422,52],[303,59,422,55],[303,60,422,56],[303,62,422,58],[304,12,423,8],[304,16,423,8,"ghQueueMicrotask"],[304,50,423,24],[304,52,423,25],[304,64,423,31],[305,14,424,10,"_this3"],[305,20,424,14],[305,21,424,15,"update"],[305,27,424,21],[305,28,424,22,"remainingTries"],[305,42,424,36],[305,45,424,39],[305,46,424,40],[305,47,424,41],[306,12,425,8],[306,13,425,9],[306,14,425,10],[307,10,426,6],[307,11,426,7],[307,17,426,13],[308,12,427,8],[308,16,427,14,"newConfig"],[308,25,427,23],[308,28,427,26],[308,32,427,26,"filterConfig"],[308,51,427,38],[308,53,428,10,"transformProps"],[308,67,428,24],[308,70,428,27,"transformProps"],[308,84,428,41],[308,85,428,42],[308,89,428,46],[308,90,428,47,"props"],[308,95,428,52],[308,96,428,53],[308,99,428,56],[308,103,428,60],[308,104,428,61,"props"],[308,109,428,66],[308,114,428,66,"concat"],[308,120,428,66],[308,125,428,66,"_toConsumableArray2"],[308,144,428,66],[308,145,428,66,"default"],[308,152,428,66],[308,154,429,14,"allowedProps"],[308,166,429,26],[308,173,429,26,"_toConsumableArray2"],[308,192,429,26],[308,193,429,26,"default"],[308,200,429,26],[308,202,429,31,"customNativeProps"],[308,219,429,48],[308,223,430,10,"config"],[308,229,431,8],[308,230,431,9],[309,12,432,8],[309,16,432,12],[309,17,432,13],[309,21,432,13,"deepEqual"],[309,38,432,22],[309,40,432,23],[309,44,432,27],[309,45,432,28,"config"],[309,51,432,34],[309,53,432,36,"newConfig"],[309,62,432,45],[309,63,432,46],[309,65,432,48],[310,14,433,10],[310,18,433,14],[310,19,433,15,"updateGestureHandler"],[310,39,433,35],[310,40,433,36,"newConfig"],[310,49,433,45],[310,50,433,46],[311,12,434,8],[312,10,435,6],[313,8,436,4],[314,6,436,5],[315,8,436,5,"key"],[315,11,436,5],[316,8,436,5,"value"],[316,13,436,5],[316,15,438,4],[316,24,438,4,"setNativeProps"],[316,38,438,18,"setNativeProps"],[316,39,438,19,"updates"],[316,46,438,31],[316,48,438,33],[317,10,439,6],[317,14,439,12,"mergedProps"],[317,25,439,23],[317,28,439,23,"Object"],[317,34,439,23],[317,35,439,23,"assign"],[317,41,439,23],[317,46,439,31],[317,50,439,35],[317,51,439,36,"props"],[317,56,439,41],[317,58,439,46,"updates"],[317,65,439,53],[317,66,439,55],[318,10,440,6],[318,14,440,12,"newConfig"],[318,23,440,21],[318,26,440,24],[318,30,440,24,"filterConfig"],[318,49,440,36],[318,51,441,8,"transformProps"],[318,65,441,22],[318,68,441,25,"transformProps"],[318,82,441,39],[318,83,441,40,"mergedProps"],[318,94,441,51],[318,95,441,52],[318,98,441,55,"mergedProps"],[318,109,441,66],[318,114,441,66,"concat"],[318,120,441,66],[318,125,441,66,"_toConsumableArray2"],[318,144,441,66],[318,145,441,66,"default"],[318,152,441,66],[318,154,442,12,"allowedProps"],[318,166,442,24],[318,173,442,24,"_toConsumableArray2"],[318,192,442,24],[318,193,442,24,"default"],[318,200,442,24],[318,202,442,29,"customNativeProps"],[318,219,442,46],[318,223,443,8,"config"],[318,229,444,6],[318,230,444,7],[319,10,445,6],[319,14,445,10],[319,15,445,11,"updateGestureHandler"],[319,35,445,31],[319,36,445,32,"newConfig"],[319,45,445,41],[319,46,445,42],[320,8,446,4],[321,6,446,5],[322,8,446,5,"key"],[322,11,446,5],[323,8,446,5,"value"],[323,13,446,5],[323,15,448,4],[323,24,448,4,"render"],[323,30,448,10,"render"],[323,31,448,10],[323,33,448,13],[324,10,448,13],[324,14,448,13,"_this$props$testID"],[324,32,448,13],[325,10,449,6],[325,14,449,10,"__DEV__"],[325,21,449,17],[325,25,449,21],[325,26,449,22],[325,30,449,26],[325,31,449,27,"context"],[325,38,449,34],[325,42,449,38],[325,43,449,39],[325,47,449,39,"isTestEnv"],[325,64,449,48],[325,66,449,49],[325,67,449,50],[325,71,449,54,"Platform"],[325,92,449,62],[325,93,449,63,"OS"],[325,95,449,65],[325,100,449,70],[325,105,449,75],[325,107,449,77],[326,12,450,8],[326,18,450,14],[326,22,450,18,"Error"],[326,27,450,23],[326,28,451,10,"name"],[326,32,451,14],[326,35,452,12],[326,236,453,8],[326,237,453,9],[327,10,454,6],[328,10,456,6],[328,14,456,10,"gestureEventHandler"],[328,33,456,29],[328,36,456,32],[328,40,456,36],[328,41,456,37,"onGestureHandlerEvent"],[328,62,456,58],[329,10,457,6],[331,10,462,6],[331,14,462,6,"_this$props3"],[331,26,462,6],[331,29,463,8],[331,33,463,12],[331,34,463,13,"props"],[331,39,463,18],[332,12,462,14,"onGestureEvent"],[332,26,462,28],[332,29,462,28,"_this$props3"],[332,41,462,28],[332,42,462,14,"onGestureEvent"],[332,56,462,28],[333,12,462,30,"onGestureHandlerEvent"],[333,33,462,51],[333,36,462,51,"_this$props3"],[333,48,462,51],[333,49,462,30,"onGestureHandlerEvent"],[333,70,462,51],[334,10,464,6],[334,14,464,10,"onGestureEvent"],[334,28,464,24],[334,32,464,28],[334,39,464,35,"onGestureEvent"],[334,53,464,49],[334,58,464,54],[334,68,464,64],[334,70,464,66],[335,12,465,8],[336,12,466,8],[337,12,467,8],[338,12,468,8],[338,16,468,12,"onGestureHandlerEvent"],[338,37,468,33],[338,39,468,35],[339,14,469,10],[339,20,469,16],[339,24,469,20,"Error"],[339,29,469,25],[339,30,470,12],[339,103,471,10],[339,104,471,11],[340,12,472,8],[341,12,473,8,"gestureEventHandler"],[341,31,473,27],[341,34,473,30,"onGestureEvent"],[341,48,473,44],[342,10,474,6],[342,11,474,7],[342,17,474,13],[343,12,475,8],[343,16,476,10,"onGestureHandlerEvent"],[343,37,476,31],[343,41,477,10],[343,48,477,17,"onGestureHandlerEvent"],[343,69,477,38],[343,74,477,43],[343,84,477,53],[343,86,478,10],[344,14,479,10],[344,20,479,16],[344,24,479,20,"Error"],[344,29,479,25],[344,30,480,12],[344,103,481,10],[344,104,481,11],[345,12,482,8],[346,10,483,6],[347,10,485,6],[347,14,485,10,"gestureStateEventHandler"],[347,38,485,34],[347,41,485,37],[347,45,485,41],[347,46,485,42,"onGestureHandlerStateChange"],[347,73,485,69],[348,10,486,6],[350,10,491,6],[350,14,491,6,"_this$props4"],[350,26,491,6],[350,29,494,40],[350,33,494,44],[350,34,494,45,"props"],[350,39,494,50],[351,12,492,8,"onHandlerStateChange"],[351,32,492,28],[351,35,492,28,"_this$props4"],[351,47,492,28],[351,48,492,8,"onHandlerStateChange"],[351,68,492,28],[352,12,493,8,"onGestureHandlerStateChange"],[352,39,493,35],[352,42,493,35,"_this$props4"],[352,54,493,35],[352,55,493,8,"onGestureHandlerStateChange"],[352,82,493,35],[353,10,495,6],[353,14,495,10,"onHandlerStateChange"],[353,34,495,30],[353,38,495,34],[353,45,495,41,"onHandlerStateChange"],[353,65,495,61],[353,70,495,66],[353,80,495,76],[353,82,495,78],[354,12,496,8],[355,12,497,8],[356,12,498,8],[357,12,499,8],[357,16,499,12,"onGestureHandlerStateChange"],[357,43,499,39],[357,45,499,41],[358,14,500,10],[358,20,500,16],[358,24,500,20,"Error"],[358,29,500,25],[358,30,501,12],[358,103,502,10],[358,104,502,11],[359,12,503,8],[360,12,504,8,"gestureStateEventHandler"],[360,36,504,32],[360,39,504,35,"onHandlerStateChange"],[360,59,504,55],[361,10,505,6],[361,11,505,7],[361,17,505,13],[362,12,506,8],[362,16,507,10,"onGestureHandlerStateChange"],[362,43,507,37],[362,47,508,10],[362,54,508,17,"onGestureHandlerStateChange"],[362,81,508,44],[362,86,508,49],[362,96,508,59],[362,98,509,10],[363,14,510,10],[363,20,510,16],[363,24,510,20,"Error"],[363,29,510,25],[363,30,511,12],[363,103,512,10],[363,104,512,11],[364,12,513,8],[365,10,514,6],[366,10,515,6],[366,14,515,12,"events"],[366,20,515,18],[366,23,515,21],[367,12,516,8,"onGestureHandlerEvent"],[367,33,516,29],[367,35,516,31],[367,39,516,35],[367,40,516,36,"state"],[367,45,516,41],[367,46,516,42,"allowTouches"],[367,58,516,54],[367,61,517,12,"gestureEventHandler"],[367,80,517,31],[367,83,518,12,"undefined"],[367,92,518,21],[368,12,519,8,"onGestureHandlerStateChange"],[368,39,519,35],[368,41,519,37],[368,45,519,41],[368,46,519,42,"state"],[368,51,519,47],[368,52,519,48,"allowTouches"],[368,64,519,60],[368,67,520,12,"gestureStateEventHandler"],[368,91,520,36],[368,94,521,12,"undefined"],[369,10,522,6],[369,11,522,7],[370,10,524,6],[370,14,524,10],[370,15,524,11,"propsRef"],[370,23,524,19],[370,24,524,20,"current"],[370,31,524,27],[370,34,524,30,"events"],[370,40,524,36],[371,10,526,6],[371,14,526,10,"child"],[371,19,526,20],[371,22,526,23],[371,26,526,27],[372,10,527,6],[372,14,527,10],[373,12,528,8,"child"],[373,17,528,13],[373,20,528,16,"React"],[373,25,528,21],[373,26,528,22,"Children"],[373,34,528,30],[373,35,528,31,"only"],[373,39,528,35],[373,40,528,36],[373,44,528,40],[373,45,528,41,"props"],[373,50,528,46],[373,51,528,47,"children"],[373,59,528,55],[373,60,528,56],[374,10,529,6],[374,11,529,7],[374,12,529,8],[374,19,529,15,"e"],[374,20,529,16],[374,22,529,18],[375,12,530,8],[375,18,530,14],[375,22,530,18,"Error"],[375,27,530,23],[375,28,531,10],[375,32,531,10,"tagMessage"],[375,50,531,20],[375,52,532,12],[375,55,532,15,"name"],[375,59,532,19],[375,215,533,10],[375,216,534,8],[375,217,534,9],[376,10,535,6],[377,10,537,6],[377,14,537,10,"grandChildren"],[377,27,537,23],[377,30,537,26,"child"],[377,35,537,31],[377,36,537,32,"props"],[377,41,537,37],[377,42,537,38,"children"],[377,50,537,46],[378,10,538,6],[378,14,539,8,"__DEV__"],[378,21,539,15],[378,25,540,8,"child"],[378,30,540,13],[378,31,540,14,"type"],[378,35,540,18],[378,40,541,9,"child"],[378,45,541,14],[378,46,541,15,"type"],[378,50,541,19],[378,55,541,24],[378,79,541,48],[378,83,542,10,"child"],[378,88,542,15],[378,89,542,16,"type"],[378,93,542,20],[378,94,542,21,"name"],[378,98,542,25],[378,103,542,30],[378,109,542,36],[378,113,543,10,"child"],[378,118,543,15],[378,119,543,16,"type"],[378,123,543,20],[378,124,543,21,"displayName"],[378,135,543,32],[378,140,543,37],[378,146,543,43],[378,147,543,44],[378,149,544,8],[379,12,545,8,"grandChildren"],[379,25,545,21],[379,28,545,24,"React"],[379,33,545,29],[379,34,545,30,"Children"],[379,42,545,38],[379,43,545,39,"toArray"],[379,50,545,46],[379,51,545,47,"grandChildren"],[379,64,545,60],[379,65,545,61],[380,12,546,8,"grandChildren"],[380,25,546,21],[380,26,546,22,"push"],[380,30,546,26],[380,44,547,10],[380,48,547,10,"_jsxDevRuntime"],[380,62,547,10],[380,63,547,10,"jsxDEV"],[380,69,547,10],[380,71,547,11,"_PressabilityDebugView"],[380,93,547,11],[380,94,547,11,"PressabilityDebugView"],[380,115,547,32],[381,14,549,12,"color"],[381,19,549,17],[381,21,549,18],[381,40,549,37],[382,14,550,12,"hitSlop"],[382,21,550,19],[382,23,550,21,"child"],[382,28,550,26],[382,29,550,27,"props"],[382,34,550,32],[382,35,550,33,"hitSlop"],[383,12,550,41],[383,15,548,16],[383,38,548,39],[384,14,548,39,"fileName"],[384,22,548,39],[384,24,548,39,"_jsxFileName"],[384,36,548,39],[385,14,548,39,"lineNumber"],[385,24,548,39],[386,14,548,39,"columnNumber"],[386,26,548,39],[387,12,548,39],[387,19,551,11],[387,20,552,8],[387,21,552,9],[388,10,553,6],[389,10,555,6],[389,30,555,13,"React"],[389,35,555,18],[389,36,555,19,"cloneElement"],[389,48,555,31],[389,49,556,8,"child"],[389,54,556,13],[389,56,556,13,"Object"],[389,62,556,13],[389,63,556,13,"assign"],[389,69,556,13],[390,12,558,10,"ref"],[390,15,558,13],[390,17,558,15],[390,21,558,19],[390,22,558,20,"refHandler"],[390,32,558,30],[391,12,559,10,"collapsable"],[391,23,559,21],[391,25,559,23],[392,10,559,28],[392,13,560,14],[392,17,560,14,"isTestEnv"],[392,34,560,23],[392,36,560,24],[392,37,560,25],[392,40,561,14],[393,12,562,16,"handlerType"],[393,23,562,27],[393,25,562,29,"name"],[393,29,562,33],[394,12,563,16,"handlerTag"],[394,22,563,26],[394,24,563,28],[394,28,563,32],[394,29,563,33,"handlerTag"],[394,39,563,43],[395,12,564,16,"enabled"],[395,19,564,23],[395,21,564,25],[395,25,564,29],[395,26,564,30,"props"],[395,31,564,35],[395,32,564,36,"enabled"],[396,10,565,14],[396,11,565,15],[396,14,566,14],[396,15,566,15],[396,16,566,16],[397,12,567,10,"testID"],[397,18,567,16],[397,21,567,16,"_this$props$testID"],[397,39,567,16],[397,42,567,18],[397,46,567,22],[397,47,567,23,"props"],[397,52,567,28],[397,53,567,29,"testID"],[397,59,567,35],[397,71,567,35,"_this$props$testID"],[397,89,567,35],[397,92,567,39,"child"],[397,97,567,44],[397,98,567,45,"props"],[397,103,567,50],[397,104,567,51,"testID"],[398,10,567,57],[398,13,568,13,"events"],[398,19,568,19],[398,22,570,8,"grandChildren"],[398,35,571,6],[398,36,571,7],[399,8,572,4],[400,6,572,5],[401,4,572,5],[401,6,186,24,"React"],[401,11,186,29],[401,12,186,30,"Component"],[401,21,186,39],[402,4,186,8,"Handler"],[402,11,186,15],[402,12,190,11,"displayName"],[402,23,190,22],[402,26,190,25,"name"],[402,30,190,29],[403,4,186,8,"Handler"],[403,11,186,15],[403,12,191,11,"contextType"],[403,23,191,22],[403,26,191,25,"GestureHandlerRootViewContext"],[403,64,191,54],[404,4,574,2],[404,11,574,9,"Handler"],[404,18,574,16],[405,2,575,0],[406,0,575,1],[406,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCC+F;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIO;GJE;AKM;kBCI;qBCI,8BD;GDC;CLE;eQqC;ECa;ICe;KDa;IEE;UPO;0BQC,yBR;WOE;yBEU;SFE;KFkB;IKE;KLM;IME;KNgB;oCOE;KPQ;0CQG;KRiB;yBSE;KTiB;mCUE;KVU;mCWE;4BnBmB;SmBuB;uBPW;OOE;KXC;mCYE;KZO;IaE;yBTW;SSE;KbW;IcE;KdQ;IeE;Kf4H;GDC;CRE"}},"type":"js/module"}]}