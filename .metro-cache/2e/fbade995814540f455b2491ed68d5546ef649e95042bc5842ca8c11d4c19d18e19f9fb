{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"domelementtype","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"tVJ16XfW1AI8lcfhJrZBho14ocA=","exportNames":["*"]}},{"name":"./node.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":46},"end":{"line":2,"column":92,"index":138}}],"key":"wT1/DHdiIotC9cEg0fGDyPROFU0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    DomHandler: true\n  };\n  exports.default = exports.DomHandler = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _domelementtype = require(_dependencyMap[3], \"domelementtype\");\n  var _node = require(_dependencyMap[4], \"./node.js\");\n  Object.keys(_node).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _node[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function get() {\n        return _node[key];\n      }\n    });\n  });\n  // Default options\n  var defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false\n  };\n  var DomHandler = exports.DomHandler = /*#__PURE__*/function () {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    function DomHandler(callback, options, elementCB) {\n      (0, _classCallCheck2.default)(this, DomHandler);\n      /** The elements of the DOM */\n      this.dom = [];\n      /** The root element for the DOM */\n      this.root = new _node.Document(this.dom);\n      /** Indicated whether parsing has been completed. */\n      this.done = false;\n      /** Stack of open tags. */\n      this.tagStack = [this.root];\n      /** A data node that is still being written to. */\n      this.lastNode = null;\n      /** Reference to the parser instance. Used for location information. */\n      this.parser = null;\n      // Make it possible to skip arguments, for backwards-compatibility\n      if (typeof options === \"function\") {\n        elementCB = options;\n        options = defaultOpts;\n      }\n      if (typeof callback === \"object\") {\n        options = callback;\n        callback = undefined;\n      }\n      this.callback = callback !== null && callback !== void 0 ? callback : null;\n      this.options = options !== null && options !== void 0 ? options : defaultOpts;\n      this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    return (0, _createClass2.default)(DomHandler, [{\n      key: \"onparserinit\",\n      value: function onparserinit(parser) {\n        this.parser = parser;\n      }\n      // Resets the handler back to starting state\n    }, {\n      key: \"onreset\",\n      value: function onreset() {\n        this.dom = [];\n        this.root = new _node.Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n      }\n      // Signals the handler that parsing is done\n    }, {\n      key: \"onend\",\n      value: function onend() {\n        if (this.done) return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n      }\n    }, {\n      key: \"onerror\",\n      value: function onerror(error) {\n        this.handleCallback(error);\n      }\n    }, {\n      key: \"onclosetag\",\n      value: function onclosetag() {\n        this.lastNode = null;\n        var elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n          elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB) this.elementCB(elem);\n      }\n    }, {\n      key: \"onopentag\",\n      value: function onopentag(name, attribs) {\n        var type = this.options.xmlMode ? _domelementtype.ElementType.Tag : undefined;\n        var element = new _node.Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n      }\n    }, {\n      key: \"ontext\",\n      value: function ontext(data) {\n        var lastNode = this.lastNode;\n        if (lastNode && lastNode.type === _domelementtype.ElementType.Text) {\n          lastNode.data += data;\n          if (this.options.withEndIndices) {\n            lastNode.endIndex = this.parser.endIndex;\n          }\n        } else {\n          var node = new _node.Text(data);\n          this.addNode(node);\n          this.lastNode = node;\n        }\n      }\n    }, {\n      key: \"oncomment\",\n      value: function oncomment(data) {\n        if (this.lastNode && this.lastNode.type === _domelementtype.ElementType.Comment) {\n          this.lastNode.data += data;\n          return;\n        }\n        var node = new _node.Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n      }\n    }, {\n      key: \"oncommentend\",\n      value: function oncommentend() {\n        this.lastNode = null;\n      }\n    }, {\n      key: \"oncdatastart\",\n      value: function oncdatastart() {\n        var text = new _node.Text(\"\");\n        var node = new _node.CDATA([text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n      }\n    }, {\n      key: \"oncdataend\",\n      value: function oncdataend() {\n        this.lastNode = null;\n      }\n    }, {\n      key: \"onprocessinginstruction\",\n      value: function onprocessinginstruction(name, data) {\n        var node = new _node.ProcessingInstruction(name, data);\n        this.addNode(node);\n      }\n    }, {\n      key: \"handleCallback\",\n      value: function handleCallback(error) {\n        if (typeof this.callback === \"function\") {\n          this.callback(error, this.dom);\n        } else if (error) {\n          throw error;\n        }\n      }\n    }, {\n      key: \"addNode\",\n      value: function addNode(node) {\n        var parent = this.tagStack[this.tagStack.length - 1];\n        var previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n          node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n          node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n          node.prev = previousSibling;\n          previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n      }\n    }]);\n  }();\n  var _default = exports.default = DomHandler;\n});","lineCount":194,"map":[[12,2,1,0],[12,6,1,0,"_domelementtype"],[12,21,1,0],[12,24,1,0,"require"],[12,31,1,0],[12,32,1,0,"_dependencyMap"],[12,46,1,0],[13,2,2,0],[13,6,2,0,"_node"],[13,11,2,0],[13,14,2,0,"require"],[13,21,2,0],[13,22,2,0,"_dependencyMap"],[13,36,2,0],[14,2,3,0,"Object"],[14,8,3,0],[14,9,3,0,"keys"],[14,13,3,0],[14,14,3,0,"_node"],[14,19,3,0],[14,21,3,0,"forEach"],[14,28,3,0],[14,39,3,0,"key"],[14,42,3,0],[15,4,3,0],[15,8,3,0,"key"],[15,11,3,0],[15,29,3,0,"key"],[15,32,3,0],[16,4,3,0],[16,8,3,0,"Object"],[16,14,3,0],[16,15,3,0,"prototype"],[16,24,3,0],[16,25,3,0,"hasOwnProperty"],[16,39,3,0],[16,40,3,0,"call"],[16,44,3,0],[16,45,3,0,"_exportNames"],[16,57,3,0],[16,59,3,0,"key"],[16,62,3,0],[17,4,3,0],[17,8,3,0,"key"],[17,11,3,0],[17,15,3,0,"exports"],[17,22,3,0],[17,26,3,0,"exports"],[17,33,3,0],[17,34,3,0,"key"],[17,37,3,0],[17,43,3,0,"_node"],[17,48,3,0],[17,49,3,0,"key"],[17,52,3,0],[18,4,3,0,"Object"],[18,10,3,0],[18,11,3,0,"defineProperty"],[18,25,3,0],[18,26,3,0,"exports"],[18,33,3,0],[18,35,3,0,"key"],[18,38,3,0],[19,6,3,0,"enumerable"],[19,16,3,0],[20,6,3,0,"get"],[20,9,3,0],[20,20,3,0,"get"],[20,24,3,0],[21,8,3,0],[21,15,3,0,"_node"],[21,20,3,0],[21,21,3,0,"key"],[21,24,3,0],[22,6,3,0],[23,4,3,0],[24,2,3,0],[25,2,4,0],[26,2,5,0],[26,6,5,6,"defaultOpts"],[26,17,5,17],[26,20,5,20],[27,4,6,4,"withStartIndices"],[27,20,6,20],[27,22,6,22],[27,27,6,27],[28,4,7,4,"withEndIndices"],[28,18,7,18],[28,20,7,20],[28,25,7,25],[29,4,8,4,"xmlMode"],[29,11,8,11],[29,13,8,13],[30,2,9,0],[30,3,9,1],[31,2,9,2],[31,6,10,13,"DomHandler"],[31,16,10,23],[31,19,10,23,"exports"],[31,26,10,23],[31,27,10,23,"DomHandler"],[31,37,10,23],[32,4,11,4],[33,0,12,0],[34,0,13,0],[35,0,14,0],[36,0,15,0],[37,4,16,4],[37,13,16,4,"DomHandler"],[37,24,16,16,"callback"],[37,32,16,24],[37,34,16,26,"options"],[37,41,16,33],[37,43,16,35,"elementCB"],[37,52,16,44],[37,54,16,46],[38,6,16,46],[38,10,16,46,"_classCallCheck2"],[38,26,16,46],[38,27,16,46,"default"],[38,34,16,46],[38,42,16,46,"DomHandler"],[38,52,16,46],[39,6,17,8],[40,6,18,8],[40,10,18,12],[40,11,18,13,"dom"],[40,14,18,16],[40,17,18,19],[40,19,18,21],[41,6,19,8],[42,6,20,8],[42,10,20,12],[42,11,20,13,"root"],[42,15,20,17],[42,18,20,20],[42,22,20,24,"Document"],[42,36,20,32],[42,37,20,33],[42,41,20,37],[42,42,20,38,"dom"],[42,45,20,41],[42,46,20,42],[43,6,21,8],[44,6,22,8],[44,10,22,12],[44,11,22,13,"done"],[44,15,22,17],[44,18,22,20],[44,23,22,25],[45,6,23,8],[46,6,24,8],[46,10,24,12],[46,11,24,13,"tagStack"],[46,19,24,21],[46,22,24,24],[46,23,24,25],[46,27,24,29],[46,28,24,30,"root"],[46,32,24,34],[46,33,24,35],[47,6,25,8],[48,6,26,8],[48,10,26,12],[48,11,26,13,"lastNode"],[48,19,26,21],[48,22,26,24],[48,26,26,28],[49,6,27,8],[50,6,28,8],[50,10,28,12],[50,11,28,13,"parser"],[50,17,28,19],[50,20,28,22],[50,24,28,26],[51,6,29,8],[52,6,30,8],[52,10,30,12],[52,17,30,19,"options"],[52,24,30,26],[52,29,30,31],[52,39,30,41],[52,41,30,43],[53,8,31,12,"elementCB"],[53,17,31,21],[53,20,31,24,"options"],[53,27,31,31],[54,8,32,12,"options"],[54,15,32,19],[54,18,32,22,"defaultOpts"],[54,29,32,33],[55,6,33,8],[56,6,34,8],[56,10,34,12],[56,17,34,19,"callback"],[56,25,34,27],[56,30,34,32],[56,38,34,40],[56,40,34,42],[57,8,35,12,"options"],[57,15,35,19],[57,18,35,22,"callback"],[57,26,35,30],[58,8,36,12,"callback"],[58,16,36,20],[58,19,36,23,"undefined"],[58,28,36,32],[59,6,37,8],[60,6,38,8],[60,10,38,12],[60,11,38,13,"callback"],[60,19,38,21],[60,22,38,24,"callback"],[60,30,38,32],[60,35,38,37],[60,39,38,41],[60,43,38,45,"callback"],[60,51,38,53],[60,56,38,58],[60,61,38,63],[60,62,38,64],[60,65,38,67,"callback"],[60,73,38,75],[60,76,38,78],[60,80,38,82],[61,6,39,8],[61,10,39,12],[61,11,39,13,"options"],[61,18,39,20],[61,21,39,23,"options"],[61,28,39,30],[61,33,39,35],[61,37,39,39],[61,41,39,43,"options"],[61,48,39,50],[61,53,39,55],[61,58,39,60],[61,59,39,61],[61,62,39,64,"options"],[61,69,39,71],[61,72,39,74,"defaultOpts"],[61,83,39,85],[62,6,40,8],[62,10,40,12],[62,11,40,13,"elementCB"],[62,20,40,22],[62,23,40,25,"elementCB"],[62,32,40,34],[62,37,40,39],[62,41,40,43],[62,45,40,47,"elementCB"],[62,54,40,56],[62,59,40,61],[62,64,40,66],[62,65,40,67],[62,68,40,70,"elementCB"],[62,77,40,79],[62,80,40,82],[62,84,40,86],[63,4,41,4],[64,4,41,5],[64,15,41,5,"_createClass2"],[64,28,41,5],[64,29,41,5,"default"],[64,36,41,5],[64,38,41,5,"DomHandler"],[64,48,41,5],[65,6,41,5,"key"],[65,9,41,5],[66,6,41,5,"value"],[66,11,41,5],[66,13,42,4],[66,22,42,4,"onparserinit"],[66,34,42,16,"onparserinit"],[66,35,42,17,"parser"],[66,41,42,23],[66,43,42,25],[67,8,43,8],[67,12,43,12],[67,13,43,13,"parser"],[67,19,43,19],[67,22,43,22,"parser"],[67,28,43,28],[68,6,44,4],[69,6,45,4],[70,4,45,4],[71,6,45,4,"key"],[71,9,45,4],[72,6,45,4,"value"],[72,11,45,4],[72,13,46,4],[72,22,46,4,"onreset"],[72,29,46,11,"onreset"],[72,30,46,11],[72,32,46,14],[73,8,47,8],[73,12,47,12],[73,13,47,13,"dom"],[73,16,47,16],[73,19,47,19],[73,21,47,21],[74,8,48,8],[74,12,48,12],[74,13,48,13,"root"],[74,17,48,17],[74,20,48,20],[74,24,48,24,"Document"],[74,38,48,32],[74,39,48,33],[74,43,48,37],[74,44,48,38,"dom"],[74,47,48,41],[74,48,48,42],[75,8,49,8],[75,12,49,12],[75,13,49,13,"done"],[75,17,49,17],[75,20,49,20],[75,25,49,25],[76,8,50,8],[76,12,50,12],[76,13,50,13,"tagStack"],[76,21,50,21],[76,24,50,24],[76,25,50,25],[76,29,50,29],[76,30,50,30,"root"],[76,34,50,34],[76,35,50,35],[77,8,51,8],[77,12,51,12],[77,13,51,13,"lastNode"],[77,21,51,21],[77,24,51,24],[77,28,51,28],[78,8,52,8],[78,12,52,12],[78,13,52,13,"parser"],[78,19,52,19],[78,22,52,22],[78,26,52,26],[79,6,53,4],[80,6,54,4],[81,4,54,4],[82,6,54,4,"key"],[82,9,54,4],[83,6,54,4,"value"],[83,11,54,4],[83,13,55,4],[83,22,55,4,"onend"],[83,27,55,9,"onend"],[83,28,55,9],[83,30,55,12],[84,8,56,8],[84,12,56,12],[84,16,56,16],[84,17,56,17,"done"],[84,21,56,21],[84,23,57,12],[85,8,58,8],[85,12,58,12],[85,13,58,13,"done"],[85,17,58,17],[85,20,58,20],[85,24,58,24],[86,8,59,8],[86,12,59,12],[86,13,59,13,"parser"],[86,19,59,19],[86,22,59,22],[86,26,59,26],[87,8,60,8],[87,12,60,12],[87,13,60,13,"handleCallback"],[87,27,60,27],[87,28,60,28],[87,32,60,32],[87,33,60,33],[88,6,61,4],[89,4,61,5],[90,6,61,5,"key"],[90,9,61,5],[91,6,61,5,"value"],[91,11,61,5],[91,13,62,4],[91,22,62,4,"onerror"],[91,29,62,11,"onerror"],[91,30,62,12,"error"],[91,35,62,17],[91,37,62,19],[92,8,63,8],[92,12,63,12],[92,13,63,13,"handleCallback"],[92,27,63,27],[92,28,63,28,"error"],[92,33,63,33],[92,34,63,34],[93,6,64,4],[94,4,64,5],[95,6,64,5,"key"],[95,9,64,5],[96,6,64,5,"value"],[96,11,64,5],[96,13,65,4],[96,22,65,4,"onclosetag"],[96,32,65,14,"onclosetag"],[96,33,65,14],[96,35,65,17],[97,8,66,8],[97,12,66,12],[97,13,66,13,"lastNode"],[97,21,66,21],[97,24,66,24],[97,28,66,28],[98,8,67,8],[98,12,67,14,"elem"],[98,16,67,18],[98,19,67,21],[98,23,67,25],[98,24,67,26,"tagStack"],[98,32,67,34],[98,33,67,35,"pop"],[98,36,67,38],[98,37,67,39],[98,38,67,40],[99,8,68,8],[99,12,68,12],[99,16,68,16],[99,17,68,17,"options"],[99,24,68,24],[99,25,68,25,"withEndIndices"],[99,39,68,39],[99,41,68,41],[100,10,69,12,"elem"],[100,14,69,16],[100,15,69,17,"endIndex"],[100,23,69,25],[100,26,69,28],[100,30,69,32],[100,31,69,33,"parser"],[100,37,69,39],[100,38,69,40,"endIndex"],[100,46,69,48],[101,8,70,8],[102,8,71,8],[102,12,71,12],[102,16,71,16],[102,17,71,17,"elementCB"],[102,26,71,26],[102,28,72,12],[102,32,72,16],[102,33,72,17,"elementCB"],[102,42,72,26],[102,43,72,27,"elem"],[102,47,72,31],[102,48,72,32],[103,6,73,4],[104,4,73,5],[105,6,73,5,"key"],[105,9,73,5],[106,6,73,5,"value"],[106,11,73,5],[106,13,74,4],[106,22,74,4,"onopentag"],[106,31,74,13,"onopentag"],[106,32,74,14,"name"],[106,36,74,18],[106,38,74,20,"attribs"],[106,45,74,27],[106,47,74,29],[107,8,75,8],[107,12,75,14,"type"],[107,16,75,18],[107,19,75,21],[107,23,75,25],[107,24,75,26,"options"],[107,31,75,33],[107,32,75,34,"xmlMode"],[107,39,75,41],[107,42,75,44,"ElementType"],[107,69,75,55],[107,70,75,56,"Tag"],[107,73,75,59],[107,76,75,62,"undefined"],[107,85,75,71],[108,8,76,8],[108,12,76,14,"element"],[108,19,76,21],[108,22,76,24],[108,26,76,28,"Element"],[108,39,76,35],[108,40,76,36,"name"],[108,44,76,40],[108,46,76,42,"attribs"],[108,53,76,49],[108,55,76,51,"undefined"],[108,64,76,60],[108,66,76,62,"type"],[108,70,76,66],[108,71,76,67],[109,8,77,8],[109,12,77,12],[109,13,77,13,"addNode"],[109,20,77,20],[109,21,77,21,"element"],[109,28,77,28],[109,29,77,29],[110,8,78,8],[110,12,78,12],[110,13,78,13,"tagStack"],[110,21,78,21],[110,22,78,22,"push"],[110,26,78,26],[110,27,78,27,"element"],[110,34,78,34],[110,35,78,35],[111,6,79,4],[112,4,79,5],[113,6,79,5,"key"],[113,9,79,5],[114,6,79,5,"value"],[114,11,79,5],[114,13,80,4],[114,22,80,4,"ontext"],[114,28,80,10,"ontext"],[114,29,80,11,"data"],[114,33,80,15],[114,35,80,17],[115,8,81,8],[115,12,81,16,"lastNode"],[115,20,81,24],[115,23,81,29],[115,27,81,33],[115,28,81,16,"lastNode"],[115,36,81,24],[116,8,82,8],[116,12,82,12,"lastNode"],[116,20,82,20],[116,24,82,24,"lastNode"],[116,32,82,32],[116,33,82,33,"type"],[116,37,82,37],[116,42,82,42,"ElementType"],[116,69,82,53],[116,70,82,54,"Text"],[116,74,82,58],[116,76,82,60],[117,10,83,12,"lastNode"],[117,18,83,20],[117,19,83,21,"data"],[117,23,83,25],[117,27,83,29,"data"],[117,31,83,33],[118,10,84,12],[118,14,84,16],[118,18,84,20],[118,19,84,21,"options"],[118,26,84,28],[118,27,84,29,"withEndIndices"],[118,41,84,43],[118,43,84,45],[119,12,85,16,"lastNode"],[119,20,85,24],[119,21,85,25,"endIndex"],[119,29,85,33],[119,32,85,36],[119,36,85,40],[119,37,85,41,"parser"],[119,43,85,47],[119,44,85,48,"endIndex"],[119,52,85,56],[120,10,86,12],[121,8,87,8],[121,9,87,9],[121,15,88,13],[122,10,89,12],[122,14,89,18,"node"],[122,18,89,22],[122,21,89,25],[122,25,89,29,"Text"],[122,35,89,33],[122,36,89,34,"data"],[122,40,89,38],[122,41,89,39],[123,10,90,12],[123,14,90,16],[123,15,90,17,"addNode"],[123,22,90,24],[123,23,90,25,"node"],[123,27,90,29],[123,28,90,30],[124,10,91,12],[124,14,91,16],[124,15,91,17,"lastNode"],[124,23,91,25],[124,26,91,28,"node"],[124,30,91,32],[125,8,92,8],[126,6,93,4],[127,4,93,5],[128,6,93,5,"key"],[128,9,93,5],[129,6,93,5,"value"],[129,11,93,5],[129,13,94,4],[129,22,94,4,"oncomment"],[129,31,94,13,"oncomment"],[129,32,94,14,"data"],[129,36,94,18],[129,38,94,20],[130,8,95,8],[130,12,95,12],[130,16,95,16],[130,17,95,17,"lastNode"],[130,25,95,25],[130,29,95,29],[130,33,95,33],[130,34,95,34,"lastNode"],[130,42,95,42],[130,43,95,43,"type"],[130,47,95,47],[130,52,95,52,"ElementType"],[130,79,95,63],[130,80,95,64,"Comment"],[130,87,95,71],[130,89,95,73],[131,10,96,12],[131,14,96,16],[131,15,96,17,"lastNode"],[131,23,96,25],[131,24,96,26,"data"],[131,28,96,30],[131,32,96,34,"data"],[131,36,96,38],[132,10,97,12],[133,8,98,8],[134,8,99,8],[134,12,99,14,"node"],[134,16,99,18],[134,19,99,21],[134,23,99,25,"Comment"],[134,36,99,32],[134,37,99,33,"data"],[134,41,99,37],[134,42,99,38],[135,8,100,8],[135,12,100,12],[135,13,100,13,"addNode"],[135,20,100,20],[135,21,100,21,"node"],[135,25,100,25],[135,26,100,26],[136,8,101,8],[136,12,101,12],[136,13,101,13,"lastNode"],[136,21,101,21],[136,24,101,24,"node"],[136,28,101,28],[137,6,102,4],[138,4,102,5],[139,6,102,5,"key"],[139,9,102,5],[140,6,102,5,"value"],[140,11,102,5],[140,13,103,4],[140,22,103,4,"oncommentend"],[140,34,103,16,"oncommentend"],[140,35,103,16],[140,37,103,19],[141,8,104,8],[141,12,104,12],[141,13,104,13,"lastNode"],[141,21,104,21],[141,24,104,24],[141,28,104,28],[142,6,105,4],[143,4,105,5],[144,6,105,5,"key"],[144,9,105,5],[145,6,105,5,"value"],[145,11,105,5],[145,13,106,4],[145,22,106,4,"oncdatastart"],[145,34,106,16,"oncdatastart"],[145,35,106,16],[145,37,106,19],[146,8,107,8],[146,12,107,14,"text"],[146,16,107,18],[146,19,107,21],[146,23,107,25,"Text"],[146,33,107,29],[146,34,107,30],[146,36,107,32],[146,37,107,33],[147,8,108,8],[147,12,108,14,"node"],[147,16,108,18],[147,19,108,21],[147,23,108,25,"CDATA"],[147,34,108,30],[147,35,108,31],[147,36,108,32,"text"],[147,40,108,36],[147,41,108,37],[147,42,108,38],[148,8,109,8],[148,12,109,12],[148,13,109,13,"addNode"],[148,20,109,20],[148,21,109,21,"node"],[148,25,109,25],[148,26,109,26],[149,8,110,8,"text"],[149,12,110,12],[149,13,110,13,"parent"],[149,19,110,19],[149,22,110,22,"node"],[149,26,110,26],[150,8,111,8],[150,12,111,12],[150,13,111,13,"lastNode"],[150,21,111,21],[150,24,111,24,"text"],[150,28,111,28],[151,6,112,4],[152,4,112,5],[153,6,112,5,"key"],[153,9,112,5],[154,6,112,5,"value"],[154,11,112,5],[154,13,113,4],[154,22,113,4,"oncdataend"],[154,32,113,14,"oncdataend"],[154,33,113,14],[154,35,113,17],[155,8,114,8],[155,12,114,12],[155,13,114,13,"lastNode"],[155,21,114,21],[155,24,114,24],[155,28,114,28],[156,6,115,4],[157,4,115,5],[158,6,115,5,"key"],[158,9,115,5],[159,6,115,5,"value"],[159,11,115,5],[159,13,116,4],[159,22,116,4,"onprocessinginstruction"],[159,45,116,27,"onprocessinginstruction"],[159,46,116,28,"name"],[159,50,116,32],[159,52,116,34,"data"],[159,56,116,38],[159,58,116,40],[160,8,117,8],[160,12,117,14,"node"],[160,16,117,18],[160,19,117,21],[160,23,117,25,"ProcessingInstruction"],[160,50,117,46],[160,51,117,47,"name"],[160,55,117,51],[160,57,117,53,"data"],[160,61,117,57],[160,62,117,58],[161,8,118,8],[161,12,118,12],[161,13,118,13,"addNode"],[161,20,118,20],[161,21,118,21,"node"],[161,25,118,25],[161,26,118,26],[162,6,119,4],[163,4,119,5],[164,6,119,5,"key"],[164,9,119,5],[165,6,119,5,"value"],[165,11,119,5],[165,13,120,4],[165,22,120,4,"handleCallback"],[165,36,120,18,"handleCallback"],[165,37,120,19,"error"],[165,42,120,24],[165,44,120,26],[166,8,121,8],[166,12,121,12],[166,19,121,19],[166,23,121,23],[166,24,121,24,"callback"],[166,32,121,32],[166,37,121,37],[166,47,121,47],[166,49,121,49],[167,10,122,12],[167,14,122,16],[167,15,122,17,"callback"],[167,23,122,25],[167,24,122,26,"error"],[167,29,122,31],[167,31,122,33],[167,35,122,37],[167,36,122,38,"dom"],[167,39,122,41],[167,40,122,42],[168,8,123,8],[168,9,123,9],[168,15,124,13],[168,19,124,17,"error"],[168,24,124,22],[168,26,124,24],[169,10,125,12],[169,16,125,18,"error"],[169,21,125,23],[170,8,126,8],[171,6,127,4],[172,4,127,5],[173,6,127,5,"key"],[173,9,127,5],[174,6,127,5,"value"],[174,11,127,5],[174,13,128,4],[174,22,128,4,"addNode"],[174,29,128,11,"addNode"],[174,30,128,12,"node"],[174,34,128,16],[174,36,128,18],[175,8,129,8],[175,12,129,14,"parent"],[175,18,129,20],[175,21,129,23],[175,25,129,27],[175,26,129,28,"tagStack"],[175,34,129,36],[175,35,129,37],[175,39,129,41],[175,40,129,42,"tagStack"],[175,48,129,50],[175,49,129,51,"length"],[175,55,129,57],[175,58,129,60],[175,59,129,61],[175,60,129,62],[176,8,130,8],[176,12,130,14,"previousSibling"],[176,27,130,29],[176,30,130,32,"parent"],[176,36,130,38],[176,37,130,39,"children"],[176,45,130,47],[176,46,130,48,"parent"],[176,52,130,54],[176,53,130,55,"children"],[176,61,130,63],[176,62,130,64,"length"],[176,68,130,70],[176,71,130,73],[176,72,130,74],[176,73,130,75],[177,8,131,8],[177,12,131,12],[177,16,131,16],[177,17,131,17,"options"],[177,24,131,24],[177,25,131,25,"withStartIndices"],[177,41,131,41],[177,43,131,43],[178,10,132,12,"node"],[178,14,132,16],[178,15,132,17,"startIndex"],[178,25,132,27],[178,28,132,30],[178,32,132,34],[178,33,132,35,"parser"],[178,39,132,41],[178,40,132,42,"startIndex"],[178,50,132,52],[179,8,133,8],[180,8,134,8],[180,12,134,12],[180,16,134,16],[180,17,134,17,"options"],[180,24,134,24],[180,25,134,25,"withEndIndices"],[180,39,134,39],[180,41,134,41],[181,10,135,12,"node"],[181,14,135,16],[181,15,135,17,"endIndex"],[181,23,135,25],[181,26,135,28],[181,30,135,32],[181,31,135,33,"parser"],[181,37,135,39],[181,38,135,40,"endIndex"],[181,46,135,48],[182,8,136,8],[183,8,137,8,"parent"],[183,14,137,14],[183,15,137,15,"children"],[183,23,137,23],[183,24,137,24,"push"],[183,28,137,28],[183,29,137,29,"node"],[183,33,137,33],[183,34,137,34],[184,8,138,8],[184,12,138,12,"previousSibling"],[184,27,138,27],[184,29,138,29],[185,10,139,12,"node"],[185,14,139,16],[185,15,139,17,"prev"],[185,19,139,21],[185,22,139,24,"previousSibling"],[185,37,139,39],[186,10,140,12,"previousSibling"],[186,25,140,27],[186,26,140,28,"next"],[186,30,140,32],[186,33,140,35,"node"],[186,37,140,39],[187,8,141,8],[188,8,142,8,"node"],[188,12,142,12],[188,13,142,13,"parent"],[188,19,142,19],[188,22,142,22,"parent"],[188,28,142,28],[189,8,143,8],[189,12,143,12],[189,13,143,13,"lastNode"],[189,21,143,21],[189,24,143,24],[189,28,143,28],[190,6,144,4],[191,4,144,5],[192,2,144,5],[193,2,144,5],[193,6,144,5,"_default"],[193,14,144,5],[193,17,144,5,"exports"],[193,24,144,5],[193,25,144,5,"default"],[193,32,144,5],[193,35,146,15,"DomHandler"],[193,45,146,25],[194,0,146,25],[194,3]],"functionMap":{"names":["<global>","DomHandler","DomHandler#constructor","DomHandler#onparserinit","DomHandler#onreset","DomHandler#onend","DomHandler#onerror","DomHandler#onclosetag","DomHandler#onopentag","DomHandler#ontext","DomHandler#oncomment","DomHandler#oncommentend","DomHandler#oncdatastart","DomHandler#oncdataend","DomHandler#onprocessinginstruction","DomHandler#handleCallback","DomHandler#addNode"],"mappings":"AAA;OCS;ICM;KDyB;IEC;KFE;IGE;KHO;IIE;KJM;IKC;KLE;IMC;KNQ;IOC;KPK;IQC;KRa;ISC;KTQ;IUC;KVE;IWC;KXM;IYC;KZE;IaC;KbG;IcC;KdO;IeC;KfgB;CDC"}},"type":"js/module"}]}