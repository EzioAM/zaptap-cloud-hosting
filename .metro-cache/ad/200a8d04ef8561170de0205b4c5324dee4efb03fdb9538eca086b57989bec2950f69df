{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"./LogBoxSymbolication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0},"end":{"line":20,"column":61}}],"key":"tnifsL40ZTtSGfTDHsrrD1NVb8k=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var LogBoxSymbolication = _interopRequireWildcard(require(_dependencyMap[3], \"./LogBoxSymbolication\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  function convertComponentStateToStack(componentStack) {\n    return componentStack.map(function (frame) {\n      var _frame$location, _frame$location2;\n      return {\n        column: frame == null || (_frame$location = frame.location) == null ? void 0 : _frame$location.column,\n        file: frame.fileName,\n        lineNumber: frame == null || (_frame$location2 = frame.location) == null ? void 0 : _frame$location2.row,\n        methodName: frame.content,\n        collapse: false\n      };\n    });\n  }\n  function convertStackToComponentStack(stack) {\n    var componentStack = [];\n    for (var i = 0; i < stack.length; i++) {\n      var frame = stack[i];\n      if (frame.lineNumber != null && frame.column != null) {\n        componentStack.push({\n          fileName: (frame == null ? void 0 : frame.file) || '',\n          location: {\n            row: frame.lineNumber,\n            column: frame.column\n          },\n          content: frame.methodName,\n          collapse: false\n        });\n      }\n    }\n    return componentStack;\n  }\n  var LogBoxLog = /*#__PURE__*/function () {\n    function LogBoxLog(data) {\n      (0, _classCallCheck2.default)(this, LogBoxLog);\n      this.symbolicated = {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      };\n      this.symbolicatedComponentStack = {\n        error: null,\n        componentStack: null,\n        status: 'NONE'\n      };\n      this.level = data.level;\n      this.type = data.type;\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.componentStackType = data.componentStackType || 'legacy';\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.extraData = data.extraData;\n      this.count = 1;\n      this.onNotificationPress = data.onNotificationPress;\n    }\n    return (0, _createClass2.default)(LogBoxLog, [{\n      key: \"incrementCount\",\n      value: function incrementCount() {\n        this.count += 1;\n      }\n    }, {\n      key: \"getAvailableStack\",\n      value: function getAvailableStack() {\n        return this.symbolicated.status === 'COMPLETE' ? this.symbolicated.stack : this.stack;\n      }\n    }, {\n      key: \"getAvailableComponentStack\",\n      value: function getAvailableComponentStack() {\n        if (this.componentStackType === 'legacy') {\n          return this.componentStack;\n        }\n        return this.symbolicatedComponentStack.status === 'COMPLETE' ? this.symbolicatedComponentStack.componentStack : this.componentStack;\n      }\n    }, {\n      key: \"retrySymbolicate\",\n      value: function retrySymbolicate(callback) {\n        var retry = false;\n        if (this.symbolicated.status !== 'COMPLETE') {\n          LogBoxSymbolication.deleteStack(this.stack);\n          retry = true;\n        }\n        if (this.symbolicatedComponentStack.status !== 'COMPLETE') {\n          LogBoxSymbolication.deleteStack(convertComponentStateToStack(this.componentStack));\n          retry = true;\n        }\n        if (retry) {\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"symbolicate\",\n      value: function symbolicate(callback) {\n        if (this.symbolicated.status === 'NONE') {\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"handleSymbolicate\",\n      value: function handleSymbolicate(callback) {\n        var _this = this;\n        if (this.symbolicated.status !== 'PENDING' && this.symbolicated.status !== 'COMPLETE') {\n          this.updateStatus(null, null, null, callback);\n          LogBoxSymbolication.symbolicate(this.stack, this.extraData).then(function (data) {\n            _this.updateStatus(null, data == null ? void 0 : data.stack, data == null ? void 0 : data.codeFrame, callback);\n          }, function (error) {\n            _this.updateStatus(error, null, null, callback);\n          });\n        }\n        if (this.componentStack != null && this.componentStackType === 'stack' && this.symbolicatedComponentStack.status !== 'PENDING' && this.symbolicatedComponentStack.status !== 'COMPLETE') {\n          this.updateComponentStackStatus(null, null, null, callback);\n          var componentStackFrames = convertComponentStateToStack(this.componentStack);\n          LogBoxSymbolication.symbolicate(componentStackFrames, []).then(function (data) {\n            _this.updateComponentStackStatus(null, convertStackToComponentStack(data.stack), data == null ? void 0 : data.codeFrame, callback);\n          }, function (error) {\n            _this.updateComponentStackStatus(error, null, null, callback);\n          });\n        }\n      }\n    }, {\n      key: \"updateStatus\",\n      value: function updateStatus(error, stack, codeFrame, callback) {\n        var lastStatus = this.symbolicated.status;\n        if (error != null) {\n          this.symbolicated = {\n            error: error,\n            stack: null,\n            status: 'FAILED'\n          };\n        } else if (stack != null) {\n          if (codeFrame) {\n            this.codeFrame = codeFrame;\n          }\n          this.symbolicated = {\n            error: null,\n            stack: stack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicated = {\n            error: null,\n            stack: null,\n            status: 'PENDING'\n          };\n        }\n        if (callback && lastStatus !== this.symbolicated.status) {\n          callback(this.symbolicated.status);\n        }\n      }\n    }, {\n      key: \"updateComponentStackStatus\",\n      value: function updateComponentStackStatus(error, componentStack, codeFrame, callback) {\n        var lastStatus = this.symbolicatedComponentStack.status;\n        if (error != null) {\n          this.symbolicatedComponentStack = {\n            error: error,\n            componentStack: null,\n            status: 'FAILED'\n          };\n        } else if (componentStack != null) {\n          if (codeFrame) {\n            this.componentCodeFrame = codeFrame;\n          }\n          this.symbolicatedComponentStack = {\n            error: null,\n            componentStack: componentStack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicatedComponentStack = {\n            error: null,\n            componentStack: null,\n            status: 'PENDING'\n          };\n        }\n        if (callback && lastStatus !== this.symbolicatedComponentStack.status) {\n          callback(this.symbolicatedComponentStack.status);\n        }\n      }\n    }]);\n  }();\n  var _default = exports.default = LogBoxLog;\n});","lineCount":193,"map":[[9,2,20,0],[9,6,20,0,"LogBoxSymbolication"],[9,25,20,0],[9,28,20,0,"_interopRequireWildcard"],[9,51,20,0],[9,52,20,0,"require"],[9,59,20,0],[9,60,20,0,"_dependencyMap"],[9,74,20,0],[10,2,20,61],[10,11,20,61,"_interopRequireWildcard"],[10,35,20,61,"e"],[10,36,20,61],[10,38,20,61,"t"],[10,39,20,61],[10,68,20,61,"WeakMap"],[10,75,20,61],[10,81,20,61,"r"],[10,82,20,61],[10,89,20,61,"WeakMap"],[10,96,20,61],[10,100,20,61,"n"],[10,101,20,61],[10,108,20,61,"WeakMap"],[10,115,20,61],[10,127,20,61,"_interopRequireWildcard"],[10,150,20,61],[10,162,20,61,"_interopRequireWildcard"],[10,186,20,61,"e"],[10,187,20,61],[10,189,20,61,"t"],[10,190,20,61],[10,199,20,61,"t"],[10,200,20,61],[10,204,20,61,"e"],[10,205,20,61],[10,209,20,61,"e"],[10,210,20,61],[10,211,20,61,"__esModule"],[10,221,20,61],[10,230,20,61,"e"],[10,231,20,61],[10,237,20,61,"o"],[10,238,20,61],[10,240,20,61,"i"],[10,241,20,61],[10,243,20,61,"f"],[10,244,20,61],[10,249,20,61,"__proto__"],[10,258,20,61],[10,266,20,61,"default"],[10,273,20,61],[10,275,20,61,"e"],[10,276,20,61],[10,293,20,61,"e"],[10,294,20,61],[10,317,20,61,"e"],[10,318,20,61],[10,343,20,61,"e"],[10,344,20,61],[10,353,20,61,"f"],[10,354,20,61],[10,360,20,61,"o"],[10,361,20,61],[10,364,20,61,"t"],[10,365,20,61],[10,368,20,61,"n"],[10,369,20,61],[10,372,20,61,"r"],[10,373,20,61],[10,381,20,61,"o"],[10,382,20,61],[10,383,20,61,"has"],[10,386,20,61],[10,387,20,61,"e"],[10,388,20,61],[10,398,20,61,"o"],[10,399,20,61],[10,400,20,61,"get"],[10,403,20,61],[10,404,20,61,"e"],[10,405,20,61],[10,408,20,61,"o"],[10,409,20,61],[10,410,20,61,"set"],[10,413,20,61],[10,414,20,61,"e"],[10,415,20,61],[10,417,20,61,"f"],[10,418,20,61],[10,432,20,61,"_t"],[10,434,20,61],[10,438,20,61,"e"],[10,439,20,61],[10,455,20,61,"_t"],[10,457,20,61],[10,464,20,61,"hasOwnProperty"],[10,478,20,61],[10,479,20,61,"call"],[10,483,20,61],[10,484,20,61,"e"],[10,485,20,61],[10,487,20,61,"_t"],[10,489,20,61],[10,496,20,61,"i"],[10,497,20,61],[10,501,20,61,"o"],[10,502,20,61],[10,505,20,61,"Object"],[10,511,20,61],[10,512,20,61,"defineProperty"],[10,526,20,61],[10,531,20,61,"Object"],[10,537,20,61],[10,538,20,61,"getOwnPropertyDescriptor"],[10,562,20,61],[10,563,20,61,"e"],[10,564,20,61],[10,566,20,61,"_t"],[10,568,20,61],[10,575,20,61,"i"],[10,576,20,61],[10,577,20,61,"get"],[10,580,20,61],[10,584,20,61,"i"],[10,585,20,61],[10,586,20,61,"set"],[10,589,20,61],[10,593,20,61,"o"],[10,594,20,61],[10,595,20,61,"f"],[10,596,20,61],[10,598,20,61,"_t"],[10,600,20,61],[10,602,20,61,"i"],[10,603,20,61],[10,607,20,61,"f"],[10,608,20,61],[10,609,20,61,"_t"],[10,611,20,61],[10,615,20,61,"e"],[10,616,20,61],[10,617,20,61,"_t"],[10,619,20,61],[10,630,20,61,"f"],[10,631,20,61],[10,636,20,61,"e"],[10,637,20,61],[10,639,20,61,"t"],[10,640,20,61],[11,2,28,0],[11,11,28,9,"convertComponentStateToStack"],[11,39,28,37,"convertComponentStateToStack"],[11,40,28,38,"componentStack"],[11,54,28,68],[11,56,28,77],[12,4,29,2],[12,11,29,9,"componentStack"],[12,25,29,23],[12,26,29,24,"map"],[12,29,29,27],[12,30,29,28],[12,40,29,28,"frame"],[12,45,29,33],[13,6,29,33],[13,10,29,33,"_frame$location"],[13,25,29,33],[13,27,29,33,"_frame$location2"],[13,43,29,33],[14,6,29,33],[14,13,29,38],[15,8,30,4,"column"],[15,14,30,10],[15,16,30,12,"frame"],[15,21,30,17],[15,34,30,17,"_frame$location"],[15,49,30,17],[15,52,30,12,"frame"],[15,57,30,17],[15,58,30,19,"location"],[15,66,30,27],[15,87,30,12,"_frame$location"],[15,102,30,12],[15,103,30,29,"column"],[15,109,30,35],[16,8,31,4,"file"],[16,12,31,8],[16,14,31,10,"frame"],[16,19,31,15],[16,20,31,16,"fileName"],[16,28,31,24],[17,8,32,4,"lineNumber"],[17,18,32,14],[17,20,32,16,"frame"],[17,25,32,21],[17,38,32,21,"_frame$location2"],[17,54,32,21],[17,57,32,16,"frame"],[17,62,32,21],[17,63,32,23,"location"],[17,71,32,31],[17,92,32,16,"_frame$location2"],[17,108,32,16],[17,109,32,33,"row"],[17,112,32,36],[18,8,33,4,"methodName"],[18,18,33,14],[18,20,33,16,"frame"],[18,25,33,21],[18,26,33,22,"content"],[18,33,33,29],[19,8,34,4,"collapse"],[19,16,34,12],[19,18,34,14],[20,6,35,2],[20,7,35,3],[21,4,35,3],[21,5,35,4],[21,6,35,5],[22,2,36,0],[23,2,38,0],[23,11,38,9,"convertStackToComponentStack"],[23,39,38,37,"convertStackToComponentStack"],[23,40,38,38,"stack"],[23,45,38,50],[23,47,38,68],[24,4,39,2],[24,8,39,8,"componentStack"],[24,22,39,22],[24,25,39,25],[24,27,39,27],[25,4,40,2],[25,9,40,7],[25,13,40,11,"i"],[25,14,40,12],[25,17,40,15],[25,18,40,16],[25,20,40,18,"i"],[25,21,40,19],[25,24,40,22,"stack"],[25,29,40,27],[25,30,40,28,"length"],[25,36,40,34],[25,38,40,36,"i"],[25,39,40,37],[25,41,40,39],[25,43,40,41],[26,6,41,4],[26,10,41,10,"frame"],[26,15,41,15],[26,18,41,18,"stack"],[26,23,41,23],[26,24,41,24,"i"],[26,25,41,25],[26,26,41,26],[27,6,43,4],[27,10,43,8,"frame"],[27,15,43,13],[27,16,43,14,"lineNumber"],[27,26,43,24],[27,30,43,28],[27,34,43,32],[27,38,43,36,"frame"],[27,43,43,41],[27,44,43,42,"column"],[27,50,43,48],[27,54,43,52],[27,58,43,56],[27,60,43,58],[28,8,44,6,"componentStack"],[28,22,44,20],[28,23,44,21,"push"],[28,27,44,25],[28,28,44,26],[29,10,45,8,"fileName"],[29,18,45,16],[29,20,45,18],[29,21,45,18,"frame"],[29,26,45,23],[29,46,45,18,"frame"],[29,51,45,23],[29,52,45,25,"file"],[29,56,45,29],[29,61,45,33],[29,63,45,35],[30,10,46,8,"location"],[30,18,46,16],[30,20,46,18],[31,12,47,10,"row"],[31,15,47,13],[31,17,47,15,"frame"],[31,22,47,20],[31,23,47,21,"lineNumber"],[31,33,47,31],[32,12,48,10,"column"],[32,18,48,16],[32,20,48,18,"frame"],[32,25,48,23],[32,26,48,24,"column"],[33,10,49,8],[33,11,49,9],[34,10,50,8,"content"],[34,17,50,15],[34,19,50,17,"frame"],[34,24,50,22],[34,25,50,23,"methodName"],[34,35,50,33],[35,10,51,8,"collapse"],[35,18,51,16],[35,20,51,18],[36,8,52,6],[36,9,52,7],[36,10,52,8],[37,6,53,4],[38,4,54,2],[39,4,55,2],[39,11,55,9,"componentStack"],[39,25,55,23],[40,2,56,0],[41,2,56,1],[41,6,72,6,"LogBoxLog"],[41,15,72,15],[42,4,109,2],[42,13,109,2,"LogBoxLog"],[42,23,109,14,"data"],[42,27,109,33],[42,29,109,35],[43,6,109,35],[43,10,109,35,"_classCallCheck2"],[43,26,109,35],[43,27,109,35,"default"],[43,34,109,35],[43,42,109,35,"LogBoxLog"],[43,51,109,35],[44,6,109,35],[44,11,85,2,"symbolicated"],[44,23,85,14],[44,26,89,65],[45,8,90,4,"error"],[45,13,90,9],[45,15,90,11],[45,19,90,15],[46,8,91,4,"stack"],[46,13,91,9],[46,15,91,11],[46,19,91,15],[47,8,92,4,"status"],[47,14,92,10],[47,16,92,12],[48,6,93,2],[48,7,93,3],[49,6,93,3],[49,11,94,2,"symbolicatedComponentStack"],[49,37,94,28],[49,40,102,74],[50,8,103,4,"error"],[50,13,103,9],[50,15,103,11],[50,19,103,15],[51,8,104,4,"componentStack"],[51,22,104,18],[51,24,104,20],[51,28,104,24],[52,8,105,4,"status"],[52,14,105,10],[52,16,105,12],[53,6,106,2],[53,7,106,3],[54,6,110,4],[54,10,110,8],[54,11,110,9,"level"],[54,16,110,14],[54,19,110,17,"data"],[54,23,110,21],[54,24,110,22,"level"],[54,29,110,27],[55,6,111,4],[55,10,111,8],[55,11,111,9,"type"],[55,15,111,13],[55,18,111,16,"data"],[55,22,111,20],[55,23,111,21,"type"],[55,27,111,25],[56,6,112,4],[56,10,112,8],[56,11,112,9,"message"],[56,18,112,16],[56,21,112,19,"data"],[56,25,112,23],[56,26,112,24,"message"],[56,33,112,31],[57,6,113,4],[57,10,113,8],[57,11,113,9,"stack"],[57,16,113,14],[57,19,113,17,"data"],[57,23,113,21],[57,24,113,22,"stack"],[57,29,113,27],[58,6,114,4],[58,10,114,8],[58,11,114,9,"category"],[58,19,114,17],[58,22,114,20,"data"],[58,26,114,24],[58,27,114,25,"category"],[58,35,114,33],[59,6,115,4],[59,10,115,8],[59,11,115,9,"componentStack"],[59,25,115,23],[59,28,115,26,"data"],[59,32,115,30],[59,33,115,31,"componentStack"],[59,47,115,45],[60,6,116,4],[60,10,116,8],[60,11,116,9,"componentStackType"],[60,29,116,27],[60,32,116,30,"data"],[60,36,116,34],[60,37,116,35,"componentStackType"],[60,55,116,53],[60,59,116,57],[60,67,116,65],[61,6,117,4],[61,10,117,8],[61,11,117,9,"codeFrame"],[61,20,117,18],[61,23,117,21,"data"],[61,27,117,25],[61,28,117,26,"codeFrame"],[61,37,117,35],[62,6,118,4],[62,10,118,8],[62,11,118,9,"isComponentError"],[62,27,118,25],[62,30,118,28,"data"],[62,34,118,32],[62,35,118,33,"isComponentError"],[62,51,118,49],[63,6,119,4],[63,10,119,8],[63,11,119,9,"extraData"],[63,20,119,18],[63,23,119,21,"data"],[63,27,119,25],[63,28,119,26,"extraData"],[63,37,119,35],[64,6,120,4],[64,10,120,8],[64,11,120,9,"count"],[64,16,120,14],[64,19,120,17],[64,20,120,18],[65,6,121,4],[65,10,121,8],[65,11,121,9,"onNotificationPress"],[65,30,121,28],[65,33,121,31,"data"],[65,37,121,35],[65,38,121,36,"onNotificationPress"],[65,57,121,55],[66,4,122,2],[67,4,122,3],[67,15,122,3,"_createClass2"],[67,28,122,3],[67,29,122,3,"default"],[67,36,122,3],[67,38,122,3,"LogBoxLog"],[67,47,122,3],[68,6,122,3,"key"],[68,9,122,3],[69,6,122,3,"value"],[69,11,122,3],[69,13,124,2],[69,22,124,2,"incrementCount"],[69,36,124,16,"incrementCount"],[69,37,124,16],[69,39,124,25],[70,8,125,4],[70,12,125,8],[70,13,125,9,"count"],[70,18,125,14],[70,22,125,18],[70,23,125,19],[71,6,126,2],[72,4,126,3],[73,6,126,3,"key"],[73,9,126,3],[74,6,126,3,"value"],[74,11,126,3],[74,13,128,2],[74,22,128,2,"getAvailableStack"],[74,39,128,19,"getAvailableStack"],[74,40,128,19],[74,42,128,29],[75,8,129,4],[75,15,129,11],[75,19,129,15],[75,20,129,16,"symbolicated"],[75,32,129,28],[75,33,129,29,"status"],[75,39,129,35],[75,44,129,40],[75,54,129,50],[75,57,130,8],[75,61,130,12],[75,62,130,13,"symbolicated"],[75,74,130,25],[75,75,130,26,"stack"],[75,80,130,31],[75,83,131,8],[75,87,131,12],[75,88,131,13,"stack"],[75,93,131,18],[76,6,132,2],[77,4,132,3],[78,6,132,3,"key"],[78,9,132,3],[79,6,132,3,"value"],[79,11,132,3],[79,13,134,2],[79,22,134,2,"getAvailableComponentStack"],[79,48,134,28,"getAvailableComponentStack"],[79,49,134,28],[79,51,134,47],[80,8,135,4],[80,12,135,8],[80,16,135,12],[80,17,135,13,"componentStackType"],[80,35,135,31],[80,40,135,36],[80,48,135,44],[80,50,135,46],[81,10,136,6],[81,17,136,13],[81,21,136,17],[81,22,136,18,"componentStack"],[81,36,136,32],[82,8,137,4],[83,8,138,4],[83,15,138,11],[83,19,138,15],[83,20,138,16,"symbolicatedComponentStack"],[83,46,138,42],[83,47,138,43,"status"],[83,53,138,49],[83,58,138,54],[83,68,138,64],[83,71,139,8],[83,75,139,12],[83,76,139,13,"symbolicatedComponentStack"],[83,102,139,39],[83,103,139,40,"componentStack"],[83,117,139,54],[83,120,140,8],[83,124,140,12],[83,125,140,13,"componentStack"],[83,139,140,27],[84,6,141,2],[85,4,141,3],[86,6,141,3,"key"],[86,9,141,3],[87,6,141,3,"value"],[87,11,141,3],[87,13,143,2],[87,22,143,2,"retrySymbolicate"],[87,38,143,18,"retrySymbolicate"],[87,39,143,19,"callback"],[87,47,143,67],[87,49,143,75],[88,8,144,4],[88,12,144,8,"retry"],[88,17,144,13],[88,20,144,16],[88,25,144,21],[89,8,145,4],[89,12,145,8],[89,16,145,12],[89,17,145,13,"symbolicated"],[89,29,145,25],[89,30,145,26,"status"],[89,36,145,32],[89,41,145,37],[89,51,145,47],[89,53,145,49],[90,10,146,6,"LogBoxSymbolication"],[90,29,146,25],[90,30,146,26,"deleteStack"],[90,41,146,37],[90,42,146,38],[90,46,146,42],[90,47,146,43,"stack"],[90,52,146,48],[90,53,146,49],[91,10,147,6,"retry"],[91,15,147,11],[91,18,147,14],[91,22,147,18],[92,8,148,4],[93,8,149,4],[93,12,149,8],[93,16,149,12],[93,17,149,13,"symbolicatedComponentStack"],[93,43,149,39],[93,44,149,40,"status"],[93,50,149,46],[93,55,149,51],[93,65,149,61],[93,67,149,63],[94,10,150,6,"LogBoxSymbolication"],[94,29,150,25],[94,30,150,26,"deleteStack"],[94,41,150,37],[94,42,151,8,"convertComponentStateToStack"],[94,70,151,36],[94,71,151,37],[94,75,151,41],[94,76,151,42,"componentStack"],[94,90,151,56],[94,91,152,6],[94,92,152,7],[95,10,153,6,"retry"],[95,15,153,11],[95,18,153,14],[95,22,153,18],[96,8,154,4],[97,8,155,4],[97,12,155,8,"retry"],[97,17,155,13],[97,19,155,15],[98,10,156,6],[98,14,156,10],[98,15,156,11,"handleSymbolicate"],[98,32,156,28],[98,33,156,29,"callback"],[98,41,156,37],[98,42,156,38],[99,8,157,4],[100,6,158,2],[101,4,158,3],[102,6,158,3,"key"],[102,9,158,3],[103,6,158,3,"value"],[103,11,158,3],[103,13,160,2],[103,22,160,2,"symbolicate"],[103,33,160,13,"symbolicate"],[103,34,160,14,"callback"],[103,42,160,62],[103,44,160,70],[104,8,161,4],[104,12,161,8],[104,16,161,12],[104,17,161,13,"symbolicated"],[104,29,161,25],[104,30,161,26,"status"],[104,36,161,32],[104,41,161,37],[104,47,161,43],[104,49,161,45],[105,10,162,6],[105,14,162,10],[105,15,162,11,"handleSymbolicate"],[105,32,162,28],[105,33,162,29,"callback"],[105,41,162,37],[105,42,162,38],[106,8,163,4],[107,6,164,2],[108,4,164,3],[109,6,164,3,"key"],[109,9,164,3],[110,6,164,3,"value"],[110,11,164,3],[110,13,166,2],[110,22,166,2,"handleSymbolicate"],[110,39,166,19,"handleSymbolicate"],[110,40,166,20,"callback"],[110,48,166,68],[110,50,166,76],[111,8,166,76],[111,12,166,76,"_this"],[111,17,166,76],[112,8,167,4],[112,12,168,6],[112,16,168,10],[112,17,168,11,"symbolicated"],[112,29,168,23],[112,30,168,24,"status"],[112,36,168,30],[112,41,168,35],[112,50,168,44],[112,54,169,6],[112,58,169,10],[112,59,169,11,"symbolicated"],[112,71,169,23],[112,72,169,24,"status"],[112,78,169,30],[112,83,169,35],[112,93,169,45],[112,95,170,6],[113,10,171,6],[113,14,171,10],[113,15,171,11,"updateStatus"],[113,27,171,23],[113,28,171,24],[113,32,171,28],[113,34,171,30],[113,38,171,34],[113,40,171,36],[113,44,171,40],[113,46,171,42,"callback"],[113,54,171,50],[113,55,171,51],[114,10,172,6,"LogBoxSymbolication"],[114,29,172,25],[114,30,172,26,"symbolicate"],[114,41,172,37],[114,42,172,38],[114,46,172,42],[114,47,172,43,"stack"],[114,52,172,48],[114,54,172,50],[114,58,172,54],[114,59,172,55,"extraData"],[114,68,172,64],[114,69,172,65],[114,70,172,66,"then"],[114,74,172,70],[114,75,173,8],[114,85,173,8,"data"],[114,89,173,12],[114,91,173,16],[115,12,174,10,"_this"],[115,17,174,14],[115,18,174,15,"updateStatus"],[115,30,174,27],[115,31,174,28],[115,35,174,32],[115,37,174,34,"data"],[115,41,174,38],[115,61,174,34,"data"],[115,65,174,38],[115,66,174,40,"stack"],[115,71,174,45],[115,73,174,47,"data"],[115,77,174,51],[115,97,174,47,"data"],[115,101,174,51],[115,102,174,53,"codeFrame"],[115,111,174,62],[115,113,174,64,"callback"],[115,121,174,72],[115,122,174,73],[116,10,175,8],[116,11,175,9],[116,13,176,8],[116,23,176,8,"error"],[116,28,176,13],[116,30,176,17],[117,12,177,10,"_this"],[117,17,177,14],[117,18,177,15,"updateStatus"],[117,30,177,27],[117,31,177,28,"error"],[117,36,177,33],[117,38,177,35],[117,42,177,39],[117,44,177,41],[117,48,177,45],[117,50,177,47,"callback"],[117,58,177,55],[117,59,177,56],[118,10,178,8],[118,11,179,6],[118,12,179,7],[119,8,180,4],[120,8,181,4],[120,12,182,6],[120,16,182,10],[120,17,182,11,"componentStack"],[120,31,182,25],[120,35,182,29],[120,39,182,33],[120,43,183,6],[120,47,183,10],[120,48,183,11,"componentStackType"],[120,66,183,29],[120,71,183,34],[120,78,183,41],[120,82,184,6],[120,86,184,10],[120,87,184,11,"symbolicatedComponentStack"],[120,113,184,37],[120,114,184,38,"status"],[120,120,184,44],[120,125,184,49],[120,134,184,58],[120,138,185,6],[120,142,185,10],[120,143,185,11,"symbolicatedComponentStack"],[120,169,185,37],[120,170,185,38,"status"],[120,176,185,44],[120,181,185,49],[120,191,185,59],[120,193,186,6],[121,10,187,6],[121,14,187,10],[121,15,187,11,"updateComponentStackStatus"],[121,41,187,37],[121,42,187,38],[121,46,187,42],[121,48,187,44],[121,52,187,48],[121,54,187,50],[121,58,187,54],[121,60,187,56,"callback"],[121,68,187,64],[121,69,187,65],[122,10,188,6],[122,14,188,12,"componentStackFrames"],[122,34,188,32],[122,37,188,35,"convertComponentStateToStack"],[122,65,188,63],[122,66,189,8],[122,70,189,12],[122,71,189,13,"componentStack"],[122,85,190,6],[122,86,190,7],[123,10,191,6,"LogBoxSymbolication"],[123,29,191,25],[123,30,191,26,"symbolicate"],[123,41,191,37],[123,42,191,38,"componentStackFrames"],[123,62,191,58],[123,64,191,60],[123,66,191,62],[123,67,191,63],[123,68,191,64,"then"],[123,72,191,68],[123,73,192,8],[123,83,192,8,"data"],[123,87,192,12],[123,89,192,16],[124,12,193,10,"_this"],[124,17,193,14],[124,18,193,15,"updateComponentStackStatus"],[124,44,193,41],[124,45,194,12],[124,49,194,16],[124,51,195,12,"convertStackToComponentStack"],[124,79,195,40],[124,80,195,41,"data"],[124,84,195,45],[124,85,195,46,"stack"],[124,90,195,51],[124,91,195,52],[124,93,196,12,"data"],[124,97,196,16],[124,117,196,12,"data"],[124,121,196,16],[124,122,196,18,"codeFrame"],[124,131,196,27],[124,133,197,12,"callback"],[124,141,198,10],[124,142,198,11],[125,10,199,8],[125,11,199,9],[125,13,200,8],[125,23,200,8,"error"],[125,28,200,13],[125,30,200,17],[126,12,201,10,"_this"],[126,17,201,14],[126,18,201,15,"updateComponentStackStatus"],[126,44,201,41],[126,45,201,42,"error"],[126,50,201,47],[126,52,201,49],[126,56,201,53],[126,58,201,55],[126,62,201,59],[126,64,201,61,"callback"],[126,72,201,69],[126,73,201,70],[127,10,202,8],[127,11,203,6],[127,12,203,7],[128,8,204,4],[129,6,205,2],[130,4,205,3],[131,6,205,3,"key"],[131,9,205,3],[132,6,205,3,"value"],[132,11,205,3],[132,13,207,2],[132,22,207,2,"updateStatus"],[132,34,207,14,"updateStatus"],[132,35,208,4,"error"],[132,40,208,17],[132,42,209,4,"stack"],[132,47,209,17],[132,49,210,4,"codeFrame"],[132,58,210,25],[132,60,211,4,"callback"],[132,68,211,52],[132,70,212,10],[133,8,213,4],[133,12,213,10,"lastStatus"],[133,22,213,20],[133,25,213,23],[133,29,213,27],[133,30,213,28,"symbolicated"],[133,42,213,40],[133,43,213,41,"status"],[133,49,213,47],[134,8,214,4],[134,12,214,8,"error"],[134,17,214,13],[134,21,214,17],[134,25,214,21],[134,27,214,23],[135,10,215,6],[135,14,215,10],[135,15,215,11,"symbolicated"],[135,27,215,23],[135,30,215,26],[136,12,216,8,"error"],[136,17,216,13],[136,19,216,8,"error"],[136,24,216,13],[137,12,217,8,"stack"],[137,17,217,13],[137,19,217,15],[137,23,217,19],[138,12,218,8,"status"],[138,18,218,14],[138,20,218,16],[139,10,219,6],[139,11,219,7],[140,8,220,4],[140,9,220,5],[140,15,220,11],[140,19,220,15,"stack"],[140,24,220,20],[140,28,220,24],[140,32,220,28],[140,34,220,30],[141,10,221,6],[141,14,221,10,"codeFrame"],[141,23,221,19],[141,25,221,21],[142,12,222,8],[142,16,222,12],[142,17,222,13,"codeFrame"],[142,26,222,22],[142,29,222,25,"codeFrame"],[142,38,222,34],[143,10,223,6],[144,10,225,6],[144,14,225,10],[144,15,225,11,"symbolicated"],[144,27,225,23],[144,30,225,26],[145,12,226,8,"error"],[145,17,226,13],[145,19,226,15],[145,23,226,19],[146,12,227,8,"stack"],[146,17,227,13],[146,19,227,8,"stack"],[146,24,227,13],[147,12,228,8,"status"],[147,18,228,14],[147,20,228,16],[148,10,229,6],[148,11,229,7],[149,8,230,4],[149,9,230,5],[149,15,230,11],[150,10,231,6],[150,14,231,10],[150,15,231,11,"symbolicated"],[150,27,231,23],[150,30,231,26],[151,12,232,8,"error"],[151,17,232,13],[151,19,232,15],[151,23,232,19],[152,12,233,8,"stack"],[152,17,233,13],[152,19,233,15],[152,23,233,19],[153,12,234,8,"status"],[153,18,234,14],[153,20,234,16],[154,10,235,6],[154,11,235,7],[155,8,236,4],[156,8,238,4],[156,12,238,8,"callback"],[156,20,238,16],[156,24,238,20,"lastStatus"],[156,34,238,30],[156,39,238,35],[156,43,238,39],[156,44,238,40,"symbolicated"],[156,56,238,52],[156,57,238,53,"status"],[156,63,238,59],[156,65,238,61],[157,10,239,6,"callback"],[157,18,239,14],[157,19,239,15],[157,23,239,19],[157,24,239,20,"symbolicated"],[157,36,239,32],[157,37,239,33,"status"],[157,43,239,39],[157,44,239,40],[158,8,240,4],[159,6,241,2],[160,4,241,3],[161,6,241,3,"key"],[161,9,241,3],[162,6,241,3,"value"],[162,11,241,3],[162,13,243,2],[162,22,243,2,"updateComponentStackStatus"],[162,48,243,28,"updateComponentStackStatus"],[162,49,244,4,"error"],[162,54,244,17],[162,56,245,4,"componentStack"],[162,70,245,35],[162,72,246,4,"codeFrame"],[162,81,246,25],[162,83,247,4,"callback"],[162,91,247,52],[162,93,248,10],[163,8,249,4],[163,12,249,10,"lastStatus"],[163,22,249,20],[163,25,249,23],[163,29,249,27],[163,30,249,28,"symbolicatedComponentStack"],[163,56,249,54],[163,57,249,55,"status"],[163,63,249,61],[164,8,250,4],[164,12,250,8,"error"],[164,17,250,13],[164,21,250,17],[164,25,250,21],[164,27,250,23],[165,10,251,6],[165,14,251,10],[165,15,251,11,"symbolicatedComponentStack"],[165,41,251,37],[165,44,251,40],[166,12,252,8,"error"],[166,17,252,13],[166,19,252,8,"error"],[166,24,252,13],[167,12,253,8,"componentStack"],[167,26,253,22],[167,28,253,24],[167,32,253,28],[168,12,254,8,"status"],[168,18,254,14],[168,20,254,16],[169,10,255,6],[169,11,255,7],[170,8,256,4],[170,9,256,5],[170,15,256,11],[170,19,256,15,"componentStack"],[170,33,256,29],[170,37,256,33],[170,41,256,37],[170,43,256,39],[171,10,257,6],[171,14,257,10,"codeFrame"],[171,23,257,19],[171,25,257,21],[172,12,258,8],[172,16,258,12],[172,17,258,13,"componentCodeFrame"],[172,35,258,31],[172,38,258,34,"codeFrame"],[172,47,258,43],[173,10,259,6],[174,10,260,6],[174,14,260,10],[174,15,260,11,"symbolicatedComponentStack"],[174,41,260,37],[174,44,260,40],[175,12,261,8,"error"],[175,17,261,13],[175,19,261,15],[175,23,261,19],[176,12,262,8,"componentStack"],[176,26,262,22],[176,28,262,8,"componentStack"],[176,42,262,22],[177,12,263,8,"status"],[177,18,263,14],[177,20,263,16],[178,10,264,6],[178,11,264,7],[179,8,265,4],[179,9,265,5],[179,15,265,11],[180,10,266,6],[180,14,266,10],[180,15,266,11,"symbolicatedComponentStack"],[180,41,266,37],[180,44,266,40],[181,12,267,8,"error"],[181,17,267,13],[181,19,267,15],[181,23,267,19],[182,12,268,8,"componentStack"],[182,26,268,22],[182,28,268,24],[182,32,268,28],[183,12,269,8,"status"],[183,18,269,14],[183,20,269,16],[184,10,270,6],[184,11,270,7],[185,8,271,4],[186,8,273,4],[186,12,273,8,"callback"],[186,20,273,16],[186,24,273,20,"lastStatus"],[186,34,273,30],[186,39,273,35],[186,43,273,39],[186,44,273,40,"symbolicatedComponentStack"],[186,70,273,66],[186,71,273,67,"status"],[186,77,273,73],[186,79,273,75],[187,10,274,6,"callback"],[187,18,274,14],[187,19,274,15],[187,23,274,19],[187,24,274,20,"symbolicatedComponentStack"],[187,50,274,46],[187,51,274,47,"status"],[187,57,274,53],[187,58,274,54],[188,8,275,4],[189,6,276,2],[190,4,276,3],[191,2,276,3],[192,2,276,3],[192,6,276,3,"_default"],[192,14,276,3],[192,17,276,3,"exports"],[192,24,276,3],[192,25,276,3,"default"],[192,32,276,3],[192,35,279,15,"LogBoxLog"],[192,44,279,24],[193,0,279,24],[193,3]],"functionMap":{"names":["<global>","convertComponentStateToStack","componentStack.map$argument_0","convertStackToComponentStack","LogBoxLog","constructor","incrementCount","getAvailableStack","getAvailableComponentStack","retrySymbolicate","symbolicate","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus","updateComponentStackStatus"],"mappings":"AAA;AC2B;4BCC;IDM;CDC;AGE;CHkB;AIgB;ECqC;GDa;EEE;GFE;EGE;GHI;EIE;GJO;EKE;GLe;EME;GNI;EOE;QCO;SDE;QEC;SFE;QCc;SDO;QEC;SFE;GPG;EUE;GVkC;EWE;GXiC;CJC"}},"type":"js/module"}]}