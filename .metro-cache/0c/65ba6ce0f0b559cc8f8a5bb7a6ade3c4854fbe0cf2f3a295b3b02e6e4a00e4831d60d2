{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"../config/analytics","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":167},"end":{"line":6,"column":55,"index":222}}],"key":"YGYa4Wqakz6PJ1ioH8VpeplkmtU=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.logUserAction = exports.logPerformance = exports.logNetworkRequest = exports.logError = exports.logAnalyticsEvent = exports.LogLevel = exports.EventLogger = undefined;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[3]));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[4]));\n  var _analytics = require(_dependencyMap[5]);\n  /**\r\n   * EventLogger - Centralized logging utility for the application\r\n   * Provides structured logging with different levels and optional analytics integration\r\n   */\n  var LogLevel = exports.LogLevel = /*#__PURE__*/function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"INFO\"] = 1] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 2] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 3] = \"ERROR\";\n    LogLevel[LogLevel[\"CRITICAL\"] = 4] = \"CRITICAL\";\n    return LogLevel;\n  }({});\n  var EventLoggerService = /*#__PURE__*/function () {\n    function EventLoggerService() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      (0, _classCallCheck2.default)(this, EventLoggerService);\n      this.localEntries = [];\n      this.logQueue = [];\n      this.isFlushingLogs = false;\n      this.config = {\n        minLevel: LogLevel.INFO,\n        enableConsoleOutput: true,\n        enableRemoteLogging: _analytics.ANALYTICS_CONFIG.enabled,\n        maxLocalEntries: 1000,\n        shouldSanitizeData: true,\n        ...config\n      };\n      this.sessionId = this.generateSessionId();\n      this.setupGlobalErrorHandling();\n\n      // Flush logs periodically\n      if (this.config.enableRemoteLogging) {\n        setInterval(() => this.flushLogs(), 30000); // Every 30 seconds\n      }\n    }\n\n    /**\r\n     * Set user context for all future logs\r\n     */\n    return (0, _createClass2.default)(EventLoggerService, [{\n      key: \"setUser\",\n      value: function setUser(userId, properties) {\n        this.userId = userId;\n        this.debug('EventLogger', 'User context set', {\n          userId,\n          properties\n        });\n      }\n\n      /**\r\n       * Clear user context\r\n       */\n    }, {\n      key: \"clearUser\",\n      value: function clearUser() {\n        this.userId = undefined;\n        this.debug('EventLogger', 'User context cleared');\n      }\n\n      /**\r\n       * Debug level logging - only in development\r\n       */\n    }, {\n      key: \"debug\",\n      value: function debug(category, message, data, context) {}\n\n      /**\r\n       * Info level logging\r\n       */\n    }, {\n      key: \"info\",\n      value: function info(category, message, data, context) {\n        this.log(LogLevel.INFO, category, message, data, undefined, context);\n      }\n\n      /**\r\n       * Warning level logging\r\n       */\n    }, {\n      key: \"warn\",\n      value: function warn(category, message, data, context) {\n        this.log(LogLevel.WARN, category, message, data, undefined, context);\n      }\n\n      /**\r\n       * Error level logging\r\n       */\n    }, {\n      key: \"error\",\n      value: function error(category, message, _error, data, context) {\n        this.log(LogLevel.ERROR, category, message, data, _error, context);\n      }\n\n      /**\r\n       * Critical error logging\r\n       */\n    }, {\n      key: \"critical\",\n      value: function critical(category, message, error, data, context) {\n        this.log(LogLevel.CRITICAL, category, message, data, error, context);\n      }\n\n      /**\r\n       * Network request logging\r\n       */\n    }, {\n      key: \"networkRequest\",\n      value: function networkRequest(url, method, statusCode, duration, error) {\n        var data = {\n          url,\n          method,\n          statusCode,\n          duration,\n          timestamp: Date.now()\n        };\n        if (error || statusCode && statusCode >= 400) {\n          this.error('Network', `${method} ${url} failed`, error, data);\n        } else {\n          this.info('Network', `${method} ${url}`, data);\n        }\n      }\n\n      /**\r\n       * Performance logging\r\n       */\n    }, {\n      key: \"performance\",\n      value: function performance(category, operation, duration, metadata) {\n        var data = {\n          operation,\n          duration,\n          ...metadata\n        };\n        if (duration > _analytics.ANALYTICS_CONFIG.performance.slowThresholdMs) {\n          this.warn('Performance', `Slow ${operation}: ${duration}ms`, data);\n        } else {\n          this.info('Performance', `${operation}: ${duration}ms`, data);\n        }\n      }\n\n      /**\r\n       * User action logging\r\n       */\n    }, {\n      key: \"userAction\",\n      value: function userAction(action, screen, data) {\n        this.info('UserAction', `${action} on ${screen}`, {\n          action,\n          screen,\n          ...data\n        });\n      }\n\n      /**\r\n       * Analytics event logging\r\n       */\n    }, {\n      key: \"analyticsEvent\",\n      value: function analyticsEvent(eventName, properties) {\n        this.info('Analytics', `Event: ${eventName}`, {\n          eventName,\n          properties\n        });\n      }\n\n      /**\r\n       * Core logging method\r\n       */\n    }, {\n      key: \"log\",\n      value: function log(level, category, message, data, error, context) {\n        // Check minimum log level\n        if (level < this.config.minLevel) {\n          return;\n        }\n        var entry = {\n          timestamp: new Date().toISOString(),\n          level,\n          category,\n          message,\n          data: this.config.shouldSanitizeData ? this.sanitizeData(data) : data,\n          error,\n          userId: this.userId,\n          sessionId: this.sessionId,\n          context: this.config.shouldSanitizeData ? this.sanitizeData(context) : context\n        };\n\n        // Store locally\n        this.storeLogEntry(entry);\n\n        // Console output\n        if (this.config.enableConsoleOutput) {\n          this.outputToConsole(entry);\n        }\n\n        // Queue for remote logging\n        if (this.config.enableRemoteLogging && level >= LogLevel.WARN) {\n          this.queueForRemoteLogging(entry);\n        }\n      }\n\n      /**\r\n       * Store log entry locally\r\n       */\n    }, {\n      key: \"storeLogEntry\",\n      value: function storeLogEntry(entry) {\n        this.localEntries.push(entry);\n\n        // Maintain max entries limit\n        if (this.localEntries.length > this.config.maxLocalEntries) {\n          this.localEntries = this.localEntries.slice(-this.config.maxLocalEntries);\n        }\n      }\n\n      /**\r\n       * Output log entry to console with appropriate styling\r\n       */\n    }, {\n      key: \"outputToConsole\",\n      value: function outputToConsole(entry) {\n        var timestamp = entry.timestamp.split('T')[1]?.split('.')[0] || '';\n        var prefix = `[${timestamp}] [${entry.category}]`;\n        switch (entry.level) {\n          case LogLevel.DEBUG:\n            break;\n          case LogLevel.INFO:\n            break;\n          case LogLevel.WARN:\n            break;\n          case LogLevel.ERROR:\n            break;\n          case LogLevel.CRITICAL:\n            break;\n        }\n      }\n\n      /**\r\n       * Queue log entry for remote logging\r\n       */\n    }, {\n      key: \"queueForRemoteLogging\",\n      value: function queueForRemoteLogging(entry) {\n        this.logQueue.push(entry);\n\n        // Auto-flush if queue gets too large\n        if (this.logQueue.length >= 50) {\n          this.flushLogs();\n        }\n      }\n\n      /**\r\n       * Flush queued logs to remote service\r\n       */\n    }, {\n      key: \"flushLogs\",\n      value: (function () {\n        var _flushLogs = (0, _asyncToGenerator2.default)(function* () {\n          if (this.isFlushingLogs || this.logQueue.length === 0) {\n            return;\n          }\n          this.isFlushingLogs = true;\n          var logsToSend = [...this.logQueue];\n          this.logQueue = [];\n          try {} catch (error) {\n            // If remote logging fails, put logs back in queue\n            this.logQueue.unshift(...logsToSend);\n          } finally {\n            this.isFlushingLogs = false;\n          }\n        });\n        function flushLogs() {\n          return _flushLogs.apply(this, arguments);\n        }\n        return flushLogs;\n      }()\n      /**\r\n       * Get recent log entries\r\n       */\n      )\n    }, {\n      key: \"getRecentLogs\",\n      value: function getRecentLogs() {\n        var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n        var minLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LogLevel.INFO;\n        return this.localEntries.filter(entry => entry.level >= minLevel).slice(-count);\n      }\n\n      /**\r\n       * Get logs by category\r\n       */\n    }, {\n      key: \"getLogsByCategory\",\n      value: function getLogsByCategory(category) {\n        var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n        return this.localEntries.filter(entry => entry.category === category).slice(-count);\n      }\n\n      /**\r\n       * Search logs\r\n       */\n    }, {\n      key: \"searchLogs\",\n      value: function searchLogs(query) {\n        var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n        var normalizedQuery = query.toLowerCase();\n        return this.localEntries.filter(entry => entry.message.toLowerCase().includes(normalizedQuery) || entry.category.toLowerCase().includes(normalizedQuery) || JSON.stringify(entry.data || {}).toLowerCase().includes(normalizedQuery)).slice(-count);\n      }\n\n      /**\r\n       * Export logs (for debugging or support)\r\n       */\n    }, {\n      key: \"exportLogs\",\n      value: function exportLogs() {\n        var minLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : LogLevel.INFO;\n        var logs = this.localEntries.filter(entry => entry.level >= minLevel);\n        return JSON.stringify(logs, null, 2);\n      }\n\n      /**\r\n       * Clear local log entries\r\n       */\n    }, {\n      key: \"clearLogs\",\n      value: function clearLogs() {\n        this.localEntries = [];\n        this.debug('EventLogger', 'Local logs cleared');\n      }\n\n      /**\r\n       * Update configuration\r\n       */\n    }, {\n      key: \"updateConfig\",\n      value: function updateConfig(newConfig) {\n        this.config = {\n          ...this.config,\n          ...newConfig\n        };\n        this.info('EventLogger', 'Configuration updated', newConfig);\n      }\n\n      /**\r\n       * Setup global error handling\r\n       */\n    }, {\n      key: \"setupGlobalErrorHandling\",\n      value: function setupGlobalErrorHandling() {\n        // Handle unhandled promise rejections\n        if (typeof global !== 'undefined') {\n          var originalHandler = global.onunhandledrejection;\n          var self = this;\n          global.onunhandledrejection = event => {\n            self.critical('UnhandledPromise', 'Unhandled promise rejection', event.reason, {\n              promise: event.promise\n            });\n            if (originalHandler) {\n              originalHandler.call(global, event);\n            }\n          };\n        }\n\n        // Handle uncaught exceptions\n        if (typeof global !== 'undefined' && global.process?.on) {\n          global.process.on('uncaughtException', error => {\n            this.critical('UncaughtException', 'Uncaught exception', error);\n          });\n        }\n      }\n\n      /**\r\n       * Generate a unique session ID\r\n       */\n    }, {\n      key: \"generateSessionId\",\n      value: function generateSessionId() {\n        return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n      }\n\n      /**\r\n       * Sanitize data to remove sensitive information\r\n       */\n    }, {\n      key: \"sanitizeData\",\n      value: function sanitizeData(data) {\n        var _this = this;\n        if (!data) return data;\n        if (typeof data === 'string') {\n          // Basic sanitization for common sensitive patterns\n          return data.replace(/\\b\\d{16}\\b/g, '**** **** **** ****') // Credit card numbers\n          .replace(/\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g, '***@***.***'); // Email addresses\n        }\n        if (Array.isArray(data)) {\n          return data.map(item => this.sanitizeData(item));\n        }\n        if (typeof data === 'object') {\n          var sanitized = {};\n          var _loop = function (key) {\n            // Skip sensitive keys\n            var sensitiveKeys = ['password', 'token', 'secret', 'key', 'auth', 'credential'];\n            if (sensitiveKeys.some(sensitive => key.toLowerCase().includes(sensitive))) {\n              sanitized[key] = '[REDACTED]';\n            } else {\n              sanitized[key] = _this.sanitizeData(value);\n            }\n          };\n          for (var _ref of Object.entries(data)) {\n            var _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n            var key = _ref2[0];\n            var value = _ref2[1];\n            _loop(key);\n          }\n          return sanitized;\n        }\n        return data;\n      }\n    }]);\n  }(); // Singleton instance\n  var EventLogger = exports.EventLogger = new EventLoggerService();\n\n  // Convenience functions for common logging patterns\n  var logUserAction = (action, screen, data) => {\n    EventLogger.userAction(action, screen, data);\n  };\n  exports.logUserAction = logUserAction;\n  var logNetworkRequest = (url, method, statusCode, duration, error) => {\n    EventLogger.networkRequest(url, method, statusCode, duration, error);\n  };\n  exports.logNetworkRequest = logNetworkRequest;\n  var logPerformance = (operation, duration, metadata) => {\n    EventLogger.performance('Performance', operation, duration, metadata);\n  };\n  exports.logPerformance = logPerformance;\n  var logError = (category, message, error, data) => {\n    EventLogger.error(category, message, error, data);\n  };\n  exports.logError = logError;\n  var logAnalyticsEvent = (eventName, properties) => {\n    EventLogger.analyticsEvent(eventName, properties);\n  };\n\n  // Types are already exported at declaration\n  exports.logAnalyticsEvent = logAnalyticsEvent;\n});","lineCount":456,"map":[[11,2,6,0],[11,6,6,0,"_analytics"],[11,16,6,0],[11,19,6,0,"require"],[11,26,6,0],[11,27,6,0,"_dependencyMap"],[11,41,6,0],[12,2,1,0],[13,0,2,0],[14,0,3,0],[15,0,4,0],[16,2,1,0],[16,6,8,12,"LogLevel"],[16,14,8,20],[16,17,8,20,"exports"],[16,24,8,20],[16,25,8,20,"LogLevel"],[16,33,8,20],[16,59,8,12,"LogLevel"],[16,67,8,20],[17,4,8,12,"LogLevel"],[17,12,8,20],[17,13,8,12,"LogLevel"],[17,21,8,20],[18,4,8,12,"LogLevel"],[18,12,8,20],[18,13,8,12,"LogLevel"],[18,21,8,20],[19,4,8,12,"LogLevel"],[19,12,8,20],[19,13,8,12,"LogLevel"],[19,21,8,20],[20,4,8,12,"LogLevel"],[20,12,8,20],[20,13,8,12,"LogLevel"],[20,21,8,20],[21,4,8,12,"LogLevel"],[21,12,8,20],[21,13,8,12,"LogLevel"],[21,21,8,20],[22,4,8,20],[22,11,8,12,"LogLevel"],[22,19,8,20],[23,2,8,20],[24,2,8,20],[24,6,38,6,"EventLoggerService"],[24,24,38,24],[25,4,46,2],[25,13,46,2,"EventLoggerService"],[25,32,46,2],[25,34,46,50],[26,6,46,50],[26,10,46,14,"config"],[26,16,46,43],[26,19,46,43,"arguments"],[26,28,46,43],[26,29,46,43,"length"],[26,35,46,43],[26,43,46,43,"arguments"],[26,52,46,43],[26,60,46,43,"undefined"],[26,69,46,43],[26,72,46,43,"arguments"],[26,81,46,43],[26,87,46,46],[26,88,46,47],[26,89,46,48],[27,6,46,48],[27,10,46,48,"_classCallCheck2"],[27,26,46,48],[27,27,46,48,"default"],[27,34,46,48],[27,42,46,48,"EventLoggerService"],[27,60,46,48],[28,6,46,48],[28,11,40,10,"localEntries"],[28,23,40,22],[28,26,40,37],[28,28,40,39],[29,6,40,39],[29,11,43,10,"logQueue"],[29,19,43,18],[29,22,43,33],[29,24,43,35],[30,6,43,35],[30,11,44,10,"isFlushingLogs"],[30,25,44,24],[30,28,44,27],[30,33,44,32],[31,6,47,4],[31,10,47,8],[31,11,47,9,"config"],[31,17,47,15],[31,20,47,18],[32,8,48,6,"minLevel"],[32,16,48,14],[32,18,48,43,"LogLevel"],[32,26,48,51],[32,27,48,52,"INFO"],[32,31,48,56],[33,8,49,6,"enableConsoleOutput"],[33,27,49,25],[33,29,49,27],[33,33,49,31],[34,8,50,6,"enableRemoteLogging"],[34,27,50,25],[34,29,50,27,"ANALYTICS_CONFIG"],[34,56,50,43],[34,57,50,44,"enabled"],[34,64,50,51],[35,8,51,6,"maxLocalEntries"],[35,23,51,21],[35,25,51,23],[35,29,51,27],[36,8,52,6,"shouldSanitizeData"],[36,26,52,24],[36,28,52,26],[36,32,52,30],[37,8,53,6],[37,11,53,9,"config"],[38,6,54,4],[38,7,54,5],[39,6,56,4],[39,10,56,8],[39,11,56,9,"sessionId"],[39,20,56,18],[39,23,56,21],[39,27,56,25],[39,28,56,26,"generateSessionId"],[39,45,56,43],[39,46,56,44],[39,47,56,45],[40,6,57,4],[40,10,57,8],[40,11,57,9,"setupGlobalErrorHandling"],[40,35,57,33],[40,36,57,34],[40,37,57,35],[42,6,59,4],[43,6,60,4],[43,10,60,8],[43,14,60,12],[43,15,60,13,"config"],[43,21,60,19],[43,22,60,20,"enableRemoteLogging"],[43,41,60,39],[43,43,60,41],[44,8,61,6,"setInterval"],[44,19,61,17],[44,20,61,18],[44,26,61,24],[44,30,61,28],[44,31,61,29,"flushLogs"],[44,40,61,38],[44,41,61,39],[44,42,61,40],[44,44,61,42],[44,49,61,47],[44,50,61,48],[44,51,61,49],[44,52,61,50],[45,6,62,4],[46,4,63,2],[48,4,65,2],[49,0,66,0],[50,0,67,0],[51,4,65,2],[51,15,65,2,"_createClass2"],[51,28,65,2],[51,29,65,2,"default"],[51,36,65,2],[51,38,65,2,"EventLoggerService"],[51,56,65,2],[52,6,65,2,"key"],[52,9,65,2],[53,6,65,2,"value"],[53,11,65,2],[53,13,68,2],[53,22,68,2,"setUser"],[53,29,68,9,"setUser"],[53,30,68,10,"userId"],[53,36,68,24],[53,38,68,26,"properties"],[53,48,68,58],[53,50,68,66],[54,8,69,4],[54,12,69,8],[54,13,69,9,"userId"],[54,19,69,15],[54,22,69,18,"userId"],[54,28,69,24],[55,8,70,4],[55,12,70,8],[55,13,70,9,"debug"],[55,18,70,14],[55,19,70,15],[55,32,70,28],[55,34,70,30],[55,52,70,48],[55,54,70,50],[56,10,70,52,"userId"],[56,16,70,58],[57,10,70,60,"properties"],[58,8,70,71],[58,9,70,72],[58,10,70,73],[59,6,71,2],[61,6,73,2],[62,0,74,0],[63,0,75,0],[64,4,73,2],[65,6,73,2,"key"],[65,9,73,2],[66,6,73,2,"value"],[66,11,73,2],[66,13,76,2],[66,22,76,2,"clearUser"],[66,31,76,11,"clearUser"],[66,32,76,11],[66,34,76,20],[67,8,77,4],[67,12,77,8],[67,13,77,9,"userId"],[67,19,77,15],[67,22,77,18,"undefined"],[67,31,77,27],[68,8,78,4],[68,12,78,8],[68,13,78,9,"debug"],[68,18,78,14],[68,19,78,15],[68,32,78,28],[68,34,78,30],[68,56,78,52],[68,57,78,53],[69,6,79,2],[71,6,81,2],[72,0,82,0],[73,0,83,0],[74,4,81,2],[75,6,81,2,"key"],[75,9,81,2],[76,6,81,2,"value"],[76,11,81,2],[76,13,84,2],[76,22,84,2,"debug"],[76,27,84,7,"debug"],[76,28,84,8,"category"],[76,36,84,24],[76,38,84,26,"message"],[76,45,84,41],[76,47,84,43,"data"],[76,51,84,53],[76,53,84,55,"context"],[76,60,84,84],[76,62,84,92],[76,63,88,2],[78,6,90,2],[79,0,91,0],[80,0,92,0],[81,4,90,2],[82,6,90,2,"key"],[82,9,90,2],[83,6,90,2,"value"],[83,11,90,2],[83,13,93,2],[83,22,93,2,"info"],[83,26,93,6,"info"],[83,27,93,7,"category"],[83,35,93,23],[83,37,93,25,"message"],[83,44,93,40],[83,46,93,42,"data"],[83,50,93,52],[83,52,93,54,"context"],[83,59,93,83],[83,61,93,91],[84,8,94,4],[84,12,94,8],[84,13,94,9,"log"],[84,16,94,12],[84,17,94,13,"LogLevel"],[84,25,94,21],[84,26,94,22,"INFO"],[84,30,94,26],[84,32,94,28,"category"],[84,40,94,36],[84,42,94,38,"message"],[84,49,94,45],[84,51,94,47,"data"],[84,55,94,51],[84,57,94,53,"undefined"],[84,66,94,62],[84,68,94,64,"context"],[84,75,94,71],[84,76,94,72],[85,6,95,2],[87,6,97,2],[88,0,98,0],[89,0,99,0],[90,4,97,2],[91,6,97,2,"key"],[91,9,97,2],[92,6,97,2,"value"],[92,11,97,2],[92,13,100,2],[92,22,100,2,"warn"],[92,26,100,6,"warn"],[92,27,100,7,"category"],[92,35,100,23],[92,37,100,25,"message"],[92,44,100,40],[92,46,100,42,"data"],[92,50,100,52],[92,52,100,54,"context"],[92,59,100,83],[92,61,100,91],[93,8,101,4],[93,12,101,8],[93,13,101,9,"log"],[93,16,101,12],[93,17,101,13,"LogLevel"],[93,25,101,21],[93,26,101,22,"WARN"],[93,30,101,26],[93,32,101,28,"category"],[93,40,101,36],[93,42,101,38,"message"],[93,49,101,45],[93,51,101,47,"data"],[93,55,101,51],[93,57,101,53,"undefined"],[93,66,101,62],[93,68,101,64,"context"],[93,75,101,71],[93,76,101,72],[94,6,102,2],[96,6,104,2],[97,0,105,0],[98,0,106,0],[99,4,104,2],[100,6,104,2,"key"],[100,9,104,2],[101,6,104,2,"value"],[101,11,104,2],[101,13,107,2],[101,22,107,2,"error"],[101,27,107,7,"error"],[101,28,107,8,"category"],[101,36,107,24],[101,38,107,26,"message"],[101,45,107,41],[101,47,107,43,"error"],[101,53,107,56],[101,55,107,58,"data"],[101,59,107,68],[101,61,107,70,"context"],[101,68,107,99],[101,70,107,107],[102,8,108,4],[102,12,108,8],[102,13,108,9,"log"],[102,16,108,12],[102,17,108,13,"LogLevel"],[102,25,108,21],[102,26,108,22,"ERROR"],[102,31,108,27],[102,33,108,29,"category"],[102,41,108,37],[102,43,108,39,"message"],[102,50,108,46],[102,52,108,48,"data"],[102,56,108,52],[102,58,108,54,"error"],[102,64,108,59],[102,66,108,61,"context"],[102,73,108,68],[102,74,108,69],[103,6,109,2],[105,6,111,2],[106,0,112,0],[107,0,113,0],[108,4,111,2],[109,6,111,2,"key"],[109,9,111,2],[110,6,111,2,"value"],[110,11,111,2],[110,13,114,2],[110,22,114,2,"critical"],[110,30,114,10,"critical"],[110,31,114,11,"category"],[110,39,114,27],[110,41,114,29,"message"],[110,48,114,44],[110,50,114,46,"error"],[110,55,114,59],[110,57,114,61,"data"],[110,61,114,71],[110,63,114,73,"context"],[110,70,114,102],[110,72,114,110],[111,8,115,4],[111,12,115,8],[111,13,115,9,"log"],[111,16,115,12],[111,17,115,13,"LogLevel"],[111,25,115,21],[111,26,115,22,"CRITICAL"],[111,34,115,30],[111,36,115,32,"category"],[111,44,115,40],[111,46,115,42,"message"],[111,53,115,49],[111,55,115,51,"data"],[111,59,115,55],[111,61,115,57,"error"],[111,66,115,62],[111,68,115,64,"context"],[111,75,115,71],[111,76,115,72],[112,6,116,2],[114,6,118,2],[115,0,119,0],[116,0,120,0],[117,4,118,2],[118,6,118,2,"key"],[118,9,118,2],[119,6,118,2,"value"],[119,11,118,2],[119,13,121,2],[119,22,121,2,"networkRequest"],[119,36,121,16,"networkRequest"],[119,37,121,17,"url"],[119,40,121,28],[119,42,121,30,"method"],[119,48,121,44],[119,50,121,46,"statusCode"],[119,60,121,65],[119,62,121,67,"duration"],[119,70,121,84],[119,72,121,86,"error"],[119,77,121,99],[119,79,121,107],[120,8,122,4],[120,12,122,10,"data"],[120,16,122,14],[120,19,122,17],[121,10,123,6,"url"],[121,13,123,9],[122,10,124,6,"method"],[122,16,124,12],[123,10,125,6,"statusCode"],[123,20,125,16],[124,10,126,6,"duration"],[124,18,126,14],[125,10,127,6,"timestamp"],[125,19,127,15],[125,21,127,17,"Date"],[125,25,127,21],[125,26,127,22,"now"],[125,29,127,25],[125,30,127,26],[126,8,128,4],[126,9,128,5],[127,8,130,4],[127,12,130,8,"error"],[127,17,130,13],[127,21,130,18,"statusCode"],[127,31,130,28],[127,35,130,32,"statusCode"],[127,45,130,42],[127,49,130,46],[127,52,130,50],[127,54,130,52],[128,10,131,6],[128,14,131,10],[128,15,131,11,"error"],[128,20,131,16],[128,21,131,17],[128,30,131,26],[128,32,131,28],[128,35,131,31,"method"],[128,41,131,37],[128,45,131,41,"url"],[128,48,131,44],[128,57,131,53],[128,59,131,55,"error"],[128,64,131,60],[128,66,131,62,"data"],[128,70,131,66],[128,71,131,67],[129,8,132,4],[129,9,132,5],[129,15,132,11],[130,10,133,6],[130,14,133,10],[130,15,133,11,"info"],[130,19,133,15],[130,20,133,16],[130,29,133,25],[130,31,133,27],[130,34,133,30,"method"],[130,40,133,36],[130,44,133,40,"url"],[130,47,133,43],[130,49,133,45],[130,51,133,47,"data"],[130,55,133,51],[130,56,133,52],[131,8,134,4],[132,6,135,2],[134,6,137,2],[135,0,138,0],[136,0,139,0],[137,4,137,2],[138,6,137,2,"key"],[138,9,137,2],[139,6,137,2,"value"],[139,11,137,2],[139,13,140,2],[139,22,140,2,"performance"],[139,33,140,13,"performance"],[139,34,140,14,"category"],[139,42,140,30],[139,44,140,32,"operation"],[139,53,140,49],[139,55,140,51,"duration"],[139,63,140,67],[139,65,140,69,"metadata"],[139,73,140,99],[139,75,140,107],[140,8,141,4],[140,12,141,10,"data"],[140,16,141,14],[140,19,141,17],[141,10,142,6,"operation"],[141,19,142,15],[142,10,143,6,"duration"],[142,18,143,14],[143,10,144,6],[143,13,144,9,"metadata"],[144,8,145,4],[144,9,145,5],[145,8,147,4],[145,12,147,8,"duration"],[145,20,147,16],[145,23,147,19,"ANALYTICS_CONFIG"],[145,50,147,35],[145,51,147,36,"performance"],[145,62,147,47],[145,63,147,48,"slowThresholdMs"],[145,78,147,63],[145,80,147,65],[146,10,148,6],[146,14,148,10],[146,15,148,11,"warn"],[146,19,148,15],[146,20,148,16],[146,33,148,29],[146,35,148,31],[146,43,148,39,"operation"],[146,52,148,48],[146,57,148,53,"duration"],[146,65,148,61],[146,69,148,65],[146,71,148,67,"data"],[146,75,148,71],[146,76,148,72],[147,8,149,4],[147,9,149,5],[147,15,149,11],[148,10,150,6],[148,14,150,10],[148,15,150,11,"info"],[148,19,150,15],[148,20,150,16],[148,33,150,29],[148,35,150,31],[148,38,150,34,"operation"],[148,47,150,43],[148,52,150,48,"duration"],[148,60,150,56],[148,64,150,60],[148,66,150,62,"data"],[148,70,150,66],[148,71,150,67],[149,8,151,4],[150,6,152,2],[152,6,154,2],[153,0,155,0],[154,0,156,0],[155,4,154,2],[156,6,154,2,"key"],[156,9,154,2],[157,6,154,2,"value"],[157,11,154,2],[157,13,157,2],[157,22,157,2,"userAction"],[157,32,157,12,"userAction"],[157,33,157,13,"action"],[157,39,157,27],[157,41,157,29,"screen"],[157,47,157,43],[157,49,157,45,"data"],[157,53,157,55],[157,55,157,63],[158,8,158,4],[158,12,158,8],[158,13,158,9,"info"],[158,17,158,13],[158,18,158,14],[158,30,158,26],[158,32,158,28],[158,35,158,31,"action"],[158,41,158,37],[158,48,158,44,"screen"],[158,54,158,50],[158,56,158,52],[158,58,158,54],[159,10,159,6,"action"],[159,16,159,12],[160,10,160,6,"screen"],[160,16,160,12],[161,10,161,6],[161,13,161,9,"data"],[162,8,162,4],[162,9,162,5],[162,10,162,6],[163,6,163,2],[165,6,165,2],[166,0,166,0],[167,0,167,0],[168,4,165,2],[169,6,165,2,"key"],[169,9,165,2],[170,6,165,2,"value"],[170,11,165,2],[170,13,168,2],[170,22,168,2,"analyticsEvent"],[170,36,168,16,"analyticsEvent"],[170,37,168,17,"eventName"],[170,46,168,34],[170,48,168,36,"properties"],[170,58,168,68],[170,60,168,76],[171,8,169,4],[171,12,169,8],[171,13,169,9,"info"],[171,17,169,13],[171,18,169,14],[171,29,169,25],[171,31,169,27],[171,41,169,37,"eventName"],[171,50,169,46],[171,52,169,48],[171,54,169,50],[172,10,170,6,"eventName"],[172,19,170,15],[173,10,171,6,"properties"],[174,8,172,4],[174,9,172,5],[174,10,172,6],[175,6,173,2],[177,6,175,2],[178,0,176,0],[179,0,177,0],[180,4,175,2],[181,6,175,2,"key"],[181,9,175,2],[182,6,175,2,"value"],[182,11,175,2],[182,13,178,2],[182,22,178,10,"log"],[182,25,178,13,"log"],[182,26,179,4,"level"],[182,31,179,19],[182,33,180,4,"category"],[182,41,180,20],[182,43,181,4,"message"],[182,50,181,19],[182,52,182,4,"data"],[182,56,182,14],[182,58,183,4,"error"],[182,63,183,17],[182,65,184,4,"context"],[182,72,184,33],[182,74,185,10],[183,8,186,4],[184,8,187,4],[184,12,187,8,"level"],[184,17,187,13],[184,20,187,16],[184,24,187,20],[184,25,187,21,"config"],[184,31,187,27],[184,32,187,28,"minLevel"],[184,40,187,36],[184,42,187,38],[185,10,188,6],[186,8,189,4],[187,8,191,4],[187,12,191,10,"entry"],[187,17,191,25],[187,20,191,28],[188,10,192,6,"timestamp"],[188,19,192,15],[188,21,192,17],[188,25,192,21,"Date"],[188,29,192,25],[188,30,192,26],[188,31,192,27],[188,32,192,28,"toISOString"],[188,43,192,39],[188,44,192,40],[188,45,192,41],[189,10,193,6,"level"],[189,15,193,11],[190,10,194,6,"category"],[190,18,194,14],[191,10,195,6,"message"],[191,17,195,13],[192,10,196,6,"data"],[192,14,196,10],[192,16,196,12],[192,20,196,16],[192,21,196,17,"config"],[192,27,196,23],[192,28,196,24,"shouldSanitizeData"],[192,46,196,42],[192,49,196,45],[192,53,196,49],[192,54,196,50,"sanitizeData"],[192,66,196,62],[192,67,196,63,"data"],[192,71,196,67],[192,72,196,68],[192,75,196,71,"data"],[192,79,196,75],[193,10,197,6,"error"],[193,15,197,11],[194,10,198,6,"userId"],[194,16,198,12],[194,18,198,14],[194,22,198,18],[194,23,198,19,"userId"],[194,29,198,25],[195,10,199,6,"sessionId"],[195,19,199,15],[195,21,199,17],[195,25,199,21],[195,26,199,22,"sessionId"],[195,35,199,31],[196,10,200,6,"context"],[196,17,200,13],[196,19,200,15],[196,23,200,19],[196,24,200,20,"config"],[196,30,200,26],[196,31,200,27,"shouldSanitizeData"],[196,49,200,45],[196,52,200,48],[196,56,200,52],[196,57,200,53,"sanitizeData"],[196,69,200,65],[196,70,200,66,"context"],[196,77,200,73],[196,78,200,74],[196,81,200,77,"context"],[197,8,201,4],[197,9,201,5],[199,8,203,4],[200,8,204,4],[200,12,204,8],[200,13,204,9,"storeLogEntry"],[200,26,204,22],[200,27,204,23,"entry"],[200,32,204,28],[200,33,204,29],[202,8,206,4],[203,8,207,4],[203,12,207,8],[203,16,207,12],[203,17,207,13,"config"],[203,23,207,19],[203,24,207,20,"enableConsoleOutput"],[203,43,207,39],[203,45,207,41],[204,10,208,6],[204,14,208,10],[204,15,208,11,"outputToConsole"],[204,30,208,26],[204,31,208,27,"entry"],[204,36,208,32],[204,37,208,33],[205,8,209,4],[207,8,211,4],[208,8,212,4],[208,12,212,8],[208,16,212,12],[208,17,212,13,"config"],[208,23,212,19],[208,24,212,20,"enableRemoteLogging"],[208,43,212,39],[208,47,212,43,"level"],[208,52,212,48],[208,56,212,52,"LogLevel"],[208,64,212,60],[208,65,212,61,"WARN"],[208,69,212,65],[208,71,212,67],[209,10,213,6],[209,14,213,10],[209,15,213,11,"queueForRemoteLogging"],[209,36,213,32],[209,37,213,33,"entry"],[209,42,213,38],[209,43,213,39],[210,8,214,4],[211,6,215,2],[213,6,217,2],[214,0,218,0],[215,0,219,0],[216,4,217,2],[217,6,217,2,"key"],[217,9,217,2],[218,6,217,2,"value"],[218,11,217,2],[218,13,220,2],[218,22,220,10,"storeLogEntry"],[218,35,220,23,"storeLogEntry"],[218,36,220,24,"entry"],[218,41,220,39],[218,43,220,47],[219,8,221,4],[219,12,221,8],[219,13,221,9,"localEntries"],[219,25,221,21],[219,26,221,22,"push"],[219,30,221,26],[219,31,221,27,"entry"],[219,36,221,32],[219,37,221,33],[221,8,223,4],[222,8,224,4],[222,12,224,8],[222,16,224,12],[222,17,224,13,"localEntries"],[222,29,224,25],[222,30,224,26,"length"],[222,36,224,32],[222,39,224,35],[222,43,224,39],[222,44,224,40,"config"],[222,50,224,46],[222,51,224,47,"maxLocalEntries"],[222,66,224,62],[222,68,224,64],[223,10,225,6],[223,14,225,10],[223,15,225,11,"localEntries"],[223,27,225,23],[223,30,225,26],[223,34,225,30],[223,35,225,31,"localEntries"],[223,47,225,43],[223,48,225,44,"slice"],[223,53,225,49],[223,54,225,50],[223,55,225,51],[223,59,225,55],[223,60,225,56,"config"],[223,66,225,62],[223,67,225,63,"maxLocalEntries"],[223,82,225,78],[223,83,225,79],[224,8,226,4],[225,6,227,2],[227,6,229,2],[228,0,230,0],[229,0,231,0],[230,4,229,2],[231,6,229,2,"key"],[231,9,229,2],[232,6,229,2,"value"],[232,11,229,2],[232,13,232,2],[232,22,232,10,"outputToConsole"],[232,37,232,25,"outputToConsole"],[232,38,232,26,"entry"],[232,43,232,41],[232,45,232,49],[233,8,233,4],[233,12,233,10,"timestamp"],[233,21,233,19],[233,24,233,22,"entry"],[233,29,233,27],[233,30,233,28,"timestamp"],[233,39,233,37],[233,40,233,38,"split"],[233,45,233,43],[233,46,233,44],[233,49,233,47],[233,50,233,48],[233,51,233,49],[233,52,233,50],[233,53,233,51],[233,55,233,53,"split"],[233,60,233,58],[233,61,233,59],[233,64,233,62],[233,65,233,63],[233,66,233,64],[233,67,233,65],[233,68,233,66],[233,72,233,70],[233,74,233,72],[234,8,234,4],[234,12,234,10,"prefix"],[234,18,234,16],[234,21,234,19],[234,25,234,23,"timestamp"],[234,34,234,32],[234,40,234,38,"entry"],[234,45,234,43],[234,46,234,44,"category"],[234,54,234,52],[234,57,234,55],[235,8,236,4],[235,16,236,12,"entry"],[235,21,236,17],[235,22,236,18,"level"],[235,27,236,23],[236,10,237,6],[236,15,237,11,"LogLevel"],[236,23,237,19],[236,24,237,20,"DEBUG"],[236,29,237,25],[237,12,239,8],[238,10,240,6],[238,15,240,11,"LogLevel"],[238,23,240,19],[238,24,240,20,"INFO"],[238,28,240,24],[239,12,242,8],[240,10,243,6],[240,15,243,11,"LogLevel"],[240,23,243,19],[240,24,243,20,"WARN"],[240,28,243,24],[241,12,245,8],[242,10,246,6],[242,15,246,11,"LogLevel"],[242,23,246,19],[242,24,246,20,"ERROR"],[242,29,246,25],[243,12,248,8],[244,10,249,6],[244,15,249,11,"LogLevel"],[244,23,249,19],[244,24,249,20,"CRITICAL"],[244,32,249,28],[245,12,251,8],[246,8,252,4],[247,6,253,2],[249,6,255,2],[250,0,256,0],[251,0,257,0],[252,4,255,2],[253,6,255,2,"key"],[253,9,255,2],[254,6,255,2,"value"],[254,11,255,2],[254,13,258,2],[254,22,258,10,"queueForRemoteLogging"],[254,43,258,31,"queueForRemoteLogging"],[254,44,258,32,"entry"],[254,49,258,47],[254,51,258,55],[255,8,259,4],[255,12,259,8],[255,13,259,9,"logQueue"],[255,21,259,17],[255,22,259,18,"push"],[255,26,259,22],[255,27,259,23,"entry"],[255,32,259,28],[255,33,259,29],[257,8,261,4],[258,8,262,4],[258,12,262,8],[258,16,262,12],[258,17,262,13,"logQueue"],[258,25,262,21],[258,26,262,22,"length"],[258,32,262,28],[258,36,262,32],[258,38,262,34],[258,40,262,36],[259,10,263,6],[259,14,263,10],[259,15,263,11,"flushLogs"],[259,24,263,20],[259,25,263,21],[259,26,263,22],[260,8,264,4],[261,6,265,2],[263,6,267,2],[264,0,268,0],[265,0,269,0],[266,4,267,2],[267,6,267,2,"key"],[267,9,267,2],[268,6,267,2,"value"],[268,11,267,2],[269,8,267,2],[269,12,267,2,"_flushLogs"],[269,22,267,2],[269,29,267,2,"_asyncToGenerator2"],[269,47,267,2],[269,48,267,2,"default"],[269,55,267,2],[269,57,270,2],[269,70,270,43],[270,10,271,4],[270,14,271,8],[270,18,271,12],[270,19,271,13,"isFlushingLogs"],[270,33,271,27],[270,37,271,31],[270,41,271,35],[270,42,271,36,"logQueue"],[270,50,271,44],[270,51,271,45,"length"],[270,57,271,51],[270,62,271,56],[270,63,271,57],[270,65,271,59],[271,12,272,6],[272,10,273,4],[273,10,275,4],[273,14,275,8],[273,15,275,9,"isFlushingLogs"],[273,29,275,23],[273,32,275,26],[273,36,275,30],[274,10,276,4],[274,14,276,10,"logsToSend"],[274,24,276,20],[274,27,276,23],[274,28,276,24],[274,31,276,27],[274,35,276,31],[274,36,276,32,"logQueue"],[274,44,276,40],[274,45,276,41],[275,10,277,4],[275,14,277,8],[275,15,277,9,"logQueue"],[275,23,277,17],[275,26,277,20],[275,28,277,22],[276,10,279,4],[276,14,279,8],[276,15,294,4],[276,16,294,5],[276,17,294,6],[276,24,294,13,"error"],[276,29,294,18],[276,31,294,20],[277,12,295,6],[278,12,296,6],[278,16,296,10],[278,17,296,11,"logQueue"],[278,25,296,19],[278,26,296,20,"unshift"],[278,33,296,27],[278,34,296,28],[278,37,296,31,"logsToSend"],[278,47,296,41],[278,48,296,42],[279,10,298,4],[279,11,298,5],[279,20,298,14],[280,12,299,6],[280,16,299,10],[280,17,299,11,"isFlushingLogs"],[280,31,299,25],[280,34,299,28],[280,39,299,33],[281,10,300,4],[282,8,301,2],[282,9,301,3],[283,8,301,3],[283,17,270,16,"flushLogs"],[283,26,270,25,"flushLogs"],[283,27,270,25],[284,10,270,25],[284,17,270,25,"_flushLogs"],[284,27,270,25],[284,28,270,25,"apply"],[284,33,270,25],[284,40,270,25,"arguments"],[284,49,270,25],[285,8,270,25],[286,8,270,25],[286,15,270,16,"flushLogs"],[286,24,270,25],[287,6,270,25],[288,6,303,2],[289,0,304,0],[290,0,305,0],[291,6,303,2],[292,4,303,2],[293,6,303,2,"key"],[293,9,303,2],[294,6,303,2,"value"],[294,11,303,2],[294,13,306,2],[294,22,306,2,"getRecentLogs"],[294,35,306,15,"getRecentLogs"],[294,36,306,15],[294,38,306,85],[295,8,306,85],[295,12,306,16,"count"],[295,17,306,29],[295,20,306,29,"arguments"],[295,29,306,29],[295,30,306,29,"length"],[295,36,306,29],[295,44,306,29,"arguments"],[295,53,306,29],[295,61,306,29,"undefined"],[295,70,306,29],[295,73,306,29,"arguments"],[295,82,306,29],[295,88,306,32],[295,91,306,35],[296,8,306,35],[296,12,306,37,"minLevel"],[296,20,306,55],[296,23,306,55,"arguments"],[296,32,306,55],[296,33,306,55,"length"],[296,39,306,55],[296,47,306,55,"arguments"],[296,56,306,55],[296,64,306,55,"undefined"],[296,73,306,55],[296,76,306,55,"arguments"],[296,85,306,55],[296,91,306,58,"LogLevel"],[296,99,306,66],[296,100,306,67,"INFO"],[296,104,306,71],[297,8,307,4],[297,15,307,11],[297,19,307,15],[297,20,307,16,"localEntries"],[297,32,307,28],[297,33,308,7,"filter"],[297,39,308,13],[297,40,308,14,"entry"],[297,45,308,19],[297,49,308,23,"entry"],[297,54,308,28],[297,55,308,29,"level"],[297,60,308,34],[297,64,308,38,"minLevel"],[297,72,308,46],[297,73,308,47],[297,74,309,7,"slice"],[297,79,309,12],[297,80,309,13],[297,81,309,14,"count"],[297,86,309,19],[297,87,309,20],[298,6,310,2],[300,6,312,2],[301,0,313,0],[302,0,314,0],[303,4,312,2],[304,6,312,2,"key"],[304,9,312,2],[305,6,312,2,"value"],[305,11,312,2],[305,13,315,2],[305,22,315,2,"getLogsByCategory"],[305,39,315,19,"getLogsByCategory"],[305,40,315,20,"category"],[305,48,315,36],[305,50,315,70],[306,8,315,70],[306,12,315,38,"count"],[306,17,315,51],[306,20,315,51,"arguments"],[306,29,315,51],[306,30,315,51,"length"],[306,36,315,51],[306,44,315,51,"arguments"],[306,53,315,51],[306,61,315,51,"undefined"],[306,70,315,51],[306,73,315,51,"arguments"],[306,82,315,51],[306,88,315,54],[306,90,315,56],[307,8,316,4],[307,15,316,11],[307,19,316,15],[307,20,316,16,"localEntries"],[307,32,316,28],[307,33,317,7,"filter"],[307,39,317,13],[307,40,317,14,"entry"],[307,45,317,19],[307,49,317,23,"entry"],[307,54,317,28],[307,55,317,29,"category"],[307,63,317,37],[307,68,317,42,"category"],[307,76,317,50],[307,77,317,51],[307,78,318,7,"slice"],[307,83,318,12],[307,84,318,13],[307,85,318,14,"count"],[307,90,318,19],[307,91,318,20],[308,6,319,2],[310,6,321,2],[311,0,322,0],[312,0,323,0],[313,4,321,2],[314,6,321,2,"key"],[314,9,321,2],[315,6,321,2,"value"],[315,11,321,2],[315,13,324,2],[315,22,324,2,"searchLogs"],[315,32,324,12,"searchLogs"],[315,33,324,13,"query"],[315,38,324,26],[315,40,324,60],[316,8,324,60],[316,12,324,28,"count"],[316,17,324,41],[316,20,324,41,"arguments"],[316,29,324,41],[316,30,324,41,"length"],[316,36,324,41],[316,44,324,41,"arguments"],[316,53,324,41],[316,61,324,41,"undefined"],[316,70,324,41],[316,73,324,41,"arguments"],[316,82,324,41],[316,88,324,44],[316,90,324,46],[317,8,325,4],[317,12,325,10,"normalizedQuery"],[317,27,325,25],[317,30,325,28,"query"],[317,35,325,33],[317,36,325,34,"toLowerCase"],[317,47,325,45],[317,48,325,46],[317,49,325,47],[318,8,326,4],[318,15,326,11],[318,19,326,15],[318,20,326,16,"localEntries"],[318,32,326,28],[318,33,327,7,"filter"],[318,39,327,13],[318,40,327,14,"entry"],[318,45,327,19],[318,49,328,8,"entry"],[318,54,328,13],[318,55,328,14,"message"],[318,62,328,21],[318,63,328,22,"toLowerCase"],[318,74,328,33],[318,75,328,34],[318,76,328,35],[318,77,328,36,"includes"],[318,85,328,44],[318,86,328,45,"normalizedQuery"],[318,101,328,60],[318,102,328,61],[318,106,329,8,"entry"],[318,111,329,13],[318,112,329,14,"category"],[318,120,329,22],[318,121,329,23,"toLowerCase"],[318,132,329,34],[318,133,329,35],[318,134,329,36],[318,135,329,37,"includes"],[318,143,329,45],[318,144,329,46,"normalizedQuery"],[318,159,329,61],[318,160,329,62],[318,164,330,8,"JSON"],[318,168,330,12],[318,169,330,13,"stringify"],[318,178,330,22],[318,179,330,23,"entry"],[318,184,330,28],[318,185,330,29,"data"],[318,189,330,33],[318,193,330,37],[318,194,330,38],[318,195,330,39],[318,196,330,40],[318,197,330,41,"toLowerCase"],[318,208,330,52],[318,209,330,53],[318,210,330,54],[318,211,330,55,"includes"],[318,219,330,63],[318,220,330,64,"normalizedQuery"],[318,235,330,79],[318,236,331,6],[318,237,331,7],[318,238,332,7,"slice"],[318,243,332,12],[318,244,332,13],[318,245,332,14,"count"],[318,250,332,19],[318,251,332,20],[319,6,333,2],[321,6,335,2],[322,0,336,0],[323,0,337,0],[324,4,335,2],[325,6,335,2,"key"],[325,9,335,2],[326,6,335,2,"value"],[326,11,335,2],[326,13,338,2],[326,22,338,2,"exportLogs"],[326,32,338,12,"exportLogs"],[326,33,338,12],[326,35,338,57],[327,8,338,57],[327,12,338,13,"minLevel"],[327,20,338,31],[327,23,338,31,"arguments"],[327,32,338,31],[327,33,338,31,"length"],[327,39,338,31],[327,47,338,31,"arguments"],[327,56,338,31],[327,64,338,31,"undefined"],[327,73,338,31],[327,76,338,31,"arguments"],[327,85,338,31],[327,91,338,34,"LogLevel"],[327,99,338,42],[327,100,338,43,"INFO"],[327,104,338,47],[328,8,339,4],[328,12,339,10,"logs"],[328,16,339,14],[328,19,339,17],[328,23,339,21],[328,24,339,22,"localEntries"],[328,36,339,34],[328,37,339,35,"filter"],[328,43,339,41],[328,44,339,42,"entry"],[328,49,339,47],[328,53,339,51,"entry"],[328,58,339,56],[328,59,339,57,"level"],[328,64,339,62],[328,68,339,66,"minLevel"],[328,76,339,74],[328,77,339,75],[329,8,340,4],[329,15,340,11,"JSON"],[329,19,340,15],[329,20,340,16,"stringify"],[329,29,340,25],[329,30,340,26,"logs"],[329,34,340,30],[329,36,340,32],[329,40,340,36],[329,42,340,38],[329,43,340,39],[329,44,340,40],[330,6,341,2],[332,6,343,2],[333,0,344,0],[334,0,345,0],[335,4,343,2],[336,6,343,2,"key"],[336,9,343,2],[337,6,343,2,"value"],[337,11,343,2],[337,13,346,2],[337,22,346,2,"clearLogs"],[337,31,346,11,"clearLogs"],[337,32,346,11],[337,34,346,20],[338,8,347,4],[338,12,347,8],[338,13,347,9,"localEntries"],[338,25,347,21],[338,28,347,24],[338,30,347,26],[339,8,348,4],[339,12,348,8],[339,13,348,9,"debug"],[339,18,348,14],[339,19,348,15],[339,32,348,28],[339,34,348,30],[339,54,348,50],[339,55,348,51],[340,6,349,2],[342,6,351,2],[343,0,352,0],[344,0,353,0],[345,4,351,2],[346,6,351,2,"key"],[346,9,351,2],[347,6,351,2,"value"],[347,11,351,2],[347,13,354,2],[347,22,354,2,"updateConfig"],[347,34,354,14,"updateConfig"],[347,35,354,15,"newConfig"],[347,44,354,47],[347,46,354,55],[348,8,355,4],[348,12,355,8],[348,13,355,9,"config"],[348,19,355,15],[348,22,355,18],[349,10,355,20],[349,13,355,23],[349,17,355,27],[349,18,355,28,"config"],[349,24,355,34],[350,10,355,36],[350,13,355,39,"newConfig"],[351,8,355,49],[351,9,355,50],[352,8,356,4],[352,12,356,8],[352,13,356,9,"info"],[352,17,356,13],[352,18,356,14],[352,31,356,27],[352,33,356,29],[352,56,356,52],[352,58,356,54,"newConfig"],[352,67,356,63],[352,68,356,64],[353,6,357,2],[355,6,359,2],[356,0,360,0],[357,0,361,0],[358,4,359,2],[359,6,359,2,"key"],[359,9,359,2],[360,6,359,2,"value"],[360,11,359,2],[360,13,362,2],[360,22,362,10,"setupGlobalErrorHandling"],[360,46,362,34,"setupGlobalErrorHandling"],[360,47,362,34],[360,49,362,43],[361,8,363,4],[362,8,364,4],[362,12,364,8],[362,19,364,15,"global"],[362,25,364,21],[362,30,364,26],[362,41,364,37],[362,43,364,39],[363,10,365,6],[363,14,365,12,"originalHandler"],[363,29,365,27],[363,32,365,30,"global"],[363,38,365,36],[363,39,365,37,"onunhandledrejection"],[363,59,365,57],[364,10,366,6],[364,14,366,12,"self"],[364,18,366,16],[364,21,366,19],[364,25,366,23],[365,10,367,6,"global"],[365,16,367,12],[365,17,367,13,"onunhandledrejection"],[365,37,367,33],[365,40,367,37,"event"],[365,45,367,47],[365,49,367,52],[366,12,368,8,"self"],[366,16,368,12],[366,17,368,13,"critical"],[366,25,368,21],[366,26,368,22],[366,44,368,40],[366,46,368,42],[366,75,368,71],[366,77,368,73,"event"],[366,82,368,78],[366,83,368,79,"reason"],[366,89,368,85],[366,91,368,87],[367,14,369,10,"promise"],[367,21,369,17],[367,23,369,19,"event"],[367,28,369,24],[367,29,369,25,"promise"],[368,12,370,8],[368,13,370,9],[368,14,370,10],[369,12,372,8],[369,16,372,12,"originalHandler"],[369,31,372,27],[369,33,372,29],[370,14,373,10,"originalHandler"],[370,29,373,25],[370,30,373,26,"call"],[370,34,373,30],[370,35,373,31,"global"],[370,41,373,37],[370,43,373,39,"event"],[370,48,373,44],[370,49,373,45],[371,12,374,8],[372,10,375,6],[372,11,375,7],[373,8,376,4],[375,8,378,4],[376,8,379,4],[376,12,379,8],[376,19,379,15,"global"],[376,25,379,21],[376,30,379,26],[376,41,379,37],[376,45,379,41,"global"],[376,51,379,47],[376,52,379,48,"process"],[376,59,379,55],[376,61,379,57,"on"],[376,63,379,59],[376,65,379,61],[377,10,380,6,"global"],[377,16,380,12],[377,17,380,13,"process"],[377,24,380,20],[377,25,380,21,"on"],[377,27,380,23],[377,28,380,24],[377,47,380,43],[377,49,380,46,"error"],[377,54,380,58],[377,58,380,63],[378,12,381,8],[378,16,381,12],[378,17,381,13,"critical"],[378,25,381,21],[378,26,381,22],[378,45,381,41],[378,47,381,43],[378,67,381,63],[378,69,381,65,"error"],[378,74,381,70],[378,75,381,71],[379,10,382,6],[379,11,382,7],[379,12,382,8],[380,8,383,4],[381,6,384,2],[383,6,386,2],[384,0,387,0],[385,0,388,0],[386,4,386,2],[387,6,386,2,"key"],[387,9,386,2],[388,6,386,2,"value"],[388,11,386,2],[388,13,389,2],[388,22,389,10,"generateSessionId"],[388,39,389,27,"generateSessionId"],[388,40,389,27],[388,42,389,38],[389,8,390,4],[389,15,390,11],[389,18,390,14,"Date"],[389,22,390,18],[389,23,390,19,"now"],[389,26,390,22],[389,27,390,23],[389,28,390,24],[389,32,390,28,"Math"],[389,36,390,32],[389,37,390,33,"random"],[389,43,390,39],[389,44,390,40],[389,45,390,41],[389,46,390,42,"toString"],[389,54,390,50],[389,55,390,51],[389,57,390,53],[389,58,390,54],[389,59,390,55,"substr"],[389,65,390,61],[389,66,390,62],[389,67,390,63],[389,69,390,65],[389,70,390,66],[389,71,390,67],[389,73,390,69],[390,6,391,2],[392,6,393,2],[393,0,394,0],[394,0,395,0],[395,4,393,2],[396,6,393,2,"key"],[396,9,393,2],[397,6,393,2,"value"],[397,11,393,2],[397,13,396,2],[397,22,396,10,"sanitizeData"],[397,34,396,22,"sanitizeData"],[397,35,396,23,"data"],[397,39,396,32],[397,41,396,39],[398,8,396,39],[398,12,396,39,"_this"],[398,17,396,39],[399,8,397,4],[399,12,397,8],[399,13,397,9,"data"],[399,17,397,13],[399,19,397,15],[399,26,397,22,"data"],[399,30,397,26],[400,8,399,4],[400,12,399,8],[400,19,399,15,"data"],[400,23,399,19],[400,28,399,24],[400,36,399,32],[400,38,399,34],[401,10,400,6],[402,10,401,6],[402,17,401,13,"data"],[402,21,401,17],[402,22,401,18,"replace"],[402,29,401,25],[402,30,401,26],[402,43,401,39],[402,45,401,41],[402,66,401,62],[402,67,401,63],[402,68,401,64],[403,10,401,64],[403,11,402,18,"replace"],[403,18,402,25],[403,19,402,26],[403,73,402,80],[403,75,402,82],[403,88,402,95],[403,89,402,96],[403,90,402,97],[403,91,402,98],[404,8,403,4],[405,8,405,4],[405,12,405,8,"Array"],[405,17,405,13],[405,18,405,14,"isArray"],[405,25,405,21],[405,26,405,22,"data"],[405,30,405,26],[405,31,405,27],[405,33,405,29],[406,10,406,6],[406,17,406,13,"data"],[406,21,406,17],[406,22,406,18,"map"],[406,25,406,21],[406,26,406,22,"item"],[406,30,406,26],[406,34,406,30],[406,38,406,34],[406,39,406,35,"sanitizeData"],[406,51,406,47],[406,52,406,48,"item"],[406,56,406,52],[406,57,406,53],[406,58,406,54],[407,8,407,4],[408,8,409,4],[408,12,409,8],[408,19,409,15,"data"],[408,23,409,19],[408,28,409,24],[408,36,409,32],[408,38,409,34],[409,10,410,6],[409,14,410,12,"sanitized"],[409,23,410,26],[409,26,410,29],[409,27,410,30],[409,28,410,31],[410,10,410,32],[410,14,410,32,"_loop"],[410,19,410,32],[410,31,410,32,"_loop"],[410,32,410,32,"key"],[410,35,410,32],[410,37,411,55],[411,12,412,8],[412,12,413,8],[412,16,413,14,"sensitiveKeys"],[412,29,413,27],[412,32,413,30],[412,33,413,31],[412,43,413,41],[412,45,413,43],[412,52,413,50],[412,54,413,52],[412,62,413,60],[412,64,413,62],[412,69,413,67],[412,71,413,69],[412,77,413,75],[412,79,413,77],[412,91,413,89],[412,92,413,90],[413,12,414,8],[413,16,414,12,"sensitiveKeys"],[413,29,414,25],[413,30,414,26,"some"],[413,34,414,30],[413,35,414,31,"sensitive"],[413,44,414,40],[413,48,414,44,"key"],[413,51,414,47],[413,52,414,48,"toLowerCase"],[413,63,414,59],[413,64,414,60],[413,65,414,61],[413,66,414,62,"includes"],[413,74,414,70],[413,75,414,71,"sensitive"],[413,84,414,80],[413,85,414,81],[413,86,414,82],[413,88,414,84],[414,14,415,10,"sanitized"],[414,23,415,19],[414,24,415,20,"key"],[414,27,415,23],[414,28,415,24],[414,31,415,27],[414,43,415,39],[415,12,416,8],[415,13,416,9],[415,19,416,15],[416,14,417,10,"sanitized"],[416,23,417,19],[416,24,417,20,"key"],[416,27,417,23],[416,28,417,24],[416,31,417,27,"_this"],[416,36,417,31],[416,37,417,32,"sanitizeData"],[416,49,417,44],[416,50,417,45,"value"],[416,55,417,50],[416,56,417,51],[417,12,418,8],[418,10,419,6],[418,11,419,7],[419,10,411,6],[419,19,411,6,"_ref"],[419,23,411,6],[419,27,411,33,"Object"],[419,33,411,39],[419,34,411,40,"entries"],[419,41,411,47],[419,42,411,48,"data"],[419,46,411,52],[419,47,411,53],[420,12,411,53],[420,16,411,53,"_ref2"],[420,21,411,53],[420,28,411,53,"_slicedToArray2"],[420,43,411,53],[420,44,411,53,"default"],[420,51,411,53],[420,53,411,53,"_ref"],[420,57,411,53],[421,12,411,53],[421,16,411,18,"key"],[421,19,411,21],[421,22,411,21,"_ref2"],[421,27,411,21],[422,12,411,21],[422,16,411,23,"value"],[422,21,411,28],[422,24,411,28,"_ref2"],[422,29,411,28],[423,12,411,28,"_loop"],[423,17,411,28],[423,18,411,28,"key"],[423,21,411,28],[424,10,411,28],[425,10,420,6],[425,17,420,13,"sanitized"],[425,26,420,22],[426,8,421,4],[427,8,423,4],[427,15,423,11,"data"],[427,19,423,15],[428,6,424,2],[429,4,424,3],[430,2,424,3],[430,7,427,0],[431,2,428,7],[431,6,428,13,"EventLogger"],[431,17,428,24],[431,20,428,24,"exports"],[431,27,428,24],[431,28,428,24,"EventLogger"],[431,39,428,24],[431,42,428,27],[431,46,428,31,"EventLoggerService"],[431,64,428,49],[431,65,428,50],[431,66,428,51],[433,2,430,0],[434,2,431,7],[434,6,431,13,"logUserAction"],[434,19,431,26],[434,22,431,29,"logUserAction"],[434,23,431,30,"action"],[434,29,431,44],[434,31,431,46,"screen"],[434,37,431,60],[434,39,431,62,"data"],[434,43,431,72],[434,48,431,77],[435,4,432,2,"EventLogger"],[435,15,432,13],[435,16,432,14,"userAction"],[435,26,432,24],[435,27,432,25,"action"],[435,33,432,31],[435,35,432,33,"screen"],[435,41,432,39],[435,43,432,41,"data"],[435,47,432,45],[435,48,432,46],[436,2,433,0],[436,3,433,1],[437,2,433,2,"exports"],[437,9,433,2],[437,10,433,2,"logUserAction"],[437,23,433,2],[437,26,433,2,"logUserAction"],[437,39,433,2],[438,2,435,7],[438,6,435,13,"logNetworkRequest"],[438,23,435,30],[438,26,435,33,"logNetworkRequest"],[438,27,435,34,"url"],[438,30,435,45],[438,32,435,47,"method"],[438,38,435,61],[438,40,435,63,"statusCode"],[438,50,435,82],[438,52,435,84,"duration"],[438,60,435,101],[438,62,435,103,"error"],[438,67,435,116],[438,72,435,121],[439,4,436,2,"EventLogger"],[439,15,436,13],[439,16,436,14,"networkRequest"],[439,30,436,28],[439,31,436,29,"url"],[439,34,436,32],[439,36,436,34,"method"],[439,42,436,40],[439,44,436,42,"statusCode"],[439,54,436,52],[439,56,436,54,"duration"],[439,64,436,62],[439,66,436,64,"error"],[439,71,436,69],[439,72,436,70],[440,2,437,0],[440,3,437,1],[441,2,437,2,"exports"],[441,9,437,2],[441,10,437,2,"logNetworkRequest"],[441,27,437,2],[441,30,437,2,"logNetworkRequest"],[441,47,437,2],[442,2,439,7],[442,6,439,13,"logPerformance"],[442,20,439,27],[442,23,439,30,"logPerformance"],[442,24,439,31,"operation"],[442,33,439,48],[442,35,439,50,"duration"],[442,43,439,66],[442,45,439,68,"metadata"],[442,53,439,98],[442,58,439,103],[443,4,440,2,"EventLogger"],[443,15,440,13],[443,16,440,14,"performance"],[443,27,440,25],[443,28,440,26],[443,41,440,39],[443,43,440,41,"operation"],[443,52,440,50],[443,54,440,52,"duration"],[443,62,440,60],[443,64,440,62,"metadata"],[443,72,440,70],[443,73,440,71],[444,2,441,0],[444,3,441,1],[445,2,441,2,"exports"],[445,9,441,2],[445,10,441,2,"logPerformance"],[445,24,441,2],[445,27,441,2,"logPerformance"],[445,41,441,2],[446,2,443,7],[446,6,443,13,"logError"],[446,14,443,21],[446,17,443,24,"logError"],[446,18,443,25,"category"],[446,26,443,41],[446,28,443,43,"message"],[446,35,443,58],[446,37,443,60,"error"],[446,42,443,73],[446,44,443,75,"data"],[446,48,443,85],[446,53,443,90],[447,4,444,2,"EventLogger"],[447,15,444,13],[447,16,444,14,"error"],[447,21,444,19],[447,22,444,20,"category"],[447,30,444,28],[447,32,444,30,"message"],[447,39,444,37],[447,41,444,39,"error"],[447,46,444,44],[447,48,444,46,"data"],[447,52,444,50],[447,53,444,51],[448,2,445,0],[448,3,445,1],[449,2,445,2,"exports"],[449,9,445,2],[449,10,445,2,"logError"],[449,18,445,2],[449,21,445,2,"logError"],[449,29,445,2],[450,2,447,7],[450,6,447,13,"logAnalyticsEvent"],[450,23,447,30],[450,26,447,33,"logAnalyticsEvent"],[450,27,447,34,"eventName"],[450,36,447,51],[450,38,447,53,"properties"],[450,48,447,85],[450,53,447,90],[451,4,448,2,"EventLogger"],[451,15,448,13],[451,16,448,14,"analyticsEvent"],[451,30,448,28],[451,31,448,29,"eventName"],[451,40,448,38],[451,42,448,40,"properties"],[451,52,448,50],[451,53,448,51],[452,2,449,0],[452,3,449,1],[454,2,451,0],[455,2,451,0,"exports"],[455,9,451,0],[455,10,451,0,"logAnalyticsEvent"],[455,27,451,0],[455,30,451,0,"logAnalyticsEvent"],[455,47,451,0],[456,0,451,0],[456,3]],"functionMap":{"names":["<global>","EventLoggerService","EventLoggerService#constructor","setInterval$argument_0","EventLoggerService#setUser","EventLoggerService#clearUser","EventLoggerService#debug","EventLoggerService#info","EventLoggerService#warn","EventLoggerService#error","EventLoggerService#critical","EventLoggerService#networkRequest","EventLoggerService#performance","EventLoggerService#userAction","EventLoggerService#analyticsEvent","EventLoggerService#log","EventLoggerService#storeLogEntry","EventLoggerService#outputToConsole","EventLoggerService#queueForRemoteLogging","EventLoggerService#flushLogs","EventLoggerService#getRecentLogs","localEntries.filter$argument_0","EventLoggerService#getLogsByCategory","EventLoggerService#searchLogs","EventLoggerService#exportLogs","EventLoggerService#clearLogs","EventLoggerService#updateConfig","EventLoggerService#setupGlobalErrorHandling","global.onunhandledrejection","global.process.on$argument_1","EventLoggerService#generateSessionId","EventLoggerService#sanitizeData","data.map$argument_0","sensitiveKeys.some$argument_0","logUserAction","logNetworkRequest","logPerformance","logError","logAnalyticsEvent"],"mappings":"AAA;ACqC;ECQ;kBCe,sBD;GDE;EGK;GHG;EIK;GJG;EKK;GLI;EMK;GNE;EOK;GPE;EQK;GRE;ESK;GTE;EUK;GVc;EWK;GXY;EYK;GZM;EaK;GbK;EcK;GdqC;EeK;GfO;EgBK;GhBqB;EiBK;GjBO;EkBK;GlB+B;EmBK;cCE,gCD;GnBE;EqBK;cDE,oCC;GrBE;EsBK;cFG;gFEG;GtBG;EuBK;0CHC,gCG;GvBE;EwBK;GxBG;EyBK;GzBG;E0BK;oCCK;ODQ;6CEK;OFE;G1BE;E6BK;G7BE;E8BK;sBCU,+BD;+BEQ,kDF;G9BU;CDC;6BkCM;ClCE;iCmCE;CnCE;8BoCE;CpCE;wBqCE;CrCE;iCsCE;CtCE"}},"type":"js/module"}]}