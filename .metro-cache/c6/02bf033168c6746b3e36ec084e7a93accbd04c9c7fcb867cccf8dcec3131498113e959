{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"../NativeNfcManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":47,"index":47}}],"key":"mb6qKXLI8Dg5oPTxNC7qiF+ohFA=","exportNames":["*"]}},{"name":"../NfcError","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":50,"index":98}}],"key":"syMImUW5mKzfjR8DqZY5XzQrr4I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.MifareClassicHandlerAndroid = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _NativeNfcManager = require(_dependencyMap[4], \"../NativeNfcManager\");\n  var _NfcError = require(_dependencyMap[5], \"../NfcError\");\n  var MifareClassicHandlerAndroid = exports.MifareClassicHandlerAndroid = /*#__PURE__*/function () {\n    function MifareClassicHandlerAndroid(nfcManager) {\n      (0, _classCallCheck2.default)(this, MifareClassicHandlerAndroid);\n      this.nfcManager = nfcManager;\n    }\n    return (0, _createClass2.default)(MifareClassicHandlerAndroid, [{\n      key: \"mifareClassicAuthenticateA\",\n      value: function () {\n        var _mifareClassicAuthenticateA = (0, _asyncToGenerator2.default)(function* (sector, key) {\n          if (!key || !Array.isArray(key) || key.length !== 6) {\n            throw new Error('key should be an Array[6] of integers (0 - 255)');\n          }\n          return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicAuthenticateA', [sector, key]));\n        });\n        function mifareClassicAuthenticateA(_x, _x2) {\n          return _mifareClassicAuthenticateA.apply(this, arguments);\n        }\n        return mifareClassicAuthenticateA;\n      }()\n    }, {\n      key: \"mifareClassicAuthenticateB\",\n      value: function () {\n        var _mifareClassicAuthenticateB = (0, _asyncToGenerator2.default)(function* (sector, key) {\n          if (!key || !Array.isArray(key) || key.length !== 6) {\n            throw new Error('key should be an Array[6] of integers (0 - 255)');\n          }\n          return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicAuthenticateB', [sector, key]));\n        });\n        function mifareClassicAuthenticateB(_x3, _x4) {\n          return _mifareClassicAuthenticateB.apply(this, arguments);\n        }\n        return mifareClassicAuthenticateB;\n      }()\n    }, {\n      key: \"mifareClassicGetBlockCountInSector\",\n      value: function () {\n        var _mifareClassicGetBlockCountInSector = (0, _asyncToGenerator2.default)(function* (sector) {\n          return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicGetBlockCountInSector', [sector]));\n        });\n        function mifareClassicGetBlockCountInSector(_x5) {\n          return _mifareClassicGetBlockCountInSector.apply(this, arguments);\n        }\n        return mifareClassicGetBlockCountInSector;\n      }()\n    }, {\n      key: \"mifareClassicGetSectorCount\",\n      value: function () {\n        var _mifareClassicGetSectorCount = (0, _asyncToGenerator2.default)(function* () {\n          return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicGetSectorCount'));\n        });\n        function mifareClassicGetSectorCount() {\n          return _mifareClassicGetSectorCount.apply(this, arguments);\n        }\n        return mifareClassicGetSectorCount;\n      }()\n    }, {\n      key: \"mifareClassicSectorToBlock\",\n      value: function () {\n        var _mifareClassicSectorToBlock = (0, _asyncToGenerator2.default)(function* (sector) {\n          return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicSectorToBlock', [sector]));\n        });\n        function mifareClassicSectorToBlock(_x6) {\n          return _mifareClassicSectorToBlock.apply(this, arguments);\n        }\n        return mifareClassicSectorToBlock;\n      }()\n    }, {\n      key: \"mifareClassicReadBlock\",\n      value: function () {\n        var _mifareClassicReadBlock = (0, _asyncToGenerator2.default)(function* (block) {\n          return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicReadBlock', [block]));\n        });\n        function mifareClassicReadBlock(_x7) {\n          return _mifareClassicReadBlock.apply(this, arguments);\n        }\n        return mifareClassicReadBlock;\n      }()\n    }, {\n      key: \"mifareClassicReadSector\",\n      value: function () {\n        var _mifareClassicReadSector = (0, _asyncToGenerator2.default)(function* (sector) {\n          return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicReadSector', [sector]));\n        });\n        function mifareClassicReadSector(_x8) {\n          return _mifareClassicReadSector.apply(this, arguments);\n        }\n        return mifareClassicReadSector;\n      }()\n    }, {\n      key: \"mifareClassicWriteBlock\",\n      value: function () {\n        var _mifareClassicWriteBlock = (0, _asyncToGenerator2.default)(function* (block, data) {\n          if (!data || !Array.isArray(data) || data.length !== this.nfcManager.MIFARE_BLOCK_SIZE) {\n            throw new Error(`data should be a non-empty Array[${this.nfcManager.MIFARE_BLOCK_SIZE}] of integers (0 - 255)`);\n          }\n          return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicWriteBlock', [block, data]));\n        });\n        function mifareClassicWriteBlock(_x9, _x0) {\n          return _mifareClassicWriteBlock.apply(this, arguments);\n        }\n        return mifareClassicWriteBlock;\n      }()\n    }, {\n      key: \"mifareClassicIncrementBlock\",\n      value: function () {\n        var _mifareClassicIncrementBlock = (0, _asyncToGenerator2.default)(function* (block, value) {\n          if (!value || Number.isNaN(value)) {\n            throw new Error(`value should be a number`);\n          }\n          return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicIncrementBlock', [block, value]));\n        });\n        function mifareClassicIncrementBlock(_x1, _x10) {\n          return _mifareClassicIncrementBlock.apply(this, arguments);\n        }\n        return mifareClassicIncrementBlock;\n      }()\n    }, {\n      key: \"mifareClassicDecrementBlock\",\n      value: function () {\n        var _mifareClassicDecrementBlock = (0, _asyncToGenerator2.default)(function* (block, value) {\n          if (!value || Number.isNaN(value)) {\n            throw new Error(`value should be a number`);\n          }\n          return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicDecrementBlock', [block, value]));\n        });\n        function mifareClassicDecrementBlock(_x11, _x12) {\n          return _mifareClassicDecrementBlock.apply(this, arguments);\n        }\n        return mifareClassicDecrementBlock;\n      }()\n    }, {\n      key: \"mifareClassicTransferBlock\",\n      value: function () {\n        var _mifareClassicTransferBlock = (0, _asyncToGenerator2.default)(function* (block) {\n          if (!block || Number.isNaN(block)) {\n            throw new Error(`block should be a number`);\n          }\n          return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicTransferBlock', [block]));\n        });\n        function mifareClassicTransferBlock(_x13) {\n          return _mifareClassicTransferBlock.apply(this, arguments);\n        }\n        return mifareClassicTransferBlock;\n      }()\n    }]);\n  }();\n});","lineCount":158,"map":[[10,2,1,0],[10,6,1,0,"_NativeNfcManager"],[10,23,1,0],[10,26,1,0,"require"],[10,33,1,0],[10,34,1,0,"_dependencyMap"],[10,48,1,0],[11,2,2,0],[11,6,2,0,"_NfcError"],[11,15,2,0],[11,18,2,0,"require"],[11,25,2,0],[11,26,2,0,"_dependencyMap"],[11,40,2,0],[12,2,2,50],[12,6,4,6,"MifareClassicHandlerAndroid"],[12,33,4,33],[12,36,4,33,"exports"],[12,43,4,33],[12,44,4,33,"MifareClassicHandlerAndroid"],[12,71,4,33],[13,4,5,2],[13,13,5,2,"MifareClassicHandlerAndroid"],[13,41,5,14,"nfcManager"],[13,51,5,24],[13,53,5,26],[14,6,5,26],[14,10,5,26,"_classCallCheck2"],[14,26,5,26],[14,27,5,26,"default"],[14,34,5,26],[14,42,5,26,"MifareClassicHandlerAndroid"],[14,69,5,26],[15,6,6,4],[15,10,6,8],[15,11,6,9,"nfcManager"],[15,21,6,19],[15,24,6,22,"nfcManager"],[15,34,6,32],[16,4,7,2],[17,4,7,3],[17,15,7,3,"_createClass2"],[17,28,7,3],[17,29,7,3,"default"],[17,36,7,3],[17,38,7,3,"MifareClassicHandlerAndroid"],[17,65,7,3],[18,6,7,3,"key"],[18,9,7,3],[19,6,7,3,"value"],[19,11,7,3],[20,8,7,3],[20,12,7,3,"_mifareClassicAuthenticateA"],[20,39,7,3],[20,46,7,3,"_asyncToGenerator2"],[20,64,7,3],[20,65,7,3,"default"],[20,72,7,3],[20,74,9,2],[20,85,9,35,"sector"],[20,91,9,41],[20,93,9,43,"key"],[20,96,9,46],[20,98,9,48],[21,10,10,4],[21,14,10,8],[21,15,10,9,"key"],[21,18,10,12],[21,22,10,16],[21,23,10,17,"Array"],[21,28,10,22],[21,29,10,23,"isArray"],[21,36,10,30],[21,37,10,31,"key"],[21,40,10,34],[21,41,10,35],[21,45,10,39,"key"],[21,48,10,42],[21,49,10,43,"length"],[21,55,10,49],[21,60,10,54],[21,61,10,55],[21,63,10,57],[22,12,11,6],[22,18,11,12],[22,22,11,16,"Error"],[22,27,11,21],[22,28,11,22],[22,77,11,71],[22,78,11,72],[23,10,12,4],[24,10,14,4],[24,17,14,11],[24,21,14,11,"handleNativeException"],[24,52,14,32],[24,54,15,6],[24,58,15,6,"callNative"],[24,86,15,16],[24,88,15,17],[24,116,15,45],[24,118,15,47],[24,119,15,48,"sector"],[24,125,15,54],[24,127,15,56,"key"],[24,130,15,59],[24,131,15,60],[24,132,16,4],[24,133,16,5],[25,8,17,2],[25,9,17,3],[26,8,17,3],[26,17,9,8,"mifareClassicAuthenticateA"],[26,43,9,34,"mifareClassicAuthenticateA"],[26,44,9,34,"_x"],[26,46,9,34],[26,48,9,34,"_x2"],[26,51,9,34],[27,10,9,34],[27,17,9,34,"_mifareClassicAuthenticateA"],[27,44,9,34],[27,45,9,34,"apply"],[27,50,9,34],[27,57,9,34,"arguments"],[27,66,9,34],[28,8,9,34],[29,8,9,34],[29,15,9,8,"mifareClassicAuthenticateA"],[29,41,9,34],[30,6,9,34],[31,4,9,34],[32,6,9,34,"key"],[32,9,9,34],[33,6,9,34,"value"],[33,11,9,34],[34,8,9,34],[34,12,9,34,"_mifareClassicAuthenticateB"],[34,39,9,34],[34,46,9,34,"_asyncToGenerator2"],[34,64,9,34],[34,65,9,34,"default"],[34,72,9,34],[34,74,19,2],[34,85,19,35,"sector"],[34,91,19,41],[34,93,19,43,"key"],[34,96,19,46],[34,98,19,48],[35,10,20,4],[35,14,20,8],[35,15,20,9,"key"],[35,18,20,12],[35,22,20,16],[35,23,20,17,"Array"],[35,28,20,22],[35,29,20,23,"isArray"],[35,36,20,30],[35,37,20,31,"key"],[35,40,20,34],[35,41,20,35],[35,45,20,39,"key"],[35,48,20,42],[35,49,20,43,"length"],[35,55,20,49],[35,60,20,54],[35,61,20,55],[35,63,20,57],[36,12,21,6],[36,18,21,12],[36,22,21,16,"Error"],[36,27,21,21],[36,28,21,22],[36,77,21,71],[36,78,21,72],[37,10,22,4],[38,10,24,4],[38,17,24,11],[38,21,24,11,"handleNativeException"],[38,52,24,32],[38,54,25,6],[38,58,25,6,"callNative"],[38,86,25,16],[38,88,25,17],[38,116,25,45],[38,118,25,47],[38,119,25,48,"sector"],[38,125,25,54],[38,127,25,56,"key"],[38,130,25,59],[38,131,25,60],[38,132,26,4],[38,133,26,5],[39,8,27,2],[39,9,27,3],[40,8,27,3],[40,17,19,8,"mifareClassicAuthenticateB"],[40,43,19,34,"mifareClassicAuthenticateB"],[40,44,19,34,"_x3"],[40,47,19,34],[40,49,19,34,"_x4"],[40,52,19,34],[41,10,19,34],[41,17,19,34,"_mifareClassicAuthenticateB"],[41,44,19,34],[41,45,19,34,"apply"],[41,50,19,34],[41,57,19,34,"arguments"],[41,66,19,34],[42,8,19,34],[43,8,19,34],[43,15,19,8,"mifareClassicAuthenticateB"],[43,41,19,34],[44,6,19,34],[45,4,19,34],[46,6,19,34,"key"],[46,9,19,34],[47,6,19,34,"value"],[47,11,19,34],[48,8,19,34],[48,12,19,34,"_mifareClassicGetBlockCountInSector"],[48,47,19,34],[48,54,19,34,"_asyncToGenerator2"],[48,72,19,34],[48,73,19,34,"default"],[48,80,19,34],[48,82,29,2],[48,93,29,43,"sector"],[48,99,29,49],[48,101,29,51],[49,10,30,4],[49,17,30,11],[49,21,30,11,"handleNativeException"],[49,52,30,32],[49,54,31,6],[49,58,31,6,"callNative"],[49,86,31,16],[49,88,31,17],[49,124,31,53],[49,126,31,55],[49,127,31,56,"sector"],[49,133,31,62],[49,134,31,63],[49,135,32,4],[49,136,32,5],[50,8,33,2],[50,9,33,3],[51,8,33,3],[51,17,29,8,"mifareClassicGetBlockCountInSector"],[51,51,29,42,"mifareClassicGetBlockCountInSector"],[51,52,29,42,"_x5"],[51,55,29,42],[52,10,29,42],[52,17,29,42,"_mifareClassicGetBlockCountInSector"],[52,52,29,42],[52,53,29,42,"apply"],[52,58,29,42],[52,65,29,42,"arguments"],[52,74,29,42],[53,8,29,42],[54,8,29,42],[54,15,29,8,"mifareClassicGetBlockCountInSector"],[54,49,29,42],[55,6,29,42],[56,4,29,42],[57,6,29,42,"key"],[57,9,29,42],[58,6,29,42,"value"],[58,11,29,42],[59,8,29,42],[59,12,29,42,"_mifareClassicGetSectorCount"],[59,40,29,42],[59,47,29,42,"_asyncToGenerator2"],[59,65,29,42],[59,66,29,42,"default"],[59,73,29,42],[59,75,35,2],[59,88,35,38],[60,10,36,4],[60,17,36,11],[60,21,36,11,"handleNativeException"],[60,52,36,32],[60,54,36,33],[60,58,36,33,"callNative"],[60,86,36,43],[60,88,36,44],[60,117,36,73],[60,118,36,74],[60,119,36,75],[61,8,37,2],[61,9,37,3],[62,8,37,3],[62,17,35,8,"mifareClassicGetSectorCount"],[62,44,35,35,"mifareClassicGetSectorCount"],[62,45,35,35],[63,10,35,35],[63,17,35,35,"_mifareClassicGetSectorCount"],[63,45,35,35],[63,46,35,35,"apply"],[63,51,35,35],[63,58,35,35,"arguments"],[63,67,35,35],[64,8,35,35],[65,8,35,35],[65,15,35,8,"mifareClassicGetSectorCount"],[65,42,35,35],[66,6,35,35],[67,4,35,35],[68,6,35,35,"key"],[68,9,35,35],[69,6,35,35,"value"],[69,11,35,35],[70,8,35,35],[70,12,35,35,"_mifareClassicSectorToBlock"],[70,39,35,35],[70,46,35,35,"_asyncToGenerator2"],[70,64,35,35],[70,65,35,35,"default"],[70,72,35,35],[70,74,39,2],[70,85,39,35,"sector"],[70,91,39,41],[70,93,39,43],[71,10,40,4],[71,17,40,11],[71,21,40,11,"handleNativeException"],[71,52,40,32],[71,54,41,6],[71,58,41,6,"callNative"],[71,86,41,16],[71,88,41,17],[71,116,41,45],[71,118,41,47],[71,119,41,48,"sector"],[71,125,41,54],[71,126,41,55],[71,127,42,4],[71,128,42,5],[72,8,43,2],[72,9,43,3],[73,8,43,3],[73,17,39,8,"mifareClassicSectorToBlock"],[73,43,39,34,"mifareClassicSectorToBlock"],[73,44,39,34,"_x6"],[73,47,39,34],[74,10,39,34],[74,17,39,34,"_mifareClassicSectorToBlock"],[74,44,39,34],[74,45,39,34,"apply"],[74,50,39,34],[74,57,39,34,"arguments"],[74,66,39,34],[75,8,39,34],[76,8,39,34],[76,15,39,8,"mifareClassicSectorToBlock"],[76,41,39,34],[77,6,39,34],[78,4,39,34],[79,6,39,34,"key"],[79,9,39,34],[80,6,39,34,"value"],[80,11,39,34],[81,8,39,34],[81,12,39,34,"_mifareClassicReadBlock"],[81,35,39,34],[81,42,39,34,"_asyncToGenerator2"],[81,60,39,34],[81,61,39,34,"default"],[81,68,39,34],[81,70,45,2],[81,81,45,31,"block"],[81,86,45,36],[81,88,45,38],[82,10,46,4],[82,17,46,11],[82,21,46,11,"handleNativeException"],[82,52,46,32],[82,54,46,33],[82,58,46,33,"callNative"],[82,86,46,43],[82,88,46,44],[82,112,46,68],[82,114,46,70],[82,115,46,71,"block"],[82,120,46,76],[82,121,46,77],[82,122,46,78],[82,123,46,79],[83,8,47,2],[83,9,47,3],[84,8,47,3],[84,17,45,8,"mifareClassicReadBlock"],[84,39,45,30,"mifareClassicReadBlock"],[84,40,45,30,"_x7"],[84,43,45,30],[85,10,45,30],[85,17,45,30,"_mifareClassicReadBlock"],[85,40,45,30],[85,41,45,30,"apply"],[85,46,45,30],[85,53,45,30,"arguments"],[85,62,45,30],[86,8,45,30],[87,8,45,30],[87,15,45,8,"mifareClassicReadBlock"],[87,37,45,30],[88,6,45,30],[89,4,45,30],[90,6,45,30,"key"],[90,9,45,30],[91,6,45,30,"value"],[91,11,45,30],[92,8,45,30],[92,12,45,30,"_mifareClassicReadSector"],[92,36,45,30],[92,43,45,30,"_asyncToGenerator2"],[92,61,45,30],[92,62,45,30,"default"],[92,69,45,30],[92,71,49,2],[92,82,49,32,"sector"],[92,88,49,38],[92,90,49,40],[93,10,50,4],[93,17,50,11],[93,21,50,11,"handleNativeException"],[93,52,50,32],[93,54,51,6],[93,58,51,6,"callNative"],[93,86,51,16],[93,88,51,17],[93,113,51,42],[93,115,51,44],[93,116,51,45,"sector"],[93,122,51,51],[93,123,51,52],[93,124,52,4],[93,125,52,5],[94,8,53,2],[94,9,53,3],[95,8,53,3],[95,17,49,8,"mifareClassicReadSector"],[95,40,49,31,"mifareClassicReadSector"],[95,41,49,31,"_x8"],[95,44,49,31],[96,10,49,31],[96,17,49,31,"_mifareClassicReadSector"],[96,41,49,31],[96,42,49,31,"apply"],[96,47,49,31],[96,54,49,31,"arguments"],[96,63,49,31],[97,8,49,31],[98,8,49,31],[98,15,49,8,"mifareClassicReadSector"],[98,38,49,31],[99,6,49,31],[100,4,49,31],[101,6,49,31,"key"],[101,9,49,31],[102,6,49,31,"value"],[102,11,49,31],[103,8,49,31],[103,12,49,31,"_mifareClassicWriteBlock"],[103,36,49,31],[103,43,49,31,"_asyncToGenerator2"],[103,61,49,31],[103,62,49,31,"default"],[103,69,49,31],[103,71,55,2],[103,82,55,32,"block"],[103,87,55,37],[103,89,55,39,"data"],[103,93,55,43],[103,95,55,45],[104,10,56,4],[104,14,57,6],[104,15,57,7,"data"],[104,19,57,11],[104,23,58,6],[104,24,58,7,"Array"],[104,29,58,12],[104,30,58,13,"isArray"],[104,37,58,20],[104,38,58,21,"data"],[104,42,58,25],[104,43,58,26],[104,47,59,6,"data"],[104,51,59,10],[104,52,59,11,"length"],[104,58,59,17],[104,63,59,22],[104,67,59,26],[104,68,59,27,"nfcManager"],[104,78,59,37],[104,79,59,38,"MIFARE_BLOCK_SIZE"],[104,96,59,55],[104,98,60,6],[105,12,61,6],[105,18,61,12],[105,22,61,16,"Error"],[105,27,61,21],[105,28,62,8],[105,64,62,44],[105,68,62,48],[105,69,62,49,"nfcManager"],[105,79,62,59],[105,80,62,60,"MIFARE_BLOCK_SIZE"],[105,97,62,77],[105,122,63,6],[105,123,63,7],[106,10,64,4],[107,10,66,4],[107,17,66,11],[107,21,66,11,"handleNativeException"],[107,52,66,32],[107,54,67,6],[107,58,67,6,"callNative"],[107,86,67,16],[107,88,67,17],[107,113,67,42],[107,115,67,44],[107,116,67,45,"block"],[107,121,67,50],[107,123,67,52,"data"],[107,127,67,56],[107,128,67,57],[107,129,68,4],[107,130,68,5],[108,8,69,2],[108,9,69,3],[109,8,69,3],[109,17,55,8,"mifareClassicWriteBlock"],[109,40,55,31,"mifareClassicWriteBlock"],[109,41,55,31,"_x9"],[109,44,55,31],[109,46,55,31,"_x0"],[109,49,55,31],[110,10,55,31],[110,17,55,31,"_mifareClassicWriteBlock"],[110,41,55,31],[110,42,55,31,"apply"],[110,47,55,31],[110,54,55,31,"arguments"],[110,63,55,31],[111,8,55,31],[112,8,55,31],[112,15,55,8,"mifareClassicWriteBlock"],[112,38,55,31],[113,6,55,31],[114,4,55,31],[115,6,55,31,"key"],[115,9,55,31],[116,6,55,31,"value"],[116,11,55,31],[117,8,55,31],[117,12,55,31,"_mifareClassicIncrementBlock"],[117,40,55,31],[117,47,55,31,"_asyncToGenerator2"],[117,65,55,31],[117,66,55,31,"default"],[117,73,55,31],[117,75,71,2],[117,86,71,36,"block"],[117,91,71,41],[117,93,71,43,"value"],[117,98,71,48],[117,100,71,50],[118,10,72,4],[118,14,73,6],[118,15,73,7,"value"],[118,20,73,12],[118,24,74,6,"Number"],[118,30,74,12],[118,31,74,13,"isNaN"],[118,36,74,18],[118,37,74,19,"value"],[118,42,74,24],[118,43,74,25],[118,45,74,27],[119,12,75,6],[119,18,75,12],[119,22,75,16,"Error"],[119,27,75,21],[119,28,76,8],[119,54,77,6],[119,55,77,7],[120,10,78,4],[121,10,80,4],[121,17,80,11],[121,21,80,11,"handleNativeException"],[121,52,80,32],[121,54,81,6],[121,58,81,6,"callNative"],[121,86,81,16],[121,88,81,17],[121,117,81,46],[121,119,81,48],[121,120,81,49,"block"],[121,125,81,54],[121,127,81,56,"value"],[121,132,81,61],[121,133,81,62],[121,134,82,4],[121,135,82,5],[122,8,83,2],[122,9,83,3],[123,8,83,3],[123,17,71,8,"mifareClassicIncrementBlock"],[123,44,71,35,"mifareClassicIncrementBlock"],[123,45,71,35,"_x1"],[123,48,71,35],[123,50,71,35,"_x10"],[123,54,71,35],[124,10,71,35],[124,17,71,35,"_mifareClassicIncrementBlock"],[124,45,71,35],[124,46,71,35,"apply"],[124,51,71,35],[124,58,71,35,"arguments"],[124,67,71,35],[125,8,71,35],[126,8,71,35],[126,15,71,8,"mifareClassicIncrementBlock"],[126,42,71,35],[127,6,71,35],[128,4,71,35],[129,6,71,35,"key"],[129,9,71,35],[130,6,71,35,"value"],[130,11,71,35],[131,8,71,35],[131,12,71,35,"_mifareClassicDecrementBlock"],[131,40,71,35],[131,47,71,35,"_asyncToGenerator2"],[131,65,71,35],[131,66,71,35,"default"],[131,73,71,35],[131,75,85,2],[131,86,85,36,"block"],[131,91,85,41],[131,93,85,43,"value"],[131,98,85,48],[131,100,85,50],[132,10,86,4],[132,14,87,6],[132,15,87,7,"value"],[132,20,87,12],[132,24,88,6,"Number"],[132,30,88,12],[132,31,88,13,"isNaN"],[132,36,88,18],[132,37,88,19,"value"],[132,42,88,24],[132,43,88,25],[132,45,88,27],[133,12,89,6],[133,18,89,12],[133,22,89,16,"Error"],[133,27,89,21],[133,28,90,8],[133,54,91,6],[133,55,91,7],[134,10,92,4],[135,10,94,4],[135,17,94,11],[135,21,94,11,"handleNativeException"],[135,52,94,32],[135,54,95,6],[135,58,95,6,"callNative"],[135,86,95,16],[135,88,95,17],[135,117,95,46],[135,119,95,48],[135,120,95,49,"block"],[135,125,95,54],[135,127,95,56,"value"],[135,132,95,61],[135,133,95,62],[135,134,96,4],[135,135,96,5],[136,8,97,2],[136,9,97,3],[137,8,97,3],[137,17,85,8,"mifareClassicDecrementBlock"],[137,44,85,35,"mifareClassicDecrementBlock"],[137,45,85,35,"_x11"],[137,49,85,35],[137,51,85,35,"_x12"],[137,55,85,35],[138,10,85,35],[138,17,85,35,"_mifareClassicDecrementBlock"],[138,45,85,35],[138,46,85,35,"apply"],[138,51,85,35],[138,58,85,35,"arguments"],[138,67,85,35],[139,8,85,35],[140,8,85,35],[140,15,85,8,"mifareClassicDecrementBlock"],[140,42,85,35],[141,6,85,35],[142,4,85,35],[143,6,85,35,"key"],[143,9,85,35],[144,6,85,35,"value"],[144,11,85,35],[145,8,85,35],[145,12,85,35,"_mifareClassicTransferBlock"],[145,39,85,35],[145,46,85,35,"_asyncToGenerator2"],[145,64,85,35],[145,65,85,35,"default"],[145,72,85,35],[145,74,98,2],[145,85,98,35,"block"],[145,90,98,40],[145,92,98,42],[146,10,99,4],[146,14,100,6],[146,15,100,7,"block"],[146,20,100,12],[146,24,101,6,"Number"],[146,30,101,12],[146,31,101,13,"isNaN"],[146,36,101,18],[146,37,101,19,"block"],[146,42,101,24],[146,43,101,25],[146,45,101,27],[147,12,102,6],[147,18,102,12],[147,22,102,16,"Error"],[147,27,102,21],[147,28,103,8],[147,54,104,6],[147,55,104,7],[148,10,105,4],[149,10,107,4],[149,17,107,11],[149,21,107,11,"handleNativeException"],[149,52,107,32],[149,54,108,6],[149,58,108,6,"callNative"],[149,86,108,16],[149,88,108,17],[149,116,108,45],[149,118,108,47],[149,119,108,48,"block"],[149,124,108,53],[149,125,108,54],[149,126,109,4],[149,127,109,5],[150,8,110,2],[150,9,110,3],[151,8,110,3],[151,17,98,8,"mifareClassicTransferBlock"],[151,43,98,34,"mifareClassicTransferBlock"],[151,44,98,34,"_x13"],[151,48,98,34],[152,10,98,34],[152,17,98,34,"_mifareClassicTransferBlock"],[152,44,98,34],[152,45,98,34,"apply"],[152,50,98,34],[152,57,98,34,"arguments"],[152,66,98,34],[153,8,98,34],[154,8,98,34],[154,15,98,8,"mifareClassicTransferBlock"],[154,41,98,34],[155,6,98,34],[156,4,98,34],[157,2,98,34],[158,0,98,34],[158,3]],"functionMap":{"names":["<global>","MifareClassicHandlerAndroid","constructor","mifareClassicAuthenticateA","mifareClassicAuthenticateB","mifareClassicGetBlockCountInSector","mifareClassicGetSectorCount","mifareClassicSectorToBlock","mifareClassicReadBlock","mifareClassicReadSector","mifareClassicWriteBlock","mifareClassicIncrementBlock","mifareClassicDecrementBlock","mifareClassicTransferBlock"],"mappings":"AAA;ACG;ECC;GDE;EEE;GFQ;EGE;GHQ;EIE;GJI;EKE;GLE;EME;GNI;EOE;GPE;EQE;GRI;ESE;GTc;EUE;GVY;EWE;GXY;EYC;GZY;CDE"}},"type":"js/module"}]}