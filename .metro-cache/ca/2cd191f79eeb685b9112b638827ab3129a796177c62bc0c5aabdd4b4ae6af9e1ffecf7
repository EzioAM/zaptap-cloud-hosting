{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"expo-notifications","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":175},"end":{"line":7,"column":52,"index":227}}],"key":"nrBDtkRVez7cBhLzyaRjl+xVfvE=","exportNames":["*"]}},{"name":"expo-device","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":229},"end":{"line":8,"column":38,"index":267}}],"key":"bBpmAhO1g++sdeUzQmFVGoQIVwg=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":269},"end":{"line":9,"column":40,"index":309}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":311},"end":{"line":10,"column":69,"index":380}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":382},"end":{"line":11,"column":54,"index":436}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}},{"name":"../../types/notifications","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":438},"end":{"line":21,"column":35,"index":695}}],"key":"RfYZJlS05mZGiTEEd7xWH/zL7nI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n  var Notifications = _interopRequireWildcard(require(_dependencyMap[5], \"expo-notifications\"));\n  var Device = _interopRequireWildcard(require(_dependencyMap[6], \"expo-device\"));\n  var _reactNative = require(_dependencyMap[7], \"react-native\");\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[8], \"@react-native-async-storage/async-storage\"));\n  var _EventLogger = require(_dependencyMap[9], \"../../utils/EventLogger\");\n  var _notifications = require(_dependencyMap[10], \"../../types/notifications\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  /**\r\n   * NotificationService.ts\r\n   * Core notification service handling Expo notifications\r\n   * Features: permissions, push tokens, local notifications, badge management\r\n   */\n  var NotificationService = /*#__PURE__*/function () {\n    function NotificationService() {\n      (0, _classCallCheck2.default)(this, NotificationService);\n      this.isInitialized = false;\n      this.notificationListener = null;\n      this.responseListener = null;\n      this.setupNotificationHandler();\n    }\n    return (0, _createClass2.default)(NotificationService, [{\n      key: \"initialize\",\n      value: (\n      /**\r\n       * Initialize the notification service\r\n       */\n      function () {\n        var _initialize = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            if (this.isInitialized) {\n              return true;\n            }\n\n            // Set up notification channels for Android\n            if (_reactNative.Platform.OS === 'android') {\n              yield this.setupAndroidChannels();\n            }\n\n            // Set up notification categories\n            yield this.setupNotificationCategories();\n\n            // Setup listeners\n            this.setupNotificationListeners();\n            this.isInitialized = true;\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Initialized successfully');\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Initialization failed:', error);\n            return false;\n          }\n        });\n        function initialize() {\n          return _initialize.apply(this, arguments);\n        }\n        return initialize;\n      }()\n      /**\r\n       * Request notification permissions\r\n       */\n      )\n    }, {\n      key: \"requestPermissions\",\n      value: (function () {\n        var _requestPermissions = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            if (!Device.isDevice) {\n              _EventLogger.EventLogger.warn('Notification', '[NotificationService] Notifications not supported on simulator');\n              return {\n                status: 'denied'\n              };\n            }\n            var _yield$Notifications$ = yield Notifications.getPermissionsAsync(),\n              existingStatus = _yield$Notifications$.status;\n            var finalStatus = existingStatus;\n            if (existingStatus !== 'granted') {\n              var _yield$Notifications$2 = yield Notifications.requestPermissionsAsync({\n                  ios: {\n                    allowAlert: true,\n                    allowBadge: true,\n                    allowSound: true,\n                    allowAnnouncements: true,\n                    allowCriticalAlerts: false\n                  }\n                }),\n                status = _yield$Notifications$2.status;\n              finalStatus = status;\n            }\n\n            // Get detailed permissions for iOS\n            var iosPermissions;\n            if (_reactNative.Platform.OS === 'ios' && finalStatus === 'granted') {\n              var _permissions$ios$allo, _permissions$ios, _permissions$ios$allo2, _permissions$ios2, _permissions$ios$allo3, _permissions$ios3, _permissions$ios$allo4, _permissions$ios4, _permissions$ios$allo5, _permissions$ios5, _permissions$ios$allo6, _permissions$ios6, _permissions$ios$allo7, _permissions$ios7, _permissions$ios$allo8, _permissions$ios8;\n              var permissions = yield Notifications.getPermissionsAsync();\n              iosPermissions = {\n                allowsAlert: (_permissions$ios$allo = (_permissions$ios = permissions.ios) == null ? void 0 : _permissions$ios.allowsAlert) != null ? _permissions$ios$allo : false,\n                allowsBadge: (_permissions$ios$allo2 = (_permissions$ios2 = permissions.ios) == null ? void 0 : _permissions$ios2.allowsBadge) != null ? _permissions$ios$allo2 : false,\n                allowsSound: (_permissions$ios$allo3 = (_permissions$ios3 = permissions.ios) == null ? void 0 : _permissions$ios3.allowsSound) != null ? _permissions$ios$allo3 : false,\n                allowsCriticalAlerts: (_permissions$ios$allo4 = (_permissions$ios4 = permissions.ios) == null ? void 0 : _permissions$ios4.allowsCriticalAlerts) != null ? _permissions$ios$allo4 : false,\n                allowsAnnouncements: (_permissions$ios$allo5 = (_permissions$ios5 = permissions.ios) == null ? void 0 : _permissions$ios5.allowsAnnouncements) != null ? _permissions$ios$allo5 : false,\n                allowsDisplayInNotificationCenter: (_permissions$ios$allo6 = (_permissions$ios6 = permissions.ios) == null ? void 0 : _permissions$ios6.allowsDisplayInNotificationCenter) != null ? _permissions$ios$allo6 : false,\n                allowsDisplayInCarPlay: (_permissions$ios$allo7 = (_permissions$ios7 = permissions.ios) == null ? void 0 : _permissions$ios7.allowsDisplayInCarPlay) != null ? _permissions$ios$allo7 : false,\n                allowsDisplayOnLockScreen: (_permissions$ios$allo8 = (_permissions$ios8 = permissions.ios) == null ? void 0 : _permissions$ios8.allowsDisplayOnLockScreen) != null ? _permissions$ios$allo8 : false\n              };\n            }\n            var result = {\n              status: finalStatus,\n              ios: iosPermissions\n            };\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Permission status:', result);\n            return result;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Permission request failed:', error);\n            return {\n              status: 'denied'\n            };\n          }\n        });\n        function requestPermissions() {\n          return _requestPermissions.apply(this, arguments);\n        }\n        return requestPermissions;\n      }()\n      /**\r\n       * Get push notification token\r\n       */\n      )\n    }, {\n      key: \"getPushToken\",\n      value: (function () {\n        var _getPushToken = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            if (!Device.isDevice) {\n              _EventLogger.EventLogger.warn('Notification', '[NotificationService] Push tokens not available on simulator');\n              return null;\n            }\n            var permissions = yield this.requestPermissions();\n            if (permissions.status !== 'granted') {\n              _EventLogger.EventLogger.warn('Notification', '[NotificationService] Push notifications permission not granted');\n              return null;\n            }\n            var tokenData = yield Notifications.getExpoPushTokenAsync({\n              projectId: 'c9104518-2191-4a5a-aa20-76cebb5193cd' // From app.config.js\n            });\n            var token = tokenData.data;\n\n            // Store token locally\n            yield _asyncStorage.default.setItem(NotificationService.STORAGE_KEYS.PUSH_TOKEN, token);\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Push token obtained:', token.substring(0, 20) + '...');\n            return token;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to get push token:', error);\n            return null;\n          }\n        });\n        function getPushToken() {\n          return _getPushToken.apply(this, arguments);\n        }\n        return getPushToken;\n      }()\n      /**\r\n       * Schedule a local notification\r\n       */\n      )\n    }, {\n      key: \"scheduleLocalNotification\",\n      value: (function () {\n        var _scheduleLocalNotification = (0, _asyncToGenerator2.default)(function* (request) {\n          try {\n            var permissions = yield this.requestPermissions();\n            if (permissions.status !== 'granted') {\n              _EventLogger.EventLogger.warn('Notification', '[NotificationService] Cannot schedule notification without permission');\n              return null;\n            }\n            var notificationRequest = {\n              content: {\n                title: request.content.title,\n                body: request.content.body,\n                data: request.content.data || {},\n                sound: request.content.sound || 'default',\n                badge: request.content.badge,\n                categoryIdentifier: request.content.categoryIdentifier\n              },\n              trigger: null // Will be set based on trigger type\n            };\n\n            // Set trigger based on type\n            if (request.trigger.type === 'time' && request.trigger.date) {\n              notificationRequest.trigger = {\n                date: request.trigger.date,\n                repeats: request.trigger.repeats || false,\n                channelId: request.trigger.channelId || _notifications.NotificationChannels.DEFAULT.id\n              };\n            }\n            var identifier = yield Notifications.scheduleNotificationAsync(notificationRequest);\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Local notification scheduled:', identifier);\n            return identifier;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to schedule local notification:', error);\n            return null;\n          }\n        });\n        function scheduleLocalNotification(_x) {\n          return _scheduleLocalNotification.apply(this, arguments);\n        }\n        return scheduleLocalNotification;\n      }()\n      /**\r\n       * Cancel a scheduled notification\r\n       */\n      )\n    }, {\n      key: \"cancelNotification\",\n      value: (function () {\n        var _cancelNotification = (0, _asyncToGenerator2.default)(function* (identifier) {\n          try {\n            yield Notifications.cancelScheduledNotificationAsync(identifier);\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Notification cancelled:', identifier);\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to cancel notification:', error);\n          }\n        });\n        function cancelNotification(_x2) {\n          return _cancelNotification.apply(this, arguments);\n        }\n        return cancelNotification;\n      }()\n      /**\r\n       * Cancel all scheduled notifications\r\n       */\n      )\n    }, {\n      key: \"cancelAllNotifications\",\n      value: (function () {\n        var _cancelAllNotifications = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            yield Notifications.cancelAllScheduledNotificationsAsync();\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] All notifications cancelled');\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to cancel all notifications:', error);\n          }\n        });\n        function cancelAllNotifications() {\n          return _cancelAllNotifications.apply(this, arguments);\n        }\n        return cancelAllNotifications;\n      }()\n      /**\r\n       * Set app badge number\r\n       */\n      )\n    }, {\n      key: \"setBadgeCount\",\n      value: (function () {\n        var _setBadgeCount = (0, _asyncToGenerator2.default)(function* (count) {\n          try {\n            yield Notifications.setBadgeCountAsync(count);\n            yield _asyncStorage.default.setItem(NotificationService.STORAGE_KEYS.BADGE_COUNT, count.toString());\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Badge count set to:', count);\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to set badge count:', error);\n          }\n        });\n        function setBadgeCount(_x3) {\n          return _setBadgeCount.apply(this, arguments);\n        }\n        return setBadgeCount;\n      }()\n      /**\r\n       * Get current badge count\r\n       */\n      )\n    }, {\n      key: \"getBadgeCount\",\n      value: (function () {\n        var _getBadgeCount = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var stored = yield _asyncStorage.default.getItem(NotificationService.STORAGE_KEYS.BADGE_COUNT);\n            return stored ? parseInt(stored, 10) : 0;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to get badge count:', error);\n            return 0;\n          }\n        });\n        function getBadgeCount() {\n          return _getBadgeCount.apply(this, arguments);\n        }\n        return getBadgeCount;\n      }()\n      /**\r\n       * Clear app badge\r\n       */\n      )\n    }, {\n      key: \"clearBadge\",\n      value: (function () {\n        var _clearBadge = (0, _asyncToGenerator2.default)(function* () {\n          yield this.setBadgeCount(0);\n        });\n        function clearBadge() {\n          return _clearBadge.apply(this, arguments);\n        }\n        return clearBadge;\n      }()\n      /**\r\n       * Get notification preferences\r\n       */\n      )\n    }, {\n      key: \"getPreferences\",\n      value: (function () {\n        var _getPreferences = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var stored = yield _asyncStorage.default.getItem(NotificationService.STORAGE_KEYS.PREFERENCES);\n            if (stored) {\n              return Object.assign({}, _notifications.DEFAULT_NOTIFICATION_PREFERENCES, JSON.parse(stored));\n            }\n            return _notifications.DEFAULT_NOTIFICATION_PREFERENCES;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to get preferences:', error);\n            return _notifications.DEFAULT_NOTIFICATION_PREFERENCES;\n          }\n        });\n        function getPreferences() {\n          return _getPreferences.apply(this, arguments);\n        }\n        return getPreferences;\n      }()\n      /**\r\n       * Save notification preferences\r\n       */\n      )\n    }, {\n      key: \"savePreferences\",\n      value: (function () {\n        var _savePreferences = (0, _asyncToGenerator2.default)(function* (preferences) {\n          try {\n            yield _asyncStorage.default.setItem(NotificationService.STORAGE_KEYS.PREFERENCES, JSON.stringify(preferences));\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Preferences saved');\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to save preferences:', error);\n          }\n        });\n        function savePreferences(_x4) {\n          return _savePreferences.apply(this, arguments);\n        }\n        return savePreferences;\n      }()\n      /**\r\n       * Check if notifications should be shown based on quiet hours\r\n       */\n      )\n    }, {\n      key: \"shouldShowNotification\",\n      value: (function () {\n        var _shouldShowNotification = (0, _asyncToGenerator2.default)(function* (type) {\n          try {\n            var preferences = yield this.getPreferences();\n            if (!preferences.enabled) {\n              return false;\n            }\n\n            // Check category preferences\n            switch (type) {\n              case 'automation':\n                if (!preferences.categories.automations) return false;\n                break;\n              case 'share':\n                if (!preferences.categories.shares) return false;\n                break;\n              case 'social':\n                if (!preferences.categories.social) return false;\n                break;\n              case 'system':\n                if (!preferences.categories.system) return false;\n                break;\n            }\n\n            // Check quiet hours\n            if (preferences.quietHours.enabled) {\n              var now = new Date();\n              var currentTime = now.getHours() * 60 + now.getMinutes();\n              var _preferences$quietHou = preferences.quietHours.start.split(':').map(Number),\n                _preferences$quietHou2 = (0, _slicedToArray2.default)(_preferences$quietHou, 2),\n                startHour = _preferences$quietHou2[0],\n                startMin = _preferences$quietHou2[1];\n              var _preferences$quietHou3 = preferences.quietHours.end.split(':').map(Number),\n                _preferences$quietHou4 = (0, _slicedToArray2.default)(_preferences$quietHou3, 2),\n                endHour = _preferences$quietHou4[0],\n                endMin = _preferences$quietHou4[1];\n              var quietStart = startHour * 60 + startMin;\n              var quietEnd = endHour * 60 + endMin;\n\n              // Handle quiet hours spanning midnight\n              if (quietStart > quietEnd) {\n                if (currentTime >= quietStart || currentTime <= quietEnd) {\n                  return false;\n                }\n              } else {\n                if (currentTime >= quietStart && currentTime <= quietEnd) {\n                  return false;\n                }\n              }\n            }\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Error checking notification permission:', error);\n            return true; // Default to showing notifications\n          }\n        });\n        function shouldShowNotification(_x5) {\n          return _shouldShowNotification.apply(this, arguments);\n        }\n        return shouldShowNotification;\n      }()\n      /**\r\n       * Set up notification handler for background/foreground behavior\r\n       */\n      )\n    }, {\n      key: \"setupNotificationHandler\",\n      value: function setupNotificationHandler() {\n        var _this = this;\n        Notifications.setNotificationHandler({\n          handleNotification: function () {\n            var _handleNotification = (0, _asyncToGenerator2.default)(function* (notification) {\n              var _notification$request;\n              var type = (_notification$request = notification.request.content.data) == null ? void 0 : _notification$request.type;\n              var shouldShow = yield _this.shouldShowNotification(type || 'system');\n              return {\n                shouldShowAlert: shouldShow,\n                shouldPlaySound: shouldShow,\n                shouldSetBadge: shouldShow\n              };\n            });\n            function handleNotification(_x6) {\n              return _handleNotification.apply(this, arguments);\n            }\n            return handleNotification;\n          }()\n        });\n      }\n\n      /**\r\n       * Set up Android notification channels\r\n       */\n    }, {\n      key: \"setupAndroidChannels\",\n      value: (function () {\n        var _setupAndroidChannels = (0, _asyncToGenerator2.default)(function* () {\n          if (_reactNative.Platform.OS !== 'android') return;\n          try {\n            var channels = Object.values(_notifications.NotificationChannels);\n            for (var channel of channels) {\n              yield Notifications.setNotificationChannelAsync(channel.id, {\n                name: channel.name,\n                description: channel.description,\n                importance: Notifications.AndroidImportance[channel.importance.toUpperCase()],\n                vibrationPattern: [0, 250, 250, 250],\n                lightColor: '#8B5CF6',\n                sound: 'default',\n                enableVibrate: true\n              });\n            }\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Android channels configured');\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to setup Android channels:', error);\n          }\n        });\n        function setupAndroidChannels() {\n          return _setupAndroidChannels.apply(this, arguments);\n        }\n        return setupAndroidChannels;\n      }()\n      /**\r\n       * Set up notification categories for actions\r\n       */\n      )\n    }, {\n      key: \"setupNotificationCategories\",\n      value: (function () {\n        var _setupNotificationCategories = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            yield Notifications.setNotificationCategoryAsync('automation', [{\n              identifier: 'view',\n              buttonTitle: 'View',\n              options: {\n                opensAppToForeground: true\n              }\n            }, {\n              identifier: 'dismiss',\n              buttonTitle: 'Dismiss',\n              options: {\n                opensAppToForeground: false\n              }\n            }]);\n            yield Notifications.setNotificationCategoryAsync('share', [{\n              identifier: 'open',\n              buttonTitle: 'Open',\n              options: {\n                opensAppToForeground: true\n              }\n            }, {\n              identifier: 'later',\n              buttonTitle: 'Later',\n              options: {\n                opensAppToForeground: false\n              }\n            }]);\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Notification categories configured');\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to setup notification categories:', error);\n          }\n        });\n        function setupNotificationCategories() {\n          return _setupNotificationCategories.apply(this, arguments);\n        }\n        return setupNotificationCategories;\n      }()\n      /**\r\n       * Set up notification listeners\r\n       */\n      )\n    }, {\n      key: \"setupNotificationListeners\",\n      value: function setupNotificationListeners() {\n        // Clean up existing listeners\n        if (this.notificationListener) {\n          this.notificationListener.remove();\n        }\n        if (this.responseListener) {\n          this.responseListener.remove();\n        }\n\n        // Listener for notifications received while app is running\n        this.notificationListener = Notifications.addNotificationReceivedListener(this.handleNotificationReceived.bind(this));\n\n        // Listener for user tapping notification\n        this.responseListener = Notifications.addNotificationResponseReceivedListener(this.handleNotificationResponse.bind(this));\n        _EventLogger.EventLogger.debug('Notification', '[NotificationService] Notification listeners configured');\n      }\n\n      /**\r\n       * Handle notification received while app is running\r\n       */\n    }, {\n      key: \"handleNotificationReceived\",\n      value: (function () {\n        var _handleNotificationReceived = (0, _asyncToGenerator2.default)(function* (notification) {\n          try {\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Notification received:', notification);\n\n            // Update badge count\n            var currentBadge = yield this.getBadgeCount();\n            yield this.setBadgeCount(currentBadge + 1);\n\n            // Store notification for later reference\n            // This would typically be handled by the NotificationHandler\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Error handling received notification:', error);\n          }\n        });\n        function handleNotificationReceived(_x7) {\n          return _handleNotificationReceived.apply(this, arguments);\n        }\n        return handleNotificationReceived;\n      }()\n      /**\r\n       * Handle notification response (user tapped notification)\r\n       */\n      )\n    }, {\n      key: \"handleNotificationResponse\",\n      value: (function () {\n        var _handleNotificationResponse = (0, _asyncToGenerator2.default)(function* (response) {\n          try {\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Notification response:', response);\n\n            // Clear badge when user interacts with notification\n            yield this.clearBadge();\n\n            // This would typically be handled by the NotificationHandler\n            // for deep linking and app navigation\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Error handling notification response:', error);\n          }\n        });\n        function handleNotificationResponse(_x8) {\n          return _handleNotificationResponse.apply(this, arguments);\n        }\n        return handleNotificationResponse;\n      }()\n      /**\r\n       * Clean up listeners\r\n       */\n      )\n    }, {\n      key: \"cleanup\",\n      value: function cleanup() {\n        if (this.notificationListener) {\n          this.notificationListener.remove();\n          this.notificationListener = null;\n        }\n        if (this.responseListener) {\n          this.responseListener.remove();\n          this.responseListener = null;\n        }\n        this.isInitialized = false;\n        _EventLogger.EventLogger.debug('Notification', '[NotificationService] Cleaned up');\n      }\n\n      /**\r\n       * Get stored push token\r\n       */\n    }, {\n      key: \"getStoredPushToken\",\n      value: (function () {\n        var _getStoredPushToken = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            return yield _asyncStorage.default.getItem(NotificationService.STORAGE_KEYS.PUSH_TOKEN);\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to get stored push token:', error);\n            return null;\n          }\n        });\n        function getStoredPushToken() {\n          return _getStoredPushToken.apply(this, arguments);\n        }\n        return getStoredPushToken;\n      }()\n      /**\r\n       * Test notification (for debugging)\r\n       */\n      )\n    }, {\n      key: \"sendTestNotification\",\n      value: (function () {\n        var _sendTestNotification = (0, _asyncToGenerator2.default)(function* () {\n          yield this.scheduleLocalNotification({\n            content: {\n              title: 'Test Notification',\n              body: 'This is a test notification from Zaptap',\n              data: {\n                type: 'system'\n              },\n              categoryIdentifier: 'automation'\n            },\n            trigger: {\n              type: 'time',\n              date: new Date(Date.now() + 2000) // 2 seconds from now\n            }\n          });\n        });\n        function sendTestNotification() {\n          return _sendTestNotification.apply(this, arguments);\n        }\n        return sendTestNotification;\n      }())\n    }], [{\n      key: \"getInstance\",\n      value: function getInstance() {\n        if (!NotificationService.instance) {\n          NotificationService.instance = new NotificationService();\n        }\n        return NotificationService.instance;\n      }\n    }]);\n  }();\n  // Storage keys\n  NotificationService.STORAGE_KEYS = {\n    PREFERENCES: '@zaptap_notification_preferences',\n    PUSH_TOKEN: '@zaptap_push_token',\n    LAST_TOKEN_SYNC: '@zaptap_token_sync',\n    BADGE_COUNT: '@zaptap_badge_count'\n  };\n  var _default = exports.default = NotificationService.getInstance();\n});","lineCount":686,"map":[[11,2,7,0],[11,6,7,0,"Notifications"],[11,19,7,0],[11,22,7,0,"_interopRequireWildcard"],[11,45,7,0],[11,46,7,0,"require"],[11,53,7,0],[11,54,7,0,"_dependencyMap"],[11,68,7,0],[12,2,8,0],[12,6,8,0,"Device"],[12,12,8,0],[12,15,8,0,"_interopRequireWildcard"],[12,38,8,0],[12,39,8,0,"require"],[12,46,8,0],[12,47,8,0,"_dependencyMap"],[12,61,8,0],[13,2,9,0],[13,6,9,0,"_reactNative"],[13,18,9,0],[13,21,9,0,"require"],[13,28,9,0],[13,29,9,0,"_dependencyMap"],[13,43,9,0],[14,2,10,0],[14,6,10,0,"_asyncStorage"],[14,19,10,0],[14,22,10,0,"_interopRequireDefault"],[14,44,10,0],[14,45,10,0,"require"],[14,52,10,0],[14,53,10,0,"_dependencyMap"],[14,67,10,0],[15,2,11,0],[15,6,11,0,"_EventLogger"],[15,18,11,0],[15,21,11,0,"require"],[15,28,11,0],[15,29,11,0,"_dependencyMap"],[15,43,11,0],[16,2,12,0],[16,6,12,0,"_notifications"],[16,20,12,0],[16,23,12,0,"require"],[16,30,12,0],[16,31,12,0,"_dependencyMap"],[16,45,12,0],[17,2,21,35],[17,11,21,35,"_interopRequireWildcard"],[17,35,21,35,"e"],[17,36,21,35],[17,38,21,35,"t"],[17,39,21,35],[17,68,21,35,"WeakMap"],[17,75,21,35],[17,81,21,35,"r"],[17,82,21,35],[17,89,21,35,"WeakMap"],[17,96,21,35],[17,100,21,35,"n"],[17,101,21,35],[17,108,21,35,"WeakMap"],[17,115,21,35],[17,127,21,35,"_interopRequireWildcard"],[17,150,21,35],[17,162,21,35,"_interopRequireWildcard"],[17,186,21,35,"e"],[17,187,21,35],[17,189,21,35,"t"],[17,190,21,35],[17,199,21,35,"t"],[17,200,21,35],[17,204,21,35,"e"],[17,205,21,35],[17,209,21,35,"e"],[17,210,21,35],[17,211,21,35,"__esModule"],[17,221,21,35],[17,230,21,35,"e"],[17,231,21,35],[17,237,21,35,"o"],[17,238,21,35],[17,240,21,35,"i"],[17,241,21,35],[17,243,21,35,"f"],[17,244,21,35],[17,249,21,35,"__proto__"],[17,258,21,35],[17,266,21,35,"default"],[17,273,21,35],[17,275,21,35,"e"],[17,276,21,35],[17,293,21,35,"e"],[17,294,21,35],[17,317,21,35,"e"],[17,318,21,35],[17,343,21,35,"e"],[17,344,21,35],[17,353,21,35,"f"],[17,354,21,35],[17,360,21,35,"o"],[17,361,21,35],[17,364,21,35,"t"],[17,365,21,35],[17,368,21,35,"n"],[17,369,21,35],[17,372,21,35,"r"],[17,373,21,35],[17,381,21,35,"o"],[17,382,21,35],[17,383,21,35,"has"],[17,386,21,35],[17,387,21,35,"e"],[17,388,21,35],[17,398,21,35,"o"],[17,399,21,35],[17,400,21,35,"get"],[17,403,21,35],[17,404,21,35,"e"],[17,405,21,35],[17,408,21,35,"o"],[17,409,21,35],[17,410,21,35,"set"],[17,413,21,35],[17,414,21,35,"e"],[17,415,21,35],[17,417,21,35,"f"],[17,418,21,35],[17,432,21,35,"_t"],[17,434,21,35],[17,438,21,35,"e"],[17,439,21,35],[17,455,21,35,"_t"],[17,457,21,35],[17,464,21,35,"hasOwnProperty"],[17,478,21,35],[17,479,21,35,"call"],[17,483,21,35],[17,484,21,35,"e"],[17,485,21,35],[17,487,21,35,"_t"],[17,489,21,35],[17,496,21,35,"i"],[17,497,21,35],[17,501,21,35,"o"],[17,502,21,35],[17,505,21,35,"Object"],[17,511,21,35],[17,512,21,35,"defineProperty"],[17,526,21,35],[17,531,21,35,"Object"],[17,537,21,35],[17,538,21,35,"getOwnPropertyDescriptor"],[17,562,21,35],[17,563,21,35,"e"],[17,564,21,35],[17,566,21,35,"_t"],[17,568,21,35],[17,575,21,35,"i"],[17,576,21,35],[17,577,21,35,"get"],[17,580,21,35],[17,584,21,35,"i"],[17,585,21,35],[17,586,21,35,"set"],[17,589,21,35],[17,593,21,35,"o"],[17,594,21,35],[17,595,21,35,"f"],[17,596,21,35],[17,598,21,35,"_t"],[17,600,21,35],[17,602,21,35,"i"],[17,603,21,35],[17,607,21,35,"f"],[17,608,21,35],[17,609,21,35,"_t"],[17,611,21,35],[17,615,21,35,"e"],[17,616,21,35],[17,617,21,35,"_t"],[17,619,21,35],[17,630,21,35,"f"],[17,631,21,35],[17,636,21,35,"e"],[17,637,21,35],[17,639,21,35,"t"],[17,640,21,35],[18,2,1,0],[19,0,2,0],[20,0,3,0],[21,0,4,0],[22,0,5,0],[23,2,1,0],[23,6,23,6,"NotificationService"],[23,25,23,25],[24,4,37,2],[24,13,37,2,"NotificationService"],[24,33,37,2],[24,35,37,24],[25,6,37,24],[25,10,37,24,"_classCallCheck2"],[25,26,37,24],[25,27,37,24,"default"],[25,34,37,24],[25,42,37,24,"NotificationService"],[25,61,37,24],[26,6,37,24],[26,11,25,10,"isInitialized"],[26,24,25,23],[26,27,25,26],[26,32,25,31],[27,6,25,31],[27,11,26,10,"notificationListener"],[27,31,26,30],[27,34,26,68],[27,38,26,72],[28,6,26,72],[28,11,27,10,"responseListener"],[28,27,27,26],[28,30,27,64],[28,34,27,68],[29,6,38,4],[29,10,38,8],[29,11,38,9,"setupNotificationHandler"],[29,35,38,33],[29,36,38,34],[29,37,38,35],[30,4,39,2],[31,4,39,3],[31,15,39,3,"_createClass2"],[31,28,39,3],[31,29,39,3,"default"],[31,36,39,3],[31,38,39,3,"NotificationService"],[31,57,39,3],[32,6,39,3,"key"],[32,9,39,3],[33,6,39,3,"value"],[33,11,39,3],[34,6,48,2],[35,0,49,0],[36,0,50,0],[37,6,48,2],[38,8,48,2],[38,12,48,2,"_initialize"],[38,23,48,2],[38,30,48,2,"_asyncToGenerator2"],[38,48,48,2],[38,49,48,2,"default"],[38,56,48,2],[38,58,51,2],[38,71,51,46],[39,10,52,4],[39,14,52,8],[40,12,53,6],[40,16,53,10],[40,20,53,14],[40,21,53,15,"isInitialized"],[40,34,53,28],[40,36,53,30],[41,14,54,8],[41,21,54,15],[41,25,54,19],[42,12,55,6],[44,12,57,6],[45,12,58,6],[45,16,58,10,"Platform"],[45,37,58,18],[45,38,58,19,"OS"],[45,40,58,21],[45,45,58,26],[45,54,58,35],[45,56,58,37],[46,14,59,8],[46,20,59,14],[46,24,59,18],[46,25,59,19,"setupAndroidChannels"],[46,45,59,39],[46,46,59,40],[46,47,59,41],[47,12,60,6],[49,12,62,6],[50,12,63,6],[50,18,63,12],[50,22,63,16],[50,23,63,17,"setupNotificationCategories"],[50,50,63,44],[50,51,63,45],[50,52,63,46],[52,12,65,6],[53,12,66,6],[53,16,66,10],[53,17,66,11,"setupNotificationListeners"],[53,43,66,37],[53,44,66,38],[53,45,66,39],[54,12,68,6],[54,16,68,10],[54,17,68,11,"isInitialized"],[54,30,68,24],[54,33,68,27],[54,37,68,31],[55,12,69,6,"EventLogger"],[55,36,69,17],[55,37,69,18,"debug"],[55,42,69,23],[55,43,69,24],[55,57,69,38],[55,59,69,40],[55,107,69,88],[55,108,69,89],[56,12,70,6],[56,19,70,13],[56,23,70,17],[57,10,72,4],[57,11,72,5],[57,12,72,6],[57,19,72,13,"error"],[57,24,72,18],[57,26,72,20],[58,12,73,6,"EventLogger"],[58,36,73,17],[58,37,73,18,"error"],[58,42,73,23],[58,43,73,24],[58,57,73,38],[58,59,73,40],[58,105,73,86],[58,107,73,88,"error"],[58,112,73,102],[58,113,73,103],[59,12,74,6],[59,19,74,13],[59,24,74,18],[60,10,75,4],[61,8,76,2],[61,9,76,3],[62,8,76,3],[62,17,51,15,"initialize"],[62,27,51,25,"initialize"],[62,28,51,25],[63,10,51,25],[63,17,51,25,"_initialize"],[63,28,51,25],[63,29,51,25,"apply"],[63,34,51,25],[63,41,51,25,"arguments"],[63,50,51,25],[64,8,51,25],[65,8,51,25],[65,15,51,15,"initialize"],[65,25,51,25],[66,6,51,25],[67,6,78,2],[68,0,79,0],[69,0,80,0],[70,6,78,2],[71,4,78,2],[72,6,78,2,"key"],[72,9,78,2],[73,6,78,2,"value"],[73,11,78,2],[74,8,78,2],[74,12,78,2,"_requestPermissions"],[74,31,78,2],[74,38,78,2,"_asyncToGenerator2"],[74,56,78,2],[74,57,78,2,"default"],[74,64,78,2],[74,66,81,2],[74,79,81,70],[75,10,82,4],[75,14,82,8],[76,12,83,6],[76,16,83,10],[76,17,83,11,"Device"],[76,23,83,17],[76,24,83,18,"isDevice"],[76,32,83,26],[76,34,83,28],[77,14,84,8,"EventLogger"],[77,38,84,19],[77,39,84,20,"warn"],[77,43,84,24],[77,44,84,25],[77,58,84,39],[77,60,84,41],[77,124,84,105],[77,125,84,106],[78,14,85,8],[78,21,85,15],[79,16,85,17,"status"],[79,22,85,23],[79,24,85,25],[80,14,85,34],[80,15,85,35],[81,12,86,6],[82,12,88,6],[82,16,88,6,"_yield$Notifications$"],[82,37,88,6],[82,46,88,47,"Notifications"],[82,59,88,60],[82,60,88,61,"getPermissionsAsync"],[82,79,88,80],[82,80,88,81],[82,81,88,82],[83,14,88,22,"existingStatus"],[83,28,88,36],[83,31,88,36,"_yield$Notifications$"],[83,52,88,36],[83,53,88,14,"status"],[83,59,88,20],[84,12,90,6],[84,16,90,10,"finalStatus"],[84,27,90,21],[84,30,90,24,"existingStatus"],[84,44,90,38],[85,12,92,6],[85,16,92,10,"existingStatus"],[85,30,92,24],[85,35,92,29],[85,44,92,38],[85,46,92,40],[86,14,93,8],[86,18,93,8,"_yield$Notifications$2"],[86,40,93,8],[86,49,93,33,"Notifications"],[86,62,93,46],[86,63,93,47,"requestPermissionsAsync"],[86,86,93,70],[86,87,93,71],[87,18,94,10,"ios"],[87,21,94,13],[87,23,94,15],[88,20,95,12,"allowAlert"],[88,30,95,22],[88,32,95,24],[88,36,95,28],[89,20,96,12,"allowBadge"],[89,30,96,22],[89,32,96,24],[89,36,96,28],[90,20,97,12,"allowSound"],[90,30,97,22],[90,32,97,24],[90,36,97,28],[91,20,98,12,"allowAnnouncements"],[91,38,98,30],[91,40,98,32],[91,44,98,36],[92,20,99,12,"allowCriticalAlerts"],[92,39,99,31],[92,41,99,33],[93,18,100,10],[94,16,101,8],[94,17,101,9],[94,18,101,10],[95,16,93,16,"status"],[95,22,93,22],[95,25,93,22,"_yield$Notifications$2"],[95,47,93,22],[95,48,93,16,"status"],[95,54,93,22],[96,14,102,8,"finalStatus"],[96,25,102,19],[96,28,102,22,"status"],[96,34,102,28],[97,12,103,6],[99,12,105,6],[100,12,106,6],[100,16,106,10,"iosPermissions"],[100,30,106,24],[101,12,107,6],[101,16,107,10,"Platform"],[101,37,107,18],[101,38,107,19,"OS"],[101,40,107,21],[101,45,107,26],[101,50,107,31],[101,54,107,35,"finalStatus"],[101,65,107,46],[101,70,107,51],[101,79,107,60],[101,81,107,62],[102,14,107,62],[102,18,107,62,"_permissions$ios$allo"],[102,39,107,62],[102,41,107,62,"_permissions$ios"],[102,57,107,62],[102,59,107,62,"_permissions$ios$allo2"],[102,81,107,62],[102,83,107,62,"_permissions$ios2"],[102,100,107,62],[102,102,107,62,"_permissions$ios$allo3"],[102,124,107,62],[102,126,107,62,"_permissions$ios3"],[102,143,107,62],[102,145,107,62,"_permissions$ios$allo4"],[102,167,107,62],[102,169,107,62,"_permissions$ios4"],[102,186,107,62],[102,188,107,62,"_permissions$ios$allo5"],[102,210,107,62],[102,212,107,62,"_permissions$ios5"],[102,229,107,62],[102,231,107,62,"_permissions$ios$allo6"],[102,253,107,62],[102,255,107,62,"_permissions$ios6"],[102,272,107,62],[102,274,107,62,"_permissions$ios$allo7"],[102,296,107,62],[102,298,107,62,"_permissions$ios7"],[102,315,107,62],[102,317,107,62,"_permissions$ios$allo8"],[102,339,107,62],[102,341,107,62,"_permissions$ios8"],[102,358,107,62],[103,14,108,8],[103,18,108,14,"permissions"],[103,29,108,25],[103,38,108,34,"Notifications"],[103,51,108,47],[103,52,108,48,"getPermissionsAsync"],[103,71,108,67],[103,72,108,68],[103,73,108,69],[104,14,109,8,"iosPermissions"],[104,28,109,22],[104,31,109,25],[105,16,110,10,"allowsAlert"],[105,27,110,21],[105,30,110,21,"_permissions$ios$allo"],[105,51,110,21],[105,55,110,21,"_permissions$ios"],[105,71,110,21],[105,74,110,23,"permissions"],[105,85,110,34],[105,86,110,35,"ios"],[105,89,110,38],[105,110,110,23,"_permissions$ios"],[105,126,110,23],[105,127,110,40,"allowsAlert"],[105,138,110,51],[105,150,110,51,"_permissions$ios$allo"],[105,171,110,51],[105,174,110,55],[105,179,110,60],[106,16,111,10,"allowsBadge"],[106,27,111,21],[106,30,111,21,"_permissions$ios$allo2"],[106,52,111,21],[106,56,111,21,"_permissions$ios2"],[106,73,111,21],[106,76,111,23,"permissions"],[106,87,111,34],[106,88,111,35,"ios"],[106,91,111,38],[106,112,111,23,"_permissions$ios2"],[106,129,111,23],[106,130,111,40,"allowsBadge"],[106,141,111,51],[106,153,111,51,"_permissions$ios$allo2"],[106,175,111,51],[106,178,111,55],[106,183,111,60],[107,16,112,10,"allowsSound"],[107,27,112,21],[107,30,112,21,"_permissions$ios$allo3"],[107,52,112,21],[107,56,112,21,"_permissions$ios3"],[107,73,112,21],[107,76,112,23,"permissions"],[107,87,112,34],[107,88,112,35,"ios"],[107,91,112,38],[107,112,112,23,"_permissions$ios3"],[107,129,112,23],[107,130,112,40,"allowsSound"],[107,141,112,51],[107,153,112,51,"_permissions$ios$allo3"],[107,175,112,51],[107,178,112,55],[107,183,112,60],[108,16,113,10,"allowsCriticalAlerts"],[108,36,113,30],[108,39,113,30,"_permissions$ios$allo4"],[108,61,113,30],[108,65,113,30,"_permissions$ios4"],[108,82,113,30],[108,85,113,32,"permissions"],[108,96,113,43],[108,97,113,44,"ios"],[108,100,113,47],[108,121,113,32,"_permissions$ios4"],[108,138,113,32],[108,139,113,49,"allowsCriticalAlerts"],[108,159,113,69],[108,171,113,69,"_permissions$ios$allo4"],[108,193,113,69],[108,196,113,73],[108,201,113,78],[109,16,114,10,"allowsAnnouncements"],[109,35,114,29],[109,38,114,29,"_permissions$ios$allo5"],[109,60,114,29],[109,64,114,29,"_permissions$ios5"],[109,81,114,29],[109,84,114,31,"permissions"],[109,95,114,42],[109,96,114,43,"ios"],[109,99,114,46],[109,120,114,31,"_permissions$ios5"],[109,137,114,31],[109,138,114,48,"allowsAnnouncements"],[109,157,114,67],[109,169,114,67,"_permissions$ios$allo5"],[109,191,114,67],[109,194,114,71],[109,199,114,76],[110,16,115,10,"allowsDisplayInNotificationCenter"],[110,49,115,43],[110,52,115,43,"_permissions$ios$allo6"],[110,74,115,43],[110,78,115,43,"_permissions$ios6"],[110,95,115,43],[110,98,115,45,"permissions"],[110,109,115,56],[110,110,115,57,"ios"],[110,113,115,60],[110,134,115,45,"_permissions$ios6"],[110,151,115,45],[110,152,115,62,"allowsDisplayInNotificationCenter"],[110,185,115,95],[110,197,115,95,"_permissions$ios$allo6"],[110,219,115,95],[110,222,115,99],[110,227,115,104],[111,16,116,10,"allowsDisplayInCarPlay"],[111,38,116,32],[111,41,116,32,"_permissions$ios$allo7"],[111,63,116,32],[111,67,116,32,"_permissions$ios7"],[111,84,116,32],[111,87,116,34,"permissions"],[111,98,116,45],[111,99,116,46,"ios"],[111,102,116,49],[111,123,116,34,"_permissions$ios7"],[111,140,116,34],[111,141,116,51,"allowsDisplayInCarPlay"],[111,163,116,73],[111,175,116,73,"_permissions$ios$allo7"],[111,197,116,73],[111,200,116,77],[111,205,116,82],[112,16,117,10,"allowsDisplayOnLockScreen"],[112,41,117,35],[112,44,117,35,"_permissions$ios$allo8"],[112,66,117,35],[112,70,117,35,"_permissions$ios8"],[112,87,117,35],[112,90,117,37,"permissions"],[112,101,117,48],[112,102,117,49,"ios"],[112,105,117,52],[112,126,117,37,"_permissions$ios8"],[112,143,117,37],[112,144,117,54,"allowsDisplayOnLockScreen"],[112,169,117,79],[112,181,117,79,"_permissions$ios$allo8"],[112,203,117,79],[112,206,117,83],[113,14,118,8],[113,15,118,9],[114,12,119,6],[115,12,121,6],[115,16,121,12,"result"],[115,22,121,43],[115,25,121,46],[116,14,122,8,"status"],[116,20,122,14],[116,22,122,16,"finalStatus"],[116,33,122,68],[117,14,123,8,"ios"],[117,17,123,11],[117,19,123,13,"iosPermissions"],[118,12,124,6],[118,13,124,7],[119,12,126,6,"EventLogger"],[119,36,126,17],[119,37,126,18,"debug"],[119,42,126,23],[119,43,126,24],[119,57,126,38],[119,59,126,40],[119,101,126,82],[119,103,126,84,"result"],[119,109,126,90],[119,110,126,91],[120,12,127,6],[120,19,127,13,"result"],[120,25,127,19],[121,10,129,4],[121,11,129,5],[121,12,129,6],[121,19,129,13,"error"],[121,24,129,18],[121,26,129,20],[122,12,130,6,"EventLogger"],[122,36,130,17],[122,37,130,18,"error"],[122,42,130,23],[122,43,130,24],[122,57,130,38],[122,59,130,40],[122,109,130,90],[122,111,130,92,"error"],[122,116,130,106],[122,117,130,107],[123,12,131,6],[123,19,131,13],[124,14,131,15,"status"],[124,20,131,21],[124,22,131,23],[125,12,131,32],[125,13,131,33],[126,10,132,4],[127,8,133,2],[127,9,133,3],[128,8,133,3],[128,17,81,15,"requestPermissions"],[128,35,81,33,"requestPermissions"],[128,36,81,33],[129,10,81,33],[129,17,81,33,"_requestPermissions"],[129,36,81,33],[129,37,81,33,"apply"],[129,42,81,33],[129,49,81,33,"arguments"],[129,58,81,33],[130,8,81,33],[131,8,81,33],[131,15,81,15,"requestPermissions"],[131,33,81,33],[132,6,81,33],[133,6,135,2],[134,0,136,0],[135,0,137,0],[136,6,135,2],[137,4,135,2],[138,6,135,2,"key"],[138,9,135,2],[139,6,135,2,"value"],[139,11,135,2],[140,8,135,2],[140,12,135,2,"_getPushToken"],[140,25,135,2],[140,32,135,2,"_asyncToGenerator2"],[140,50,135,2],[140,51,135,2,"default"],[140,58,135,2],[140,60,138,2],[140,73,138,54],[141,10,139,4],[141,14,139,8],[142,12,140,6],[142,16,140,10],[142,17,140,11,"Device"],[142,23,140,17],[142,24,140,18,"isDevice"],[142,32,140,26],[142,34,140,28],[143,14,141,8,"EventLogger"],[143,38,141,19],[143,39,141,20,"warn"],[143,43,141,24],[143,44,141,25],[143,58,141,39],[143,60,141,41],[143,122,141,103],[143,123,141,104],[144,14,142,8],[144,21,142,15],[144,25,142,19],[145,12,143,6],[146,12,145,6],[146,16,145,12,"permissions"],[146,27,145,23],[146,36,145,32],[146,40,145,36],[146,41,145,37,"requestPermissions"],[146,59,145,55],[146,60,145,56],[146,61,145,57],[147,12,146,6],[147,16,146,10,"permissions"],[147,27,146,21],[147,28,146,22,"status"],[147,34,146,28],[147,39,146,33],[147,48,146,42],[147,50,146,44],[148,14,147,8,"EventLogger"],[148,38,147,19],[148,39,147,20,"warn"],[148,43,147,24],[148,44,147,25],[148,58,147,39],[148,60,147,41],[148,125,147,106],[148,126,147,107],[149,14,148,8],[149,21,148,15],[149,25,148,19],[150,12,149,6],[151,12,151,6],[151,16,151,12,"tokenData"],[151,25,151,21],[151,34,151,30,"Notifications"],[151,47,151,43],[151,48,151,44,"getExpoPushTokenAsync"],[151,69,151,65],[151,70,151,66],[152,14,152,8,"projectId"],[152,23,152,17],[152,25,152,19],[152,63,152,57],[152,64,152,59],[153,12,153,6],[153,13,153,7],[153,14,153,8],[154,12,155,6],[154,16,155,12,"token"],[154,21,155,17],[154,24,155,20,"tokenData"],[154,33,155,29],[154,34,155,30,"data"],[154,38,155,34],[156,12,157,6],[157,12,158,6],[157,18,158,12,"AsyncStorage"],[157,39,158,24],[157,40,158,25,"setItem"],[157,47,158,32],[157,48,158,33,"NotificationService"],[157,67,158,52],[157,68,158,53,"STORAGE_KEYS"],[157,80,158,65],[157,81,158,66,"PUSH_TOKEN"],[157,91,158,76],[157,93,158,78,"token"],[157,98,158,83],[157,99,158,84],[158,12,160,6,"EventLogger"],[158,36,160,17],[158,37,160,18,"debug"],[158,42,160,23],[158,43,160,24],[158,57,160,38],[158,59,160,40],[158,103,160,84],[158,105,160,86,"token"],[158,110,160,91],[158,111,160,92,"substring"],[158,120,160,101],[158,121,160,102],[158,122,160,103],[158,124,160,105],[158,126,160,107],[158,127,160,108],[158,130,160,111],[158,135,160,116],[158,136,160,117],[159,12,161,6],[159,19,161,13,"token"],[159,24,161,18],[160,10,163,4],[160,11,163,5],[160,12,163,6],[160,19,163,13,"error"],[160,24,163,18],[160,26,163,20],[161,12,164,6,"EventLogger"],[161,36,164,17],[161,37,164,18,"error"],[161,42,164,23],[161,43,164,24],[161,57,164,38],[161,59,164,40],[161,108,164,89],[161,110,164,91,"error"],[161,115,164,105],[161,116,164,106],[162,12,165,6],[162,19,165,13],[162,23,165,17],[163,10,166,4],[164,8,167,2],[164,9,167,3],[165,8,167,3],[165,17,138,15,"getPushToken"],[165,29,138,27,"getPushToken"],[165,30,138,27],[166,10,138,27],[166,17,138,27,"_getPushToken"],[166,30,138,27],[166,31,138,27,"apply"],[166,36,138,27],[166,43,138,27,"arguments"],[166,52,138,27],[167,8,138,27],[168,8,138,27],[168,15,138,15,"getPushToken"],[168,27,138,27],[169,6,138,27],[170,6,169,2],[171,0,170,0],[172,0,171,0],[173,6,169,2],[174,4,169,2],[175,6,169,2,"key"],[175,9,169,2],[176,6,169,2,"value"],[176,11,169,2],[177,8,169,2],[177,12,169,2,"_scheduleLocalNotification"],[177,38,169,2],[177,45,169,2,"_asyncToGenerator2"],[177,63,169,2],[177,64,169,2,"default"],[177,71,169,2],[177,73,172,2],[177,84,172,41,"request"],[177,91,172,74],[177,93,172,100],[178,10,173,4],[178,14,173,8],[179,12,174,6],[179,16,174,12,"permissions"],[179,27,174,23],[179,36,174,32],[179,40,174,36],[179,41,174,37,"requestPermissions"],[179,59,174,55],[179,60,174,56],[179,61,174,57],[180,12,175,6],[180,16,175,10,"permissions"],[180,27,175,21],[180,28,175,22,"status"],[180,34,175,28],[180,39,175,33],[180,48,175,42],[180,50,175,44],[181,14,176,8,"EventLogger"],[181,38,176,19],[181,39,176,20,"warn"],[181,43,176,24],[181,44,176,25],[181,58,176,39],[181,60,176,41],[181,131,176,112],[181,132,176,113],[182,14,177,8],[182,21,177,15],[182,25,177,19],[183,12,178,6],[184,12,180,6],[184,16,180,12,"notificationRequest"],[184,35,180,71],[184,38,180,74],[185,14,181,8,"content"],[185,21,181,15],[185,23,181,17],[186,16,182,10,"title"],[186,21,182,15],[186,23,182,17,"request"],[186,30,182,24],[186,31,182,25,"content"],[186,38,182,32],[186,39,182,33,"title"],[186,44,182,38],[187,16,183,10,"body"],[187,20,183,14],[187,22,183,16,"request"],[187,29,183,23],[187,30,183,24,"content"],[187,37,183,31],[187,38,183,32,"body"],[187,42,183,36],[188,16,184,10,"data"],[188,20,184,14],[188,22,184,16,"request"],[188,29,184,23],[188,30,184,24,"content"],[188,37,184,31],[188,38,184,32,"data"],[188,42,184,36],[188,46,184,40],[188,47,184,41],[188,48,184,42],[189,16,185,10,"sound"],[189,21,185,15],[189,23,185,17,"request"],[189,30,185,24],[189,31,185,25,"content"],[189,38,185,32],[189,39,185,33,"sound"],[189,44,185,38],[189,48,185,42],[189,57,185,51],[190,16,186,10,"badge"],[190,21,186,15],[190,23,186,17,"request"],[190,30,186,24],[190,31,186,25,"content"],[190,38,186,32],[190,39,186,33,"badge"],[190,44,186,38],[191,16,187,10,"categoryIdentifier"],[191,34,187,28],[191,36,187,30,"request"],[191,43,187,37],[191,44,187,38,"content"],[191,51,187,45],[191,52,187,46,"categoryIdentifier"],[192,14,188,8],[192,15,188,9],[193,14,189,8,"trigger"],[193,21,189,15],[193,23,189,17],[193,27,189,21],[193,28,189,23],[194,12,190,6],[194,13,190,7],[196,12,192,6],[197,12,193,6],[197,16,193,10,"request"],[197,23,193,17],[197,24,193,18,"trigger"],[197,31,193,25],[197,32,193,26,"type"],[197,36,193,30],[197,41,193,35],[197,47,193,41],[197,51,193,45,"request"],[197,58,193,52],[197,59,193,53,"trigger"],[197,66,193,60],[197,67,193,61,"date"],[197,71,193,65],[197,73,193,67],[198,14,194,8,"notificationRequest"],[198,33,194,27],[198,34,194,28,"trigger"],[198,41,194,35],[198,44,194,38],[199,16,195,10,"date"],[199,20,195,14],[199,22,195,16,"request"],[199,29,195,23],[199,30,195,24,"trigger"],[199,37,195,31],[199,38,195,32,"date"],[199,42,195,36],[200,16,196,10,"repeats"],[200,23,196,17],[200,25,196,19,"request"],[200,32,196,26],[200,33,196,27,"trigger"],[200,40,196,34],[200,41,196,35,"repeats"],[200,48,196,42],[200,52,196,46],[200,57,196,51],[201,16,197,10,"channelId"],[201,25,197,19],[201,27,197,21,"request"],[201,34,197,28],[201,35,197,29,"trigger"],[201,42,197,36],[201,43,197,37,"channelId"],[201,52,197,46],[201,56,197,50,"NotificationChannels"],[201,91,197,70],[201,92,197,71,"DEFAULT"],[201,99,197,78],[201,100,197,79,"id"],[202,14,198,8],[202,15,198,9],[203,12,199,6],[204,12,201,6],[204,16,201,12,"identifier"],[204,26,201,22],[204,35,201,31,"Notifications"],[204,48,201,44],[204,49,201,45,"scheduleNotificationAsync"],[204,74,201,70],[204,75,201,71,"notificationRequest"],[204,94,201,90],[204,95,201,91],[205,12,202,6,"EventLogger"],[205,36,202,17],[205,37,202,18,"debug"],[205,42,202,23],[205,43,202,24],[205,57,202,38],[205,59,202,40],[205,112,202,93],[205,114,202,95,"identifier"],[205,124,202,105],[205,125,202,106],[206,12,203,6],[206,19,203,13,"identifier"],[206,29,203,23],[207,10,205,4],[207,11,205,5],[207,12,205,6],[207,19,205,13,"error"],[207,24,205,18],[207,26,205,20],[208,12,206,6,"EventLogger"],[208,36,206,17],[208,37,206,18,"error"],[208,42,206,23],[208,43,206,24],[208,57,206,38],[208,59,206,40],[208,121,206,102],[208,123,206,104,"error"],[208,128,206,118],[208,129,206,119],[209,12,207,6],[209,19,207,13],[209,23,207,17],[210,10,208,4],[211,8,209,2],[211,9,209,3],[212,8,209,3],[212,17,172,15,"scheduleLocalNotification"],[212,42,172,40,"scheduleLocalNotification"],[212,43,172,40,"_x"],[212,45,172,40],[213,10,172,40],[213,17,172,40,"_scheduleLocalNotification"],[213,43,172,40],[213,44,172,40,"apply"],[213,49,172,40],[213,56,172,40,"arguments"],[213,65,172,40],[214,8,172,40],[215,8,172,40],[215,15,172,15,"scheduleLocalNotification"],[215,40,172,40],[216,6,172,40],[217,6,211,2],[218,0,212,0],[219,0,213,0],[220,6,211,2],[221,4,211,2],[222,6,211,2,"key"],[222,9,211,2],[223,6,211,2,"value"],[223,11,211,2],[224,8,211,2],[224,12,211,2,"_cancelNotification"],[224,31,211,2],[224,38,211,2,"_asyncToGenerator2"],[224,56,211,2],[224,57,211,2,"default"],[224,64,211,2],[224,66,214,2],[224,77,214,34,"identifier"],[224,87,214,52],[224,89,214,69],[225,10,215,4],[225,14,215,8],[226,12,216,6],[226,18,216,12,"Notifications"],[226,31,216,25],[226,32,216,26,"cancelScheduledNotificationAsync"],[226,64,216,58],[226,65,216,59,"identifier"],[226,75,216,69],[226,76,216,70],[227,12,217,6,"EventLogger"],[227,36,217,17],[227,37,217,18,"debug"],[227,42,217,23],[227,43,217,24],[227,57,217,38],[227,59,217,40],[227,106,217,87],[227,108,217,89,"identifier"],[227,118,217,99],[227,119,217,100],[228,10,218,4],[228,11,218,5],[228,12,218,6],[228,19,218,13,"error"],[228,24,218,18],[228,26,218,20],[229,12,219,6,"EventLogger"],[229,36,219,17],[229,37,219,18,"error"],[229,42,219,23],[229,43,219,24],[229,57,219,38],[229,59,219,40],[229,113,219,94],[229,115,219,96,"error"],[229,120,219,110],[229,121,219,111],[230,10,220,4],[231,8,221,2],[231,9,221,3],[232,8,221,3],[232,17,214,15,"cancelNotification"],[232,35,214,33,"cancelNotification"],[232,36,214,33,"_x2"],[232,39,214,33],[233,10,214,33],[233,17,214,33,"_cancelNotification"],[233,36,214,33],[233,37,214,33,"apply"],[233,42,214,33],[233,49,214,33,"arguments"],[233,58,214,33],[234,8,214,33],[235,8,214,33],[235,15,214,15,"cancelNotification"],[235,33,214,33],[236,6,214,33],[237,6,223,2],[238,0,224,0],[239,0,225,0],[240,6,223,2],[241,4,223,2],[242,6,223,2,"key"],[242,9,223,2],[243,6,223,2,"value"],[243,11,223,2],[244,8,223,2],[244,12,223,2,"_cancelAllNotifications"],[244,35,223,2],[244,42,223,2,"_asyncToGenerator2"],[244,60,223,2],[244,61,223,2,"default"],[244,68,223,2],[244,70,226,2],[244,83,226,55],[245,10,227,4],[245,14,227,8],[246,12,228,6],[246,18,228,12,"Notifications"],[246,31,228,25],[246,32,228,26,"cancelAllScheduledNotificationsAsync"],[246,68,228,62],[246,69,228,63],[246,70,228,64],[247,12,229,6,"EventLogger"],[247,36,229,17],[247,37,229,18,"debug"],[247,42,229,23],[247,43,229,24],[247,57,229,38],[247,59,229,40],[247,110,229,91],[247,111,229,92],[248,10,230,4],[248,11,230,5],[248,12,230,6],[248,19,230,13,"error"],[248,24,230,18],[248,26,230,20],[249,12,231,6,"EventLogger"],[249,36,231,17],[249,37,231,18,"error"],[249,42,231,23],[249,43,231,24],[249,57,231,38],[249,59,231,40],[249,118,231,99],[249,120,231,101,"error"],[249,125,231,115],[249,126,231,116],[250,10,232,4],[251,8,233,2],[251,9,233,3],[252,8,233,3],[252,17,226,15,"cancelAllNotifications"],[252,39,226,37,"cancelAllNotifications"],[252,40,226,37],[253,10,226,37],[253,17,226,37,"_cancelAllNotifications"],[253,40,226,37],[253,41,226,37,"apply"],[253,46,226,37],[253,53,226,37,"arguments"],[253,62,226,37],[254,8,226,37],[255,8,226,37],[255,15,226,15,"cancelAllNotifications"],[255,37,226,37],[256,6,226,37],[257,6,235,2],[258,0,236,0],[259,0,237,0],[260,6,235,2],[261,4,235,2],[262,6,235,2,"key"],[262,9,235,2],[263,6,235,2,"value"],[263,11,235,2],[264,8,235,2],[264,12,235,2,"_setBadgeCount"],[264,26,235,2],[264,33,235,2,"_asyncToGenerator2"],[264,51,235,2],[264,52,235,2,"default"],[264,59,235,2],[264,61,238,2],[264,72,238,29,"count"],[264,77,238,42],[264,79,238,59],[265,10,239,4],[265,14,239,8],[266,12,240,6],[266,18,240,12,"Notifications"],[266,31,240,25],[266,32,240,26,"setBadgeCountAsync"],[266,50,240,44],[266,51,240,45,"count"],[266,56,240,50],[266,57,240,51],[267,12,241,6],[267,18,241,12,"AsyncStorage"],[267,39,241,24],[267,40,241,25,"setItem"],[267,47,241,32],[267,48,241,33,"NotificationService"],[267,67,241,52],[267,68,241,53,"STORAGE_KEYS"],[267,80,241,65],[267,81,241,66,"BADGE_COUNT"],[267,92,241,77],[267,94,241,79,"count"],[267,99,241,84],[267,100,241,85,"toString"],[267,108,241,93],[267,109,241,94],[267,110,241,95],[267,111,241,96],[268,12,242,6,"EventLogger"],[268,36,242,17],[268,37,242,18,"debug"],[268,42,242,23],[268,43,242,24],[268,57,242,38],[268,59,242,40],[268,102,242,83],[268,104,242,85,"count"],[268,109,242,90],[268,110,242,91],[269,10,243,4],[269,11,243,5],[269,12,243,6],[269,19,243,13,"error"],[269,24,243,18],[269,26,243,20],[270,12,244,6,"EventLogger"],[270,36,244,17],[270,37,244,18,"error"],[270,42,244,23],[270,43,244,24],[270,57,244,38],[270,59,244,40],[270,109,244,90],[270,111,244,92,"error"],[270,116,244,106],[270,117,244,107],[271,10,245,4],[272,8,246,2],[272,9,246,3],[273,8,246,3],[273,17,238,15,"setBadgeCount"],[273,30,238,28,"setBadgeCount"],[273,31,238,28,"_x3"],[273,34,238,28],[274,10,238,28],[274,17,238,28,"_setBadgeCount"],[274,31,238,28],[274,32,238,28,"apply"],[274,37,238,28],[274,44,238,28,"arguments"],[274,53,238,28],[275,8,238,28],[276,8,238,28],[276,15,238,15,"setBadgeCount"],[276,28,238,28],[277,6,238,28],[278,6,248,2],[279,0,249,0],[280,0,250,0],[281,6,248,2],[282,4,248,2],[283,6,248,2,"key"],[283,9,248,2],[284,6,248,2,"value"],[284,11,248,2],[285,8,248,2],[285,12,248,2,"_getBadgeCount"],[285,26,248,2],[285,33,248,2,"_asyncToGenerator2"],[285,51,248,2],[285,52,248,2,"default"],[285,59,248,2],[285,61,251,2],[285,74,251,48],[286,10,252,4],[286,14,252,8],[287,12,253,6],[287,16,253,12,"stored"],[287,22,253,18],[287,31,253,27,"AsyncStorage"],[287,52,253,39],[287,53,253,40,"getItem"],[287,60,253,47],[287,61,253,48,"NotificationService"],[287,80,253,67],[287,81,253,68,"STORAGE_KEYS"],[287,93,253,80],[287,94,253,81,"BADGE_COUNT"],[287,105,253,92],[287,106,253,93],[288,12,254,6],[288,19,254,13,"stored"],[288,25,254,19],[288,28,254,22,"parseInt"],[288,36,254,30],[288,37,254,31,"stored"],[288,43,254,37],[288,45,254,39],[288,47,254,41],[288,48,254,42],[288,51,254,45],[288,52,254,46],[289,10,255,4],[289,11,255,5],[289,12,255,6],[289,19,255,13,"error"],[289,24,255,18],[289,26,255,20],[290,12,256,6,"EventLogger"],[290,36,256,17],[290,37,256,18,"error"],[290,42,256,23],[290,43,256,24],[290,57,256,38],[290,59,256,40],[290,109,256,90],[290,111,256,92,"error"],[290,116,256,106],[290,117,256,107],[291,12,257,6],[291,19,257,13],[291,20,257,14],[292,10,258,4],[293,8,259,2],[293,9,259,3],[294,8,259,3],[294,17,251,15,"getBadgeCount"],[294,30,251,28,"getBadgeCount"],[294,31,251,28],[295,10,251,28],[295,17,251,28,"_getBadgeCount"],[295,31,251,28],[295,32,251,28,"apply"],[295,37,251,28],[295,44,251,28,"arguments"],[295,53,251,28],[296,8,251,28],[297,8,251,28],[297,15,251,15,"getBadgeCount"],[297,28,251,28],[298,6,251,28],[299,6,261,2],[300,0,262,0],[301,0,263,0],[302,6,261,2],[303,4,261,2],[304,6,261,2,"key"],[304,9,261,2],[305,6,261,2,"value"],[305,11,261,2],[306,8,261,2],[306,12,261,2,"_clearBadge"],[306,23,261,2],[306,30,261,2,"_asyncToGenerator2"],[306,48,261,2],[306,49,261,2,"default"],[306,56,261,2],[306,58,264,2],[306,71,264,43],[307,10,265,4],[307,16,265,10],[307,20,265,14],[307,21,265,15,"setBadgeCount"],[307,34,265,28],[307,35,265,29],[307,36,265,30],[307,37,265,31],[308,8,266,2],[308,9,266,3],[309,8,266,3],[309,17,264,15,"clearBadge"],[309,27,264,25,"clearBadge"],[309,28,264,25],[310,10,264,25],[310,17,264,25,"_clearBadge"],[310,28,264,25],[310,29,264,25,"apply"],[310,34,264,25],[310,41,264,25,"arguments"],[310,50,264,25],[311,8,264,25],[312,8,264,25],[312,15,264,15,"clearBadge"],[312,25,264,25],[313,6,264,25],[314,6,268,2],[315,0,269,0],[316,0,270,0],[317,6,268,2],[318,4,268,2],[319,6,268,2,"key"],[319,9,268,2],[320,6,268,2,"value"],[320,11,268,2],[321,8,268,2],[321,12,268,2,"_getPreferences"],[321,27,268,2],[321,34,268,2,"_asyncToGenerator2"],[321,52,268,2],[321,53,268,2,"default"],[321,60,268,2],[321,62,271,2],[321,75,271,66],[322,10,272,4],[322,14,272,8],[323,12,273,6],[323,16,273,12,"stored"],[323,22,273,18],[323,31,273,27,"AsyncStorage"],[323,52,273,39],[323,53,273,40,"getItem"],[323,60,273,47],[323,61,273,48,"NotificationService"],[323,80,273,67],[323,81,273,68,"STORAGE_KEYS"],[323,93,273,80],[323,94,273,81,"PREFERENCES"],[323,105,273,92],[323,106,273,93],[324,12,274,6],[324,16,274,10,"stored"],[324,22,274,16],[324,24,274,18],[325,14,275,8],[325,21,275,8,"Object"],[325,27,275,8],[325,28,275,8,"assign"],[325,34,275,8],[325,39,275,20,"DEFAULT_NOTIFICATION_PREFERENCES"],[325,86,275,52],[325,88,275,57,"JSON"],[325,92,275,61],[325,93,275,62,"parse"],[325,98,275,67],[325,99,275,68,"stored"],[325,105,275,74],[325,106,275,75],[326,12,276,6],[327,12,277,6],[327,19,277,13,"DEFAULT_NOTIFICATION_PREFERENCES"],[327,66,277,45],[328,10,278,4],[328,11,278,5],[328,12,278,6],[328,19,278,13,"error"],[328,24,278,18],[328,26,278,20],[329,12,279,6,"EventLogger"],[329,36,279,17],[329,37,279,18,"error"],[329,42,279,23],[329,43,279,24],[329,57,279,38],[329,59,279,40],[329,109,279,90],[329,111,279,92,"error"],[329,116,279,106],[329,117,279,107],[330,12,280,6],[330,19,280,13,"DEFAULT_NOTIFICATION_PREFERENCES"],[330,66,280,45],[331,10,281,4],[332,8,282,2],[332,9,282,3],[333,8,282,3],[333,17,271,15,"getPreferences"],[333,31,271,29,"getPreferences"],[333,32,271,29],[334,10,271,29],[334,17,271,29,"_getPreferences"],[334,32,271,29],[334,33,271,29,"apply"],[334,38,271,29],[334,45,271,29,"arguments"],[334,54,271,29],[335,8,271,29],[336,8,271,29],[336,15,271,15,"getPreferences"],[336,29,271,29],[337,6,271,29],[338,6,284,2],[339,0,285,0],[340,0,286,0],[341,6,284,2],[342,4,284,2],[343,6,284,2,"key"],[343,9,284,2],[344,6,284,2,"value"],[344,11,284,2],[345,8,284,2],[345,12,284,2,"_savePreferences"],[345,28,284,2],[345,35,284,2,"_asyncToGenerator2"],[345,53,284,2],[345,54,284,2,"default"],[345,61,284,2],[345,63,287,2],[345,74,287,31,"preferences"],[345,85,287,67],[345,87,287,84],[346,10,288,4],[346,14,288,8],[347,12,289,6],[347,18,289,12,"AsyncStorage"],[347,39,289,24],[347,40,289,25,"setItem"],[347,47,289,32],[347,48,290,8,"NotificationService"],[347,67,290,27],[347,68,290,28,"STORAGE_KEYS"],[347,80,290,40],[347,81,290,41,"PREFERENCES"],[347,92,290,52],[347,94,291,8,"JSON"],[347,98,291,12],[347,99,291,13,"stringify"],[347,108,291,22],[347,109,291,23,"preferences"],[347,120,291,34],[347,121,292,6],[347,122,292,7],[348,12,293,6,"EventLogger"],[348,36,293,17],[348,37,293,18,"debug"],[348,42,293,23],[348,43,293,24],[348,57,293,38],[348,59,293,40],[348,100,293,81],[348,101,293,82],[349,10,294,4],[349,11,294,5],[349,12,294,6],[349,19,294,13,"error"],[349,24,294,18],[349,26,294,20],[350,12,295,6,"EventLogger"],[350,36,295,17],[350,37,295,18,"error"],[350,42,295,23],[350,43,295,24],[350,57,295,38],[350,59,295,40],[350,110,295,91],[350,112,295,93,"error"],[350,117,295,107],[350,118,295,108],[351,10,296,4],[352,8,297,2],[352,9,297,3],[353,8,297,3],[353,17,287,15,"savePreferences"],[353,32,287,30,"savePreferences"],[353,33,287,30,"_x4"],[353,36,287,30],[354,10,287,30],[354,17,287,30,"_savePreferences"],[354,33,287,30],[354,34,287,30,"apply"],[354,39,287,30],[354,46,287,30,"arguments"],[354,55,287,30],[355,8,287,30],[356,8,287,30],[356,15,287,15,"savePreferences"],[356,30,287,30],[357,6,287,30],[358,6,299,2],[359,0,300,0],[360,0,301,0],[361,6,299,2],[362,4,299,2],[363,6,299,2,"key"],[363,9,299,2],[364,6,299,2,"value"],[364,11,299,2],[365,8,299,2],[365,12,299,2,"_shouldShowNotification"],[365,35,299,2],[365,42,299,2,"_asyncToGenerator2"],[365,60,299,2],[365,61,299,2,"default"],[365,68,299,2],[365,70,302,2],[365,81,302,38,"type"],[365,85,302,71],[365,87,302,91],[366,10,303,4],[366,14,303,8],[367,12,304,6],[367,16,304,12,"preferences"],[367,27,304,23],[367,36,304,32],[367,40,304,36],[367,41,304,37,"getPreferences"],[367,55,304,51],[367,56,304,52],[367,57,304,53],[368,12,306,6],[368,16,306,10],[368,17,306,11,"preferences"],[368,28,306,22],[368,29,306,23,"enabled"],[368,36,306,30],[368,38,306,32],[369,14,307,8],[369,21,307,15],[369,26,307,20],[370,12,308,6],[372,12,310,6],[373,12,311,6],[373,20,311,14,"type"],[373,24,311,18],[374,14,312,8],[374,19,312,13],[374,31,312,25],[375,16,313,10],[375,20,313,14],[375,21,313,15,"preferences"],[375,32,313,26],[375,33,313,27,"categories"],[375,43,313,37],[375,44,313,38,"automations"],[375,55,313,49],[375,57,313,51],[375,64,313,58],[375,69,313,63],[376,16,314,10],[377,14,315,8],[377,19,315,13],[377,26,315,20],[378,16,316,10],[378,20,316,14],[378,21,316,15,"preferences"],[378,32,316,26],[378,33,316,27,"categories"],[378,43,316,37],[378,44,316,38,"shares"],[378,50,316,44],[378,52,316,46],[378,59,316,53],[378,64,316,58],[379,16,317,10],[380,14,318,8],[380,19,318,13],[380,27,318,21],[381,16,319,10],[381,20,319,14],[381,21,319,15,"preferences"],[381,32,319,26],[381,33,319,27,"categories"],[381,43,319,37],[381,44,319,38,"social"],[381,50,319,44],[381,52,319,46],[381,59,319,53],[381,64,319,58],[382,16,320,10],[383,14,321,8],[383,19,321,13],[383,27,321,21],[384,16,322,10],[384,20,322,14],[384,21,322,15,"preferences"],[384,32,322,26],[384,33,322,27,"categories"],[384,43,322,37],[384,44,322,38,"system"],[384,50,322,44],[384,52,322,46],[384,59,322,53],[384,64,322,58],[385,16,323,10],[386,12,324,6],[388,12,326,6],[389,12,327,6],[389,16,327,10,"preferences"],[389,27,327,21],[389,28,327,22,"quietHours"],[389,38,327,32],[389,39,327,33,"enabled"],[389,46,327,40],[389,48,327,42],[390,14,328,8],[390,18,328,14,"now"],[390,21,328,17],[390,24,328,20],[390,28,328,24,"Date"],[390,32,328,28],[390,33,328,29],[390,34,328,30],[391,14,329,8],[391,18,329,14,"currentTime"],[391,29,329,25],[391,32,329,28,"now"],[391,35,329,31],[391,36,329,32,"getHours"],[391,44,329,40],[391,45,329,41],[391,46,329,42],[391,49,329,45],[391,51,329,47],[391,54,329,50,"now"],[391,57,329,53],[391,58,329,54,"getMinutes"],[391,68,329,64],[391,69,329,65],[391,70,329,66],[392,14,331,8],[392,18,331,8,"_preferences$quietHou"],[392,39,331,8],[392,42,331,38,"preferences"],[392,53,331,49],[392,54,331,50,"quietHours"],[392,64,331,60],[392,65,331,61,"start"],[392,70,331,66],[392,71,331,67,"split"],[392,76,331,72],[392,77,331,73],[392,80,331,76],[392,81,331,77],[392,82,331,78,"map"],[392,85,331,81],[392,86,331,82,"Number"],[392,92,331,88],[392,93,331,89],[393,16,331,89,"_preferences$quietHou2"],[393,38,331,89],[393,45,331,89,"_slicedToArray2"],[393,60,331,89],[393,61,331,89,"default"],[393,68,331,89],[393,70,331,89,"_preferences$quietHou"],[393,91,331,89],[394,16,331,15,"startHour"],[394,25,331,24],[394,28,331,24,"_preferences$quietHou2"],[394,50,331,24],[395,16,331,26,"startMin"],[395,24,331,34],[395,27,331,34,"_preferences$quietHou2"],[395,49,331,34],[396,14,332,8],[396,18,332,8,"_preferences$quietHou3"],[396,40,332,8],[396,43,332,34,"preferences"],[396,54,332,45],[396,55,332,46,"quietHours"],[396,65,332,56],[396,66,332,57,"end"],[396,69,332,60],[396,70,332,61,"split"],[396,75,332,66],[396,76,332,67],[396,79,332,70],[396,80,332,71],[396,81,332,72,"map"],[396,84,332,75],[396,85,332,76,"Number"],[396,91,332,82],[396,92,332,83],[397,16,332,83,"_preferences$quietHou4"],[397,38,332,83],[397,45,332,83,"_slicedToArray2"],[397,60,332,83],[397,61,332,83,"default"],[397,68,332,83],[397,70,332,83,"_preferences$quietHou3"],[397,92,332,83],[398,16,332,15,"endHour"],[398,23,332,22],[398,26,332,22,"_preferences$quietHou4"],[398,48,332,22],[399,16,332,24,"endMin"],[399,22,332,30],[399,25,332,30,"_preferences$quietHou4"],[399,47,332,30],[400,14,334,8],[400,18,334,14,"quietStart"],[400,28,334,24],[400,31,334,27,"startHour"],[400,40,334,36],[400,43,334,39],[400,45,334,41],[400,48,334,44,"startMin"],[400,56,334,52],[401,14,335,8],[401,18,335,14,"quietEnd"],[401,26,335,22],[401,29,335,25,"endHour"],[401,36,335,32],[401,39,335,35],[401,41,335,37],[401,44,335,40,"endMin"],[401,50,335,46],[403,14,337,8],[404,14,338,8],[404,18,338,12,"quietStart"],[404,28,338,22],[404,31,338,25,"quietEnd"],[404,39,338,33],[404,41,338,35],[405,16,339,10],[405,20,339,14,"currentTime"],[405,31,339,25],[405,35,339,29,"quietStart"],[405,45,339,39],[405,49,339,43,"currentTime"],[405,60,339,54],[405,64,339,58,"quietEnd"],[405,72,339,66],[405,74,339,68],[406,18,340,12],[406,25,340,19],[406,30,340,24],[407,16,341,10],[408,14,342,8],[408,15,342,9],[408,21,342,15],[409,16,343,10],[409,20,343,14,"currentTime"],[409,31,343,25],[409,35,343,29,"quietStart"],[409,45,343,39],[409,49,343,43,"currentTime"],[409,60,343,54],[409,64,343,58,"quietEnd"],[409,72,343,66],[409,74,343,68],[410,18,344,12],[410,25,344,19],[410,30,344,24],[411,16,345,10],[412,14,346,8],[413,12,347,6],[414,12,349,6],[414,19,349,13],[414,23,349,17],[415,10,351,4],[415,11,351,5],[415,12,351,6],[415,19,351,13,"error"],[415,24,351,18],[415,26,351,20],[416,12,352,6,"EventLogger"],[416,36,352,17],[416,37,352,18,"error"],[416,42,352,23],[416,43,352,24],[416,57,352,38],[416,59,352,40],[416,122,352,103],[416,124,352,105,"error"],[416,129,352,119],[416,130,352,120],[417,12,353,6],[417,19,353,13],[417,23,353,17],[417,24,353,18],[417,25,353,19],[418,10,354,4],[419,8,355,2],[419,9,355,3],[420,8,355,3],[420,17,302,15,"shouldShowNotification"],[420,39,302,37,"shouldShowNotification"],[420,40,302,37,"_x5"],[420,43,302,37],[421,10,302,37],[421,17,302,37,"_shouldShowNotification"],[421,40,302,37],[421,41,302,37,"apply"],[421,46,302,37],[421,53,302,37,"arguments"],[421,62,302,37],[422,8,302,37],[423,8,302,37],[423,15,302,15,"shouldShowNotification"],[423,37,302,37],[424,6,302,37],[425,6,357,2],[426,0,358,0],[427,0,359,0],[428,6,357,2],[429,4,357,2],[430,6,357,2,"key"],[430,9,357,2],[431,6,357,2,"value"],[431,11,357,2],[431,13,360,2],[431,22,360,10,"setupNotificationHandler"],[431,46,360,34,"setupNotificationHandler"],[431,47,360,34],[431,49,360,43],[432,8,360,43],[432,12,360,43,"_this"],[432,17,360,43],[433,8,361,4,"Notifications"],[433,21,361,17],[433,22,361,18,"setNotificationHandler"],[433,44,361,40],[433,45,361,41],[434,10,362,6,"handleNotification"],[434,28,362,24],[435,12,362,24],[435,16,362,24,"_handleNotification"],[435,35,362,24],[435,42,362,24,"_asyncToGenerator2"],[435,60,362,24],[435,61,362,24,"default"],[435,68,362,24],[435,70,362,26],[435,81,362,33,"notification"],[435,93,362,45],[435,95,362,50],[436,14,362,50],[436,18,362,50,"_notification$request"],[436,39,362,50],[437,14,363,8],[437,18,363,14,"type"],[437,22,363,18],[437,26,363,18,"_notification$request"],[437,47,363,18],[437,50,363,21,"notification"],[437,62,363,33],[437,63,363,34,"request"],[437,70,363,41],[437,71,363,42,"content"],[437,78,363,49],[437,79,363,50,"data"],[437,83,363,54],[437,104,363,21,"_notification$request"],[437,125,363,21],[437,126,363,56,"type"],[437,130,363,91],[438,14,364,8],[438,18,364,14,"shouldShow"],[438,28,364,24],[438,37,364,33,"_this"],[438,42,364,37],[438,43,364,38,"shouldShowNotification"],[438,65,364,60],[438,66,364,61,"type"],[438,70,364,65],[438,74,364,69],[438,82,364,77],[438,83,364,78],[439,14,366,8],[439,21,366,15],[440,16,367,10,"shouldShowAlert"],[440,31,367,25],[440,33,367,27,"shouldShow"],[440,43,367,37],[441,16,368,10,"shouldPlaySound"],[441,31,368,25],[441,33,368,27,"shouldShow"],[441,43,368,37],[442,16,369,10,"shouldSetBadge"],[442,30,369,24],[442,32,369,26,"shouldShow"],[443,14,370,8],[443,15,370,9],[444,12,371,6],[444,13,371,7],[445,12,371,7],[445,21,362,6,"handleNotification"],[445,39,362,24,"handleNotification"],[445,40,362,24,"_x6"],[445,43,362,24],[446,14,362,24],[446,21,362,24,"_handleNotification"],[446,40,362,24],[446,41,362,24,"apply"],[446,46,362,24],[446,53,362,24,"arguments"],[446,62,362,24],[447,12,362,24],[448,12,362,24],[448,19,362,6,"handleNotification"],[448,37,362,24],[449,10,362,24],[450,8,372,4],[450,9,372,5],[450,10,372,6],[451,6,373,2],[453,6,375,2],[454,0,376,0],[455,0,377,0],[456,4,375,2],[457,6,375,2,"key"],[457,9,375,2],[458,6,375,2,"value"],[458,11,375,2],[459,8,375,2],[459,12,375,2,"_setupAndroidChannels"],[459,33,375,2],[459,40,375,2,"_asyncToGenerator2"],[459,58,375,2],[459,59,375,2,"default"],[459,66,375,2],[459,68,378,2],[459,81,378,54],[460,10,379,4],[460,14,379,8,"Platform"],[460,35,379,16],[460,36,379,17,"OS"],[460,38,379,19],[460,43,379,24],[460,52,379,33],[460,54,379,35],[461,10,381,4],[461,14,381,8],[462,12,382,6],[462,16,382,12,"channels"],[462,24,382,20],[462,27,382,23,"Object"],[462,33,382,29],[462,34,382,30,"values"],[462,40,382,36],[462,41,382,37,"NotificationChannels"],[462,76,382,57],[462,77,382,58],[463,12,384,6],[463,17,384,11],[463,21,384,17,"channel"],[463,28,384,24],[463,32,384,28,"channels"],[463,40,384,36],[463,42,384,38],[464,14,385,8],[464,20,385,14,"Notifications"],[464,33,385,27],[464,34,385,28,"setNotificationChannelAsync"],[464,61,385,55],[464,62,385,56,"channel"],[464,69,385,63],[464,70,385,64,"id"],[464,72,385,66],[464,74,385,68],[465,16,386,10,"name"],[465,20,386,14],[465,22,386,16,"channel"],[465,29,386,23],[465,30,386,24,"name"],[465,34,386,28],[466,16,387,10,"description"],[466,27,387,21],[466,29,387,23,"channel"],[466,36,387,30],[466,37,387,31,"description"],[466,48,387,42],[467,16,388,10,"importance"],[467,26,388,20],[467,28,388,22,"Notifications"],[467,41,388,35],[467,42,388,36,"AndroidImportance"],[467,59,388,53],[467,60,388,54,"channel"],[467,67,388,61],[467,68,388,62,"importance"],[467,78,388,72],[467,79,388,73,"toUpperCase"],[467,90,388,84],[467,91,388,85],[467,92,388,86],[467,93,388,135],[468,16,389,10,"vibrationPattern"],[468,32,389,26],[468,34,389,28],[468,35,389,29],[468,36,389,30],[468,38,389,32],[468,41,389,35],[468,43,389,37],[468,46,389,40],[468,48,389,42],[468,51,389,45],[468,52,389,46],[469,16,390,10,"lightColor"],[469,26,390,20],[469,28,390,22],[469,37,390,31],[470,16,391,10,"sound"],[470,21,391,15],[470,23,391,17],[470,32,391,26],[471,16,392,10,"enableVibrate"],[471,29,392,23],[471,31,392,25],[472,14,393,8],[472,15,393,9],[472,16,393,10],[473,12,394,6],[474,12,396,6,"EventLogger"],[474,36,396,17],[474,37,396,18,"debug"],[474,42,396,23],[474,43,396,24],[474,57,396,38],[474,59,396,40],[474,110,396,91],[474,111,396,92],[475,10,397,4],[475,11,397,5],[475,12,397,6],[475,19,397,13,"error"],[475,24,397,18],[475,26,397,20],[476,12,398,6,"EventLogger"],[476,36,398,17],[476,37,398,18,"error"],[476,42,398,23],[476,43,398,24],[476,57,398,38],[476,59,398,40],[476,116,398,97],[476,118,398,99,"error"],[476,123,398,113],[476,124,398,114],[477,10,399,4],[478,8,400,2],[478,9,400,3],[479,8,400,3],[479,17,378,16,"setupAndroidChannels"],[479,37,378,36,"setupAndroidChannels"],[479,38,378,36],[480,10,378,36],[480,17,378,36,"_setupAndroidChannels"],[480,38,378,36],[480,39,378,36,"apply"],[480,44,378,36],[480,51,378,36,"arguments"],[480,60,378,36],[481,8,378,36],[482,8,378,36],[482,15,378,16,"setupAndroidChannels"],[482,35,378,36],[483,6,378,36],[484,6,402,2],[485,0,403,0],[486,0,404,0],[487,6,402,2],[488,4,402,2],[489,6,402,2,"key"],[489,9,402,2],[490,6,402,2,"value"],[490,11,402,2],[491,8,402,2],[491,12,402,2,"_setupNotificationCategories"],[491,40,402,2],[491,47,402,2,"_asyncToGenerator2"],[491,65,402,2],[491,66,402,2,"default"],[491,73,402,2],[491,75,405,2],[491,88,405,61],[492,10,406,4],[492,14,406,8],[493,12,407,6],[493,18,407,12,"Notifications"],[493,31,407,25],[493,32,407,26,"setNotificationCategoryAsync"],[493,60,407,54],[493,61,407,55],[493,73,407,67],[493,75,407,69],[493,76,408,8],[494,14,409,10,"identifier"],[494,24,409,20],[494,26,409,22],[494,32,409,28],[495,14,410,10,"buttonTitle"],[495,25,410,21],[495,27,410,23],[495,33,410,29],[496,14,411,10,"options"],[496,21,411,17],[496,23,411,19],[497,16,411,21,"opensAppToForeground"],[497,36,411,41],[497,38,411,43],[498,14,411,48],[499,12,412,8],[499,13,412,9],[499,15,413,8],[500,14,414,10,"identifier"],[500,24,414,20],[500,26,414,22],[500,35,414,31],[501,14,415,10,"buttonTitle"],[501,25,415,21],[501,27,415,23],[501,36,415,32],[502,14,416,10,"options"],[502,21,416,17],[502,23,416,19],[503,16,416,21,"opensAppToForeground"],[503,36,416,41],[503,38,416,43],[504,14,416,49],[505,12,417,8],[505,13,417,9],[505,14,418,7],[505,15,418,8],[506,12,420,6],[506,18,420,12,"Notifications"],[506,31,420,25],[506,32,420,26,"setNotificationCategoryAsync"],[506,60,420,54],[506,61,420,55],[506,68,420,62],[506,70,420,64],[506,71,421,8],[507,14,422,10,"identifier"],[507,24,422,20],[507,26,422,22],[507,32,422,28],[508,14,423,10,"buttonTitle"],[508,25,423,21],[508,27,423,23],[508,33,423,29],[509,14,424,10,"options"],[509,21,424,17],[509,23,424,19],[510,16,424,21,"opensAppToForeground"],[510,36,424,41],[510,38,424,43],[511,14,424,48],[512,12,425,8],[512,13,425,9],[512,15,426,8],[513,14,427,10,"identifier"],[513,24,427,20],[513,26,427,22],[513,33,427,29],[514,14,428,10,"buttonTitle"],[514,25,428,21],[514,27,428,23],[514,34,428,30],[515,14,429,10,"options"],[515,21,429,17],[515,23,429,19],[516,16,429,21,"opensAppToForeground"],[516,36,429,41],[516,38,429,43],[517,14,429,49],[518,12,430,8],[518,13,430,9],[518,14,431,7],[518,15,431,8],[519,12,433,6,"EventLogger"],[519,36,433,17],[519,37,433,18,"debug"],[519,42,433,23],[519,43,433,24],[519,57,433,38],[519,59,433,40],[519,117,433,98],[519,118,433,99],[520,10,434,4],[520,11,434,5],[520,12,434,6],[520,19,434,13,"error"],[520,24,434,18],[520,26,434,20],[521,12,435,6,"EventLogger"],[521,36,435,17],[521,37,435,18,"error"],[521,42,435,23],[521,43,435,24],[521,57,435,38],[521,59,435,40],[521,123,435,104],[521,125,435,106,"error"],[521,130,435,120],[521,131,435,121],[522,10,436,4],[523,8,437,2],[523,9,437,3],[524,8,437,3],[524,17,405,16,"setupNotificationCategories"],[524,44,405,43,"setupNotificationCategories"],[524,45,405,43],[525,10,405,43],[525,17,405,43,"_setupNotificationCategories"],[525,45,405,43],[525,46,405,43,"apply"],[525,51,405,43],[525,58,405,43,"arguments"],[525,67,405,43],[526,8,405,43],[527,8,405,43],[527,15,405,16,"setupNotificationCategories"],[527,42,405,43],[528,6,405,43],[529,6,439,2],[530,0,440,0],[531,0,441,0],[532,6,439,2],[533,4,439,2],[534,6,439,2,"key"],[534,9,439,2],[535,6,439,2,"value"],[535,11,439,2],[535,13,442,2],[535,22,442,10,"setupNotificationListeners"],[535,48,442,36,"setupNotificationListeners"],[535,49,442,36],[535,51,442,45],[536,8,443,4],[537,8,444,4],[537,12,444,8],[537,16,444,12],[537,17,444,13,"notificationListener"],[537,37,444,33],[537,39,444,35],[538,10,445,6],[538,14,445,10],[538,15,445,11,"notificationListener"],[538,35,445,31],[538,36,445,32,"remove"],[538,42,445,38],[538,43,445,39],[538,44,445,40],[539,8,446,4],[540,8,447,4],[540,12,447,8],[540,16,447,12],[540,17,447,13,"responseListener"],[540,33,447,29],[540,35,447,31],[541,10,448,6],[541,14,448,10],[541,15,448,11,"responseListener"],[541,31,448,27],[541,32,448,28,"remove"],[541,38,448,34],[541,39,448,35],[541,40,448,36],[542,8,449,4],[544,8,451,4],[545,8,452,4],[545,12,452,8],[545,13,452,9,"notificationListener"],[545,33,452,29],[545,36,452,32,"Notifications"],[545,49,452,45],[545,50,452,46,"addNotificationReceivedListener"],[545,81,452,77],[545,82,453,6],[545,86,453,10],[545,87,453,11,"handleNotificationReceived"],[545,113,453,37],[545,114,453,38,"bind"],[545,118,453,42],[545,119,453,43],[545,123,453,47],[545,124,454,4],[545,125,454,5],[547,8,456,4],[548,8,457,4],[548,12,457,8],[548,13,457,9,"responseListener"],[548,29,457,25],[548,32,457,28,"Notifications"],[548,45,457,41],[548,46,457,42,"addNotificationResponseReceivedListener"],[548,85,457,81],[548,86,458,6],[548,90,458,10],[548,91,458,11,"handleNotificationResponse"],[548,117,458,37],[548,118,458,38,"bind"],[548,122,458,42],[548,123,458,43],[548,127,458,47],[548,128,459,4],[548,129,459,5],[549,8,461,4,"EventLogger"],[549,32,461,15],[549,33,461,16,"debug"],[549,38,461,21],[549,39,461,22],[549,53,461,36],[549,55,461,38],[549,112,461,95],[549,113,461,96],[550,6,462,2],[552,6,464,2],[553,0,465,0],[554,0,466,0],[555,4,464,2],[556,6,464,2,"key"],[556,9,464,2],[557,6,464,2,"value"],[557,11,464,2],[558,8,464,2],[558,12,464,2,"_handleNotificationReceived"],[558,39,464,2],[558,46,464,2,"_asyncToGenerator2"],[558,64,464,2],[558,65,464,2,"default"],[558,72,464,2],[558,74,467,2],[558,85,467,43,"notification"],[558,97,467,83],[558,99,467,100],[559,10,468,4],[559,14,468,8],[560,12,469,6,"EventLogger"],[560,36,469,17],[560,37,469,18,"debug"],[560,42,469,23],[560,43,469,24],[560,57,469,38],[560,59,469,40],[560,105,469,86],[560,107,469,88,"notification"],[560,119,469,100],[560,120,469,101],[562,12,471,6],[563,12,472,6],[563,16,472,12,"currentBadge"],[563,28,472,24],[563,37,472,33],[563,41,472,37],[563,42,472,38,"getBadgeCount"],[563,55,472,51],[563,56,472,52],[563,57,472,53],[564,12,473,6],[564,18,473,12],[564,22,473,16],[564,23,473,17,"setBadgeCount"],[564,36,473,30],[564,37,473,31,"currentBadge"],[564,49,473,43],[564,52,473,46],[564,53,473,47],[564,54,473,48],[566,12,475,6],[567,12,476,6],[568,10,478,4],[568,11,478,5],[568,12,478,6],[568,19,478,13,"error"],[568,24,478,18],[568,26,478,20],[569,12,479,6,"EventLogger"],[569,36,479,17],[569,37,479,18,"error"],[569,42,479,23],[569,43,479,24],[569,57,479,38],[569,59,479,40],[569,120,479,101],[569,122,479,103,"error"],[569,127,479,117],[569,128,479,118],[570,10,480,4],[571,8,481,2],[571,9,481,3],[572,8,481,3],[572,17,467,16,"handleNotificationReceived"],[572,43,467,42,"handleNotificationReceived"],[572,44,467,42,"_x7"],[572,47,467,42],[573,10,467,42],[573,17,467,42,"_handleNotificationReceived"],[573,44,467,42],[573,45,467,42,"apply"],[573,50,467,42],[573,57,467,42,"arguments"],[573,66,467,42],[574,8,467,42],[575,8,467,42],[575,15,467,16,"handleNotificationReceived"],[575,41,467,42],[576,6,467,42],[577,6,483,2],[578,0,484,0],[579,0,485,0],[580,6,483,2],[581,4,483,2],[582,6,483,2,"key"],[582,9,483,2],[583,6,483,2,"value"],[583,11,483,2],[584,8,483,2],[584,12,483,2,"_handleNotificationResponse"],[584,39,483,2],[584,46,483,2,"_asyncToGenerator2"],[584,64,483,2],[584,65,483,2,"default"],[584,72,483,2],[584,74,486,2],[584,85,486,43,"response"],[584,93,486,87],[584,95,486,104],[585,10,487,4],[585,14,487,8],[586,12,488,6,"EventLogger"],[586,36,488,17],[586,37,488,18,"debug"],[586,42,488,23],[586,43,488,24],[586,57,488,38],[586,59,488,40],[586,105,488,86],[586,107,488,88,"response"],[586,115,488,96],[586,116,488,97],[588,12,490,6],[589,12,491,6],[589,18,491,12],[589,22,491,16],[589,23,491,17,"clearBadge"],[589,33,491,27],[589,34,491,28],[589,35,491,29],[591,12,493,6],[592,12,494,6],[593,10,496,4],[593,11,496,5],[593,12,496,6],[593,19,496,13,"error"],[593,24,496,18],[593,26,496,20],[594,12,497,6,"EventLogger"],[594,36,497,17],[594,37,497,18,"error"],[594,42,497,23],[594,43,497,24],[594,57,497,38],[594,59,497,40],[594,120,497,101],[594,122,497,103,"error"],[594,127,497,117],[594,128,497,118],[595,10,498,4],[596,8,499,2],[596,9,499,3],[597,8,499,3],[597,17,486,16,"handleNotificationResponse"],[597,43,486,42,"handleNotificationResponse"],[597,44,486,42,"_x8"],[597,47,486,42],[598,10,486,42],[598,17,486,42,"_handleNotificationResponse"],[598,44,486,42],[598,45,486,42,"apply"],[598,50,486,42],[598,57,486,42,"arguments"],[598,66,486,42],[599,8,486,42],[600,8,486,42],[600,15,486,16,"handleNotificationResponse"],[600,41,486,42],[601,6,486,42],[602,6,501,2],[603,0,502,0],[604,0,503,0],[605,6,501,2],[606,4,501,2],[607,6,501,2,"key"],[607,9,501,2],[608,6,501,2,"value"],[608,11,501,2],[608,13,504,2],[608,22,504,9,"cleanup"],[608,29,504,16,"cleanup"],[608,30,504,16],[608,32,504,25],[609,8,505,4],[609,12,505,8],[609,16,505,12],[609,17,505,13,"notificationListener"],[609,37,505,33],[609,39,505,35],[610,10,506,6],[610,14,506,10],[610,15,506,11,"notificationListener"],[610,35,506,31],[610,36,506,32,"remove"],[610,42,506,38],[610,43,506,39],[610,44,506,40],[611,10,507,6],[611,14,507,10],[611,15,507,11,"notificationListener"],[611,35,507,31],[611,38,507,34],[611,42,507,38],[612,8,508,4],[613,8,509,4],[613,12,509,8],[613,16,509,12],[613,17,509,13,"responseListener"],[613,33,509,29],[613,35,509,31],[614,10,510,6],[614,14,510,10],[614,15,510,11,"responseListener"],[614,31,510,27],[614,32,510,28,"remove"],[614,38,510,34],[614,39,510,35],[614,40,510,36],[615,10,511,6],[615,14,511,10],[615,15,511,11,"responseListener"],[615,31,511,27],[615,34,511,30],[615,38,511,34],[616,8,512,4],[617,8,514,4],[617,12,514,8],[617,13,514,9,"isInitialized"],[617,26,514,22],[617,29,514,25],[617,34,514,30],[618,8,515,4,"EventLogger"],[618,32,515,15],[618,33,515,16,"debug"],[618,38,515,21],[618,39,515,22],[618,53,515,36],[618,55,515,38],[618,89,515,72],[618,90,515,73],[619,6,516,2],[621,6,518,2],[622,0,519,0],[623,0,520,0],[624,4,518,2],[625,6,518,2,"key"],[625,9,518,2],[626,6,518,2,"value"],[626,11,518,2],[627,8,518,2],[627,12,518,2,"_getStoredPushToken"],[627,31,518,2],[627,38,518,2,"_asyncToGenerator2"],[627,56,518,2],[627,57,518,2,"default"],[627,64,518,2],[627,66,521,2],[627,79,521,60],[628,10,522,4],[628,14,522,8],[629,12,523,6],[629,25,523,19,"AsyncStorage"],[629,46,523,31],[629,47,523,32,"getItem"],[629,54,523,39],[629,55,523,40,"NotificationService"],[629,74,523,59],[629,75,523,60,"STORAGE_KEYS"],[629,87,523,72],[629,88,523,73,"PUSH_TOKEN"],[629,98,523,83],[629,99,523,84],[630,10,524,4],[630,11,524,5],[630,12,524,6],[630,19,524,13,"error"],[630,24,524,18],[630,26,524,20],[631,12,525,6,"EventLogger"],[631,36,525,17],[631,37,525,18,"error"],[631,42,525,23],[631,43,525,24],[631,57,525,38],[631,59,525,40],[631,115,525,96],[631,117,525,98,"error"],[631,122,525,112],[631,123,525,113],[632,12,526,6],[632,19,526,13],[632,23,526,17],[633,10,527,4],[634,8,528,2],[634,9,528,3],[635,8,528,3],[635,17,521,15,"getStoredPushToken"],[635,35,521,33,"getStoredPushToken"],[635,36,521,33],[636,10,521,33],[636,17,521,33,"_getStoredPushToken"],[636,36,521,33],[636,37,521,33,"apply"],[636,42,521,33],[636,49,521,33,"arguments"],[636,58,521,33],[637,8,521,33],[638,8,521,33],[638,15,521,15,"getStoredPushToken"],[638,33,521,33],[639,6,521,33],[640,6,530,2],[641,0,531,0],[642,0,532,0],[643,6,530,2],[644,4,530,2],[645,6,530,2,"key"],[645,9,530,2],[646,6,530,2,"value"],[646,11,530,2],[647,8,530,2],[647,12,530,2,"_sendTestNotification"],[647,33,530,2],[647,40,530,2,"_asyncToGenerator2"],[647,58,530,2],[647,59,530,2,"default"],[647,66,530,2],[647,68,533,2],[647,81,533,53],[648,10,534,4],[648,16,534,10],[648,20,534,14],[648,21,534,15,"scheduleLocalNotification"],[648,46,534,40],[648,47,534,41],[649,12,535,6,"content"],[649,19,535,13],[649,21,535,15],[650,14,536,8,"title"],[650,19,536,13],[650,21,536,15],[650,40,536,34],[651,14,537,8,"body"],[651,18,537,12],[651,20,537,14],[651,61,537,55],[652,14,538,8,"data"],[652,18,538,12],[652,20,538,14],[653,16,538,16,"type"],[653,20,538,20],[653,22,538,22],[654,14,538,31],[654,15,538,32],[655,14,539,8,"categoryIdentifier"],[655,32,539,26],[655,34,539,28],[656,12,540,6],[656,13,540,7],[657,12,541,6,"trigger"],[657,19,541,13],[657,21,541,15],[658,14,542,8,"type"],[658,18,542,12],[658,20,542,14],[658,26,542,20],[659,14,543,8,"date"],[659,18,543,12],[659,20,543,14],[659,24,543,18,"Date"],[659,28,543,22],[659,29,543,23,"Date"],[659,33,543,27],[659,34,543,28,"now"],[659,37,543,31],[659,38,543,32],[659,39,543,33],[659,42,543,36],[659,46,543,40],[659,47,543,41],[659,48,543,43],[660,12,544,6],[661,10,545,4],[661,11,545,5],[661,12,545,6],[662,8,546,2],[662,9,546,3],[663,8,546,3],[663,17,533,15,"sendTestNotification"],[663,37,533,35,"sendTestNotification"],[663,38,533,35],[664,10,533,35],[664,17,533,35,"_sendTestNotification"],[664,38,533,35],[664,39,533,35,"apply"],[664,44,533,35],[664,51,533,35,"arguments"],[664,60,533,35],[665,8,533,35],[666,8,533,35],[666,15,533,15,"sendTestNotification"],[666,35,533,35],[667,6,533,35],[668,4,533,35],[669,6,533,35,"key"],[669,9,533,35],[670,6,533,35,"value"],[670,11,533,35],[670,13,41,2],[670,22,41,16,"getInstance"],[670,33,41,27,"getInstance"],[670,34,41,27],[670,36,41,51],[671,8,42,4],[671,12,42,8],[671,13,42,9,"NotificationService"],[671,32,42,28],[671,33,42,29,"instance"],[671,41,42,37],[671,43,42,39],[672,10,43,6,"NotificationService"],[672,29,43,25],[672,30,43,26,"instance"],[672,38,43,34],[672,41,43,37],[672,45,43,41,"NotificationService"],[672,64,43,60],[672,65,43,61],[672,66,43,62],[673,8,44,4],[674,8,45,4],[674,15,45,11,"NotificationService"],[674,34,45,30],[674,35,45,31,"instance"],[674,43,45,39],[675,6,46,2],[676,4,46,3],[677,2,46,3],[678,2,29,2],[679,2,23,6,"NotificationService"],[679,21,23,25],[679,22,30,26,"STORAGE_KEYS"],[679,34,30,38],[679,37,30,41],[680,4,31,4,"PREFERENCES"],[680,15,31,15],[680,17,31,17],[680,51,31,51],[681,4,32,4,"PUSH_TOKEN"],[681,14,32,14],[681,16,32,16],[681,36,32,36],[682,4,33,4,"LAST_TOKEN_SYNC"],[682,19,33,19],[682,21,33,21],[682,41,33,41],[683,4,34,4,"BADGE_COUNT"],[683,15,34,15],[683,17,34,17],[684,2,35,2],[684,3,35,3],[685,2,35,3],[685,6,35,3,"_default"],[685,14,35,3],[685,17,35,3,"exports"],[685,24,35,3],[685,25,35,3,"default"],[685,32,35,3],[685,35,549,15,"NotificationService"],[685,54,549,34],[685,55,549,35,"getInstance"],[685,66,549,46],[685,67,549,47],[685,68,549,48],[686,0,549,48],[686,3]],"functionMap":{"names":["<global>","NotificationService","constructor","getInstance","initialize","requestPermissions","getPushToken","scheduleLocalNotification","cancelNotification","cancelAllNotifications","setBadgeCount","getBadgeCount","clearBadge","getPreferences","savePreferences","shouldShowNotification","setupNotificationHandler","Notifications.setNotificationHandler$argument_0.handleNotification","setupAndroidChannels","setupNotificationCategories","setupNotificationListeners","handleNotificationReceived","handleNotificationResponse","cleanup","getStoredPushToken","sendTestNotification"],"mappings":"AAA;ACsB;ECc;GDE;EEE;GFK;EGK;GHyB;EIK;GJoD;EKK;GL6B;EMK;GNqC;EOK;GPO;EQK;GRO;ESK;GTQ;EUK;GVQ;EWK;GXE;EYK;GZW;EaK;GbU;EcK;GdqD;EeK;0BCE;ODS;GfE;EiBK;GjBsB;EkBK;GlBgC;EmBK;GnBoB;EoBK;GpBc;EqBK;GrBa;EsBK;GtBY;EuBK;GvBO;EwBK;GxBa;CDC"}},"type":"js/module"}]}