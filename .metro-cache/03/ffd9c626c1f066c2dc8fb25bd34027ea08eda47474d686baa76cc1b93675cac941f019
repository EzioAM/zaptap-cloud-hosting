{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":69,"index":69}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"expo-file-system","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":70},"end":{"line":2,"column":47,"index":117}}],"key":"6GyvFG3BsQPSqqu9QRKJ8hfZxPw=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":118},"end":{"line":3,"column":54,"index":172}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[5], \"@react-native-async-storage/async-storage\"));\n  var FileSystem = _interopRequireWildcard(require(_dependencyMap[6], \"expo-file-system\"));\n  var _EventLogger = require(_dependencyMap[7], \"../../utils/EventLogger\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  var ChangeHistoryService = /*#__PURE__*/function () {\n    function ChangeHistoryService() {\n      (0, _classCallCheck2.default)(this, ChangeHistoryService);\n      this.STORAGE_KEY = '@change_history';\n      this.MAX_HISTORY_ENTRIES = 50;\n      this.BACKUP_DIR = `${FileSystem.documentDirectory}change_backups/`;\n      this.activeOperations = new Set();\n    }\n    return (0, _createClass2.default)(ChangeHistoryService, [{\n      key: \"initializeBackupDirectory\",\n      value: function () {\n        var _initializeBackupDirectory = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var dirInfo = yield FileSystem.getInfoAsync(this.BACKUP_DIR);\n            if (!dirInfo.exists) {\n              yield FileSystem.makeDirectoryAsync(this.BACKUP_DIR, {\n                intermediates: true\n              });\n            }\n          } catch (error) {\n            _EventLogger.EventLogger.error('ChangeHistory', 'Failed to create backup directory:', error);\n          }\n        });\n        function initializeBackupDirectory() {\n          return _initializeBackupDirectory.apply(this, arguments);\n        }\n        return initializeBackupDirectory;\n      }()\n    }, {\n      key: \"recordChange\",\n      value: function () {\n        var _recordChange = (0, _asyncToGenerator2.default)(function* (entry) {\n          var _this = this;\n          try {\n            var history = yield this.getHistory();\n            var entryId = this.generateId();\n\n            // Process and backup file changes\n            var processedChanges = yield Promise.all(entry.changes.map(/*#__PURE__*/function () {\n              var _ref = (0, _asyncToGenerator2.default)(function* (change) {\n                if (change.type === 'file_modified' || change.type === 'file_deleted') {\n                  // Create backup of the file\n                  var backupPath = yield _this.createFileBackup(change.filepath, entryId);\n                  return Object.assign({}, change, {\n                    backupPath: backupPath\n                  });\n                }\n                return change;\n              });\n              return function (_x2) {\n                return _ref.apply(this, arguments);\n              };\n            }()));\n            var newEntry = Object.assign({}, entry, {\n              changes: processedChanges,\n              id: entryId,\n              timestamp: new Date().toISOString(),\n              status: 'active'\n            });\n\n            // Add to beginning of array (newest first)\n            history.unshift(newEntry);\n\n            // Keep only the latest entries\n            if (history.length > this.MAX_HISTORY_ENTRIES) {\n              // Clean up old backups\n              var removedEntries = history.splice(this.MAX_HISTORY_ENTRIES);\n              yield this.cleanupBackups(removedEntries);\n            }\n            yield _asyncStorage.default.setItem(this.STORAGE_KEY, JSON.stringify(history));\n            return newEntry.id;\n          } catch (error) {\n            _EventLogger.EventLogger.error('ChangeHistory', 'Failed to record change:', error);\n            throw error;\n          }\n        });\n        function recordChange(_x) {\n          return _recordChange.apply(this, arguments);\n        }\n        return recordChange;\n      }()\n    }, {\n      key: \"createFileBackup\",\n      value: function () {\n        var _createFileBackup = (0, _asyncToGenerator2.default)(function* (filepath, entryId) {\n          try {\n            // For React Native, we'll store the content in AsyncStorage with a special key\n            var backupKey = `@backup_${entryId}_${filepath.replace(/[^a-zA-Z0-9]/g, '_')}`;\n\n            // In a real implementation, you'd read the actual file content\n            // For now, we'll simulate with a placeholder\n            var content = yield this.readFileContent(filepath);\n            if (content) {\n              yield _asyncStorage.default.setItem(backupKey, content);\n              return backupKey;\n            }\n          } catch (error) {\n            _EventLogger.EventLogger.error('ChangeHistory', 'Failed to create backup:', error);\n          }\n          return undefined;\n        });\n        function createFileBackup(_x3, _x4) {\n          return _createFileBackup.apply(this, arguments);\n        }\n        return createFileBackup;\n      }()\n    }, {\n      key: \"readFileContent\",\n      value: function () {\n        var _readFileContent = (0, _asyncToGenerator2.default)(function* (filepath) {\n          // This is a placeholder - in a real implementation, you'd read the actual file\n          // For React Native, this would require platform-specific code or a file system library\n          _EventLogger.EventLogger.debug('ChangeHistory', 'Reading file content for:', filepath);\n          return null;\n        });\n        function readFileContent(_x5) {\n          return _readFileContent.apply(this, arguments);\n        }\n        return readFileContent;\n      }()\n    }, {\n      key: \"cleanupBackups\",\n      value: function () {\n        var _cleanupBackups = (0, _asyncToGenerator2.default)(function* (entries) {\n          for (var entry of entries) {\n            for (var change of entry.changes) {\n              if (change.backupPath) {\n                try {\n                  yield _asyncStorage.default.removeItem(change.backupPath);\n                } catch (error) {\n                  _EventLogger.EventLogger.error('ChangeHistory', 'Failed to cleanup backup:', error);\n                }\n              }\n            }\n          }\n        });\n        function cleanupBackups(_x6) {\n          return _cleanupBackups.apply(this, arguments);\n        }\n        return cleanupBackups;\n      }()\n    }, {\n      key: \"getHistory\",\n      value: function () {\n        var _getHistory = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var data = yield _asyncStorage.default.getItem(this.STORAGE_KEY);\n            return data ? JSON.parse(data) : [];\n          } catch (error) {\n            _EventLogger.EventLogger.error('ChangeHistory', 'Failed to get history:', error);\n            return [];\n          }\n        });\n        function getHistory() {\n          return _getHistory.apply(this, arguments);\n        }\n        return getHistory;\n      }()\n    }, {\n      key: \"getActiveChanges\",\n      value: function () {\n        var _getActiveChanges = (0, _asyncToGenerator2.default)(function* () {\n          var history = yield this.getHistory();\n          return history.filter(function (entry) {\n            return entry.status === 'active';\n          });\n        });\n        function getActiveChanges() {\n          return _getActiveChanges.apply(this, arguments);\n        }\n        return getActiveChanges;\n      }()\n    }, {\n      key: \"getChangeById\",\n      value: function () {\n        var _getChangeById = (0, _asyncToGenerator2.default)(function* (id) {\n          var history = yield this.getHistory();\n          return history.find(function (entry) {\n            return entry.id === id;\n          }) || null;\n        });\n        function getChangeById(_x7) {\n          return _getChangeById.apply(this, arguments);\n        }\n        return getChangeById;\n      }()\n    }, {\n      key: \"revertChange\",\n      value: function () {\n        var _revertChange = (0, _asyncToGenerator2.default)(function* (id) {\n          try {\n            // Prevent concurrent operations\n            if (this.activeOperations.has(id)) {\n              throw new Error('Revert operation already in progress');\n            }\n            this.activeOperations.add(id);\n            var history = yield this.getHistory();\n            var entryIndex = history.findIndex(function (entry) {\n              return entry.id === id;\n            });\n            if (entryIndex === -1) {\n              throw new Error('Change entry not found');\n            }\n            var entry = history[entryIndex];\n            if (entry.status === 'reverted') {\n              throw new Error('Change already reverted');\n            }\n\n            // Actually revert the changes\n            var revertResults = yield this.performRevert(entry);\n\n            // Update entry status\n            history[entryIndex] = Object.assign({}, entry, {\n              status: 'reverted',\n              revertedAt: new Date().toISOString()\n            });\n            yield _asyncStorage.default.setItem(this.STORAGE_KEY, JSON.stringify(history));\n\n            // Generate detailed report\n            this.generateRevertReport(entry, revertResults);\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('ChangeHistory', 'Failed to revert change:', error);\n            return false;\n          } finally {\n            this.activeOperations.delete(id);\n          }\n        });\n        function revertChange(_x8) {\n          return _revertChange.apply(this, arguments);\n        }\n        return revertChange;\n      }()\n    }, {\n      key: \"performRevert\",\n      value: function () {\n        var _performRevert = (0, _asyncToGenerator2.default)(function* (entry) {\n          var results = new Map();\n\n          // Process changes in reverse order\n          for (var change of entry.changes.reverse()) {\n            try {\n              switch (change.type) {\n                case 'file_created':\n                  // In a real implementation, delete the file\n                  _EventLogger.EventLogger.debug('ChangeHistory', 'Would delete file: ${change.filepath}');\n                  results.set(change.filepath, true);\n                  break;\n                case 'file_modified':\n                  if (change.backupPath) {\n                    // Restore from backup\n                    var backupContent = yield _asyncStorage.default.getItem(change.backupPath);\n                    if (backupContent) {\n                      _EventLogger.EventLogger.debug('ChangeHistory', 'Would restore file: ${change.filepath} from backup');\n                      results.set(change.filepath, true);\n                    } else {\n                      results.set(change.filepath, false);\n                    }\n                  } else if (change.previousContent) {\n                    _EventLogger.EventLogger.debug('ChangeHistory', 'Would restore file: ${change.filepath} with previous content');\n                    results.set(change.filepath, true);\n                  } else {\n                    results.set(change.filepath, false);\n                  }\n                  break;\n                case 'file_deleted':\n                  if (change.backupPath || change.previousContent) {\n                    _EventLogger.EventLogger.debug('ChangeHistory', 'Would recreate file: ${change.filepath}');\n                    results.set(change.filepath, true);\n                  } else {\n                    results.set(change.filepath, false);\n                  }\n                  break;\n                case 'dependency_added':\n                  _EventLogger.EventLogger.debug('ChangeHistory', 'Would remove dependency: ${change.description}');\n                  results.set(change.description, true);\n                  break;\n                case 'config_changed':\n                  _EventLogger.EventLogger.debug('ChangeHistory', 'Would restore config: ${change.description}');\n                  results.set(change.description, true);\n                  break;\n              }\n            } catch (error) {\n              _EventLogger.EventLogger.error('ChangeHistory', 'Failed to revert ${change.type} for ${change.filepath}:', error);\n              results.set(change.filepath, false);\n            }\n          }\n          return results;\n        });\n        function performRevert(_x9) {\n          return _performRevert.apply(this, arguments);\n        }\n        return performRevert;\n      }()\n    }, {\n      key: \"generateRevertReport\",\n      value: function generateRevertReport(entry, results) {\n        _EventLogger.EventLogger.debug('ChangeHistory', '\\n=== REVERT REPORT ===');\n        _EventLogger.EventLogger.debug('ChangeHistory', 'Feature: ${entry.feature}');\n        _EventLogger.EventLogger.debug('ChangeHistory', 'Description: ${entry.description}');\n        _EventLogger.EventLogger.debug('ChangeHistory', 'Total Changes: ${entry.changes.length}');\n        var successCount = 0;\n        var failureCount = 0;\n        results.forEach(function (success, item) {\n          if (success) {\n            successCount++;\n            _EventLogger.EventLogger.debug('ChangeHistory', '✅ ${item}');\n          } else {\n            failureCount++;\n            _EventLogger.EventLogger.debug('ChangeHistory', '❌ ${item}');\n          }\n        });\n        _EventLogger.EventLogger.debug('ChangeHistory', '\\nSummary: ${successCount} successful, ${failureCount} failed');\n        _EventLogger.EventLogger.debug('ChangeHistory', '=== END REVERT REPORT ===\\n');\n      }\n\n      // Create a snapshot of current state before making changes\n    }, {\n      key: \"createSnapshot\",\n      value: function () {\n        var _createSnapshot = (0, _asyncToGenerator2.default)(function* (description) {\n          var snapshotId = this.generateId();\n          var snapshot = {\n            id: snapshotId,\n            description: description,\n            timestamp: new Date().toISOString(),\n            files: []\n          };\n\n          // In a real implementation, this would capture the current state of relevant files\n          yield _asyncStorage.default.setItem(`@snapshot_${snapshotId}`, JSON.stringify(snapshot));\n          return snapshotId;\n        });\n        function createSnapshot(_x0) {\n          return _createSnapshot.apply(this, arguments);\n        }\n        return createSnapshot;\n      }() // Restore from a snapshot\n    }, {\n      key: \"restoreSnapshot\",\n      value: function () {\n        var _restoreSnapshot = (0, _asyncToGenerator2.default)(function* (snapshotId) {\n          try {\n            var snapshotData = yield _asyncStorage.default.getItem(`@snapshot_${snapshotId}`);\n            if (!snapshotData) {\n              throw new Error('Snapshot not found');\n            }\n            var snapshot = JSON.parse(snapshotData);\n            _EventLogger.EventLogger.debug('ChangeHistory', 'Restoring snapshot: ${snapshot.description}');\n\n            // In a real implementation, restore the files\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('ChangeHistory', 'Failed to restore snapshot:', error);\n            return false;\n          }\n        });\n        function restoreSnapshot(_x1) {\n          return _restoreSnapshot.apply(this, arguments);\n        }\n        return restoreSnapshot;\n      }()\n    }, {\n      key: \"clearHistory\",\n      value: function () {\n        var _clearHistory = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            yield _asyncStorage.default.removeItem(this.STORAGE_KEY);\n          } catch (error) {\n            _EventLogger.EventLogger.error('ChangeHistory', 'Failed to clear history:', error);\n          }\n        });\n        function clearHistory() {\n          return _clearHistory.apply(this, arguments);\n        }\n        return clearHistory;\n      }()\n    }, {\n      key: \"exportHistory\",\n      value: function () {\n        var _exportHistory = (0, _asyncToGenerator2.default)(function* () {\n          var history = yield this.getHistory();\n          return JSON.stringify(history, null, 2);\n        });\n        function exportHistory() {\n          return _exportHistory.apply(this, arguments);\n        }\n        return exportHistory;\n      }()\n    }, {\n      key: \"importHistory\",\n      value: function () {\n        var _importHistory = (0, _asyncToGenerator2.default)(function* (data) {\n          try {\n            var history = JSON.parse(data);\n            if (!Array.isArray(history)) {\n              throw new Error('Invalid history format');\n            }\n            yield _asyncStorage.default.setItem(this.STORAGE_KEY, JSON.stringify(history));\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('ChangeHistory', 'Failed to import history:', error);\n            return false;\n          }\n        });\n        function importHistory(_x10) {\n          return _importHistory.apply(this, arguments);\n        }\n        return importHistory;\n      }()\n    }, {\n      key: \"generateId\",\n      value: function generateId() {\n        return `change_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      }\n\n      // Helper method to create a code change record\n    }, {\n      key: \"createCodeChange\",\n      value: function createCodeChange(params) {\n        return Object.assign({\n          id: this.generateId(),\n          timestamp: new Date().toISOString()\n        }, params);\n      }\n\n      // Get statistics about changes\n    }, {\n      key: \"getStatistics\",\n      value: function () {\n        var _getStatistics = (0, _asyncToGenerator2.default)(function* () {\n          var _history, _history$;\n          var history = yield this.getHistory();\n          var active = history.filter(function (e) {\n            return e.status === 'active';\n          }).length;\n          var reverted = history.filter(function (e) {\n            return e.status === 'reverted';\n          }).length;\n          var changesByType = {};\n          var changesBySource = {};\n          var fileChanges = {};\n          var totalFileSize = 0;\n          history.forEach(function (entry) {\n            entry.changes.forEach(function (change) {\n              var _change$metadata, _change$metadata2;\n              changesByType[change.type] = (changesByType[change.type] || 0) + 1;\n              if ((_change$metadata = change.metadata) != null && _change$metadata.source) {\n                changesBySource[change.metadata.source] = (changesBySource[change.metadata.source] || 0) + 1;\n              }\n\n              // Track file-specific changes\n              fileChanges[change.filepath] = (fileChanges[change.filepath] || 0) + 1;\n              if ((_change$metadata2 = change.metadata) != null && _change$metadata2.fileSize) {\n                totalFileSize += change.metadata.fileSize;\n              }\n            });\n          });\n          return {\n            total: history.length,\n            active: active,\n            reverted: reverted,\n            changesByType: changesByType,\n            changesBySource: changesBySource,\n            fileChanges: fileChanges,\n            totalFileSize: totalFileSize,\n            mostChangedFiles: Object.entries(fileChanges).sort(function (_ref2, _ref3) {\n              var _ref4 = (0, _slicedToArray2.default)(_ref2, 2),\n                a = _ref4[1];\n              var _ref5 = (0, _slicedToArray2.default)(_ref3, 2),\n                b = _ref5[1];\n              return b - a;\n            }).slice(0, 5).map(function (_ref6) {\n              var _ref7 = (0, _slicedToArray2.default)(_ref6, 2),\n                file = _ref7[0],\n                count = _ref7[1];\n              return {\n                file: file,\n                count: count\n              };\n            }),\n            oldestChange: (_history = history[history.length - 1]) == null ? void 0 : _history.timestamp,\n            newestChange: (_history$ = history[0]) == null ? void 0 : _history$.timestamp\n          };\n        });\n        function getStatistics() {\n          return _getStatistics.apply(this, arguments);\n        }\n        return getStatistics;\n      }() // Track a file operation (to be called by other services)\n    }, {\n      key: \"trackFileOperation\",\n      value: function () {\n        var _trackFileOperation = (0, _asyncToGenerator2.default)(function* (operation) {\n          var _operation$content, _operation$content2;\n          var change = this.createCodeChange({\n            type: operation.type === 'create' ? 'file_created' : operation.type === 'modify' ? 'file_modified' : 'file_deleted',\n            filepath: operation.filepath,\n            description: operation.description,\n            newContent: operation.content,\n            metadata: {\n              feature: operation.feature,\n              source: operation.source || 'manual',\n              fileSize: (_operation$content = operation.content) == null ? void 0 : _operation$content.length,\n              lineCount: (_operation$content2 = operation.content) == null ? void 0 : _operation$content2.split('\\n').length\n            }\n          });\n          yield this.recordChange({\n            feature: operation.feature,\n            description: operation.description,\n            changes: [change]\n          });\n        });\n        function trackFileOperation(_x11) {\n          return _trackFileOperation.apply(this, arguments);\n        }\n        return trackFileOperation;\n      }()\n    }], [{\n      key: \"getInstance\",\n      value: function getInstance() {\n        if (!ChangeHistoryService.instance) {\n          ChangeHistoryService.instance = new ChangeHistoryService();\n          ChangeHistoryService.instance.initializeBackupDirectory();\n        }\n        return ChangeHistoryService.instance;\n      }\n    }]);\n  }();\n  var _default = exports.default = ChangeHistoryService;\n});","lineCount":545,"map":[[11,2,1,0],[11,6,1,0,"_asyncStorage"],[11,19,1,0],[11,22,1,0,"_interopRequireDefault"],[11,44,1,0],[11,45,1,0,"require"],[11,52,1,0],[11,53,1,0,"_dependencyMap"],[11,67,1,0],[12,2,2,0],[12,6,2,0,"FileSystem"],[12,16,2,0],[12,19,2,0,"_interopRequireWildcard"],[12,42,2,0],[12,43,2,0,"require"],[12,50,2,0],[12,51,2,0,"_dependencyMap"],[12,65,2,0],[13,2,3,0],[13,6,3,0,"_EventLogger"],[13,18,3,0],[13,21,3,0,"require"],[13,28,3,0],[13,29,3,0,"_dependencyMap"],[13,43,3,0],[14,2,3,54],[14,11,3,54,"_interopRequireWildcard"],[14,35,3,54,"e"],[14,36,3,54],[14,38,3,54,"t"],[14,39,3,54],[14,68,3,54,"WeakMap"],[14,75,3,54],[14,81,3,54,"r"],[14,82,3,54],[14,89,3,54,"WeakMap"],[14,96,3,54],[14,100,3,54,"n"],[14,101,3,54],[14,108,3,54,"WeakMap"],[14,115,3,54],[14,127,3,54,"_interopRequireWildcard"],[14,150,3,54],[14,162,3,54,"_interopRequireWildcard"],[14,186,3,54,"e"],[14,187,3,54],[14,189,3,54,"t"],[14,190,3,54],[14,199,3,54,"t"],[14,200,3,54],[14,204,3,54,"e"],[14,205,3,54],[14,209,3,54,"e"],[14,210,3,54],[14,211,3,54,"__esModule"],[14,221,3,54],[14,230,3,54,"e"],[14,231,3,54],[14,237,3,54,"o"],[14,238,3,54],[14,240,3,54,"i"],[14,241,3,54],[14,243,3,54,"f"],[14,244,3,54],[14,249,3,54,"__proto__"],[14,258,3,54],[14,266,3,54,"default"],[14,273,3,54],[14,275,3,54,"e"],[14,276,3,54],[14,293,3,54,"e"],[14,294,3,54],[14,317,3,54,"e"],[14,318,3,54],[14,343,3,54,"e"],[14,344,3,54],[14,353,3,54,"f"],[14,354,3,54],[14,360,3,54,"o"],[14,361,3,54],[14,364,3,54,"t"],[14,365,3,54],[14,368,3,54,"n"],[14,369,3,54],[14,372,3,54,"r"],[14,373,3,54],[14,381,3,54,"o"],[14,382,3,54],[14,383,3,54,"has"],[14,386,3,54],[14,387,3,54,"e"],[14,388,3,54],[14,398,3,54,"o"],[14,399,3,54],[14,400,3,54,"get"],[14,403,3,54],[14,404,3,54,"e"],[14,405,3,54],[14,408,3,54,"o"],[14,409,3,54],[14,410,3,54,"set"],[14,413,3,54],[14,414,3,54,"e"],[14,415,3,54],[14,417,3,54,"f"],[14,418,3,54],[14,432,3,54,"_t"],[14,434,3,54],[14,438,3,54,"e"],[14,439,3,54],[14,455,3,54,"_t"],[14,457,3,54],[14,464,3,54,"hasOwnProperty"],[14,478,3,54],[14,479,3,54,"call"],[14,483,3,54],[14,484,3,54,"e"],[14,485,3,54],[14,487,3,54,"_t"],[14,489,3,54],[14,496,3,54,"i"],[14,497,3,54],[14,501,3,54,"o"],[14,502,3,54],[14,505,3,54,"Object"],[14,511,3,54],[14,512,3,54,"defineProperty"],[14,526,3,54],[14,531,3,54,"Object"],[14,537,3,54],[14,538,3,54,"getOwnPropertyDescriptor"],[14,562,3,54],[14,563,3,54,"e"],[14,564,3,54],[14,566,3,54,"_t"],[14,568,3,54],[14,575,3,54,"i"],[14,576,3,54],[14,577,3,54,"get"],[14,580,3,54],[14,584,3,54,"i"],[14,585,3,54],[14,586,3,54,"set"],[14,589,3,54],[14,593,3,54,"o"],[14,594,3,54],[14,595,3,54,"f"],[14,596,3,54],[14,598,3,54,"_t"],[14,600,3,54],[14,602,3,54,"i"],[14,603,3,54],[14,607,3,54,"f"],[14,608,3,54],[14,609,3,54,"_t"],[14,611,3,54],[14,615,3,54,"e"],[14,616,3,54],[14,617,3,54,"_t"],[14,619,3,54],[14,630,3,54,"f"],[14,631,3,54],[14,636,3,54,"e"],[14,637,3,54],[14,639,3,54,"t"],[14,640,3,54],[15,2,3,54],[15,6,34,6,"ChangeHistoryService"],[15,26,34,26],[16,4,34,26],[16,13,34,26,"ChangeHistoryService"],[16,34,34,26],[17,6,34,26],[17,10,34,26,"_classCallCheck2"],[17,26,34,26],[17,27,34,26,"default"],[17,34,34,26],[17,42,34,26,"ChangeHistoryService"],[17,62,34,26],[18,6,34,26],[18,11,36,19,"STORAGE_KEY"],[18,22,36,30],[18,25,36,33],[18,42,36,50],[19,6,36,50],[19,11,37,19,"MAX_HISTORY_ENTRIES"],[19,30,37,38],[19,33,37,41],[19,35,37,43],[20,6,37,43],[20,11,38,19,"BACKUP_DIR"],[20,21,38,29],[20,24,38,32],[20,27,38,35,"FileSystem"],[20,37,38,45],[20,38,38,46,"documentDirectory"],[20,55,38,63],[20,72,38,80],[21,6,38,80],[21,11,39,10,"activeOperations"],[21,27,39,26],[21,30,39,42],[21,34,39,46,"Set"],[21,37,39,49],[21,38,39,50],[21,39,39,51],[22,4,39,51],[23,4,39,51],[23,15,39,51,"_createClass2"],[23,28,39,51],[23,29,39,51,"default"],[23,36,39,51],[23,38,39,51,"ChangeHistoryService"],[23,58,39,51],[24,6,39,51,"key"],[24,9,39,51],[25,6,39,51,"value"],[25,11,39,51],[26,8,39,51],[26,12,39,51,"_initializeBackupDirectory"],[26,38,39,51],[26,45,39,51,"_asyncToGenerator2"],[26,63,39,51],[26,64,39,51,"default"],[26,71,39,51],[26,73,49,2],[26,86,49,59],[27,10,50,4],[27,14,50,8],[28,12,51,6],[28,16,51,12,"dirInfo"],[28,23,51,19],[28,32,51,28,"FileSystem"],[28,42,51,38],[28,43,51,39,"getInfoAsync"],[28,55,51,51],[28,56,51,52],[28,60,51,56],[28,61,51,57,"BACKUP_DIR"],[28,71,51,67],[28,72,51,68],[29,12,52,6],[29,16,52,10],[29,17,52,11,"dirInfo"],[29,24,52,18],[29,25,52,19,"exists"],[29,31,52,25],[29,33,52,27],[30,14,53,8],[30,20,53,14,"FileSystem"],[30,30,53,24],[30,31,53,25,"makeDirectoryAsync"],[30,49,53,43],[30,50,53,44],[30,54,53,48],[30,55,53,49,"BACKUP_DIR"],[30,65,53,59],[30,67,53,61],[31,16,53,63,"intermediates"],[31,29,53,76],[31,31,53,78],[32,14,53,83],[32,15,53,84],[32,16,53,85],[33,12,54,6],[34,10,55,4],[34,11,55,5],[34,12,55,6],[34,19,55,13,"error"],[34,24,55,18],[34,26,55,20],[35,12,56,6,"EventLogger"],[35,36,56,17],[35,37,56,18,"error"],[35,42,56,23],[35,43,56,24],[35,58,56,39],[35,60,56,41],[35,96,56,77],[35,98,56,79,"error"],[35,103,56,93],[35,104,56,94],[36,10,57,4],[37,8,58,2],[37,9,58,3],[38,8,58,3],[38,17,49,16,"initializeBackupDirectory"],[38,42,49,41,"initializeBackupDirectory"],[38,43,49,41],[39,10,49,41],[39,17,49,41,"_initializeBackupDirectory"],[39,43,49,41],[39,44,49,41,"apply"],[39,49,49,41],[39,56,49,41,"arguments"],[39,65,49,41],[40,8,49,41],[41,8,49,41],[41,15,49,16,"initializeBackupDirectory"],[41,40,49,41],[42,6,49,41],[43,4,49,41],[44,6,49,41,"key"],[44,9,49,41],[45,6,49,41,"value"],[45,11,49,41],[46,8,49,41],[46,12,49,41,"_recordChange"],[46,25,49,41],[46,32,49,41,"_asyncToGenerator2"],[46,50,49,41],[46,51,49,41,"default"],[46,58,49,41],[46,60,60,2],[46,71,60,21,"entry"],[46,76,60,83],[46,78,60,102],[47,10,60,102],[47,14,60,102,"_this"],[47,19,60,102],[48,10,61,4],[48,14,61,8],[49,12,62,6],[49,16,62,12,"history"],[49,23,62,19],[49,32,62,28],[49,36,62,32],[49,37,62,33,"getHistory"],[49,47,62,43],[49,48,62,44],[49,49,62,45],[50,12,63,6],[50,16,63,12,"entryId"],[50,23,63,19],[50,26,63,22],[50,30,63,26],[50,31,63,27,"generateId"],[50,41,63,37],[50,42,63,38],[50,43,63,39],[52,12,65,6],[53,12,66,6],[53,16,66,12,"processedChanges"],[53,32,66,28],[53,41,66,37,"Promise"],[53,48,66,44],[53,49,66,45,"all"],[53,52,66,48],[53,53,67,8,"entry"],[53,58,67,13],[53,59,67,14,"changes"],[53,66,67,21],[53,67,67,22,"map"],[53,70,67,25],[54,14,67,25],[54,18,67,25,"_ref"],[54,22,67,25],[54,29,67,25,"_asyncToGenerator2"],[54,47,67,25],[54,48,67,25,"default"],[54,55,67,25],[54,57,67,26],[54,68,67,33,"change"],[54,74,67,39],[54,76,67,44],[55,16,68,10],[55,20,68,14,"change"],[55,26,68,20],[55,27,68,21,"type"],[55,31,68,25],[55,36,68,30],[55,51,68,45],[55,55,68,49,"change"],[55,61,68,55],[55,62,68,56,"type"],[55,66,68,60],[55,71,68,65],[55,85,68,79],[55,87,68,81],[56,18,69,12],[57,18,70,12],[57,22,70,18,"backupPath"],[57,32,70,28],[57,41,70,37,"_this"],[57,46,70,41],[57,47,70,42,"createFileBackup"],[57,63,70,58],[57,64,70,59,"change"],[57,70,70,65],[57,71,70,66,"filepath"],[57,79,70,74],[57,81,70,76,"entryId"],[57,88,70,83],[57,89,70,84],[58,18,71,12],[58,25,71,12,"Object"],[58,31,71,12],[58,32,71,12,"assign"],[58,38,71,12],[58,43,72,17,"change"],[58,49,72,23],[59,20,73,14,"backupPath"],[59,30,73,24],[59,32,73,14,"backupPath"],[60,18,73,24],[61,16,75,10],[62,16,76,10],[62,23,76,17,"change"],[62,29,76,23],[63,14,77,8],[63,15,77,9],[64,14,77,9],[64,31,77,9,"_x2"],[64,34,77,9],[65,16,77,9],[65,23,77,9,"_ref"],[65,27,77,9],[65,28,77,9,"apply"],[65,33,77,9],[65,40,77,9,"arguments"],[65,49,77,9],[66,14,77,9],[67,12,77,9],[67,16,78,6],[67,17,78,7],[68,12,80,6],[68,16,80,12,"newEntry"],[68,24,80,40],[68,27,80,40,"Object"],[68,33,80,40],[68,34,80,40,"assign"],[68,40,80,40],[68,45,81,11,"entry"],[68,50,81,16],[69,14,82,8,"changes"],[69,21,82,15],[69,23,82,17,"processedChanges"],[69,39,82,33],[70,14,83,8,"id"],[70,16,83,10],[70,18,83,12,"entryId"],[70,25,83,19],[71,14,84,8,"timestamp"],[71,23,84,17],[71,25,84,19],[71,29,84,23,"Date"],[71,33,84,27],[71,34,84,28],[71,35,84,29],[71,36,84,30,"toISOString"],[71,47,84,41],[71,48,84,42],[71,49,84,43],[72,14,85,8,"status"],[72,20,85,14],[72,22,85,16],[73,12,85,24],[73,14,86,7],[75,12,88,6],[76,12,89,6,"history"],[76,19,89,13],[76,20,89,14,"unshift"],[76,27,89,21],[76,28,89,22,"newEntry"],[76,36,89,30],[76,37,89,31],[78,12,91,6],[79,12,92,6],[79,16,92,10,"history"],[79,23,92,17],[79,24,92,18,"length"],[79,30,92,24],[79,33,92,27],[79,37,92,31],[79,38,92,32,"MAX_HISTORY_ENTRIES"],[79,57,92,51],[79,59,92,53],[80,14,93,8],[81,14,94,8],[81,18,94,14,"removedEntries"],[81,32,94,28],[81,35,94,31,"history"],[81,42,94,38],[81,43,94,39,"splice"],[81,49,94,45],[81,50,94,46],[81,54,94,50],[81,55,94,51,"MAX_HISTORY_ENTRIES"],[81,74,94,70],[81,75,94,71],[82,14,95,8],[82,20,95,14],[82,24,95,18],[82,25,95,19,"cleanupBackups"],[82,39,95,33],[82,40,95,34,"removedEntries"],[82,54,95,48],[82,55,95,49],[83,12,96,6],[84,12,98,6],[84,18,98,12,"AsyncStorage"],[84,39,98,24],[84,40,98,25,"setItem"],[84,47,98,32],[84,48,98,33],[84,52,98,37],[84,53,98,38,"STORAGE_KEY"],[84,64,98,49],[84,66,98,51,"JSON"],[84,70,98,55],[84,71,98,56,"stringify"],[84,80,98,65],[84,81,98,66,"history"],[84,88,98,73],[84,89,98,74],[84,90,98,75],[85,12,99,6],[85,19,99,13,"newEntry"],[85,27,99,21],[85,28,99,22,"id"],[85,30,99,24],[86,10,100,4],[86,11,100,5],[86,12,100,6],[86,19,100,13,"error"],[86,24,100,18],[86,26,100,20],[87,12,101,6,"EventLogger"],[87,36,101,17],[87,37,101,18,"error"],[87,42,101,23],[87,43,101,24],[87,58,101,39],[87,60,101,41],[87,86,101,67],[87,88,101,69,"error"],[87,93,101,83],[87,94,101,84],[88,12,102,6],[88,18,102,12,"error"],[88,23,102,17],[89,10,103,4],[90,8,104,2],[90,9,104,3],[91,8,104,3],[91,17,60,8,"recordChange"],[91,29,60,20,"recordChange"],[91,30,60,20,"_x"],[91,32,60,20],[92,10,60,20],[92,17,60,20,"_recordChange"],[92,30,60,20],[92,31,60,20,"apply"],[92,36,60,20],[92,43,60,20,"arguments"],[92,52,60,20],[93,8,60,20],[94,8,60,20],[94,15,60,8,"recordChange"],[94,27,60,20],[95,6,60,20],[96,4,60,20],[97,6,60,20,"key"],[97,9,60,20],[98,6,60,20,"value"],[98,11,60,20],[99,8,60,20],[99,12,60,20,"_createFileBackup"],[99,29,60,20],[99,36,60,20,"_asyncToGenerator2"],[99,54,60,20],[99,55,60,20,"default"],[99,62,60,20],[99,64,106,2],[99,75,106,33,"filepath"],[99,83,106,49],[99,85,106,51,"entryId"],[99,92,106,66],[99,94,106,97],[100,10,107,4],[100,14,107,8],[101,12,108,6],[102,12,109,6],[102,16,109,12,"backupKey"],[102,25,109,21],[102,28,109,24],[102,39,109,35,"entryId"],[102,46,109,42],[102,50,109,46,"filepath"],[102,58,109,54],[102,59,109,55,"replace"],[102,66,109,62],[102,67,109,63],[102,82,109,78],[102,84,109,80],[102,87,109,83],[102,88,109,84],[102,90,109,86],[104,12,111,6],[105,12,112,6],[106,12,113,6],[106,16,113,12,"content"],[106,23,113,19],[106,32,113,28],[106,36,113,32],[106,37,113,33,"readFileContent"],[106,52,113,48],[106,53,113,49,"filepath"],[106,61,113,57],[106,62,113,58],[107,12,114,6],[107,16,114,10,"content"],[107,23,114,17],[107,25,114,19],[108,14,115,8],[108,20,115,14,"AsyncStorage"],[108,41,115,26],[108,42,115,27,"setItem"],[108,49,115,34],[108,50,115,35,"backupKey"],[108,59,115,44],[108,61,115,46,"content"],[108,68,115,53],[108,69,115,54],[109,14,116,8],[109,21,116,15,"backupKey"],[109,30,116,24],[110,12,117,6],[111,10,118,4],[111,11,118,5],[111,12,118,6],[111,19,118,13,"error"],[111,24,118,18],[111,26,118,20],[112,12,119,6,"EventLogger"],[112,36,119,17],[112,37,119,18,"error"],[112,42,119,23],[112,43,119,24],[112,58,119,39],[112,60,119,41],[112,86,119,67],[112,88,119,69,"error"],[112,93,119,83],[112,94,119,84],[113,10,120,4],[114,10,121,4],[114,17,121,11,"undefined"],[114,26,121,20],[115,8,122,2],[115,9,122,3],[116,8,122,3],[116,17,106,16,"createFileBackup"],[116,33,106,32,"createFileBackup"],[116,34,106,32,"_x3"],[116,37,106,32],[116,39,106,32,"_x4"],[116,42,106,32],[117,10,106,32],[117,17,106,32,"_createFileBackup"],[117,34,106,32],[117,35,106,32,"apply"],[117,40,106,32],[117,47,106,32,"arguments"],[117,56,106,32],[118,8,106,32],[119,8,106,32],[119,15,106,16,"createFileBackup"],[119,31,106,32],[120,6,106,32],[121,4,106,32],[122,6,106,32,"key"],[122,9,106,32],[123,6,106,32,"value"],[123,11,106,32],[124,8,106,32],[124,12,106,32,"_readFileContent"],[124,28,106,32],[124,35,106,32,"_asyncToGenerator2"],[124,53,106,32],[124,54,106,32,"default"],[124,61,106,32],[124,63,124,2],[124,74,124,32,"filepath"],[124,82,124,48],[124,84,124,74],[125,10,125,4],[126,10,126,4],[127,10,127,4,"EventLogger"],[127,34,127,15],[127,35,127,16,"debug"],[127,40,127,21],[127,41,127,22],[127,56,127,37],[127,58,127,39],[127,85,127,66],[127,87,127,68,"filepath"],[127,95,127,76],[127,96,127,77],[128,10,128,4],[128,17,128,11],[128,21,128,15],[129,8,129,2],[129,9,129,3],[130,8,129,3],[130,17,124,16,"readFileContent"],[130,32,124,31,"readFileContent"],[130,33,124,31,"_x5"],[130,36,124,31],[131,10,124,31],[131,17,124,31,"_readFileContent"],[131,33,124,31],[131,34,124,31,"apply"],[131,39,124,31],[131,46,124,31,"arguments"],[131,55,124,31],[132,8,124,31],[133,8,124,31],[133,15,124,16,"readFileContent"],[133,30,124,31],[134,6,124,31],[135,4,124,31],[136,6,124,31,"key"],[136,9,124,31],[137,6,124,31,"value"],[137,11,124,31],[138,8,124,31],[138,12,124,31,"_cleanupBackups"],[138,27,124,31],[138,34,124,31,"_asyncToGenerator2"],[138,52,124,31],[138,53,124,31,"default"],[138,60,124,31],[138,62,131,2],[138,73,131,31,"entries"],[138,80,131,60],[138,82,131,77],[139,10,132,4],[139,15,132,9],[139,19,132,15,"entry"],[139,24,132,20],[139,28,132,24,"entries"],[139,35,132,31],[139,37,132,33],[140,12,133,6],[140,17,133,11],[140,21,133,17,"change"],[140,27,133,23],[140,31,133,27,"entry"],[140,36,133,32],[140,37,133,33,"changes"],[140,44,133,40],[140,46,133,42],[141,14,134,8],[141,18,134,12,"change"],[141,24,134,18],[141,25,134,19,"backupPath"],[141,35,134,29],[141,37,134,31],[142,16,135,10],[142,20,135,14],[143,18,136,12],[143,24,136,18,"AsyncStorage"],[143,45,136,30],[143,46,136,31,"removeItem"],[143,56,136,41],[143,57,136,42,"change"],[143,63,136,48],[143,64,136,49,"backupPath"],[143,74,136,59],[143,75,136,60],[144,16,137,10],[144,17,137,11],[144,18,137,12],[144,25,137,19,"error"],[144,30,137,24],[144,32,137,26],[145,18,138,12,"EventLogger"],[145,42,138,23],[145,43,138,24,"error"],[145,48,138,29],[145,49,138,30],[145,64,138,45],[145,66,138,47],[145,93,138,74],[145,95,138,76,"error"],[145,100,138,90],[145,101,138,91],[146,16,139,10],[147,14,140,8],[148,12,141,6],[149,10,142,4],[150,8,143,2],[150,9,143,3],[151,8,143,3],[151,17,131,16,"cleanupBackups"],[151,31,131,30,"cleanupBackups"],[151,32,131,30,"_x6"],[151,35,131,30],[152,10,131,30],[152,17,131,30,"_cleanupBackups"],[152,32,131,30],[152,33,131,30,"apply"],[152,38,131,30],[152,45,131,30,"arguments"],[152,54,131,30],[153,8,131,30],[154,8,131,30],[154,15,131,16,"cleanupBackups"],[154,29,131,30],[155,6,131,30],[156,4,131,30],[157,6,131,30,"key"],[157,9,131,30],[158,6,131,30,"value"],[158,11,131,30],[159,8,131,30],[159,12,131,30,"_getHistory"],[159,23,131,30],[159,30,131,30,"_asyncToGenerator2"],[159,48,131,30],[159,49,131,30,"default"],[159,56,131,30],[159,58,145,2],[159,71,145,52],[160,10,146,4],[160,14,146,8],[161,12,147,6],[161,16,147,12,"data"],[161,20,147,16],[161,29,147,25,"AsyncStorage"],[161,50,147,37],[161,51,147,38,"getItem"],[161,58,147,45],[161,59,147,46],[161,63,147,50],[161,64,147,51,"STORAGE_KEY"],[161,75,147,62],[161,76,147,63],[162,12,148,6],[162,19,148,13,"data"],[162,23,148,17],[162,26,148,20,"JSON"],[162,30,148,24],[162,31,148,25,"parse"],[162,36,148,30],[162,37,148,31,"data"],[162,41,148,35],[162,42,148,36],[162,45,148,39],[162,47,148,41],[163,10,149,4],[163,11,149,5],[163,12,149,6],[163,19,149,13,"error"],[163,24,149,18],[163,26,149,20],[164,12,150,6,"EventLogger"],[164,36,150,17],[164,37,150,18,"error"],[164,42,150,23],[164,43,150,24],[164,58,150,39],[164,60,150,41],[164,84,150,65],[164,86,150,67,"error"],[164,91,150,81],[164,92,150,82],[165,12,151,6],[165,19,151,13],[165,21,151,15],[166,10,152,4],[167,8,153,2],[167,9,153,3],[168,8,153,3],[168,17,145,8,"getHistory"],[168,27,145,18,"getHistory"],[168,28,145,18],[169,10,145,18],[169,17,145,18,"_getHistory"],[169,28,145,18],[169,29,145,18,"apply"],[169,34,145,18],[169,41,145,18,"arguments"],[169,50,145,18],[170,8,145,18],[171,8,145,18],[171,15,145,8,"getHistory"],[171,25,145,18],[172,6,145,18],[173,4,145,18],[174,6,145,18,"key"],[174,9,145,18],[175,6,145,18,"value"],[175,11,145,18],[176,8,145,18],[176,12,145,18,"_getActiveChanges"],[176,29,145,18],[176,36,145,18,"_asyncToGenerator2"],[176,54,145,18],[176,55,145,18,"default"],[176,62,145,18],[176,64,155,2],[176,77,155,58],[177,10,156,4],[177,14,156,10,"history"],[177,21,156,17],[177,30,156,26],[177,34,156,30],[177,35,156,31,"getHistory"],[177,45,156,41],[177,46,156,42],[177,47,156,43],[178,10,157,4],[178,17,157,11,"history"],[178,24,157,18],[178,25,157,19,"filter"],[178,31,157,25],[178,32,157,26],[178,42,157,26,"entry"],[178,47,157,31],[179,12,157,31],[179,19,157,35,"entry"],[179,24,157,40],[179,25,157,41,"status"],[179,31,157,47],[179,36,157,52],[179,44,157,60],[180,10,157,60],[180,12,157,61],[181,8,158,2],[181,9,158,3],[182,8,158,3],[182,17,155,8,"getActiveChanges"],[182,33,155,24,"getActiveChanges"],[182,34,155,24],[183,10,155,24],[183,17,155,24,"_getActiveChanges"],[183,34,155,24],[183,35,155,24,"apply"],[183,40,155,24],[183,47,155,24,"arguments"],[183,56,155,24],[184,8,155,24],[185,8,155,24],[185,15,155,8,"getActiveChanges"],[185,31,155,24],[186,6,155,24],[187,4,155,24],[188,6,155,24,"key"],[188,9,155,24],[189,6,155,24,"value"],[189,11,155,24],[190,8,155,24],[190,12,155,24,"_getChangeById"],[190,26,155,24],[190,33,155,24,"_asyncToGenerator2"],[190,51,155,24],[190,52,155,24,"default"],[190,59,155,24],[190,61,160,2],[190,72,160,22,"id"],[190,74,160,32],[190,76,160,70],[191,10,161,4],[191,14,161,10,"history"],[191,21,161,17],[191,30,161,26],[191,34,161,30],[191,35,161,31,"getHistory"],[191,45,161,41],[191,46,161,42],[191,47,161,43],[192,10,162,4],[192,17,162,11,"history"],[192,24,162,18],[192,25,162,19,"find"],[192,29,162,23],[192,30,162,24],[192,40,162,24,"entry"],[192,45,162,29],[193,12,162,29],[193,19,162,33,"entry"],[193,24,162,38],[193,25,162,39,"id"],[193,27,162,41],[193,32,162,46,"id"],[193,34,162,48],[194,10,162,48],[194,12,162,49],[194,16,162,53],[194,20,162,57],[195,8,163,2],[195,9,163,3],[196,8,163,3],[196,17,160,8,"getChangeById"],[196,30,160,21,"getChangeById"],[196,31,160,21,"_x7"],[196,34,160,21],[197,10,160,21],[197,17,160,21,"_getChangeById"],[197,31,160,21],[197,32,160,21,"apply"],[197,37,160,21],[197,44,160,21,"arguments"],[197,53,160,21],[198,8,160,21],[199,8,160,21],[199,15,160,8,"getChangeById"],[199,28,160,21],[200,6,160,21],[201,4,160,21],[202,6,160,21,"key"],[202,9,160,21],[203,6,160,21,"value"],[203,11,160,21],[204,8,160,21],[204,12,160,21,"_revertChange"],[204,25,160,21],[204,32,160,21,"_asyncToGenerator2"],[204,50,160,21],[204,51,160,21,"default"],[204,58,160,21],[204,60,165,2],[204,71,165,21,"id"],[204,73,165,31],[204,75,165,51],[205,10,166,4],[205,14,166,8],[206,12,167,6],[207,12,168,6],[207,16,168,10],[207,20,168,14],[207,21,168,15,"activeOperations"],[207,37,168,31],[207,38,168,32,"has"],[207,41,168,35],[207,42,168,36,"id"],[207,44,168,38],[207,45,168,39],[207,47,168,41],[208,14,169,8],[208,20,169,14],[208,24,169,18,"Error"],[208,29,169,23],[208,30,169,24],[208,68,169,62],[208,69,169,63],[209,12,170,6],[210,12,172,6],[210,16,172,10],[210,17,172,11,"activeOperations"],[210,33,172,27],[210,34,172,28,"add"],[210,37,172,31],[210,38,172,32,"id"],[210,40,172,34],[210,41,172,35],[211,12,174,6],[211,16,174,12,"history"],[211,23,174,19],[211,32,174,28],[211,36,174,32],[211,37,174,33,"getHistory"],[211,47,174,43],[211,48,174,44],[211,49,174,45],[212,12,175,6],[212,16,175,12,"entryIndex"],[212,26,175,22],[212,29,175,25,"history"],[212,36,175,32],[212,37,175,33,"findIndex"],[212,46,175,42],[212,47,175,43],[212,57,175,43,"entry"],[212,62,175,48],[213,14,175,48],[213,21,175,52,"entry"],[213,26,175,57],[213,27,175,58,"id"],[213,29,175,60],[213,34,175,65,"id"],[213,36,175,67],[214,12,175,67],[214,14,175,68],[215,12,177,6],[215,16,177,10,"entryIndex"],[215,26,177,20],[215,31,177,25],[215,32,177,26],[215,33,177,27],[215,35,177,29],[216,14,178,8],[216,20,178,14],[216,24,178,18,"Error"],[216,29,178,23],[216,30,178,24],[216,54,178,48],[216,55,178,49],[217,12,179,6],[218,12,181,6],[218,16,181,12,"entry"],[218,21,181,17],[218,24,181,20,"history"],[218,31,181,27],[218,32,181,28,"entryIndex"],[218,42,181,38],[218,43,181,39],[219,12,182,6],[219,16,182,10,"entry"],[219,21,182,15],[219,22,182,16,"status"],[219,28,182,22],[219,33,182,27],[219,43,182,37],[219,45,182,39],[220,14,183,8],[220,20,183,14],[220,24,183,18,"Error"],[220,29,183,23],[220,30,183,24],[220,55,183,49],[220,56,183,50],[221,12,184,6],[223,12,186,6],[224,12,187,6],[224,16,187,12,"revertResults"],[224,29,187,25],[224,38,187,34],[224,42,187,38],[224,43,187,39,"performRevert"],[224,56,187,52],[224,57,187,53,"entry"],[224,62,187,58],[224,63,187,59],[226,12,189,6],[227,12,190,6,"history"],[227,19,190,13],[227,20,190,14,"entryIndex"],[227,30,190,24],[227,31,190,25],[227,34,190,25,"Object"],[227,40,190,25],[227,41,190,25,"assign"],[227,47,190,25],[227,52,191,11,"entry"],[227,57,191,16],[228,14,192,8,"status"],[228,20,192,14],[228,22,192,16],[228,32,192,26],[229,14,193,8,"revertedAt"],[229,24,193,18],[229,26,193,20],[229,30,193,24,"Date"],[229,34,193,28],[229,35,193,29],[229,36,193,30],[229,37,193,31,"toISOString"],[229,48,193,42],[229,49,193,43],[230,12,193,44],[230,14,194,7],[231,12,196,6],[231,18,196,12,"AsyncStorage"],[231,39,196,24],[231,40,196,25,"setItem"],[231,47,196,32],[231,48,196,33],[231,52,196,37],[231,53,196,38,"STORAGE_KEY"],[231,64,196,49],[231,66,196,51,"JSON"],[231,70,196,55],[231,71,196,56,"stringify"],[231,80,196,65],[231,81,196,66,"history"],[231,88,196,73],[231,89,196,74],[231,90,196,75],[233,12,198,6],[234,12,199,6],[234,16,199,10],[234,17,199,11,"generateRevertReport"],[234,37,199,31],[234,38,199,32,"entry"],[234,43,199,37],[234,45,199,39,"revertResults"],[234,58,199,52],[234,59,199,53],[235,12,201,6],[235,19,201,13],[235,23,201,17],[236,10,202,4],[236,11,202,5],[236,12,202,6],[236,19,202,13,"error"],[236,24,202,18],[236,26,202,20],[237,12,203,6,"EventLogger"],[237,36,203,17],[237,37,203,18,"error"],[237,42,203,23],[237,43,203,24],[237,58,203,39],[237,60,203,41],[237,86,203,67],[237,88,203,69,"error"],[237,93,203,83],[237,94,203,84],[238,12,204,6],[238,19,204,13],[238,24,204,18],[239,10,205,4],[239,11,205,5],[239,20,205,14],[240,12,206,6],[240,16,206,10],[240,17,206,11,"activeOperations"],[240,33,206,27],[240,34,206,28,"delete"],[240,40,206,34],[240,41,206,35,"id"],[240,43,206,37],[240,44,206,38],[241,10,207,4],[242,8,208,2],[242,9,208,3],[243,8,208,3],[243,17,165,8,"revertChange"],[243,29,165,20,"revertChange"],[243,30,165,20,"_x8"],[243,33,165,20],[244,10,165,20],[244,17,165,20,"_revertChange"],[244,30,165,20],[244,31,165,20,"apply"],[244,36,165,20],[244,43,165,20,"arguments"],[244,52,165,20],[245,8,165,20],[246,8,165,20],[246,15,165,8,"revertChange"],[246,27,165,20],[247,6,165,20],[248,4,165,20],[249,6,165,20,"key"],[249,9,165,20],[250,6,165,20,"value"],[250,11,165,20],[251,8,165,20],[251,12,165,20,"_performRevert"],[251,26,165,20],[251,33,165,20,"_asyncToGenerator2"],[251,51,165,20],[251,52,165,20,"default"],[251,59,165,20],[251,61,210,2],[251,72,210,30,"entry"],[251,77,210,55],[251,79,210,88],[252,10,211,4],[252,14,211,10,"results"],[252,21,211,17],[252,24,211,20],[252,28,211,24,"Map"],[252,31,211,27],[252,32,211,45],[252,33,211,46],[254,10,213,4],[255,10,214,4],[255,15,214,9],[255,19,214,15,"change"],[255,25,214,21],[255,29,214,25,"entry"],[255,34,214,30],[255,35,214,31,"changes"],[255,42,214,38],[255,43,214,39,"reverse"],[255,50,214,46],[255,51,214,47],[255,52,214,48],[255,54,214,50],[256,12,215,6],[256,16,215,10],[257,14,216,8],[257,22,216,16,"change"],[257,28,216,22],[257,29,216,23,"type"],[257,33,216,27],[258,16,217,10],[258,21,217,15],[258,35,217,29],[259,18,218,12],[260,18,219,12,"EventLogger"],[260,42,219,23],[260,43,219,24,"debug"],[260,48,219,29],[260,49,219,30],[260,64,219,45],[260,66,219,47],[260,105,219,86],[260,106,219,87],[261,18,220,12,"results"],[261,25,220,19],[261,26,220,20,"set"],[261,29,220,23],[261,30,220,24,"change"],[261,36,220,30],[261,37,220,31,"filepath"],[261,45,220,39],[261,47,220,41],[261,51,220,45],[261,52,220,46],[262,18,221,12],[263,16,223,10],[263,21,223,15],[263,36,223,30],[264,18,224,12],[264,22,224,16,"change"],[264,28,224,22],[264,29,224,23,"backupPath"],[264,39,224,33],[264,41,224,35],[265,20,225,14],[266,20,226,14],[266,24,226,20,"backupContent"],[266,37,226,33],[266,46,226,42,"AsyncStorage"],[266,67,226,54],[266,68,226,55,"getItem"],[266,75,226,62],[266,76,226,63,"change"],[266,82,226,69],[266,83,226,70,"backupPath"],[266,93,226,80],[266,94,226,81],[267,20,227,14],[267,24,227,18,"backupContent"],[267,37,227,31],[267,39,227,33],[268,22,228,16,"EventLogger"],[268,46,228,27],[268,47,228,28,"debug"],[268,52,228,33],[268,53,228,34],[268,68,228,49],[268,70,228,51],[268,122,228,103],[268,123,228,104],[269,22,229,16,"results"],[269,29,229,23],[269,30,229,24,"set"],[269,33,229,27],[269,34,229,28,"change"],[269,40,229,34],[269,41,229,35,"filepath"],[269,49,229,43],[269,51,229,45],[269,55,229,49],[269,56,229,50],[270,20,230,14],[270,21,230,15],[270,27,230,21],[271,22,231,16,"results"],[271,29,231,23],[271,30,231,24,"set"],[271,33,231,27],[271,34,231,28,"change"],[271,40,231,34],[271,41,231,35,"filepath"],[271,49,231,43],[271,51,231,45],[271,56,231,50],[271,57,231,51],[272,20,232,14],[273,18,233,12],[273,19,233,13],[273,25,233,19],[273,29,233,23,"change"],[273,35,233,29],[273,36,233,30,"previousContent"],[273,51,233,45],[273,53,233,47],[274,20,234,14,"EventLogger"],[274,44,234,25],[274,45,234,26,"debug"],[274,50,234,31],[274,51,234,32],[274,66,234,47],[274,68,234,49],[274,130,234,111],[274,131,234,112],[275,20,235,14,"results"],[275,27,235,21],[275,28,235,22,"set"],[275,31,235,25],[275,32,235,26,"change"],[275,38,235,32],[275,39,235,33,"filepath"],[275,47,235,41],[275,49,235,43],[275,53,235,47],[275,54,235,48],[276,18,236,12],[276,19,236,13],[276,25,236,19],[277,20,237,14,"results"],[277,27,237,21],[277,28,237,22,"set"],[277,31,237,25],[277,32,237,26,"change"],[277,38,237,32],[277,39,237,33,"filepath"],[277,47,237,41],[277,49,237,43],[277,54,237,48],[277,55,237,49],[278,18,238,12],[279,18,239,12],[280,16,241,10],[280,21,241,15],[280,35,241,29],[281,18,242,12],[281,22,242,16,"change"],[281,28,242,22],[281,29,242,23,"backupPath"],[281,39,242,33],[281,43,242,37,"change"],[281,49,242,43],[281,50,242,44,"previousContent"],[281,65,242,59],[281,67,242,61],[282,20,243,14,"EventLogger"],[282,44,243,25],[282,45,243,26,"debug"],[282,50,243,31],[282,51,243,32],[282,66,243,47],[282,68,243,49],[282,109,243,90],[282,110,243,91],[283,20,244,14,"results"],[283,27,244,21],[283,28,244,22,"set"],[283,31,244,25],[283,32,244,26,"change"],[283,38,244,32],[283,39,244,33,"filepath"],[283,47,244,41],[283,49,244,43],[283,53,244,47],[283,54,244,48],[284,18,245,12],[284,19,245,13],[284,25,245,19],[285,20,246,14,"results"],[285,27,246,21],[285,28,246,22,"set"],[285,31,246,25],[285,32,246,26,"change"],[285,38,246,32],[285,39,246,33,"filepath"],[285,47,246,41],[285,49,246,43],[285,54,246,48],[285,55,246,49],[286,18,247,12],[287,18,248,12],[288,16,250,10],[288,21,250,15],[288,39,250,33],[289,18,251,12,"EventLogger"],[289,42,251,23],[289,43,251,24,"debug"],[289,48,251,29],[289,49,251,30],[289,64,251,45],[289,66,251,47],[289,114,251,95],[289,115,251,96],[290,18,252,12,"results"],[290,25,252,19],[290,26,252,20,"set"],[290,29,252,23],[290,30,252,24,"change"],[290,36,252,30],[290,37,252,31,"description"],[290,48,252,42],[290,50,252,44],[290,54,252,48],[290,55,252,49],[291,18,253,12],[292,16,255,10],[292,21,255,15],[292,37,255,31],[293,18,256,12,"EventLogger"],[293,42,256,23],[293,43,256,24,"debug"],[293,48,256,29],[293,49,256,30],[293,64,256,45],[293,66,256,47],[293,111,256,92],[293,112,256,93],[294,18,257,12,"results"],[294,25,257,19],[294,26,257,20,"set"],[294,29,257,23],[294,30,257,24,"change"],[294,36,257,30],[294,37,257,31,"description"],[294,48,257,42],[294,50,257,44],[294,54,257,48],[294,55,257,49],[295,18,258,12],[296,14,259,8],[297,12,260,6],[297,13,260,7],[297,14,260,8],[297,21,260,15,"error"],[297,26,260,20],[297,28,260,22],[298,14,261,8,"EventLogger"],[298,38,261,19],[298,39,261,20,"error"],[298,44,261,25],[298,45,261,26],[298,60,261,41],[298,62,261,43],[298,119,261,100],[298,121,261,102,"error"],[298,126,261,116],[298,127,261,117],[299,14,262,8,"results"],[299,21,262,15],[299,22,262,16,"set"],[299,25,262,19],[299,26,262,20,"change"],[299,32,262,26],[299,33,262,27,"filepath"],[299,41,262,35],[299,43,262,37],[299,48,262,42],[299,49,262,43],[300,12,263,6],[301,10,264,4],[302,10,266,4],[302,17,266,11,"results"],[302,24,266,18],[303,8,267,2],[303,9,267,3],[304,8,267,3],[304,17,210,16,"performRevert"],[304,30,210,29,"performRevert"],[304,31,210,29,"_x9"],[304,34,210,29],[305,10,210,29],[305,17,210,29,"_performRevert"],[305,31,210,29],[305,32,210,29,"apply"],[305,37,210,29],[305,44,210,29,"arguments"],[305,53,210,29],[306,8,210,29],[307,8,210,29],[307,15,210,16,"performRevert"],[307,28,210,29],[308,6,210,29],[309,4,210,29],[310,6,210,29,"key"],[310,9,210,29],[311,6,210,29,"value"],[311,11,210,29],[311,13,269,2],[311,22,269,10,"generateRevertReport"],[311,42,269,30,"generateRevertReport"],[311,43,269,31,"entry"],[311,48,269,56],[311,50,269,58,"results"],[311,57,269,87],[311,59,269,95],[312,8,270,4,"EventLogger"],[312,32,270,15],[312,33,270,16,"debug"],[312,38,270,21],[312,39,270,22],[312,54,270,37],[312,56,270,39],[312,81,270,64],[312,82,270,65],[313,8,271,4,"EventLogger"],[313,32,271,15],[313,33,271,16,"debug"],[313,38,271,21],[313,39,271,22],[313,54,271,37],[313,56,271,39],[313,83,271,66],[313,84,271,67],[314,8,272,4,"EventLogger"],[314,32,272,15],[314,33,272,16,"debug"],[314,38,272,21],[314,39,272,22],[314,54,272,37],[314,56,272,39],[314,91,272,74],[314,92,272,75],[315,8,273,4,"EventLogger"],[315,32,273,15],[315,33,273,16,"debug"],[315,38,273,21],[315,39,273,22],[315,54,273,37],[315,56,273,39],[315,96,273,79],[315,97,273,80],[316,8,275,4],[316,12,275,8,"successCount"],[316,24,275,20],[316,27,275,23],[316,28,275,24],[317,8,276,4],[317,12,276,8,"failureCount"],[317,24,276,20],[317,27,276,23],[317,28,276,24],[318,8,278,4,"results"],[318,15,278,11],[318,16,278,12,"forEach"],[318,23,278,19],[318,24,278,20],[318,34,278,21,"success"],[318,41,278,28],[318,43,278,30,"item"],[318,47,278,34],[318,49,278,39],[319,10,279,6],[319,14,279,10,"success"],[319,21,279,17],[319,23,279,19],[320,12,280,8,"successCount"],[320,24,280,20],[320,26,280,22],[321,12,281,8,"EventLogger"],[321,36,281,19],[321,37,281,20,"debug"],[321,42,281,25],[321,43,281,26],[321,58,281,41],[321,60,281,43],[321,71,281,54],[321,72,281,55],[322,10,282,6],[322,11,282,7],[322,17,282,13],[323,12,283,8,"failureCount"],[323,24,283,20],[323,26,283,22],[324,12,284,8,"EventLogger"],[324,36,284,19],[324,37,284,20,"debug"],[324,42,284,25],[324,43,284,26],[324,58,284,41],[324,60,284,43],[324,71,284,54],[324,72,284,55],[325,10,285,6],[326,8,286,4],[326,9,286,5],[326,10,286,6],[327,8,288,4,"EventLogger"],[327,32,288,15],[327,33,288,16,"debug"],[327,38,288,21],[327,39,288,22],[327,54,288,37],[327,56,288,39],[327,119,288,102],[327,120,288,103],[328,8,289,4,"EventLogger"],[328,32,289,15],[328,33,289,16,"debug"],[328,38,289,21],[328,39,289,22],[328,54,289,37],[328,56,289,39],[328,85,289,68],[328,86,289,69],[329,6,290,2],[331,6,292,2],[332,4,292,2],[333,6,292,2,"key"],[333,9,292,2],[334,6,292,2,"value"],[334,11,292,2],[335,8,292,2],[335,12,292,2,"_createSnapshot"],[335,27,292,2],[335,34,292,2,"_asyncToGenerator2"],[335,52,292,2],[335,53,292,2,"default"],[335,60,292,2],[335,62,293,2],[335,73,293,23,"description"],[335,84,293,42],[335,86,293,61],[336,10,294,4],[336,14,294,10,"snapshotId"],[336,24,294,20],[336,27,294,23],[336,31,294,27],[336,32,294,28,"generateId"],[336,42,294,38],[336,43,294,39],[336,44,294,40],[337,10,295,4],[337,14,295,10,"snapshot"],[337,22,295,18],[337,25,295,21],[338,12,296,6,"id"],[338,14,296,8],[338,16,296,10,"snapshotId"],[338,26,296,20],[339,12,297,6,"description"],[339,23,297,17],[339,25,297,6,"description"],[339,36,297,17],[340,12,298,6,"timestamp"],[340,21,298,15],[340,23,298,17],[340,27,298,21,"Date"],[340,31,298,25],[340,32,298,26],[340,33,298,27],[340,34,298,28,"toISOString"],[340,45,298,39],[340,46,298,40],[340,47,298,41],[341,12,299,6,"files"],[341,17,299,11],[341,19,299,13],[342,10,300,4],[342,11,300,5],[344,10,302,4],[345,10,303,4],[345,16,303,10,"AsyncStorage"],[345,37,303,22],[345,38,303,23,"setItem"],[345,45,303,30],[345,46,303,31],[345,59,303,44,"snapshotId"],[345,69,303,54],[345,71,303,56],[345,73,303,58,"JSON"],[345,77,303,62],[345,78,303,63,"stringify"],[345,87,303,72],[345,88,303,73,"snapshot"],[345,96,303,81],[345,97,303,82],[345,98,303,83],[346,10,304,4],[346,17,304,11,"snapshotId"],[346,27,304,21],[347,8,305,2],[347,9,305,3],[348,8,305,3],[348,17,293,8,"createSnapshot"],[348,31,293,22,"createSnapshot"],[348,32,293,22,"_x0"],[348,35,293,22],[349,10,293,22],[349,17,293,22,"_createSnapshot"],[349,32,293,22],[349,33,293,22,"apply"],[349,38,293,22],[349,45,293,22,"arguments"],[349,54,293,22],[350,8,293,22],[351,8,293,22],[351,15,293,8,"createSnapshot"],[351,29,293,22],[352,6,293,22],[352,10,307,2],[353,4,307,2],[354,6,307,2,"key"],[354,9,307,2],[355,6,307,2,"value"],[355,11,307,2],[356,8,307,2],[356,12,307,2,"_restoreSnapshot"],[356,28,307,2],[356,35,307,2,"_asyncToGenerator2"],[356,53,307,2],[356,54,307,2,"default"],[356,61,307,2],[356,63,308,2],[356,74,308,24,"snapshotId"],[356,84,308,42],[356,86,308,62],[357,10,309,4],[357,14,309,8],[358,12,310,6],[358,16,310,12,"snapshotData"],[358,28,310,24],[358,37,310,33,"AsyncStorage"],[358,58,310,45],[358,59,310,46,"getItem"],[358,66,310,53],[358,67,310,54],[358,80,310,67,"snapshotId"],[358,90,310,77],[358,92,310,79],[358,93,310,80],[359,12,311,6],[359,16,311,10],[359,17,311,11,"snapshotData"],[359,29,311,23],[359,31,311,25],[360,14,312,8],[360,20,312,14],[360,24,312,18,"Error"],[360,29,312,23],[360,30,312,24],[360,50,312,44],[360,51,312,45],[361,12,313,6],[362,12,315,6],[362,16,315,12,"snapshot"],[362,24,315,20],[362,27,315,23,"JSON"],[362,31,315,27],[362,32,315,28,"parse"],[362,37,315,33],[362,38,315,34,"snapshotData"],[362,50,315,46],[362,51,315,47],[363,12,316,6,"EventLogger"],[363,36,316,17],[363,37,316,18,"debug"],[363,42,316,23],[363,43,316,24],[363,58,316,39],[363,60,316,41],[363,105,316,86],[363,106,316,87],[365,12,318,6],[366,12,319,6],[366,19,319,13],[366,23,319,17],[367,10,320,4],[367,11,320,5],[367,12,320,6],[367,19,320,13,"error"],[367,24,320,18],[367,26,320,20],[368,12,321,6,"EventLogger"],[368,36,321,17],[368,37,321,18,"error"],[368,42,321,23],[368,43,321,24],[368,58,321,39],[368,60,321,41],[368,89,321,70],[368,91,321,72,"error"],[368,96,321,86],[368,97,321,87],[369,12,322,6],[369,19,322,13],[369,24,322,18],[370,10,323,4],[371,8,324,2],[371,9,324,3],[372,8,324,3],[372,17,308,8,"restoreSnapshot"],[372,32,308,23,"restoreSnapshot"],[372,33,308,23,"_x1"],[372,36,308,23],[373,10,308,23],[373,17,308,23,"_restoreSnapshot"],[373,33,308,23],[373,34,308,23,"apply"],[373,39,308,23],[373,46,308,23,"arguments"],[373,55,308,23],[374,8,308,23],[375,8,308,23],[375,15,308,8,"restoreSnapshot"],[375,30,308,23],[376,6,308,23],[377,4,308,23],[378,6,308,23,"key"],[378,9,308,23],[379,6,308,23,"value"],[379,11,308,23],[380,8,308,23],[380,12,308,23,"_clearHistory"],[380,25,308,23],[380,32,308,23,"_asyncToGenerator2"],[380,50,308,23],[380,51,308,23,"default"],[380,58,308,23],[380,60,326,2],[380,73,326,38],[381,10,327,4],[381,14,327,8],[382,12,328,6],[382,18,328,12,"AsyncStorage"],[382,39,328,24],[382,40,328,25,"removeItem"],[382,50,328,35],[382,51,328,36],[382,55,328,40],[382,56,328,41,"STORAGE_KEY"],[382,67,328,52],[382,68,328,53],[383,10,329,4],[383,11,329,5],[383,12,329,6],[383,19,329,13,"error"],[383,24,329,18],[383,26,329,20],[384,12,330,6,"EventLogger"],[384,36,330,17],[384,37,330,18,"error"],[384,42,330,23],[384,43,330,24],[384,58,330,39],[384,60,330,41],[384,86,330,67],[384,88,330,69,"error"],[384,93,330,83],[384,94,330,84],[385,10,331,4],[386,8,332,2],[386,9,332,3],[387,8,332,3],[387,17,326,8,"clearHistory"],[387,29,326,20,"clearHistory"],[387,30,326,20],[388,10,326,20],[388,17,326,20,"_clearHistory"],[388,30,326,20],[388,31,326,20,"apply"],[388,36,326,20],[388,43,326,20,"arguments"],[388,52,326,20],[389,8,326,20],[390,8,326,20],[390,15,326,8,"clearHistory"],[390,27,326,20],[391,6,326,20],[392,4,326,20],[393,6,326,20,"key"],[393,9,326,20],[394,6,326,20,"value"],[394,11,326,20],[395,8,326,20],[395,12,326,20,"_exportHistory"],[395,26,326,20],[395,33,326,20,"_asyncToGenerator2"],[395,51,326,20],[395,52,326,20,"default"],[395,59,326,20],[395,61,334,2],[395,74,334,41],[396,10,335,4],[396,14,335,10,"history"],[396,21,335,17],[396,30,335,26],[396,34,335,30],[396,35,335,31,"getHistory"],[396,45,335,41],[396,46,335,42],[396,47,335,43],[397,10,336,4],[397,17,336,11,"JSON"],[397,21,336,15],[397,22,336,16,"stringify"],[397,31,336,25],[397,32,336,26,"history"],[397,39,336,33],[397,41,336,35],[397,45,336,39],[397,47,336,41],[397,48,336,42],[397,49,336,43],[398,8,337,2],[398,9,337,3],[399,8,337,3],[399,17,334,8,"exportHistory"],[399,30,334,21,"exportHistory"],[399,31,334,21],[400,10,334,21],[400,17,334,21,"_exportHistory"],[400,31,334,21],[400,32,334,21,"apply"],[400,37,334,21],[400,44,334,21,"arguments"],[400,53,334,21],[401,8,334,21],[402,8,334,21],[402,15,334,8,"exportHistory"],[402,28,334,21],[403,6,334,21],[404,4,334,21],[405,6,334,21,"key"],[405,9,334,21],[406,6,334,21,"value"],[406,11,334,21],[407,8,334,21],[407,12,334,21,"_importHistory"],[407,26,334,21],[407,33,334,21,"_asyncToGenerator2"],[407,51,334,21],[407,52,334,21,"default"],[407,59,334,21],[407,61,339,2],[407,72,339,22,"data"],[407,76,339,34],[407,78,339,54],[408,10,340,4],[408,14,340,8],[409,12,341,6],[409,16,341,12,"history"],[409,23,341,19],[409,26,341,22,"JSON"],[409,30,341,26],[409,31,341,27,"parse"],[409,36,341,32],[409,37,341,33,"data"],[409,41,341,37],[409,42,341,38],[410,12,342,6],[410,16,342,10],[410,17,342,11,"Array"],[410,22,342,16],[410,23,342,17,"isArray"],[410,30,342,24],[410,31,342,25,"history"],[410,38,342,32],[410,39,342,33],[410,41,342,35],[411,14,343,8],[411,20,343,14],[411,24,343,18,"Error"],[411,29,343,23],[411,30,343,24],[411,54,343,48],[411,55,343,49],[412,12,344,6],[413,12,345,6],[413,18,345,12,"AsyncStorage"],[413,39,345,24],[413,40,345,25,"setItem"],[413,47,345,32],[413,48,345,33],[413,52,345,37],[413,53,345,38,"STORAGE_KEY"],[413,64,345,49],[413,66,345,51,"JSON"],[413,70,345,55],[413,71,345,56,"stringify"],[413,80,345,65],[413,81,345,66,"history"],[413,88,345,73],[413,89,345,74],[413,90,345,75],[414,12,346,6],[414,19,346,13],[414,23,346,17],[415,10,347,4],[415,11,347,5],[415,12,347,6],[415,19,347,13,"error"],[415,24,347,18],[415,26,347,20],[416,12,348,6,"EventLogger"],[416,36,348,17],[416,37,348,18,"error"],[416,42,348,23],[416,43,348,24],[416,58,348,39],[416,60,348,41],[416,87,348,68],[416,89,348,70,"error"],[416,94,348,84],[416,95,348,85],[417,12,349,6],[417,19,349,13],[417,24,349,18],[418,10,350,4],[419,8,351,2],[419,9,351,3],[420,8,351,3],[420,17,339,8,"importHistory"],[420,30,339,21,"importHistory"],[420,31,339,21,"_x10"],[420,35,339,21],[421,10,339,21],[421,17,339,21,"_importHistory"],[421,31,339,21],[421,32,339,21,"apply"],[421,37,339,21],[421,44,339,21,"arguments"],[421,53,339,21],[422,8,339,21],[423,8,339,21],[423,15,339,8,"importHistory"],[423,28,339,21],[424,6,339,21],[425,4,339,21],[426,6,339,21,"key"],[426,9,339,21],[427,6,339,21,"value"],[427,11,339,21],[427,13,353,2],[427,22,353,10,"generateId"],[427,32,353,20,"generateId"],[427,33,353,20],[427,35,353,31],[428,8,354,4],[428,15,354,11],[428,25,354,21,"Date"],[428,29,354,25],[428,30,354,26,"now"],[428,33,354,29],[428,34,354,30],[428,35,354,31],[428,39,354,35,"Math"],[428,43,354,39],[428,44,354,40,"random"],[428,50,354,46],[428,51,354,47],[428,52,354,48],[428,53,354,49,"toString"],[428,61,354,57],[428,62,354,58],[428,64,354,60],[428,65,354,61],[428,66,354,62,"substr"],[428,72,354,68],[428,73,354,69],[428,74,354,70],[428,76,354,72],[428,77,354,73],[428,78,354,74],[428,80,354,76],[429,6,355,2],[431,6,357,2],[432,4,357,2],[433,6,357,2,"key"],[433,9,357,2],[434,6,357,2,"value"],[434,11,357,2],[434,13,358,2],[434,22,358,2,"createCodeChange"],[434,38,358,18,"createCodeChange"],[434,39,358,19,"params"],[434,45,365,3],[434,47,365,17],[435,8,366,4],[435,15,366,4,"Object"],[435,21,366,4],[435,22,366,4,"assign"],[435,28,366,4],[436,10,367,6,"id"],[436,12,367,8],[436,14,367,10],[436,18,367,14],[436,19,367,15,"generateId"],[436,29,367,25],[436,30,367,26],[436,31,367,27],[437,10,368,6,"timestamp"],[437,19,368,15],[437,21,368,17],[437,25,368,21,"Date"],[437,29,368,25],[437,30,368,26],[437,31,368,27],[437,32,368,28,"toISOString"],[437,43,368,39],[437,44,368,40],[438,8,368,41],[438,11,369,9,"params"],[438,17,369,15],[439,6,371,2],[441,6,373,2],[442,4,373,2],[443,6,373,2,"key"],[443,9,373,2],[444,6,373,2,"value"],[444,11,373,2],[445,8,373,2],[445,12,373,2,"_getStatistics"],[445,26,373,2],[445,33,373,2,"_asyncToGenerator2"],[445,51,373,2],[445,52,373,2,"default"],[445,59,373,2],[445,61,374,2],[445,74,374,24],[446,10,374,24],[446,14,374,24,"_history"],[446,22,374,24],[446,24,374,24,"_history$"],[446,33,374,24],[447,10,375,4],[447,14,375,10,"history"],[447,21,375,17],[447,30,375,26],[447,34,375,30],[447,35,375,31,"getHistory"],[447,45,375,41],[447,46,375,42],[447,47,375,43],[448,10,376,4],[448,14,376,10,"active"],[448,20,376,16],[448,23,376,19,"history"],[448,30,376,26],[448,31,376,27,"filter"],[448,37,376,33],[448,38,376,34],[448,48,376,34,"e"],[448,49,376,35],[449,12,376,35],[449,19,376,39,"e"],[449,20,376,40],[449,21,376,41,"status"],[449,27,376,47],[449,32,376,52],[449,40,376,60],[450,10,376,60],[450,12,376,61],[450,13,376,62,"length"],[450,19,376,68],[451,10,377,4],[451,14,377,10,"reverted"],[451,22,377,18],[451,25,377,21,"history"],[451,32,377,28],[451,33,377,29,"filter"],[451,39,377,35],[451,40,377,36],[451,50,377,36,"e"],[451,51,377,37],[452,12,377,37],[452,19,377,41,"e"],[452,20,377,42],[452,21,377,43,"status"],[452,27,377,49],[452,32,377,54],[452,42,377,64],[453,10,377,64],[453,12,377,65],[453,13,377,66,"length"],[453,19,377,72],[454,10,379,4],[454,14,379,10,"changesByType"],[454,27,379,47],[454,30,379,50],[454,31,379,51],[454,32,379,52],[455,10,380,4],[455,14,380,10,"changesBySource"],[455,29,380,49],[455,32,380,52],[455,33,380,53],[455,34,380,54],[456,10,381,4],[456,14,381,10,"fileChanges"],[456,25,381,45],[456,28,381,48],[456,29,381,49],[456,30,381,50],[457,10,382,4],[457,14,382,8,"totalFileSize"],[457,27,382,21],[457,30,382,24],[457,31,382,25],[458,10,384,4,"history"],[458,17,384,11],[458,18,384,12,"forEach"],[458,25,384,19],[458,26,384,20],[458,36,384,20,"entry"],[458,41,384,25],[458,43,384,29],[459,12,385,6,"entry"],[459,17,385,11],[459,18,385,12,"changes"],[459,25,385,19],[459,26,385,20,"forEach"],[459,33,385,27],[459,34,385,28],[459,44,385,28,"change"],[459,50,385,34],[459,52,385,38],[460,14,385,38],[460,18,385,38,"_change$metadata"],[460,34,385,38],[460,36,385,38,"_change$metadata2"],[460,53,385,38],[461,14,386,8,"changesByType"],[461,27,386,21],[461,28,386,22,"change"],[461,34,386,28],[461,35,386,29,"type"],[461,39,386,33],[461,40,386,34],[461,43,386,37],[461,44,386,38,"changesByType"],[461,57,386,51],[461,58,386,52,"change"],[461,64,386,58],[461,65,386,59,"type"],[461,69,386,63],[461,70,386,64],[461,74,386,68],[461,75,386,69],[461,79,386,73],[461,80,386,74],[462,14,387,8],[462,19,387,8,"_change$metadata"],[462,35,387,8],[462,38,387,12,"change"],[462,44,387,18],[462,45,387,19,"metadata"],[462,53,387,27],[462,66,387,12,"_change$metadata"],[462,82,387,12],[462,83,387,29,"source"],[462,89,387,35],[462,91,387,37],[463,16,388,10,"changesBySource"],[463,31,388,25],[463,32,388,26,"change"],[463,38,388,32],[463,39,388,33,"metadata"],[463,47,388,41],[463,48,388,42,"source"],[463,54,388,48],[463,55,388,49],[463,58,388,52],[463,59,388,53,"changesBySource"],[463,74,388,68],[463,75,388,69,"change"],[463,81,388,75],[463,82,388,76,"metadata"],[463,90,388,84],[463,91,388,85,"source"],[463,97,388,91],[463,98,388,92],[463,102,388,96],[463,103,388,97],[463,107,388,101],[463,108,388,102],[464,14,389,8],[466,14,391,8],[467,14,392,8,"fileChanges"],[467,25,392,19],[467,26,392,20,"change"],[467,32,392,26],[467,33,392,27,"filepath"],[467,41,392,35],[467,42,392,36],[467,45,392,39],[467,46,392,40,"fileChanges"],[467,57,392,51],[467,58,392,52,"change"],[467,64,392,58],[467,65,392,59,"filepath"],[467,73,392,67],[467,74,392,68],[467,78,392,72],[467,79,392,73],[467,83,392,77],[467,84,392,78],[468,14,394,8],[468,19,394,8,"_change$metadata2"],[468,36,394,8],[468,39,394,12,"change"],[468,45,394,18],[468,46,394,19,"metadata"],[468,54,394,27],[468,67,394,12,"_change$metadata2"],[468,84,394,12],[468,85,394,29,"fileSize"],[468,93,394,37],[468,95,394,39],[469,16,395,10,"totalFileSize"],[469,29,395,23],[469,33,395,27,"change"],[469,39,395,33],[469,40,395,34,"metadata"],[469,48,395,42],[469,49,395,43,"fileSize"],[469,57,395,51],[470,14,396,8],[471,12,397,6],[471,13,397,7],[471,14,397,8],[472,10,398,4],[472,11,398,5],[472,12,398,6],[473,10,400,4],[473,17,400,11],[474,12,401,6,"total"],[474,17,401,11],[474,19,401,13,"history"],[474,26,401,20],[474,27,401,21,"length"],[474,33,401,27],[475,12,402,6,"active"],[475,18,402,12],[475,20,402,6,"active"],[475,26,402,12],[476,12,403,6,"reverted"],[476,20,403,14],[476,22,403,6,"reverted"],[476,30,403,14],[477,12,404,6,"changesByType"],[477,25,404,19],[477,27,404,6,"changesByType"],[477,40,404,19],[478,12,405,6,"changesBySource"],[478,27,405,21],[478,29,405,6,"changesBySource"],[478,44,405,21],[479,12,406,6,"fileChanges"],[479,23,406,17],[479,25,406,6,"fileChanges"],[479,36,406,17],[480,12,407,6,"totalFileSize"],[480,25,407,19],[480,27,407,6,"totalFileSize"],[480,40,407,19],[481,12,408,6,"mostChangedFiles"],[481,28,408,22],[481,30,408,24,"Object"],[481,36,408,30],[481,37,408,31,"entries"],[481,44,408,38],[481,45,408,39,"fileChanges"],[481,56,408,50],[481,57,408,51],[481,58,409,9,"sort"],[481,62,409,13],[481,63,409,14],[481,73,409,14,"_ref2"],[481,78,409,14],[481,80,409,14,"_ref3"],[481,85,409,14],[482,14,409,14],[482,18,409,14,"_ref4"],[482,23,409,14],[482,30,409,14,"_slicedToArray2"],[482,45,409,14],[482,46,409,14,"default"],[482,53,409,14],[482,55,409,14,"_ref2"],[482,60,409,14],[483,16,409,18,"a"],[483,17,409,19],[483,20,409,19,"_ref4"],[483,25,409,19],[484,14,409,19],[484,18,409,19,"_ref5"],[484,23,409,19],[484,30,409,19,"_slicedToArray2"],[484,45,409,19],[484,46,409,19,"default"],[484,53,409,19],[484,55,409,19,"_ref3"],[484,60,409,19],[485,16,409,25,"b"],[485,17,409,26],[485,20,409,26,"_ref5"],[485,25,409,26],[486,14,409,26],[486,21,409,32,"b"],[486,22,409,33],[486,25,409,36,"a"],[486,26,409,37],[487,12,409,37],[487,14,409,38],[487,15,410,9,"slice"],[487,20,410,14],[487,21,410,15],[487,22,410,16],[487,24,410,18],[487,25,410,19],[487,26,410,20],[487,27,411,9,"map"],[487,30,411,12],[487,31,411,13],[487,41,411,13,"_ref6"],[487,46,411,13],[488,14,411,13],[488,18,411,13,"_ref7"],[488,23,411,13],[488,30,411,13,"_slicedToArray2"],[488,45,411,13],[488,46,411,13,"default"],[488,53,411,13],[488,55,411,13,"_ref6"],[488,60,411,13],[489,16,411,15,"file"],[489,20,411,19],[489,23,411,19,"_ref7"],[489,28,411,19],[490,16,411,21,"count"],[490,21,411,26],[490,24,411,26,"_ref7"],[490,29,411,26],[491,14,411,26],[491,21,411,33],[492,16,411,35,"file"],[492,20,411,39],[492,22,411,35,"file"],[492,26,411,39],[493,16,411,41,"count"],[493,21,411,46],[493,23,411,41,"count"],[494,14,411,47],[494,15,411,48],[495,12,411,48],[495,13,411,49],[495,14,411,50],[496,12,412,6,"oldestChange"],[496,24,412,18],[496,27,412,18,"_history"],[496,35,412,18],[496,38,412,20,"history"],[496,45,412,27],[496,46,412,28,"history"],[496,53,412,35],[496,54,412,36,"length"],[496,60,412,42],[496,63,412,45],[496,64,412,46],[496,65,412,47],[496,86,412,20,"_history"],[496,94,412,20],[496,95,412,49,"timestamp"],[496,104,412,58],[497,12,413,6,"newestChange"],[497,24,413,18],[497,27,413,18,"_history$"],[497,36,413,18],[497,39,413,20,"history"],[497,46,413,27],[497,47,413,28],[497,48,413,29],[497,49,413,30],[497,70,413,20,"_history$"],[497,79,413,20],[497,80,413,32,"timestamp"],[498,10,414,4],[498,11,414,5],[499,8,415,2],[499,9,415,3],[500,8,415,3],[500,17,374,8,"getStatistics"],[500,30,374,21,"getStatistics"],[500,31,374,21],[501,10,374,21],[501,17,374,21,"_getStatistics"],[501,31,374,21],[501,32,374,21,"apply"],[501,37,374,21],[501,44,374,21,"arguments"],[501,53,374,21],[502,8,374,21],[503,8,374,21],[503,15,374,8,"getStatistics"],[503,28,374,21],[504,6,374,21],[504,10,417,2],[505,4,417,2],[506,6,417,2,"key"],[506,9,417,2],[507,6,417,2,"value"],[507,11,417,2],[508,8,417,2],[508,12,417,2,"_trackFileOperation"],[508,31,417,2],[508,38,417,2,"_asyncToGenerator2"],[508,56,417,2],[508,57,417,2,"default"],[508,64,417,2],[508,66,418,2],[508,77,418,27,"operation"],[508,86,425,3],[508,88,425,20],[509,10,425,20],[509,14,425,20,"_operation$content"],[509,32,425,20],[509,34,425,20,"_operation$content2"],[509,53,425,20],[510,10,426,4],[510,14,426,10,"change"],[510,20,426,16],[510,23,426,19],[510,27,426,23],[510,28,426,24,"createCodeChange"],[510,44,426,40],[510,45,426,41],[511,12,427,6,"type"],[511,16,427,10],[511,18,427,12,"operation"],[511,27,427,21],[511,28,427,22,"type"],[511,32,427,26],[511,37,427,31],[511,45,427,39],[511,48,427,42],[511,62,427,56],[511,65,428,12,"operation"],[511,74,428,21],[511,75,428,22,"type"],[511,79,428,26],[511,84,428,31],[511,92,428,39],[511,95,428,42],[511,110,428,57],[511,113,428,60],[511,127,428,74],[512,12,429,6,"filepath"],[512,20,429,14],[512,22,429,16,"operation"],[512,31,429,25],[512,32,429,26,"filepath"],[512,40,429,34],[513,12,430,6,"description"],[513,23,430,17],[513,25,430,19,"operation"],[513,34,430,28],[513,35,430,29,"description"],[513,46,430,40],[514,12,431,6,"newContent"],[514,22,431,16],[514,24,431,18,"operation"],[514,33,431,27],[514,34,431,28,"content"],[514,41,431,35],[515,12,432,6,"metadata"],[515,20,432,14],[515,22,432,16],[516,14,433,8,"feature"],[516,21,433,15],[516,23,433,17,"operation"],[516,32,433,26],[516,33,433,27,"feature"],[516,40,433,34],[517,14,434,8,"source"],[517,20,434,14],[517,22,434,16,"operation"],[517,31,434,25],[517,32,434,26,"source"],[517,38,434,32],[517,42,434,36],[517,50,434,44],[518,14,435,8,"fileSize"],[518,22,435,16],[518,25,435,16,"_operation$content"],[518,43,435,16],[518,46,435,18,"operation"],[518,55,435,27],[518,56,435,28,"content"],[518,63,435,35],[518,84,435,18,"_operation$content"],[518,102,435,18],[518,103,435,37,"length"],[518,109,435,43],[519,14,436,8,"lineCount"],[519,23,436,17],[519,26,436,17,"_operation$content2"],[519,45,436,17],[519,48,436,19,"operation"],[519,57,436,28],[519,58,436,29,"content"],[519,65,436,36],[519,86,436,19,"_operation$content2"],[519,105,436,19],[519,106,436,38,"split"],[519,111,436,43],[519,112,436,44],[519,116,436,48],[519,117,436,49],[519,118,436,50,"length"],[520,12,437,6],[521,10,438,4],[521,11,438,5],[521,12,438,6],[522,10,440,4],[522,16,440,10],[522,20,440,14],[522,21,440,15,"recordChange"],[522,33,440,27],[522,34,440,28],[523,12,441,6,"feature"],[523,19,441,13],[523,21,441,15,"operation"],[523,30,441,24],[523,31,441,25,"feature"],[523,38,441,32],[524,12,442,6,"description"],[524,23,442,17],[524,25,442,19,"operation"],[524,34,442,28],[524,35,442,29,"description"],[524,46,442,40],[525,12,443,6,"changes"],[525,19,443,13],[525,21,443,15],[525,22,443,16,"change"],[525,28,443,22],[526,10,444,4],[526,11,444,5],[526,12,444,6],[527,8,445,2],[527,9,445,3],[528,8,445,3],[528,17,418,8,"trackFileOperation"],[528,35,418,26,"trackFileOperation"],[528,36,418,26,"_x11"],[528,40,418,26],[529,10,418,26],[529,17,418,26,"_trackFileOperation"],[529,36,418,26],[529,37,418,26,"apply"],[529,42,418,26],[529,49,418,26,"arguments"],[529,58,418,26],[530,8,418,26],[531,8,418,26],[531,15,418,8,"trackFileOperation"],[531,33,418,26],[532,6,418,26],[533,4,418,26],[534,6,418,26,"key"],[534,9,418,26],[535,6,418,26,"value"],[535,11,418,26],[535,13,41,2],[535,22,41,9,"getInstance"],[535,33,41,20,"getInstance"],[535,34,41,20],[535,36,41,45],[536,8,42,4],[536,12,42,8],[536,13,42,9,"ChangeHistoryService"],[536,33,42,29],[536,34,42,30,"instance"],[536,42,42,38],[536,44,42,40],[537,10,43,6,"ChangeHistoryService"],[537,30,43,26],[537,31,43,27,"instance"],[537,39,43,35],[537,42,43,38],[537,46,43,42,"ChangeHistoryService"],[537,66,43,62],[537,67,43,63],[537,68,43,64],[538,10,44,6,"ChangeHistoryService"],[538,30,44,26],[538,31,44,27,"instance"],[538,39,44,35],[538,40,44,36,"initializeBackupDirectory"],[538,65,44,61],[538,66,44,62],[538,67,44,63],[539,8,45,4],[540,8,46,4],[540,15,46,11,"ChangeHistoryService"],[540,35,46,31],[540,36,46,32,"instance"],[540,44,46,40],[541,6,47,2],[542,4,47,3],[543,2,47,3],[544,2,47,3],[544,6,47,3,"_default"],[544,14,47,3],[544,17,47,3,"exports"],[544,24,47,3],[544,25,47,3,"default"],[544,32,47,3],[544,35,448,15,"ChangeHistoryService"],[544,55,448,35],[545,0,448,35],[545,3]],"functionMap":{"names":["<global>","ChangeHistoryService","getInstance","initializeBackupDirectory","recordChange","entry.changes.map$argument_0","createFileBackup","readFileContent","cleanupBackups","getHistory","getActiveChanges","history.filter$argument_0","getChangeById","history.find$argument_0","revertChange","history.findIndex$argument_0","performRevert","generateRevertReport","results.forEach$argument_0","createSnapshot","restoreSnapshot","clearHistory","exportHistory","importHistory","generateId","createCodeChange","getStatistics","history.forEach$argument_0","entry.changes.forEach$argument_0","Object.entries.sort$argument_0","Object.entries.sort.slice.map$argument_0","trackFileOperation"],"mappings":"AAA;ACiC;ECO;GDM;EEE;GFS;EGE;0BCO;SDU;GH2B;EKE;GLgB;EME;GNK;EOE;GPY;EQE;GRQ;ESE;0BCE,kCD;GTC;EWE;wBCE,wBD;GXC;EaE;2CCU,wBD;GbiC;EeE;GfyD;EgBE;oBCS;KDQ;GhBI;EkBG;GlBY;EmBG;GnBgB;EoBE;GpBM;EqBE;GrBG;EsBE;GtBY;EuBE;GvBE;EwBG;GxBa;EyBG;kCfE,0Be;oCfC,4Be;oBCO;4BCC;ODY;KDC;cGW,uBH;aIE,oCJ;GzBI;E8BG;G9B2B;CDC"}},"type":"js/module"}]}