{"dependencies":[{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":17,"index":96},"end":{"line":6,"column":39,"index":118}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  exports.__esModule = true;\n  exports.default = createPersistoid;\n  var _constants = require(_dependencyMap[0]);\n\n  // @TODO remove once flow < 0.63 support is no longer required.\n  function createPersistoid(config) {\n    // defaults\n    var blacklist = config.blacklist || null;\n    var whitelist = config.whitelist || null;\n    var transforms = config.transforms || [];\n    var throttle = config.throttle || 0;\n    var storageKey = \"\".concat(config.keyPrefix !== undefined ? config.keyPrefix : _constants.KEY_PREFIX).concat(config.key);\n    var storage = config.storage;\n    var serialize;\n    if (config.serialize === false) {\n      serialize = function serialize(x) {\n        return x;\n      };\n    } else if (typeof config.serialize === 'function') {\n      serialize = config.serialize;\n    } else {\n      serialize = defaultSerialize;\n    }\n    var writeFailHandler = config.writeFailHandler || null; // initialize stateful values\n\n    var lastState = {};\n    var stagedState = {};\n    var keysToProcess = [];\n    var timeIterator = null;\n    var writePromise = null;\n    var update = function update(state) {\n      // add any changed keys to the queue\n      Object.keys(state).forEach(function (key) {\n        if (!passWhitelistBlacklist(key)) return; // is keyspace ignored? noop\n\n        if (lastState[key] === state[key]) return; // value unchanged? noop\n\n        if (keysToProcess.indexOf(key) !== -1) return; // is key already queued? noop\n\n        keysToProcess.push(key); // add key to queue\n      }); //if any key is missing in the new state which was present in the lastState,\n      //add it for processing too\n\n      Object.keys(lastState).forEach(function (key) {\n        if (state[key] === undefined && passWhitelistBlacklist(key) && keysToProcess.indexOf(key) === -1 && lastState[key] !== undefined) {\n          keysToProcess.push(key);\n        }\n      }); // start the time iterator if not running (read: throttle)\n\n      if (timeIterator === null) {\n        timeIterator = setInterval(processNextKey, throttle);\n      }\n      lastState = state;\n    };\n    function processNextKey() {\n      if (keysToProcess.length === 0) {\n        if (timeIterator) clearInterval(timeIterator);\n        timeIterator = null;\n        return;\n      }\n      var key = keysToProcess.shift();\n      var endState = transforms.reduce(function (subState, transformer) {\n        return transformer.in(subState, key, lastState);\n      }, lastState[key]);\n      if (endState !== undefined) {\n        try {\n          stagedState[key] = serialize(endState);\n        } catch (err) {}\n      } else {\n        //if the endState is undefined, no need to persist the existing serialized content\n        delete stagedState[key];\n      }\n      if (keysToProcess.length === 0) {\n        writeStagedState();\n      }\n    }\n    function writeStagedState() {\n      // cleanup any removed keys just before write.\n      Object.keys(stagedState).forEach(function (key) {\n        if (lastState[key] === undefined) {\n          delete stagedState[key];\n        }\n      });\n      writePromise = storage.setItem(storageKey, serialize(stagedState)).catch(onWriteFail);\n    }\n    function passWhitelistBlacklist(key) {\n      if (whitelist && whitelist.indexOf(key) === -1 && key !== '_persist') return false;\n      if (blacklist && blacklist.indexOf(key) !== -1) return false;\n      return true;\n    }\n    function onWriteFail(err) {\n      // @TODO add fail handlers (typically storage full)\n      if (writeFailHandler) writeFailHandler(err);\n      if (err && false) {}\n    }\n    var flush = function flush() {\n      while (keysToProcess.length !== 0) {\n        processNextKey();\n      }\n      return writePromise || Promise.resolve();\n    }; // return `persistoid`\n\n    return {\n      update: update,\n      flush: flush\n    };\n  } // @NOTE in the future this may be exposed via config\n\n  function defaultSerialize(data) {\n    return JSON.stringify(data);\n  }\n});","lineCount":115,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"exports"],[4,9,3,7],[4,10,3,8,"__esModule"],[4,20,3,18],[4,23,3,21],[4,27,3,25],[5,2,4,0,"exports"],[5,9,4,7],[5,10,4,8,"default"],[5,17,4,15],[5,20,4,18,"createPersistoid"],[5,36,4,34],[6,2,6,0],[6,6,6,4,"_constants"],[6,16,6,14],[6,19,6,17,"require"],[6,26,6,24],[6,27,6,24,"_dependencyMap"],[6,41,6,24],[6,44,6,38],[6,45,6,39],[8,2,8,0],[9,2,9,0],[9,11,9,9,"createPersistoid"],[9,27,9,25,"createPersistoid"],[9,28,9,26,"config"],[9,34,9,32],[9,36,9,34],[10,4,10,2],[11,4,11,2],[11,8,11,6,"blacklist"],[11,17,11,15],[11,20,11,18,"config"],[11,26,11,24],[11,27,11,25,"blacklist"],[11,36,11,34],[11,40,11,38],[11,44,11,42],[12,4,12,2],[12,8,12,6,"whitelist"],[12,17,12,15],[12,20,12,18,"config"],[12,26,12,24],[12,27,12,25,"whitelist"],[12,36,12,34],[12,40,12,38],[12,44,12,42],[13,4,13,2],[13,8,13,6,"transforms"],[13,18,13,16],[13,21,13,19,"config"],[13,27,13,25],[13,28,13,26,"transforms"],[13,38,13,36],[13,42,13,40],[13,44,13,42],[14,4,14,2],[14,8,14,6,"throttle"],[14,16,14,14],[14,19,14,17,"config"],[14,25,14,23],[14,26,14,24,"throttle"],[14,34,14,32],[14,38,14,36],[14,39,14,37],[15,4,15,2],[15,8,15,6,"storageKey"],[15,18,15,16],[15,21,15,19],[15,23,15,21],[15,24,15,22,"concat"],[15,30,15,28],[15,31,15,29,"config"],[15,37,15,35],[15,38,15,36,"keyPrefix"],[15,47,15,45],[15,52,15,50,"undefined"],[15,61,15,59],[15,64,15,62,"config"],[15,70,15,68],[15,71,15,69,"keyPrefix"],[15,80,15,78],[15,83,15,81,"_constants"],[15,93,15,91],[15,94,15,92,"KEY_PREFIX"],[15,104,15,102],[15,105,15,103],[15,106,15,104,"concat"],[15,112,15,110],[15,113,15,111,"config"],[15,119,15,117],[15,120,15,118,"key"],[15,123,15,121],[15,124,15,122],[16,4,16,2],[16,8,16,6,"storage"],[16,15,16,13],[16,18,16,16,"config"],[16,24,16,22],[16,25,16,23,"storage"],[16,32,16,30],[17,4,17,2],[17,8,17,6,"serialize"],[17,17,17,15],[18,4,19,2],[18,8,19,6,"config"],[18,14,19,12],[18,15,19,13,"serialize"],[18,24,19,22],[18,29,19,27],[18,34,19,32],[18,36,19,34],[19,6,20,4,"serialize"],[19,15,20,13],[19,18,20,16],[19,27,20,25,"serialize"],[19,36,20,34,"serialize"],[19,37,20,35,"x"],[19,38,20,36],[19,40,20,38],[20,8,21,6],[20,15,21,13,"x"],[20,16,21,14],[21,6,22,4],[21,7,22,5],[22,4,23,2],[22,5,23,3],[22,11,23,9],[22,15,23,13],[22,22,23,20,"config"],[22,28,23,26],[22,29,23,27,"serialize"],[22,38,23,36],[22,43,23,41],[22,53,23,51],[22,55,23,53],[23,6,24,4,"serialize"],[23,15,24,13],[23,18,24,16,"config"],[23,24,24,22],[23,25,24,23,"serialize"],[23,34,24,32],[24,4,25,2],[24,5,25,3],[24,11,25,9],[25,6,26,4,"serialize"],[25,15,26,13],[25,18,26,16,"defaultSerialize"],[25,34,26,32],[26,4,27,2],[27,4,29,2],[27,8,29,6,"writeFailHandler"],[27,24,29,22],[27,27,29,25,"config"],[27,33,29,31],[27,34,29,32,"writeFailHandler"],[27,50,29,48],[27,54,29,52],[27,58,29,56],[27,59,29,57],[27,60,29,58],[29,4,31,2],[29,8,31,6,"lastState"],[29,17,31,15],[29,20,31,18],[29,21,31,19],[29,22,31,20],[30,4,32,2],[30,8,32,6,"stagedState"],[30,19,32,17],[30,22,32,20],[30,23,32,21],[30,24,32,22],[31,4,33,2],[31,8,33,6,"keysToProcess"],[31,21,33,19],[31,24,33,22],[31,26,33,24],[32,4,34,2],[32,8,34,6,"timeIterator"],[32,20,34,18],[32,23,34,21],[32,27,34,25],[33,4,35,2],[33,8,35,6,"writePromise"],[33,20,35,18],[33,23,35,21],[33,27,35,25],[34,4,37,2],[34,8,37,6,"update"],[34,14,37,12],[34,17,37,15],[34,26,37,24,"update"],[34,32,37,30,"update"],[34,33,37,31,"state"],[34,38,37,36],[34,40,37,38],[35,6,38,4],[36,6,39,4,"Object"],[36,12,39,10],[36,13,39,11,"keys"],[36,17,39,15],[36,18,39,16,"state"],[36,23,39,21],[36,24,39,22],[36,25,39,23,"forEach"],[36,32,39,30],[36,33,39,31],[36,43,39,41,"key"],[36,46,39,44],[36,48,39,46],[37,8,40,6],[37,12,40,10],[37,13,40,11,"passWhitelistBlacklist"],[37,35,40,33],[37,36,40,34,"key"],[37,39,40,37],[37,40,40,38],[37,42,40,40],[37,49,40,47],[37,50,40,48],[39,8,42,6],[39,12,42,10,"lastState"],[39,21,42,19],[39,22,42,20,"key"],[39,25,42,23],[39,26,42,24],[39,31,42,29,"state"],[39,36,42,34],[39,37,42,35,"key"],[39,40,42,38],[39,41,42,39],[39,43,42,41],[39,50,42,48],[39,51,42,49],[41,8,44,6],[41,12,44,10,"keysToProcess"],[41,25,44,23],[41,26,44,24,"indexOf"],[41,33,44,31],[41,34,44,32,"key"],[41,37,44,35],[41,38,44,36],[41,45,44,43],[41,47,44,45],[41,54,44,52],[41,55,44,53],[43,8,46,6,"keysToProcess"],[43,21,46,19],[43,22,46,20,"push"],[43,26,46,24],[43,27,46,25,"key"],[43,30,46,28],[43,31,46,29],[43,32,46,30],[43,33,46,31],[44,6,47,4],[44,7,47,5],[44,8,47,6],[44,9,47,7],[44,10,47,8],[45,6,48,4],[47,6,50,4,"Object"],[47,12,50,10],[47,13,50,11,"keys"],[47,17,50,15],[47,18,50,16,"lastState"],[47,27,50,25],[47,28,50,26],[47,29,50,27,"forEach"],[47,36,50,34],[47,37,50,35],[47,47,50,45,"key"],[47,50,50,48],[47,52,50,50],[48,8,51,6],[48,12,51,10,"state"],[48,17,51,15],[48,18,51,16,"key"],[48,21,51,19],[48,22,51,20],[48,27,51,25,"undefined"],[48,36,51,34],[48,40,51,38,"passWhitelistBlacklist"],[48,62,51,60],[48,63,51,61,"key"],[48,66,51,64],[48,67,51,65],[48,71,51,69,"keysToProcess"],[48,84,51,82],[48,85,51,83,"indexOf"],[48,92,51,90],[48,93,51,91,"key"],[48,96,51,94],[48,97,51,95],[48,104,51,102],[48,108,51,106,"lastState"],[48,117,51,115],[48,118,51,116,"key"],[48,121,51,119],[48,122,51,120],[48,127,51,125,"undefined"],[48,136,51,134],[48,138,51,136],[49,10,52,8,"keysToProcess"],[49,23,52,21],[49,24,52,22,"push"],[49,28,52,26],[49,29,52,27,"key"],[49,32,52,30],[49,33,52,31],[50,8,53,6],[51,6,54,4],[51,7,54,5],[51,8,54,6],[51,9,54,7],[51,10,54,8],[53,6,56,4],[53,10,56,8,"timeIterator"],[53,22,56,20],[53,27,56,25],[53,31,56,29],[53,33,56,31],[54,8,57,6,"timeIterator"],[54,20,57,18],[54,23,57,21,"setInterval"],[54,34,57,32],[54,35,57,33,"processNextKey"],[54,49,57,47],[54,51,57,49,"throttle"],[54,59,57,57],[54,60,57,58],[55,6,58,4],[56,6,60,4,"lastState"],[56,15,60,13],[56,18,60,16,"state"],[56,23,60,21],[57,4,61,2],[57,5,61,3],[58,4,63,2],[58,13,63,11,"processNextKey"],[58,27,63,25,"processNextKey"],[58,28,63,25],[58,30,63,28],[59,6,64,4],[59,10,64,8,"keysToProcess"],[59,23,64,21],[59,24,64,22,"length"],[59,30,64,28],[59,35,64,33],[59,36,64,34],[59,38,64,36],[60,8,65,6],[60,12,65,10,"timeIterator"],[60,24,65,22],[60,26,65,24,"clearInterval"],[60,39,65,37],[60,40,65,38,"timeIterator"],[60,52,65,50],[60,53,65,51],[61,8,66,6,"timeIterator"],[61,20,66,18],[61,23,66,21],[61,27,66,25],[62,8,67,6],[63,6,68,4],[64,6,70,4],[64,10,70,8,"key"],[64,13,70,11],[64,16,70,14,"keysToProcess"],[64,29,70,27],[64,30,70,28,"shift"],[64,35,70,33],[64,36,70,34],[64,37,70,35],[65,6,71,4],[65,10,71,8,"endState"],[65,18,71,16],[65,21,71,19,"transforms"],[65,31,71,29],[65,32,71,30,"reduce"],[65,38,71,36],[65,39,71,37],[65,49,71,47,"subState"],[65,57,71,55],[65,59,71,57,"transformer"],[65,70,71,68],[65,72,71,70],[66,8,72,6],[66,15,72,13,"transformer"],[66,26,72,24],[66,27,72,25,"in"],[66,29,72,27],[66,30,72,28,"subState"],[66,38,72,36],[66,40,72,38,"key"],[66,43,72,41],[66,45,72,43,"lastState"],[66,54,72,52],[66,55,72,53],[67,6,73,4],[67,7,73,5],[67,9,73,7,"lastState"],[67,18,73,16],[67,19,73,17,"key"],[67,22,73,20],[67,23,73,21],[67,24,73,22],[68,6,75,4],[68,10,75,8,"endState"],[68,18,75,16],[68,23,75,21,"undefined"],[68,32,75,30],[68,34,75,32],[69,8,76,6],[69,12,76,10],[70,10,77,8,"stagedState"],[70,21,77,19],[70,22,77,20,"key"],[70,25,77,23],[70,26,77,24],[70,29,77,27,"serialize"],[70,38,77,36],[70,39,77,37,"endState"],[70,47,77,45],[70,48,77,46],[71,8,78,6],[71,9,78,7],[71,10,78,8],[71,17,78,15,"err"],[71,20,78,18],[71,22,78,20],[71,23,80,6],[72,6,81,4],[72,7,81,5],[72,13,81,11],[73,8,82,6],[74,8,83,6],[74,15,83,13,"stagedState"],[74,26,83,24],[74,27,83,25,"key"],[74,30,83,28],[74,31,83,29],[75,6,84,4],[76,6,86,4],[76,10,86,8,"keysToProcess"],[76,23,86,21],[76,24,86,22,"length"],[76,30,86,28],[76,35,86,33],[76,36,86,34],[76,38,86,36],[77,8,87,6,"writeStagedState"],[77,24,87,22],[77,25,87,23],[77,26,87,24],[78,6,88,4],[79,4,89,2],[80,4,91,2],[80,13,91,11,"writeStagedState"],[80,29,91,27,"writeStagedState"],[80,30,91,27],[80,32,91,30],[81,6,92,4],[82,6,93,4,"Object"],[82,12,93,10],[82,13,93,11,"keys"],[82,17,93,15],[82,18,93,16,"stagedState"],[82,29,93,27],[82,30,93,28],[82,31,93,29,"forEach"],[82,38,93,36],[82,39,93,37],[82,49,93,47,"key"],[82,52,93,50],[82,54,93,52],[83,8,94,6],[83,12,94,10,"lastState"],[83,21,94,19],[83,22,94,20,"key"],[83,25,94,23],[83,26,94,24],[83,31,94,29,"undefined"],[83,40,94,38],[83,42,94,40],[84,10,95,8],[84,17,95,15,"stagedState"],[84,28,95,26],[84,29,95,27,"key"],[84,32,95,30],[84,33,95,31],[85,8,96,6],[86,6,97,4],[86,7,97,5],[86,8,97,6],[87,6,98,4,"writePromise"],[87,18,98,16],[87,21,98,19,"storage"],[87,28,98,26],[87,29,98,27,"setItem"],[87,36,98,34],[87,37,98,35,"storageKey"],[87,47,98,45],[87,49,98,47,"serialize"],[87,58,98,56],[87,59,98,57,"stagedState"],[87,70,98,68],[87,71,98,69],[87,72,98,70],[87,73,98,71,"catch"],[87,78,98,76],[87,79,98,77,"onWriteFail"],[87,90,98,88],[87,91,98,89],[88,4,99,2],[89,4,101,2],[89,13,101,11,"passWhitelistBlacklist"],[89,35,101,33,"passWhitelistBlacklist"],[89,36,101,34,"key"],[89,39,101,37],[89,41,101,39],[90,6,102,4],[90,10,102,8,"whitelist"],[90,19,102,17],[90,23,102,21,"whitelist"],[90,32,102,30],[90,33,102,31,"indexOf"],[90,40,102,38],[90,41,102,39,"key"],[90,44,102,42],[90,45,102,43],[90,52,102,50],[90,56,102,54,"key"],[90,59,102,57],[90,64,102,62],[90,74,102,72],[90,76,102,74],[90,83,102,81],[90,88,102,86],[91,6,103,4],[91,10,103,8,"blacklist"],[91,19,103,17],[91,23,103,21,"blacklist"],[91,32,103,30],[91,33,103,31,"indexOf"],[91,40,103,38],[91,41,103,39,"key"],[91,44,103,42],[91,45,103,43],[91,52,103,50],[91,54,103,52],[91,61,103,59],[91,66,103,64],[92,6,104,4],[92,13,104,11],[92,17,104,15],[93,4,105,2],[94,4,107,2],[94,13,107,11,"onWriteFail"],[94,24,107,22,"onWriteFail"],[94,25,107,23,"err"],[94,28,107,26],[94,30,107,28],[95,6,108,4],[96,6,109,4],[96,10,109,8,"writeFailHandler"],[96,26,109,24],[96,28,109,26,"writeFailHandler"],[96,44,109,42],[96,45,109,43,"err"],[96,48,109,46],[96,49,109,47],[97,6,111,4],[97,10,111,8,"err"],[97,13,111,11],[97,22,111,52],[97,24,111,54],[97,25,113,4],[98,4,114,2],[99,4,116,2],[99,8,116,6,"flush"],[99,13,116,11],[99,16,116,14],[99,25,116,23,"flush"],[99,30,116,28,"flush"],[99,31,116,28],[99,33,116,31],[100,6,117,4],[100,13,117,11,"keysToProcess"],[100,26,117,24],[100,27,117,25,"length"],[100,33,117,31],[100,38,117,36],[100,39,117,37],[100,41,117,39],[101,8,118,6,"processNextKey"],[101,22,118,20],[101,23,118,21],[101,24,118,22],[102,6,119,4],[103,6,121,4],[103,13,121,11,"writePromise"],[103,25,121,23],[103,29,121,27,"Promise"],[103,36,121,34],[103,37,121,35,"resolve"],[103,44,121,42],[103,45,121,43],[103,46,121,44],[104,4,122,2],[104,5,122,3],[104,6,122,4],[104,7,122,5],[106,4,125,2],[106,11,125,9],[107,6,126,4,"update"],[107,12,126,10],[107,14,126,12,"update"],[107,20,126,18],[108,6,127,4,"flush"],[108,11,127,9],[108,13,127,11,"flush"],[109,4,128,2],[109,5,128,3],[110,2,129,0],[110,3,129,1],[110,4,129,2],[112,2,132,0],[112,11,132,9,"defaultSerialize"],[112,27,132,25,"defaultSerialize"],[112,28,132,26,"data"],[112,32,132,30],[112,34,132,32],[113,4,133,2],[113,11,133,9,"JSON"],[113,15,133,13],[113,16,133,14,"stringify"],[113,25,133,23],[113,26,133,24,"data"],[113,30,133,28],[113,31,133,29],[114,2,134,0],[115,0,134,1],[115,3]],"functionMap":{"names":["<global>","createPersistoid","serialize","update","Object.keys.forEach$argument_0","processNextKey","transforms.reduce$argument_0","writeStagedState","passWhitelistBlacklist","onWriteFail","flush","defaultSerialize"],"mappings":"AAA;ACQ;gBCW;KDE;eEe;+BCE;KDQ;mCCG;KDI;GFO;EIE;qCCQ;KDE;GJgB;EME;qCHE;KGI;GNE;EOE;GPI;EQE;GRO;cSE;GTM;CDO;AWG"}},"type":"js/module"}]}