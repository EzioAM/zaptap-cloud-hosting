{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"]}},{"name":"./createHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":83},"end":{"line":2,"column":44,"index":127}}],"key":"j9sUgJL2drnBoAedJuo4/l2ILqw=","exportNames":["*"]}},{"name":"./gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":128},"end":{"line":6,"column":32,"index":223}}],"key":"M3YJtGPnWOlAL/cGsCkMRGpSLhc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PanGestureHandler = void 0;\n  exports.managePanProps = managePanProps;\n  exports.panHandlerName = exports.panGestureHandlerProps = exports.panGestureHandlerCustomNativeProps = void 0;\n  var _toConsumableArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _createHandler = _interopRequireDefault(require(_dependencyMap[2], \"./createHandler\"));\n  var _gestureHandlerCommon = require(_dependencyMap[3], \"./gestureHandlerCommon\");\n  var panGestureHandlerProps = exports.panGestureHandlerProps = ['activeOffsetY', 'activeOffsetX', 'failOffsetY', 'failOffsetX', 'minDist', 'minVelocity', 'minVelocityX', 'minVelocityY', 'minPointers', 'maxPointers', 'avgTouches', 'enableTrackpadTwoFingerGesture', 'activateAfterLongPress'];\n  var panGestureHandlerCustomNativeProps = exports.panGestureHandlerCustomNativeProps = ['activeOffsetYStart', 'activeOffsetYEnd', 'activeOffsetXStart', 'activeOffsetXEnd', 'failOffsetYStart', 'failOffsetYEnd', 'failOffsetXStart', 'failOffsetXEnd'];\n\n  /**\n   * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n   */\n\n  var panHandlerName = exports.panHandlerName = 'PanGestureHandler';\n\n  /**\n   * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n   */\n\n  /**\n   * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\n  var PanGestureHandler = exports.PanGestureHandler = (0, _createHandler.default)({\n    name: panHandlerName,\n    allowedProps: [].concat((0, _toConsumableArray2.default)(_gestureHandlerCommon.baseGestureHandlerProps), panGestureHandlerProps),\n    config: {},\n    transformProps: managePanProps,\n    customNativeProps: panGestureHandlerCustomNativeProps\n  });\n  function validatePanGestureHandlerProps(props) {\n    if (Array.isArray(props.activeOffsetX) && (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)) {\n      throw new Error(`First element of activeOffsetX should be negative, a the second one should be positive`);\n    }\n    if (Array.isArray(props.activeOffsetY) && (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)) {\n      throw new Error(`First element of activeOffsetY should be negative, a the second one should be positive`);\n    }\n    if (Array.isArray(props.failOffsetX) && (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)) {\n      throw new Error(`First element of failOffsetX should be negative, a the second one should be positive`);\n    }\n    if (Array.isArray(props.failOffsetY) && (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)) {\n      throw new Error(`First element of failOffsetY should be negative, a the second one should be positive`);\n    }\n    if (props.minDist && (props.failOffsetX || props.failOffsetY)) {\n      throw new Error(`It is not supported to use minDist with failOffsetX or failOffsetY, use activeOffsetX and activeOffsetY instead`);\n    }\n    if (props.minDist && (props.activeOffsetX || props.activeOffsetY)) {\n      throw new Error(`It is not supported to use minDist with activeOffsetX or activeOffsetY`);\n    }\n  }\n  function transformPanGestureHandlerProps(props) {\n    var res = Object.assign({}, props);\n    if (props.activeOffsetX !== undefined) {\n      delete res.activeOffsetX;\n      if (Array.isArray(props.activeOffsetX)) {\n        res.activeOffsetXStart = props.activeOffsetX[0];\n        res.activeOffsetXEnd = props.activeOffsetX[1];\n      } else if (props.activeOffsetX < 0) {\n        res.activeOffsetXStart = props.activeOffsetX;\n      } else {\n        res.activeOffsetXEnd = props.activeOffsetX;\n      }\n    }\n    if (props.activeOffsetY !== undefined) {\n      delete res.activeOffsetY;\n      if (Array.isArray(props.activeOffsetY)) {\n        res.activeOffsetYStart = props.activeOffsetY[0];\n        res.activeOffsetYEnd = props.activeOffsetY[1];\n      } else if (props.activeOffsetY < 0) {\n        res.activeOffsetYStart = props.activeOffsetY;\n      } else {\n        res.activeOffsetYEnd = props.activeOffsetY;\n      }\n    }\n    if (props.failOffsetX !== undefined) {\n      delete res.failOffsetX;\n      if (Array.isArray(props.failOffsetX)) {\n        res.failOffsetXStart = props.failOffsetX[0];\n        res.failOffsetXEnd = props.failOffsetX[1];\n      } else if (props.failOffsetX < 0) {\n        res.failOffsetXStart = props.failOffsetX;\n      } else {\n        res.failOffsetXEnd = props.failOffsetX;\n      }\n    }\n    if (props.failOffsetY !== undefined) {\n      delete res.failOffsetY;\n      if (Array.isArray(props.failOffsetY)) {\n        res.failOffsetYStart = props.failOffsetY[0];\n        res.failOffsetYEnd = props.failOffsetY[1];\n      } else if (props.failOffsetY < 0) {\n        res.failOffsetYStart = props.failOffsetY;\n      } else {\n        res.failOffsetYEnd = props.failOffsetY;\n      }\n    }\n    return res;\n  }\n  function managePanProps(props) {\n    if (__DEV__) {\n      validatePanGestureHandlerProps(props);\n    }\n    return transformPanGestureHandlerProps(props);\n  }\n});","lineCount":110,"map":[[10,2,2,0],[10,6,2,0,"_createHandler"],[10,20,2,0],[10,23,2,0,"_interopRequireDefault"],[10,45,2,0],[10,46,2,0,"require"],[10,53,2,0],[10,54,2,0,"_dependencyMap"],[10,68,2,0],[11,2,3,0],[11,6,3,0,"_gestureHandlerCommon"],[11,27,3,0],[11,30,3,0,"require"],[11,37,3,0],[11,38,3,0,"_dependencyMap"],[11,52,3,0],[12,2,8,7],[12,6,8,13,"panGestureHandlerProps"],[12,28,8,35],[12,31,8,35,"exports"],[12,38,8,35],[12,39,8,35,"panGestureHandlerProps"],[12,61,8,35],[12,64,8,38],[12,65,9,2],[12,80,9,17],[12,82,10,2],[12,97,10,17],[12,99,11,2],[12,112,11,15],[12,114,12,2],[12,127,12,15],[12,129,13,2],[12,138,13,11],[12,140,14,2],[12,153,14,15],[12,155,15,2],[12,169,15,16],[12,171,16,2],[12,185,16,16],[12,187,17,2],[12,200,17,15],[12,202,18,2],[12,215,18,15],[12,217,19,2],[12,229,19,14],[12,231,20,2],[12,263,20,34],[12,265,21,2],[12,289,21,26],[12,290,22,10],[13,2,24,7],[13,6,24,13,"panGestureHandlerCustomNativeProps"],[13,40,24,47],[13,43,24,47,"exports"],[13,50,24,47],[13,51,24,47,"panGestureHandlerCustomNativeProps"],[13,85,24,47],[13,88,24,50],[13,89,25,2],[13,109,25,22],[13,111,26,2],[13,129,26,20],[13,131,27,2],[13,151,27,22],[13,153,28,2],[13,171,28,20],[13,173,29,2],[13,191,29,20],[13,193,30,2],[13,209,30,18],[13,211,31,2],[13,229,31,20],[13,231,32,2],[13,247,32,18],[13,248,33,10],[15,2,85,0],[16,0,86,0],[17,0,87,0],[19,2,136,7],[19,6,136,13,"panHandlerName"],[19,20,136,27],[19,23,136,27,"exports"],[19,30,136,27],[19,31,136,27,"panHandlerName"],[19,45,136,27],[19,48,136,30],[19,67,136,49],[21,2,138,0],[22,0,139,0],[23,0,140,0],[25,2,143,0],[26,0,144,0],[27,0,145,0],[28,2,146,0],[29,2,147,7],[29,6,147,13,"PanGestureHandler"],[29,23,147,30],[29,26,147,30,"exports"],[29,33,147,30],[29,34,147,30,"PanGestureHandler"],[29,51,147,30],[29,54,147,33],[29,58,147,33,"createHandler"],[29,80,147,46],[29,82,150,2],[30,4,151,2,"name"],[30,8,151,6],[30,10,151,8,"panHandlerName"],[30,24,151,22],[31,4,152,2,"allowedProps"],[31,16,152,14],[31,21,152,14,"concat"],[31,27,152,14],[31,32,152,14,"_toConsumableArray2"],[31,51,152,14],[31,52,152,14,"default"],[31,59,152,14],[31,61,153,7,"baseGestureHandlerProps"],[31,106,153,30],[31,109,154,7,"panGestureHandlerProps"],[31,131,154,29],[31,132,155,12],[32,4,156,2,"config"],[32,10,156,8],[32,12,156,10],[32,13,156,11],[32,14,156,12],[33,4,157,2,"transformProps"],[33,18,157,16],[33,20,157,18,"managePanProps"],[33,34,157,32],[34,4,158,2,"customNativeProps"],[34,21,158,19],[34,23,158,21,"panGestureHandlerCustomNativeProps"],[35,2,159,0],[35,3,159,1],[35,4,159,2],[36,2,161,0],[36,11,161,9,"validatePanGestureHandlerProps"],[36,41,161,39,"validatePanGestureHandlerProps"],[36,42,161,40,"props"],[36,47,161,69],[36,49,161,71],[37,4,162,2],[37,8,163,4,"Array"],[37,13,163,9],[37,14,163,10,"isArray"],[37,21,163,17],[37,22,163,18,"props"],[37,27,163,23],[37,28,163,24,"activeOffsetX"],[37,41,163,37],[37,42,163,38],[37,47,164,5,"props"],[37,52,164,10],[37,53,164,11,"activeOffsetX"],[37,66,164,24],[37,67,164,25],[37,68,164,26],[37,69,164,27],[37,72,164,30],[37,73,164,31],[37,77,164,35,"props"],[37,82,164,40],[37,83,164,41,"activeOffsetX"],[37,96,164,54],[37,97,164,55],[37,98,164,56],[37,99,164,57],[37,102,164,60],[37,103,164,61],[37,104,164,62],[37,106,165,4],[38,6,166,4],[38,12,166,10],[38,16,166,14,"Error"],[38,21,166,19],[38,22,167,6],[38,110,168,4],[38,111,168,5],[39,4,169,2],[40,4,171,2],[40,8,172,4,"Array"],[40,13,172,9],[40,14,172,10,"isArray"],[40,21,172,17],[40,22,172,18,"props"],[40,27,172,23],[40,28,172,24,"activeOffsetY"],[40,41,172,37],[40,42,172,38],[40,47,173,5,"props"],[40,52,173,10],[40,53,173,11,"activeOffsetY"],[40,66,173,24],[40,67,173,25],[40,68,173,26],[40,69,173,27],[40,72,173,30],[40,73,173,31],[40,77,173,35,"props"],[40,82,173,40],[40,83,173,41,"activeOffsetY"],[40,96,173,54],[40,97,173,55],[40,98,173,56],[40,99,173,57],[40,102,173,60],[40,103,173,61],[40,104,173,62],[40,106,174,4],[41,6,175,4],[41,12,175,10],[41,16,175,14,"Error"],[41,21,175,19],[41,22,176,6],[41,110,177,4],[41,111,177,5],[42,4,178,2],[43,4,180,2],[43,8,181,4,"Array"],[43,13,181,9],[43,14,181,10,"isArray"],[43,21,181,17],[43,22,181,18,"props"],[43,27,181,23],[43,28,181,24,"failOffsetX"],[43,39,181,35],[43,40,181,36],[43,45,182,5,"props"],[43,50,182,10],[43,51,182,11,"failOffsetX"],[43,62,182,22],[43,63,182,23],[43,64,182,24],[43,65,182,25],[43,68,182,28],[43,69,182,29],[43,73,182,33,"props"],[43,78,182,38],[43,79,182,39,"failOffsetX"],[43,90,182,50],[43,91,182,51],[43,92,182,52],[43,93,182,53],[43,96,182,56],[43,97,182,57],[43,98,182,58],[43,100,183,4],[44,6,184,4],[44,12,184,10],[44,16,184,14,"Error"],[44,21,184,19],[44,22,185,6],[44,108,186,4],[44,109,186,5],[45,4,187,2],[46,4,189,2],[46,8,190,4,"Array"],[46,13,190,9],[46,14,190,10,"isArray"],[46,21,190,17],[46,22,190,18,"props"],[46,27,190,23],[46,28,190,24,"failOffsetY"],[46,39,190,35],[46,40,190,36],[46,45,191,5,"props"],[46,50,191,10],[46,51,191,11,"failOffsetY"],[46,62,191,22],[46,63,191,23],[46,64,191,24],[46,65,191,25],[46,68,191,28],[46,69,191,29],[46,73,191,33,"props"],[46,78,191,38],[46,79,191,39,"failOffsetY"],[46,90,191,50],[46,91,191,51],[46,92,191,52],[46,93,191,53],[46,96,191,56],[46,97,191,57],[46,98,191,58],[46,100,192,4],[47,6,193,4],[47,12,193,10],[47,16,193,14,"Error"],[47,21,193,19],[47,22,194,6],[47,108,195,4],[47,109,195,5],[48,4,196,2],[49,4,198,2],[49,8,198,6,"props"],[49,13,198,11],[49,14,198,12,"minDist"],[49,21,198,19],[49,26,198,24,"props"],[49,31,198,29],[49,32,198,30,"failOffsetX"],[49,43,198,41],[49,47,198,45,"props"],[49,52,198,50],[49,53,198,51,"failOffsetY"],[49,64,198,62],[49,65,198,63],[49,67,198,65],[50,6,199,4],[50,12,199,10],[50,16,199,14,"Error"],[50,21,199,19],[50,22,200,6],[50,135,201,4],[50,136,201,5],[51,4,202,2],[52,4,204,2],[52,8,204,6,"props"],[52,13,204,11],[52,14,204,12,"minDist"],[52,21,204,19],[52,26,204,24,"props"],[52,31,204,29],[52,32,204,30,"activeOffsetX"],[52,45,204,43],[52,49,204,47,"props"],[52,54,204,52],[52,55,204,53,"activeOffsetY"],[52,68,204,66],[52,69,204,67],[52,71,204,69],[53,6,205,4],[53,12,205,10],[53,16,205,14,"Error"],[53,21,205,19],[53,22,206,6],[53,94,207,4],[53,95,207,5],[54,4,208,2],[55,2,209,0],[56,2,211,0],[56,11,211,9,"transformPanGestureHandlerProps"],[56,42,211,40,"transformPanGestureHandlerProps"],[56,43,211,41,"props"],[56,48,211,70],[56,50,211,72],[57,4,224,2],[57,8,224,8,"res"],[57,11,224,43],[57,14,224,43,"Object"],[57,20,224,43],[57,21,224,43,"assign"],[57,27,224,43],[57,32,224,51,"props"],[57,37,224,56],[57,38,224,58],[58,4,226,2],[58,8,226,6,"props"],[58,13,226,11],[58,14,226,12,"activeOffsetX"],[58,27,226,25],[58,32,226,30,"undefined"],[58,41,226,39],[58,43,226,41],[59,6,227,4],[59,13,227,11,"res"],[59,16,227,14],[59,17,227,15,"activeOffsetX"],[59,30,227,28],[60,6,228,4],[60,10,228,8,"Array"],[60,15,228,13],[60,16,228,14,"isArray"],[60,23,228,21],[60,24,228,22,"props"],[60,29,228,27],[60,30,228,28,"activeOffsetX"],[60,43,228,41],[60,44,228,42],[60,46,228,44],[61,8,229,6,"res"],[61,11,229,9],[61,12,229,10,"activeOffsetXStart"],[61,30,229,28],[61,33,229,31,"props"],[61,38,229,36],[61,39,229,37,"activeOffsetX"],[61,52,229,50],[61,53,229,51],[61,54,229,52],[61,55,229,53],[62,8,230,6,"res"],[62,11,230,9],[62,12,230,10,"activeOffsetXEnd"],[62,28,230,26],[62,31,230,29,"props"],[62,36,230,34],[62,37,230,35,"activeOffsetX"],[62,50,230,48],[62,51,230,49],[62,52,230,50],[62,53,230,51],[63,6,231,4],[63,7,231,5],[63,13,231,11],[63,17,231,15,"props"],[63,22,231,20],[63,23,231,21,"activeOffsetX"],[63,36,231,34],[63,39,231,37],[63,40,231,38],[63,42,231,40],[64,8,232,6,"res"],[64,11,232,9],[64,12,232,10,"activeOffsetXStart"],[64,30,232,28],[64,33,232,31,"props"],[64,38,232,36],[64,39,232,37,"activeOffsetX"],[64,52,232,50],[65,6,233,4],[65,7,233,5],[65,13,233,11],[66,8,234,6,"res"],[66,11,234,9],[66,12,234,10,"activeOffsetXEnd"],[66,28,234,26],[66,31,234,29,"props"],[66,36,234,34],[66,37,234,35,"activeOffsetX"],[66,50,234,48],[67,6,235,4],[68,4,236,2],[69,4,238,2],[69,8,238,6,"props"],[69,13,238,11],[69,14,238,12,"activeOffsetY"],[69,27,238,25],[69,32,238,30,"undefined"],[69,41,238,39],[69,43,238,41],[70,6,239,4],[70,13,239,11,"res"],[70,16,239,14],[70,17,239,15,"activeOffsetY"],[70,30,239,28],[71,6,240,4],[71,10,240,8,"Array"],[71,15,240,13],[71,16,240,14,"isArray"],[71,23,240,21],[71,24,240,22,"props"],[71,29,240,27],[71,30,240,28,"activeOffsetY"],[71,43,240,41],[71,44,240,42],[71,46,240,44],[72,8,241,6,"res"],[72,11,241,9],[72,12,241,10,"activeOffsetYStart"],[72,30,241,28],[72,33,241,31,"props"],[72,38,241,36],[72,39,241,37,"activeOffsetY"],[72,52,241,50],[72,53,241,51],[72,54,241,52],[72,55,241,53],[73,8,242,6,"res"],[73,11,242,9],[73,12,242,10,"activeOffsetYEnd"],[73,28,242,26],[73,31,242,29,"props"],[73,36,242,34],[73,37,242,35,"activeOffsetY"],[73,50,242,48],[73,51,242,49],[73,52,242,50],[73,53,242,51],[74,6,243,4],[74,7,243,5],[74,13,243,11],[74,17,243,15,"props"],[74,22,243,20],[74,23,243,21,"activeOffsetY"],[74,36,243,34],[74,39,243,37],[74,40,243,38],[74,42,243,40],[75,8,244,6,"res"],[75,11,244,9],[75,12,244,10,"activeOffsetYStart"],[75,30,244,28],[75,33,244,31,"props"],[75,38,244,36],[75,39,244,37,"activeOffsetY"],[75,52,244,50],[76,6,245,4],[76,7,245,5],[76,13,245,11],[77,8,246,6,"res"],[77,11,246,9],[77,12,246,10,"activeOffsetYEnd"],[77,28,246,26],[77,31,246,29,"props"],[77,36,246,34],[77,37,246,35,"activeOffsetY"],[77,50,246,48],[78,6,247,4],[79,4,248,2],[80,4,250,2],[80,8,250,6,"props"],[80,13,250,11],[80,14,250,12,"failOffsetX"],[80,25,250,23],[80,30,250,28,"undefined"],[80,39,250,37],[80,41,250,39],[81,6,251,4],[81,13,251,11,"res"],[81,16,251,14],[81,17,251,15,"failOffsetX"],[81,28,251,26],[82,6,252,4],[82,10,252,8,"Array"],[82,15,252,13],[82,16,252,14,"isArray"],[82,23,252,21],[82,24,252,22,"props"],[82,29,252,27],[82,30,252,28,"failOffsetX"],[82,41,252,39],[82,42,252,40],[82,44,252,42],[83,8,253,6,"res"],[83,11,253,9],[83,12,253,10,"failOffsetXStart"],[83,28,253,26],[83,31,253,29,"props"],[83,36,253,34],[83,37,253,35,"failOffsetX"],[83,48,253,46],[83,49,253,47],[83,50,253,48],[83,51,253,49],[84,8,254,6,"res"],[84,11,254,9],[84,12,254,10,"failOffsetXEnd"],[84,26,254,24],[84,29,254,27,"props"],[84,34,254,32],[84,35,254,33,"failOffsetX"],[84,46,254,44],[84,47,254,45],[84,48,254,46],[84,49,254,47],[85,6,255,4],[85,7,255,5],[85,13,255,11],[85,17,255,15,"props"],[85,22,255,20],[85,23,255,21,"failOffsetX"],[85,34,255,32],[85,37,255,35],[85,38,255,36],[85,40,255,38],[86,8,256,6,"res"],[86,11,256,9],[86,12,256,10,"failOffsetXStart"],[86,28,256,26],[86,31,256,29,"props"],[86,36,256,34],[86,37,256,35,"failOffsetX"],[86,48,256,46],[87,6,257,4],[87,7,257,5],[87,13,257,11],[88,8,258,6,"res"],[88,11,258,9],[88,12,258,10,"failOffsetXEnd"],[88,26,258,24],[88,29,258,27,"props"],[88,34,258,32],[88,35,258,33,"failOffsetX"],[88,46,258,44],[89,6,259,4],[90,4,260,2],[91,4,262,2],[91,8,262,6,"props"],[91,13,262,11],[91,14,262,12,"failOffsetY"],[91,25,262,23],[91,30,262,28,"undefined"],[91,39,262,37],[91,41,262,39],[92,6,263,4],[92,13,263,11,"res"],[92,16,263,14],[92,17,263,15,"failOffsetY"],[92,28,263,26],[93,6,264,4],[93,10,264,8,"Array"],[93,15,264,13],[93,16,264,14,"isArray"],[93,23,264,21],[93,24,264,22,"props"],[93,29,264,27],[93,30,264,28,"failOffsetY"],[93,41,264,39],[93,42,264,40],[93,44,264,42],[94,8,265,6,"res"],[94,11,265,9],[94,12,265,10,"failOffsetYStart"],[94,28,265,26],[94,31,265,29,"props"],[94,36,265,34],[94,37,265,35,"failOffsetY"],[94,48,265,46],[94,49,265,47],[94,50,265,48],[94,51,265,49],[95,8,266,6,"res"],[95,11,266,9],[95,12,266,10,"failOffsetYEnd"],[95,26,266,24],[95,29,266,27,"props"],[95,34,266,32],[95,35,266,33,"failOffsetY"],[95,46,266,44],[95,47,266,45],[95,48,266,46],[95,49,266,47],[96,6,267,4],[96,7,267,5],[96,13,267,11],[96,17,267,15,"props"],[96,22,267,20],[96,23,267,21,"failOffsetY"],[96,34,267,32],[96,37,267,35],[96,38,267,36],[96,40,267,38],[97,8,268,6,"res"],[97,11,268,9],[97,12,268,10,"failOffsetYStart"],[97,28,268,26],[97,31,268,29,"props"],[97,36,268,34],[97,37,268,35,"failOffsetY"],[97,48,268,46],[98,6,269,4],[98,7,269,5],[98,13,269,11],[99,8,270,6,"res"],[99,11,270,9],[99,12,270,10,"failOffsetYEnd"],[99,26,270,24],[99,29,270,27,"props"],[99,34,270,32],[99,35,270,33,"failOffsetY"],[99,46,270,44],[100,6,271,4],[101,4,272,2],[102,4,274,2],[102,11,274,9,"res"],[102,14,274,12],[103,2,275,0],[104,2,277,7],[104,11,277,16,"managePanProps"],[104,25,277,30,"managePanProps"],[104,26,277,31,"props"],[104,31,277,60],[104,33,277,62],[105,4,278,2],[105,8,278,6,"__DEV__"],[105,15,278,13],[105,17,278,15],[106,6,279,4,"validatePanGestureHandlerProps"],[106,36,279,34],[106,37,279,35,"props"],[106,42,279,40],[106,43,279,41],[107,4,280,2],[108,4,281,2],[108,11,281,9,"transformPanGestureHandlerProps"],[108,42,281,40],[108,43,281,41,"props"],[108,48,281,46],[108,49,281,47],[109,2,282,0],[110,0,282,1],[110,3]],"functionMap":{"names":["<global>","validatePanGestureHandlerProps","transformPanGestureHandlerProps","managePanProps"],"mappings":"AAA;ACgK;CDgD;AEE;CFgE;OGE;CHK"}},"type":"js/module"}]}