{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"./BatchedBridge","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":22},"end":{"line":15,"column":48}}],"key":"pZMcJWKis6r8zImtFNHls0vi+s0=","exportNames":["*"]}},{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":18},"end":{"line":16,"column":38}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4=","exportNames":["*"]}},{"name":"../Utilities/defineLazyObjectProperty","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":191,"column":4},"end":{"line":191,"column":52}}],"key":"iAPGUMITE/2KH0DH4/f0/lVJtsQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var BatchedBridge = require(_dependencyMap[2], \"./BatchedBridge\").default;\n  var invariant = require(_dependencyMap[3], \"invariant\");\n  function genModule(config, moduleID) {\n    if (!config) {\n      return null;\n    }\n    var _config = (0, _slicedToArray2.default)(config, 5),\n      moduleName = _config[0],\n      constants = _config[1],\n      methods = _config[2],\n      promiseMethods = _config[3],\n      syncMethods = _config[4];\n    invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), \"Module name prefixes should've been stripped by the native side \" + \"but wasn't for \" + moduleName);\n    if (!constants && !methods) {\n      return {\n        name: moduleName\n      };\n    }\n    var module = {};\n    methods && methods.forEach(function (methodName, methodID) {\n      var isPromise = promiseMethods && arrayContains(promiseMethods, methodID) || false;\n      var isSync = syncMethods && arrayContains(syncMethods, methodID) || false;\n      invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');\n      var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';\n      module[methodName] = genMethod(moduleID, methodID, methodType);\n    });\n    Object.assign(module, constants);\n    if (module.getConstants == null) {\n      module.getConstants = function () {\n        return constants || Object.freeze({});\n      };\n    } else {\n      console.warn(`Unable to define method 'getConstants()' on NativeModule '${moduleName}'. NativeModule '${moduleName}' already has a constant or method called 'getConstants'. Please remove it.`);\n    }\n    if (__DEV__) {\n      BatchedBridge.createDebugLookup(moduleID, moduleName, methods);\n    }\n    return {\n      name: moduleName,\n      module: module\n    };\n  }\n  global.__fbGenNativeModule = genModule;\n  function loadModule(name, moduleID) {\n    invariant(global.nativeRequireModuleConfig, \"Can't lazily create module without nativeRequireModuleConfig\");\n    var config = global.nativeRequireModuleConfig(name);\n    var info = genModule(config, moduleID);\n    return info && info.module;\n  }\n  function genMethod(moduleID, methodID, type) {\n    var fn = null;\n    if (type === 'promise') {\n      fn = function promiseMethodWrapper() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        var enqueueingFrameError = new Error();\n        return new Promise(function (resolve, reject) {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, args, function (data) {\n            return resolve(data);\n          }, function (errorData) {\n            return reject(updateErrorWithErrorData(errorData, enqueueingFrameError));\n          });\n        });\n      };\n    } else {\n      fn = function nonPromiseMethodWrapper() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        var lastArg = args.length > 0 ? args[args.length - 1] : null;\n        var secondLastArg = args.length > 1 ? args[args.length - 2] : null;\n        var hasSuccessCallback = typeof lastArg === 'function';\n        var hasErrorCallback = typeof secondLastArg === 'function';\n        hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');\n        var onSuccess = hasSuccessCallback ? lastArg : null;\n        var onFail = hasErrorCallback ? secondLastArg : null;\n        var callbackCount = hasSuccessCallback + hasErrorCallback;\n        var newArgs = args.slice(0, args.length - callbackCount);\n        if (type === 'sync') {\n          return BatchedBridge.callNativeSyncHook(moduleID, methodID, newArgs, onFail, onSuccess);\n        } else {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, newArgs, onFail, onSuccess);\n        }\n      };\n    }\n    fn.type = type;\n    return fn;\n  }\n  function arrayContains(array, value) {\n    return array.indexOf(value) !== -1;\n  }\n  function updateErrorWithErrorData(errorData, error) {\n    return Object.assign(error, errorData || {});\n  }\n  var NativeModules = {};\n  if (global.nativeModuleProxy) {\n    NativeModules = global.nativeModuleProxy;\n  } else {\n    var bridgeConfig = global.__fbBatchedBridgeConfig;\n    invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');\n    var defineLazyObjectProperty = require(_dependencyMap[4], \"../Utilities/defineLazyObjectProperty\").default;\n    (bridgeConfig.remoteModuleConfig || []).forEach(function (config, moduleID) {\n      var info = genModule(config, moduleID);\n      if (!info) {\n        return;\n      }\n      if (info.module) {\n        NativeModules[info.name] = info.module;\n      } else {\n        defineLazyObjectProperty(NativeModules, info.name, {\n          get: function get() {\n            return loadModule(info.name, moduleID);\n          }\n        });\n      }\n    });\n  }\n  var _default = exports.default = NativeModules;\n});","lineCount":129,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13],[4,6,11,13,"_interopRequireDefault"],[4,28,11,13],[4,31,11,13,"require"],[4,38,11,13],[4,39,11,13,"_dependencyMap"],[4,53,11,13],[5,2,11,13,"Object"],[5,8,11,13],[5,9,11,13,"defineProperty"],[5,23,11,13],[5,24,11,13,"exports"],[5,31,11,13],[6,4,11,13,"value"],[6,9,11,13],[7,2,11,13],[8,2,11,13,"exports"],[8,9,11,13],[8,10,11,13,"default"],[8,17,11,13],[9,2,11,13],[9,6,11,13,"_slicedToArray2"],[9,21,11,13],[9,24,11,13,"_interopRequireDefault"],[9,46,11,13],[9,47,11,13,"require"],[9,54,11,13],[9,55,11,13,"_dependencyMap"],[9,69,11,13],[10,2,15,0],[10,6,15,6,"BatchedBridge"],[10,19,15,19],[10,22,15,22,"require"],[10,29,15,29],[10,30,15,29,"_dependencyMap"],[10,44,15,29],[10,66,15,47],[10,67,15,48],[10,68,15,49,"default"],[10,75,15,56],[11,2,16,0],[11,6,16,6,"invariant"],[11,15,16,15],[11,18,16,18,"require"],[11,25,16,25],[11,26,16,25,"_dependencyMap"],[11,40,16,25],[11,56,16,37],[11,57,16,38],[12,2,28,0],[12,11,28,9,"genModule"],[12,20,28,18,"genModule"],[12,21,29,2,"config"],[12,27,29,23],[12,29,30,2,"moduleID"],[12,37,30,18],[12,39,35,2],[13,4,36,2],[13,8,36,6],[13,9,36,7,"config"],[13,15,36,13],[13,17,36,15],[14,6,37,4],[14,13,37,11],[14,17,37,15],[15,4,38,2],[16,4,40,2],[16,8,40,2,"_config"],[16,15,40,2],[16,22,40,2,"_slicedToArray2"],[16,37,40,2],[16,38,40,2,"default"],[16,45,40,2],[16,47,40,72,"config"],[16,53,40,78],[17,6,40,9,"moduleName"],[17,16,40,19],[17,19,40,19,"_config"],[17,26,40,19],[18,6,40,21,"constants"],[18,15,40,30],[18,18,40,30,"_config"],[18,25,40,30],[19,6,40,32,"methods"],[19,13,40,39],[19,16,40,39,"_config"],[19,23,40,39],[20,6,40,41,"promiseMethods"],[20,20,40,55],[20,23,40,55,"_config"],[20,30,40,55],[21,6,40,57,"syncMethods"],[21,17,40,68],[21,20,40,68,"_config"],[21,27,40,68],[22,4,41,2,"invariant"],[22,13,41,11],[22,14,42,4],[22,15,42,5,"moduleName"],[22,25,42,15],[22,26,42,16,"startsWith"],[22,36,42,26],[22,37,42,27],[22,42,42,32],[22,43,42,33],[22,47,42,37],[22,48,42,38,"moduleName"],[22,58,42,48],[22,59,42,49,"startsWith"],[22,69,42,59],[22,70,42,60],[22,74,42,64],[22,75,42,65],[22,77,43,4],[22,143,43,70],[22,146,44,6],[22,163,44,23],[22,166,45,6,"moduleName"],[22,176,46,2],[22,177,46,3],[23,4,48,2],[23,8,48,6],[23,9,48,7,"constants"],[23,18,48,16],[23,22,48,20],[23,23,48,21,"methods"],[23,30,48,28],[23,32,48,30],[24,6,50,4],[24,13,50,11],[25,8,50,12,"name"],[25,12,50,16],[25,14,50,18,"moduleName"],[26,6,50,28],[26,7,50,29],[27,4,51,2],[28,4,53,2],[28,8,53,8,"module"],[28,14,53,33],[28,17,53,36],[28,18,53,37],[28,19,53,38],[29,4,54,2,"methods"],[29,11,54,9],[29,15,55,4,"methods"],[29,22,55,11],[29,23,55,12,"forEach"],[29,30,55,19],[29,31,55,20],[29,41,55,21,"methodName"],[29,51,55,31],[29,53,55,33,"methodID"],[29,61,55,41],[29,63,55,46],[30,6,56,6],[30,10,56,12,"isPromise"],[30,19,56,21],[30,22,57,9,"promiseMethods"],[30,36,57,23],[30,40,57,27,"arrayContains"],[30,53,57,40],[30,54,57,41,"promiseMethods"],[30,68,57,55],[30,70,57,57,"methodID"],[30,78,57,65],[30,79,57,66],[30,83,57,71],[30,88,57,76],[31,6,58,6],[31,10,58,12,"isSync"],[31,16,58,18],[31,19,59,9,"syncMethods"],[31,30,59,20],[31,34,59,24,"arrayContains"],[31,47,59,37],[31,48,59,38,"syncMethods"],[31,59,59,49],[31,61,59,51,"methodID"],[31,69,59,59],[31,70,59,60],[31,74,59,65],[31,79,59,70],[32,6,60,6,"invariant"],[32,15,60,15],[32,16,61,8],[32,17,61,9,"isPromise"],[32,26,61,18],[32,30,61,22],[32,31,61,23,"isSync"],[32,37,61,29],[32,39,62,8],[32,96,63,6],[32,97,63,7],[33,6,64,6],[33,10,64,12,"methodType"],[33,20,64,22],[33,23,64,25,"isPromise"],[33,32,64,34],[33,35,64,37],[33,44,64,46],[33,47,64,49,"isSync"],[33,53,64,55],[33,56,64,58],[33,62,64,64],[33,65,64,67],[33,72,64,74],[34,6,65,6,"module"],[34,12,65,12],[34,13,65,13,"methodName"],[34,23,65,23],[34,24,65,24],[34,27,65,27,"genMethod"],[34,36,65,36],[34,37,65,37,"moduleID"],[34,45,65,45],[34,47,65,47,"methodID"],[34,55,65,55],[34,57,65,57,"methodType"],[34,67,65,67],[34,68,65,68],[35,4,66,4],[35,5,66,5],[35,6,66,6],[36,4,68,2,"Object"],[36,10,68,8],[36,11,68,9,"assign"],[36,17,68,15],[36,18,68,16,"module"],[36,24,68,22],[36,26,68,24,"constants"],[36,35,68,33],[36,36,68,34],[37,4,70,2],[37,8,70,6,"module"],[37,14,70,12],[37,15,70,13,"getConstants"],[37,27,70,25],[37,31,70,29],[37,35,70,33],[37,37,70,35],[38,6,71,4,"module"],[38,12,71,10],[38,13,71,11,"getConstants"],[38,25,71,23],[38,28,71,26],[39,8,71,26],[39,15,71,32,"constants"],[39,24,71,41],[39,28,71,45,"Object"],[39,34,71,51],[39,35,71,52,"freeze"],[39,41,71,58],[39,42,71,59],[39,43,71,60],[39,44,71,61],[39,45,71,62],[40,6,71,62],[41,4,72,2],[41,5,72,3],[41,11,72,9],[42,6,73,4,"console"],[42,13,73,11],[42,14,73,12,"warn"],[42,18,73,16],[42,19,74,6],[42,80,74,67,"moduleName"],[42,90,74,77],[42,110,74,97,"moduleName"],[42,120,74,107],[42,197,75,4],[42,198,75,5],[43,4,76,2],[44,4,78,2],[44,8,78,6,"__DEV__"],[44,15,78,13],[44,17,78,15],[45,6,79,4,"BatchedBridge"],[45,19,79,17],[45,20,79,18,"createDebugLookup"],[45,37,79,35],[45,38,79,36,"moduleID"],[45,46,79,44],[45,48,79,46,"moduleName"],[45,58,79,56],[45,60,79,58,"methods"],[45,67,79,65],[45,68,79,66],[46,4,80,2],[47,4,82,2],[47,11,82,9],[48,6,82,10,"name"],[48,10,82,14],[48,12,82,16,"moduleName"],[48,22,82,26],[49,6,82,28,"module"],[49,12,82,34],[49,14,82,28,"module"],[50,4,82,34],[50,5,82,35],[51,2,83,0],[52,2,86,0,"global"],[52,8,86,6],[52,9,86,7,"__fbGenNativeModule"],[52,28,86,26],[52,31,86,29,"genModule"],[52,40,86,38],[53,2,88,0],[53,11,88,9,"loadModule"],[53,21,88,19,"loadModule"],[53,22,88,20,"name"],[53,26,88,32],[53,28,88,34,"moduleID"],[53,36,88,50],[53,38,88,60],[54,4,89,2,"invariant"],[54,13,89,11],[54,14,90,4,"global"],[54,20,90,10],[54,21,90,11,"nativeRequireModuleConfig"],[54,46,90,36],[54,48,91,4],[54,110,92,2],[54,111,92,3],[55,4,93,2],[55,8,93,8,"config"],[55,14,93,14],[55,17,93,17,"global"],[55,23,93,23],[55,24,93,24,"nativeRequireModuleConfig"],[55,49,93,49],[55,50,93,50,"name"],[55,54,93,54],[55,55,93,55],[56,4,94,2],[56,8,94,8,"info"],[56,12,94,12],[56,15,94,15,"genModule"],[56,24,94,24],[56,25,94,25,"config"],[56,31,94,31],[56,33,94,33,"moduleID"],[56,41,94,41],[56,42,94,42],[57,4,95,2],[57,11,95,9,"info"],[57,15,95,13],[57,19,95,17,"info"],[57,23,95,21],[57,24,95,22,"module"],[57,30,95,28],[58,2,96,0],[59,2,98,0],[59,11,98,9,"genMethod"],[59,20,98,18,"genMethod"],[59,21,98,19,"moduleID"],[59,29,98,35],[59,31,98,37,"methodID"],[59,39,98,53],[59,41,98,55,"type"],[59,45,98,71],[59,47,98,73],[60,4,99,2],[60,8,99,6,"fn"],[60,10,99,8],[60,13,99,11],[60,17,99,15],[61,4,100,2],[61,8,100,6,"type"],[61,12,100,10],[61,17,100,15],[61,26,100,24],[61,28,100,26],[62,6,101,4,"fn"],[62,8,101,6],[62,11,101,9],[62,20,101,18,"promiseMethodWrapper"],[62,40,101,38,"promiseMethodWrapper"],[62,41,101,38],[62,43,101,62],[63,8,101,62],[63,17,101,62,"_len"],[63,21,101,62],[63,24,101,62,"arguments"],[63,33,101,62],[63,34,101,62,"length"],[63,40,101,62],[63,42,101,42,"args"],[63,46,101,46],[63,53,101,46,"Array"],[63,58,101,46],[63,59,101,46,"_len"],[63,63,101,46],[63,66,101,46,"_key"],[63,70,101,46],[63,76,101,46,"_key"],[63,80,101,46],[63,83,101,46,"_len"],[63,87,101,46],[63,89,101,46,"_key"],[63,93,101,46],[64,10,101,42,"args"],[64,14,101,46],[64,15,101,46,"_key"],[64,19,101,46],[64,23,101,46,"arguments"],[64,32,101,46],[64,33,101,46,"_key"],[64,37,101,46],[65,8,101,46],[66,8,106,6],[66,12,106,12,"enqueueingFrameError"],[66,32,106,47],[66,35,106,50],[66,39,106,54,"Error"],[66,44,106,59],[66,45,106,60],[66,46,106,61],[67,8,107,6],[67,15,107,13],[67,19,107,17,"Promise"],[67,26,107,24],[67,27,107,25],[67,37,107,26,"resolve"],[67,44,107,33],[67,46,107,35,"reject"],[67,52,107,41],[67,54,107,46],[68,10,108,8,"BatchedBridge"],[68,23,108,21],[68,24,108,22,"enqueueNativeCall"],[68,41,108,39],[68,42,109,10,"moduleID"],[68,50,109,18],[68,52,110,10,"methodID"],[68,60,110,18],[68,62,111,10,"args"],[68,66,111,14],[68,68,112,10],[68,78,112,10,"data"],[68,82,112,14],[69,12,112,14],[69,19,112,18,"resolve"],[69,26,112,25],[69,27,112,26,"data"],[69,31,112,30],[69,32,112,31],[70,10,112,31],[70,13,113,10],[70,23,113,10,"errorData"],[70,32,113,19],[71,12,113,19],[71,19,114,12,"reject"],[71,25,114,18],[71,26,115,14,"updateErrorWithErrorData"],[71,50,115,38],[71,51,116,17,"errorData"],[71,60,116,26],[71,62,117,16,"enqueueingFrameError"],[71,82,118,14],[71,83,119,12],[71,84,119,13],[72,10,119,13],[72,11,120,8],[72,12,120,9],[73,8,121,6],[73,9,121,7],[73,10,121,8],[74,6,122,4],[74,7,122,5],[75,4,123,2],[75,5,123,3],[75,11,123,9],[76,6,124,4,"fn"],[76,8,124,6],[76,11,124,9],[76,20,124,18,"nonPromiseMethodWrapper"],[76,43,124,41,"nonPromiseMethodWrapper"],[76,44,124,41],[76,46,124,65],[77,8,124,65],[77,17,124,65,"_len2"],[77,22,124,65],[77,25,124,65,"arguments"],[77,34,124,65],[77,35,124,65,"length"],[77,41,124,65],[77,43,124,45,"args"],[77,47,124,49],[77,54,124,49,"Array"],[77,59,124,49],[77,60,124,49,"_len2"],[77,65,124,49],[77,68,124,49,"_key2"],[77,73,124,49],[77,79,124,49,"_key2"],[77,84,124,49],[77,87,124,49,"_len2"],[77,92,124,49],[77,94,124,49,"_key2"],[77,99,124,49],[78,10,124,45,"args"],[78,14,124,49],[78,15,124,49,"_key2"],[78,20,124,49],[78,24,124,49,"arguments"],[78,33,124,49],[78,34,124,49,"_key2"],[78,39,124,49],[79,8,124,49],[80,8,125,6],[80,12,125,12,"lastArg"],[80,19,125,19],[80,22,125,22,"args"],[80,26,125,26],[80,27,125,27,"length"],[80,33,125,33],[80,36,125,36],[80,37,125,37],[80,40,125,40,"args"],[80,44,125,44],[80,45,125,45,"args"],[80,49,125,49],[80,50,125,50,"length"],[80,56,125,56],[80,59,125,59],[80,60,125,60],[80,61,125,61],[80,64,125,64],[80,68,125,68],[81,8,126,6],[81,12,126,12,"secondLastArg"],[81,25,126,25],[81,28,126,28,"args"],[81,32,126,32],[81,33,126,33,"length"],[81,39,126,39],[81,42,126,42],[81,43,126,43],[81,46,126,46,"args"],[81,50,126,50],[81,51,126,51,"args"],[81,55,126,55],[81,56,126,56,"length"],[81,62,126,62],[81,65,126,65],[81,66,126,66],[81,67,126,67],[81,70,126,70],[81,74,126,74],[82,8,127,6],[82,12,127,12,"hasSuccessCallback"],[82,30,127,30],[82,33,127,33],[82,40,127,40,"lastArg"],[82,47,127,47],[82,52,127,52],[82,62,127,62],[83,8,128,6],[83,12,128,12,"hasErrorCallback"],[83,28,128,28],[83,31,128,31],[83,38,128,38,"secondLastArg"],[83,51,128,51],[83,56,128,56],[83,66,128,66],[84,8,129,6,"hasErrorCallback"],[84,24,129,22],[84,28,130,8,"invariant"],[84,37,130,17],[84,38,131,10,"hasSuccessCallback"],[84,56,131,28],[84,58,132,10],[84,112,133,8],[84,113,133,9],[85,8,135,6],[85,12,135,12,"onSuccess"],[85,21,135,39],[85,24,135,42,"hasSuccessCallback"],[85,42,135,60],[85,45,135,63,"lastArg"],[85,52,135,70],[85,55,135,73],[85,59,135,77],[86,8,137,6],[86,12,137,12,"onFail"],[86,18,137,36],[86,21,137,39,"hasErrorCallback"],[86,37,137,55],[86,40,137,58,"secondLastArg"],[86,53,137,71],[86,56,137,74],[86,60,137,78],[87,8,139,6],[87,12,139,12,"callbackCount"],[87,25,139,25],[87,28,139,28,"hasSuccessCallback"],[87,46,139,46],[87,49,139,49,"hasErrorCallback"],[87,65,139,65],[88,8,140,6],[88,12,140,12,"newArgs"],[88,19,140,19],[88,22,140,22,"args"],[88,26,140,26],[88,27,140,27,"slice"],[88,32,140,32],[88,33,140,33],[88,34,140,34],[88,36,140,36,"args"],[88,40,140,40],[88,41,140,41,"length"],[88,47,140,47],[88,50,140,50,"callbackCount"],[88,63,140,63],[88,64,140,64],[89,8,141,6],[89,12,141,10,"type"],[89,16,141,14],[89,21,141,19],[89,27,141,25],[89,29,141,27],[90,10,142,8],[90,17,142,15,"BatchedBridge"],[90,30,142,28],[90,31,142,29,"callNativeSyncHook"],[90,49,142,47],[90,50,143,10,"moduleID"],[90,58,143,18],[90,60,144,10,"methodID"],[90,68,144,18],[90,70,145,10,"newArgs"],[90,77,145,17],[90,79,146,10,"onFail"],[90,85,146,16],[90,87,147,10,"onSuccess"],[90,96,148,8],[90,97,148,9],[91,8,149,6],[91,9,149,7],[91,15,149,13],[92,10,150,8,"BatchedBridge"],[92,23,150,21],[92,24,150,22,"enqueueNativeCall"],[92,41,150,39],[92,42,151,10,"moduleID"],[92,50,151,18],[92,52,152,10,"methodID"],[92,60,152,18],[92,62,153,10,"newArgs"],[92,69,153,17],[92,71,154,10,"onFail"],[92,77,154,16],[92,79,155,10,"onSuccess"],[92,88,156,8],[92,89,156,9],[93,8,157,6],[94,6,158,4],[94,7,158,5],[95,4,159,2],[96,4,161,2,"fn"],[96,6,161,4],[96,7,161,5,"type"],[96,11,161,9],[96,14,161,12,"type"],[96,18,161,16],[97,4,162,2],[97,11,162,9,"fn"],[97,13,162,11],[98,2,163,0],[99,2,165,0],[99,11,165,9,"arrayContains"],[99,24,165,22,"arrayContains"],[99,25,165,26,"array"],[99,30,165,50],[99,32,165,52,"value"],[99,37,165,60],[99,39,165,71],[100,4,166,2],[100,11,166,9,"array"],[100,16,166,14],[100,17,166,15,"indexOf"],[100,24,166,22],[100,25,166,23,"value"],[100,30,166,28],[100,31,166,29],[100,36,166,34],[100,37,166,35],[100,38,166,36],[101,2,167,0],[102,2,169,0],[102,11,169,9,"updateErrorWithErrorData"],[102,35,169,33,"updateErrorWithErrorData"],[102,36,170,2,"errorData"],[102,45,170,35],[102,47,171,2,"error"],[102,52,171,22],[102,54,172,17],[103,4,176,2],[103,11,176,9,"Object"],[103,17,176,15],[103,18,176,16,"assign"],[103,24,176,22],[103,25,176,23,"error"],[103,30,176,28],[103,32,176,30,"errorData"],[103,41,176,39],[103,45,176,43],[103,46,176,44],[103,47,176,45],[103,48,176,46],[104,2,177,0],[105,2,180,0],[105,6,180,4,"NativeModules"],[105,19,180,51],[105,22,180,54],[105,23,180,55],[105,24,180,56],[106,2,181,0],[106,6,181,4,"global"],[106,12,181,10],[106,13,181,11,"nativeModuleProxy"],[106,30,181,28],[106,32,181,30],[107,4,182,2,"NativeModules"],[107,17,182,15],[107,20,182,18,"global"],[107,26,182,24],[107,27,182,25,"nativeModuleProxy"],[107,44,182,42],[108,2,183,0],[108,3,183,1],[108,9,183,7],[109,4,184,2],[109,8,184,8,"bridgeConfig"],[109,20,184,20],[109,23,184,23,"global"],[109,29,184,29],[109,30,184,30,"__fbBatchedBridgeConfig"],[109,53,184,53],[110,4,185,2,"invariant"],[110,13,185,11],[110,14,186,4,"bridgeConfig"],[110,26,186,16],[110,28,187,4],[110,94,188,2],[110,95,188,3],[111,4,190,2],[111,8,190,8,"defineLazyObjectProperty"],[111,32,190,32],[111,35,191,4,"require"],[111,42,191,11],[111,43,191,11,"_dependencyMap"],[111,57,191,11],[111,101,191,51],[111,102,191,52],[111,103,191,53,"default"],[111,110,191,60],[112,4,192,2],[112,5,192,3,"bridgeConfig"],[112,17,192,15],[112,18,192,16,"remoteModuleConfig"],[112,36,192,34],[112,40,192,38],[112,42,192,40],[112,44,192,42,"forEach"],[112,51,192,49],[112,52,193,4],[112,62,193,5,"config"],[112,68,193,25],[112,70,193,27,"moduleID"],[112,78,193,43],[112,80,193,48],[113,6,196,6],[113,10,196,12,"info"],[113,14,196,16],[113,17,196,19,"genModule"],[113,26,196,28],[113,27,196,29,"config"],[113,33,196,35],[113,35,196,37,"moduleID"],[113,43,196,45],[113,44,196,46],[114,6,197,6],[114,10,197,10],[114,11,197,11,"info"],[114,15,197,15],[114,17,197,17],[115,8,198,8],[116,6,199,6],[117,6,201,6],[117,10,201,10,"info"],[117,14,201,14],[117,15,201,15,"module"],[117,21,201,21],[117,23,201,23],[118,8,202,8,"NativeModules"],[118,21,202,21],[118,22,202,22,"info"],[118,26,202,26],[118,27,202,27,"name"],[118,31,202,31],[118,32,202,32],[118,35,202,35,"info"],[118,39,202,39],[118,40,202,40,"module"],[118,46,202,46],[119,6,203,6],[119,7,203,7],[119,13,205,11],[120,8,206,8,"defineLazyObjectProperty"],[120,32,206,32],[120,33,206,33,"NativeModules"],[120,46,206,46],[120,48,206,48,"info"],[120,52,206,52],[120,53,206,53,"name"],[120,57,206,57],[120,59,206,59],[121,10,207,10,"get"],[121,13,207,13],[121,15,207,15],[121,24,207,10,"get"],[121,27,207,13,"get"],[121,28,207,13],[122,12,207,13],[122,19,207,21,"loadModule"],[122,29,207,31],[122,30,207,32,"info"],[122,34,207,36],[122,35,207,37,"name"],[122,39,207,41],[122,41,207,43,"moduleID"],[122,49,207,51],[122,50,207,52],[123,10,207,52],[124,8,208,8],[124,9,208,9],[124,10,208,10],[125,6,209,6],[126,4,210,4],[126,5,211,2],[126,6,211,3],[127,2,212,0],[128,2,212,1],[128,6,212,1,"_default"],[128,14,212,1],[128,17,212,1,"exports"],[128,24,212,1],[128,25,212,1,"default"],[128,32,212,1],[128,35,214,15,"NativeModules"],[128,48,214,28],[129,0,214,28],[129,3]],"functionMap":{"names":["<global>","genModule","methods.forEach$argument_0","module.getConstants","loadModule","genMethod","promiseMethodWrapper","Promise$argument_0","BatchedBridge.enqueueNativeCall$argument_3","BatchedBridge.enqueueNativeCall$argument_4","nonPromiseMethodWrapper","arrayContains","updateErrorWithErrorData","forEach$argument_0","defineLazyObjectProperty$argument_2.get"],"mappings":"AAA;AC2B;oBC2B;KDW;0BEK,oCF;CDY;AIK;CJQ;AKE;SCG;yBCM;UCK,qBD;UEC;aFM;ODE;KDC;SKE;KLkC;CLK;AWE;CXE;AYE;CZQ;IagB;eCc,qCD;KbG"}},"type":"js/module"}]}