{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":167},"end":{"line":7,"column":69,"index":236}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"expo-device","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":238},"end":{"line":8,"column":38,"index":276}}],"key":"bBpmAhO1g++sdeUzQmFVGoQIVwg=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":278},"end":{"line":9,"column":40,"index":318}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"../supabase/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":320},"end":{"line":10,"column":46,"index":366}}],"key":"q3G/dBcB/lyqe2ZqsudXc9dkd4E=","exportNames":["*"]}},{"name":"./NotificationService","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":424},"end":{"line":12,"column":56,"index":480}}],"key":"QuAJF8LO9sSj+VodWFVeKd6SEzk=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":482},"end":{"line":13,"column":54,"index":536}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[5], \"@react-native-async-storage/async-storage\"));\n  var Device = _interopRequireWildcard(require(_dependencyMap[6], \"expo-device\"));\n  var _reactNative = require(_dependencyMap[7], \"react-native\");\n  var _client = require(_dependencyMap[8], \"../supabase/client\");\n  var _NotificationService = _interopRequireDefault(require(_dependencyMap[9], \"./NotificationService\"));\n  var _EventLogger = require(_dependencyMap[10], \"../../utils/EventLogger\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  /**\r\n   * PushTokenManager.ts\r\n   * Manages push tokens synchronization with Supabase backend\r\n   * Features: token storage, multi-device support, sync with backend\r\n   */\n  var PushTokenManager = /*#__PURE__*/function () {\n    // 5 seconds\n\n    function PushTokenManager() {\n      (0, _classCallCheck2.default)(this, PushTokenManager);\n      this.syncInProgress = false;\n    }\n    return (0, _createClass2.default)(PushTokenManager, [{\n      key: \"getDeviceId\",\n      value: (\n      /**\r\n       * Generate or retrieve device ID\r\n       */\n      function () {\n        var _getDeviceId = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var deviceId = yield _asyncStorage.default.getItem(PushTokenManager.STORAGE_KEYS.DEVICE_ID);\n            if (!deviceId) {\n              // Generate unique device ID\n              deviceId = `${_reactNative.Platform.OS}-${Device.modelName || 'unknown'}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n              yield _asyncStorage.default.setItem(PushTokenManager.STORAGE_KEYS.DEVICE_ID, deviceId);\n              _EventLogger.EventLogger.debug('PushToken', '[PushTokenManager] Generated new device ID:', deviceId);\n            }\n            return deviceId;\n          } catch (error) {\n            _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to get device ID:', error);\n            // Fallback device ID\n            return `${_reactNative.Platform.OS}-fallback-${Date.now()}`;\n          }\n        });\n        function getDeviceId() {\n          return _getDeviceId.apply(this, arguments);\n        }\n        return getDeviceId;\n      }()\n      /**\r\n       * Register push token with backend\r\n       */\n      )\n    }, {\n      key: \"registerToken\",\n      value: (function () {\n        var _registerToken = (0, _asyncToGenerator2.default)(function* (userId) {\n          try {\n            if (this.syncInProgress) {\n              _EventLogger.EventLogger.debug('PushToken', '[PushTokenManager] Token sync already in progress');\n              return false;\n            }\n            this.syncInProgress = true;\n\n            // Get push token from notification service\n            var token = yield _NotificationService.default.getPushToken();\n            if (!token) {\n              _EventLogger.EventLogger.warn('PushToken', '[PushTokenManager] No push token available');\n              this.syncInProgress = false;\n              return false;\n            }\n\n            // Get device information\n            var deviceId = yield this.getDeviceId();\n            var platform = _reactNative.Platform.OS;\n\n            // Create push token object\n            var pushTokenData = {\n              token: token,\n              deviceId: deviceId,\n              platform: platform,\n              userId: userId\n            };\n\n            // Sync with Supabase\n            var success = yield this.syncTokenWithSupabase(pushTokenData);\n            if (success) {\n              yield this.markSyncSuccess();\n              _EventLogger.EventLogger.debug('PushToken', '[PushTokenManager] Token registered successfully');\n            } else {\n              yield this.handleSyncFailure();\n            }\n            this.syncInProgress = false;\n            return success;\n          } catch (error) {\n            _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to register token:', error);\n            this.syncInProgress = false;\n            yield this.handleSyncFailure();\n            return false;\n          }\n        });\n        function registerToken(_x) {\n          return _registerToken.apply(this, arguments);\n        }\n        return registerToken;\n      }()\n      /**\r\n       * Sync token with Supabase database\r\n       */\n      )\n    }, {\n      key: \"syncTokenWithSupabase\",\n      value: (function () {\n        var _syncTokenWithSupabase = (0, _asyncToGenerator2.default)(function* (tokenData) {\n          try {\n            // Check if token already exists for this device\n            var _yield$supabase$from$ = yield _client.supabase.from('push_tokens').select('*').eq('device_id', tokenData.deviceId).single(),\n              existing = _yield$supabase$from$.data,\n              fetchError = _yield$supabase$from$.error;\n            if (fetchError && fetchError.code !== 'PGRST116') {\n              // PGRST116 = no rows returned\n              _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Error checking existing token:', fetchError);\n              return false;\n            }\n            var result;\n            if (existing) {\n              // Update existing token\n              result = yield _client.supabase.from('push_tokens').update({\n                token: tokenData.token,\n                user_id: tokenData.userId,\n                platform: tokenData.platform,\n                updated_at: new Date().toISOString()\n              }).eq('device_id', tokenData.deviceId);\n            } else {\n              // Insert new token\n              result = yield _client.supabase.from('push_tokens').insert({\n                token: tokenData.token,\n                device_id: tokenData.deviceId,\n                platform: tokenData.platform,\n                user_id: tokenData.userId,\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n              });\n            }\n            if (result.error) {\n              _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Supabase sync error:', result.error);\n              return false;\n            }\n            _EventLogger.EventLogger.debug('PushToken', '[PushTokenManager] Token synced with Supabase successfully');\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Supabase sync failed:', error);\n            return false;\n          }\n        });\n        function syncTokenWithSupabase(_x2) {\n          return _syncTokenWithSupabase.apply(this, arguments);\n        }\n        return syncTokenWithSupabase;\n      }()\n      /**\r\n       * Unregister push token from backend\r\n       */\n      )\n    }, {\n      key: \"unregisterToken\",\n      value: (function () {\n        var _unregisterToken = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var deviceId = yield this.getDeviceId();\n            var _yield$supabase$from$2 = yield _client.supabase.from('push_tokens').delete().eq('device_id', deviceId),\n              error = _yield$supabase$from$2.error;\n            if (error) {\n              _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to unregister token:', error);\n              return false;\n            }\n\n            // Clear local storage\n            yield _asyncStorage.default.multiRemove([PushTokenManager.STORAGE_KEYS.TOKEN_SYNC_STATUS, PushTokenManager.STORAGE_KEYS.LAST_SYNC_TIMESTAMP, PushTokenManager.STORAGE_KEYS.SYNC_RETRIES]);\n            _EventLogger.EventLogger.debug('PushToken', '[PushTokenManager] Token unregistered successfully');\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to unregister token:', error);\n            return false;\n          }\n        });\n        function unregisterToken() {\n          return _unregisterToken.apply(this, arguments);\n        }\n        return unregisterToken;\n      }()\n      /**\r\n       * Update user ID for existing token\r\n       */\n      )\n    }, {\n      key: \"updateUserId\",\n      value: (function () {\n        var _updateUserId = (0, _asyncToGenerator2.default)(function* (userId) {\n          try {\n            var deviceId = yield this.getDeviceId();\n            var _yield$supabase$from$3 = yield _client.supabase.from('push_tokens').update({\n                user_id: userId,\n                updated_at: new Date().toISOString()\n              }).eq('device_id', deviceId),\n              error = _yield$supabase$from$3.error;\n            if (error) {\n              _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to update user ID:', error);\n              return false;\n            }\n            _EventLogger.EventLogger.debug('PushToken', '[PushTokenManager] User ID updated successfully');\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to update user ID:', error);\n            return false;\n          }\n        });\n        function updateUserId(_x3) {\n          return _updateUserId.apply(this, arguments);\n        }\n        return updateUserId;\n      }()\n      /**\r\n       * Get all tokens for a user (for multi-device support)\r\n       */\n      )\n    }, {\n      key: \"getUserTokens\",\n      value: (function () {\n        var _getUserTokens = (0, _asyncToGenerator2.default)(function* (userId) {\n          try {\n            var _yield$supabase$from$4 = yield _client.supabase.from('push_tokens').select('*').eq('user_id', userId),\n              data = _yield$supabase$from$4.data,\n              error = _yield$supabase$from$4.error;\n            if (error) {\n              _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to get user tokens:', error);\n              return [];\n            }\n            return data.map(function (row) {\n              return {\n                token: row.token,\n                deviceId: row.device_id,\n                platform: row.platform,\n                userId: row.user_id,\n                createdAt: row.created_at,\n                updatedAt: row.updated_at\n              };\n            });\n          } catch (error) {\n            _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to get user tokens:', error);\n            return [];\n          }\n        });\n        function getUserTokens(_x4) {\n          return _getUserTokens.apply(this, arguments);\n        }\n        return getUserTokens;\n      }()\n      /**\r\n       * Check if token needs refresh\r\n       */\n      )\n    }, {\n      key: \"shouldRefreshToken\",\n      value: (function () {\n        var _shouldRefreshToken = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var lastSync = yield _asyncStorage.default.getItem(PushTokenManager.STORAGE_KEYS.LAST_SYNC_TIMESTAMP);\n            if (!lastSync) {\n              return true; // Never synced\n            }\n            var lastSyncTime = new Date(lastSync);\n            var now = new Date();\n            var daysSinceSync = (now.getTime() - lastSyncTime.getTime()) / (1000 * 60 * 60 * 24);\n\n            // Refresh token if it's been more than 7 days\n            return daysSinceSync > 7;\n          } catch (error) {\n            _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to check token refresh status:', error);\n            return true; // Default to refresh\n          }\n        });\n        function shouldRefreshToken() {\n          return _shouldRefreshToken.apply(this, arguments);\n        }\n        return shouldRefreshToken;\n      }()\n      /**\r\n       * Refresh token if needed\r\n       */\n      )\n    }, {\n      key: \"refreshTokenIfNeeded\",\n      value: (function () {\n        var _refreshTokenIfNeeded = (0, _asyncToGenerator2.default)(function* (userId) {\n          try {\n            var shouldRefresh = yield this.shouldRefreshToken();\n            if (!shouldRefresh) {\n              _EventLogger.EventLogger.debug('PushToken', '[PushTokenManager] Token refresh not needed');\n              return true;\n            }\n            _EventLogger.EventLogger.debug('PushToken', '[PushTokenManager] Refreshing token...');\n            return yield this.registerToken(userId);\n          } catch (error) {\n            _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to refresh token:', error);\n            return false;\n          }\n        });\n        function refreshTokenIfNeeded(_x5) {\n          return _refreshTokenIfNeeded.apply(this, arguments);\n        }\n        return refreshTokenIfNeeded;\n      }()\n      /**\r\n       * Get sync status information\r\n       */\n      )\n    }, {\n      key: \"getSyncStatus\",\n      value: (function () {\n        var _getSyncStatus = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var _yield$Promise$all = yield Promise.all([_asyncStorage.default.getItem(PushTokenManager.STORAGE_KEYS.TOKEN_SYNC_STATUS), _asyncStorage.default.getItem(PushTokenManager.STORAGE_KEYS.LAST_SYNC_TIMESTAMP), _asyncStorage.default.getItem(PushTokenManager.STORAGE_KEYS.SYNC_RETRIES)]),\n              _yield$Promise$all2 = (0, _slicedToArray2.default)(_yield$Promise$all, 3),\n              syncStatus = _yield$Promise$all2[0],\n              lastSync = _yield$Promise$all2[1],\n              retries = _yield$Promise$all2[2];\n            return {\n              isTokenSynced: syncStatus === 'success',\n              lastSyncTime: lastSync,\n              retryCount: retries ? parseInt(retries, 10) : 0\n            };\n          } catch (error) {\n            _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to get sync status:', error);\n            return {\n              isTokenSynced: false,\n              lastSyncTime: null,\n              retryCount: 0\n            };\n          }\n        });\n        function getSyncStatus() {\n          return _getSyncStatus.apply(this, arguments);\n        }\n        return getSyncStatus;\n      }()\n      /**\r\n       * Mark sync as successful\r\n       */\n      )\n    }, {\n      key: \"markSyncSuccess\",\n      value: (function () {\n        var _markSyncSuccess = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var timestamp = new Date().toISOString();\n            yield _asyncStorage.default.multiSet([[PushTokenManager.STORAGE_KEYS.TOKEN_SYNC_STATUS, 'success'], [PushTokenManager.STORAGE_KEYS.LAST_SYNC_TIMESTAMP, timestamp], [PushTokenManager.STORAGE_KEYS.SYNC_RETRIES, '0']]);\n          } catch (error) {\n            _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to mark sync success:', error);\n          }\n        });\n        function markSyncSuccess() {\n          return _markSyncSuccess.apply(this, arguments);\n        }\n        return markSyncSuccess;\n      }()\n      /**\r\n       * Handle sync failure with retry logic\r\n       */\n      )\n    }, {\n      key: \"handleSyncFailure\",\n      value: (function () {\n        var _handleSyncFailure = (0, _asyncToGenerator2.default)(function* () {\n          var _this = this;\n          try {\n            var currentRetries = yield _asyncStorage.default.getItem(PushTokenManager.STORAGE_KEYS.SYNC_RETRIES);\n            var retryCount = currentRetries ? parseInt(currentRetries, 10) : 0;\n            var newRetryCount = retryCount + 1;\n            yield _asyncStorage.default.multiSet([[PushTokenManager.STORAGE_KEYS.TOKEN_SYNC_STATUS, 'failed'], [PushTokenManager.STORAGE_KEYS.SYNC_RETRIES, newRetryCount.toString()]]);\n\n            // Schedule retry if within limits\n            if (newRetryCount <= PushTokenManager.MAX_SYNC_RETRIES) {\n              _EventLogger.EventLogger.debug('PushToken', '[PushTokenManager] Scheduling retry ${newRetryCount}/${PushTokenManager.MAX_SYNC_RETRIES}');\n              setTimeout(function () {\n                _this.retryTokenSync();\n              }, PushTokenManager.SYNC_RETRY_DELAY * newRetryCount); // Exponential backoff\n            } else {\n              _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Max retry attempts reached, giving up');\n            }\n          } catch (error) {\n            _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to handle sync failure:', error);\n          }\n        });\n        function handleSyncFailure() {\n          return _handleSyncFailure.apply(this, arguments);\n        }\n        return handleSyncFailure;\n      }()\n      /**\r\n       * Retry token sync\r\n       */\n      )\n    }, {\n      key: \"retryTokenSync\",\n      value: (function () {\n        var _retryTokenSync = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            _EventLogger.EventLogger.debug('PushToken', '[PushTokenManager] Retrying token sync...');\n\n            // Get current user from auth state (this would need to be passed in)\n            // For now, we'll just retry without user ID\n            yield this.registerToken();\n          } catch (error) {\n            _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Retry failed:', error);\n          }\n        });\n        function retryTokenSync() {\n          return _retryTokenSync.apply(this, arguments);\n        }\n        return retryTokenSync;\n      }()\n      /**\r\n       * Clean up old tokens for a user (keep only latest 5 devices)\r\n       */\n      )\n    }, {\n      key: \"cleanupOldTokens\",\n      value: (function () {\n        var _cleanupOldTokens = (0, _asyncToGenerator2.default)(function* (userId) {\n          try {\n            var _yield$supabase$from$5 = yield _client.supabase.from('push_tokens').select('*').eq('user_id', userId).order('updated_at', {\n                ascending: false\n              }),\n              tokens = _yield$supabase$from$5.data,\n              error = _yield$supabase$from$5.error;\n            if (error || !tokens) {\n              _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to get tokens for cleanup:', error);\n              return;\n            }\n\n            // Keep only the 5 most recent tokens\n            var tokensToDelete = tokens.slice(5);\n            if (tokensToDelete.length > 0) {\n              var deviceIdsToDelete = tokensToDelete.map(function (token) {\n                return token.device_id;\n              });\n              var _yield$supabase$from$6 = yield _client.supabase.from('push_tokens').delete().in('device_id', deviceIdsToDelete),\n                deleteError = _yield$supabase$from$6.error;\n              if (deleteError) {\n                _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to cleanup old tokens:', deleteError);\n              } else {\n                _EventLogger.EventLogger.debug('PushToken', '[PushTokenManager] Cleaned up ${tokensToDelete.length} old tokens');\n              }\n            }\n          } catch (error) {\n            _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to cleanup old tokens:', error);\n          }\n        });\n        function cleanupOldTokens(_x6) {\n          return _cleanupOldTokens.apply(this, arguments);\n        }\n        return cleanupOldTokens;\n      }()\n      /**\r\n       * Clear all local token data\r\n       */\n      )\n    }, {\n      key: \"clearLocalData\",\n      value: (function () {\n        var _clearLocalData = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            yield _asyncStorage.default.multiRemove([PushTokenManager.STORAGE_KEYS.DEVICE_ID, PushTokenManager.STORAGE_KEYS.TOKEN_SYNC_STATUS, PushTokenManager.STORAGE_KEYS.LAST_SYNC_TIMESTAMP, PushTokenManager.STORAGE_KEYS.SYNC_RETRIES]);\n            _EventLogger.EventLogger.debug('PushToken', '[PushTokenManager] Local data cleared');\n          } catch (error) {\n            _EventLogger.EventLogger.error('PushToken', '[PushTokenManager] Failed to clear local data:', error);\n          }\n        });\n        function clearLocalData() {\n          return _clearLocalData.apply(this, arguments);\n        }\n        return clearLocalData;\n      }())\n    }], [{\n      key: \"getInstance\",\n      value: function getInstance() {\n        if (!PushTokenManager.instance) {\n          PushTokenManager.instance = new PushTokenManager();\n        }\n        return PushTokenManager.instance;\n      }\n    }]);\n  }();\n  // Storage keys\n  PushTokenManager.STORAGE_KEYS = {\n    DEVICE_ID: '@zaptap_device_id',\n    TOKEN_SYNC_STATUS: '@zaptap_token_sync_status',\n    LAST_SYNC_TIMESTAMP: '@zaptap_last_token_sync',\n    SYNC_RETRIES: '@zaptap_sync_retries'\n  };\n  // Maximum retry attempts for token sync\n  PushTokenManager.MAX_SYNC_RETRIES = 3;\n  PushTokenManager.SYNC_RETRY_DELAY = 5000;\n  var _default = exports.default = PushTokenManager.getInstance();\n});","lineCount":514,"map":[[11,2,7,0],[11,6,7,0,"_asyncStorage"],[11,19,7,0],[11,22,7,0,"_interopRequireDefault"],[11,44,7,0],[11,45,7,0,"require"],[11,52,7,0],[11,53,7,0,"_dependencyMap"],[11,67,7,0],[12,2,8,0],[12,6,8,0,"Device"],[12,12,8,0],[12,15,8,0,"_interopRequireWildcard"],[12,38,8,0],[12,39,8,0,"require"],[12,46,8,0],[12,47,8,0,"_dependencyMap"],[12,61,8,0],[13,2,9,0],[13,6,9,0,"_reactNative"],[13,18,9,0],[13,21,9,0,"require"],[13,28,9,0],[13,29,9,0,"_dependencyMap"],[13,43,9,0],[14,2,10,0],[14,6,10,0,"_client"],[14,13,10,0],[14,16,10,0,"require"],[14,23,10,0],[14,24,10,0,"_dependencyMap"],[14,38,10,0],[15,2,12,0],[15,6,12,0,"_NotificationService"],[15,26,12,0],[15,29,12,0,"_interopRequireDefault"],[15,51,12,0],[15,52,12,0,"require"],[15,59,12,0],[15,60,12,0,"_dependencyMap"],[15,74,12,0],[16,2,13,0],[16,6,13,0,"_EventLogger"],[16,18,13,0],[16,21,13,0,"require"],[16,28,13,0],[16,29,13,0,"_dependencyMap"],[16,43,13,0],[17,2,13,54],[17,11,13,54,"_interopRequireWildcard"],[17,35,13,54,"e"],[17,36,13,54],[17,38,13,54,"t"],[17,39,13,54],[17,68,13,54,"WeakMap"],[17,75,13,54],[17,81,13,54,"r"],[17,82,13,54],[17,89,13,54,"WeakMap"],[17,96,13,54],[17,100,13,54,"n"],[17,101,13,54],[17,108,13,54,"WeakMap"],[17,115,13,54],[17,127,13,54,"_interopRequireWildcard"],[17,150,13,54],[17,162,13,54,"_interopRequireWildcard"],[17,186,13,54,"e"],[17,187,13,54],[17,189,13,54,"t"],[17,190,13,54],[17,199,13,54,"t"],[17,200,13,54],[17,204,13,54,"e"],[17,205,13,54],[17,209,13,54,"e"],[17,210,13,54],[17,211,13,54,"__esModule"],[17,221,13,54],[17,230,13,54,"e"],[17,231,13,54],[17,237,13,54,"o"],[17,238,13,54],[17,240,13,54,"i"],[17,241,13,54],[17,243,13,54,"f"],[17,244,13,54],[17,249,13,54,"__proto__"],[17,258,13,54],[17,266,13,54,"default"],[17,273,13,54],[17,275,13,54,"e"],[17,276,13,54],[17,293,13,54,"e"],[17,294,13,54],[17,317,13,54,"e"],[17,318,13,54],[17,343,13,54,"e"],[17,344,13,54],[17,353,13,54,"f"],[17,354,13,54],[17,360,13,54,"o"],[17,361,13,54],[17,364,13,54,"t"],[17,365,13,54],[17,368,13,54,"n"],[17,369,13,54],[17,372,13,54,"r"],[17,373,13,54],[17,381,13,54,"o"],[17,382,13,54],[17,383,13,54,"has"],[17,386,13,54],[17,387,13,54,"e"],[17,388,13,54],[17,398,13,54,"o"],[17,399,13,54],[17,400,13,54,"get"],[17,403,13,54],[17,404,13,54,"e"],[17,405,13,54],[17,408,13,54,"o"],[17,409,13,54],[17,410,13,54,"set"],[17,413,13,54],[17,414,13,54,"e"],[17,415,13,54],[17,417,13,54,"f"],[17,418,13,54],[17,432,13,54,"_t"],[17,434,13,54],[17,438,13,54,"e"],[17,439,13,54],[17,455,13,54,"_t"],[17,457,13,54],[17,464,13,54,"hasOwnProperty"],[17,478,13,54],[17,479,13,54,"call"],[17,483,13,54],[17,484,13,54,"e"],[17,485,13,54],[17,487,13,54,"_t"],[17,489,13,54],[17,496,13,54,"i"],[17,497,13,54],[17,501,13,54,"o"],[17,502,13,54],[17,505,13,54,"Object"],[17,511,13,54],[17,512,13,54,"defineProperty"],[17,526,13,54],[17,531,13,54,"Object"],[17,537,13,54],[17,538,13,54,"getOwnPropertyDescriptor"],[17,562,13,54],[17,563,13,54,"e"],[17,564,13,54],[17,566,13,54,"_t"],[17,568,13,54],[17,575,13,54,"i"],[17,576,13,54],[17,577,13,54,"get"],[17,580,13,54],[17,584,13,54,"i"],[17,585,13,54],[17,586,13,54,"set"],[17,589,13,54],[17,593,13,54,"o"],[17,594,13,54],[17,595,13,54,"f"],[17,596,13,54],[17,598,13,54,"_t"],[17,600,13,54],[17,602,13,54,"i"],[17,603,13,54],[17,607,13,54,"f"],[17,608,13,54],[17,609,13,54,"_t"],[17,611,13,54],[17,615,13,54,"e"],[17,616,13,54],[17,617,13,54,"_t"],[17,619,13,54],[17,630,13,54,"f"],[17,631,13,54],[17,636,13,54,"e"],[17,637,13,54],[17,639,13,54,"t"],[17,640,13,54],[18,2,1,0],[19,0,2,0],[20,0,3,0],[21,0,4,0],[22,0,5,0],[23,2,1,0],[23,6,15,6,"PushTokenManager"],[23,22,15,22],[24,4,29,51],[26,4,31,2],[26,13,31,2,"PushTokenManager"],[26,30,31,2],[26,32,31,24],[27,6,31,24],[27,10,31,24,"_classCallCheck2"],[27,26,31,24],[27,27,31,24,"default"],[27,34,31,24],[27,42,31,24,"PushTokenManager"],[27,58,31,24],[28,6,31,24],[28,11,17,10,"syncInProgress"],[28,25,17,24],[28,28,17,27],[28,33,17,32],[29,4,31,25],[30,4,31,26],[30,15,31,26,"_createClass2"],[30,28,31,26],[30,29,31,26,"default"],[30,36,31,26],[30,38,31,26,"PushTokenManager"],[30,54,31,26],[31,6,31,26,"key"],[31,9,31,26],[32,6,31,26,"value"],[32,11,31,26],[33,6,40,2],[34,0,41,0],[35,0,42,0],[36,6,40,2],[37,8,40,2],[37,12,40,2,"_getDeviceId"],[37,24,40,2],[37,31,40,2,"_asyncToGenerator2"],[37,49,40,2],[37,50,40,2,"default"],[37,57,40,2],[37,59,43,2],[37,72,43,46],[38,10,44,4],[38,14,44,8],[39,12,45,6],[39,16,45,10,"deviceId"],[39,24,45,18],[39,33,45,27,"AsyncStorage"],[39,54,45,39],[39,55,45,40,"getItem"],[39,62,45,47],[39,63,45,48,"PushTokenManager"],[39,79,45,64],[39,80,45,65,"STORAGE_KEYS"],[39,92,45,77],[39,93,45,78,"DEVICE_ID"],[39,102,45,87],[39,103,45,88],[40,12,47,6],[40,16,47,10],[40,17,47,11,"deviceId"],[40,25,47,19],[40,27,47,21],[41,14,48,8],[42,14,49,8,"deviceId"],[42,22,49,16],[42,25,49,19],[42,28,49,22,"Platform"],[42,49,49,30],[42,50,49,31,"OS"],[42,52,49,33],[42,56,49,37,"Device"],[42,62,49,43],[42,63,49,44,"modelName"],[42,72,49,53],[42,76,49,57],[42,85,49,66],[42,89,49,70,"Date"],[42,93,49,74],[42,94,49,75,"now"],[42,97,49,78],[42,98,49,79],[42,99,49,80],[42,103,49,84,"Math"],[42,107,49,88],[42,108,49,89,"random"],[42,114,49,95],[42,115,49,96],[42,116,49,97],[42,117,49,98,"toString"],[42,125,49,106],[42,126,49,107],[42,128,49,109],[42,129,49,110],[42,130,49,111,"substr"],[42,136,49,117],[42,137,49,118],[42,138,49,119],[42,140,49,121],[42,141,49,122],[42,142,49,123],[42,144,49,125],[43,14,50,8],[43,20,50,14,"AsyncStorage"],[43,41,50,26],[43,42,50,27,"setItem"],[43,49,50,34],[43,50,50,35,"PushTokenManager"],[43,66,50,51],[43,67,50,52,"STORAGE_KEYS"],[43,79,50,64],[43,80,50,65,"DEVICE_ID"],[43,89,50,74],[43,91,50,76,"deviceId"],[43,99,50,84],[43,100,50,85],[44,14,51,8,"EventLogger"],[44,38,51,19],[44,39,51,20,"debug"],[44,44,51,25],[44,45,51,26],[44,56,51,37],[44,58,51,39],[44,103,51,84],[44,105,51,86,"deviceId"],[44,113,51,94],[44,114,51,95],[45,12,52,6],[46,12,54,6],[46,19,54,13,"deviceId"],[46,27,54,21],[47,10,55,4],[47,11,55,5],[47,12,55,6],[47,19,55,13,"error"],[47,24,55,18],[47,26,55,20],[48,12,56,6,"EventLogger"],[48,36,56,17],[48,37,56,18,"error"],[48,42,56,23],[48,43,56,24],[48,54,56,35],[48,56,56,37],[48,101,56,82],[48,103,56,84,"error"],[48,108,56,98],[48,109,56,99],[49,12,57,6],[50,12,58,6],[50,19,58,13],[50,22,58,16,"Platform"],[50,43,58,24],[50,44,58,25,"OS"],[50,46,58,27],[50,59,58,40,"Date"],[50,63,58,44],[50,64,58,45,"now"],[50,67,58,48],[50,68,58,49],[50,69,58,50],[50,71,58,52],[51,10,59,4],[52,8,60,2],[52,9,60,3],[53,8,60,3],[53,17,43,15,"getDeviceId"],[53,28,43,26,"getDeviceId"],[53,29,43,26],[54,10,43,26],[54,17,43,26,"_getDeviceId"],[54,29,43,26],[54,30,43,26,"apply"],[54,35,43,26],[54,42,43,26,"arguments"],[54,51,43,26],[55,8,43,26],[56,8,43,26],[56,15,43,15,"getDeviceId"],[56,26,43,26],[57,6,43,26],[58,6,62,2],[59,0,63,0],[60,0,64,0],[61,6,62,2],[62,4,62,2],[63,6,62,2,"key"],[63,9,62,2],[64,6,62,2,"value"],[64,11,62,2],[65,8,62,2],[65,12,62,2,"_registerToken"],[65,26,62,2],[65,33,62,2,"_asyncToGenerator2"],[65,51,62,2],[65,52,62,2,"default"],[65,59,62,2],[65,61,65,2],[65,72,65,29,"userId"],[65,78,65,44],[65,80,65,64],[66,10,66,4],[66,14,66,8],[67,12,67,6],[67,16,67,10],[67,20,67,14],[67,21,67,15,"syncInProgress"],[67,35,67,29],[67,37,67,31],[68,14,68,8,"EventLogger"],[68,38,68,19],[68,39,68,20,"debug"],[68,44,68,25],[68,45,68,26],[68,56,68,37],[68,58,68,39],[68,109,68,90],[68,110,68,91],[69,14,69,8],[69,21,69,15],[69,26,69,20],[70,12,70,6],[71,12,72,6],[71,16,72,10],[71,17,72,11,"syncInProgress"],[71,31,72,25],[71,34,72,28],[71,38,72,32],[73,12,74,6],[74,12,75,6],[74,16,75,12,"token"],[74,21,75,17],[74,30,75,26,"NotificationService"],[74,58,75,45],[74,59,75,46,"getPushToken"],[74,71,75,58],[74,72,75,59],[74,73,75,60],[75,12,76,6],[75,16,76,10],[75,17,76,11,"token"],[75,22,76,16],[75,24,76,18],[76,14,77,8,"EventLogger"],[76,38,77,19],[76,39,77,20,"warn"],[76,43,77,24],[76,44,77,25],[76,55,77,36],[76,57,77,38],[76,101,77,82],[76,102,77,83],[77,14,78,8],[77,18,78,12],[77,19,78,13,"syncInProgress"],[77,33,78,27],[77,36,78,30],[77,41,78,35],[78,14,79,8],[78,21,79,15],[78,26,79,20],[79,12,80,6],[81,12,82,6],[82,12,83,6],[82,16,83,12,"deviceId"],[82,24,83,20],[82,33,83,29],[82,37,83,33],[82,38,83,34,"getDeviceId"],[82,49,83,45],[82,50,83,46],[82,51,83,47],[83,12,84,6],[83,16,84,12,"platform"],[83,24,84,20],[83,27,84,23,"Platform"],[83,48,84,31],[83,49,84,32,"OS"],[83,51,84,55],[85,12,86,6],[86,12,87,6],[86,16,87,12,"pushTokenData"],[86,29,87,69],[86,32,87,72],[87,14,88,8,"token"],[87,19,88,13],[87,21,88,8,"token"],[87,26,88,13],[88,14,89,8,"deviceId"],[88,22,89,16],[88,24,89,8,"deviceId"],[88,32,89,16],[89,14,90,8,"platform"],[89,22,90,16],[89,24,90,8,"platform"],[89,32,90,16],[90,14,91,8,"userId"],[90,20,91,14],[90,22,91,8,"userId"],[91,12,92,6],[91,13,92,7],[93,12,94,6],[94,12,95,6],[94,16,95,12,"success"],[94,23,95,19],[94,32,95,28],[94,36,95,32],[94,37,95,33,"syncTokenWithSupabase"],[94,58,95,54],[94,59,95,55,"pushTokenData"],[94,72,95,68],[94,73,95,69],[95,12,97,6],[95,16,97,10,"success"],[95,23,97,17],[95,25,97,19],[96,14,98,8],[96,20,98,14],[96,24,98,18],[96,25,98,19,"markSyncSuccess"],[96,40,98,34],[96,41,98,35],[96,42,98,36],[97,14,99,8,"EventLogger"],[97,38,99,19],[97,39,99,20,"debug"],[97,44,99,25],[97,45,99,26],[97,56,99,37],[97,58,99,39],[97,108,99,89],[97,109,99,90],[98,12,100,6],[98,13,100,7],[98,19,100,13],[99,14,101,8],[99,20,101,14],[99,24,101,18],[99,25,101,19,"handleSyncFailure"],[99,42,101,36],[99,43,101,37],[99,44,101,38],[100,12,102,6],[101,12,104,6],[101,16,104,10],[101,17,104,11,"syncInProgress"],[101,31,104,25],[101,34,104,28],[101,39,104,33],[102,12,105,6],[102,19,105,13,"success"],[102,26,105,20],[103,10,107,4],[103,11,107,5],[103,12,107,6],[103,19,107,13,"error"],[103,24,107,18],[103,26,107,20],[104,12,108,6,"EventLogger"],[104,36,108,17],[104,37,108,18,"error"],[104,42,108,23],[104,43,108,24],[104,54,108,35],[104,56,108,37],[104,102,108,83],[104,104,108,85,"error"],[104,109,108,99],[104,110,108,100],[105,12,109,6],[105,16,109,10],[105,17,109,11,"syncInProgress"],[105,31,109,25],[105,34,109,28],[105,39,109,33],[106,12,110,6],[106,18,110,12],[106,22,110,16],[106,23,110,17,"handleSyncFailure"],[106,40,110,34],[106,41,110,35],[106,42,110,36],[107,12,111,6],[107,19,111,13],[107,24,111,18],[108,10,112,4],[109,8,113,2],[109,9,113,3],[110,8,113,3],[110,17,65,15,"registerToken"],[110,30,65,28,"registerToken"],[110,31,65,28,"_x"],[110,33,65,28],[111,10,65,28],[111,17,65,28,"_registerToken"],[111,31,65,28],[111,32,65,28,"apply"],[111,37,65,28],[111,44,65,28,"arguments"],[111,53,65,28],[112,8,65,28],[113,8,65,28],[113,15,65,15,"registerToken"],[113,28,65,28],[114,6,65,28],[115,6,115,2],[116,0,116,0],[117,0,117,0],[118,6,115,2],[119,4,115,2],[120,6,115,2,"key"],[120,9,115,2],[121,6,115,2,"value"],[121,11,115,2],[122,8,115,2],[122,12,115,2,"_syncTokenWithSupabase"],[122,34,115,2],[122,41,115,2,"_asyncToGenerator2"],[122,59,115,2],[122,60,115,2,"default"],[122,67,115,2],[122,69,118,2],[122,80,118,38,"tokenData"],[122,89,118,91],[122,91,118,111],[123,10,119,4],[123,14,119,8],[124,12,120,6],[125,12,121,6],[125,16,121,6,"_yield$supabase$from$"],[125,37,121,6],[125,46,121,58,"supabase"],[125,62,121,66],[125,63,122,9,"from"],[125,67,122,13],[125,68,122,14],[125,81,122,27],[125,82,122,28],[125,83,123,9,"select"],[125,89,123,15],[125,90,123,16],[125,93,123,19],[125,94,123,20],[125,95,124,9,"eq"],[125,97,124,11],[125,98,124,12],[125,109,124,23],[125,111,124,25,"tokenData"],[125,120,124,34],[125,121,124,35,"deviceId"],[125,129,124,43],[125,130,124,44],[125,131,125,9,"single"],[125,137,125,15],[125,138,125,16],[125,139,125,17],[126,14,121,20,"existing"],[126,22,121,28],[126,25,121,28,"_yield$supabase$from$"],[126,46,121,28],[126,47,121,14,"data"],[126,51,121,18],[127,14,121,37,"fetchError"],[127,24,121,47],[127,27,121,47,"_yield$supabase$from$"],[127,48,121,47],[127,49,121,30,"error"],[127,54,121,35],[128,12,127,6],[128,16,127,10,"fetchError"],[128,26,127,20],[128,30,127,24,"fetchError"],[128,40,127,34],[128,41,127,35,"code"],[128,45,127,39],[128,50,127,44],[128,60,127,54],[128,62,127,56],[129,14,127,58],[130,14,128,8,"EventLogger"],[130,38,128,19],[130,39,128,20,"error"],[130,44,128,25],[130,45,128,26],[130,56,128,37],[130,58,128,39],[130,109,128,90],[130,111,128,92,"fetchError"],[130,121,128,111],[130,122,128,112],[131,14,129,8],[131,21,129,15],[131,26,129,20],[132,12,130,6],[133,12,132,6],[133,16,132,10,"result"],[133,22,132,16],[134,12,134,6],[134,16,134,10,"existing"],[134,24,134,18],[134,26,134,20],[135,14,135,8],[136,14,136,8,"result"],[136,20,136,14],[136,29,136,23,"supabase"],[136,45,136,31],[136,46,137,11,"from"],[136,50,137,15],[136,51,137,16],[136,64,137,29],[136,65,137,30],[136,66,138,11,"update"],[136,72,138,17],[136,73,138,18],[137,16,139,12,"token"],[137,21,139,17],[137,23,139,19,"tokenData"],[137,32,139,28],[137,33,139,29,"token"],[137,38,139,34],[138,16,140,12,"user_id"],[138,23,140,19],[138,25,140,21,"tokenData"],[138,34,140,30],[138,35,140,31,"userId"],[138,41,140,37],[139,16,141,12,"platform"],[139,24,141,20],[139,26,141,22,"tokenData"],[139,35,141,31],[139,36,141,32,"platform"],[139,44,141,40],[140,16,142,12,"updated_at"],[140,26,142,22],[140,28,142,24],[140,32,142,28,"Date"],[140,36,142,32],[140,37,142,33],[140,38,142,34],[140,39,142,35,"toISOString"],[140,50,142,46],[140,51,142,47],[141,14,143,10],[141,15,143,11],[141,16,143,12],[141,17,144,11,"eq"],[141,19,144,13],[141,20,144,14],[141,31,144,25],[141,33,144,27,"tokenData"],[141,42,144,36],[141,43,144,37,"deviceId"],[141,51,144,45],[141,52,144,46],[142,12,145,6],[142,13,145,7],[142,19,145,13],[143,14,146,8],[144,14,147,8,"result"],[144,20,147,14],[144,29,147,23,"supabase"],[144,45,147,31],[144,46,148,11,"from"],[144,50,148,15],[144,51,148,16],[144,64,148,29],[144,65,148,30],[144,66,149,11,"insert"],[144,72,149,17],[144,73,149,18],[145,16,150,12,"token"],[145,21,150,17],[145,23,150,19,"tokenData"],[145,32,150,28],[145,33,150,29,"token"],[145,38,150,34],[146,16,151,12,"device_id"],[146,25,151,21],[146,27,151,23,"tokenData"],[146,36,151,32],[146,37,151,33,"deviceId"],[146,45,151,41],[147,16,152,12,"platform"],[147,24,152,20],[147,26,152,22,"tokenData"],[147,35,152,31],[147,36,152,32,"platform"],[147,44,152,40],[148,16,153,12,"user_id"],[148,23,153,19],[148,25,153,21,"tokenData"],[148,34,153,30],[148,35,153,31,"userId"],[148,41,153,37],[149,16,154,12,"created_at"],[149,26,154,22],[149,28,154,24],[149,32,154,28,"Date"],[149,36,154,32],[149,37,154,33],[149,38,154,34],[149,39,154,35,"toISOString"],[149,50,154,46],[149,51,154,47],[149,52,154,48],[150,16,155,12,"updated_at"],[150,26,155,22],[150,28,155,24],[150,32,155,28,"Date"],[150,36,155,32],[150,37,155,33],[150,38,155,34],[150,39,155,35,"toISOString"],[150,50,155,46],[150,51,155,47],[151,14,156,10],[151,15,156,11],[151,16,156,12],[152,12,157,6],[153,12,159,6],[153,16,159,10,"result"],[153,22,159,16],[153,23,159,17,"error"],[153,28,159,22],[153,30,159,24],[154,14,160,8,"EventLogger"],[154,38,160,19],[154,39,160,20,"error"],[154,44,160,25],[154,45,160,26],[154,56,160,37],[154,58,160,39],[154,99,160,80],[154,101,160,82,"result"],[154,107,160,88],[154,108,160,89,"error"],[154,113,160,103],[154,114,160,104],[155,14,161,8],[155,21,161,15],[155,26,161,20],[156,12,162,6],[157,12,164,6,"EventLogger"],[157,36,164,17],[157,37,164,18,"debug"],[157,42,164,23],[157,43,164,24],[157,54,164,35],[157,56,164,37],[157,116,164,97],[157,117,164,98],[158,12,165,6],[158,19,165,13],[158,23,165,17],[159,10,167,4],[159,11,167,5],[159,12,167,6],[159,19,167,13,"error"],[159,24,167,18],[159,26,167,20],[160,12,168,6,"EventLogger"],[160,36,168,17],[160,37,168,18,"error"],[160,42,168,23],[160,43,168,24],[160,54,168,35],[160,56,168,37],[160,98,168,79],[160,100,168,81,"error"],[160,105,168,95],[160,106,168,96],[161,12,169,6],[161,19,169,13],[161,24,169,18],[162,10,170,4],[163,8,171,2],[163,9,171,3],[164,8,171,3],[164,17,118,16,"syncTokenWithSupabase"],[164,38,118,37,"syncTokenWithSupabase"],[164,39,118,37,"_x2"],[164,42,118,37],[165,10,118,37],[165,17,118,37,"_syncTokenWithSupabase"],[165,39,118,37],[165,40,118,37,"apply"],[165,45,118,37],[165,52,118,37,"arguments"],[165,61,118,37],[166,8,118,37],[167,8,118,37],[167,15,118,16,"syncTokenWithSupabase"],[167,36,118,37],[168,6,118,37],[169,6,173,2],[170,0,174,0],[171,0,175,0],[172,6,173,2],[173,4,173,2],[174,6,173,2,"key"],[174,9,173,2],[175,6,173,2,"value"],[175,11,173,2],[176,8,173,2],[176,12,173,2,"_unregisterToken"],[176,28,173,2],[176,35,173,2,"_asyncToGenerator2"],[176,53,173,2],[176,54,173,2,"default"],[176,61,173,2],[176,63,176,2],[176,76,176,51],[177,10,177,4],[177,14,177,8],[178,12,178,6],[178,16,178,12,"deviceId"],[178,24,178,20],[178,33,178,29],[178,37,178,33],[178,38,178,34,"getDeviceId"],[178,49,178,45],[178,50,178,46],[178,51,178,47],[179,12,180,6],[179,16,180,6,"_yield$supabase$from$2"],[179,38,180,6],[179,47,180,30,"supabase"],[179,63,180,38],[179,64,181,9,"from"],[179,68,181,13],[179,69,181,14],[179,82,181,27],[179,83,181,28],[179,84,182,9,"delete"],[179,90,182,15],[179,91,182,16],[179,92,182,17],[179,93,183,9,"eq"],[179,95,183,11],[179,96,183,12],[179,107,183,23],[179,109,183,25,"deviceId"],[179,117,183,33],[179,118,183,34],[180,14,180,14,"error"],[180,19,180,19],[180,22,180,19,"_yield$supabase$from$2"],[180,44,180,19],[180,45,180,14,"error"],[180,50,180,19],[181,12,185,6],[181,16,185,10,"error"],[181,21,185,15],[181,23,185,17],[182,14,186,8,"EventLogger"],[182,38,186,19],[182,39,186,20,"error"],[182,44,186,25],[182,45,186,26],[182,56,186,37],[182,58,186,39],[182,106,186,87],[182,108,186,89,"error"],[182,113,186,103],[182,114,186,104],[183,14,187,8],[183,21,187,15],[183,26,187,20],[184,12,188,6],[186,12,190,6],[187,12,191,6],[187,18,191,12,"AsyncStorage"],[187,39,191,24],[187,40,191,25,"multiRemove"],[187,51,191,36],[187,52,191,37],[187,53,192,8,"PushTokenManager"],[187,69,192,24],[187,70,192,25,"STORAGE_KEYS"],[187,82,192,37],[187,83,192,38,"TOKEN_SYNC_STATUS"],[187,100,192,55],[187,102,193,8,"PushTokenManager"],[187,118,193,24],[187,119,193,25,"STORAGE_KEYS"],[187,131,193,37],[187,132,193,38,"LAST_SYNC_TIMESTAMP"],[187,151,193,57],[187,153,194,8,"PushTokenManager"],[187,169,194,24],[187,170,194,25,"STORAGE_KEYS"],[187,182,194,37],[187,183,194,38,"SYNC_RETRIES"],[187,195,194,50],[187,196,195,7],[187,197,195,8],[188,12,197,6,"EventLogger"],[188,36,197,17],[188,37,197,18,"debug"],[188,42,197,23],[188,43,197,24],[188,54,197,35],[188,56,197,37],[188,108,197,89],[188,109,197,90],[189,12,198,6],[189,19,198,13],[189,23,198,17],[190,10,200,4],[190,11,200,5],[190,12,200,6],[190,19,200,13,"error"],[190,24,200,18],[190,26,200,20],[191,12,201,6,"EventLogger"],[191,36,201,17],[191,37,201,18,"error"],[191,42,201,23],[191,43,201,24],[191,54,201,35],[191,56,201,37],[191,104,201,85],[191,106,201,87,"error"],[191,111,201,101],[191,112,201,102],[192,12,202,6],[192,19,202,13],[192,24,202,18],[193,10,203,4],[194,8,204,2],[194,9,204,3],[195,8,204,3],[195,17,176,15,"unregisterToken"],[195,32,176,30,"unregisterToken"],[195,33,176,30],[196,10,176,30],[196,17,176,30,"_unregisterToken"],[196,33,176,30],[196,34,176,30,"apply"],[196,39,176,30],[196,46,176,30,"arguments"],[196,55,176,30],[197,8,176,30],[198,8,176,30],[198,15,176,15,"unregisterToken"],[198,30,176,30],[199,6,176,30],[200,6,206,2],[201,0,207,0],[202,0,208,0],[203,6,206,2],[204,4,206,2],[205,6,206,2,"key"],[205,9,206,2],[206,6,206,2,"value"],[206,11,206,2],[207,8,206,2],[207,12,206,2,"_updateUserId"],[207,25,206,2],[207,32,206,2,"_asyncToGenerator2"],[207,50,206,2],[207,51,206,2,"default"],[207,58,206,2],[207,60,209,2],[207,71,209,28,"userId"],[207,77,209,42],[207,79,209,62],[208,10,210,4],[208,14,210,8],[209,12,211,6],[209,16,211,12,"deviceId"],[209,24,211,20],[209,33,211,29],[209,37,211,33],[209,38,211,34,"getDeviceId"],[209,49,211,45],[209,50,211,46],[209,51,211,47],[210,12,213,6],[210,16,213,6,"_yield$supabase$from$3"],[210,38,213,6],[210,47,213,30,"supabase"],[210,63,213,38],[210,64,214,9,"from"],[210,68,214,13],[210,69,214,14],[210,82,214,27],[210,83,214,28],[210,84,215,9,"update"],[210,90,215,15],[210,91,215,16],[211,16,216,10,"user_id"],[211,23,216,17],[211,25,216,19,"userId"],[211,31,216,25],[212,16,217,10,"updated_at"],[212,26,217,20],[212,28,217,22],[212,32,217,26,"Date"],[212,36,217,30],[212,37,217,31],[212,38,217,32],[212,39,217,33,"toISOString"],[212,50,217,44],[212,51,217,45],[213,14,218,8],[213,15,218,9],[213,16,218,10],[213,17,219,9,"eq"],[213,19,219,11],[213,20,219,12],[213,31,219,23],[213,33,219,25,"deviceId"],[213,41,219,33],[213,42,219,34],[214,14,213,14,"error"],[214,19,213,19],[214,22,213,19,"_yield$supabase$from$3"],[214,44,213,19],[214,45,213,14,"error"],[214,50,213,19],[215,12,221,6],[215,16,221,10,"error"],[215,21,221,15],[215,23,221,17],[216,14,222,8,"EventLogger"],[216,38,222,19],[216,39,222,20,"error"],[216,44,222,25],[216,45,222,26],[216,56,222,37],[216,58,222,39],[216,104,222,85],[216,106,222,87,"error"],[216,111,222,101],[216,112,222,102],[217,14,223,8],[217,21,223,15],[217,26,223,20],[218,12,224,6],[219,12,226,6,"EventLogger"],[219,36,226,17],[219,37,226,18,"debug"],[219,42,226,23],[219,43,226,24],[219,54,226,35],[219,56,226,37],[219,105,226,86],[219,106,226,87],[220,12,227,6],[220,19,227,13],[220,23,227,17],[221,10,229,4],[221,11,229,5],[221,12,229,6],[221,19,229,13,"error"],[221,24,229,18],[221,26,229,20],[222,12,230,6,"EventLogger"],[222,36,230,17],[222,37,230,18,"error"],[222,42,230,23],[222,43,230,24],[222,54,230,35],[222,56,230,37],[222,102,230,83],[222,104,230,85,"error"],[222,109,230,99],[222,110,230,100],[223,12,231,6],[223,19,231,13],[223,24,231,18],[224,10,232,4],[225,8,233,2],[225,9,233,3],[226,8,233,3],[226,17,209,15,"updateUserId"],[226,29,209,27,"updateUserId"],[226,30,209,27,"_x3"],[226,33,209,27],[227,10,209,27],[227,17,209,27,"_updateUserId"],[227,30,209,27],[227,31,209,27,"apply"],[227,36,209,27],[227,43,209,27,"arguments"],[227,52,209,27],[228,8,209,27],[229,8,209,27],[229,15,209,15,"updateUserId"],[229,27,209,27],[230,6,209,27],[231,6,235,2],[232,0,236,0],[233,0,237,0],[234,6,235,2],[235,4,235,2],[236,6,235,2,"key"],[236,9,235,2],[237,6,235,2,"value"],[237,11,235,2],[238,8,235,2],[238,12,235,2,"_getUserTokens"],[238,26,235,2],[238,33,235,2,"_asyncToGenerator2"],[238,51,235,2],[238,52,235,2,"default"],[238,59,235,2],[238,61,238,2],[238,72,238,29,"userId"],[238,78,238,43],[238,80,238,67],[239,10,239,4],[239,14,239,8],[240,12,240,6],[240,16,240,6,"_yield$supabase$from$4"],[240,38,240,6],[240,47,240,36,"supabase"],[240,63,240,44],[240,64,241,9,"from"],[240,68,241,13],[240,69,241,14],[240,82,241,27],[240,83,241,28],[240,84,242,9,"select"],[240,90,242,15],[240,91,242,16],[240,94,242,19],[240,95,242,20],[240,96,243,9,"eq"],[240,98,243,11],[240,99,243,12],[240,108,243,21],[240,110,243,23,"userId"],[240,116,243,29],[240,117,243,30],[241,14,240,14,"data"],[241,18,240,18],[241,21,240,18,"_yield$supabase$from$4"],[241,43,240,18],[241,44,240,14,"data"],[241,48,240,18],[242,14,240,20,"error"],[242,19,240,25],[242,22,240,25,"_yield$supabase$from$4"],[242,44,240,25],[242,45,240,20,"error"],[242,50,240,25],[243,12,245,6],[243,16,245,10,"error"],[243,21,245,15],[243,23,245,17],[244,14,246,8,"EventLogger"],[244,38,246,19],[244,39,246,20,"error"],[244,44,246,25],[244,45,246,26],[244,56,246,37],[244,58,246,39],[244,105,246,86],[244,107,246,88,"error"],[244,112,246,102],[244,113,246,103],[245,14,247,8],[245,21,247,15],[245,23,247,17],[246,12,248,6],[247,12,250,6],[247,19,250,13,"data"],[247,23,250,17],[247,24,250,18,"map"],[247,27,250,21],[247,28,250,22],[247,38,250,22,"row"],[247,41,250,25],[248,14,250,25],[248,21,250,30],[249,16,251,8,"token"],[249,21,251,13],[249,23,251,15,"row"],[249,26,251,18],[249,27,251,19,"token"],[249,32,251,24],[250,16,252,8,"deviceId"],[250,24,252,16],[250,26,252,18,"row"],[250,29,252,21],[250,30,252,22,"device_id"],[250,39,252,31],[251,16,253,8,"platform"],[251,24,253,16],[251,26,253,18,"row"],[251,29,253,21],[251,30,253,22,"platform"],[251,38,253,30],[252,16,254,8,"userId"],[252,22,254,14],[252,24,254,16,"row"],[252,27,254,19],[252,28,254,20,"user_id"],[252,35,254,27],[253,16,255,8,"createdAt"],[253,25,255,17],[253,27,255,19,"row"],[253,30,255,22],[253,31,255,23,"created_at"],[253,41,255,33],[254,16,256,8,"updatedAt"],[254,25,256,17],[254,27,256,19,"row"],[254,30,256,22],[254,31,256,23,"updated_at"],[255,14,257,6],[255,15,257,7],[256,12,257,7],[256,13,257,8],[256,14,257,9],[257,10,259,4],[257,11,259,5],[257,12,259,6],[257,19,259,13,"error"],[257,24,259,18],[257,26,259,20],[258,12,260,6,"EventLogger"],[258,36,260,17],[258,37,260,18,"error"],[258,42,260,23],[258,43,260,24],[258,54,260,35],[258,56,260,37],[258,103,260,84],[258,105,260,86,"error"],[258,110,260,100],[258,111,260,101],[259,12,261,6],[259,19,261,13],[259,21,261,15],[260,10,262,4],[261,8,263,2],[261,9,263,3],[262,8,263,3],[262,17,238,15,"getUserTokens"],[262,30,238,28,"getUserTokens"],[262,31,238,28,"_x4"],[262,34,238,28],[263,10,238,28],[263,17,238,28,"_getUserTokens"],[263,31,238,28],[263,32,238,28,"apply"],[263,37,238,28],[263,44,238,28,"arguments"],[263,53,238,28],[264,8,238,28],[265,8,238,28],[265,15,238,15,"getUserTokens"],[265,28,238,28],[266,6,238,28],[267,6,265,2],[268,0,266,0],[269,0,267,0],[270,6,265,2],[271,4,265,2],[272,6,265,2,"key"],[272,9,265,2],[273,6,265,2,"value"],[273,11,265,2],[274,8,265,2],[274,12,265,2,"_shouldRefreshToken"],[274,31,265,2],[274,38,265,2,"_asyncToGenerator2"],[274,56,265,2],[274,57,265,2,"default"],[274,64,265,2],[274,66,268,2],[274,79,268,54],[275,10,269,4],[275,14,269,8],[276,12,270,6],[276,16,270,12,"lastSync"],[276,24,270,20],[276,33,270,29,"AsyncStorage"],[276,54,270,41],[276,55,270,42,"getItem"],[276,62,270,49],[276,63,270,50,"PushTokenManager"],[276,79,270,66],[276,80,270,67,"STORAGE_KEYS"],[276,92,270,79],[276,93,270,80,"LAST_SYNC_TIMESTAMP"],[276,112,270,99],[276,113,270,100],[277,12,272,6],[277,16,272,10],[277,17,272,11,"lastSync"],[277,25,272,19],[277,27,272,21],[278,14,273,8],[278,21,273,15],[278,25,273,19],[278,26,273,20],[278,27,273,21],[279,12,274,6],[280,12,276,6],[280,16,276,12,"lastSyncTime"],[280,28,276,24],[280,31,276,27],[280,35,276,31,"Date"],[280,39,276,35],[280,40,276,36,"lastSync"],[280,48,276,44],[280,49,276,45],[281,12,277,6],[281,16,277,12,"now"],[281,19,277,15],[281,22,277,18],[281,26,277,22,"Date"],[281,30,277,26],[281,31,277,27],[281,32,277,28],[282,12,278,6],[282,16,278,12,"daysSinceSync"],[282,29,278,25],[282,32,278,28],[282,33,278,29,"now"],[282,36,278,32],[282,37,278,33,"getTime"],[282,44,278,40],[282,45,278,41],[282,46,278,42],[282,49,278,45,"lastSyncTime"],[282,61,278,57],[282,62,278,58,"getTime"],[282,69,278,65],[282,70,278,66],[282,71,278,67],[282,76,278,72],[282,80,278,76],[282,83,278,79],[282,85,278,81],[282,88,278,84],[282,90,278,86],[282,93,278,89],[282,95,278,91],[282,96,278,92],[284,12,280,6],[285,12,281,6],[285,19,281,13,"daysSinceSync"],[285,32,281,26],[285,35,281,29],[285,36,281,30],[286,10,283,4],[286,11,283,5],[286,12,283,6],[286,19,283,13,"error"],[286,24,283,18],[286,26,283,20],[287,12,284,6,"EventLogger"],[287,36,284,17],[287,37,284,18,"error"],[287,42,284,23],[287,43,284,24],[287,54,284,35],[287,56,284,37],[287,114,284,95],[287,116,284,97,"error"],[287,121,284,111],[287,122,284,112],[288,12,285,6],[288,19,285,13],[288,23,285,17],[288,24,285,18],[288,25,285,19],[289,10,286,4],[290,8,287,2],[290,9,287,3],[291,8,287,3],[291,17,268,15,"shouldRefreshToken"],[291,35,268,33,"shouldRefreshToken"],[291,36,268,33],[292,10,268,33],[292,17,268,33,"_shouldRefreshToken"],[292,36,268,33],[292,37,268,33,"apply"],[292,42,268,33],[292,49,268,33,"arguments"],[292,58,268,33],[293,8,268,33],[294,8,268,33],[294,15,268,15,"shouldRefreshToken"],[294,33,268,33],[295,6,268,33],[296,6,289,2],[297,0,290,0],[298,0,291,0],[299,6,289,2],[300,4,289,2],[301,6,289,2,"key"],[301,9,289,2],[302,6,289,2,"value"],[302,11,289,2],[303,8,289,2],[303,12,289,2,"_refreshTokenIfNeeded"],[303,33,289,2],[303,40,289,2,"_asyncToGenerator2"],[303,58,289,2],[303,59,289,2,"default"],[303,66,289,2],[303,68,292,2],[303,79,292,36,"userId"],[303,85,292,51],[303,87,292,71],[304,10,293,4],[304,14,293,8],[305,12,294,6],[305,16,294,12,"shouldRefresh"],[305,29,294,25],[305,38,294,34],[305,42,294,38],[305,43,294,39,"shouldRefreshToken"],[305,61,294,57],[305,62,294,58],[305,63,294,59],[306,12,296,6],[306,16,296,10],[306,17,296,11,"shouldRefresh"],[306,30,296,24],[306,32,296,26],[307,14,297,8,"EventLogger"],[307,38,297,19],[307,39,297,20,"debug"],[307,44,297,25],[307,45,297,26],[307,56,297,37],[307,58,297,39],[307,103,297,84],[307,104,297,85],[308,14,298,8],[308,21,298,15],[308,25,298,19],[309,12,299,6],[310,12,301,6,"EventLogger"],[310,36,301,17],[310,37,301,18,"debug"],[310,42,301,23],[310,43,301,24],[310,54,301,35],[310,56,301,37],[310,96,301,77],[310,97,301,78],[311,12,302,6],[311,25,302,19],[311,29,302,23],[311,30,302,24,"registerToken"],[311,43,302,37],[311,44,302,38,"userId"],[311,50,302,44],[311,51,302,45],[312,10,304,4],[312,11,304,5],[312,12,304,6],[312,19,304,13,"error"],[312,24,304,18],[312,26,304,20],[313,12,305,6,"EventLogger"],[313,36,305,17],[313,37,305,18,"error"],[313,42,305,23],[313,43,305,24],[313,54,305,35],[313,56,305,37],[313,101,305,82],[313,103,305,84,"error"],[313,108,305,98],[313,109,305,99],[314,12,306,6],[314,19,306,13],[314,24,306,18],[315,10,307,4],[316,8,308,2],[316,9,308,3],[317,8,308,3],[317,17,292,15,"refreshTokenIfNeeded"],[317,37,292,35,"refreshTokenIfNeeded"],[317,38,292,35,"_x5"],[317,41,292,35],[318,10,292,35],[318,17,292,35,"_refreshTokenIfNeeded"],[318,38,292,35],[318,39,292,35,"apply"],[318,44,292,35],[318,51,292,35,"arguments"],[318,60,292,35],[319,8,292,35],[320,8,292,35],[320,15,292,15,"refreshTokenIfNeeded"],[320,35,292,35],[321,6,292,35],[322,6,310,2],[323,0,311,0],[324,0,312,0],[325,6,310,2],[326,4,310,2],[327,6,310,2,"key"],[327,9,310,2],[328,6,310,2,"value"],[328,11,310,2],[329,8,310,2],[329,12,310,2,"_getSyncStatus"],[329,26,310,2],[329,33,310,2,"_asyncToGenerator2"],[329,51,310,2],[329,52,310,2,"default"],[329,59,310,2],[329,61,313,2],[329,74,317,5],[330,10,318,4],[330,14,318,8],[331,12,319,6],[331,16,319,6,"_yield$Promise$all"],[331,34,319,6],[331,43,319,52,"Promise"],[331,50,319,59],[331,51,319,60,"all"],[331,54,319,63],[331,55,319,64],[331,56,320,8,"AsyncStorage"],[331,77,320,20],[331,78,320,21,"getItem"],[331,85,320,28],[331,86,320,29,"PushTokenManager"],[331,102,320,45],[331,103,320,46,"STORAGE_KEYS"],[331,115,320,58],[331,116,320,59,"TOKEN_SYNC_STATUS"],[331,133,320,76],[331,134,320,77],[331,136,321,8,"AsyncStorage"],[331,157,321,20],[331,158,321,21,"getItem"],[331,165,321,28],[331,166,321,29,"PushTokenManager"],[331,182,321,45],[331,183,321,46,"STORAGE_KEYS"],[331,195,321,58],[331,196,321,59,"LAST_SYNC_TIMESTAMP"],[331,215,321,78],[331,216,321,79],[331,218,322,8,"AsyncStorage"],[331,239,322,20],[331,240,322,21,"getItem"],[331,247,322,28],[331,248,322,29,"PushTokenManager"],[331,264,322,45],[331,265,322,46,"STORAGE_KEYS"],[331,277,322,58],[331,278,322,59,"SYNC_RETRIES"],[331,290,322,71],[331,291,322,72],[331,292,323,7],[331,293,323,8],[332,14,323,8,"_yield$Promise$all2"],[332,33,323,8],[332,40,323,8,"_slicedToArray2"],[332,55,323,8],[332,56,323,8,"default"],[332,63,323,8],[332,65,323,8,"_yield$Promise$all"],[332,83,323,8],[333,14,319,13,"syncStatus"],[333,24,319,23],[333,27,319,23,"_yield$Promise$all2"],[333,46,319,23],[334,14,319,25,"lastSync"],[334,22,319,33],[334,25,319,33,"_yield$Promise$all2"],[334,44,319,33],[335,14,319,35,"retries"],[335,21,319,42],[335,24,319,42,"_yield$Promise$all2"],[335,43,319,42],[336,12,325,6],[336,19,325,13],[337,14,326,8,"isTokenSynced"],[337,27,326,21],[337,29,326,23,"syncStatus"],[337,39,326,33],[337,44,326,38],[337,53,326,47],[338,14,327,8,"lastSyncTime"],[338,26,327,20],[338,28,327,22,"lastSync"],[338,36,327,30],[339,14,328,8,"retryCount"],[339,24,328,18],[339,26,328,20,"retries"],[339,33,328,27],[339,36,328,30,"parseInt"],[339,44,328,38],[339,45,328,39,"retries"],[339,52,328,46],[339,54,328,48],[339,56,328,50],[339,57,328,51],[339,60,328,54],[340,12,329,6],[340,13,329,7],[341,10,331,4],[341,11,331,5],[341,12,331,6],[341,19,331,13,"error"],[341,24,331,18],[341,26,331,20],[342,12,332,6,"EventLogger"],[342,36,332,17],[342,37,332,18,"error"],[342,42,332,23],[342,43,332,24],[342,54,332,35],[342,56,332,37],[342,103,332,84],[342,105,332,86,"error"],[342,110,332,100],[342,111,332,101],[343,12,333,6],[343,19,333,13],[344,14,334,8,"isTokenSynced"],[344,27,334,21],[344,29,334,23],[344,34,334,28],[345,14,335,8,"lastSyncTime"],[345,26,335,20],[345,28,335,22],[345,32,335,26],[346,14,336,8,"retryCount"],[346,24,336,18],[346,26,336,20],[347,12,337,6],[347,13,337,7],[348,10,338,4],[349,8,339,2],[349,9,339,3],[350,8,339,3],[350,17,313,15,"getSyncStatus"],[350,30,313,28,"getSyncStatus"],[350,31,313,28],[351,10,313,28],[351,17,313,28,"_getSyncStatus"],[351,31,313,28],[351,32,313,28,"apply"],[351,37,313,28],[351,44,313,28,"arguments"],[351,53,313,28],[352,8,313,28],[353,8,313,28],[353,15,313,15,"getSyncStatus"],[353,28,313,28],[354,6,313,28],[355,6,341,2],[356,0,342,0],[357,0,343,0],[358,6,341,2],[359,4,341,2],[360,6,341,2,"key"],[360,9,341,2],[361,6,341,2,"value"],[361,11,341,2],[362,8,341,2],[362,12,341,2,"_markSyncSuccess"],[362,28,341,2],[362,35,341,2,"_asyncToGenerator2"],[362,53,341,2],[362,54,341,2,"default"],[362,61,341,2],[362,63,344,2],[362,76,344,49],[363,10,345,4],[363,14,345,8],[364,12,346,6],[364,16,346,12,"timestamp"],[364,25,346,21],[364,28,346,24],[364,32,346,28,"Date"],[364,36,346,32],[364,37,346,33],[364,38,346,34],[364,39,346,35,"toISOString"],[364,50,346,46],[364,51,346,47],[364,52,346,48],[365,12,348,6],[365,18,348,12,"AsyncStorage"],[365,39,348,24],[365,40,348,25,"multiSet"],[365,48,348,33],[365,49,348,34],[365,50,349,8],[365,51,349,9,"PushTokenManager"],[365,67,349,25],[365,68,349,26,"STORAGE_KEYS"],[365,80,349,38],[365,81,349,39,"TOKEN_SYNC_STATUS"],[365,98,349,56],[365,100,349,58],[365,109,349,67],[365,110,349,68],[365,112,350,8],[365,113,350,9,"PushTokenManager"],[365,129,350,25],[365,130,350,26,"STORAGE_KEYS"],[365,142,350,38],[365,143,350,39,"LAST_SYNC_TIMESTAMP"],[365,162,350,58],[365,164,350,60,"timestamp"],[365,173,350,69],[365,174,350,70],[365,176,351,8],[365,177,351,9,"PushTokenManager"],[365,193,351,25],[365,194,351,26,"STORAGE_KEYS"],[365,206,351,38],[365,207,351,39,"SYNC_RETRIES"],[365,219,351,51],[365,221,351,53],[365,224,351,56],[365,225,351,57],[365,226,352,7],[365,227,352,8],[366,10,354,4],[366,11,354,5],[366,12,354,6],[366,19,354,13,"error"],[366,24,354,18],[366,26,354,20],[367,12,355,6,"EventLogger"],[367,36,355,17],[367,37,355,18,"error"],[367,42,355,23],[367,43,355,24],[367,54,355,35],[367,56,355,37],[367,105,355,86],[367,107,355,88,"error"],[367,112,355,102],[367,113,355,103],[368,10,356,4],[369,8,357,2],[369,9,357,3],[370,8,357,3],[370,17,344,16,"markSyncSuccess"],[370,32,344,31,"markSyncSuccess"],[370,33,344,31],[371,10,344,31],[371,17,344,31,"_markSyncSuccess"],[371,33,344,31],[371,34,344,31,"apply"],[371,39,344,31],[371,46,344,31,"arguments"],[371,55,344,31],[372,8,344,31],[373,8,344,31],[373,15,344,16,"markSyncSuccess"],[373,30,344,31],[374,6,344,31],[375,6,359,2],[376,0,360,0],[377,0,361,0],[378,6,359,2],[379,4,359,2],[380,6,359,2,"key"],[380,9,359,2],[381,6,359,2,"value"],[381,11,359,2],[382,8,359,2],[382,12,359,2,"_handleSyncFailure"],[382,30,359,2],[382,37,359,2,"_asyncToGenerator2"],[382,55,359,2],[382,56,359,2,"default"],[382,63,359,2],[382,65,362,2],[382,78,362,51],[383,10,362,51],[383,14,362,51,"_this"],[383,19,362,51],[384,10,363,4],[384,14,363,8],[385,12,364,6],[385,16,364,12,"currentRetries"],[385,30,364,26],[385,39,364,35,"AsyncStorage"],[385,60,364,47],[385,61,364,48,"getItem"],[385,68,364,55],[385,69,364,56,"PushTokenManager"],[385,85,364,72],[385,86,364,73,"STORAGE_KEYS"],[385,98,364,85],[385,99,364,86,"SYNC_RETRIES"],[385,111,364,98],[385,112,364,99],[386,12,365,6],[386,16,365,12,"retryCount"],[386,26,365,22],[386,29,365,25,"currentRetries"],[386,43,365,39],[386,46,365,42,"parseInt"],[386,54,365,50],[386,55,365,51,"currentRetries"],[386,69,365,65],[386,71,365,67],[386,73,365,69],[386,74,365,70],[386,77,365,73],[386,78,365,74],[387,12,366,6],[387,16,366,12,"newRetryCount"],[387,29,366,25],[387,32,366,28,"retryCount"],[387,42,366,38],[387,45,366,41],[387,46,366,42],[388,12,368,6],[388,18,368,12,"AsyncStorage"],[388,39,368,24],[388,40,368,25,"multiSet"],[388,48,368,33],[388,49,368,34],[388,50,369,8],[388,51,369,9,"PushTokenManager"],[388,67,369,25],[388,68,369,26,"STORAGE_KEYS"],[388,80,369,38],[388,81,369,39,"TOKEN_SYNC_STATUS"],[388,98,369,56],[388,100,369,58],[388,108,369,66],[388,109,369,67],[388,111,370,8],[388,112,370,9,"PushTokenManager"],[388,128,370,25],[388,129,370,26,"STORAGE_KEYS"],[388,141,370,38],[388,142,370,39,"SYNC_RETRIES"],[388,154,370,51],[388,156,370,53,"newRetryCount"],[388,169,370,66],[388,170,370,67,"toString"],[388,178,370,75],[388,179,370,76],[388,180,370,77],[388,181,370,78],[388,182,371,7],[388,183,371,8],[390,12,373,6],[391,12,374,6],[391,16,374,10,"newRetryCount"],[391,29,374,23],[391,33,374,27,"PushTokenManager"],[391,49,374,43],[391,50,374,44,"MAX_SYNC_RETRIES"],[391,66,374,60],[391,68,374,62],[392,14,375,8,"EventLogger"],[392,38,375,19],[392,39,375,20,"debug"],[392,44,375,25],[392,45,375,26],[392,56,375,37],[392,58,375,39],[392,149,375,130],[392,150,375,131],[393,14,377,8,"setTimeout"],[393,24,377,18],[393,25,377,19],[393,37,377,25],[394,16,378,10,"_this"],[394,21,378,14],[394,22,378,15,"retryTokenSync"],[394,36,378,29],[394,37,378,30],[394,38,378,31],[395,14,379,8],[395,15,379,9],[395,17,379,11,"PushTokenManager"],[395,33,379,27],[395,34,379,28,"SYNC_RETRY_DELAY"],[395,50,379,44],[395,53,379,47,"newRetryCount"],[395,66,379,60],[395,67,379,61],[395,68,379,62],[395,69,379,63],[396,12,380,6],[396,13,380,7],[396,19,380,13],[397,14,381,8,"EventLogger"],[397,38,381,19],[397,39,381,20,"error"],[397,44,381,25],[397,45,381,26],[397,56,381,37],[397,58,381,39],[397,116,381,97],[397,117,381,98],[398,12,382,6],[399,10,384,4],[399,11,384,5],[399,12,384,6],[399,19,384,13,"error"],[399,24,384,18],[399,26,384,20],[400,12,385,6,"EventLogger"],[400,36,385,17],[400,37,385,18,"error"],[400,42,385,23],[400,43,385,24],[400,54,385,35],[400,56,385,37],[400,107,385,88],[400,109,385,90,"error"],[400,114,385,104],[400,115,385,105],[401,10,386,4],[402,8,387,2],[402,9,387,3],[403,8,387,3],[403,17,362,16,"handleSyncFailure"],[403,34,362,33,"handleSyncFailure"],[403,35,362,33],[404,10,362,33],[404,17,362,33,"_handleSyncFailure"],[404,35,362,33],[404,36,362,33,"apply"],[404,41,362,33],[404,48,362,33,"arguments"],[404,57,362,33],[405,8,362,33],[406,8,362,33],[406,15,362,16,"handleSyncFailure"],[406,32,362,33],[407,6,362,33],[408,6,389,2],[409,0,390,0],[410,0,391,0],[411,6,389,2],[412,4,389,2],[413,6,389,2,"key"],[413,9,389,2],[414,6,389,2,"value"],[414,11,389,2],[415,8,389,2],[415,12,389,2,"_retryTokenSync"],[415,27,389,2],[415,34,389,2,"_asyncToGenerator2"],[415,52,389,2],[415,53,389,2,"default"],[415,60,389,2],[415,62,392,2],[415,75,392,48],[416,10,393,4],[416,14,393,8],[417,12,394,6,"EventLogger"],[417,36,394,17],[417,37,394,18,"debug"],[417,42,394,23],[417,43,394,24],[417,54,394,35],[417,56,394,37],[417,99,394,80],[417,100,394,81],[419,12,396,6],[420,12,397,6],[421,12,398,6],[421,18,398,12],[421,22,398,16],[421,23,398,17,"registerToken"],[421,36,398,30],[421,37,398,31],[421,38,398,32],[422,10,400,4],[422,11,400,5],[422,12,400,6],[422,19,400,13,"error"],[422,24,400,18],[422,26,400,20],[423,12,401,6,"EventLogger"],[423,36,401,17],[423,37,401,18,"error"],[423,42,401,23],[423,43,401,24],[423,54,401,35],[423,56,401,37],[423,90,401,71],[423,92,401,73,"error"],[423,97,401,87],[423,98,401,88],[424,10,402,4],[425,8,403,2],[425,9,403,3],[426,8,403,3],[426,17,392,16,"retryTokenSync"],[426,31,392,30,"retryTokenSync"],[426,32,392,30],[427,10,392,30],[427,17,392,30,"_retryTokenSync"],[427,32,392,30],[427,33,392,30,"apply"],[427,38,392,30],[427,45,392,30,"arguments"],[427,54,392,30],[428,8,392,30],[429,8,392,30],[429,15,392,16,"retryTokenSync"],[429,29,392,30],[430,6,392,30],[431,6,405,2],[432,0,406,0],[433,0,407,0],[434,6,405,2],[435,4,405,2],[436,6,405,2,"key"],[436,9,405,2],[437,6,405,2,"value"],[437,11,405,2],[438,8,405,2],[438,12,405,2,"_cleanupOldTokens"],[438,29,405,2],[438,36,405,2,"_asyncToGenerator2"],[438,54,405,2],[438,55,405,2,"default"],[438,62,405,2],[438,64,408,2],[438,75,408,32,"userId"],[438,81,408,46],[438,83,408,63],[439,10,409,4],[439,14,409,8],[440,12,410,6],[440,16,410,6,"_yield$supabase$from$5"],[440,38,410,6],[440,47,410,44,"supabase"],[440,63,410,52],[440,64,411,9,"from"],[440,68,411,13],[440,69,411,14],[440,82,411,27],[440,83,411,28],[440,84,412,9,"select"],[440,90,412,15],[440,91,412,16],[440,94,412,19],[440,95,412,20],[440,96,413,9,"eq"],[440,98,413,11],[440,99,413,12],[440,108,413,21],[440,110,413,23,"userId"],[440,116,413,29],[440,117,413,30],[440,118,414,9,"order"],[440,123,414,14],[440,124,414,15],[440,136,414,27],[440,138,414,29],[441,16,414,31,"ascending"],[441,25,414,40],[441,27,414,42],[442,14,414,48],[442,15,414,49],[442,16,414,50],[443,14,410,20,"tokens"],[443,20,410,26],[443,23,410,26,"_yield$supabase$from$5"],[443,45,410,26],[443,46,410,14,"data"],[443,50,410,18],[444,14,410,28,"error"],[444,19,410,33],[444,22,410,33,"_yield$supabase$from$5"],[444,44,410,33],[444,45,410,28,"error"],[444,50,410,33],[445,12,416,6],[445,16,416,10,"error"],[445,21,416,15],[445,25,416,19],[445,26,416,20,"tokens"],[445,32,416,26],[445,34,416,28],[446,14,417,8,"EventLogger"],[446,38,417,19],[446,39,417,20,"error"],[446,44,417,25],[446,45,417,26],[446,56,417,37],[446,58,417,39],[446,112,417,93],[446,114,417,95,"error"],[446,119,417,109],[446,120,417,110],[447,14,418,8],[448,12,419,6],[450,12,421,6],[451,12,422,6],[451,16,422,12,"tokensToDelete"],[451,30,422,26],[451,33,422,29,"tokens"],[451,39,422,35],[451,40,422,36,"slice"],[451,45,422,41],[451,46,422,42],[451,47,422,43],[451,48,422,44],[452,12,424,6],[452,16,424,10,"tokensToDelete"],[452,30,424,24],[452,31,424,25,"length"],[452,37,424,31],[452,40,424,34],[452,41,424,35],[452,43,424,37],[453,14,425,8],[453,18,425,14,"deviceIdsToDelete"],[453,35,425,31],[453,38,425,34,"tokensToDelete"],[453,52,425,48],[453,53,425,49,"map"],[453,56,425,52],[453,57,425,53],[453,67,425,53,"token"],[453,72,425,58],[454,16,425,58],[454,23,425,62,"token"],[454,28,425,67],[454,29,425,68,"device_id"],[454,38,425,77],[455,14,425,77],[455,16,425,78],[456,14,427,8],[456,18,427,8,"_yield$supabase$from$6"],[456,40,427,8],[456,49,427,45,"supabase"],[456,65,427,53],[456,66,428,11,"from"],[456,70,428,15],[456,71,428,16],[456,84,428,29],[456,85,428,30],[456,86,429,11,"delete"],[456,92,429,17],[456,93,429,18],[456,94,429,19],[456,95,430,11,"in"],[456,97,430,13],[456,98,430,14],[456,109,430,25],[456,111,430,27,"deviceIdsToDelete"],[456,128,430,44],[456,129,430,45],[457,16,427,23,"deleteError"],[457,27,427,34],[457,30,427,34,"_yield$supabase$from$6"],[457,52,427,34],[457,53,427,16,"error"],[457,58,427,21],[458,14,432,8],[458,18,432,12,"deleteError"],[458,29,432,23],[458,31,432,25],[459,16,433,10,"EventLogger"],[459,40,433,21],[459,41,433,22,"error"],[459,46,433,27],[459,47,433,28],[459,58,433,39],[459,60,433,41],[459,110,433,91],[459,112,433,93,"deleteError"],[459,123,433,113],[459,124,433,114],[460,14,434,8],[460,15,434,9],[460,21,434,15],[461,16,435,10,"EventLogger"],[461,40,435,21],[461,41,435,22,"debug"],[461,46,435,27],[461,47,435,28],[461,58,435,39],[461,60,435,41],[461,127,435,108],[461,128,435,109],[462,14,436,8],[463,12,437,6],[464,10,439,4],[464,11,439,5],[464,12,439,6],[464,19,439,13,"error"],[464,24,439,18],[464,26,439,20],[465,12,440,6,"EventLogger"],[465,36,440,17],[465,37,440,18,"error"],[465,42,440,23],[465,43,440,24],[465,54,440,35],[465,56,440,37],[465,106,440,87],[465,108,440,89,"error"],[465,113,440,103],[465,114,440,104],[466,10,441,4],[467,8,442,2],[467,9,442,3],[468,8,442,3],[468,17,408,15,"cleanupOldTokens"],[468,33,408,31,"cleanupOldTokens"],[468,34,408,31,"_x6"],[468,37,408,31],[469,10,408,31],[469,17,408,31,"_cleanupOldTokens"],[469,34,408,31],[469,35,408,31,"apply"],[469,40,408,31],[469,47,408,31,"arguments"],[469,56,408,31],[470,8,408,31],[471,8,408,31],[471,15,408,15,"cleanupOldTokens"],[471,31,408,31],[472,6,408,31],[473,6,444,2],[474,0,445,0],[475,0,446,0],[476,6,444,2],[477,4,444,2],[478,6,444,2,"key"],[478,9,444,2],[479,6,444,2,"value"],[479,11,444,2],[480,8,444,2],[480,12,444,2,"_clearLocalData"],[480,27,444,2],[480,34,444,2,"_asyncToGenerator2"],[480,52,444,2],[480,53,444,2,"default"],[480,60,444,2],[480,62,447,2],[480,75,447,47],[481,10,448,4],[481,14,448,8],[482,12,449,6],[482,18,449,12,"AsyncStorage"],[482,39,449,24],[482,40,449,25,"multiRemove"],[482,51,449,36],[482,52,449,37],[482,53,450,8,"PushTokenManager"],[482,69,450,24],[482,70,450,25,"STORAGE_KEYS"],[482,82,450,37],[482,83,450,38,"DEVICE_ID"],[482,92,450,47],[482,94,451,8,"PushTokenManager"],[482,110,451,24],[482,111,451,25,"STORAGE_KEYS"],[482,123,451,37],[482,124,451,38,"TOKEN_SYNC_STATUS"],[482,141,451,55],[482,143,452,8,"PushTokenManager"],[482,159,452,24],[482,160,452,25,"STORAGE_KEYS"],[482,172,452,37],[482,173,452,38,"LAST_SYNC_TIMESTAMP"],[482,192,452,57],[482,194,453,8,"PushTokenManager"],[482,210,453,24],[482,211,453,25,"STORAGE_KEYS"],[482,223,453,37],[482,224,453,38,"SYNC_RETRIES"],[482,236,453,50],[482,237,454,7],[482,238,454,8],[483,12,456,6,"EventLogger"],[483,36,456,17],[483,37,456,18,"debug"],[483,42,456,23],[483,43,456,24],[483,54,456,35],[483,56,456,37],[483,95,456,76],[483,96,456,77],[484,10,457,4],[484,11,457,5],[484,12,457,6],[484,19,457,13,"error"],[484,24,457,18],[484,26,457,20],[485,12,458,6,"EventLogger"],[485,36,458,17],[485,37,458,18,"error"],[485,42,458,23],[485,43,458,24],[485,54,458,35],[485,56,458,37],[485,104,458,85],[485,106,458,87,"error"],[485,111,458,101],[485,112,458,102],[486,10,459,4],[487,8,460,2],[487,9,460,3],[488,8,460,3],[488,17,447,15,"clearLocalData"],[488,31,447,29,"clearLocalData"],[488,32,447,29],[489,10,447,29],[489,17,447,29,"_clearLocalData"],[489,32,447,29],[489,33,447,29,"apply"],[489,38,447,29],[489,45,447,29,"arguments"],[489,54,447,29],[490,8,447,29],[491,8,447,29],[491,15,447,15,"clearLocalData"],[491,29,447,29],[492,6,447,29],[493,4,447,29],[494,6,447,29,"key"],[494,9,447,29],[495,6,447,29,"value"],[495,11,447,29],[495,13,33,2],[495,22,33,16,"getInstance"],[495,33,33,27,"getInstance"],[495,34,33,27],[495,36,33,48],[496,8,34,4],[496,12,34,8],[496,13,34,9,"PushTokenManager"],[496,29,34,25],[496,30,34,26,"instance"],[496,38,34,34],[496,40,34,36],[497,10,35,6,"PushTokenManager"],[497,26,35,22],[497,27,35,23,"instance"],[497,35,35,31],[497,38,35,34],[497,42,35,38,"PushTokenManager"],[497,58,35,54],[497,59,35,55],[497,60,35,56],[498,8,36,4],[499,8,37,4],[499,15,37,11,"PushTokenManager"],[499,31,37,27],[499,32,37,28,"instance"],[499,40,37,36],[500,6,38,2],[501,4,38,3],[502,2,38,3],[503,2,19,2],[504,2,15,6,"PushTokenManager"],[504,18,15,22],[504,19,20,26,"STORAGE_KEYS"],[504,31,20,38],[504,34,20,41],[505,4,21,4,"DEVICE_ID"],[505,13,21,13],[505,15,21,15],[505,34,21,34],[506,4,22,4,"TOKEN_SYNC_STATUS"],[506,21,22,21],[506,23,22,23],[506,50,22,50],[507,4,23,4,"LAST_SYNC_TIMESTAMP"],[507,23,23,23],[507,25,23,25],[507,50,23,50],[508,4,24,4,"SYNC_RETRIES"],[508,16,24,16],[508,18,24,18],[509,2,25,2],[509,3,25,3],[510,2,27,2],[511,2,15,6,"PushTokenManager"],[511,18,15,22],[511,19,28,26,"MAX_SYNC_RETRIES"],[511,35,28,42],[511,38,28,45],[511,39,28,46],[512,2,15,6,"PushTokenManager"],[512,18,15,22],[512,19,29,26,"SYNC_RETRY_DELAY"],[512,35,29,42],[512,38,29,45],[512,42,29,49],[513,2,29,49],[513,6,29,49,"_default"],[513,14,29,49],[513,17,29,49,"exports"],[513,24,29,49],[513,25,29,49,"default"],[513,32,29,49],[513,35,463,15,"PushTokenManager"],[513,51,463,31],[513,52,463,32,"getInstance"],[513,63,463,43],[513,64,463,44],[513,65,463,45],[514,0,463,45],[514,3]],"functionMap":{"names":["<global>","PushTokenManager","constructor","getInstance","getDeviceId","registerToken","syncTokenWithSupabase","unregisterToken","updateUserId","getUserTokens","data.map$argument_0","shouldRefreshToken","refreshTokenIfNeeded","getSyncStatus","markSyncSuccess","handleSyncFailure","setTimeout$argument_0","retryTokenSync","cleanupOldTokens","tokensToDelete.map$argument_0","clearLocalData"],"mappings":"AAA;ACc;ECgB,wBD;EEE;GFK;EGK;GHiB;EIK;GJgD;EKK;GLqD;EMK;GN4B;EOK;GPwB;EQK;sBCY;QDO;GRM;EUK;GVmB;EWK;GXgB;EYK;GZ0B;EaK;Gba;EcK;mBCe;SDE;GdQ;EgBK;GhBW;EiBK;qDCiB,wBD;GjBiB;EmBK;GnBa;CDC"}},"type":"js/module"}]}