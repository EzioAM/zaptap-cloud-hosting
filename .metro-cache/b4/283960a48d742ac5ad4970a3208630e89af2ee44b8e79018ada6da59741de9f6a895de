{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"PWvtvXU7MaET6Yd1Gn8oQOXJQ8A=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":42},"end":{"line":2,"column":67,"index":109}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./ExpoLocation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":110},"end":{"line":3,"column":42,"index":152}}],"key":"n9eQB3huKj/lRnIsgaXRKPJKjaY=","exportNames":["*"]}},{"name":"./Location.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":153},"end":{"line":4,"column":53,"index":206}}],"key":"QoIrjHWCWA2K0AZhEI/d0eITBhA=","exportNames":["*"]}},{"name":"./LocationSubscribers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":207},"end":{"line":5,"column":104,"index":311}}],"key":"ECD2ecHoQ4d6PxMbJzhCjCmKfZg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.enableNetworkProviderAsync = enableNetworkProviderAsync;\n  exports.geocodeAsync = geocodeAsync;\n  exports.getBackgroundPermissionsAsync = getBackgroundPermissionsAsync;\n  exports.getCurrentPositionAsync = getCurrentPositionAsync;\n  exports.getForegroundPermissionsAsync = getForegroundPermissionsAsync;\n  exports.getHeadingAsync = getHeadingAsync;\n  exports.getLastKnownPositionAsync = getLastKnownPositionAsync;\n  exports.getProviderStatusAsync = getProviderStatusAsync;\n  exports.hasServicesEnabledAsync = hasServicesEnabledAsync;\n  exports.hasStartedGeofencingAsync = hasStartedGeofencingAsync;\n  exports.hasStartedLocationUpdatesAsync = hasStartedLocationUpdatesAsync;\n  exports.isBackgroundLocationAvailableAsync = isBackgroundLocationAvailableAsync;\n  exports.requestBackgroundPermissionsAsync = requestBackgroundPermissionsAsync;\n  exports.requestForegroundPermissionsAsync = requestForegroundPermissionsAsync;\n  exports.reverseGeocodeAsync = reverseGeocodeAsync;\n  exports.startGeofencingAsync = startGeofencingAsync;\n  exports.startLocationUpdatesAsync = startLocationUpdatesAsync;\n  exports.stopGeofencingAsync = stopGeofencingAsync;\n  exports.stopLocationUpdatesAsync = stopLocationUpdatesAsync;\n  exports.useForegroundPermissions = exports.useBackgroundPermissions = void 0;\n  exports.watchHeadingAsync = watchHeadingAsync;\n  exports.watchPositionAsync = watchPositionAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _expo = require(_dependencyMap[2], \"expo\");\n  var _expoModulesCore = require(_dependencyMap[3], \"expo-modules-core\");\n  var _ExpoLocation = _interopRequireDefault(require(_dependencyMap[4], \"./ExpoLocation\"));\n  var _Location = require(_dependencyMap[5], \"./Location.types\");\n  var _LocationSubscribers = require(_dependencyMap[6], \"./LocationSubscribers\");\n  // Flag for warning about background services not being available in Expo Go\n  var warnAboutExpoGoDisplayed = false;\n  // @needsAudit\n  /**\n   * Check status of location providers.\n   * @return A promise which fulfills with an object of type [`LocationProviderStatus`](#locationproviderstatus).\n   */\n  function getProviderStatusAsync() {\n    return _getProviderStatusAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Asks the user to turn on high accuracy location mode which enables network provider that uses\n   * Google Play services to improve location accuracy and location-based services.\n   * @return A promise resolving as soon as the user accepts the dialog. Rejects if denied.\n   *\n   * @platform android\n   */\n  function _getProviderStatusAsync() {\n    _getProviderStatusAsync = (0, _asyncToGenerator2.default)(function* () {\n      return _ExpoLocation.default.getProviderStatusAsync();\n    });\n    return _getProviderStatusAsync.apply(this, arguments);\n  }\n  function enableNetworkProviderAsync() {\n    return _enableNetworkProviderAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Requests for one-time delivery of the user's current location.\n   * Depending on given `accuracy` option it may take some time to resolve,\n   * especially when you're inside a building.\n   * > __Note:__ Calling it causes the location manager to obtain a location fix which may take several\n   * > seconds. Consider using [`getLastKnownPositionAsync`](#locationgetlastknownpositionasyncoptions)\n   * > if you expect to get a quick response and high accuracy is not required.\n   * @param options\n   * @return A promise which fulfills with an object of type [`LocationObject`](#locationobject).\n   */\n  function _enableNetworkProviderAsync() {\n    _enableNetworkProviderAsync = (0, _asyncToGenerator2.default)(function* () {\n      // If network provider is disabled (user's location mode is set to \"Device only\"),\n      // Android's location provider may not give you any results. Use this method in order to ask the user\n      // to change the location mode to \"High accuracy\" which uses Google Play services and enables network provider.\n      // `getCurrentPositionAsync` and `watchPositionAsync` are doing it automatically anyway.\n      if (_expoModulesCore.Platform.OS === 'android') {\n        return _ExpoLocation.default.enableNetworkProviderAsync();\n      }\n    });\n    return _enableNetworkProviderAsync.apply(this, arguments);\n  }\n  function getCurrentPositionAsync() {\n    return _getCurrentPositionAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Gets the last known position of the device or `null` if it's not available or doesn't match given\n   * requirements such as maximum age or required accuracy.\n   * It's considered to be faster than `getCurrentPositionAsync` as it doesn't request for the current\n   * location, but keep in mind the returned location may not be up-to-date.\n   * @param options\n   * @return A promise which fulfills with an object of type [`LocationObject`](#locationobject) or\n   * `null` if it's not available or doesn't match given requirements such as maximum age or required\n   * accuracy.\n   */\n  function _getCurrentPositionAsync() {\n    _getCurrentPositionAsync = (0, _asyncToGenerator2.default)(function* () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _ExpoLocation.default.getCurrentPositionAsync(options);\n    });\n    return _getCurrentPositionAsync.apply(this, arguments);\n  }\n  function getLastKnownPositionAsync() {\n    return _getLastKnownPositionAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Subscribe to location updates from the device. Updates will only occur while the application is in\n   * the foreground. To get location updates while in background you'll need to use\n   * [`startLocationUpdatesAsync`](#locationstartlocationupdatesasynctaskname-options).\n   * @param options\n   * @param callback This function is called on each location update. It receives an object of type\n   * [`LocationObject`](#locationobject) as the first argument.\n   * @param errorHandler This function is called when an error occurs. It receives a string with the\n   * error message as the first argument.\n   * @return A promise which fulfills with a [`LocationSubscription`](#locationsubscription) object.\n   */\n  function _getLastKnownPositionAsync() {\n    _getLastKnownPositionAsync = (0, _asyncToGenerator2.default)(function* () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _ExpoLocation.default.getLastKnownPositionAsync(options);\n    });\n    return _getLastKnownPositionAsync.apply(this, arguments);\n  }\n  function watchPositionAsync(_x, _x2, _x3) {\n    return _watchPositionAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Gets the current heading information from the device. To simplify, it calls `watchHeadingAsync`\n   * and waits for a couple of updates, and then returns the one that is accurate enough.\n   * @return A promise which fulfills with an object of type [`LocationHeadingObject`](#locationheadingobject).\n   */\n  function _watchPositionAsync() {\n    _watchPositionAsync = (0, _asyncToGenerator2.default)(function* (options, callback, errorHandler) {\n      var watchId = _LocationSubscribers.LocationSubscriber.registerCallback(callback);\n      errorHandler && _LocationSubscribers.LocationErrorSubscriber.registerCallbackForId(watchId, errorHandler);\n      yield _ExpoLocation.default.watchPositionImplAsync(watchId, options);\n      return {\n        remove: function remove() {\n          _LocationSubscribers.LocationSubscriber.unregisterCallback(watchId);\n          errorHandler && _LocationSubscribers.LocationErrorSubscriber.unregisterCallback(watchId);\n        }\n      };\n    });\n    return _watchPositionAsync.apply(this, arguments);\n  }\n  function getHeadingAsync() {\n    return _getHeadingAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Subscribe to compass updates from the device.\n   *\n   * @param callback This function is called on each compass update. It receives an object of type\n   * [LocationHeadingObject](#locationheadingobject) as the first argument.\n   * @param errorHandler This function is called when an error occurs. It receives a string with the\n   * error message as the first argument.\n   * @return A promise which fulfills with a [`LocationSubscription`](#locationsubscription) object.\n   *\n   * @platform android\n   * @platform ios\n   */\n  function _getHeadingAsync() {\n    _getHeadingAsync = (0, _asyncToGenerator2.default)(function* () {\n      return new Promise(/*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator2.default)(function* (resolve, reject) {\n          var tries = 0;\n          var subscriber = undefined;\n          try {\n            subscriber = yield watchHeadingAsync(function (heading) {\n              if (heading.accuracy > 1 || tries > 5) {\n                var _subscriber;\n                (_subscriber = subscriber) == null || _subscriber.remove();\n                resolve(heading);\n              } else {\n                tries += 1;\n              }\n            }, function (reason) {\n              var _subscriber2;\n              (_subscriber2 = subscriber) == null || _subscriber2.remove();\n              reject(reason);\n            });\n          } catch (e) {\n            reject(e);\n          }\n        });\n        return function (_x12, _x13) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    });\n    return _getHeadingAsync.apply(this, arguments);\n  }\n  function watchHeadingAsync(_x4, _x5) {\n    return _watchHeadingAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Geocode an address string to latitude-longitude location.\n   *\n   * On Android, you must request location permissions with [`requestForegroundPermissionsAsync`](#locationrequestforegroundpermissionsasync)\n   * before geocoding can be used.\n   *\n   * > **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\n   * > requests at a time can result in an error, so they have to be managed properly.\n   * > It's also discouraged to use geocoding while the app is in the background and its results won't\n   * > be shown to the user immediately.\n   *\n   * @param address A string representing address, eg. `\"Baker Street London\"`.\n   * @return A promise which fulfills with an array (in most cases its size is 1) of [`LocationGeocodedLocation`](#locationgeocodedlocation)\n   * objects.\n   *\n   * @platform android\n   * @platform ios\n   */\n  function _watchHeadingAsync() {\n    _watchHeadingAsync = (0, _asyncToGenerator2.default)(function* (callback, errorHandler) {\n      var watchId = _LocationSubscribers.HeadingSubscriber.registerCallback(callback);\n      errorHandler && _LocationSubscribers.LocationErrorSubscriber.registerCallbackForId(watchId, errorHandler);\n      yield _ExpoLocation.default.watchDeviceHeading(watchId);\n      return {\n        remove: function remove() {\n          _LocationSubscribers.HeadingSubscriber.unregisterCallback(watchId);\n          errorHandler && _LocationSubscribers.LocationErrorSubscriber.unregisterCallback(watchId);\n        }\n      };\n    });\n    return _watchHeadingAsync.apply(this, arguments);\n  }\n  function geocodeAsync(_x6) {\n    return _geocodeAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Reverse geocode a location to postal address.\n   *\n   * On Android, you must request location permissions with [`requestForegroundPermissionsAsync`](#locationrequestforegroundpermissionsasync)\n   * before geocoding can be used.\n   *\n   * > **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\n   * > requests at a time can result in an error, so they have to be managed properly.\n   * > It's also discouraged to use geocoding while the app is in the background and its results won't\n   * > be shown to the user immediately.\n   *\n   * @param location An object representing a location.\n   * @return A promise which fulfills with an array (in most cases its size is 1) of [`LocationGeocodedAddress`](#locationgeocodedaddress) objects.\n   *\n   * @platform android\n   * @platform ios\n   */\n  function _geocodeAsync() {\n    _geocodeAsync = (0, _asyncToGenerator2.default)(function* (address) {\n      if (typeof address !== 'string') {\n        throw new TypeError(`Address to geocode must be a string. Got ${address} instead.`);\n      }\n      if (_expoModulesCore.Platform.OS === 'web') {\n        if (__DEV__) {\n          console.warn('The Geocoding API has been removed in SDK 49, use Place Autocomplete service instead' + '(https://developers.google.com/maps/documentation/places/web-service/autocomplete)');\n        }\n        return [];\n      }\n      return yield _ExpoLocation.default.geocodeAsync(address);\n    });\n    return _geocodeAsync.apply(this, arguments);\n  }\n  function reverseGeocodeAsync(_x7) {\n    return _reverseGeocodeAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Checks user's permissions for accessing location while the app is in the foreground.\n   * @return A promise that fulfills with an object of type [`LocationPermissionResponse`](#locationpermissionresponse).\n   */\n  function _reverseGeocodeAsync() {\n    _reverseGeocodeAsync = (0, _asyncToGenerator2.default)(function* (location) {\n      if (typeof location.latitude !== 'number' || typeof location.longitude !== 'number') {\n        throw new TypeError('Location to reverse-geocode must be an object with number properties `latitude` and `longitude`.');\n      }\n      if (_expoModulesCore.Platform.OS === 'web') {\n        if (__DEV__) {\n          console.warn('The Geocoding API has been removed in SDK 49, use Place Autocomplete service instead' + '(https://developers.google.com/maps/documentation/places/web-service/autocomplete)');\n        }\n        return [];\n      }\n      return yield _ExpoLocation.default.reverseGeocodeAsync(location);\n    });\n    return _reverseGeocodeAsync.apply(this, arguments);\n  }\n  function getForegroundPermissionsAsync() {\n    return _getForegroundPermissionsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Asks the user to grant permissions for location while the app is in the foreground.\n   * @return A promise that fulfills with an object of type [`LocationPermissionResponse`](#locationpermissionresponse).\n   */\n  function _getForegroundPermissionsAsync() {\n    _getForegroundPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      return yield _ExpoLocation.default.getForegroundPermissionsAsync();\n    });\n    return _getForegroundPermissionsAsync.apply(this, arguments);\n  }\n  function requestForegroundPermissionsAsync() {\n    return _requestForegroundPermissionsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Check or request permissions for the foreground location.\n   * This uses both `requestForegroundPermissionsAsync` and `getForegroundPermissionsAsync` to interact with the permissions.\n   *\n   * @example\n   * ```ts\n   * const [status, requestPermission] = Location.useForegroundPermissions();\n   * ```\n   */\n  function _requestForegroundPermissionsAsync() {\n    _requestForegroundPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      return yield _ExpoLocation.default.requestForegroundPermissionsAsync();\n    });\n    return _requestForegroundPermissionsAsync.apply(this, arguments);\n  }\n  var useForegroundPermissions = exports.useForegroundPermissions = (0, _expoModulesCore.createPermissionHook)({\n    getMethod: getForegroundPermissionsAsync,\n    requestMethod: requestForegroundPermissionsAsync\n  });\n  // @needsAudit\n  /**\n   * Checks user's permissions for accessing location while the app is in the background.\n   * @return A promise that fulfills with an object of type [`PermissionResponse`](#permissionresponse).\n   */\n  function getBackgroundPermissionsAsync() {\n    return _getBackgroundPermissionsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Asks the user to grant permissions for location while the app is in the background.\n   * On __Android 11 or higher__: this method will open the system settings page - before that happens\n   * you should explain to the user why your application needs background location permission.\n   * For example, you can use `Modal` component from `react-native` to do that.\n   * > __Note__: Foreground permissions should be granted before asking for the background permissions\n   * (your app can't obtain background permission without foreground permission).\n   * @return A promise that fulfills with an object of type [`PermissionResponse`](#permissionresponse).\n   */\n  function _getBackgroundPermissionsAsync() {\n    _getBackgroundPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      return yield _ExpoLocation.default.getBackgroundPermissionsAsync();\n    });\n    return _getBackgroundPermissionsAsync.apply(this, arguments);\n  }\n  function requestBackgroundPermissionsAsync() {\n    return _requestBackgroundPermissionsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Check or request permissions for the background location.\n   * This uses both `requestBackgroundPermissionsAsync` and `getBackgroundPermissionsAsync` to\n   * interact with the permissions.\n   *\n   * @example\n   * ```ts\n   * const [status, requestPermission] = Location.useBackgroundPermissions();\n   * ```\n   */\n  function _requestBackgroundPermissionsAsync() {\n    _requestBackgroundPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      return yield _ExpoLocation.default.requestBackgroundPermissionsAsync();\n    });\n    return _requestBackgroundPermissionsAsync.apply(this, arguments);\n  }\n  var useBackgroundPermissions = exports.useBackgroundPermissions = (0, _expoModulesCore.createPermissionHook)({\n    getMethod: getBackgroundPermissionsAsync,\n    requestMethod: requestBackgroundPermissionsAsync\n  });\n  // --- Location service\n  // @needsAudit\n  /**\n   * Checks whether location services are enabled by the user.\n   * @return A promise which fulfills to `true` if location services are enabled on the device,\n   * or `false` if not.\n   */\n  function hasServicesEnabledAsync() {\n    return _hasServicesEnabledAsync.apply(this, arguments);\n  } // --- Background location updates\n  function _hasServicesEnabledAsync() {\n    _hasServicesEnabledAsync = (0, _asyncToGenerator2.default)(function* () {\n      return yield _ExpoLocation.default.hasServicesEnabledAsync();\n    });\n    return _hasServicesEnabledAsync.apply(this, arguments);\n  }\n  function _validate(taskName) {\n    if (!taskName || typeof taskName !== 'string') {\n      throw new Error(`\\`taskName\\` must be a non-empty string. Got ${taskName} instead.`);\n    }\n    if ((0, _expo.isRunningInExpoGo)()) {\n      if (!warnAboutExpoGoDisplayed) {\n        var message = 'Background location is limited in Expo Go:\\n' + 'On Android, it is not available at all.\\n' + 'On iOS, it works when running in the Simulator.\\n' + 'You can use this API, and all others, in a development build. Learn more: https://expo.fyi/dev-client.';\n        console.warn(message);\n        warnAboutExpoGoDisplayed = true;\n      }\n    }\n  }\n  // @docsMissing\n  function isBackgroundLocationAvailableAsync() {\n    return _isBackgroundLocationAvailableAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Registers for receiving location updates that can also come when the app is in the background.\n   *\n   * # Task parameters\n   *\n   * Background location task will be receiving following data:\n   * - `locations` - An array of the new locations.\n   *\n   * @example\n   * ```ts\n   * import * as TaskManager from 'expo-task-manager';\n   *\n   * TaskManager.defineTask(YOUR_TASK_NAME, ({ data: { locations }, error }) => {\n   *  if (error) {\n   *    // check `error.message` for more details.\n   *    return;\n   *  }\n   *  console.log('Received new locations', locations);\n   * });\n   * ```\n   *\n   * @param taskName Name of the task receiving location updates.\n   * @param options An object of options passed to the location manager.\n   *\n   * @return A promise resolving once the task with location updates is registered.\n   */\n  function _isBackgroundLocationAvailableAsync() {\n    _isBackgroundLocationAvailableAsync = (0, _asyncToGenerator2.default)(function* () {\n      var providerStatus = yield getProviderStatusAsync();\n      return providerStatus.backgroundModeEnabled;\n    });\n    return _isBackgroundLocationAvailableAsync.apply(this, arguments);\n  }\n  function startLocationUpdatesAsync(_x8) {\n    return _startLocationUpdatesAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Stops location updates for specified task.\n   * @param taskName Name of the background location task to stop.\n   * @return A promise resolving as soon as the task is unregistered.\n   */\n  function _startLocationUpdatesAsync() {\n    _startLocationUpdatesAsync = (0, _asyncToGenerator2.default)(function* (taskName) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        accuracy: _Location.LocationAccuracy.Balanced\n      };\n      _validate(taskName);\n      yield _ExpoLocation.default.startLocationUpdatesAsync(taskName, options);\n    });\n    return _startLocationUpdatesAsync.apply(this, arguments);\n  }\n  function stopLocationUpdatesAsync(_x9) {\n    return _stopLocationUpdatesAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * @param taskName Name of the location task to check.\n   * @return A promise which fulfills with boolean value indicating whether the location task is\n   * started or not.\n   */\n  function _stopLocationUpdatesAsync() {\n    _stopLocationUpdatesAsync = (0, _asyncToGenerator2.default)(function* (taskName) {\n      _validate(taskName);\n      yield _ExpoLocation.default.stopLocationUpdatesAsync(taskName);\n    });\n    return _stopLocationUpdatesAsync.apply(this, arguments);\n  }\n  function hasStartedLocationUpdatesAsync(_x0) {\n    return _hasStartedLocationUpdatesAsync.apply(this, arguments);\n  } // --- Geofencing\n  function _hasStartedLocationUpdatesAsync() {\n    _hasStartedLocationUpdatesAsync = (0, _asyncToGenerator2.default)(function* (taskName) {\n      _validate(taskName);\n      return _ExpoLocation.default.hasStartedLocationUpdatesAsync(taskName);\n    });\n    return _hasStartedLocationUpdatesAsync.apply(this, arguments);\n  }\n  function _validateRegions(regions) {\n    if (!regions || regions.length === 0) {\n      throw new Error('Regions array cannot be empty. Use `stopGeofencingAsync` if you want to stop geofencing all regions');\n    }\n    for (var region of regions) {\n      if (typeof region.latitude !== 'number') {\n        throw new TypeError(`Region's latitude must be a number. Got '${region.latitude}' instead.`);\n      }\n      if (typeof region.longitude !== 'number') {\n        throw new TypeError(`Region's longitude must be a number. Got '${region.longitude}' instead.`);\n      }\n      if (typeof region.radius !== 'number') {\n        throw new TypeError(`Region's radius must be a number. Got '${region.radius}' instead.`);\n      }\n    }\n  }\n  // @needsAudit\n  /**\n   * Starts geofencing for given regions. When the new event comes, the task with specified name will\n   * be called with the region that the device enter to or exit from.\n   * If you want to add or remove regions from already running geofencing task, you can just call\n   * `startGeofencingAsync` again with the new array of regions.\n   *\n   * # Task parameters\n   *\n   * Geofencing task will be receiving following data:\n   *  - `eventType` - Indicates the reason for calling the task, which can be triggered by entering or exiting the region.\n   *    See [`GeofencingEventType`](#geofencingeventtype).\n   *  - `region` - Object containing details about updated region. See [`LocationRegion`](#locationregion) for more details.\n   *\n   * @param taskName Name of the task that will be called when the device enters or exits from specified regions.\n   * @param regions Array of region objects to be geofenced.\n   *\n   * @return A promise resolving as soon as the task is registered.\n   *\n   * @example\n   * ```ts\n   * import { GeofencingEventType } from 'expo-location';\n   * import * as TaskManager from 'expo-task-manager';\n   *\n   *  TaskManager.defineTask(YOUR_TASK_NAME, ({ data: { eventType, region }, error }) => {\n   *   if (error) {\n   *     // check `error.message` for more details.\n   *     return;\n   *   }\n   *   if (eventType === GeofencingEventType.Enter) {\n   *     console.log(\"You've entered region:\", region);\n   *   } else if (eventType === GeofencingEventType.Exit) {\n   *     console.log(\"You've left region:\", region);\n   *   }\n   * });\n   * ```\n   */\n  function startGeofencingAsync(_x1) {\n    return _startGeofencingAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Stops geofencing for specified task. It unregisters the background task so the app will not be\n   * receiving any updates, especially in the background.\n   * @param taskName Name of the task to unregister.\n   * @return A promise resolving as soon as the task is unregistered.\n   */\n  function _startGeofencingAsync() {\n    _startGeofencingAsync = (0, _asyncToGenerator2.default)(function* (taskName) {\n      var regions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      _validate(taskName);\n      _validateRegions(regions);\n      yield _ExpoLocation.default.startGeofencingAsync(taskName, {\n        regions: regions\n      });\n    });\n    return _startGeofencingAsync.apply(this, arguments);\n  }\n  function stopGeofencingAsync(_x10) {\n    return _stopGeofencingAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * @param taskName Name of the geofencing task to check.\n   * @return A promise which fulfills with boolean value indicating whether the geofencing task is\n   * started or not.\n   */\n  function _stopGeofencingAsync() {\n    _stopGeofencingAsync = (0, _asyncToGenerator2.default)(function* (taskName) {\n      _validate(taskName);\n      yield _ExpoLocation.default.stopGeofencingAsync(taskName);\n    });\n    return _stopGeofencingAsync.apply(this, arguments);\n  }\n  function hasStartedGeofencingAsync(_x11) {\n    return _hasStartedGeofencingAsync.apply(this, arguments);\n  }\n  function _hasStartedGeofencingAsync() {\n    _hasStartedGeofencingAsync = (0, _asyncToGenerator2.default)(function* (taskName) {\n      _validate(taskName);\n      return _ExpoLocation.default.hasStartedGeofencingAsync(taskName);\n    });\n    return _hasStartedGeofencingAsync.apply(this, arguments);\n  }\n});","lineCount":570,"map":[[29,2,1,0],[29,6,1,0,"_expo"],[29,11,1,0],[29,14,1,0,"require"],[29,21,1,0],[29,22,1,0,"_dependencyMap"],[29,36,1,0],[30,2,2,0],[30,6,2,0,"_expoModulesCore"],[30,22,2,0],[30,25,2,0,"require"],[30,32,2,0],[30,33,2,0,"_dependencyMap"],[30,47,2,0],[31,2,3,0],[31,6,3,0,"_ExpoLocation"],[31,19,3,0],[31,22,3,0,"_interopRequireDefault"],[31,44,3,0],[31,45,3,0,"require"],[31,52,3,0],[31,53,3,0,"_dependencyMap"],[31,67,3,0],[32,2,4,0],[32,6,4,0,"_Location"],[32,15,4,0],[32,18,4,0,"require"],[32,25,4,0],[32,26,4,0,"_dependencyMap"],[32,40,4,0],[33,2,5,0],[33,6,5,0,"_LocationSubscribers"],[33,26,5,0],[33,29,5,0,"require"],[33,36,5,0],[33,37,5,0,"_dependencyMap"],[33,51,5,0],[34,2,6,0],[35,2,7,0],[35,6,7,4,"warnAboutExpoGoDisplayed"],[35,30,7,28],[35,33,7,31],[35,38,7,36],[36,2,8,0],[37,2,9,0],[38,0,10,0],[39,0,11,0],[40,0,12,0],[41,2,9,0],[41,11,13,22,"getProviderStatusAsync"],[41,33,13,44,"getProviderStatusAsync"],[41,34,13,44],[42,4,13,44],[42,11,13,44,"_getProviderStatusAsync"],[42,34,13,44],[42,35,13,44,"apply"],[42,40,13,44],[42,47,13,44,"arguments"],[42,56,13,44],[43,2,13,44],[43,4,16,0],[44,2,17,0],[45,0,18,0],[46,0,19,0],[47,0,20,0],[48,0,21,0],[49,0,22,0],[50,0,23,0],[51,2,17,0],[51,11,17,0,"_getProviderStatusAsync"],[51,35,17,0],[52,4,17,0,"_getProviderStatusAsync"],[52,27,17,0],[52,34,17,0,"_asyncToGenerator2"],[52,52,17,0],[52,53,17,0,"default"],[52,60,17,0],[52,62,13,7],[52,75,13,47],[53,6,14,4],[53,13,14,11,"ExpoLocation"],[53,34,14,23],[53,35,14,24,"getProviderStatusAsync"],[53,57,14,46],[53,58,14,47],[53,59,14,48],[54,4,15,0],[54,5,15,1],[55,4,15,1],[55,11,15,1,"_getProviderStatusAsync"],[55,34,15,1],[55,35,15,1,"apply"],[55,40,15,1],[55,47,15,1,"arguments"],[55,56,15,1],[56,2,15,1],[57,2,15,1],[57,11,24,22,"enableNetworkProviderAsync"],[57,37,24,48,"enableNetworkProviderAsync"],[57,38,24,48],[58,4,24,48],[58,11,24,48,"_enableNetworkProviderAsync"],[58,38,24,48],[58,39,24,48,"apply"],[58,44,24,48],[58,51,24,48,"arguments"],[58,60,24,48],[59,2,24,48],[59,4,33,0],[60,2,34,0],[61,0,35,0],[62,0,36,0],[63,0,37,0],[64,0,38,0],[65,0,39,0],[66,0,40,0],[67,0,41,0],[68,0,42,0],[69,0,43,0],[70,2,34,0],[70,11,34,0,"_enableNetworkProviderAsync"],[70,39,34,0],[71,4,34,0,"_enableNetworkProviderAsync"],[71,31,34,0],[71,38,34,0,"_asyncToGenerator2"],[71,56,34,0],[71,57,34,0,"default"],[71,64,34,0],[71,66,24,7],[71,79,24,51],[72,6,25,4],[73,6,26,4],[74,6,27,4],[75,6,28,4],[76,6,29,4],[76,10,29,8,"Platform"],[76,35,29,16],[76,36,29,17,"OS"],[76,38,29,19],[76,43,29,24],[76,52,29,33],[76,54,29,35],[77,8,30,8],[77,15,30,15,"ExpoLocation"],[77,36,30,27],[77,37,30,28,"enableNetworkProviderAsync"],[77,63,30,54],[77,64,30,55],[77,65,30,56],[78,6,31,4],[79,4,32,0],[79,5,32,1],[80,4,32,1],[80,11,32,1,"_enableNetworkProviderAsync"],[80,38,32,1],[80,39,32,1,"apply"],[80,44,32,1],[80,51,32,1,"arguments"],[80,60,32,1],[81,2,32,1],[82,2,32,1],[82,11,44,22,"getCurrentPositionAsync"],[82,34,44,45,"getCurrentPositionAsync"],[82,35,44,45],[83,4,44,45],[83,11,44,45,"_getCurrentPositionAsync"],[83,35,44,45],[83,36,44,45,"apply"],[83,41,44,45],[83,48,44,45,"arguments"],[83,57,44,45],[84,2,44,45],[84,4,47,0],[85,2,48,0],[86,0,49,0],[87,0,50,0],[88,0,51,0],[89,0,52,0],[90,0,53,0],[91,0,54,0],[92,0,55,0],[93,0,56,0],[94,0,57,0],[95,2,48,0],[95,11,48,0,"_getCurrentPositionAsync"],[95,36,48,0],[96,4,48,0,"_getCurrentPositionAsync"],[96,28,48,0],[96,35,48,0,"_asyncToGenerator2"],[96,53,48,0],[96,54,48,0,"default"],[96,61,48,0],[96,63,44,7],[96,76,44,60],[97,6,44,60],[97,10,44,46,"options"],[97,17,44,53],[97,20,44,53,"arguments"],[97,29,44,53],[97,30,44,53,"length"],[97,36,44,53],[97,44,44,53,"arguments"],[97,53,44,53],[97,61,44,53,"undefined"],[97,70,44,53],[97,73,44,53,"arguments"],[97,82,44,53],[97,88,44,56],[97,89,44,57],[97,90,44,58],[98,6,45,4],[98,13,45,11,"ExpoLocation"],[98,34,45,23],[98,35,45,24,"getCurrentPositionAsync"],[98,58,45,47],[98,59,45,48,"options"],[98,66,45,55],[98,67,45,56],[99,4,46,0],[99,5,46,1],[100,4,46,1],[100,11,46,1,"_getCurrentPositionAsync"],[100,35,46,1],[100,36,46,1,"apply"],[100,41,46,1],[100,48,46,1,"arguments"],[100,57,46,1],[101,2,46,1],[102,2,46,1],[102,11,58,22,"getLastKnownPositionAsync"],[102,36,58,47,"getLastKnownPositionAsync"],[102,37,58,47],[103,4,58,47],[103,11,58,47,"_getLastKnownPositionAsync"],[103,37,58,47],[103,38,58,47,"apply"],[103,43,58,47],[103,50,58,47,"arguments"],[103,59,58,47],[104,2,58,47],[104,4,61,0],[105,2,62,0],[106,0,63,0],[107,0,64,0],[108,0,65,0],[109,0,66,0],[110,0,67,0],[111,0,68,0],[112,0,69,0],[113,0,70,0],[114,0,71,0],[115,0,72,0],[116,2,62,0],[116,11,62,0,"_getLastKnownPositionAsync"],[116,38,62,0],[117,4,62,0,"_getLastKnownPositionAsync"],[117,30,62,0],[117,37,62,0,"_asyncToGenerator2"],[117,55,62,0],[117,56,62,0,"default"],[117,63,62,0],[117,65,58,7],[117,78,58,62],[118,6,58,62],[118,10,58,48,"options"],[118,17,58,55],[118,20,58,55,"arguments"],[118,29,58,55],[118,30,58,55,"length"],[118,36,58,55],[118,44,58,55,"arguments"],[118,53,58,55],[118,61,58,55,"undefined"],[118,70,58,55],[118,73,58,55,"arguments"],[118,82,58,55],[118,88,58,58],[118,89,58,59],[118,90,58,60],[119,6,59,4],[119,13,59,11,"ExpoLocation"],[119,34,59,23],[119,35,59,24,"getLastKnownPositionAsync"],[119,60,59,49],[119,61,59,50,"options"],[119,68,59,57],[119,69,59,58],[120,4,60,0],[120,5,60,1],[121,4,60,1],[121,11,60,1,"_getLastKnownPositionAsync"],[121,37,60,1],[121,38,60,1,"apply"],[121,43,60,1],[121,50,60,1,"arguments"],[121,59,60,1],[122,2,60,1],[123,2,60,1],[123,11,73,22,"watchPositionAsync"],[123,29,73,40,"watchPositionAsync"],[123,30,73,40,"_x"],[123,32,73,40],[123,34,73,40,"_x2"],[123,37,73,40],[123,39,73,40,"_x3"],[123,42,73,40],[124,4,73,40],[124,11,73,40,"_watchPositionAsync"],[124,30,73,40],[124,31,73,40,"apply"],[124,36,73,40],[124,43,73,40,"arguments"],[124,52,73,40],[125,2,73,40],[125,4,84,0],[126,2,85,0],[127,0,86,0],[128,0,87,0],[129,0,88,0],[130,0,89,0],[131,2,85,0],[131,11,85,0,"_watchPositionAsync"],[131,31,85,0],[132,4,85,0,"_watchPositionAsync"],[132,23,85,0],[132,30,85,0,"_asyncToGenerator2"],[132,48,85,0],[132,49,85,0,"default"],[132,56,85,0],[132,58,73,7],[132,69,73,41,"options"],[132,76,73,48],[132,78,73,50,"callback"],[132,86,73,58],[132,88,73,60,"errorHandler"],[132,100,73,72],[132,102,73,74],[133,6,74,4],[133,10,74,10,"watchId"],[133,17,74,17],[133,20,74,20,"LocationSubscriber"],[133,59,74,38],[133,60,74,39,"registerCallback"],[133,76,74,55],[133,77,74,56,"callback"],[133,85,74,64],[133,86,74,65],[134,6,75,4,"errorHandler"],[134,18,75,16],[134,22,75,20,"LocationErrorSubscriber"],[134,66,75,43],[134,67,75,44,"registerCallbackForId"],[134,88,75,65],[134,89,75,66,"watchId"],[134,96,75,73],[134,98,75,75,"errorHandler"],[134,110,75,87],[134,111,75,88],[135,6,76,4],[135,12,76,10,"ExpoLocation"],[135,33,76,22],[135,34,76,23,"watchPositionImplAsync"],[135,56,76,45],[135,57,76,46,"watchId"],[135,64,76,53],[135,66,76,55,"options"],[135,73,76,62],[135,74,76,63],[136,6,77,4],[136,13,77,11],[137,8,78,8,"remove"],[137,14,78,14],[137,25,78,8,"remove"],[137,31,78,14,"remove"],[137,32,78,14],[137,34,78,17],[138,10,79,12,"LocationSubscriber"],[138,49,79,30],[138,50,79,31,"unregisterCallback"],[138,68,79,49],[138,69,79,50,"watchId"],[138,76,79,57],[138,77,79,58],[139,10,80,12,"errorHandler"],[139,22,80,24],[139,26,80,28,"LocationErrorSubscriber"],[139,70,80,51],[139,71,80,52,"unregisterCallback"],[139,89,80,70],[139,90,80,71,"watchId"],[139,97,80,78],[139,98,80,79],[140,8,81,8],[141,6,82,4],[141,7,82,5],[142,4,83,0],[142,5,83,1],[143,4,83,1],[143,11,83,1,"_watchPositionAsync"],[143,30,83,1],[143,31,83,1,"apply"],[143,36,83,1],[143,43,83,1,"arguments"],[143,52,83,1],[144,2,83,1],[145,2,83,1],[145,11,90,22,"getHeadingAsync"],[145,26,90,37,"getHeadingAsync"],[145,27,90,37],[146,4,90,37],[146,11,90,37,"_getHeadingAsync"],[146,27,90,37],[146,28,90,37,"apply"],[146,33,90,37],[146,40,90,37,"arguments"],[146,49,90,37],[147,2,90,37],[147,4,113,0],[148,2,114,0],[149,0,115,0],[150,0,116,0],[151,0,117,0],[152,0,118,0],[153,0,119,0],[154,0,120,0],[155,0,121,0],[156,0,122,0],[157,0,123,0],[158,0,124,0],[159,0,125,0],[160,2,114,0],[160,11,114,0,"_getHeadingAsync"],[160,28,114,0],[161,4,114,0,"_getHeadingAsync"],[161,20,114,0],[161,27,114,0,"_asyncToGenerator2"],[161,45,114,0],[161,46,114,0,"default"],[161,53,114,0],[161,55,90,7],[161,68,90,40],[162,6,91,4],[162,13,91,11],[162,17,91,15,"Promise"],[162,24,91,22],[163,8,91,22],[163,12,91,22,"_ref"],[163,16,91,22],[163,23,91,22,"_asyncToGenerator2"],[163,41,91,22],[163,42,91,22,"default"],[163,49,91,22],[163,51,91,23],[163,62,91,30,"resolve"],[163,69,91,37],[163,71,91,39,"reject"],[163,77,91,45],[163,79,91,50],[164,10,92,8],[164,14,92,12,"tries"],[164,19,92,17],[164,22,92,20],[164,23,92,21],[165,10,93,8],[165,14,93,12,"subscriber"],[165,24,93,22],[165,27,93,25,"undefined"],[165,36,93,34],[166,10,94,8],[166,14,94,12],[167,12,95,12,"subscriber"],[167,22,95,22],[167,31,95,31,"watchHeadingAsync"],[167,48,95,48],[167,49,95,49],[167,59,95,50,"heading"],[167,66,95,57],[167,68,95,62],[168,14,96,16],[168,18,96,20,"heading"],[168,25,96,27],[168,26,96,28,"accuracy"],[168,34,96,36],[168,37,96,39],[168,38,96,40],[168,42,96,44,"tries"],[168,47,96,49],[168,50,96,52],[168,51,96,53],[168,53,96,55],[169,16,96,55],[169,20,96,55,"_subscriber"],[169,31,96,55],[170,16,97,20],[170,17,97,20,"_subscriber"],[170,28,97,20],[170,31,97,20,"subscriber"],[170,41,97,30],[170,54,97,20,"_subscriber"],[170,65,97,20],[170,66,97,32,"remove"],[170,72,97,38],[170,73,97,39],[170,74,97,40],[171,16,98,20,"resolve"],[171,23,98,27],[171,24,98,28,"heading"],[171,31,98,35],[171,32,98,36],[172,14,99,16],[172,15,99,17],[172,21,100,21],[173,16,101,20,"tries"],[173,21,101,25],[173,25,101,29],[173,26,101,30],[174,14,102,16],[175,12,103,12],[175,13,103,13],[175,15,103,15],[175,25,103,16,"reason"],[175,31,103,22],[175,33,103,27],[176,14,103,27],[176,18,103,27,"_subscriber2"],[176,30,103,27],[177,14,104,16],[177,15,104,16,"_subscriber2"],[177,27,104,16],[177,30,104,16,"subscriber"],[177,40,104,26],[177,53,104,16,"_subscriber2"],[177,65,104,16],[177,66,104,28,"remove"],[177,72,104,34],[177,73,104,35],[177,74,104,36],[178,14,105,16,"reject"],[178,20,105,22],[178,21,105,23,"reason"],[178,27,105,29],[178,28,105,30],[179,12,106,12],[179,13,106,13],[179,14,106,14],[180,10,107,8],[180,11,107,9],[180,12,108,8],[180,19,108,15,"e"],[180,20,108,16],[180,22,108,18],[181,12,109,12,"reject"],[181,18,109,18],[181,19,109,19,"e"],[181,20,109,20],[181,21,109,21],[182,10,110,8],[183,8,111,4],[183,9,111,5],[184,8,111,5],[184,25,111,5,"_x12"],[184,29,111,5],[184,31,111,5,"_x13"],[184,35,111,5],[185,10,111,5],[185,17,111,5,"_ref"],[185,21,111,5],[185,22,111,5,"apply"],[185,27,111,5],[185,34,111,5,"arguments"],[185,43,111,5],[186,8,111,5],[187,6,111,5],[187,10,111,6],[188,4,112,0],[188,5,112,1],[189,4,112,1],[189,11,112,1,"_getHeadingAsync"],[189,27,112,1],[189,28,112,1,"apply"],[189,33,112,1],[189,40,112,1,"arguments"],[189,49,112,1],[190,2,112,1],[191,2,112,1],[191,11,126,22,"watchHeadingAsync"],[191,28,126,39,"watchHeadingAsync"],[191,29,126,39,"_x4"],[191,32,126,39],[191,34,126,39,"_x5"],[191,37,126,39],[192,4,126,39],[192,11,126,39,"_watchHeadingAsync"],[192,29,126,39],[192,30,126,39,"apply"],[192,35,126,39],[192,42,126,39,"arguments"],[192,51,126,39],[193,2,126,39],[193,4,137,0],[194,2,138,0],[195,0,139,0],[196,0,140,0],[197,0,141,0],[198,0,142,0],[199,0,143,0],[200,0,144,0],[201,0,145,0],[202,0,146,0],[203,0,147,0],[204,0,148,0],[205,0,149,0],[206,0,150,0],[207,0,151,0],[208,0,152,0],[209,0,153,0],[210,0,154,0],[211,0,155,0],[212,2,138,0],[212,11,138,0,"_watchHeadingAsync"],[212,30,138,0],[213,4,138,0,"_watchHeadingAsync"],[213,22,138,0],[213,29,138,0,"_asyncToGenerator2"],[213,47,138,0],[213,48,138,0,"default"],[213,55,138,0],[213,57,126,7],[213,68,126,40,"callback"],[213,76,126,48],[213,78,126,50,"errorHandler"],[213,90,126,62],[213,92,126,64],[214,6,127,4],[214,10,127,10,"watchId"],[214,17,127,17],[214,20,127,20,"HeadingSubscriber"],[214,58,127,37],[214,59,127,38,"registerCallback"],[214,75,127,54],[214,76,127,55,"callback"],[214,84,127,63],[214,85,127,64],[215,6,128,4,"errorHandler"],[215,18,128,16],[215,22,128,20,"LocationErrorSubscriber"],[215,66,128,43],[215,67,128,44,"registerCallbackForId"],[215,88,128,65],[215,89,128,66,"watchId"],[215,96,128,73],[215,98,128,75,"errorHandler"],[215,110,128,87],[215,111,128,88],[216,6,129,4],[216,12,129,10,"ExpoLocation"],[216,33,129,22],[216,34,129,23,"watchDeviceHeading"],[216,52,129,41],[216,53,129,42,"watchId"],[216,60,129,49],[216,61,129,50],[217,6,130,4],[217,13,130,11],[218,8,131,8,"remove"],[218,14,131,14],[218,25,131,8,"remove"],[218,31,131,14,"remove"],[218,32,131,14],[218,34,131,17],[219,10,132,12,"HeadingSubscriber"],[219,48,132,29],[219,49,132,30,"unregisterCallback"],[219,67,132,48],[219,68,132,49,"watchId"],[219,75,132,56],[219,76,132,57],[220,10,133,12,"errorHandler"],[220,22,133,24],[220,26,133,28,"LocationErrorSubscriber"],[220,70,133,51],[220,71,133,52,"unregisterCallback"],[220,89,133,70],[220,90,133,71,"watchId"],[220,97,133,78],[220,98,133,79],[221,8,134,8],[222,6,135,4],[222,7,135,5],[223,4,136,0],[223,5,136,1],[224,4,136,1],[224,11,136,1,"_watchHeadingAsync"],[224,29,136,1],[224,30,136,1,"apply"],[224,35,136,1],[224,42,136,1,"arguments"],[224,51,136,1],[225,2,136,1],[226,2,136,1],[226,11,156,22,"geocodeAsync"],[226,23,156,34,"geocodeAsync"],[226,24,156,34,"_x6"],[226,27,156,34],[227,4,156,34],[227,11,156,34,"_geocodeAsync"],[227,24,156,34],[227,25,156,34,"apply"],[227,30,156,34],[227,37,156,34,"arguments"],[227,46,156,34],[228,2,156,34],[228,4,169,0],[229,2,170,0],[230,0,171,0],[231,0,172,0],[232,0,173,0],[233,0,174,0],[234,0,175,0],[235,0,176,0],[236,0,177,0],[237,0,178,0],[238,0,179,0],[239,0,180,0],[240,0,181,0],[241,0,182,0],[242,0,183,0],[243,0,184,0],[244,0,185,0],[245,0,186,0],[246,2,170,0],[246,11,170,0,"_geocodeAsync"],[246,25,170,0],[247,4,170,0,"_geocodeAsync"],[247,17,170,0],[247,24,170,0,"_asyncToGenerator2"],[247,42,170,0],[247,43,170,0,"default"],[247,50,170,0],[247,52,156,7],[247,63,156,35,"address"],[247,70,156,42],[247,72,156,44],[248,6,157,4],[248,10,157,8],[248,17,157,15,"address"],[248,24,157,22],[248,29,157,27],[248,37,157,35],[248,39,157,37],[249,8,158,8],[249,14,158,14],[249,18,158,18,"TypeError"],[249,27,158,27],[249,28,158,28],[249,72,158,72,"address"],[249,79,158,79],[249,90,158,90],[249,91,158,91],[250,6,159,4],[251,6,160,4],[251,10,160,8,"Platform"],[251,35,160,16],[251,36,160,17,"OS"],[251,38,160,19],[251,43,160,24],[251,48,160,29],[251,50,160,31],[252,8,161,8],[252,12,161,12,"__DEV__"],[252,19,161,19],[252,21,161,21],[253,10,162,12,"console"],[253,17,162,19],[253,18,162,20,"warn"],[253,22,162,24],[253,23,162,25],[253,109,162,111],[253,112,163,16],[253,196,163,100],[253,197,163,101],[254,8,164,8],[255,8,165,8],[255,15,165,15],[255,17,165,17],[256,6,166,4],[257,6,167,4],[257,19,167,17,"ExpoLocation"],[257,40,167,29],[257,41,167,30,"geocodeAsync"],[257,53,167,42],[257,54,167,43,"address"],[257,61,167,50],[257,62,167,51],[258,4,168,0],[258,5,168,1],[259,4,168,1],[259,11,168,1,"_geocodeAsync"],[259,24,168,1],[259,25,168,1,"apply"],[259,30,168,1],[259,37,168,1,"arguments"],[259,46,168,1],[260,2,168,1],[261,2,168,1],[261,11,187,22,"reverseGeocodeAsync"],[261,30,187,41,"reverseGeocodeAsync"],[261,31,187,41,"_x7"],[261,34,187,41],[262,4,187,41],[262,11,187,41,"_reverseGeocodeAsync"],[262,31,187,41],[262,32,187,41,"apply"],[262,37,187,41],[262,44,187,41,"arguments"],[262,53,187,41],[263,2,187,41],[263,4,200,0],[264,2,201,0],[265,0,202,0],[266,0,203,0],[267,0,204,0],[268,2,201,0],[268,11,201,0,"_reverseGeocodeAsync"],[268,32,201,0],[269,4,201,0,"_reverseGeocodeAsync"],[269,24,201,0],[269,31,201,0,"_asyncToGenerator2"],[269,49,201,0],[269,50,201,0,"default"],[269,57,201,0],[269,59,187,7],[269,70,187,42,"location"],[269,78,187,50],[269,80,187,52],[270,6,188,4],[270,10,188,8],[270,17,188,15,"location"],[270,25,188,23],[270,26,188,24,"latitude"],[270,34,188,32],[270,39,188,37],[270,47,188,45],[270,51,188,49],[270,58,188,56,"location"],[270,66,188,64],[270,67,188,65,"longitude"],[270,76,188,74],[270,81,188,79],[270,89,188,87],[270,91,188,89],[271,8,189,8],[271,14,189,14],[271,18,189,18,"TypeError"],[271,27,189,27],[271,28,189,28],[271,126,189,126],[271,127,189,127],[272,6,190,4],[273,6,191,4],[273,10,191,8,"Platform"],[273,35,191,16],[273,36,191,17,"OS"],[273,38,191,19],[273,43,191,24],[273,48,191,29],[273,50,191,31],[274,8,192,8],[274,12,192,12,"__DEV__"],[274,19,192,19],[274,21,192,21],[275,10,193,12,"console"],[275,17,193,19],[275,18,193,20,"warn"],[275,22,193,24],[275,23,193,25],[275,109,193,111],[275,112,194,16],[275,196,194,100],[275,197,194,101],[276,8,195,8],[277,8,196,8],[277,15,196,15],[277,17,196,17],[278,6,197,4],[279,6,198,4],[279,19,198,17,"ExpoLocation"],[279,40,198,29],[279,41,198,30,"reverseGeocodeAsync"],[279,60,198,49],[279,61,198,50,"location"],[279,69,198,58],[279,70,198,59],[280,4,199,0],[280,5,199,1],[281,4,199,1],[281,11,199,1,"_reverseGeocodeAsync"],[281,31,199,1],[281,32,199,1,"apply"],[281,37,199,1],[281,44,199,1,"arguments"],[281,53,199,1],[282,2,199,1],[283,2,199,1],[283,11,205,22,"getForegroundPermissionsAsync"],[283,40,205,51,"getForegroundPermissionsAsync"],[283,41,205,51],[284,4,205,51],[284,11,205,51,"_getForegroundPermissionsAsync"],[284,41,205,51],[284,42,205,51,"apply"],[284,47,205,51],[284,54,205,51,"arguments"],[284,63,205,51],[285,2,205,51],[285,4,208,0],[286,2,209,0],[287,0,210,0],[288,0,211,0],[289,0,212,0],[290,2,209,0],[290,11,209,0,"_getForegroundPermissionsAsync"],[290,42,209,0],[291,4,209,0,"_getForegroundPermissionsAsync"],[291,34,209,0],[291,41,209,0,"_asyncToGenerator2"],[291,59,209,0],[291,60,209,0,"default"],[291,67,209,0],[291,69,205,7],[291,82,205,54],[292,6,206,4],[292,19,206,17,"ExpoLocation"],[292,40,206,29],[292,41,206,30,"getForegroundPermissionsAsync"],[292,70,206,59],[292,71,206,60],[292,72,206,61],[293,4,207,0],[293,5,207,1],[294,4,207,1],[294,11,207,1,"_getForegroundPermissionsAsync"],[294,41,207,1],[294,42,207,1,"apply"],[294,47,207,1],[294,54,207,1,"arguments"],[294,63,207,1],[295,2,207,1],[296,2,207,1],[296,11,213,22,"requestForegroundPermissionsAsync"],[296,44,213,55,"requestForegroundPermissionsAsync"],[296,45,213,55],[297,4,213,55],[297,11,213,55,"_requestForegroundPermissionsAsync"],[297,45,213,55],[297,46,213,55,"apply"],[297,51,213,55],[297,58,213,55,"arguments"],[297,67,213,55],[298,2,213,55],[298,4,216,0],[299,2,217,0],[300,0,218,0],[301,0,219,0],[302,0,220,0],[303,0,221,0],[304,0,222,0],[305,0,223,0],[306,0,224,0],[307,0,225,0],[308,2,217,0],[308,11,217,0,"_requestForegroundPermissionsAsync"],[308,46,217,0],[309,4,217,0,"_requestForegroundPermissionsAsync"],[309,38,217,0],[309,45,217,0,"_asyncToGenerator2"],[309,63,217,0],[309,64,217,0,"default"],[309,71,217,0],[309,73,213,7],[309,86,213,58],[310,6,214,4],[310,19,214,17,"ExpoLocation"],[310,40,214,29],[310,41,214,30,"requestForegroundPermissionsAsync"],[310,74,214,63],[310,75,214,64],[310,76,214,65],[311,4,215,0],[311,5,215,1],[312,4,215,1],[312,11,215,1,"_requestForegroundPermissionsAsync"],[312,45,215,1],[312,46,215,1,"apply"],[312,51,215,1],[312,58,215,1,"arguments"],[312,67,215,1],[313,2,215,1],[314,2,226,7],[314,6,226,13,"useForegroundPermissions"],[314,30,226,37],[314,33,226,37,"exports"],[314,40,226,37],[314,41,226,37,"useForegroundPermissions"],[314,65,226,37],[314,68,226,40],[314,72,226,40,"createPermissionHook"],[314,109,226,60],[314,111,226,61],[315,4,227,4,"getMethod"],[315,13,227,13],[315,15,227,15,"getForegroundPermissionsAsync"],[315,44,227,44],[316,4,228,4,"requestMethod"],[316,17,228,17],[316,19,228,19,"requestForegroundPermissionsAsync"],[317,2,229,0],[317,3,229,1],[317,4,229,2],[318,2,230,0],[319,2,231,0],[320,0,232,0],[321,0,233,0],[322,0,234,0],[323,2,231,0],[323,11,235,22,"getBackgroundPermissionsAsync"],[323,40,235,51,"getBackgroundPermissionsAsync"],[323,41,235,51],[324,4,235,51],[324,11,235,51,"_getBackgroundPermissionsAsync"],[324,41,235,51],[324,42,235,51,"apply"],[324,47,235,51],[324,54,235,51,"arguments"],[324,63,235,51],[325,2,235,51],[325,4,238,0],[326,2,239,0],[327,0,240,0],[328,0,241,0],[329,0,242,0],[330,0,243,0],[331,0,244,0],[332,0,245,0],[333,0,246,0],[334,0,247,0],[335,2,239,0],[335,11,239,0,"_getBackgroundPermissionsAsync"],[335,42,239,0],[336,4,239,0,"_getBackgroundPermissionsAsync"],[336,34,239,0],[336,41,239,0,"_asyncToGenerator2"],[336,59,239,0],[336,60,239,0,"default"],[336,67,239,0],[336,69,235,7],[336,82,235,54],[337,6,236,4],[337,19,236,17,"ExpoLocation"],[337,40,236,29],[337,41,236,30,"getBackgroundPermissionsAsync"],[337,70,236,59],[337,71,236,60],[337,72,236,61],[338,4,237,0],[338,5,237,1],[339,4,237,1],[339,11,237,1,"_getBackgroundPermissionsAsync"],[339,41,237,1],[339,42,237,1,"apply"],[339,47,237,1],[339,54,237,1,"arguments"],[339,63,237,1],[340,2,237,1],[341,2,237,1],[341,11,248,22,"requestBackgroundPermissionsAsync"],[341,44,248,55,"requestBackgroundPermissionsAsync"],[341,45,248,55],[342,4,248,55],[342,11,248,55,"_requestBackgroundPermissionsAsync"],[342,45,248,55],[342,46,248,55,"apply"],[342,51,248,55],[342,58,248,55,"arguments"],[342,67,248,55],[343,2,248,55],[343,4,251,0],[344,2,252,0],[345,0,253,0],[346,0,254,0],[347,0,255,0],[348,0,256,0],[349,0,257,0],[350,0,258,0],[351,0,259,0],[352,0,260,0],[353,0,261,0],[354,2,252,0],[354,11,252,0,"_requestBackgroundPermissionsAsync"],[354,46,252,0],[355,4,252,0,"_requestBackgroundPermissionsAsync"],[355,38,252,0],[355,45,252,0,"_asyncToGenerator2"],[355,63,252,0],[355,64,252,0,"default"],[355,71,252,0],[355,73,248,7],[355,86,248,58],[356,6,249,4],[356,19,249,17,"ExpoLocation"],[356,40,249,29],[356,41,249,30,"requestBackgroundPermissionsAsync"],[356,74,249,63],[356,75,249,64],[356,76,249,65],[357,4,250,0],[357,5,250,1],[358,4,250,1],[358,11,250,1,"_requestBackgroundPermissionsAsync"],[358,45,250,1],[358,46,250,1,"apply"],[358,51,250,1],[358,58,250,1,"arguments"],[358,67,250,1],[359,2,250,1],[360,2,262,7],[360,6,262,13,"useBackgroundPermissions"],[360,30,262,37],[360,33,262,37,"exports"],[360,40,262,37],[360,41,262,37,"useBackgroundPermissions"],[360,65,262,37],[360,68,262,40],[360,72,262,40,"createPermissionHook"],[360,109,262,60],[360,111,262,61],[361,4,263,4,"getMethod"],[361,13,263,13],[361,15,263,15,"getBackgroundPermissionsAsync"],[361,44,263,44],[362,4,264,4,"requestMethod"],[362,17,264,17],[362,19,264,19,"requestBackgroundPermissionsAsync"],[363,2,265,0],[363,3,265,1],[363,4,265,2],[364,2,266,0],[365,2,267,0],[366,2,268,0],[367,0,269,0],[368,0,270,0],[369,0,271,0],[370,0,272,0],[371,2,268,0],[371,11,273,22,"hasServicesEnabledAsync"],[371,34,273,45,"hasServicesEnabledAsync"],[371,35,273,45],[372,4,273,45],[372,11,273,45,"_hasServicesEnabledAsync"],[372,35,273,45],[372,36,273,45,"apply"],[372,41,273,45],[372,48,273,45,"arguments"],[372,57,273,45],[373,2,273,45],[373,4,276,0],[374,2,276,0],[374,11,276,0,"_hasServicesEnabledAsync"],[374,36,276,0],[375,4,276,0,"_hasServicesEnabledAsync"],[375,28,276,0],[375,35,276,0,"_asyncToGenerator2"],[375,53,276,0],[375,54,276,0,"default"],[375,61,276,0],[375,63,273,7],[375,76,273,48],[376,6,274,4],[376,19,274,17,"ExpoLocation"],[376,40,274,29],[376,41,274,30,"hasServicesEnabledAsync"],[376,64,274,53],[376,65,274,54],[376,66,274,55],[377,4,275,0],[377,5,275,1],[378,4,275,1],[378,11,275,1,"_hasServicesEnabledAsync"],[378,35,275,1],[378,36,275,1,"apply"],[378,41,275,1],[378,48,275,1,"arguments"],[378,57,275,1],[379,2,275,1],[380,2,277,0],[380,11,277,9,"_validate"],[380,20,277,18,"_validate"],[380,21,277,19,"taskName"],[380,29,277,27],[380,31,277,29],[381,4,278,4],[381,8,278,8],[381,9,278,9,"taskName"],[381,17,278,17],[381,21,278,21],[381,28,278,28,"taskName"],[381,36,278,36],[381,41,278,41],[381,49,278,49],[381,51,278,51],[382,6,279,8],[382,12,279,14],[382,16,279,18,"Error"],[382,21,279,23],[382,22,279,24],[382,70,279,72,"taskName"],[382,78,279,80],[382,89,279,91],[382,90,279,92],[383,4,280,4],[384,4,281,4],[384,8,281,8],[384,12,281,8,"isRunningInExpoGo"],[384,35,281,25],[384,37,281,26],[384,38,281,27],[384,40,281,29],[385,6,282,8],[385,10,282,12],[385,11,282,13,"warnAboutExpoGoDisplayed"],[385,35,282,37],[385,37,282,39],[386,8,283,12],[386,12,283,18,"message"],[386,19,283,25],[386,22,283,28],[386,68,283,74],[386,71,284,16],[386,114,284,59],[386,117,285,16],[386,168,285,67],[386,171,286,16],[386,275,286,120],[387,8,287,12,"console"],[387,15,287,19],[387,16,287,20,"warn"],[387,20,287,24],[387,21,287,25,"message"],[387,28,287,32],[387,29,287,33],[388,8,288,12,"warnAboutExpoGoDisplayed"],[388,32,288,36],[388,35,288,39],[388,39,288,43],[389,6,289,8],[390,4,290,4],[391,2,291,0],[392,2,292,0],[393,2,292,0],[393,11,293,22,"isBackgroundLocationAvailableAsync"],[393,45,293,56,"isBackgroundLocationAvailableAsync"],[393,46,293,56],[394,4,293,56],[394,11,293,56,"_isBackgroundLocationAvailableAsync"],[394,46,293,56],[394,47,293,56,"apply"],[394,52,293,56],[394,59,293,56,"arguments"],[394,68,293,56],[395,2,293,56],[395,4,297,0],[396,2,298,0],[397,0,299,0],[398,0,300,0],[399,0,301,0],[400,0,302,0],[401,0,303,0],[402,0,304,0],[403,0,305,0],[404,0,306,0],[405,0,307,0],[406,0,308,0],[407,0,309,0],[408,0,310,0],[409,0,311,0],[410,0,312,0],[411,0,313,0],[412,0,314,0],[413,0,315,0],[414,0,316,0],[415,0,317,0],[416,0,318,0],[417,0,319,0],[418,0,320,0],[419,0,321,0],[420,0,322,0],[421,0,323,0],[422,2,298,0],[422,11,298,0,"_isBackgroundLocationAvailableAsync"],[422,47,298,0],[423,4,298,0,"_isBackgroundLocationAvailableAsync"],[423,39,298,0],[423,46,298,0,"_asyncToGenerator2"],[423,64,298,0],[423,65,298,0,"default"],[423,72,298,0],[423,74,293,7],[423,87,293,59],[424,6,294,4],[424,10,294,10,"providerStatus"],[424,24,294,24],[424,33,294,33,"getProviderStatusAsync"],[424,55,294,55],[424,56,294,56],[424,57,294,57],[425,6,295,4],[425,13,295,11,"providerStatus"],[425,27,295,25],[425,28,295,26,"backgroundModeEnabled"],[425,49,295,47],[426,4,296,0],[426,5,296,1],[427,4,296,1],[427,11,296,1,"_isBackgroundLocationAvailableAsync"],[427,46,296,1],[427,47,296,1,"apply"],[427,52,296,1],[427,59,296,1,"arguments"],[427,68,296,1],[428,2,296,1],[429,2,296,1],[429,11,324,22,"startLocationUpdatesAsync"],[429,36,324,47,"startLocationUpdatesAsync"],[429,37,324,47,"_x8"],[429,40,324,47],[430,4,324,47],[430,11,324,47,"_startLocationUpdatesAsync"],[430,37,324,47],[430,38,324,47,"apply"],[430,43,324,47],[430,50,324,47,"arguments"],[430,59,324,47],[431,2,324,47],[431,4,328,0],[432,2,329,0],[433,0,330,0],[434,0,331,0],[435,0,332,0],[436,0,333,0],[437,2,329,0],[437,11,329,0,"_startLocationUpdatesAsync"],[437,38,329,0],[438,4,329,0,"_startLocationUpdatesAsync"],[438,30,329,0],[438,37,329,0,"_asyncToGenerator2"],[438,55,329,0],[438,56,329,0,"default"],[438,63,329,0],[438,65,324,7],[438,76,324,48,"taskName"],[438,84,324,56],[438,86,324,109],[439,6,324,109],[439,10,324,58,"options"],[439,17,324,65],[439,20,324,65,"arguments"],[439,29,324,65],[439,30,324,65,"length"],[439,36,324,65],[439,44,324,65,"arguments"],[439,53,324,65],[439,61,324,65,"undefined"],[439,70,324,65],[439,73,324,65,"arguments"],[439,82,324,65],[439,88,324,68],[440,8,324,70,"accuracy"],[440,16,324,78],[440,18,324,80,"LocationAccuracy"],[440,44,324,96],[440,45,324,97,"Balanced"],[441,6,324,106],[441,7,324,107],[442,6,325,4,"_validate"],[442,15,325,13],[442,16,325,14,"taskName"],[442,24,325,22],[442,25,325,23],[443,6,326,4],[443,12,326,10,"ExpoLocation"],[443,33,326,22],[443,34,326,23,"startLocationUpdatesAsync"],[443,59,326,48],[443,60,326,49,"taskName"],[443,68,326,57],[443,70,326,59,"options"],[443,77,326,66],[443,78,326,67],[444,4,327,0],[444,5,327,1],[445,4,327,1],[445,11,327,1,"_startLocationUpdatesAsync"],[445,37,327,1],[445,38,327,1,"apply"],[445,43,327,1],[445,50,327,1,"arguments"],[445,59,327,1],[446,2,327,1],[447,2,327,1],[447,11,334,22,"stopLocationUpdatesAsync"],[447,35,334,46,"stopLocationUpdatesAsync"],[447,36,334,46,"_x9"],[447,39,334,46],[448,4,334,46],[448,11,334,46,"_stopLocationUpdatesAsync"],[448,36,334,46],[448,37,334,46,"apply"],[448,42,334,46],[448,49,334,46,"arguments"],[448,58,334,46],[449,2,334,46],[449,4,338,0],[450,2,339,0],[451,0,340,0],[452,0,341,0],[453,0,342,0],[454,0,343,0],[455,2,339,0],[455,11,339,0,"_stopLocationUpdatesAsync"],[455,37,339,0],[456,4,339,0,"_stopLocationUpdatesAsync"],[456,29,339,0],[456,36,339,0,"_asyncToGenerator2"],[456,54,339,0],[456,55,339,0,"default"],[456,62,339,0],[456,64,334,7],[456,75,334,47,"taskName"],[456,83,334,55],[456,85,334,57],[457,6,335,4,"_validate"],[457,15,335,13],[457,16,335,14,"taskName"],[457,24,335,22],[457,25,335,23],[458,6,336,4],[458,12,336,10,"ExpoLocation"],[458,33,336,22],[458,34,336,23,"stopLocationUpdatesAsync"],[458,58,336,47],[458,59,336,48,"taskName"],[458,67,336,56],[458,68,336,57],[459,4,337,0],[459,5,337,1],[460,4,337,1],[460,11,337,1,"_stopLocationUpdatesAsync"],[460,36,337,1],[460,37,337,1,"apply"],[460,42,337,1],[460,49,337,1,"arguments"],[460,58,337,1],[461,2,337,1],[462,2,337,1],[462,11,344,22,"hasStartedLocationUpdatesAsync"],[462,41,344,52,"hasStartedLocationUpdatesAsync"],[462,42,344,52,"_x0"],[462,45,344,52],[463,4,344,52],[463,11,344,52,"_hasStartedLocationUpdatesAsync"],[463,42,344,52],[463,43,344,52,"apply"],[463,48,344,52],[463,55,344,52,"arguments"],[463,64,344,52],[464,2,344,52],[464,4,348,0],[465,2,348,0],[465,11,348,0,"_hasStartedLocationUpdatesAsync"],[465,43,348,0],[466,4,348,0,"_hasStartedLocationUpdatesAsync"],[466,35,348,0],[466,42,348,0,"_asyncToGenerator2"],[466,60,348,0],[466,61,348,0,"default"],[466,68,348,0],[466,70,344,7],[466,81,344,53,"taskName"],[466,89,344,61],[466,91,344,63],[467,6,345,4,"_validate"],[467,15,345,13],[467,16,345,14,"taskName"],[467,24,345,22],[467,25,345,23],[468,6,346,4],[468,13,346,11,"ExpoLocation"],[468,34,346,23],[468,35,346,24,"hasStartedLocationUpdatesAsync"],[468,65,346,54],[468,66,346,55,"taskName"],[468,74,346,63],[468,75,346,64],[469,4,347,0],[469,5,347,1],[470,4,347,1],[470,11,347,1,"_hasStartedLocationUpdatesAsync"],[470,42,347,1],[470,43,347,1,"apply"],[470,48,347,1],[470,55,347,1,"arguments"],[470,64,347,1],[471,2,347,1],[472,2,349,0],[472,11,349,9,"_validateRegions"],[472,27,349,25,"_validateRegions"],[472,28,349,26,"regions"],[472,35,349,33],[472,37,349,35],[473,4,350,4],[473,8,350,8],[473,9,350,9,"regions"],[473,16,350,16],[473,20,350,20,"regions"],[473,27,350,27],[473,28,350,28,"length"],[473,34,350,34],[473,39,350,39],[473,40,350,40],[473,42,350,42],[474,6,351,8],[474,12,351,14],[474,16,351,18,"Error"],[474,21,351,23],[474,22,351,24],[474,123,351,125],[474,124,351,126],[475,4,352,4],[476,4,353,4],[476,9,353,9],[476,13,353,15,"region"],[476,19,353,21],[476,23,353,25,"regions"],[476,30,353,32],[476,32,353,34],[477,6,354,8],[477,10,354,12],[477,17,354,19,"region"],[477,23,354,25],[477,24,354,26,"latitude"],[477,32,354,34],[477,37,354,39],[477,45,354,47],[477,47,354,49],[478,8,355,12],[478,14,355,18],[478,18,355,22,"TypeError"],[478,27,355,31],[478,28,355,32],[478,72,355,76,"region"],[478,78,355,82],[478,79,355,83,"latitude"],[478,87,355,91],[478,99,355,103],[478,100,355,104],[479,6,356,8],[480,6,357,8],[480,10,357,12],[480,17,357,19,"region"],[480,23,357,25],[480,24,357,26,"longitude"],[480,33,357,35],[480,38,357,40],[480,46,357,48],[480,48,357,50],[481,8,358,12],[481,14,358,18],[481,18,358,22,"TypeError"],[481,27,358,31],[481,28,358,32],[481,73,358,77,"region"],[481,79,358,83],[481,80,358,84,"longitude"],[481,89,358,93],[481,101,358,105],[481,102,358,106],[482,6,359,8],[483,6,360,8],[483,10,360,12],[483,17,360,19,"region"],[483,23,360,25],[483,24,360,26,"radius"],[483,30,360,32],[483,35,360,37],[483,43,360,45],[483,45,360,47],[484,8,361,12],[484,14,361,18],[484,18,361,22,"TypeError"],[484,27,361,31],[484,28,361,32],[484,70,361,74,"region"],[484,76,361,80],[484,77,361,81,"radius"],[484,83,361,87],[484,95,361,99],[484,96,361,100],[485,6,362,8],[486,4,363,4],[487,2,364,0],[488,2,365,0],[489,2,366,0],[490,0,367,0],[491,0,368,0],[492,0,369,0],[493,0,370,0],[494,0,371,0],[495,0,372,0],[496,0,373,0],[497,0,374,0],[498,0,375,0],[499,0,376,0],[500,0,377,0],[501,0,378,0],[502,0,379,0],[503,0,380,0],[504,0,381,0],[505,0,382,0],[506,0,383,0],[507,0,384,0],[508,0,385,0],[509,0,386,0],[510,0,387,0],[511,0,388,0],[512,0,389,0],[513,0,390,0],[514,0,391,0],[515,0,392,0],[516,0,393,0],[517,0,394,0],[518,0,395,0],[519,0,396,0],[520,0,397,0],[521,0,398,0],[522,0,399,0],[523,0,400,0],[524,0,401,0],[525,2,366,0],[525,11,402,22,"startGeofencingAsync"],[525,31,402,42,"startGeofencingAsync"],[525,32,402,42,"_x1"],[525,35,402,42],[526,4,402,42],[526,11,402,42,"_startGeofencingAsync"],[526,32,402,42],[526,33,402,42,"apply"],[526,38,402,42],[526,45,402,42,"arguments"],[526,54,402,42],[527,2,402,42],[527,4,407,0],[528,2,408,0],[529,0,409,0],[530,0,410,0],[531,0,411,0],[532,0,412,0],[533,0,413,0],[534,2,408,0],[534,11,408,0,"_startGeofencingAsync"],[534,33,408,0],[535,4,408,0,"_startGeofencingAsync"],[535,25,408,0],[535,32,408,0,"_asyncToGenerator2"],[535,50,408,0],[535,51,408,0,"default"],[535,58,408,0],[535,60,402,7],[535,71,402,43,"taskName"],[535,79,402,51],[535,81,402,67],[536,6,402,67],[536,10,402,53,"regions"],[536,17,402,60],[536,20,402,60,"arguments"],[536,29,402,60],[536,30,402,60,"length"],[536,36,402,60],[536,44,402,60,"arguments"],[536,53,402,60],[536,61,402,60,"undefined"],[536,70,402,60],[536,73,402,60,"arguments"],[536,82,402,60],[536,88,402,63],[536,90,402,65],[537,6,403,4,"_validate"],[537,15,403,13],[537,16,403,14,"taskName"],[537,24,403,22],[537,25,403,23],[538,6,404,4,"_validateRegions"],[538,22,404,20],[538,23,404,21,"regions"],[538,30,404,28],[538,31,404,29],[539,6,405,4],[539,12,405,10,"ExpoLocation"],[539,33,405,22],[539,34,405,23,"startGeofencingAsync"],[539,54,405,43],[539,55,405,44,"taskName"],[539,63,405,52],[539,65,405,54],[540,8,405,56,"regions"],[540,15,405,63],[540,17,405,56,"regions"],[541,6,405,64],[541,7,405,65],[541,8,405,66],[542,4,406,0],[542,5,406,1],[543,4,406,1],[543,11,406,1,"_startGeofencingAsync"],[543,32,406,1],[543,33,406,1,"apply"],[543,38,406,1],[543,45,406,1,"arguments"],[543,54,406,1],[544,2,406,1],[545,2,406,1],[545,11,414,22,"stopGeofencingAsync"],[545,30,414,41,"stopGeofencingAsync"],[545,31,414,41,"_x10"],[545,35,414,41],[546,4,414,41],[546,11,414,41,"_stopGeofencingAsync"],[546,31,414,41],[546,32,414,41,"apply"],[546,37,414,41],[546,44,414,41,"arguments"],[546,53,414,41],[547,2,414,41],[547,4,418,0],[548,2,419,0],[549,0,420,0],[550,0,421,0],[551,0,422,0],[552,0,423,0],[553,2,419,0],[553,11,419,0,"_stopGeofencingAsync"],[553,32,419,0],[554,4,419,0,"_stopGeofencingAsync"],[554,24,419,0],[554,31,419,0,"_asyncToGenerator2"],[554,49,419,0],[554,50,419,0,"default"],[554,57,419,0],[554,59,414,7],[554,70,414,42,"taskName"],[554,78,414,50],[554,80,414,52],[555,6,415,4,"_validate"],[555,15,415,13],[555,16,415,14,"taskName"],[555,24,415,22],[555,25,415,23],[556,6,416,4],[556,12,416,10,"ExpoLocation"],[556,33,416,22],[556,34,416,23,"stopGeofencingAsync"],[556,53,416,42],[556,54,416,43,"taskName"],[556,62,416,51],[556,63,416,52],[557,4,417,0],[557,5,417,1],[558,4,417,1],[558,11,417,1,"_stopGeofencingAsync"],[558,31,417,1],[558,32,417,1,"apply"],[558,37,417,1],[558,44,417,1,"arguments"],[558,53,417,1],[559,2,417,1],[560,2,417,1],[560,11,424,22,"hasStartedGeofencingAsync"],[560,36,424,47,"hasStartedGeofencingAsync"],[560,37,424,47,"_x11"],[560,41,424,47],[561,4,424,47],[561,11,424,47,"_hasStartedGeofencingAsync"],[561,37,424,47],[561,38,424,47,"apply"],[561,43,424,47],[561,50,424,47,"arguments"],[561,59,424,47],[562,2,424,47],[563,2,424,47],[563,11,424,47,"_hasStartedGeofencingAsync"],[563,38,424,47],[564,4,424,47,"_hasStartedGeofencingAsync"],[564,30,424,47],[564,37,424,47,"_asyncToGenerator2"],[564,55,424,47],[564,56,424,47,"default"],[564,63,424,47],[564,65,424,7],[564,76,424,48,"taskName"],[564,84,424,56],[564,86,424,58],[565,6,425,4,"_validate"],[565,15,425,13],[565,16,425,14,"taskName"],[565,24,425,22],[565,25,425,23],[566,6,426,4],[566,13,426,11,"ExpoLocation"],[566,34,426,23],[566,35,426,24,"hasStartedGeofencingAsync"],[566,60,426,49],[566,61,426,50,"taskName"],[566,69,426,58],[566,70,426,59],[567,4,427,0],[567,5,427,1],[568,4,427,1],[568,11,427,1,"_hasStartedGeofencingAsync"],[568,37,427,1],[568,38,427,1,"apply"],[568,43,427,1],[568,50,427,1,"arguments"],[568,59,427,1],[569,2,427,1],[570,0,427,1],[570,3]],"functionMap":{"names":["<global>","getProviderStatusAsync","enableNetworkProviderAsync","getCurrentPositionAsync","getLastKnownPositionAsync","watchPositionAsync","remove","getHeadingAsync","Promise$argument_0","watchHeadingAsync$argument_0","watchHeadingAsync$argument_1","watchHeadingAsync","geocodeAsync","reverseGeocodeAsync","getForegroundPermissionsAsync","requestForegroundPermissionsAsync","getBackgroundPermissionsAsync","requestBackgroundPermissionsAsync","hasServicesEnabledAsync","_validate","isBackgroundLocationAvailableAsync","startLocationUpdatesAsync","stopLocationUpdatesAsync","hasStartedLocationUpdatesAsync","_validateRegions","startGeofencingAsync","stopGeofencingAsync","hasStartedGeofencingAsync"],"mappings":"AAA;OCY;CDE;OES;CFQ;OGY;CHE;OIY;CJE;OKa;QCK;SDG;CLE;OOO;uBCC;iDCI;aDQ,EE;aFG;KDK;CPC;OWc;QLK;SKG;CXE;OYoB;CZY;OamB;CbY;OcM;CdE;OeM;CfE;OgBoB;ChBE;OiBW;CjBE;OkBuB;ClBE;AmBE;CnBc;OoBE;CpBG;OqB4B;CrBG;OsBO;CtBG;OuBO;CvBG;AwBE;CxBe;OyBsC;CzBI;O0BQ;C1BG;O2BO;C3BG"}},"type":"js/module"}]}