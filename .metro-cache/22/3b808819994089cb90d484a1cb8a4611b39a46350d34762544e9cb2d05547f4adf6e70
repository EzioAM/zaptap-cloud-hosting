{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"]}},{"name":"../developer/UIRedesignPromptService","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":27},"end":{"line":2,"column":118,"index":145}}],"key":"1vJOYZCVkewVCkFwEm2mKA9bdMM=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":146},"end":{"line":3,"column":54,"index":200}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.researchAppFeature = exports.AIResearchService = void 0;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n  var _axios = _interopRequireDefault(require(_dependencyMap[5], \"axios\"));\n  var _UIRedesignPromptService = require(_dependencyMap[6], \"../developer/UIRedesignPromptService\");\n  var _EventLogger = require(_dependencyMap[7], \"../../utils/EventLogger\");\n  var AIResearchService = exports.AIResearchService = /*#__PURE__*/function () {\n    function AIResearchService(claudeKey, openaiKey) {\n      (0, _classCallCheck2.default)(this, AIResearchService);\n      this.claudeApiKey = claudeKey || '';\n      this.openaiApiKey = openaiKey || '';\n    }\n\n    /**\n     * Query multiple AI providers for app improvement insights\n     */\n    return (0, _createClass2.default)(AIResearchService, [{\n      key: \"researchAppImprovements\",\n      value: (function () {\n        var _researchAppImprovements = (0, _asyncToGenerator2.default)(function* (query) {\n          var _claudeResult$reason, _chatgptResult$reason;\n          var results = [];\n          _EventLogger.EventLogger.debug('AIResearch', 'üîç Starting AI research with keys:', {\n            hasClaudeKey: !!this.claudeApiKey && this.claudeApiKey.length > 10,\n            hasOpenaiKey: !!this.openaiApiKey && this.openaiApiKey.length > 10,\n            claudeKeyPreview: this.claudeApiKey ? this.claudeApiKey.substring(0, 10) + '...' : 'Missing',\n            openaiKeyPreview: this.openaiApiKey ? this.openaiApiKey.substring(0, 10) + '...' : 'Missing'\n          });\n\n          // Query both AIs in parallel\n          var _yield$Promise$allSet = yield Promise.allSettled([this.queryClaudeAPI(query), this.queryChatGPTAPI(query)]),\n            _yield$Promise$allSet2 = (0, _slicedToArray2.default)(_yield$Promise$allSet, 2),\n            claudeResult = _yield$Promise$allSet2[0],\n            chatgptResult = _yield$Promise$allSet2[1];\n          _EventLogger.EventLogger.debug('AIResearch', 'ü§ñ AI API Results:', {\n            claudeStatus: claudeResult.status,\n            chatgptStatus: chatgptResult.status,\n            claudeError: claudeResult.status === 'rejected' ? (_claudeResult$reason = claudeResult.reason) == null ? void 0 : _claudeResult$reason.message : null,\n            chatgptError: chatgptResult.status === 'rejected' ? (_chatgptResult$reason = chatgptResult.reason) == null ? void 0 : _chatgptResult$reason.message : null\n          });\n          if (claudeResult.status === 'fulfilled') {\n            _EventLogger.EventLogger.debug('AIResearch', '‚úÖ Claude API succeeded');\n            results.push(claudeResult.value);\n          } else {\n            _EventLogger.EventLogger.error('AIResearch', '‚ùå Claude API failed:', claudeResult.reason);\n          }\n          if (chatgptResult.status === 'fulfilled') {\n            _EventLogger.EventLogger.debug('AIResearch', '‚úÖ ChatGPT API succeeded');\n            results.push(chatgptResult.value);\n          } else {\n            _EventLogger.EventLogger.error('AIResearch', '‚ùå ChatGPT API failed:', chatgptResult.reason);\n          }\n          _EventLogger.EventLogger.debug('AIResearch', 'üìä Final results: ${results.length} providers responded');\n          return results;\n        });\n        function researchAppImprovements(_x) {\n          return _researchAppImprovements.apply(this, arguments);\n        }\n        return researchAppImprovements;\n      }())\n    }, {\n      key: \"queryClaudeAPI\",\n      value: function () {\n        var _queryClaudeAPI = (0, _asyncToGenerator2.default)(function* (query) {\n          if (!this.claudeApiKey || this.claudeApiKey.length < 10) {\n            throw new Error('Claude API key not configured or invalid');\n          }\n          try {\n            _EventLogger.EventLogger.debug('AIResearch', 'üîÆ Calling Claude API...');\n            var response = yield _axios.default.post('https://api.anthropic.com/v1/messages', {\n              model: 'claude-3-opus-20240229',\n              max_tokens: 1024,\n              messages: [{\n                role: 'user',\n                content: this.buildResearchPrompt(query)\n              }]\n            }, {\n              headers: {\n                'x-api-key': this.claudeApiKey,\n                'anthropic-version': '2023-06-01',\n                'content-type': 'application/json'\n              }\n            });\n            _EventLogger.EventLogger.debug('AIResearch', '‚úÖ Claude API response received');\n            return this.parseAIResponse('claude', response.data.content[0].text);\n          } catch (error) {\n            var _error$response;\n            _EventLogger.EventLogger.error('AIResearch', '‚ùå Claude API error:', (error == null || (_error$response = error.response) == null ? void 0 : _error$response.data) || (error == null ? void 0 : error.message) || error);\n            throw error;\n          }\n        });\n        function queryClaudeAPI(_x2) {\n          return _queryClaudeAPI.apply(this, arguments);\n        }\n        return queryClaudeAPI;\n      }()\n    }, {\n      key: \"queryChatGPTAPI\",\n      value: function () {\n        var _queryChatGPTAPI = (0, _asyncToGenerator2.default)(function* (query) {\n          if (!this.openaiApiKey || this.openaiApiKey.length < 10) {\n            throw new Error('OpenAI API key not configured or invalid');\n          }\n          try {\n            _EventLogger.EventLogger.debug('AIResearch', 'ü§ñ Calling ChatGPT API...');\n            var response = yield _axios.default.post('https://api.openai.com/v1/chat/completions', {\n              model: 'gpt-4',\n              messages: [{\n                role: 'user',\n                content: this.buildResearchPrompt(query)\n              }],\n              temperature: 0.7,\n              max_tokens: 1024\n            }, {\n              headers: {\n                'Authorization': `Bearer ${this.openaiApiKey}`,\n                'Content-Type': 'application/json'\n              }\n            });\n            _EventLogger.EventLogger.debug('AIResearch', '‚úÖ ChatGPT API response received');\n            return this.parseAIResponse('chatgpt', response.data.choices[0].message.content);\n          } catch (error) {\n            var _error$response2;\n            _EventLogger.EventLogger.error('AIResearch', '‚ùå ChatGPT API error:', (error == null || (_error$response2 = error.response) == null ? void 0 : _error$response2.data) || (error == null ? void 0 : error.message) || error);\n            throw error;\n          }\n        });\n        function queryChatGPTAPI(_x3) {\n          return _queryChatGPTAPI.apply(this, arguments);\n        }\n        return queryChatGPTAPI;\n      }()\n    }, {\n      key: \"buildResearchPrompt\",\n      value: function buildResearchPrompt(query) {\n        var _query$specificQuesti;\n        var prompt = `Research improvements for a mobile automation app with the following context:\n    \nTopic: ${query.topic}\nContext: ${query.context}\n\nPlease provide:\n1. Key insights and best practices\n2. Specific recommendations for improvement\n3. Code examples if applicable\n4. Relevant industry standards or patterns\n\nFormat your response with clear sections for insights, recommendations, and code examples.`;\n        if ((_query$specificQuesti = query.specificQuestions) != null && _query$specificQuesti.length) {\n          prompt += '\\n\\nSpecific questions to address:\\n';\n          query.specificQuestions.forEach(function (q, i) {\n            prompt += `${i + 1}. ${q}\\n`;\n          });\n        }\n        return prompt;\n      }\n    }, {\n      key: \"parseAIResponse\",\n      value: function parseAIResponse(provider, content) {\n        // Parse the AI response into structured data\n        var insights = [];\n        var recommendations = [];\n        var codeExamples = [];\n\n        // Simple parsing logic - you can enhance this\n        var sections = content.split(/\\n\\n/);\n        var currentSection = '';\n        sections.forEach(function (section) {\n          if (section.toLowerCase().includes('insight')) {\n            currentSection = 'insights';\n          } else if (section.toLowerCase().includes('recommend')) {\n            currentSection = 'recommendations';\n          } else if (section.toLowerCase().includes('code') || section.includes('```')) {\n            currentSection = 'code';\n          }\n          if (currentSection === 'insights') {\n            insights.push(section);\n          } else if (currentSection === 'recommendations') {\n            recommendations.push(section);\n          } else if (currentSection === 'code') {\n            codeExamples.push(section);\n          }\n        });\n        return {\n          provider: provider,\n          insights: insights,\n          recommendations: recommendations,\n          codeExamples: codeExamples,\n          sources: []\n        };\n      }\n\n      /**\n       * Generate UI/UX redesign recommendations\n       */\n    }, {\n      key: \"generateUIRedesign\",\n      value: (function () {\n        var _generateUIRedesign = (0, _asyncToGenerator2.default)(function* (request) {\n          try {\n            var prompt = _UIRedesignPromptService.UIRedesignPromptService.generateRedesignPrompt(request);\n\n            // Try Claude first, then fallback to structured response if API fails\n            var aiResponse;\n            if (this.claudeApiKey) {\n              try {\n                var response = yield this.queryClaudeForUIRedesign(prompt);\n                aiResponse = response;\n              } catch (error) {\n                _EventLogger.EventLogger.warn('AIResearch', 'Claude API failed, using structured fallback:', error);\n                aiResponse = this.generateFallbackUIResponse(request);\n              }\n            } else {\n              aiResponse = this.generateFallbackUIResponse(request);\n            }\n            return _UIRedesignPromptService.UIRedesignPromptService.parseRedesignResponse(aiResponse);\n          } catch (error) {\n            _EventLogger.EventLogger.error('AIResearch', 'UI redesign generation failed:', error);\n            // If parsing fails, return a basic fallback response\n            return this.getFallbackUIRedesignResponse(request);\n          }\n        });\n        function generateUIRedesign(_x4) {\n          return _generateUIRedesign.apply(this, arguments);\n        }\n        return generateUIRedesign;\n      }()\n      /**\n       * Generate a basic fallback response when everything else fails\n       */\n      )\n    }, {\n      key: \"getFallbackUIRedesignResponse\",\n      value: function getFallbackUIRedesignResponse(request) {\n        return {\n          designConcepts: {\n            modernizations: ['Update to Material Design 3 color system', 'Implement dynamic color theming', 'Add subtle animations and transitions', 'Improve visual hierarchy with better typography'],\n            layoutImprovements: ['Optimize content density for mobile', 'Implement consistent spacing system', 'Add proper visual grouping', 'Improve touch target sizes'],\n            interactionEnhancements: ['Add haptic feedback for key actions', 'Implement smooth page transitions', 'Add loading state animations', 'Improve gesture recognition'],\n            accessibilityImprovements: ['Ensure proper color contrast ratios', 'Add semantic labels for screen readers', 'Implement focus management', 'Add alternative text for images']\n          },\n          specificRecommendations: {\n            components: ['Upgrade card components with new elevation system', 'Implement consistent button styles', 'Add progress indicators for long operations', 'Create reusable input components'],\n            styling: ['Adopt consistent color palette', 'Implement design token system', 'Add dark mode support', 'Create responsive spacing scale'],\n            animations: ['Add page transition animations', 'Implement loading state micro-interactions', 'Create success/error feedback animations', 'Add smooth scroll behaviors'],\n            userFlow: ['Simplify navigation paths', 'Reduce steps for common tasks', 'Add contextual help and guidance', 'Implement smart defaults']\n          },\n          implementationGuide: {\n            priority: 'high',\n            steps: ['Create new component library with updated styles', 'Implement design token system', 'Update existing screens with new components', 'Add animations and transitions', 'Test accessibility compliance', 'Gather user feedback and iterate'],\n            codeExamples: ['React Native Paper component upgrades', 'Custom animation implementations', 'Accessibility helper functions', 'Theme configuration examples'],\n            testingApproach: ['Visual regression testing', 'Accessibility audit', 'Performance impact analysis', 'User acceptance testing']\n          },\n          mockupDescriptions: [{\n            name: 'Enhanced Current Design',\n            description: 'Modernized version of existing layout with improved styling and micro-interactions',\n            keyFeatures: ['Updated color scheme with better contrast', 'Improved typography hierarchy', 'Enhanced card designs with subtle shadows', 'Better spacing and visual rhythm'],\n            colorScheme: ['#6200EE', '#FFFFFF', '#F5F5F5', '#03DAC6'],\n            layoutChanges: ['Refined card spacing and padding', 'Improved header layout', 'Better button sizing and placement'],\n            userBenefits: ['Cleaner, more modern appearance', 'Better readability and focus', 'Reduced visual clutter']\n          }, {\n            name: 'Reimagined Layout',\n            description: 'Complete restructure with new information architecture and improved user flow',\n            keyFeatures: ['Card-based modular design', 'Improved navigation patterns', 'Better content organization', 'Streamlined user actions'],\n            colorScheme: ['#1976D2', '#FFFFFF', '#F8F9FA', '#4CAF50'],\n            layoutChanges: ['Horizontal scroll sections', 'Floating action elements', 'Grouped content areas'],\n            userBenefits: ['Faster task completion', 'Intuitive content discovery', 'Reduced cognitive load']\n          }, {\n            name: 'Interaction-Focused Design',\n            description: 'Emphasis on smooth animations, gestures, and responsive feedback',\n            keyFeatures: ['Gesture-based navigation', 'Animated state transitions', 'Haptic feedback integration', 'Progressive disclosure patterns'],\n            colorScheme: ['#9C27B0', '#FFFFFF', '#FAFAFA', '#FF9800'],\n            layoutChanges: ['Swipe-able card interfaces', 'Pull-to-refresh enhancements', 'Dynamic content loading'],\n            userBenefits: ['More engaging interactions', 'Faster navigation', 'Better feedback and confirmation']\n          }]\n        };\n      }\n    }, {\n      key: \"queryClaudeForUIRedesign\",\n      value: function () {\n        var _queryClaudeForUIRedesign = (0, _asyncToGenerator2.default)(function* (prompt) {\n          var response = yield _axios.default.post('https://api.anthropic.com/v1/messages', {\n            model: 'claude-3-sonnet-20240229',\n            max_tokens: 2048,\n            messages: [{\n              role: 'user',\n              content: prompt\n            }]\n          }, {\n            headers: {\n              'x-api-key': this.claudeApiKey,\n              'anthropic-version': '2023-06-01',\n              'content-type': 'application/json'\n            }\n          });\n          return response.data.content[0].text;\n        });\n        function queryClaudeForUIRedesign(_x5) {\n          return _queryClaudeForUIRedesign.apply(this, arguments);\n        }\n        return queryClaudeForUIRedesign;\n      }()\n    }, {\n      key: \"generateFallbackUIResponse\",\n      value: function generateFallbackUIResponse(request) {\n        var screenName = request.screenName,\n          designGoals = request.designGoals;\n        return `\n# UI/UX Redesign Analysis for ${screenName}\n\n## Design Modernizations\nBased on the design goals (${designGoals.join(', ')}), here are key modernization opportunities:\n\n- **Material Design 3 Implementation**: Upgrade to the latest Material Design system with dynamic color theming\n- **Improved Visual Hierarchy**: Better typography scale and information architecture\n- **Enhanced Spacing System**: Consistent 8pt grid system for better visual rhythm\n- **Micro-interactions**: Subtle animations that provide feedback and guide user attention\n\n## Layout Improvements\n- **Card-based Design**: Organize content in digestible cards with proper elevation\n- **Improved Content Density**: Better balance between information and whitespace\n- **Mobile-first Approach**: Optimize touch targets and gesture interactions\n- **Progressive Disclosure**: Show relevant information when needed to reduce cognitive load\n\n## Interaction Enhancements\n- **Gesture Support**: Implement swipe actions and pull-to-refresh where appropriate\n- **Loading States**: Add skeleton screens and progress indicators\n- **Haptic Feedback**: Provide tactile confirmation for key actions\n- **Smooth Transitions**: Page and component transitions that feel natural\n\n## Implementation Recommendations\n- **Component Library**: Create reusable components following design system\n- **Theme System**: Implement centralized theming with light/dark mode support\n- **Accessibility**: Ensure WCAG compliance with proper contrast and screen reader support\n- **Performance**: Optimize animations and transitions for smooth 60fps experience\n\nThis analysis provides a foundation for creating three distinct mockup approaches that address different aspects of the user experience.\n    `;\n      }\n\n      /**\n       * Compare insights from multiple AI providers\n       */\n    }, {\n      key: \"compareAIInsights\",\n      value: (function () {\n        var _compareAIInsights = (0, _asyncToGenerator2.default)(function* (topic) {\n          var query = {\n            topic: topic,\n            context: 'Mobile automation app using React Native, NFC, and Supabase'\n          };\n          var results = yield this.researchAppImprovements(query);\n          var claudeResult = results.find(function (r) {\n            return r.provider === 'claude';\n          });\n          var chatgptResult = results.find(function (r) {\n            return r.provider === 'chatgpt';\n          });\n\n          // Compare and categorize insights\n          var consensus = [];\n          var uniqueClaudeInsights = [];\n          var uniqueChatGPTInsights = [];\n          var conflictingViews = [];\n\n          // Implementation of comparison logic would go here\n          // This is a simplified example\n\n          return {\n            consensus: consensus,\n            uniqueClaudeInsights: uniqueClaudeInsights,\n            uniqueChatGPTInsights: uniqueChatGPTInsights,\n            conflictingViews: conflictingViews\n          };\n        });\n        function compareAIInsights(_x6) {\n          return _compareAIInsights.apply(this, arguments);\n        }\n        return compareAIInsights;\n      }())\n    }]);\n  }(); // Usage example:\n  var researchAppFeature = exports.researchAppFeature = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2.default)(function* (feature) {\n      var researcher = new AIResearchService(process.env.CLAUDE_API_KEY, process.env.OPENAI_API_KEY);\n      var results = yield researcher.researchAppImprovements({\n        topic: feature,\n        context: 'Zaptap mobile automation app',\n        specificQuestions: ['What are the best practices for this feature?', 'How can we improve user experience?', 'What security considerations should we address?']\n      });\n      return results;\n    });\n    return function researchAppFeature(_x7) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});","lineCount":404,"map":[[11,2,1,0],[11,6,1,0,"_axios"],[11,12,1,0],[11,15,1,0,"_interopRequireDefault"],[11,37,1,0],[11,38,1,0,"require"],[11,45,1,0],[11,46,1,0,"_dependencyMap"],[11,60,1,0],[12,2,2,0],[12,6,2,0,"_UIRedesignPromptService"],[12,30,2,0],[12,33,2,0,"require"],[12,40,2,0],[12,41,2,0,"_dependencyMap"],[12,55,2,0],[13,2,3,0],[13,6,3,0,"_EventLogger"],[13,18,3,0],[13,21,3,0,"require"],[13,28,3,0],[13,29,3,0,"_dependencyMap"],[13,43,3,0],[14,2,3,54],[14,6,19,13,"AIResearchService"],[14,23,19,30],[14,26,19,30,"exports"],[14,33,19,30],[14,34,19,30,"AIResearchService"],[14,51,19,30],[15,4,23,2],[15,13,23,2,"AIResearchService"],[15,31,23,14,"claudeKey"],[15,40,23,32],[15,42,23,34,"openaiKey"],[15,51,23,52],[15,53,23,54],[16,6,23,54],[16,10,23,54,"_classCallCheck2"],[16,26,23,54],[16,27,23,54,"default"],[16,34,23,54],[16,42,23,54,"AIResearchService"],[16,59,23,54],[17,6,24,4],[17,10,24,8],[17,11,24,9,"claudeApiKey"],[17,23,24,21],[17,26,24,24,"claudeKey"],[17,35,24,33],[17,39,24,37],[17,41,24,39],[18,6,25,4],[18,10,25,8],[18,11,25,9,"openaiApiKey"],[18,23,25,21],[18,26,25,24,"openaiKey"],[18,35,25,33],[18,39,25,37],[18,41,25,39],[19,4,26,2],[21,4,28,2],[22,0,29,0],[23,0,30,0],[24,4,28,2],[24,15,28,2,"_createClass2"],[24,28,28,2],[24,29,28,2,"default"],[24,36,28,2],[24,38,28,2,"AIResearchService"],[24,55,28,2],[25,6,28,2,"key"],[25,9,28,2],[26,6,28,2,"value"],[26,11,28,2],[27,8,28,2],[27,12,28,2,"_researchAppImprovements"],[27,36,28,2],[27,43,28,2,"_asyncToGenerator2"],[27,61,28,2],[27,62,28,2,"default"],[27,69,28,2],[27,71,31,2],[27,82,31,32,"query"],[27,87,31,52],[27,89,31,81],[28,10,31,81],[28,14,31,81,"_claudeResult$reason"],[28,34,31,81],[28,36,31,81,"_chatgptResult$reason"],[28,57,31,81],[29,10,32,4],[29,14,32,10,"results"],[29,21,32,35],[29,24,32,38],[29,26,32,40],[30,10,34,4,"EventLogger"],[30,34,34,15],[30,35,34,16,"debug"],[30,40,34,21],[30,41,34,22],[30,53,34,34],[30,55,34,36],[30,91,34,72],[30,93,34,74],[31,12,35,6,"hasClaudeKey"],[31,24,35,18],[31,26,35,20],[31,27,35,21],[31,28,35,22],[31,32,35,26],[31,33,35,27,"claudeApiKey"],[31,45,35,39],[31,49,35,43],[31,53,35,47],[31,54,35,48,"claudeApiKey"],[31,66,35,60],[31,67,35,61,"length"],[31,73,35,67],[31,76,35,70],[31,78,35,72],[32,12,36,6,"hasOpenaiKey"],[32,24,36,18],[32,26,36,20],[32,27,36,21],[32,28,36,22],[32,32,36,26],[32,33,36,27,"openaiApiKey"],[32,45,36,39],[32,49,36,43],[32,53,36,47],[32,54,36,48,"openaiApiKey"],[32,66,36,60],[32,67,36,61,"length"],[32,73,36,67],[32,76,36,70],[32,78,36,72],[33,12,37,6,"claudeKeyPreview"],[33,28,37,22],[33,30,37,24],[33,34,37,28],[33,35,37,29,"claudeApiKey"],[33,47,37,41],[33,50,37,44],[33,54,37,48],[33,55,37,49,"claudeApiKey"],[33,67,37,61],[33,68,37,62,"substring"],[33,77,37,71],[33,78,37,72],[33,79,37,73],[33,81,37,75],[33,83,37,77],[33,84,37,78],[33,87,37,81],[33,92,37,86],[33,95,37,89],[33,104,37,98],[34,12,38,6,"openaiKeyPreview"],[34,28,38,22],[34,30,38,24],[34,34,38,28],[34,35,38,29,"openaiApiKey"],[34,47,38,41],[34,50,38,44],[34,54,38,48],[34,55,38,49,"openaiApiKey"],[34,67,38,61],[34,68,38,62,"substring"],[34,77,38,71],[34,78,38,72],[34,79,38,73],[34,81,38,75],[34,83,38,77],[34,84,38,78],[34,87,38,81],[34,92,38,86],[34,95,38,89],[35,10,39,4],[35,11,39,5],[35,12,39,6],[37,10,41,4],[38,10,42,4],[38,14,42,4,"_yield$Promise$allSet"],[38,35,42,4],[38,44,42,48,"Promise"],[38,51,42,55],[38,52,42,56,"allSettled"],[38,62,42,66],[38,63,42,67],[38,64,43,6],[38,68,43,10],[38,69,43,11,"queryClaudeAPI"],[38,83,43,25],[38,84,43,26,"query"],[38,89,43,31],[38,90,43,32],[38,92,44,6],[38,96,44,10],[38,97,44,11,"queryChatGPTAPI"],[38,112,44,26],[38,113,44,27,"query"],[38,118,44,32],[38,119,44,33],[38,120,45,5],[38,121,45,6],[39,12,45,6,"_yield$Promise$allSet2"],[39,34,45,6],[39,41,45,6,"_slicedToArray2"],[39,56,45,6],[39,57,45,6,"default"],[39,64,45,6],[39,66,45,6,"_yield$Promise$allSet"],[39,87,45,6],[40,12,42,11,"claudeResult"],[40,24,42,23],[40,27,42,23,"_yield$Promise$allSet2"],[40,49,42,23],[41,12,42,25,"chatgptResult"],[41,25,42,38],[41,28,42,38,"_yield$Promise$allSet2"],[41,50,42,38],[42,10,47,4,"EventLogger"],[42,34,47,15],[42,35,47,16,"debug"],[42,40,47,21],[42,41,47,22],[42,53,47,34],[42,55,47,36],[42,75,47,56],[42,77,47,58],[43,12,48,6,"claudeStatus"],[43,24,48,18],[43,26,48,20,"claudeResult"],[43,38,48,32],[43,39,48,33,"status"],[43,45,48,39],[44,12,49,6,"chatgptStatus"],[44,25,49,19],[44,27,49,21,"chatgptResult"],[44,40,49,34],[44,41,49,35,"status"],[44,47,49,41],[45,12,50,6,"claudeError"],[45,23,50,17],[45,25,50,19,"claudeResult"],[45,37,50,31],[45,38,50,32,"status"],[45,44,50,38],[45,49,50,43],[45,59,50,53],[45,63,50,53,"_claudeResult$reason"],[45,83,50,53],[45,86,50,56,"claudeResult"],[45,98,50,68],[45,99,50,69,"reason"],[45,105,50,75],[45,126,50,56,"_claudeResult$reason"],[45,146,50,56],[45,147,50,77,"message"],[45,154,50,84],[45,157,50,87],[45,161,50,91],[46,12,51,6,"chatgptError"],[46,24,51,18],[46,26,51,20,"chatgptResult"],[46,39,51,33],[46,40,51,34,"status"],[46,46,51,40],[46,51,51,45],[46,61,51,55],[46,65,51,55,"_chatgptResult$reason"],[46,86,51,55],[46,89,51,58,"chatgptResult"],[46,102,51,71],[46,103,51,72,"reason"],[46,109,51,78],[46,130,51,58,"_chatgptResult$reason"],[46,151,51,58],[46,152,51,80,"message"],[46,159,51,87],[46,162,51,90],[47,10,52,4],[47,11,52,5],[47,12,52,6],[48,10,54,4],[48,14,54,8,"claudeResult"],[48,26,54,20],[48,27,54,21,"status"],[48,33,54,27],[48,38,54,32],[48,49,54,43],[48,51,54,45],[49,12,55,6,"EventLogger"],[49,36,55,17],[49,37,55,18,"debug"],[49,42,55,23],[49,43,55,24],[49,55,55,36],[49,57,55,38],[49,81,55,62],[49,82,55,63],[50,12,56,6,"results"],[50,19,56,13],[50,20,56,14,"push"],[50,24,56,18],[50,25,56,19,"claudeResult"],[50,37,56,31],[50,38,56,32,"value"],[50,43,56,37],[50,44,56,38],[51,10,57,4],[51,11,57,5],[51,17,57,11],[52,12,58,6,"EventLogger"],[52,36,58,17],[52,37,58,18,"error"],[52,42,58,23],[52,43,58,24],[52,55,58,36],[52,57,58,38],[52,79,58,60],[52,81,58,62,"claudeResult"],[52,93,58,74],[52,94,58,75,"reason"],[52,100,58,90],[52,101,58,91],[53,10,59,4],[54,10,61,4],[54,14,61,8,"chatgptResult"],[54,27,61,21],[54,28,61,22,"status"],[54,34,61,28],[54,39,61,33],[54,50,61,44],[54,52,61,46],[55,12,62,6,"EventLogger"],[55,36,62,17],[55,37,62,18,"debug"],[55,42,62,23],[55,43,62,24],[55,55,62,36],[55,57,62,38],[55,82,62,63],[55,83,62,64],[56,12,63,6,"results"],[56,19,63,13],[56,20,63,14,"push"],[56,24,63,18],[56,25,63,19,"chatgptResult"],[56,38,63,32],[56,39,63,33,"value"],[56,44,63,38],[56,45,63,39],[57,10,64,4],[57,11,64,5],[57,17,64,11],[58,12,65,6,"EventLogger"],[58,36,65,17],[58,37,65,18,"error"],[58,42,65,23],[58,43,65,24],[58,55,65,36],[58,57,65,38],[58,80,65,61],[58,82,65,63,"chatgptResult"],[58,95,65,76],[58,96,65,77,"reason"],[58,102,65,92],[58,103,65,93],[59,10,66,4],[60,10,68,4,"EventLogger"],[60,34,68,15],[60,35,68,16,"debug"],[60,40,68,21],[60,41,68,22],[60,53,68,34],[60,55,68,36],[60,112,68,93],[60,113,68,94],[61,10,69,4],[61,17,69,11,"results"],[61,24,69,18],[62,8,70,2],[62,9,70,3],[63,8,70,3],[63,17,31,8,"researchAppImprovements"],[63,40,31,31,"researchAppImprovements"],[63,41,31,31,"_x"],[63,43,31,31],[64,10,31,31],[64,17,31,31,"_researchAppImprovements"],[64,41,31,31],[64,42,31,31,"apply"],[64,47,31,31],[64,54,31,31,"arguments"],[64,63,31,31],[65,8,31,31],[66,8,31,31],[66,15,31,8,"researchAppImprovements"],[66,38,31,31],[67,6,31,31],[68,4,31,31],[69,6,31,31,"key"],[69,9,31,31],[70,6,31,31,"value"],[70,11,31,31],[71,8,31,31],[71,12,31,31,"_queryClaudeAPI"],[71,27,31,31],[71,34,31,31,"_asyncToGenerator2"],[71,52,31,31],[71,53,31,31,"default"],[71,60,31,31],[71,62,72,2],[71,73,72,31,"query"],[71,78,72,51],[71,80,72,78],[72,10,73,4],[72,14,73,8],[72,15,73,9],[72,19,73,13],[72,20,73,14,"claudeApiKey"],[72,32,73,26],[72,36,73,30],[72,40,73,34],[72,41,73,35,"claudeApiKey"],[72,53,73,47],[72,54,73,48,"length"],[72,60,73,54],[72,63,73,57],[72,65,73,59],[72,67,73,61],[73,12,74,6],[73,18,74,12],[73,22,74,16,"Error"],[73,27,74,21],[73,28,74,22],[73,70,74,64],[73,71,74,65],[74,10,75,4],[75,10,77,4],[75,14,77,8],[76,12,78,6,"EventLogger"],[76,36,78,17],[76,37,78,18,"debug"],[76,42,78,23],[76,43,78,24],[76,55,78,36],[76,57,78,38],[76,83,78,64],[76,84,78,65],[77,12,79,6],[77,16,79,12,"response"],[77,24,79,20],[77,33,79,29,"axios"],[77,47,79,34],[77,48,79,35,"post"],[77,52,79,39],[77,53,80,8],[77,92,80,47],[77,94,81,8],[78,14,82,10,"model"],[78,19,82,15],[78,21,82,17],[78,45,82,41],[79,14,83,10,"max_tokens"],[79,24,83,20],[79,26,83,22],[79,30,83,26],[80,14,84,10,"messages"],[80,22,84,18],[80,24,84,20],[80,25,84,21],[81,16,85,12,"role"],[81,20,85,16],[81,22,85,18],[81,28,85,24],[82,16,86,12,"content"],[82,23,86,19],[82,25,86,21],[82,29,86,25],[82,30,86,26,"buildResearchPrompt"],[82,49,86,45],[82,50,86,46,"query"],[82,55,86,51],[83,14,87,10],[83,15,87,11],[84,12,88,8],[84,13,88,9],[84,15,89,8],[85,14,90,10,"headers"],[85,21,90,17],[85,23,90,19],[86,16,91,12],[86,27,91,23],[86,29,91,25],[86,33,91,29],[86,34,91,30,"claudeApiKey"],[86,46,91,42],[87,16,92,12],[87,35,92,31],[87,37,92,33],[87,49,92,45],[88,16,93,12],[88,30,93,26],[88,32,93,28],[89,14,94,10],[90,12,95,8],[90,13,96,6],[90,14,96,7],[91,12,98,6,"EventLogger"],[91,36,98,17],[91,37,98,18,"debug"],[91,42,98,23],[91,43,98,24],[91,55,98,36],[91,57,98,38],[91,89,98,70],[91,90,98,71],[92,12,99,6],[92,19,99,13],[92,23,99,17],[92,24,99,18,"parseAIResponse"],[92,39,99,33],[92,40,99,34],[92,48,99,42],[92,50,99,44,"response"],[92,58,99,52],[92,59,99,53,"data"],[92,63,99,57],[92,64,99,58,"content"],[92,71,99,65],[92,72,99,66],[92,73,99,67],[92,74,99,68],[92,75,99,69,"text"],[92,79,99,73],[92,80,99,74],[93,10,100,4],[93,11,100,5],[93,12,100,6],[93,19,100,13,"error"],[93,24,100,18],[93,26,100,20],[94,12,100,20],[94,16,100,20,"_error$response"],[94,31,100,20],[95,12,101,6,"EventLogger"],[95,36,101,17],[95,37,101,18,"error"],[95,42,101,23],[95,43,101,24],[95,55,101,36],[95,57,101,38],[95,78,101,59],[95,80,101,61],[95,81,101,61,"error"],[95,86,101,66],[95,99,101,66,"_error$response"],[95,114,101,66],[95,117,101,61,"error"],[95,122,101,66],[95,123,101,68,"response"],[95,131,101,76],[95,152,101,61,"_error$response"],[95,167,101,61],[95,168,101,78,"data"],[95,172,101,82],[95,178,101,86,"error"],[95,183,101,91],[95,203,101,86,"error"],[95,208,101,91],[95,209,101,93,"message"],[95,216,101,100],[95,221,101,104,"error"],[95,226,101,118],[95,227,101,119],[96,12,102,6],[96,18,102,12,"error"],[96,23,102,17],[97,10,103,4],[98,8,104,2],[98,9,104,3],[99,8,104,3],[99,17,72,16,"queryClaudeAPI"],[99,31,72,30,"queryClaudeAPI"],[99,32,72,30,"_x2"],[99,35,72,30],[100,10,72,30],[100,17,72,30,"_queryClaudeAPI"],[100,32,72,30],[100,33,72,30,"apply"],[100,38,72,30],[100,45,72,30,"arguments"],[100,54,72,30],[101,8,72,30],[102,8,72,30],[102,15,72,16,"queryClaudeAPI"],[102,29,72,30],[103,6,72,30],[104,4,72,30],[105,6,72,30,"key"],[105,9,72,30],[106,6,72,30,"value"],[106,11,72,30],[107,8,72,30],[107,12,72,30,"_queryChatGPTAPI"],[107,28,72,30],[107,35,72,30,"_asyncToGenerator2"],[107,53,72,30],[107,54,72,30,"default"],[107,61,72,30],[107,63,106,2],[107,74,106,32,"query"],[107,79,106,52],[107,81,106,79],[108,10,107,4],[108,14,107,8],[108,15,107,9],[108,19,107,13],[108,20,107,14,"openaiApiKey"],[108,32,107,26],[108,36,107,30],[108,40,107,34],[108,41,107,35,"openaiApiKey"],[108,53,107,47],[108,54,107,48,"length"],[108,60,107,54],[108,63,107,57],[108,65,107,59],[108,67,107,61],[109,12,108,6],[109,18,108,12],[109,22,108,16,"Error"],[109,27,108,21],[109,28,108,22],[109,70,108,64],[109,71,108,65],[110,10,109,4],[111,10,111,4],[111,14,111,8],[112,12,112,6,"EventLogger"],[112,36,112,17],[112,37,112,18,"debug"],[112,42,112,23],[112,43,112,24],[112,55,112,36],[112,57,112,38],[112,84,112,65],[112,85,112,66],[113,12,113,6],[113,16,113,12,"response"],[113,24,113,20],[113,33,113,29,"axios"],[113,47,113,34],[113,48,113,35,"post"],[113,52,113,39],[113,53,114,8],[113,97,114,52],[113,99,115,8],[114,14,116,10,"model"],[114,19,116,15],[114,21,116,17],[114,28,116,24],[115,14,117,10,"messages"],[115,22,117,18],[115,24,117,20],[115,25,117,21],[116,16,118,12,"role"],[116,20,118,16],[116,22,118,18],[116,28,118,24],[117,16,119,12,"content"],[117,23,119,19],[117,25,119,21],[117,29,119,25],[117,30,119,26,"buildResearchPrompt"],[117,49,119,45],[117,50,119,46,"query"],[117,55,119,51],[118,14,120,10],[118,15,120,11],[118,16,120,12],[119,14,121,10,"temperature"],[119,25,121,21],[119,27,121,23],[119,30,121,26],[120,14,122,10,"max_tokens"],[120,24,122,20],[120,26,122,22],[121,12,123,8],[121,13,123,9],[121,15,124,8],[122,14,125,10,"headers"],[122,21,125,17],[122,23,125,19],[123,16,126,12],[123,31,126,27],[123,33,126,29],[123,43,126,39],[123,47,126,43],[123,48,126,44,"openaiApiKey"],[123,60,126,56],[123,62,126,58],[124,16,127,12],[124,30,127,26],[124,32,127,28],[125,14,128,10],[126,12,129,8],[126,13,130,6],[126,14,130,7],[127,12,132,6,"EventLogger"],[127,36,132,17],[127,37,132,18,"debug"],[127,42,132,23],[127,43,132,24],[127,55,132,36],[127,57,132,38],[127,90,132,71],[127,91,132,72],[128,12,133,6],[128,19,133,13],[128,23,133,17],[128,24,133,18,"parseAIResponse"],[128,39,133,33],[128,40,133,34],[128,49,133,43],[128,51,133,45,"response"],[128,59,133,53],[128,60,133,54,"data"],[128,64,133,58],[128,65,133,59,"choices"],[128,72,133,66],[128,73,133,67],[128,74,133,68],[128,75,133,69],[128,76,133,70,"message"],[128,83,133,77],[128,84,133,78,"content"],[128,91,133,85],[128,92,133,86],[129,10,134,4],[129,11,134,5],[129,12,134,6],[129,19,134,13,"error"],[129,24,134,18],[129,26,134,20],[130,12,134,20],[130,16,134,20,"_error$response2"],[130,32,134,20],[131,12,135,6,"EventLogger"],[131,36,135,17],[131,37,135,18,"error"],[131,42,135,23],[131,43,135,24],[131,55,135,36],[131,57,135,38],[131,79,135,60],[131,81,135,62],[131,82,135,62,"error"],[131,87,135,67],[131,100,135,67,"_error$response2"],[131,116,135,67],[131,119,135,62,"error"],[131,124,135,67],[131,125,135,69,"response"],[131,133,135,77],[131,154,135,62,"_error$response2"],[131,170,135,62],[131,171,135,79,"data"],[131,175,135,83],[131,181,135,87,"error"],[131,186,135,92],[131,206,135,87,"error"],[131,211,135,92],[131,212,135,94,"message"],[131,219,135,101],[131,224,135,105,"error"],[131,229,135,119],[131,230,135,120],[132,12,136,6],[132,18,136,12,"error"],[132,23,136,17],[133,10,137,4],[134,8,138,2],[134,9,138,3],[135,8,138,3],[135,17,106,16,"queryChatGPTAPI"],[135,32,106,31,"queryChatGPTAPI"],[135,33,106,31,"_x3"],[135,36,106,31],[136,10,106,31],[136,17,106,31,"_queryChatGPTAPI"],[136,33,106,31],[136,34,106,31,"apply"],[136,39,106,31],[136,46,106,31,"arguments"],[136,55,106,31],[137,8,106,31],[138,8,106,31],[138,15,106,16,"queryChatGPTAPI"],[138,30,106,31],[139,6,106,31],[140,4,106,31],[141,6,106,31,"key"],[141,9,106,31],[142,6,106,31,"value"],[142,11,106,31],[142,13,140,2],[142,22,140,10,"buildResearchPrompt"],[142,41,140,29,"buildResearchPrompt"],[142,42,140,30,"query"],[142,47,140,50],[142,49,140,60],[143,8,140,60],[143,12,140,60,"_query$specificQuesti"],[143,33,140,60],[144,8,141,4],[144,12,141,8,"prompt"],[144,18,141,14],[144,21,141,17],[145,0,142,0],[146,0,143,0],[146,9,143,9,"query"],[146,14,143,14],[146,15,143,15,"topic"],[146,20,143,20],[147,0,144,0],[147,11,144,11,"query"],[147,16,144,16],[147,17,144,17,"context"],[147,24,144,24],[148,0,145,0],[149,0,146,0],[150,0,147,0],[151,0,148,0],[152,0,149,0],[153,0,150,0],[154,0,151,0],[155,0,152,0],[155,91,152,91],[156,8,154,4],[156,13,154,4,"_query$specificQuesti"],[156,34,154,4],[156,37,154,8,"query"],[156,42,154,13],[156,43,154,14,"specificQuestions"],[156,60,154,31],[156,73,154,8,"_query$specificQuesti"],[156,94,154,8],[156,95,154,33,"length"],[156,101,154,39],[156,103,154,41],[157,10,155,6,"prompt"],[157,16,155,12],[157,20,155,16],[157,58,155,54],[158,10,156,6,"query"],[158,15,156,11],[158,16,156,12,"specificQuestions"],[158,33,156,29],[158,34,156,30,"forEach"],[158,41,156,37],[158,42,156,38],[158,52,156,39,"q"],[158,53,156,40],[158,55,156,42,"i"],[158,56,156,43],[158,58,156,48],[159,12,157,8,"prompt"],[159,18,157,14],[159,22,157,18],[159,25,157,21,"i"],[159,26,157,22],[159,29,157,25],[159,30,157,26],[159,35,157,31,"q"],[159,36,157,32],[159,40,157,36],[160,10,158,6],[160,11,158,7],[160,12,158,8],[161,8,159,4],[162,8,161,4],[162,15,161,11,"prompt"],[162,21,161,17],[163,6,162,2],[164,4,162,3],[165,6,162,3,"key"],[165,9,162,3],[166,6,162,3,"value"],[166,11,162,3],[166,13,164,2],[166,22,164,10,"parseAIResponse"],[166,37,164,25,"parseAIResponse"],[166,38,164,26,"provider"],[166,46,164,56],[166,48,164,58,"content"],[166,55,164,73],[166,57,164,91],[167,8,165,4],[168,8,166,4],[168,12,166,10,"insights"],[168,20,166,28],[168,23,166,31],[168,25,166,33],[169,8,167,4],[169,12,167,10,"recommendations"],[169,27,167,35],[169,30,167,38],[169,32,167,40],[170,8,168,4],[170,12,168,10,"codeExamples"],[170,24,168,32],[170,27,168,35],[170,29,168,37],[172,8,170,4],[173,8,171,4],[173,12,171,10,"sections"],[173,20,171,18],[173,23,171,21,"content"],[173,30,171,28],[173,31,171,29,"split"],[173,36,171,34],[173,37,171,35],[173,43,171,41],[173,44,171,42],[174,8,172,4],[174,12,172,8,"currentSection"],[174,26,172,22],[174,29,172,25],[174,31,172,27],[175,8,174,4,"sections"],[175,16,174,12],[175,17,174,13,"forEach"],[175,24,174,20],[175,25,174,21],[175,35,174,21,"section"],[175,42,174,28],[175,44,174,32],[176,10,175,6],[176,14,175,10,"section"],[176,21,175,17],[176,22,175,18,"toLowerCase"],[176,33,175,29],[176,34,175,30],[176,35,175,31],[176,36,175,32,"includes"],[176,44,175,40],[176,45,175,41],[176,54,175,50],[176,55,175,51],[176,57,175,53],[177,12,176,8,"currentSection"],[177,26,176,22],[177,29,176,25],[177,39,176,35],[178,10,177,6],[178,11,177,7],[178,17,177,13],[178,21,177,17,"section"],[178,28,177,24],[178,29,177,25,"toLowerCase"],[178,40,177,36],[178,41,177,37],[178,42,177,38],[178,43,177,39,"includes"],[178,51,177,47],[178,52,177,48],[178,63,177,59],[178,64,177,60],[178,66,177,62],[179,12,178,8,"currentSection"],[179,26,178,22],[179,29,178,25],[179,46,178,42],[180,10,179,6],[180,11,179,7],[180,17,179,13],[180,21,179,17,"section"],[180,28,179,24],[180,29,179,25,"toLowerCase"],[180,40,179,36],[180,41,179,37],[180,42,179,38],[180,43,179,39,"includes"],[180,51,179,47],[180,52,179,48],[180,58,179,54],[180,59,179,55],[180,63,179,59,"section"],[180,70,179,66],[180,71,179,67,"includes"],[180,79,179,75],[180,80,179,76],[180,85,179,81],[180,86,179,82],[180,88,179,84],[181,12,180,8,"currentSection"],[181,26,180,22],[181,29,180,25],[181,35,180,31],[182,10,181,6],[183,10,183,6],[183,14,183,10,"currentSection"],[183,28,183,24],[183,33,183,29],[183,43,183,39],[183,45,183,41],[184,12,184,8,"insights"],[184,20,184,16],[184,21,184,17,"push"],[184,25,184,21],[184,26,184,22,"section"],[184,33,184,29],[184,34,184,30],[185,10,185,6],[185,11,185,7],[185,17,185,13],[185,21,185,17,"currentSection"],[185,35,185,31],[185,40,185,36],[185,57,185,53],[185,59,185,55],[186,12,186,8,"recommendations"],[186,27,186,23],[186,28,186,24,"push"],[186,32,186,28],[186,33,186,29,"section"],[186,40,186,36],[186,41,186,37],[187,10,187,6],[187,11,187,7],[187,17,187,13],[187,21,187,17,"currentSection"],[187,35,187,31],[187,40,187,36],[187,46,187,42],[187,48,187,44],[188,12,188,8,"codeExamples"],[188,24,188,20],[188,25,188,21,"push"],[188,29,188,25],[188,30,188,26,"section"],[188,37,188,33],[188,38,188,34],[189,10,189,6],[190,8,190,4],[190,9,190,5],[190,10,190,6],[191,8,192,4],[191,15,192,11],[192,10,193,6,"provider"],[192,18,193,14],[192,20,193,6,"provider"],[192,28,193,14],[193,10,194,6,"insights"],[193,18,194,14],[193,20,194,6,"insights"],[193,28,194,14],[194,10,195,6,"recommendations"],[194,25,195,21],[194,27,195,6,"recommendations"],[194,42,195,21],[195,10,196,6,"codeExamples"],[195,22,196,18],[195,24,196,6,"codeExamples"],[195,36,196,18],[196,10,197,6,"sources"],[196,17,197,13],[196,19,197,15],[197,8,198,4],[197,9,198,5],[198,6,199,2],[200,6,201,2],[201,0,202,0],[202,0,203,0],[203,4,201,2],[204,6,201,2,"key"],[204,9,201,2],[205,6,201,2,"value"],[205,11,201,2],[206,8,201,2],[206,12,201,2,"_generateUIRedesign"],[206,31,201,2],[206,38,201,2,"_asyncToGenerator2"],[206,56,201,2],[206,57,201,2,"default"],[206,64,201,2],[206,66,204,2],[206,77,204,27,"request"],[206,84,204,53],[206,86,204,84],[207,10,205,4],[207,14,205,8],[208,12,206,6],[208,16,206,12,"prompt"],[208,22,206,18],[208,25,206,21,"UIRedesignPromptService"],[208,73,206,44],[208,74,206,45,"generateRedesignPrompt"],[208,96,206,67],[208,97,206,68,"request"],[208,104,206,75],[208,105,206,76],[210,12,208,6],[211,12,209,6],[211,16,209,10,"aiResponse"],[211,26,209,28],[212,12,211,6],[212,16,211,10],[212,20,211,14],[212,21,211,15,"claudeApiKey"],[212,33,211,27],[212,35,211,29],[213,14,212,8],[213,18,212,12],[214,16,213,10],[214,20,213,16,"response"],[214,28,213,24],[214,37,213,33],[214,41,213,37],[214,42,213,38,"queryClaudeForUIRedesign"],[214,66,213,62],[214,67,213,63,"prompt"],[214,73,213,69],[214,74,213,70],[215,16,214,10,"aiResponse"],[215,26,214,20],[215,29,214,23,"response"],[215,37,214,31],[216,14,215,8],[216,15,215,9],[216,16,215,10],[216,23,215,17,"error"],[216,28,215,22],[216,30,215,24],[217,16,216,10,"EventLogger"],[217,40,216,21],[217,41,216,22,"warn"],[217,45,216,26],[217,46,216,27],[217,58,216,39],[217,60,216,41],[217,107,216,88],[217,109,216,90,"error"],[217,114,216,95],[217,115,216,96],[218,16,217,10,"aiResponse"],[218,26,217,20],[218,29,217,23],[218,33,217,27],[218,34,217,28,"generateFallbackUIResponse"],[218,60,217,54],[218,61,217,55,"request"],[218,68,217,62],[218,69,217,63],[219,14,218,8],[220,12,219,6],[220,13,219,7],[220,19,219,13],[221,14,220,8,"aiResponse"],[221,24,220,18],[221,27,220,21],[221,31,220,25],[221,32,220,26,"generateFallbackUIResponse"],[221,58,220,52],[221,59,220,53,"request"],[221,66,220,60],[221,67,220,61],[222,12,221,6],[223,12,223,6],[223,19,223,13,"UIRedesignPromptService"],[223,67,223,36],[223,68,223,37,"parseRedesignResponse"],[223,89,223,58],[223,90,223,59,"aiResponse"],[223,100,223,69],[223,101,223,70],[224,10,224,4],[224,11,224,5],[224,12,224,6],[224,19,224,13,"error"],[224,24,224,18],[224,26,224,20],[225,12,225,6,"EventLogger"],[225,36,225,17],[225,37,225,18,"error"],[225,42,225,23],[225,43,225,24],[225,55,225,36],[225,57,225,38],[225,89,225,70],[225,91,225,72,"error"],[225,96,225,86],[225,97,225,87],[226,12,226,6],[227,12,227,6],[227,19,227,13],[227,23,227,17],[227,24,227,18,"getFallbackUIRedesignResponse"],[227,53,227,47],[227,54,227,48,"request"],[227,61,227,55],[227,62,227,56],[228,10,228,4],[229,8,229,2],[229,9,229,3],[230,8,229,3],[230,17,204,8,"generateUIRedesign"],[230,35,204,26,"generateUIRedesign"],[230,36,204,26,"_x4"],[230,39,204,26],[231,10,204,26],[231,17,204,26,"_generateUIRedesign"],[231,36,204,26],[231,37,204,26,"apply"],[231,42,204,26],[231,49,204,26,"arguments"],[231,58,204,26],[232,8,204,26],[233,8,204,26],[233,15,204,8,"generateUIRedesign"],[233,33,204,26],[234,6,204,26],[235,6,231,2],[236,0,232,0],[237,0,233,0],[238,6,231,2],[239,4,231,2],[240,6,231,2,"key"],[240,9,231,2],[241,6,231,2,"value"],[241,11,231,2],[241,13,234,2],[241,22,234,10,"getFallbackUIRedesignResponse"],[241,51,234,39,"getFallbackUIRedesignResponse"],[241,52,234,40,"request"],[241,59,234,66],[241,61,234,88],[242,8,235,4],[242,15,235,11],[243,10,236,6,"designConcepts"],[243,24,236,20],[243,26,236,22],[244,12,237,8,"modernizations"],[244,26,237,22],[244,28,237,24],[244,29,238,10],[244,71,238,52],[244,73,239,10],[244,106,239,43],[244,108,240,10],[244,147,240,49],[244,149,241,10],[244,198,241,59],[244,199,242,9],[245,12,243,8,"layoutImprovements"],[245,30,243,26],[245,32,243,28],[245,33,244,10],[245,70,244,47],[245,72,245,10],[245,109,245,47],[245,111,246,10],[245,139,246,38],[245,141,247,10],[245,169,247,38],[245,170,248,9],[246,12,249,8,"interactionEnhancements"],[246,35,249,31],[246,37,249,33],[246,38,250,10],[246,75,250,47],[246,77,251,10],[246,112,251,45],[246,114,252,10],[246,144,252,40],[246,146,253,10],[246,175,253,39],[246,176,254,9],[247,12,255,8,"accessibilityImprovements"],[247,37,255,33],[247,39,255,35],[247,40,256,10],[247,77,256,47],[247,79,257,10],[247,119,257,50],[247,121,258,10],[247,149,258,38],[247,151,259,10],[247,184,259,43],[248,10,261,6],[248,11,261,7],[249,10,262,6,"specificRecommendations"],[249,33,262,29],[249,35,262,31],[250,12,263,8,"components"],[250,22,263,18],[250,24,263,20],[250,25,264,10],[250,76,264,61],[250,78,265,10],[250,114,265,46],[250,116,266,10],[250,161,266,55],[250,163,267,10],[250,197,267,44],[250,198,268,9],[251,12,269,8,"styling"],[251,19,269,15],[251,21,269,17],[251,22,270,10],[251,54,270,42],[251,56,271,10],[251,87,271,41],[251,89,272,10],[251,112,272,33],[251,114,273,10],[251,147,273,43],[251,148,274,9],[252,12,275,8,"animations"],[252,22,275,18],[252,24,275,20],[252,25,276,10],[252,57,276,42],[252,59,277,10],[252,103,277,54],[252,105,278,10],[252,147,278,52],[252,149,279,10],[252,178,279,39],[252,179,280,9],[253,12,281,8,"userFlow"],[253,20,281,16],[253,22,281,18],[253,23,282,10],[253,50,282,37],[253,52,283,10],[253,83,283,41],[253,85,284,10],[253,119,284,44],[253,121,285,10],[253,147,285,36],[254,10,287,6],[254,11,287,7],[255,10,288,6,"implementationGuide"],[255,29,288,25],[255,31,288,27],[256,12,289,8,"priority"],[256,20,289,16],[256,22,289,18],[256,28,289,24],[257,12,290,8,"steps"],[257,17,290,13],[257,19,290,15],[257,20,291,10],[257,70,291,60],[257,72,292,10],[257,103,292,41],[257,105,293,10],[257,150,293,55],[257,152,294,10],[257,184,294,42],[257,186,295,10],[257,217,295,41],[257,219,296,10],[257,253,296,44],[257,254,297,9],[258,12,298,8,"codeExamples"],[258,24,298,20],[258,26,298,22],[258,27,299,10],[258,66,299,49],[258,68,300,10],[258,102,300,44],[258,104,301,10],[258,136,301,42],[258,138,302,10],[258,168,302,40],[258,169,303,9],[259,12,304,8,"testingApproach"],[259,27,304,23],[259,29,304,25],[259,30,305,10],[259,57,305,37],[259,59,306,10],[259,80,306,31],[259,82,307,10],[259,111,307,39],[259,113,308,10],[259,138,308,35],[260,10,310,6],[260,11,310,7],[261,10,311,6,"mockupDescriptions"],[261,28,311,24],[261,30,311,26],[261,31,312,8],[262,12,313,10,"name"],[262,16,313,14],[262,18,313,16],[262,43,313,41],[263,12,314,10,"description"],[263,23,314,21],[263,25,314,23],[263,109,314,107],[264,12,315,10,"keyFeatures"],[264,23,315,21],[264,25,315,23],[264,26,316,12],[264,69,316,55],[264,71,317,12],[264,102,317,43],[264,104,318,12],[264,147,318,55],[264,149,319,12],[264,183,319,46],[264,184,320,11],[265,12,321,10,"colorScheme"],[265,23,321,21],[265,25,321,23],[265,26,321,24],[265,35,321,33],[265,37,321,35],[265,46,321,44],[265,48,321,46],[265,57,321,55],[265,59,321,57],[265,68,321,66],[265,69,321,67],[266,12,322,10,"layoutChanges"],[266,25,322,23],[266,27,322,25],[266,28,323,12],[266,62,323,46],[266,64,324,12],[266,88,324,36],[266,90,325,12],[266,126,325,48],[266,127,326,11],[267,12,327,10,"userBenefits"],[267,24,327,22],[267,26,327,24],[267,27,328,12],[267,60,328,45],[267,62,329,12],[267,92,329,42],[267,94,330,12],[267,118,330,36],[268,10,332,8],[268,11,332,9],[268,13,333,8],[269,12,334,10,"name"],[269,16,334,14],[269,18,334,16],[269,37,334,35],[270,12,335,10,"description"],[270,23,335,21],[270,25,335,23],[270,104,335,102],[271,12,336,10,"keyFeatures"],[271,23,336,21],[271,25,336,23],[271,26,337,12],[271,53,337,39],[271,55,338,12],[271,85,338,42],[271,87,339,12],[271,116,339,41],[271,118,340,12],[271,144,340,38],[271,145,341,11],[272,12,342,10,"colorScheme"],[272,23,342,21],[272,25,342,23],[272,26,342,24],[272,35,342,33],[272,37,342,35],[272,46,342,44],[272,48,342,46],[272,57,342,55],[272,59,342,57],[272,68,342,66],[272,69,342,67],[273,12,343,10,"layoutChanges"],[273,25,343,23],[273,27,343,25],[273,28,344,12],[273,56,344,40],[273,58,345,12],[273,84,345,38],[273,86,346,12],[273,109,346,35],[273,110,347,11],[274,12,348,10,"userBenefits"],[274,24,348,22],[274,26,348,24],[274,27,349,12],[274,51,349,36],[274,53,350,12],[274,82,350,41],[274,84,351,12],[274,108,351,36],[275,10,353,8],[275,11,353,9],[275,13,354,8],[276,12,355,10,"name"],[276,16,355,14],[276,18,355,16],[276,46,355,44],[277,12,356,10,"description"],[277,23,356,21],[277,25,356,23],[277,91,356,89],[278,12,357,10,"keyFeatures"],[278,23,357,21],[278,25,357,23],[278,26,358,12],[278,52,358,38],[278,54,359,12],[278,82,359,40],[278,84,360,12],[278,113,360,41],[278,115,361,12],[278,148,361,45],[278,149,362,11],[279,12,363,10,"colorScheme"],[279,23,363,21],[279,25,363,23],[279,26,363,24],[279,35,363,33],[279,37,363,35],[279,46,363,44],[279,48,363,46],[279,57,363,55],[279,59,363,57],[279,68,363,66],[279,69,363,67],[280,12,364,10,"layoutChanges"],[280,25,364,23],[280,27,364,25],[280,28,365,12],[280,56,365,40],[280,58,366,12],[280,88,366,42],[280,90,367,12],[280,115,367,37],[280,116,368,11],[281,12,369,10,"userBenefits"],[281,24,369,22],[281,26,369,24],[281,27,370,12],[281,55,370,40],[281,57,371,12],[281,76,371,31],[281,78,372,12],[281,112,372,46],[282,10,374,8],[282,11,374,9],[283,8,376,4],[283,9,376,5],[284,6,377,2],[285,4,377,3],[286,6,377,3,"key"],[286,9,377,3],[287,6,377,3,"value"],[287,11,377,3],[288,8,377,3],[288,12,377,3,"_queryClaudeForUIRedesign"],[288,37,377,3],[288,44,377,3,"_asyncToGenerator2"],[288,62,377,3],[288,63,377,3,"default"],[288,70,377,3],[288,72,379,2],[288,83,379,41,"prompt"],[288,89,379,55],[288,91,379,74],[289,10,380,4],[289,14,380,10,"response"],[289,22,380,18],[289,31,380,27,"axios"],[289,45,380,32],[289,46,380,33,"post"],[289,50,380,37],[289,51,381,6],[289,90,381,45],[289,92,382,6],[290,12,383,8,"model"],[290,17,383,13],[290,19,383,15],[290,45,383,41],[291,12,384,8,"max_tokens"],[291,22,384,18],[291,24,384,20],[291,28,384,24],[292,12,385,8,"messages"],[292,20,385,16],[292,22,385,18],[292,23,385,19],[293,14,386,10,"role"],[293,18,386,14],[293,20,386,16],[293,26,386,22],[294,14,387,10,"content"],[294,21,387,17],[294,23,387,19,"prompt"],[295,12,388,8],[295,13,388,9],[296,10,389,6],[296,11,389,7],[296,13,390,6],[297,12,391,8,"headers"],[297,19,391,15],[297,21,391,17],[298,14,392,10],[298,25,392,21],[298,27,392,23],[298,31,392,27],[298,32,392,28,"claudeApiKey"],[298,44,392,40],[299,14,393,10],[299,33,393,29],[299,35,393,31],[299,47,393,43],[300,14,394,10],[300,28,394,24],[300,30,394,26],[301,12,395,8],[302,10,396,6],[302,11,397,4],[302,12,397,5],[303,10,399,4],[303,17,399,11,"response"],[303,25,399,19],[303,26,399,20,"data"],[303,30,399,24],[303,31,399,25,"content"],[303,38,399,32],[303,39,399,33],[303,40,399,34],[303,41,399,35],[303,42,399,36,"text"],[303,46,399,40],[304,8,400,2],[304,9,400,3],[305,8,400,3],[305,17,379,16,"queryClaudeForUIRedesign"],[305,41,379,40,"queryClaudeForUIRedesign"],[305,42,379,40,"_x5"],[305,45,379,40],[306,10,379,40],[306,17,379,40,"_queryClaudeForUIRedesign"],[306,42,379,40],[306,43,379,40,"apply"],[306,48,379,40],[306,55,379,40,"arguments"],[306,64,379,40],[307,8,379,40],[308,8,379,40],[308,15,379,16,"queryClaudeForUIRedesign"],[308,39,379,40],[309,6,379,40],[310,4,379,40],[311,6,379,40,"key"],[311,9,379,40],[312,6,379,40,"value"],[312,11,379,40],[312,13,402,2],[312,22,402,10,"generateFallbackUIResponse"],[312,48,402,36,"generateFallbackUIResponse"],[312,49,402,37,"request"],[312,56,402,63],[312,58,402,73],[313,8,403,4],[313,12,403,12,"screenName"],[313,22,403,22],[313,25,403,40,"request"],[313,32,403,47],[313,33,403,12,"screenName"],[313,43,403,22],[314,10,403,24,"designGoals"],[314,21,403,35],[314,24,403,40,"request"],[314,31,403,47],[314,32,403,24,"designGoals"],[314,43,403,35],[315,8,405,4],[315,15,405,11],[316,0,406,0],[316,32,406,32,"screenName"],[316,42,406,42],[317,0,407,0],[318,0,408,0],[319,0,409,0],[319,29,409,29,"designGoals"],[319,40,409,40],[319,41,409,41,"join"],[319,45,409,45],[319,46,409,46],[319,50,409,50],[319,51,409,51],[320,0,410,0],[321,0,411,0],[322,0,412,0],[323,0,413,0],[324,0,414,0],[325,0,415,0],[326,0,416,0],[327,0,417,0],[328,0,418,0],[329,0,419,0],[330,0,420,0],[331,0,421,0],[332,0,422,0],[333,0,423,0],[334,0,424,0],[335,0,425,0],[336,0,426,0],[337,0,427,0],[338,0,428,0],[339,0,429,0],[340,0,430,0],[341,0,431,0],[342,0,432,0],[343,0,433,0],[344,0,434,0],[345,0,435,0],[345,5,435,5],[346,6,436,2],[348,6,438,2],[349,0,439,0],[350,0,440,0],[351,4,438,2],[352,6,438,2,"key"],[352,9,438,2],[353,6,438,2,"value"],[353,11,438,2],[354,8,438,2],[354,12,438,2,"_compareAIInsights"],[354,30,438,2],[354,37,438,2,"_asyncToGenerator2"],[354,55,438,2],[354,56,438,2,"default"],[354,63,438,2],[354,65,441,2],[354,76,441,26,"topic"],[354,81,441,39],[354,83,446,5],[355,10,447,4],[355,14,447,10,"query"],[355,19,447,30],[355,22,447,33],[356,12,448,6,"topic"],[356,17,448,11],[356,19,448,6,"topic"],[356,24,448,11],[357,12,449,6,"context"],[357,19,449,13],[357,21,449,15],[358,10,450,4],[358,11,450,5],[359,10,452,4],[359,14,452,10,"results"],[359,21,452,17],[359,30,452,26],[359,34,452,30],[359,35,452,31,"researchAppImprovements"],[359,58,452,54],[359,59,452,55,"query"],[359,64,452,60],[359,65,452,61],[360,10,454,4],[360,14,454,10,"claudeResult"],[360,26,454,22],[360,29,454,25,"results"],[360,36,454,32],[360,37,454,33,"find"],[360,41,454,37],[360,42,454,38],[360,52,454,38,"r"],[360,53,454,39],[361,12,454,39],[361,19,454,43,"r"],[361,20,454,44],[361,21,454,45,"provider"],[361,29,454,53],[361,34,454,58],[361,42,454,66],[362,10,454,66],[362,12,454,67],[363,10,455,4],[363,14,455,10,"chatgptResult"],[363,27,455,23],[363,30,455,26,"results"],[363,37,455,33],[363,38,455,34,"find"],[363,42,455,38],[363,43,455,39],[363,53,455,39,"r"],[363,54,455,40],[364,12,455,40],[364,19,455,44,"r"],[364,20,455,45],[364,21,455,46,"provider"],[364,29,455,54],[364,34,455,59],[364,43,455,68],[365,10,455,68],[365,12,455,69],[367,10,457,4],[368,10,458,4],[368,14,458,10,"consensus"],[368,23,458,29],[368,26,458,32],[368,28,458,34],[369,10,459,4],[369,14,459,10,"uniqueClaudeInsights"],[369,34,459,40],[369,37,459,43],[369,39,459,45],[370,10,460,4],[370,14,460,10,"uniqueChatGPTInsights"],[370,35,460,41],[370,38,460,44],[370,40,460,46],[371,10,461,4],[371,14,461,10,"conflictingViews"],[371,30,461,36],[371,33,461,39],[371,35,461,41],[373,10,463,4],[374,10,464,4],[376,10,466,4],[376,17,466,11],[377,12,467,6,"consensus"],[377,21,467,15],[377,23,467,6,"consensus"],[377,32,467,15],[378,12,468,6,"uniqueClaudeInsights"],[378,32,468,26],[378,34,468,6,"uniqueClaudeInsights"],[378,54,468,26],[379,12,469,6,"uniqueChatGPTInsights"],[379,33,469,27],[379,35,469,6,"uniqueChatGPTInsights"],[379,56,469,27],[380,12,470,6,"conflictingViews"],[380,28,470,22],[380,30,470,6,"conflictingViews"],[381,10,471,4],[381,11,471,5],[382,8,472,2],[382,9,472,3],[383,8,472,3],[383,17,441,8,"compareAIInsights"],[383,34,441,25,"compareAIInsights"],[383,35,441,25,"_x6"],[383,38,441,25],[384,10,441,25],[384,17,441,25,"_compareAIInsights"],[384,35,441,25],[384,36,441,25,"apply"],[384,41,441,25],[384,48,441,25,"arguments"],[384,57,441,25],[385,8,441,25],[386,8,441,25],[386,15,441,8,"compareAIInsights"],[386,32,441,25],[387,6,441,25],[388,4,441,25],[389,2,441,25],[389,7,475,0],[390,2,476,7],[390,6,476,13,"researchAppFeature"],[390,24,476,31],[390,27,476,31,"exports"],[390,34,476,31],[390,35,476,31,"researchAppFeature"],[390,53,476,31],[391,4,476,31],[391,8,476,31,"_ref"],[391,12,476,31],[391,19,476,31,"_asyncToGenerator2"],[391,37,476,31],[391,38,476,31,"default"],[391,45,476,31],[391,47,476,34],[391,58,476,41,"feature"],[391,65,476,56],[391,67,476,61],[392,6,477,2],[392,10,477,8,"researcher"],[392,20,477,18],[392,23,477,21],[392,27,477,25,"AIResearchService"],[392,44,477,42],[392,45,478,4,"process"],[392,52,478,11],[392,53,478,12,"env"],[392,56,478,15],[392,57,478,16,"CLAUDE_API_KEY"],[392,71,478,30],[392,73,479,4,"process"],[392,80,479,11],[392,81,479,12,"env"],[392,84,479,15],[392,85,479,16,"OPENAI_API_KEY"],[392,99,480,2],[392,100,480,3],[393,6,482,2],[393,10,482,8,"results"],[393,17,482,15],[393,26,482,24,"researcher"],[393,36,482,34],[393,37,482,35,"researchAppImprovements"],[393,60,482,58],[393,61,482,59],[394,8,483,4,"topic"],[394,13,483,9],[394,15,483,11,"feature"],[394,22,483,18],[395,8,484,4,"context"],[395,15,484,11],[395,17,484,13],[395,47,484,43],[396,8,485,4,"specificQuestions"],[396,25,485,21],[396,27,485,23],[396,28,486,6],[396,75,486,53],[396,77,487,6],[396,114,487,43],[396,116,488,6],[396,165,488,55],[397,6,490,2],[397,7,490,3],[397,8,490,4],[398,6,492,2],[398,13,492,9,"results"],[398,20,492,16],[399,4,493,0],[399,5,493,1],[400,4,493,1],[400,20,476,13,"researchAppFeature"],[400,38,476,31,"researchAppFeature"],[400,39,476,31,"_x7"],[400,42,476,31],[401,6,476,31],[401,13,476,31,"_ref"],[401,17,476,31],[401,18,476,31,"apply"],[401,23,476,31],[401,30,476,31,"arguments"],[401,39,476,31],[402,4,476,31],[403,2,476,31],[403,5,493,1],[404,0,493,2],[404,3]],"functionMap":{"names":["<global>","AIResearchService","constructor","researchAppImprovements","queryClaudeAPI","queryChatGPTAPI","buildResearchPrompt","query.specificQuestions.forEach$argument_0","parseAIResponse","sections.forEach$argument_0","generateUIRedesign","getFallbackUIRedesignResponse","queryClaudeForUIRedesign","generateFallbackUIResponse","compareAIInsights","results.find$argument_0","researchAppFeature"],"mappings":"AAA;OCkB;ECI;GDG;EEK;GFuC;EGE;GHgC;EIE;GJgC;EKE;sCCgB;ODE;GLI;EOE;qBCU;KDgB;GPS;ESK;GTyB;EUK;GV+I;EWE;GXqB;EYE;GZkC;EaK;sCCa,4BD;uCCC,6BD;GbiB;CDC;kCgBG;ChBiB"}},"type":"js/module"}]}