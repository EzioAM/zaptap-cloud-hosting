{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n    This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n    License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n  */\n  var _classCallCheck = require(_dependencyMap[0]);\n  var _createClass = require(_dependencyMap[1]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.REALTIME_PRESENCE_LISTEN_EVENTS = undefined;\n  var REALTIME_PRESENCE_LISTEN_EVENTS;\n  (function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n  })(REALTIME_PRESENCE_LISTEN_EVENTS || (exports.REALTIME_PRESENCE_LISTEN_EVENTS = REALTIME_PRESENCE_LISTEN_EVENTS = {}));\n  var RealtimePresence = /*#__PURE__*/function () {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    function RealtimePresence(channel, opts) {\n      _classCallCheck(this, RealtimePresence);\n      this.channel = channel;\n      this.state = {};\n      this.pendingDiffs = [];\n      this.joinRef = null;\n      this.caller = {\n        onJoin: () => {},\n        onLeave: () => {},\n        onSync: () => {}\n      };\n      var events = (opts === null || opts === undefined ? undefined : opts.events) || {\n        state: 'presence_state',\n        diff: 'presence_diff'\n      };\n      this.channel._on(events.state, {}, newState => {\n        var _this$caller = this.caller,\n          onJoin = _this$caller.onJoin,\n          onLeave = _this$caller.onLeave,\n          onSync = _this$caller.onSync;\n        this.joinRef = this.channel._joinRef();\n        this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n        this.pendingDiffs.forEach(diff => {\n          this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n        });\n        this.pendingDiffs = [];\n        onSync();\n      });\n      this.channel._on(events.diff, {}, diff => {\n        var _this$caller2 = this.caller,\n          onJoin = _this$caller2.onJoin,\n          onLeave = _this$caller2.onLeave,\n          onSync = _this$caller2.onSync;\n        if (this.inPendingSyncState()) {\n          this.pendingDiffs.push(diff);\n        } else {\n          this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n          onSync();\n        }\n      });\n      this.onJoin((key, currentPresences, newPresences) => {\n        this.channel._trigger('presence', {\n          event: 'join',\n          key,\n          currentPresences,\n          newPresences\n        });\n      });\n      this.onLeave((key, currentPresences, leftPresences) => {\n        this.channel._trigger('presence', {\n          event: 'leave',\n          key,\n          currentPresences,\n          leftPresences\n        });\n      });\n      this.onSync(() => {\n        this.channel._trigger('presence', {\n          event: 'sync'\n        });\n      });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    return _createClass(RealtimePresence, [{\n      key: \"onJoin\",\n      value: /** @internal */\n      function onJoin(callback) {\n        this.caller.onJoin = callback;\n      }\n      /** @internal */\n    }, {\n      key: \"onLeave\",\n      value: function onLeave(callback) {\n        this.caller.onLeave = callback;\n      }\n      /** @internal */\n    }, {\n      key: \"onSync\",\n      value: function onSync(callback) {\n        this.caller.onSync = callback;\n      }\n      /** @internal */\n    }, {\n      key: \"inPendingSyncState\",\n      value: function inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n      }\n    }], [{\n      key: \"syncState\",\n      value: function syncState(currentState, newState, onJoin, onLeave) {\n        var state = this.cloneDeep(currentState);\n        var transformedState = this.transformState(newState);\n        var joins = {};\n        var leaves = {};\n        this.map(state, (key, presences) => {\n          if (!transformedState[key]) {\n            leaves[key] = presences;\n          }\n        });\n        this.map(transformedState, (key, newPresences) => {\n          var currentPresences = state[key];\n          if (currentPresences) {\n            var newPresenceRefs = newPresences.map(m => m.presence_ref);\n            var curPresenceRefs = currentPresences.map(m => m.presence_ref);\n            var joinedPresences = newPresences.filter(m => curPresenceRefs.indexOf(m.presence_ref) < 0);\n            var leftPresences = currentPresences.filter(m => newPresenceRefs.indexOf(m.presence_ref) < 0);\n            if (joinedPresences.length > 0) {\n              joins[key] = joinedPresences;\n            }\n            if (leftPresences.length > 0) {\n              leaves[key] = leftPresences;\n            }\n          } else {\n            joins[key] = newPresences;\n          }\n        });\n        return this.syncDiff(state, {\n          joins,\n          leaves\n        }, onJoin, onLeave);\n      }\n      /**\n       * Used to sync a diff of presence join and leave events from the\n       * server, as they happen.\n       *\n       * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n       * `onLeave` callbacks to react to a user joining or leaving from a\n       * device.\n       *\n       * @internal\n       */\n    }, {\n      key: \"syncDiff\",\n      value: function syncDiff(state, diff, onJoin, onLeave) {\n        var _joins$leaves = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves)\n          },\n          joins = _joins$leaves.joins,\n          leaves = _joins$leaves.leaves;\n        if (!onJoin) {\n          onJoin = () => {};\n        }\n        if (!onLeave) {\n          onLeave = () => {};\n        }\n        this.map(joins, (key, newPresences) => {\n          var _a;\n          var currentPresences = (_a = state[key]) !== null && _a !== undefined ? _a : [];\n          state[key] = this.cloneDeep(newPresences);\n          if (currentPresences.length > 0) {\n            var joinedPresenceRefs = state[key].map(m => m.presence_ref);\n            var curPresences = currentPresences.filter(m => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n            state[key].unshift(...curPresences);\n          }\n          onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n          var currentPresences = state[key];\n          if (!currentPresences) return;\n          var presenceRefsToRemove = leftPresences.map(m => m.presence_ref);\n          currentPresences = currentPresences.filter(m => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n          state[key] = currentPresences;\n          onLeave(key, currentPresences, leftPresences);\n          if (currentPresences.length === 0) delete state[key];\n        });\n        return state;\n      }\n      /** @internal */\n    }, {\n      key: \"map\",\n      value: function map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map(key => func(key, obj[key]));\n      }\n      /**\n       * Remove 'metas' key\n       * Change 'phx_ref' to 'presence_ref'\n       * Remove 'phx_ref' and 'phx_ref_prev'\n       *\n       * @example\n       * // returns {\n       *  abc123: [\n       *    { presence_ref: '2', user_id: 1 },\n       *    { presence_ref: '3', user_id: 2 }\n       *  ]\n       * }\n       * RealtimePresence.transformState({\n       *  abc123: {\n       *    metas: [\n       *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n       *      { phx_ref: '3', user_id: 2 }\n       *    ]\n       *  }\n       * })\n       *\n       * @internal\n       */\n    }, {\n      key: \"transformState\",\n      value: function transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n          var presences = state[key];\n          if ('metas' in presences) {\n            newState[key] = presences.metas.map(presence => {\n              presence['presence_ref'] = presence['phx_ref'];\n              delete presence['phx_ref'];\n              delete presence['phx_ref_prev'];\n              return presence;\n            });\n          } else {\n            newState[key] = presences;\n          }\n          return newState;\n        }, {});\n      }\n      /** @internal */\n    }, {\n      key: \"cloneDeep\",\n      value: function cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n      }\n    }]);\n  }();\n  exports.default = RealtimePresence;\n});","lineCount":262,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,2,2,0],[8,6,2,0,"_classCallCheck"],[8,21,2,0],[8,24,2,0,"require"],[8,31,2,0],[8,32,2,0,"_dependencyMap"],[8,46,2,0],[9,2,2,0],[9,6,2,0,"_createClass"],[9,18,2,0],[9,21,2,0,"require"],[9,28,2,0],[9,29,2,0,"_dependencyMap"],[9,43,2,0],[10,2,6,0,"Object"],[10,8,6,6],[10,9,6,7,"defineProperty"],[10,23,6,21],[10,24,6,22,"exports"],[10,31,6,29],[10,33,6,31],[10,45,6,43],[10,47,6,45],[11,4,6,47,"value"],[11,9,6,52],[11,11,6,54],[12,2,6,59],[12,3,6,60],[12,4,6,61],[13,2,7,0,"exports"],[13,9,7,7],[13,10,7,8,"REALTIME_PRESENCE_LISTEN_EVENTS"],[13,41,7,39],[13,44,7,39,"undefined"],[13,53,7,48],[14,2,8,0],[14,6,8,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[14,37,8,35],[15,2,9,0],[15,3,9,1],[15,13,9,11,"REALTIME_PRESENCE_LISTEN_EVENTS"],[15,44,9,42],[15,46,9,44],[16,4,10,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[16,35,10,35],[16,36,10,36],[16,42,10,42],[16,43,10,43],[16,46,10,46],[16,52,10,52],[17,4,11,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[17,35,11,35],[17,36,11,36],[17,42,11,42],[17,43,11,43],[17,46,11,46],[17,52,11,52],[18,4,12,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[18,35,12,35],[18,36,12,36],[18,43,12,43],[18,44,12,44],[18,47,12,47],[18,54,12,54],[19,2,13,0],[19,3,13,1],[19,5,13,3,"REALTIME_PRESENCE_LISTEN_EVENTS"],[19,36,13,34],[19,41,13,39,"exports"],[19,48,13,46],[19,49,13,47,"REALTIME_PRESENCE_LISTEN_EVENTS"],[19,80,13,78],[19,83,13,81,"REALTIME_PRESENCE_LISTEN_EVENTS"],[19,114,13,112],[19,117,13,115],[19,118,13,116],[19,119,13,117],[19,120,13,118],[19,121,13,119],[20,2,13,120],[20,6,14,6,"RealtimePresence"],[20,22,14,22],[21,4,15,4],[22,0,16,0],[23,0,17,0],[24,0,18,0],[25,0,19,0],[26,0,20,0],[27,0,21,0],[28,4,22,4],[28,13,22,4,"RealtimePresence"],[28,30,22,16,"channel"],[28,37,22,23],[28,39,22,25,"opts"],[28,43,22,29],[28,45,22,31],[29,6,22,31,"_classCallCheck"],[29,21,22,31],[29,28,22,31,"RealtimePresence"],[29,44,22,31],[30,6,23,8],[30,10,23,12],[30,11,23,13,"channel"],[30,18,23,20],[30,21,23,23,"channel"],[30,28,23,30],[31,6,24,8],[31,10,24,12],[31,11,24,13,"state"],[31,16,24,18],[31,19,24,21],[31,20,24,22],[31,21,24,23],[32,6,25,8],[32,10,25,12],[32,11,25,13,"pendingDiffs"],[32,23,25,25],[32,26,25,28],[32,28,25,30],[33,6,26,8],[33,10,26,12],[33,11,26,13,"joinRef"],[33,18,26,20],[33,21,26,23],[33,25,26,27],[34,6,27,8],[34,10,27,12],[34,11,27,13,"caller"],[34,17,27,19],[34,20,27,22],[35,8,28,12,"onJoin"],[35,14,28,18],[35,16,28,20,"onJoin"],[35,17,28,20],[35,22,28,26],[35,23,28,28],[35,24,28,29],[36,8,29,12,"onLeave"],[36,15,29,19],[36,17,29,21,"onLeave"],[36,18,29,21],[36,23,29,27],[36,24,29,29],[36,25,29,30],[37,8,30,12,"onSync"],[37,14,30,18],[37,16,30,20,"onSync"],[37,17,30,20],[37,22,30,26],[37,23,30,28],[38,6,31,8],[38,7,31,9],[39,6,32,8],[39,10,32,14,"events"],[39,16,32,20],[39,19,32,23],[39,20,32,24,"opts"],[39,24,32,28],[39,29,32,33],[39,33,32,37],[39,37,32,41,"opts"],[39,41,32,45],[39,46,32,45,"undefined"],[39,55,32,56],[39,58,32,56,"undefined"],[39,67,32,56],[39,70,32,68,"opts"],[39,74,32,72],[39,75,32,73,"events"],[39,81,32,79],[39,86,32,84],[40,8,33,12,"state"],[40,13,33,17],[40,15,33,19],[40,31,33,35],[41,8,34,12,"diff"],[41,12,34,16],[41,14,34,18],[42,6,35,8],[42,7,35,9],[43,6,36,8],[43,10,36,12],[43,11,36,13,"channel"],[43,18,36,20],[43,19,36,21,"_on"],[43,22,36,24],[43,23,36,25,"events"],[43,29,36,31],[43,30,36,32,"state"],[43,35,36,37],[43,37,36,39],[43,38,36,40],[43,39,36,41],[43,41,36,44,"newState"],[43,49,36,52],[43,53,36,57],[44,8,37,12],[44,12,37,12,"_this$caller"],[44,24,37,12],[44,27,37,48],[44,31,37,52],[44,32,37,53,"caller"],[44,38,37,59],[45,10,37,20,"onJoin"],[45,16,37,26],[45,19,37,26,"_this$caller"],[45,31,37,26],[45,32,37,20,"onJoin"],[45,38,37,26],[46,10,37,28,"onLeave"],[46,17,37,35],[46,20,37,35,"_this$caller"],[46,32,37,35],[46,33,37,28,"onLeave"],[46,40,37,35],[47,10,37,37,"onSync"],[47,16,37,43],[47,19,37,43,"_this$caller"],[47,31,37,43],[47,32,37,37,"onSync"],[47,38,37,43],[48,8,38,12],[48,12,38,16],[48,13,38,17,"joinRef"],[48,20,38,24],[48,23,38,27],[48,27,38,31],[48,28,38,32,"channel"],[48,35,38,39],[48,36,38,40,"_joinRef"],[48,44,38,48],[48,45,38,49],[48,46,38,50],[49,8,39,12],[49,12,39,16],[49,13,39,17,"state"],[49,18,39,22],[49,21,39,25,"RealtimePresence"],[49,37,39,41],[49,38,39,42,"syncState"],[49,47,39,51],[49,48,39,52],[49,52,39,56],[49,53,39,57,"state"],[49,58,39,62],[49,60,39,64,"newState"],[49,68,39,72],[49,70,39,74,"onJoin"],[49,76,39,80],[49,78,39,82,"onLeave"],[49,85,39,89],[49,86,39,90],[50,8,40,12],[50,12,40,16],[50,13,40,17,"pendingDiffs"],[50,25,40,29],[50,26,40,30,"forEach"],[50,33,40,37],[50,34,40,39,"diff"],[50,38,40,43],[50,42,40,48],[51,10,41,16],[51,14,41,20],[51,15,41,21,"state"],[51,20,41,26],[51,23,41,29,"RealtimePresence"],[51,39,41,45],[51,40,41,46,"syncDiff"],[51,48,41,54],[51,49,41,55],[51,53,41,59],[51,54,41,60,"state"],[51,59,41,65],[51,61,41,67,"diff"],[51,65,41,71],[51,67,41,73,"onJoin"],[51,73,41,79],[51,75,41,81,"onLeave"],[51,82,41,88],[51,83,41,89],[52,8,42,12],[52,9,42,13],[52,10,42,14],[53,8,43,12],[53,12,43,16],[53,13,43,17,"pendingDiffs"],[53,25,43,29],[53,28,43,32],[53,30,43,34],[54,8,44,12,"onSync"],[54,14,44,18],[54,15,44,19],[54,16,44,20],[55,6,45,8],[55,7,45,9],[55,8,45,10],[56,6,46,8],[56,10,46,12],[56,11,46,13,"channel"],[56,18,46,20],[56,19,46,21,"_on"],[56,22,46,24],[56,23,46,25,"events"],[56,29,46,31],[56,30,46,32,"diff"],[56,34,46,36],[56,36,46,38],[56,37,46,39],[56,38,46,40],[56,40,46,43,"diff"],[56,44,46,47],[56,48,46,52],[57,8,47,12],[57,12,47,12,"_this$caller2"],[57,25,47,12],[57,28,47,48],[57,32,47,52],[57,33,47,53,"caller"],[57,39,47,59],[58,10,47,20,"onJoin"],[58,16,47,26],[58,19,47,26,"_this$caller2"],[58,32,47,26],[58,33,47,20,"onJoin"],[58,39,47,26],[59,10,47,28,"onLeave"],[59,17,47,35],[59,20,47,35,"_this$caller2"],[59,33,47,35],[59,34,47,28,"onLeave"],[59,41,47,35],[60,10,47,37,"onSync"],[60,16,47,43],[60,19,47,43,"_this$caller2"],[60,32,47,43],[60,33,47,37,"onSync"],[60,39,47,43],[61,8,48,12],[61,12,48,16],[61,16,48,20],[61,17,48,21,"inPendingSyncState"],[61,35,48,39],[61,36,48,40],[61,37,48,41],[61,39,48,43],[62,10,49,16],[62,14,49,20],[62,15,49,21,"pendingDiffs"],[62,27,49,33],[62,28,49,34,"push"],[62,32,49,38],[62,33,49,39,"diff"],[62,37,49,43],[62,38,49,44],[63,8,50,12],[63,9,50,13],[63,15,51,17],[64,10,52,16],[64,14,52,20],[64,15,52,21,"state"],[64,20,52,26],[64,23,52,29,"RealtimePresence"],[64,39,52,45],[64,40,52,46,"syncDiff"],[64,48,52,54],[64,49,52,55],[64,53,52,59],[64,54,52,60,"state"],[64,59,52,65],[64,61,52,67,"diff"],[64,65,52,71],[64,67,52,73,"onJoin"],[64,73,52,79],[64,75,52,81,"onLeave"],[64,82,52,88],[64,83,52,89],[65,10,53,16,"onSync"],[65,16,53,22],[65,17,53,23],[65,18,53,24],[66,8,54,12],[67,6,55,8],[67,7,55,9],[67,8,55,10],[68,6,56,8],[68,10,56,12],[68,11,56,13,"onJoin"],[68,17,56,19],[68,18,56,20],[68,19,56,21,"key"],[68,22,56,24],[68,24,56,26,"currentPresences"],[68,40,56,42],[68,42,56,44,"newPresences"],[68,54,56,56],[68,59,56,61],[69,8,57,12],[69,12,57,16],[69,13,57,17,"channel"],[69,20,57,24],[69,21,57,25,"_trigger"],[69,29,57,33],[69,30,57,34],[69,40,57,44],[69,42,57,46],[70,10,58,16,"event"],[70,15,58,21],[70,17,58,23],[70,23,58,29],[71,10,59,16,"key"],[71,13,59,19],[72,10,60,16,"currentPresences"],[72,26,60,32],[73,10,61,16,"newPresences"],[74,8,62,12],[74,9,62,13],[74,10,62,14],[75,6,63,8],[75,7,63,9],[75,8,63,10],[76,6,64,8],[76,10,64,12],[76,11,64,13,"onLeave"],[76,18,64,20],[76,19,64,21],[76,20,64,22,"key"],[76,23,64,25],[76,25,64,27,"currentPresences"],[76,41,64,43],[76,43,64,45,"leftPresences"],[76,56,64,58],[76,61,64,63],[77,8,65,12],[77,12,65,16],[77,13,65,17,"channel"],[77,20,65,24],[77,21,65,25,"_trigger"],[77,29,65,33],[77,30,65,34],[77,40,65,44],[77,42,65,46],[78,10,66,16,"event"],[78,15,66,21],[78,17,66,23],[78,24,66,30],[79,10,67,16,"key"],[79,13,67,19],[80,10,68,16,"currentPresences"],[80,26,68,32],[81,10,69,16,"leftPresences"],[82,8,70,12],[82,9,70,13],[82,10,70,14],[83,6,71,8],[83,7,71,9],[83,8,71,10],[84,6,72,8],[84,10,72,12],[84,11,72,13,"onSync"],[84,17,72,19],[84,18,72,20],[84,24,72,26],[85,8,73,12],[85,12,73,16],[85,13,73,17,"channel"],[85,20,73,24],[85,21,73,25,"_trigger"],[85,29,73,33],[85,30,73,34],[85,40,73,44],[85,42,73,46],[86,10,73,48,"event"],[86,15,73,53],[86,17,73,55],[87,8,73,62],[87,9,73,63],[87,10,73,64],[88,6,74,8],[88,7,74,9],[88,8,74,10],[89,4,75,4],[90,4,76,4],[91,0,77,0],[92,0,78,0],[93,0,79,0],[94,0,80,0],[95,0,81,0],[96,0,82,0],[97,0,83,0],[98,0,84,0],[99,0,85,0],[100,4,76,4],[100,11,76,4,"_createClass"],[100,23,76,4],[100,24,76,4,"RealtimePresence"],[100,40,76,4],[101,6,76,4,"key"],[101,9,76,4],[102,6,76,4,"value"],[102,11,76,4],[102,13,210,4],[103,6,211,4],[103,15,211,4,"onJoin"],[103,21,211,10,"onJoin"],[103,22,211,11,"callback"],[103,30,211,19],[103,32,211,21],[104,8,212,8],[104,12,212,12],[104,13,212,13,"caller"],[104,19,212,19],[104,20,212,20,"onJoin"],[104,26,212,26],[104,29,212,29,"callback"],[104,37,212,37],[105,6,213,4],[106,6,214,4],[107,4,214,4],[108,6,214,4,"key"],[108,9,214,4],[109,6,214,4,"value"],[109,11,214,4],[109,13,215,4],[109,22,215,4,"onLeave"],[109,29,215,11,"onLeave"],[109,30,215,12,"callback"],[109,38,215,20],[109,40,215,22],[110,8,216,8],[110,12,216,12],[110,13,216,13,"caller"],[110,19,216,19],[110,20,216,20,"onLeave"],[110,27,216,27],[110,30,216,30,"callback"],[110,38,216,38],[111,6,217,4],[112,6,218,4],[113,4,218,4],[114,6,218,4,"key"],[114,9,218,4],[115,6,218,4,"value"],[115,11,218,4],[115,13,219,4],[115,22,219,4,"onSync"],[115,28,219,10,"onSync"],[115,29,219,11,"callback"],[115,37,219,19],[115,39,219,21],[116,8,220,8],[116,12,220,12],[116,13,220,13,"caller"],[116,19,220,19],[116,20,220,20,"onSync"],[116,26,220,26],[116,29,220,29,"callback"],[116,37,220,37],[117,6,221,4],[118,6,222,4],[119,4,222,4],[120,6,222,4,"key"],[120,9,222,4],[121,6,222,4,"value"],[121,11,222,4],[121,13,223,4],[121,22,223,4,"inPendingSyncState"],[121,40,223,22,"inPendingSyncState"],[121,41,223,22],[121,43,223,25],[122,8,224,8],[122,15,224,15],[122,16,224,16],[122,20,224,20],[122,21,224,21,"joinRef"],[122,28,224,28],[122,32,224,32],[122,36,224,36],[122,37,224,37,"joinRef"],[122,44,224,44],[122,49,224,49],[122,53,224,53],[122,54,224,54,"channel"],[122,61,224,61],[122,62,224,62,"_joinRef"],[122,70,224,70],[122,71,224,71],[122,72,224,72],[123,6,225,4],[124,4,225,5],[125,6,225,5,"key"],[125,9,225,5],[126,6,225,5,"value"],[126,11,225,5],[126,13,86,4],[126,22,86,11,"syncState"],[126,31,86,20,"syncState"],[126,32,86,21,"currentState"],[126,44,86,33],[126,46,86,35,"newState"],[126,54,86,43],[126,56,86,45,"onJoin"],[126,62,86,51],[126,64,86,53,"onLeave"],[126,71,86,60],[126,73,86,62],[127,8,87,8],[127,12,87,14,"state"],[127,17,87,19],[127,20,87,22],[127,24,87,26],[127,25,87,27,"cloneDeep"],[127,34,87,36],[127,35,87,37,"currentState"],[127,47,87,49],[127,48,87,50],[128,8,88,8],[128,12,88,14,"transformedState"],[128,28,88,30],[128,31,88,33],[128,35,88,37],[128,36,88,38,"transformState"],[128,50,88,52],[128,51,88,53,"newState"],[128,59,88,61],[128,60,88,62],[129,8,89,8],[129,12,89,14,"joins"],[129,17,89,19],[129,20,89,22],[129,21,89,23],[129,22,89,24],[130,8,90,8],[130,12,90,14,"leaves"],[130,18,90,20],[130,21,90,23],[130,22,90,24],[130,23,90,25],[131,8,91,8],[131,12,91,12],[131,13,91,13,"map"],[131,16,91,16],[131,17,91,17,"state"],[131,22,91,22],[131,24,91,24],[131,25,91,25,"key"],[131,28,91,28],[131,30,91,30,"presences"],[131,39,91,39],[131,44,91,44],[132,10,92,12],[132,14,92,16],[132,15,92,17,"transformedState"],[132,31,92,33],[132,32,92,34,"key"],[132,35,92,37],[132,36,92,38],[132,38,92,40],[133,12,93,16,"leaves"],[133,18,93,22],[133,19,93,23,"key"],[133,22,93,26],[133,23,93,27],[133,26,93,30,"presences"],[133,35,93,39],[134,10,94,12],[135,8,95,8],[135,9,95,9],[135,10,95,10],[136,8,96,8],[136,12,96,12],[136,13,96,13,"map"],[136,16,96,16],[136,17,96,17,"transformedState"],[136,33,96,33],[136,35,96,35],[136,36,96,36,"key"],[136,39,96,39],[136,41,96,41,"newPresences"],[136,53,96,53],[136,58,96,58],[137,10,97,12],[137,14,97,18,"currentPresences"],[137,30,97,34],[137,33,97,37,"state"],[137,38,97,42],[137,39,97,43,"key"],[137,42,97,46],[137,43,97,47],[138,10,98,12],[138,14,98,16,"currentPresences"],[138,30,98,32],[138,32,98,34],[139,12,99,16],[139,16,99,22,"newPresenceRefs"],[139,31,99,37],[139,34,99,40,"newPresences"],[139,46,99,52],[139,47,99,53,"map"],[139,50,99,56],[139,51,99,58,"m"],[139,52,99,59],[139,56,99,64,"m"],[139,57,99,65],[139,58,99,66,"presence_ref"],[139,70,99,78],[139,71,99,79],[140,12,100,16],[140,16,100,22,"curPresenceRefs"],[140,31,100,37],[140,34,100,40,"currentPresences"],[140,50,100,56],[140,51,100,57,"map"],[140,54,100,60],[140,55,100,62,"m"],[140,56,100,63],[140,60,100,68,"m"],[140,61,100,69],[140,62,100,70,"presence_ref"],[140,74,100,82],[140,75,100,83],[141,12,101,16],[141,16,101,22,"joinedPresences"],[141,31,101,37],[141,34,101,40,"newPresences"],[141,46,101,52],[141,47,101,53,"filter"],[141,53,101,59],[141,54,101,61,"m"],[141,55,101,62],[141,59,101,67,"curPresenceRefs"],[141,74,101,82],[141,75,101,83,"indexOf"],[141,82,101,90],[141,83,101,91,"m"],[141,84,101,92],[141,85,101,93,"presence_ref"],[141,97,101,105],[141,98,101,106],[141,101,101,109],[141,102,101,110],[141,103,101,111],[142,12,102,16],[142,16,102,22,"leftPresences"],[142,29,102,35],[142,32,102,38,"currentPresences"],[142,48,102,54],[142,49,102,55,"filter"],[142,55,102,61],[142,56,102,63,"m"],[142,57,102,64],[142,61,102,69,"newPresenceRefs"],[142,76,102,84],[142,77,102,85,"indexOf"],[142,84,102,92],[142,85,102,93,"m"],[142,86,102,94],[142,87,102,95,"presence_ref"],[142,99,102,107],[142,100,102,108],[142,103,102,111],[142,104,102,112],[142,105,102,113],[143,12,103,16],[143,16,103,20,"joinedPresences"],[143,31,103,35],[143,32,103,36,"length"],[143,38,103,42],[143,41,103,45],[143,42,103,46],[143,44,103,48],[144,14,104,20,"joins"],[144,19,104,25],[144,20,104,26,"key"],[144,23,104,29],[144,24,104,30],[144,27,104,33,"joinedPresences"],[144,42,104,48],[145,12,105,16],[146,12,106,16],[146,16,106,20,"leftPresences"],[146,29,106,33],[146,30,106,34,"length"],[146,36,106,40],[146,39,106,43],[146,40,106,44],[146,42,106,46],[147,14,107,20,"leaves"],[147,20,107,26],[147,21,107,27,"key"],[147,24,107,30],[147,25,107,31],[147,28,107,34,"leftPresences"],[147,41,107,47],[148,12,108,16],[149,10,109,12],[149,11,109,13],[149,17,110,17],[150,12,111,16,"joins"],[150,17,111,21],[150,18,111,22,"key"],[150,21,111,25],[150,22,111,26],[150,25,111,29,"newPresences"],[150,37,111,41],[151,10,112,12],[152,8,113,8],[152,9,113,9],[152,10,113,10],[153,8,114,8],[153,15,114,15],[153,19,114,19],[153,20,114,20,"syncDiff"],[153,28,114,28],[153,29,114,29,"state"],[153,34,114,34],[153,36,114,36],[154,10,114,38,"joins"],[154,15,114,43],[155,10,114,45,"leaves"],[156,8,114,52],[156,9,114,53],[156,11,114,55,"onJoin"],[156,17,114,61],[156,19,114,63,"onLeave"],[156,26,114,70],[156,27,114,71],[157,6,115,4],[158,6,116,4],[159,0,117,0],[160,0,118,0],[161,0,119,0],[162,0,120,0],[163,0,121,0],[164,0,122,0],[165,0,123,0],[166,0,124,0],[167,0,125,0],[168,4,116,4],[169,6,116,4,"key"],[169,9,116,4],[170,6,116,4,"value"],[170,11,116,4],[170,13,126,4],[170,22,126,11,"syncDiff"],[170,30,126,19,"syncDiff"],[170,31,126,20,"state"],[170,36,126,25],[170,38,126,27,"diff"],[170,42,126,31],[170,44,126,33,"onJoin"],[170,50,126,39],[170,52,126,41,"onLeave"],[170,59,126,48],[170,61,126,50],[171,8,127,8],[171,12,127,8,"_joins$leaves"],[171,25,127,8],[171,28,127,34],[172,12,128,12,"joins"],[172,17,128,17],[172,19,128,19],[172,23,128,23],[172,24,128,24,"transformState"],[172,38,128,38],[172,39,128,39,"diff"],[172,43,128,43],[172,44,128,44,"joins"],[172,49,128,49],[172,50,128,50],[173,12,129,12,"leaves"],[173,18,129,18],[173,20,129,20],[173,24,129,24],[173,25,129,25,"transformState"],[173,39,129,39],[173,40,129,40,"diff"],[173,44,129,44],[173,45,129,45,"leaves"],[173,51,129,51],[174,10,130,8],[174,11,130,9],[175,10,127,16,"joins"],[175,15,127,21],[175,18,127,21,"_joins$leaves"],[175,31,127,21],[175,32,127,16,"joins"],[175,37,127,21],[176,10,127,23,"leaves"],[176,16,127,29],[176,19,127,29,"_joins$leaves"],[176,32,127,29],[176,33,127,23,"leaves"],[176,39,127,29],[177,8,131,8],[177,12,131,12],[177,13,131,13,"onJoin"],[177,19,131,19],[177,21,131,21],[178,10,132,12,"onJoin"],[178,16,132,18],[178,19,132,21,"onJoin"],[178,20,132,21],[178,25,132,27],[178,26,132,29],[178,27,132,30],[179,8,133,8],[180,8,134,8],[180,12,134,12],[180,13,134,13,"onLeave"],[180,20,134,20],[180,22,134,22],[181,10,135,12,"onLeave"],[181,17,135,19],[181,20,135,22,"onLeave"],[181,21,135,22],[181,26,135,28],[181,27,135,30],[181,28,135,31],[182,8,136,8],[183,8,137,8],[183,12,137,12],[183,13,137,13,"map"],[183,16,137,16],[183,17,137,17,"joins"],[183,22,137,22],[183,24,137,24],[183,25,137,25,"key"],[183,28,137,28],[183,30,137,30,"newPresences"],[183,42,137,42],[183,47,137,47],[184,10,138,12],[184,14,138,16,"_a"],[184,16,138,18],[185,10,139,12],[185,14,139,18,"currentPresences"],[185,30,139,34],[185,33,139,37],[185,34,139,38,"_a"],[185,36,139,40],[185,39,139,43,"state"],[185,44,139,48],[185,45,139,49,"key"],[185,48,139,52],[185,49,139,53],[185,55,139,59],[185,59,139,63],[185,63,139,67,"_a"],[185,65,139,69],[185,70,139,69,"undefined"],[185,79,139,80],[185,82,139,83,"_a"],[185,84,139,85],[185,87,139,88],[185,89,139,90],[186,10,140,12,"state"],[186,15,140,17],[186,16,140,18,"key"],[186,19,140,21],[186,20,140,22],[186,23,140,25],[186,27,140,29],[186,28,140,30,"cloneDeep"],[186,37,140,39],[186,38,140,40,"newPresences"],[186,50,140,52],[186,51,140,53],[187,10,141,12],[187,14,141,16,"currentPresences"],[187,30,141,32],[187,31,141,33,"length"],[187,37,141,39],[187,40,141,42],[187,41,141,43],[187,43,141,45],[188,12,142,16],[188,16,142,22,"joinedPresenceRefs"],[188,34,142,40],[188,37,142,43,"state"],[188,42,142,48],[188,43,142,49,"key"],[188,46,142,52],[188,47,142,53],[188,48,142,54,"map"],[188,51,142,57],[188,52,142,59,"m"],[188,53,142,60],[188,57,142,65,"m"],[188,58,142,66],[188,59,142,67,"presence_ref"],[188,71,142,79],[188,72,142,80],[189,12,143,16],[189,16,143,22,"curPresences"],[189,28,143,34],[189,31,143,37,"currentPresences"],[189,47,143,53],[189,48,143,54,"filter"],[189,54,143,60],[189,55,143,62,"m"],[189,56,143,63],[189,60,143,68,"joinedPresenceRefs"],[189,78,143,86],[189,79,143,87,"indexOf"],[189,86,143,94],[189,87,143,95,"m"],[189,88,143,96],[189,89,143,97,"presence_ref"],[189,101,143,109],[189,102,143,110],[189,105,143,113],[189,106,143,114],[189,107,143,115],[190,12,144,16,"state"],[190,17,144,21],[190,18,144,22,"key"],[190,21,144,25],[190,22,144,26],[190,23,144,27,"unshift"],[190,30,144,34],[190,31,144,35],[190,34,144,38,"curPresences"],[190,46,144,50],[190,47,144,51],[191,10,145,12],[192,10,146,12,"onJoin"],[192,16,146,18],[192,17,146,19,"key"],[192,20,146,22],[192,22,146,24,"currentPresences"],[192,38,146,40],[192,40,146,42,"newPresences"],[192,52,146,54],[192,53,146,55],[193,8,147,8],[193,9,147,9],[193,10,147,10],[194,8,148,8],[194,12,148,12],[194,13,148,13,"map"],[194,16,148,16],[194,17,148,17,"leaves"],[194,23,148,23],[194,25,148,25],[194,26,148,26,"key"],[194,29,148,29],[194,31,148,31,"leftPresences"],[194,44,148,44],[194,49,148,49],[195,10,149,12],[195,14,149,16,"currentPresences"],[195,30,149,32],[195,33,149,35,"state"],[195,38,149,40],[195,39,149,41,"key"],[195,42,149,44],[195,43,149,45],[196,10,150,12],[196,14,150,16],[196,15,150,17,"currentPresences"],[196,31,150,33],[196,33,151,16],[197,10,152,12],[197,14,152,18,"presenceRefsToRemove"],[197,34,152,38],[197,37,152,41,"leftPresences"],[197,50,152,54],[197,51,152,55,"map"],[197,54,152,58],[197,55,152,60,"m"],[197,56,152,61],[197,60,152,66,"m"],[197,61,152,67],[197,62,152,68,"presence_ref"],[197,74,152,80],[197,75,152,81],[198,10,153,12,"currentPresences"],[198,26,153,28],[198,29,153,31,"currentPresences"],[198,45,153,47],[198,46,153,48,"filter"],[198,52,153,54],[198,53,153,56,"m"],[198,54,153,57],[198,58,153,62,"presenceRefsToRemove"],[198,78,153,82],[198,79,153,83,"indexOf"],[198,86,153,90],[198,87,153,91,"m"],[198,88,153,92],[198,89,153,93,"presence_ref"],[198,101,153,105],[198,102,153,106],[198,105,153,109],[198,106,153,110],[198,107,153,111],[199,10,154,12,"state"],[199,15,154,17],[199,16,154,18,"key"],[199,19,154,21],[199,20,154,22],[199,23,154,25,"currentPresences"],[199,39,154,41],[200,10,155,12,"onLeave"],[200,17,155,19],[200,18,155,20,"key"],[200,21,155,23],[200,23,155,25,"currentPresences"],[200,39,155,41],[200,41,155,43,"leftPresences"],[200,54,155,56],[200,55,155,57],[201,10,156,12],[201,14,156,16,"currentPresences"],[201,30,156,32],[201,31,156,33,"length"],[201,37,156,39],[201,42,156,44],[201,43,156,45],[201,45,157,16],[201,52,157,23,"state"],[201,57,157,28],[201,58,157,29,"key"],[201,61,157,32],[201,62,157,33],[202,8,158,8],[202,9,158,9],[202,10,158,10],[203,8,159,8],[203,15,159,15,"state"],[203,20,159,20],[204,6,160,4],[205,6,161,4],[206,4,161,4],[207,6,161,4,"key"],[207,9,161,4],[208,6,161,4,"value"],[208,11,161,4],[208,13,162,4],[208,22,162,11,"map"],[208,25,162,14,"map"],[208,26,162,15,"obj"],[208,29,162,18],[208,31,162,20,"func"],[208,35,162,24],[208,37,162,26],[209,8,163,8],[209,15,163,15,"Object"],[209,21,163,21],[209,22,163,22,"getOwnPropertyNames"],[209,41,163,41],[209,42,163,42,"obj"],[209,45,163,45],[209,46,163,46],[209,47,163,47,"map"],[209,50,163,50],[209,51,163,52,"key"],[209,54,163,55],[209,58,163,60,"func"],[209,62,163,64],[209,63,163,65,"key"],[209,66,163,68],[209,68,163,70,"obj"],[209,71,163,73],[209,72,163,74,"key"],[209,75,163,77],[209,76,163,78],[209,77,163,79],[209,78,163,80],[210,6,164,4],[211,6,165,4],[212,0,166,0],[213,0,167,0],[214,0,168,0],[215,0,169,0],[216,0,170,0],[217,0,171,0],[218,0,172,0],[219,0,173,0],[220,0,174,0],[221,0,175,0],[222,0,176,0],[223,0,177,0],[224,0,178,0],[225,0,179,0],[226,0,180,0],[227,0,181,0],[228,0,182,0],[229,0,183,0],[230,0,184,0],[231,0,185,0],[232,0,186,0],[233,0,187,0],[234,4,165,4],[235,6,165,4,"key"],[235,9,165,4],[236,6,165,4,"value"],[236,11,165,4],[236,13,188,4],[236,22,188,11,"transformState"],[236,36,188,25,"transformState"],[236,37,188,26,"state"],[236,42,188,31],[236,44,188,33],[237,8,189,8,"state"],[237,13,189,13],[237,16,189,16],[237,20,189,20],[237,21,189,21,"cloneDeep"],[237,30,189,30],[237,31,189,31,"state"],[237,36,189,36],[237,37,189,37],[238,8,190,8],[238,15,190,15,"Object"],[238,21,190,21],[238,22,190,22,"getOwnPropertyNames"],[238,41,190,41],[238,42,190,42,"state"],[238,47,190,47],[238,48,190,48],[238,49,190,49,"reduce"],[238,55,190,55],[238,56,190,56],[238,57,190,57,"newState"],[238,65,190,65],[238,67,190,67,"key"],[238,70,190,70],[238,75,190,75],[239,10,191,12],[239,14,191,18,"presences"],[239,23,191,27],[239,26,191,30,"state"],[239,31,191,35],[239,32,191,36,"key"],[239,35,191,39],[239,36,191,40],[240,10,192,12],[240,14,192,16],[240,21,192,23],[240,25,192,27,"presences"],[240,34,192,36],[240,36,192,38],[241,12,193,16,"newState"],[241,20,193,24],[241,21,193,25,"key"],[241,24,193,28],[241,25,193,29],[241,28,193,32,"presences"],[241,37,193,41],[241,38,193,42,"metas"],[241,43,193,47],[241,44,193,48,"map"],[241,47,193,51],[241,48,193,53,"presence"],[241,56,193,61],[241,60,193,66],[242,14,194,20,"presence"],[242,22,194,28],[242,23,194,29],[242,37,194,43],[242,38,194,44],[242,41,194,47,"presence"],[242,49,194,55],[242,50,194,56],[242,59,194,65],[242,60,194,66],[243,14,195,20],[243,21,195,27,"presence"],[243,29,195,35],[243,30,195,36],[243,39,195,45],[243,40,195,46],[244,14,196,20],[244,21,196,27,"presence"],[244,29,196,35],[244,30,196,36],[244,44,196,50],[244,45,196,51],[245,14,197,20],[245,21,197,27,"presence"],[245,29,197,35],[246,12,198,16],[246,13,198,17],[246,14,198,18],[247,10,199,12],[247,11,199,13],[247,17,200,17],[248,12,201,16,"newState"],[248,20,201,24],[248,21,201,25,"key"],[248,24,201,28],[248,25,201,29],[248,28,201,32,"presences"],[248,37,201,41],[249,10,202,12],[250,10,203,12],[250,17,203,19,"newState"],[250,25,203,27],[251,8,204,8],[251,9,204,9],[251,11,204,11],[251,12,204,12],[251,13,204,13],[251,14,204,14],[252,6,205,4],[253,6,206,4],[254,4,206,4],[255,6,206,4,"key"],[255,9,206,4],[256,6,206,4,"value"],[256,11,206,4],[256,13,207,4],[256,22,207,11,"cloneDeep"],[256,31,207,20,"cloneDeep"],[256,32,207,21,"obj"],[256,35,207,24],[256,37,207,26],[257,8,208,8],[257,15,208,15,"JSON"],[257,19,208,19],[257,20,208,20,"parse"],[257,25,208,25],[257,26,208,26,"JSON"],[257,30,208,30],[257,31,208,31,"stringify"],[257,40,208,40],[257,41,208,41,"obj"],[257,44,208,44],[257,45,208,45],[257,46,208,46],[258,6,209,4],[259,4,209,5],[260,2,209,5],[261,2,227,0,"exports"],[261,9,227,7],[261,10,227,8,"default"],[261,17,227,15],[261,20,227,18,"RealtimePresence"],[261,36,227,34],[262,0,227,35],[262,3]],"functionMap":{"names":["<global>","<anonymous>","RealtimePresence","constructor","caller.onJoin","caller.onLeave","caller.onSync","channel._on$argument_2","pendingDiffs.forEach$argument_0","onJoin$argument_0","onLeave$argument_0","onSync$argument_0","syncState","map$argument_1","newPresences.map$argument_0","currentPresences.map$argument_0","newPresences.filter$argument_0","currentPresences.filter$argument_0","syncDiff","onJoin","onLeave","state.key.map$argument_0","leftPresences.map$argument_0","map","Object.getOwnPropertyNames.map$argument_0","transformState","Object.getOwnPropertyNames.reduce$argument_0","presences.metas.map$argument_0","cloneDeep","onSync","inPendingSyncState"],"mappings":"AAA;CCQ;CDI;AEC;ICQ;oBCM,SD;qBEC,SF;oBGC,SH;2CIM;sCCI;aDE;SJG;0CIC;SJS;oBMC;SNO;qBOC;SPO;oBQC;SRE;KDC;IUW;wBCK;SDI;mCCC;yDCG,qBD;6DEC,qBF;4DGC,kDH;8DIC,kDJ;SDW;KVE;IgBW;qBCM,SD;sBEG,SF;wBLE;0DQK,qBR;6DIC,qDJ;SKI;yBLC;2DSI,qBT;uDIC,uDJ;SKK;KhBE;IqBE;mDCC,4BD;KrBC;IuBwB;wDCE;oDCG;iBDK;SDM;KvBC;I0BE;K1BE;IiBE;KjBE;IkBE;KlBE;I2BE;K3BE;I4BE;K5BE;CFC"}},"type":"js/module"}]}