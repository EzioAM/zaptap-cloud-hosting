{"dependencies":[{"name":"./attributes.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"UMlNobrmssIvLA9C9D03xjrDrQE=","exportNames":["*"]}},{"name":"./pseudo-selectors/index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":68,"index":118}}],"key":"49VQY7YnxKSpmlVxeSeheCz6Dt8=","exportNames":["*"]}},{"name":"css-what","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":119},"end":{"line":3,"column":40,"index":159}}],"key":"FEuNpzzBFcweP99ydYcGgGm7g9g=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.compileGeneralSelector = compileGeneralSelector;\n  var _attributes = require(_dependencyMap[0], \"./attributes.js\");\n  var _index = require(_dependencyMap[1], \"./pseudo-selectors/index.js\");\n  var _cssWhat = require(_dependencyMap[2], \"css-what\");\n  function getElementParent(node, adapter) {\n    var parent = adapter.getParent(node);\n    if (parent && adapter.isTag(parent)) {\n      return parent;\n    }\n    return null;\n  }\n  /*\n   * All available rules\n   */\n  function compileGeneralSelector(next, selector, options, context, compileToken) {\n    var adapter = options.adapter,\n      equals = options.equals;\n    switch (selector.type) {\n      case _cssWhat.SelectorType.PseudoElement:\n        {\n          throw new Error(\"Pseudo-elements are not supported by css-select\");\n        }\n      case _cssWhat.SelectorType.ColumnCombinator:\n        {\n          throw new Error(\"Column combinators are not yet supported by css-select\");\n        }\n      case _cssWhat.SelectorType.Attribute:\n        {\n          if (selector.namespace != null) {\n            throw new Error(\"Namespaced attributes are not yet supported by css-select\");\n          }\n          if (!options.xmlMode || options.lowerCaseAttributeNames) {\n            selector.name = selector.name.toLowerCase();\n          }\n          return _attributes.attributeRules[selector.action](next, selector, options);\n        }\n      case _cssWhat.SelectorType.Pseudo:\n        {\n          return (0, _index.compilePseudoSelector)(next, selector, options, context, compileToken);\n        }\n      // Tags\n      case _cssWhat.SelectorType.Tag:\n        {\n          if (selector.namespace != null) {\n            throw new Error(\"Namespaced tag names are not yet supported by css-select\");\n          }\n          var name = selector.name;\n          if (!options.xmlMode || options.lowerCaseTags) {\n            name = name.toLowerCase();\n          }\n          return function tag(elem) {\n            return adapter.getName(elem) === name && next(elem);\n          };\n        }\n      // Traversal\n      case _cssWhat.SelectorType.Descendant:\n        {\n          if (options.cacheResults === false || typeof WeakSet === \"undefined\") {\n            return function descendant(elem) {\n              var current = elem;\n              while (current = getElementParent(current, adapter)) {\n                if (next(current)) {\n                  return true;\n                }\n              }\n              return false;\n            };\n          }\n          // @ts-expect-error `ElementNode` is not extending object\n          var isFalseCache = new WeakSet();\n          return function cachedDescendant(elem) {\n            var current = elem;\n            while (current = getElementParent(current, adapter)) {\n              if (!isFalseCache.has(current)) {\n                if (adapter.isTag(current) && next(current)) {\n                  return true;\n                }\n                isFalseCache.add(current);\n              }\n            }\n            return false;\n          };\n        }\n      case \"_flexibleDescendant\":\n        {\n          // Include element itself, only used while querying an array\n          return function flexibleDescendant(elem) {\n            var current = elem;\n            do {\n              if (next(current)) return true;\n            } while (current = getElementParent(current, adapter));\n            return false;\n          };\n        }\n      case _cssWhat.SelectorType.Parent:\n        {\n          return function parent(elem) {\n            return adapter.getChildren(elem).some(function (elem) {\n              return adapter.isTag(elem) && next(elem);\n            });\n          };\n        }\n      case _cssWhat.SelectorType.Child:\n        {\n          return function child(elem) {\n            var parent = adapter.getParent(elem);\n            return parent != null && adapter.isTag(parent) && next(parent);\n          };\n        }\n      case _cssWhat.SelectorType.Sibling:\n        {\n          return function sibling(elem) {\n            var siblings = adapter.getSiblings(elem);\n            for (var i = 0; i < siblings.length; i++) {\n              var currentSibling = siblings[i];\n              if (equals(elem, currentSibling)) break;\n              if (adapter.isTag(currentSibling) && next(currentSibling)) {\n                return true;\n              }\n            }\n            return false;\n          };\n        }\n      case _cssWhat.SelectorType.Adjacent:\n        {\n          if (adapter.prevElementSibling) {\n            return function adjacent(elem) {\n              var previous = adapter.prevElementSibling(elem);\n              return previous != null && next(previous);\n            };\n          }\n          return function adjacent(elem) {\n            var siblings = adapter.getSiblings(elem);\n            var lastElement;\n            for (var i = 0; i < siblings.length; i++) {\n              var currentSibling = siblings[i];\n              if (equals(elem, currentSibling)) break;\n              if (adapter.isTag(currentSibling)) {\n                lastElement = currentSibling;\n              }\n            }\n            return !!lastElement && next(lastElement);\n          };\n        }\n      case _cssWhat.SelectorType.Universal:\n        {\n          if (selector.namespace != null && selector.namespace !== \"*\") {\n            throw new Error(\"Namespaced universal selectors are not yet supported by css-select\");\n          }\n          return next;\n        }\n    }\n  }\n});","lineCount":158,"map":[[6,2,1,0],[6,6,1,0,"_attributes"],[6,17,1,0],[6,20,1,0,"require"],[6,27,1,0],[6,28,1,0,"_dependencyMap"],[6,42,1,0],[7,2,2,0],[7,6,2,0,"_index"],[7,12,2,0],[7,15,2,0,"require"],[7,22,2,0],[7,23,2,0,"_dependencyMap"],[7,37,2,0],[8,2,3,0],[8,6,3,0,"_cssWhat"],[8,14,3,0],[8,17,3,0,"require"],[8,24,3,0],[8,25,3,0,"_dependencyMap"],[8,39,3,0],[9,2,4,0],[9,11,4,9,"getElementParent"],[9,27,4,25,"getElementParent"],[9,28,4,26,"node"],[9,32,4,30],[9,34,4,32,"adapter"],[9,41,4,39],[9,43,4,41],[10,4,5,4],[10,8,5,10,"parent"],[10,14,5,16],[10,17,5,19,"adapter"],[10,24,5,26],[10,25,5,27,"getParent"],[10,34,5,36],[10,35,5,37,"node"],[10,39,5,41],[10,40,5,42],[11,4,6,4],[11,8,6,8,"parent"],[11,14,6,14],[11,18,6,18,"adapter"],[11,25,6,25],[11,26,6,26,"isTag"],[11,31,6,31],[11,32,6,32,"parent"],[11,38,6,38],[11,39,6,39],[11,41,6,41],[12,6,7,8],[12,13,7,15,"parent"],[12,19,7,21],[13,4,8,4],[14,4,9,4],[14,11,9,11],[14,15,9,15],[15,2,10,0],[16,2,11,0],[17,0,12,0],[18,0,13,0],[19,2,14,7],[19,11,14,16,"compileGeneralSelector"],[19,33,14,38,"compileGeneralSelector"],[19,34,14,39,"next"],[19,38,14,43],[19,40,14,45,"selector"],[19,48,14,53],[19,50,14,55,"options"],[19,57,14,62],[19,59,14,64,"context"],[19,66,14,71],[19,68,14,73,"compileToken"],[19,80,14,85],[19,82,14,87],[20,4,15,4],[20,8,15,12,"adapter"],[20,15,15,19],[20,18,15,32,"options"],[20,25,15,39],[20,26,15,12,"adapter"],[20,33,15,19],[21,6,15,21,"equals"],[21,12,15,27],[21,15,15,32,"options"],[21,22,15,39],[21,23,15,21,"equals"],[21,29,15,27],[22,4,16,4],[22,12,16,12,"selector"],[22,20,16,20],[22,21,16,21,"type"],[22,25,16,25],[23,6,17,8],[23,11,17,13,"SelectorType"],[23,32,17,25],[23,33,17,26,"PseudoElement"],[23,46,17,39],[24,8,17,41],[25,10,18,12],[25,16,18,18],[25,20,18,22,"Error"],[25,25,18,27],[25,26,18,28],[25,75,18,77],[25,76,18,78],[26,8,19,8],[27,6,20,8],[27,11,20,13,"SelectorType"],[27,32,20,25],[27,33,20,26,"ColumnCombinator"],[27,49,20,42],[28,8,20,44],[29,10,21,12],[29,16,21,18],[29,20,21,22,"Error"],[29,25,21,27],[29,26,21,28],[29,82,21,84],[29,83,21,85],[30,8,22,8],[31,6,23,8],[31,11,23,13,"SelectorType"],[31,32,23,25],[31,33,23,26,"Attribute"],[31,42,23,35],[32,8,23,37],[33,10,24,12],[33,14,24,16,"selector"],[33,22,24,24],[33,23,24,25,"namespace"],[33,32,24,34],[33,36,24,38],[33,40,24,42],[33,42,24,44],[34,12,25,16],[34,18,25,22],[34,22,25,26,"Error"],[34,27,25,31],[34,28,25,32],[34,87,25,91],[34,88,25,92],[35,10,26,12],[36,10,27,12],[36,14,27,16],[36,15,27,17,"options"],[36,22,27,24],[36,23,27,25,"xmlMode"],[36,30,27,32],[36,34,27,36,"options"],[36,41,27,43],[36,42,27,44,"lowerCaseAttributeNames"],[36,65,27,67],[36,67,27,69],[37,12,28,16,"selector"],[37,20,28,24],[37,21,28,25,"name"],[37,25,28,29],[37,28,28,32,"selector"],[37,36,28,40],[37,37,28,41,"name"],[37,41,28,45],[37,42,28,46,"toLowerCase"],[37,53,28,57],[37,54,28,58],[37,55,28,59],[38,10,29,12],[39,10,30,12],[39,17,30,19,"attributeRules"],[39,43,30,33],[39,44,30,34,"selector"],[39,52,30,42],[39,53,30,43,"action"],[39,59,30,49],[39,60,30,50],[39,61,30,51,"next"],[39,65,30,55],[39,67,30,57,"selector"],[39,75,30,65],[39,77,30,67,"options"],[39,84,30,74],[39,85,30,75],[40,8,31,8],[41,6,32,8],[41,11,32,13,"SelectorType"],[41,32,32,25],[41,33,32,26,"Pseudo"],[41,39,32,32],[42,8,32,34],[43,10,33,12],[43,17,33,19],[43,21,33,19,"compilePseudoSelector"],[43,49,33,40],[43,51,33,41,"next"],[43,55,33,45],[43,57,33,47,"selector"],[43,65,33,55],[43,67,33,57,"options"],[43,74,33,64],[43,76,33,66,"context"],[43,83,33,73],[43,85,33,75,"compileToken"],[43,97,33,87],[43,98,33,88],[44,8,34,8],[45,6,35,8],[46,6,36,8],[46,11,36,13,"SelectorType"],[46,32,36,25],[46,33,36,26,"Tag"],[46,36,36,29],[47,8,36,31],[48,10,37,12],[48,14,37,16,"selector"],[48,22,37,24],[48,23,37,25,"namespace"],[48,32,37,34],[48,36,37,38],[48,40,37,42],[48,42,37,44],[49,12,38,16],[49,18,38,22],[49,22,38,26,"Error"],[49,27,38,31],[49,28,38,32],[49,86,38,90],[49,87,38,91],[50,10,39,12],[51,10,40,12],[51,14,40,18,"name"],[51,18,40,22],[51,21,40,27,"selector"],[51,29,40,35],[51,30,40,18,"name"],[51,34,40,22],[52,10,41,12],[52,14,41,16],[52,15,41,17,"options"],[52,22,41,24],[52,23,41,25,"xmlMode"],[52,30,41,32],[52,34,41,36,"options"],[52,41,41,43],[52,42,41,44,"lowerCaseTags"],[52,55,41,57],[52,57,41,59],[53,12,42,16,"name"],[53,16,42,20],[53,19,42,23,"name"],[53,23,42,27],[53,24,42,28,"toLowerCase"],[53,35,42,39],[53,36,42,40],[53,37,42,41],[54,10,43,12],[55,10,44,12],[55,17,44,19],[55,26,44,28,"tag"],[55,29,44,31,"tag"],[55,30,44,32,"elem"],[55,34,44,36],[55,36,44,38],[56,12,45,16],[56,19,45,23,"adapter"],[56,26,45,30],[56,27,45,31,"getName"],[56,34,45,38],[56,35,45,39,"elem"],[56,39,45,43],[56,40,45,44],[56,45,45,49,"name"],[56,49,45,53],[56,53,45,57,"next"],[56,57,45,61],[56,58,45,62,"elem"],[56,62,45,66],[56,63,45,67],[57,10,46,12],[57,11,46,13],[58,8,47,8],[59,6,48,8],[60,6,49,8],[60,11,49,13,"SelectorType"],[60,32,49,25],[60,33,49,26,"Descendant"],[60,43,49,36],[61,8,49,38],[62,10,50,12],[62,14,50,16,"options"],[62,21,50,23],[62,22,50,24,"cacheResults"],[62,34,50,36],[62,39,50,41],[62,44,50,46],[62,48,51,16],[62,55,51,23,"WeakSet"],[62,62,51,30],[62,67,51,35],[62,78,51,46],[62,80,51,48],[63,12,52,16],[63,19,52,23],[63,28,52,32,"descendant"],[63,38,52,42,"descendant"],[63,39,52,43,"elem"],[63,43,52,47],[63,45,52,49],[64,14,53,20],[64,18,53,24,"current"],[64,25,53,31],[64,28,53,34,"elem"],[64,32,53,38],[65,14,54,20],[65,21,54,28,"current"],[65,28,54,35],[65,31,54,38,"getElementParent"],[65,47,54,54],[65,48,54,55,"current"],[65,55,54,62],[65,57,54,64,"adapter"],[65,64,54,71],[65,65,54,72],[65,67,54,75],[66,16,55,24],[66,20,55,28,"next"],[66,24,55,32],[66,25,55,33,"current"],[66,32,55,40],[66,33,55,41],[66,35,55,43],[67,18,56,28],[67,25,56,35],[67,29,56,39],[68,16,57,24],[69,14,58,20],[70,14,59,20],[70,21,59,27],[70,26,59,32],[71,12,60,16],[71,13,60,17],[72,10,61,12],[73,10,62,12],[74,10,63,12],[74,14,63,18,"isFalseCache"],[74,26,63,30],[74,29,63,33],[74,33,63,37,"WeakSet"],[74,40,63,44],[74,41,63,45],[74,42,63,46],[75,10,64,12],[75,17,64,19],[75,26,64,28,"cachedDescendant"],[75,42,64,44,"cachedDescendant"],[75,43,64,45,"elem"],[75,47,64,49],[75,49,64,51],[76,12,65,16],[76,16,65,20,"current"],[76,23,65,27],[76,26,65,30,"elem"],[76,30,65,34],[77,12,66,16],[77,19,66,24,"current"],[77,26,66,31],[77,29,66,34,"getElementParent"],[77,45,66,50],[77,46,66,51,"current"],[77,53,66,58],[77,55,66,60,"adapter"],[77,62,66,67],[77,63,66,68],[77,65,66,71],[78,14,67,20],[78,18,67,24],[78,19,67,25,"isFalseCache"],[78,31,67,37],[78,32,67,38,"has"],[78,35,67,41],[78,36,67,42,"current"],[78,43,67,49],[78,44,67,50],[78,46,67,52],[79,16,68,24],[79,20,68,28,"adapter"],[79,27,68,35],[79,28,68,36,"isTag"],[79,33,68,41],[79,34,68,42,"current"],[79,41,68,49],[79,42,68,50],[79,46,68,54,"next"],[79,50,68,58],[79,51,68,59,"current"],[79,58,68,66],[79,59,68,67],[79,61,68,69],[80,18,69,28],[80,25,69,35],[80,29,69,39],[81,16,70,24],[82,16,71,24,"isFalseCache"],[82,28,71,36],[82,29,71,37,"add"],[82,32,71,40],[82,33,71,41,"current"],[82,40,71,48],[82,41,71,49],[83,14,72,20],[84,12,73,16],[85,12,74,16],[85,19,74,23],[85,24,74,28],[86,10,75,12],[86,11,75,13],[87,8,76,8],[88,6,77,8],[88,11,77,13],[88,32,77,34],[89,8,77,36],[90,10,78,12],[91,10,79,12],[91,17,79,19],[91,26,79,28,"flexibleDescendant"],[91,44,79,46,"flexibleDescendant"],[91,45,79,47,"elem"],[91,49,79,51],[91,51,79,53],[92,12,80,16],[92,16,80,20,"current"],[92,23,80,27],[92,26,80,30,"elem"],[92,30,80,34],[93,12,81,16],[93,15,81,19],[94,14,82,20],[94,18,82,24,"next"],[94,22,82,28],[94,23,82,29,"current"],[94,30,82,36],[94,31,82,37],[94,33,83,24],[94,40,83,31],[94,44,83,35],[95,12,84,16],[95,13,84,17],[95,21,84,26,"current"],[95,28,84,33],[95,31,84,36,"getElementParent"],[95,47,84,52],[95,48,84,53,"current"],[95,55,84,60],[95,57,84,62,"adapter"],[95,64,84,69],[95,65,84,70],[96,12,85,16],[96,19,85,23],[96,24,85,28],[97,10,86,12],[97,11,86,13],[98,8,87,8],[99,6,88,8],[99,11,88,13,"SelectorType"],[99,32,88,25],[99,33,88,26,"Parent"],[99,39,88,32],[100,8,88,34],[101,10,89,12],[101,17,89,19],[101,26,89,28,"parent"],[101,32,89,34,"parent"],[101,33,89,35,"elem"],[101,37,89,39],[101,39,89,41],[102,12,90,16],[102,19,90,23,"adapter"],[102,26,90,30],[102,27,91,21,"getChildren"],[102,38,91,32],[102,39,91,33,"elem"],[102,43,91,37],[102,44,91,38],[102,45,92,21,"some"],[102,49,92,25],[102,50,92,26],[102,60,92,27,"elem"],[102,64,92,31],[103,14,92,31],[103,21,92,36,"adapter"],[103,28,92,43],[103,29,92,44,"isTag"],[103,34,92,49],[103,35,92,50,"elem"],[103,39,92,54],[103,40,92,55],[103,44,92,59,"next"],[103,48,92,63],[103,49,92,64,"elem"],[103,53,92,68],[103,54,92,69],[104,12,92,69],[104,14,92,70],[105,10,93,12],[105,11,93,13],[106,8,94,8],[107,6,95,8],[107,11,95,13,"SelectorType"],[107,32,95,25],[107,33,95,26,"Child"],[107,38,95,31],[108,8,95,33],[109,10,96,12],[109,17,96,19],[109,26,96,28,"child"],[109,31,96,33,"child"],[109,32,96,34,"elem"],[109,36,96,38],[109,38,96,40],[110,12,97,16],[110,16,97,22,"parent"],[110,22,97,28],[110,25,97,31,"adapter"],[110,32,97,38],[110,33,97,39,"getParent"],[110,42,97,48],[110,43,97,49,"elem"],[110,47,97,53],[110,48,97,54],[111,12,98,16],[111,19,98,23,"parent"],[111,25,98,29],[111,29,98,33],[111,33,98,37],[111,37,98,41,"adapter"],[111,44,98,48],[111,45,98,49,"isTag"],[111,50,98,54],[111,51,98,55,"parent"],[111,57,98,61],[111,58,98,62],[111,62,98,66,"next"],[111,66,98,70],[111,67,98,71,"parent"],[111,73,98,77],[111,74,98,78],[112,10,99,12],[112,11,99,13],[113,8,100,8],[114,6,101,8],[114,11,101,13,"SelectorType"],[114,32,101,25],[114,33,101,26,"Sibling"],[114,40,101,33],[115,8,101,35],[116,10,102,12],[116,17,102,19],[116,26,102,28,"sibling"],[116,33,102,35,"sibling"],[116,34,102,36,"elem"],[116,38,102,40],[116,40,102,42],[117,12,103,16],[117,16,103,22,"siblings"],[117,24,103,30],[117,27,103,33,"adapter"],[117,34,103,40],[117,35,103,41,"getSiblings"],[117,46,103,52],[117,47,103,53,"elem"],[117,51,103,57],[117,52,103,58],[118,12,104,16],[118,17,104,21],[118,21,104,25,"i"],[118,22,104,26],[118,25,104,29],[118,26,104,30],[118,28,104,32,"i"],[118,29,104,33],[118,32,104,36,"siblings"],[118,40,104,44],[118,41,104,45,"length"],[118,47,104,51],[118,49,104,53,"i"],[118,50,104,54],[118,52,104,56],[118,54,104,58],[119,14,105,20],[119,18,105,26,"currentSibling"],[119,32,105,40],[119,35,105,43,"siblings"],[119,43,105,51],[119,44,105,52,"i"],[119,45,105,53],[119,46,105,54],[120,14,106,20],[120,18,106,24,"equals"],[120,24,106,30],[120,25,106,31,"elem"],[120,29,106,35],[120,31,106,37,"currentSibling"],[120,45,106,51],[120,46,106,52],[120,48,107,24],[121,14,108,20],[121,18,108,24,"adapter"],[121,25,108,31],[121,26,108,32,"isTag"],[121,31,108,37],[121,32,108,38,"currentSibling"],[121,46,108,52],[121,47,108,53],[121,51,108,57,"next"],[121,55,108,61],[121,56,108,62,"currentSibling"],[121,70,108,76],[121,71,108,77],[121,73,108,79],[122,16,109,24],[122,23,109,31],[122,27,109,35],[123,14,110,20],[124,12,111,16],[125,12,112,16],[125,19,112,23],[125,24,112,28],[126,10,113,12],[126,11,113,13],[127,8,114,8],[128,6,115,8],[128,11,115,13,"SelectorType"],[128,32,115,25],[128,33,115,26,"Adjacent"],[128,41,115,34],[129,8,115,36],[130,10,116,12],[130,14,116,16,"adapter"],[130,21,116,23],[130,22,116,24,"prevElementSibling"],[130,40,116,42],[130,42,116,44],[131,12,117,16],[131,19,117,23],[131,28,117,32,"adjacent"],[131,36,117,40,"adjacent"],[131,37,117,41,"elem"],[131,41,117,45],[131,43,117,47],[132,14,118,20],[132,18,118,26,"previous"],[132,26,118,34],[132,29,118,37,"adapter"],[132,36,118,44],[132,37,118,45,"prevElementSibling"],[132,55,118,63],[132,56,118,64,"elem"],[132,60,118,68],[132,61,118,69],[133,14,119,20],[133,21,119,27,"previous"],[133,29,119,35],[133,33,119,39],[133,37,119,43],[133,41,119,47,"next"],[133,45,119,51],[133,46,119,52,"previous"],[133,54,119,60],[133,55,119,61],[134,12,120,16],[134,13,120,17],[135,10,121,12],[136,10,122,12],[136,17,122,19],[136,26,122,28,"adjacent"],[136,34,122,36,"adjacent"],[136,35,122,37,"elem"],[136,39,122,41],[136,41,122,43],[137,12,123,16],[137,16,123,22,"siblings"],[137,24,123,30],[137,27,123,33,"adapter"],[137,34,123,40],[137,35,123,41,"getSiblings"],[137,46,123,52],[137,47,123,53,"elem"],[137,51,123,57],[137,52,123,58],[138,12,124,16],[138,16,124,20,"lastElement"],[138,27,124,31],[139,12,125,16],[139,17,125,21],[139,21,125,25,"i"],[139,22,125,26],[139,25,125,29],[139,26,125,30],[139,28,125,32,"i"],[139,29,125,33],[139,32,125,36,"siblings"],[139,40,125,44],[139,41,125,45,"length"],[139,47,125,51],[139,49,125,53,"i"],[139,50,125,54],[139,52,125,56],[139,54,125,58],[140,14,126,20],[140,18,126,26,"currentSibling"],[140,32,126,40],[140,35,126,43,"siblings"],[140,43,126,51],[140,44,126,52,"i"],[140,45,126,53],[140,46,126,54],[141,14,127,20],[141,18,127,24,"equals"],[141,24,127,30],[141,25,127,31,"elem"],[141,29,127,35],[141,31,127,37,"currentSibling"],[141,45,127,51],[141,46,127,52],[141,48,128,24],[142,14,129,20],[142,18,129,24,"adapter"],[142,25,129,31],[142,26,129,32,"isTag"],[142,31,129,37],[142,32,129,38,"currentSibling"],[142,46,129,52],[142,47,129,53],[142,49,129,55],[143,16,130,24,"lastElement"],[143,27,130,35],[143,30,130,38,"currentSibling"],[143,44,130,52],[144,14,131,20],[145,12,132,16],[146,12,133,16],[146,19,133,23],[146,20,133,24],[146,21,133,25,"lastElement"],[146,32,133,36],[146,36,133,40,"next"],[146,40,133,44],[146,41,133,45,"lastElement"],[146,52,133,56],[146,53,133,57],[147,10,134,12],[147,11,134,13],[148,8,135,8],[149,6,136,8],[149,11,136,13,"SelectorType"],[149,32,136,25],[149,33,136,26,"Universal"],[149,42,136,35],[150,8,136,37],[151,10,137,12],[151,14,137,16,"selector"],[151,22,137,24],[151,23,137,25,"namespace"],[151,32,137,34],[151,36,137,38],[151,40,137,42],[151,44,137,46,"selector"],[151,52,137,54],[151,53,137,55,"namespace"],[151,62,137,64],[151,67,137,69],[151,70,137,72],[151,72,137,74],[152,12,138,16],[152,18,138,22],[152,22,138,26,"Error"],[152,27,138,31],[152,28,138,32],[152,96,138,100],[152,97,138,101],[153,10,139,12],[154,10,140,12],[154,17,140,19,"next"],[154,21,140,23],[155,8,141,8],[156,4,142,4],[157,2,143,0],[158,0,143,1],[158,3]],"functionMap":{"names":["<global>","getElementParent","compileGeneralSelector","tag","descendant","cachedDescendant","flexibleDescendant","parent","adapter.getChildren.some$argument_0","child","sibling","adjacent"],"mappings":"AAA;ACG;CDM;OEI;mBC8B;aDE;uBEM;iBFQ;mBGI;aHW;mBII;aJO;mBKG;0BCG,2CD;aLC;mBOG;aPG;mBQG;aRW;uBSI;iBTG;mBSE;aTY;CFS"}},"type":"js/module"}]}