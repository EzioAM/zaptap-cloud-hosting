{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"query-string","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":44,"index":59}}],"key":"Tk6zkk+/XfK89igjx1MNWAcG1Q8=","exportNames":["*"]}},{"name":"./getPatternParts.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":60},"end":{"line":4,"column":55,"index":115}}],"key":"ZBgxhB8YmJlp1KxhfM5ocx9xUB0=","exportNames":["*"]}},{"name":"./validatePathConfig.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":116},"end":{"line":5,"column":61,"index":177}}],"key":"zoUaUuxQP5qPvRrno+lraXgTGfI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getPathFromState = getPathFromState;\n  var _toConsumableArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\"));\n  var queryString = _interopRequireWildcard(require(_dependencyMap[3], \"query-string\"));\n  var _getPatternParts = require(_dependencyMap[4], \"./getPatternParts.js\");\n  var _validatePathConfig = require(_dependencyMap[5], \"./validatePathConfig.js\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  var _getActiveRoute = function getActiveRoute(state) {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n    if (route.state) {\n      return _getActiveRoute(route.state);\n    }\n    return route;\n  };\n  var cachedNormalizedConfigs = new WeakMap();\n  var getNormalizedConfigs = function getNormalizedConfigs(options) {\n    if (!(options != null && options.screens)) return {};\n    var cached = cachedNormalizedConfigs.get(options == null ? void 0 : options.screens);\n    if (cached) return cached;\n    var normalizedConfigs = createNormalizedConfigs(options.screens);\n    cachedNormalizedConfigs.set(options.screens, normalizedConfigs);\n    return normalizedConfigs;\n  };\n\n  /**\n   * Utility to serialize a navigation state object to a path string.\n   *\n   * @example\n   * ```js\n   * getPathFromState(\n   *   {\n   *     routes: [\n   *       {\n   *         name: 'Chat',\n   *         params: { author: 'Jane', id: 42 },\n   *       },\n   *     ],\n   *   },\n   *   {\n   *     screens: {\n   *       Chat: {\n   *         path: 'chat/:author/:id',\n   *         stringify: { author: author => author.toLowerCase() }\n   *       }\n   *     }\n   *   }\n   * )\n   * ```\n   *\n   * @param state Navigation state to serialize.\n   * @param options Extra options to fine-tune how to serialize the path.\n   * @returns Path representing the state, e.g. /foo/bar?count=42.\n   */\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(`Got '${String(state)}' for the navigation state. You must pass a valid state object.`);\n    }\n    if (options) {\n      (0, _validatePathConfig.validatePathConfig)(options);\n    }\n    var configs = getNormalizedConfigs(options);\n    var path = '/';\n    var current = state;\n    var allParams = {};\n    var _loop = function _loop() {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var parts;\n      var focusedParams;\n      var currentOptions = configs;\n      var focusedRoute = _getActiveRoute(state);\n\n      // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n      var nestedRouteNames = [];\n      var hasNext = true;\n      var _loop2 = function _loop2() {\n        parts = currentOptions[route.name].parts;\n        nestedRouteNames.push(route.name);\n        if (route.params) {\n          var _parts2;\n          var _options = currentOptions[route.name];\n          var currentParams = Object.fromEntries(Object.entries(route.params).map(function (_ref4) {\n            var _options$stringify$ke, _options$stringify;\n            var _ref5 = (0, _slicedToArray2.default)(_ref4, 2),\n              key = _ref5[0],\n              value = _ref5[1];\n            if (value === undefined) {\n              if (_options) {\n                var _options$parts;\n                var optional = (_options$parts = _options.parts) == null || (_options$parts = _options$parts.find(function (part) {\n                  return part.param === key;\n                })) == null ? void 0 : _options$parts.optional;\n                if (optional) {\n                  return null;\n                }\n              } else {\n                return null;\n              }\n            }\n            var stringify = (_options$stringify$ke = _options == null || (_options$stringify = _options.stringify) == null ? void 0 : _options$stringify[key]) != null ? _options$stringify$ke : String;\n            return [key, stringify(value)];\n          }).filter(function (entry) {\n            return entry != null;\n          }));\n          if ((_parts2 = parts) != null && _parts2.length) {\n            Object.assign(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            var _parts3;\n            // If this is the focused route, keep the params for later use\n            // We save it here since it's been stringified already\n            focusedParams = Object.assign({}, currentParams);\n            (_parts3 = parts\n            // eslint-disable-next-line no-loop-func\n            ) == null || _parts3.forEach(function (_ref6) {\n              var param = _ref6.param;\n              if (param) {\n                // Remove the params present in the pattern since we'll only use the rest for query string\n                if (focusedParams) {\n                  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                  delete focusedParams[param];\n                }\n              }\n            });\n          }\n        }\n\n        // If there is no `screens` property or no nested state, we return pattern\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n\n          // if there is config for next route name, we go deeper\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            // If not, there is no sense in going deeper in config\n            hasNext = false;\n          }\n        }\n      };\n      while (route.name in currentOptions && hasNext) {\n        _loop2();\n      }\n      if (currentOptions[route.name] !== undefined) {\n        var _parts;\n        path += (_parts = parts) == null ? void 0 : _parts.map(function (_ref) {\n          var segment = _ref.segment,\n            param = _ref.param,\n            optional = _ref.optional;\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (segment === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (param) {\n            var value = allParams[param];\n            if (value === undefined && optional) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            // Valid characters according to\n            // https://datatracker.ietf.org/doc/html/rfc3986#section-3.3 (see pchar definition)\n            return Array.from(String(value)).map(function (char) {\n              return /[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g.test(char) ? encodeURIComponent(char) : char;\n            }).join('');\n          }\n          return encodeURIComponent(segment);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n      if (!focusedParams && focusedRoute.params) {\n        focusedParams = Object.fromEntries(Object.entries(focusedRoute.params).map(function (_ref2) {\n          var _ref3 = (0, _slicedToArray2.default)(_ref2, 2),\n            key = _ref3[0],\n            value = _ref3[1];\n          return [key, String(value)];\n        }));\n      }\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete focusedParams[param];\n          }\n        }\n        var query = queryString.stringify(focusedParams, {\n          sort: false\n        });\n        if (query) {\n          path += `?${query}`;\n        }\n      }\n      current = route.state;\n    };\n    while (current) {\n      _loop();\n    }\n\n    // Include the root path if specified\n    if (options != null && options.path) {\n      path = `${options.path}/${path}`;\n    }\n\n    // Remove multiple as well as trailing slashes\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n    // If path doesn't start with a slash, add it\n    // This makes sure that history.pushState will update the path correctly instead of appending\n    if (!path.startsWith('/')) {\n      path = `/${path}`;\n    }\n    return path;\n  }\n  var createConfigItem = function createConfigItem(config, parentParts) {\n    if (typeof config === 'string') {\n      // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n      var _parts4 = (0, _getPatternParts.getPatternParts)(config);\n      if (parentParts) {\n        return {\n          parts: [].concat((0, _toConsumableArray2.default)(parentParts), (0, _toConsumableArray2.default)(_parts4))\n        };\n      }\n      return {\n        parts: _parts4\n      };\n    }\n    if (config.exact && config.path === undefined) {\n      throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n    }\n\n    // If an object is specified as the value (e.g. Foo: { ... }),\n    // It can have `path` property and `screens` prop which has nested configs\n    var parts = config.exact !== true ? [].concat((0, _toConsumableArray2.default)(parentParts || []), (0, _toConsumableArray2.default)(config.path ? (0, _getPatternParts.getPatternParts)(config.path) : [])) : config.path ? (0, _getPatternParts.getPatternParts)(config.path) : undefined;\n    var screens = config.screens ? createNormalizedConfigs(config.screens, parts) : undefined;\n    return {\n      parts: parts,\n      stringify: config.stringify,\n      screens: screens\n    };\n  };\n  var createNormalizedConfigs = function createNormalizedConfigs(options, parts) {\n    return Object.fromEntries(Object.entries(options).map(function (_ref7) {\n      var _ref8 = (0, _slicedToArray2.default)(_ref7, 2),\n        name = _ref8[0],\n        c = _ref8[1];\n      var result = createConfigItem(c, parts);\n      return [name, result];\n    }));\n  };\n});","lineCount":270,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"getPathFromState"],[8,26,1,13],[8,29,1,13,"getPathFromState"],[8,45,1,13],[9,2,1,13],[9,6,1,13,"_toConsumableArray2"],[9,25,1,13],[9,28,1,13,"_interopRequireDefault"],[9,50,1,13],[9,51,1,13,"require"],[9,58,1,13],[9,59,1,13,"_dependencyMap"],[9,73,1,13],[10,2,1,13],[10,6,1,13,"_slicedToArray2"],[10,21,1,13],[10,24,1,13,"_interopRequireDefault"],[10,46,1,13],[10,47,1,13,"require"],[10,54,1,13],[10,55,1,13,"_dependencyMap"],[10,69,1,13],[11,2,3,0],[11,6,3,0,"queryString"],[11,17,3,0],[11,20,3,0,"_interopRequireWildcard"],[11,43,3,0],[11,44,3,0,"require"],[11,51,3,0],[11,52,3,0,"_dependencyMap"],[11,66,3,0],[12,2,4,0],[12,6,4,0,"_getPatternParts"],[12,22,4,0],[12,25,4,0,"require"],[12,32,4,0],[12,33,4,0,"_dependencyMap"],[12,47,4,0],[13,2,5,0],[13,6,5,0,"_validatePathConfig"],[13,25,5,0],[13,28,5,0,"require"],[13,35,5,0],[13,36,5,0,"_dependencyMap"],[13,50,5,0],[14,2,5,61],[14,11,5,61,"_interopRequireWildcard"],[14,35,5,61,"e"],[14,36,5,61],[14,38,5,61,"t"],[14,39,5,61],[14,68,5,61,"WeakMap"],[14,75,5,61],[14,81,5,61,"r"],[14,82,5,61],[14,89,5,61,"WeakMap"],[14,96,5,61],[14,100,5,61,"n"],[14,101,5,61],[14,108,5,61,"WeakMap"],[14,115,5,61],[14,127,5,61,"_interopRequireWildcard"],[14,150,5,61],[14,162,5,61,"_interopRequireWildcard"],[14,186,5,61,"e"],[14,187,5,61],[14,189,5,61,"t"],[14,190,5,61],[14,199,5,61,"t"],[14,200,5,61],[14,204,5,61,"e"],[14,205,5,61],[14,209,5,61,"e"],[14,210,5,61],[14,211,5,61,"__esModule"],[14,221,5,61],[14,230,5,61,"e"],[14,231,5,61],[14,237,5,61,"o"],[14,238,5,61],[14,240,5,61,"i"],[14,241,5,61],[14,243,5,61,"f"],[14,244,5,61],[14,249,5,61,"__proto__"],[14,258,5,61],[14,266,5,61,"default"],[14,273,5,61],[14,275,5,61,"e"],[14,276,5,61],[14,293,5,61,"e"],[14,294,5,61],[14,317,5,61,"e"],[14,318,5,61],[14,343,5,61,"e"],[14,344,5,61],[14,353,5,61,"f"],[14,354,5,61],[14,360,5,61,"o"],[14,361,5,61],[14,364,5,61,"t"],[14,365,5,61],[14,368,5,61,"n"],[14,369,5,61],[14,372,5,61,"r"],[14,373,5,61],[14,381,5,61,"o"],[14,382,5,61],[14,383,5,61,"has"],[14,386,5,61],[14,387,5,61,"e"],[14,388,5,61],[14,398,5,61,"o"],[14,399,5,61],[14,400,5,61,"get"],[14,403,5,61],[14,404,5,61,"e"],[14,405,5,61],[14,408,5,61,"o"],[14,409,5,61],[14,410,5,61,"set"],[14,413,5,61],[14,414,5,61,"e"],[14,415,5,61],[14,417,5,61,"f"],[14,418,5,61],[14,432,5,61,"_t"],[14,434,5,61],[14,438,5,61,"e"],[14,439,5,61],[14,455,5,61,"_t"],[14,457,5,61],[14,464,5,61,"hasOwnProperty"],[14,478,5,61],[14,479,5,61,"call"],[14,483,5,61],[14,484,5,61,"e"],[14,485,5,61],[14,487,5,61,"_t"],[14,489,5,61],[14,496,5,61,"i"],[14,497,5,61],[14,501,5,61,"o"],[14,502,5,61],[14,505,5,61,"Object"],[14,511,5,61],[14,512,5,61,"defineProperty"],[14,526,5,61],[14,531,5,61,"Object"],[14,537,5,61],[14,538,5,61,"getOwnPropertyDescriptor"],[14,562,5,61],[14,563,5,61,"e"],[14,564,5,61],[14,566,5,61,"_t"],[14,568,5,61],[14,575,5,61,"i"],[14,576,5,61],[14,577,5,61,"get"],[14,580,5,61],[14,584,5,61,"i"],[14,585,5,61],[14,586,5,61,"set"],[14,589,5,61],[14,593,5,61,"o"],[14,594,5,61],[14,595,5,61,"f"],[14,596,5,61],[14,598,5,61,"_t"],[14,600,5,61],[14,602,5,61,"i"],[14,603,5,61],[14,607,5,61,"f"],[14,608,5,61],[14,609,5,61,"_t"],[14,611,5,61],[14,615,5,61,"e"],[14,616,5,61],[14,617,5,61,"_t"],[14,619,5,61],[14,630,5,61,"f"],[14,631,5,61],[14,636,5,61,"e"],[14,637,5,61],[14,639,5,61,"t"],[14,640,5,61],[15,2,6,0],[15,6,6,6,"getActiveRoute"],[15,21,6,20],[15,24,6,23],[15,33,6,6,"getActiveRoute"],[15,47,6,20,"getActiveRoute"],[15,48,6,23,"state"],[15,53,6,28],[15,55,6,32],[16,4,7,2],[16,8,7,8,"route"],[16,13,7,13],[16,16,7,16],[16,23,7,23,"state"],[16,28,7,28],[16,29,7,29,"index"],[16,34,7,34],[16,39,7,39],[16,47,7,47],[16,50,7,50,"state"],[16,55,7,55],[16,56,7,56,"routes"],[16,62,7,62],[16,63,7,63,"state"],[16,68,7,68],[16,69,7,69,"index"],[16,74,7,74],[16,75,7,75],[16,78,7,78,"state"],[16,83,7,83],[16,84,7,84,"routes"],[16,90,7,90],[16,91,7,91,"state"],[16,96,7,96],[16,97,7,97,"routes"],[16,103,7,103],[16,104,7,104,"length"],[16,110,7,110],[16,113,7,113],[16,114,7,114],[16,115,7,115],[17,4,8,2],[17,8,8,6,"route"],[17,13,8,11],[17,14,8,12,"state"],[17,19,8,17],[17,21,8,19],[18,6,9,4],[18,13,9,11,"getActiveRoute"],[18,28,9,25],[18,29,9,26,"route"],[18,34,9,31],[18,35,9,32,"state"],[18,40,9,37],[18,41,9,38],[19,4,10,2],[20,4,11,2],[20,11,11,9,"route"],[20,16,11,14],[21,2,12,0],[21,3,12,1],[22,2,13,0],[22,6,13,6,"cachedNormalizedConfigs"],[22,29,13,29],[22,32,13,32],[22,36,13,36,"WeakMap"],[22,43,13,43],[22,44,13,44],[22,45,13,45],[23,2,14,0],[23,6,14,6,"getNormalizedConfigs"],[23,26,14,26],[23,29,14,29],[23,38,14,6,"getNormalizedConfigs"],[23,58,14,26,"getNormalizedConfigs"],[23,59,14,29,"options"],[23,66,14,36],[23,68,14,40],[24,4,15,2],[24,8,15,6],[24,10,15,7,"options"],[24,17,15,14],[24,29,15,7,"options"],[24,36,15,14],[24,37,15,16,"screens"],[24,44,15,23],[24,47,15,25],[24,54,15,32],[24,55,15,33],[24,56,15,34],[25,4,16,2],[25,8,16,8,"cached"],[25,14,16,14],[25,17,16,17,"cachedNormalizedConfigs"],[25,40,16,40],[25,41,16,41,"get"],[25,44,16,44],[25,45,16,45,"options"],[25,52,16,52],[25,72,16,45,"options"],[25,79,16,52],[25,80,16,54,"screens"],[25,87,16,61],[25,88,16,62],[26,4,17,2],[26,8,17,6,"cached"],[26,14,17,12],[26,16,17,14],[26,23,17,21,"cached"],[26,29,17,27],[27,4,18,2],[27,8,18,8,"normalizedConfigs"],[27,25,18,25],[27,28,18,28,"createNormalizedConfigs"],[27,51,18,51],[27,52,18,52,"options"],[27,59,18,59],[27,60,18,60,"screens"],[27,67,18,67],[27,68,18,68],[28,4,19,2,"cachedNormalizedConfigs"],[28,27,19,25],[28,28,19,26,"set"],[28,31,19,29],[28,32,19,30,"options"],[28,39,19,37],[28,40,19,38,"screens"],[28,47,19,45],[28,49,19,47,"normalizedConfigs"],[28,66,19,64],[28,67,19,65],[29,4,20,2],[29,11,20,9,"normalizedConfigs"],[29,28,20,26],[30,2,21,0],[30,3,21,1],[32,2,23,0],[33,0,24,0],[34,0,25,0],[35,0,26,0],[36,0,27,0],[37,0,28,0],[38,0,29,0],[39,0,30,0],[40,0,31,0],[41,0,32,0],[42,0,33,0],[43,0,34,0],[44,0,35,0],[45,0,36,0],[46,0,37,0],[47,0,38,0],[48,0,39,0],[49,0,40,0],[50,0,41,0],[51,0,42,0],[52,0,43,0],[53,0,44,0],[54,0,45,0],[55,0,46,0],[56,0,47,0],[57,0,48,0],[58,0,49,0],[59,0,50,0],[60,0,51,0],[61,2,52,7],[61,11,52,16,"getPathFromState"],[61,27,52,32,"getPathFromState"],[61,28,52,33,"state"],[61,33,52,38],[61,35,52,40,"options"],[61,42,52,47],[61,44,52,49],[62,4,53,2],[62,8,53,6,"state"],[62,13,53,11],[62,17,53,15],[62,21,53,19],[62,23,53,21],[63,6,54,4],[63,12,54,10,"Error"],[63,17,54,15],[63,18,54,16],[63,26,54,24,"String"],[63,32,54,30],[63,33,54,31,"state"],[63,38,54,36],[63,39,54,37],[63,104,54,102],[63,105,54,103],[64,4,55,2],[65,4,56,2],[65,8,56,6,"options"],[65,15,56,13],[65,17,56,15],[66,6,57,4],[66,10,57,4,"validatePathConfig"],[66,48,57,22],[66,50,57,23,"options"],[66,57,57,30],[66,58,57,31],[67,4,58,2],[68,4,59,2],[68,8,59,8,"configs"],[68,15,59,15],[68,18,59,18,"getNormalizedConfigs"],[68,38,59,38],[68,39,59,39,"options"],[68,46,59,46],[68,47,59,47],[69,4,60,2],[69,8,60,6,"path"],[69,12,60,10],[69,15,60,13],[69,18,60,16],[70,4,61,2],[70,8,61,6,"current"],[70,15,61,13],[70,18,61,16,"state"],[70,23,61,21],[71,4,62,2],[71,8,62,8,"allParams"],[71,17,62,17],[71,20,62,20],[71,21,62,21],[71,22,62,22],[72,4,62,23],[72,8,62,23,"_loop"],[72,13,62,23],[72,25,62,23,"_loop"],[72,31,62,23],[72,33,63,18],[73,6,64,4],[73,10,64,8,"index"],[73,15,64,13],[73,18,64,16],[73,25,64,23,"current"],[73,32,64,30],[73,33,64,31,"index"],[73,38,64,36],[73,43,64,41],[73,51,64,49],[73,54,64,52,"current"],[73,61,64,59],[73,62,64,60,"index"],[73,67,64,65],[73,70,64,68],[73,71,64,69],[74,6,65,4],[74,10,65,8,"route"],[74,15,65,13],[74,18,65,16,"current"],[74,25,65,23],[74,26,65,24,"routes"],[74,32,65,30],[74,33,65,31,"index"],[74,38,65,36],[74,39,65,37],[75,6,66,4],[75,10,66,8,"parts"],[75,15,66,13],[76,6,67,4],[76,10,67,8,"focusedParams"],[76,23,67,21],[77,6,68,4],[77,10,68,8,"currentOptions"],[77,24,68,22],[77,27,68,25,"configs"],[77,34,68,32],[78,6,69,4],[78,10,69,10,"focusedRoute"],[78,22,69,22],[78,25,69,25,"getActiveRoute"],[78,40,69,39],[78,41,69,40,"state"],[78,46,69,45],[78,47,69,46],[80,6,71,4],[81,6,72,4],[81,10,72,10,"nestedRouteNames"],[81,26,72,26],[81,29,72,29],[81,31,72,31],[82,6,73,4],[82,10,73,8,"hasNext"],[82,17,73,15],[82,20,73,18],[82,24,73,22],[83,6,73,23],[83,10,73,23,"_loop2"],[83,16,73,23],[83,28,73,23,"_loop2"],[83,35,73,23],[83,37,74,52],[84,8,75,6,"parts"],[84,13,75,11],[84,16,75,14,"currentOptions"],[84,30,75,28],[84,31,75,29,"route"],[84,36,75,34],[84,37,75,35,"name"],[84,41,75,39],[84,42,75,40],[84,43,75,41,"parts"],[84,48,75,46],[85,8,76,6,"nestedRouteNames"],[85,24,76,22],[85,25,76,23,"push"],[85,29,76,27],[85,30,76,28,"route"],[85,35,76,33],[85,36,76,34,"name"],[85,40,76,38],[85,41,76,39],[86,8,77,6],[86,12,77,10,"route"],[86,17,77,15],[86,18,77,16,"params"],[86,24,77,22],[86,26,77,24],[87,10,77,24],[87,14,77,24,"_parts2"],[87,21,77,24],[88,10,78,8],[88,14,78,14,"options"],[88,22,78,21],[88,25,78,24,"currentOptions"],[88,39,78,38],[88,40,78,39,"route"],[88,45,78,44],[88,46,78,45,"name"],[88,50,78,49],[88,51,78,50],[89,10,79,8],[89,14,79,14,"currentParams"],[89,27,79,27],[89,30,79,30,"Object"],[89,36,79,36],[89,37,79,37,"fromEntries"],[89,48,79,48],[89,49,79,49,"Object"],[89,55,79,55],[89,56,79,56,"entries"],[89,63,79,63],[89,64,79,64,"route"],[89,69,79,69],[89,70,79,70,"params"],[89,76,79,76],[89,77,79,77],[89,78,79,78,"map"],[89,81,79,81],[89,82,79,82],[89,92,79,82,"_ref4"],[89,97,79,82],[89,99,79,100],[90,12,79,100],[90,16,79,100,"_options$stringify$ke"],[90,37,79,100],[90,39,79,100,"_options$stringify"],[90,57,79,100],[91,12,79,100],[91,16,79,100,"_ref5"],[91,21,79,100],[91,28,79,100,"_slicedToArray2"],[91,43,79,100],[91,44,79,100,"default"],[91,51,79,100],[91,53,79,100,"_ref4"],[91,58,79,100],[92,14,79,84,"key"],[92,17,79,87],[92,20,79,87,"_ref5"],[92,25,79,87],[93,14,79,89,"value"],[93,19,79,94],[93,22,79,94,"_ref5"],[93,27,79,94],[94,12,80,10],[94,16,80,14,"value"],[94,21,80,19],[94,26,80,24,"undefined"],[94,35,80,33],[94,37,80,35],[95,14,81,12],[95,18,81,16,"options"],[95,26,81,23],[95,28,81,25],[96,16,81,25],[96,20,81,25,"_options$parts"],[96,34,81,25],[97,16,82,14],[97,20,82,20,"optional"],[97,28,82,28],[97,32,82,28,"_options$parts"],[97,46,82,28],[97,49,82,31,"options"],[97,57,82,38],[97,58,82,39,"parts"],[97,63,82,44],[97,77,82,44,"_options$parts"],[97,91,82,44],[97,94,82,31,"_options$parts"],[97,108,82,31],[97,109,82,46,"find"],[97,113,82,50],[97,114,82,51],[97,124,82,51,"part"],[97,128,82,55],[98,18,82,55],[98,25,82,59,"part"],[98,29,82,63],[98,30,82,64,"param"],[98,35,82,69],[98,40,82,74,"key"],[98,43,82,77],[99,16,82,77],[99,18,82,78],[99,39,82,31,"_options$parts"],[99,53,82,31],[99,54,82,80,"optional"],[99,62,82,88],[100,16,83,14],[100,20,83,18,"optional"],[100,28,83,26],[100,30,83,28],[101,18,84,16],[101,25,84,23],[101,29,84,27],[102,16,85,14],[103,14,86,12],[103,15,86,13],[103,21,86,19],[104,16,87,14],[104,23,87,21],[104,27,87,25],[105,14,88,12],[106,12,89,10],[107,12,90,10],[107,16,90,16,"stringify"],[107,25,90,25],[107,29,90,25,"_options$stringify$ke"],[107,50,90,25],[107,53,90,28,"options"],[107,61,90,35],[107,74,90,35,"_options$stringify"],[107,92,90,35],[107,95,90,28,"options"],[107,103,90,35],[107,104,90,37,"stringify"],[107,113,90,46],[107,134,90,28,"_options$stringify"],[107,152,90,28],[107,153,90,49,"key"],[107,156,90,52],[107,157,90,53],[107,169,90,53,"_options$stringify$ke"],[107,190,90,53],[107,193,90,57,"String"],[107,199,90,63],[108,12,91,10],[108,19,91,17],[108,20,91,18,"key"],[108,23,91,21],[108,25,91,23,"stringify"],[108,34,91,32],[108,35,91,33,"value"],[108,40,91,38],[108,41,91,39],[108,42,91,40],[109,10,92,8],[109,11,92,9],[109,12,92,10],[109,13,92,11,"filter"],[109,19,92,17],[109,20,92,18],[109,30,92,18,"entry"],[109,35,92,23],[110,12,92,23],[110,19,92,27,"entry"],[110,24,92,32],[110,28,92,36],[110,32,92,40],[111,10,92,40],[111,12,92,41],[111,13,92,42],[112,10,93,8],[112,15,93,8,"_parts2"],[112,22,93,8],[112,25,93,12,"parts"],[112,30,93,17],[112,43,93,12,"_parts2"],[112,50,93,12],[112,51,93,19,"length"],[112,57,93,25],[112,59,93,27],[113,12,94,10,"Object"],[113,18,94,16],[113,19,94,17,"assign"],[113,25,94,23],[113,26,94,24,"allParams"],[113,35,94,33],[113,37,94,35,"currentParams"],[113,50,94,48],[113,51,94,49],[114,10,95,8],[115,10,96,8],[115,14,96,12,"focusedRoute"],[115,26,96,24],[115,31,96,29,"route"],[115,36,96,34],[115,38,96,36],[116,12,96,36],[116,16,96,36,"_parts3"],[116,23,96,36],[117,12,97,10],[118,12,98,10],[119,12,99,10,"focusedParams"],[119,25,99,23],[119,28,99,23,"Object"],[119,34,99,23],[119,35,99,23,"assign"],[119,41,99,23],[119,46,100,15,"currentParams"],[119,59,100,28],[119,60,101,11],[120,12,102,10],[120,13,102,10,"_parts3"],[120,20,102,10],[120,23,102,10,"parts"],[121,12,103,10],[122,12,103,10],[122,25,102,10,"_parts3"],[122,32,102,10],[122,33,104,12,"forEach"],[122,40,104,19],[122,41,104,20],[122,51,104,20,"_ref6"],[122,56,104,20],[122,58,106,16],[123,14,106,16],[123,18,105,12,"param"],[123,23,105,17],[123,26,105,17,"_ref6"],[123,31,105,17],[123,32,105,12,"param"],[123,37,105,17],[124,14,107,12],[124,18,107,16,"param"],[124,23,107,21],[124,25,107,23],[125,16,108,14],[126,16,109,14],[126,20,109,18,"focusedParams"],[126,33,109,31],[126,35,109,33],[127,18,110,16],[128,18,111,16],[128,25,111,23,"focusedParams"],[128,38,111,36],[128,39,111,37,"param"],[128,44,111,42],[128,45,111,43],[129,16,112,14],[130,14,113,12],[131,12,114,10],[131,13,114,11],[131,14,114,12],[132,10,115,8],[133,8,116,6],[135,8,118,6],[136,8,119,6],[136,12,119,10],[136,13,119,11,"currentOptions"],[136,27,119,25],[136,28,119,26,"route"],[136,33,119,31],[136,34,119,32,"name"],[136,38,119,36],[136,39,119,37],[136,40,119,38,"screens"],[136,47,119,45],[136,51,119,49,"route"],[136,56,119,54],[136,57,119,55,"state"],[136,62,119,60],[136,67,119,65,"undefined"],[136,76,119,74],[136,78,119,76],[137,10,120,8,"hasNext"],[137,17,120,15],[137,20,120,18],[137,25,120,23],[138,8,121,6],[138,9,121,7],[138,15,121,13],[139,10,122,8,"index"],[139,15,122,13],[139,18,122,16],[139,25,122,23,"route"],[139,30,122,28],[139,31,122,29,"state"],[139,36,122,34],[139,37,122,35,"index"],[139,42,122,40],[139,47,122,45],[139,55,122,53],[139,58,122,56,"route"],[139,63,122,61],[139,64,122,62,"state"],[139,69,122,67],[139,70,122,68,"index"],[139,75,122,73],[139,78,122,76,"route"],[139,83,122,81],[139,84,122,82,"state"],[139,89,122,87],[139,90,122,88,"routes"],[139,96,122,94],[139,97,122,95,"length"],[139,103,122,101],[139,106,122,104],[139,107,122,105],[140,10,123,8],[140,14,123,14,"nextRoute"],[140,23,123,23],[140,26,123,26,"route"],[140,31,123,31],[140,32,123,32,"state"],[140,37,123,37],[140,38,123,38,"routes"],[140,44,123,44],[140,45,123,45,"index"],[140,50,123,50],[140,51,123,51],[141,10,124,8],[141,14,124,14,"nestedConfig"],[141,26,124,26],[141,29,124,29,"currentOptions"],[141,43,124,43],[141,44,124,44,"route"],[141,49,124,49],[141,50,124,50,"name"],[141,54,124,54],[141,55,124,55],[141,56,124,56,"screens"],[141,63,124,63],[143,10,126,8],[144,10,127,8],[144,14,127,12,"nestedConfig"],[144,26,127,24],[144,30,127,28,"nextRoute"],[144,39,127,37],[144,40,127,38,"name"],[144,44,127,42],[144,48,127,46,"nestedConfig"],[144,60,127,58],[144,62,127,60],[145,12,128,10,"route"],[145,17,128,15],[145,20,128,18,"nextRoute"],[145,29,128,27],[146,12,129,10,"currentOptions"],[146,26,129,24],[146,29,129,27,"nestedConfig"],[146,41,129,39],[147,10,130,8],[147,11,130,9],[147,17,130,15],[148,12,131,10],[149,12,132,10,"hasNext"],[149,19,132,17],[149,22,132,20],[149,27,132,25],[150,10,133,8],[151,8,134,6],[152,6,135,4],[152,7,135,5],[153,6,74,4],[153,13,74,11,"route"],[153,18,74,16],[153,19,74,17,"name"],[153,23,74,21],[153,27,74,25,"currentOptions"],[153,41,74,39],[153,45,74,43,"hasNext"],[153,52,74,50],[154,8,74,50,"_loop2"],[154,14,74,50],[155,6,74,50],[156,6,136,4],[156,10,136,8,"currentOptions"],[156,24,136,22],[156,25,136,23,"route"],[156,30,136,28],[156,31,136,29,"name"],[156,35,136,33],[156,36,136,34],[156,41,136,39,"undefined"],[156,50,136,48],[156,52,136,50],[157,8,136,50],[157,12,136,50,"_parts"],[157,18,136,50],[158,8,137,6,"path"],[158,12,137,10],[158,17,137,10,"_parts"],[158,23,137,10],[158,26,137,14,"parts"],[158,31,137,19],[158,52,137,14,"_parts"],[158,58,137,14],[158,59,137,21,"map"],[158,62,137,24],[158,63,137,25],[158,73,137,25,"_ref"],[158,77,137,25],[158,79,141,12],[159,10,141,12],[159,14,138,8,"segment"],[159,21,138,15],[159,24,138,15,"_ref"],[159,28,138,15],[159,29,138,8,"segment"],[159,36,138,15],[160,12,139,8,"param"],[160,17,139,13],[160,20,139,13,"_ref"],[160,24,139,13],[160,25,139,8,"param"],[160,30,139,13],[161,12,140,8,"optional"],[161,20,140,16],[161,23,140,16,"_ref"],[161,27,140,16],[161,28,140,8,"optional"],[161,36,140,16],[162,10,142,8],[163,10,143,8],[164,10,144,8],[165,10,145,8],[165,14,145,12,"segment"],[165,21,145,19],[165,26,145,24],[165,29,145,27],[165,31,145,29],[166,12,146,10],[166,19,146,17,"route"],[166,24,146,22],[166,25,146,23,"name"],[166,29,146,27],[167,10,147,8],[169,10,149,8],[170,10,150,8],[170,14,150,12,"param"],[170,19,150,17],[170,21,150,19],[171,12,151,10],[171,16,151,16,"value"],[171,21,151,21],[171,24,151,24,"allParams"],[171,33,151,33],[171,34,151,34,"param"],[171,39,151,39],[171,40,151,40],[172,12,152,10],[172,16,152,14,"value"],[172,21,152,19],[172,26,152,24,"undefined"],[172,35,152,33],[172,39,152,37,"optional"],[172,47,152,45],[172,49,152,47],[173,14,153,12],[174,14,154,12],[174,21,154,19],[174,23,154,21],[175,12,155,10],[177,12,157,10],[178,12,158,10],[179,12,159,10],[179,19,159,17,"Array"],[179,24,159,22],[179,25,159,23,"from"],[179,29,159,27],[179,30,159,28,"String"],[179,36,159,34],[179,37,159,35,"value"],[179,42,159,40],[179,43,159,41],[179,44,159,42],[179,45,159,43,"map"],[179,48,159,46],[179,49,159,47],[179,59,159,47,"char"],[179,63,159,51],[180,14,159,51],[180,21,159,55],[180,54,159,88],[180,55,159,89,"test"],[180,59,159,93],[180,60,159,94,"char"],[180,64,159,98],[180,65,159,99],[180,68,159,102,"encodeURIComponent"],[180,86,159,120],[180,87,159,121,"char"],[180,91,159,125],[180,92,159,126],[180,95,159,129,"char"],[180,99,159,133],[181,12,159,133],[181,14,159,134],[181,15,159,135,"join"],[181,19,159,139],[181,20,159,140],[181,22,159,142],[181,23,159,143],[182,10,160,8],[183,10,161,8],[183,17,161,15,"encodeURIComponent"],[183,35,161,33],[183,36,161,34,"segment"],[183,43,161,41],[183,44,161,42],[184,8,162,6],[184,9,162,7],[184,10,162,8],[184,11,162,9,"join"],[184,15,162,13],[184,16,162,14],[184,19,162,17],[184,20,162,18],[185,6,163,4],[185,7,163,5],[185,13,163,11],[186,8,164,6,"path"],[186,12,164,10],[186,16,164,14,"encodeURIComponent"],[186,34,164,32],[186,35,164,33,"route"],[186,40,164,38],[186,41,164,39,"name"],[186,45,164,43],[186,46,164,44],[187,6,165,4],[188,6,166,4],[188,10,166,8],[188,11,166,9,"focusedParams"],[188,24,166,22],[188,28,166,26,"focusedRoute"],[188,40,166,38],[188,41,166,39,"params"],[188,47,166,45],[188,49,166,47],[189,8,167,6,"focusedParams"],[189,21,167,19],[189,24,167,22,"Object"],[189,30,167,28],[189,31,167,29,"fromEntries"],[189,42,167,40],[189,43,167,41,"Object"],[189,49,167,47],[189,50,167,48,"entries"],[189,57,167,55],[189,58,167,56,"focusedRoute"],[189,70,167,68],[189,71,167,69,"params"],[189,77,167,75],[189,78,167,76],[189,79,167,77,"map"],[189,82,167,80],[189,83,167,81],[189,93,167,81,"_ref2"],[189,98,167,81],[190,10,167,81],[190,14,167,81,"_ref3"],[190,19,167,81],[190,26,167,81,"_slicedToArray2"],[190,41,167,81],[190,42,167,81,"default"],[190,49,167,81],[190,51,167,81,"_ref2"],[190,56,167,81],[191,12,167,83,"key"],[191,15,167,86],[191,18,167,86,"_ref3"],[191,23,167,86],[192,12,167,88,"value"],[192,17,167,93],[192,20,167,93,"_ref3"],[192,25,167,93],[193,10,167,93],[193,17,167,99],[193,18,167,100,"key"],[193,21,167,103],[193,23,167,105,"String"],[193,29,167,111],[193,30,167,112,"value"],[193,35,167,117],[193,36,167,118],[193,37,167,119],[194,8,167,119],[194,10,167,120],[194,11,167,121],[195,6,168,4],[196,6,169,4],[196,10,169,8,"route"],[196,15,169,13],[196,16,169,14,"state"],[196,21,169,19],[196,23,169,21],[197,8,170,6,"path"],[197,12,170,10],[197,16,170,14],[197,19,170,17],[198,6,171,4],[198,7,171,5],[198,13,171,11],[198,17,171,15,"focusedParams"],[198,30,171,28],[198,32,171,30],[199,8,172,6],[199,13,172,11],[199,17,172,17,"param"],[199,22,172,22],[199,26,172,26,"focusedParams"],[199,39,172,39],[199,41,172,41],[200,10,173,8],[200,14,173,12,"focusedParams"],[200,27,173,25],[200,28,173,26,"param"],[200,33,173,31],[200,34,173,32],[200,39,173,37],[200,50,173,48],[200,52,173,50],[201,12,174,10],[202,12,175,10],[202,19,175,17,"focusedParams"],[202,32,175,30],[202,33,175,31,"param"],[202,38,175,36],[202,39,175,37],[203,10,176,8],[204,8,177,6],[205,8,178,6],[205,12,178,12,"query"],[205,17,178,17],[205,20,178,20,"queryString"],[205,31,178,31],[205,32,178,32,"stringify"],[205,41,178,41],[205,42,178,42,"focusedParams"],[205,55,178,55],[205,57,178,57],[206,10,179,8,"sort"],[206,14,179,12],[206,16,179,14],[207,8,180,6],[207,9,180,7],[207,10,180,8],[208,8,181,6],[208,12,181,10,"query"],[208,17,181,15],[208,19,181,17],[209,10,182,8,"path"],[209,14,182,12],[209,18,182,16],[209,22,182,20,"query"],[209,27,182,25],[209,29,182,27],[210,8,183,6],[211,6,184,4],[212,6,185,4,"current"],[212,13,185,11],[212,16,185,14,"route"],[212,21,185,19],[212,22,185,20,"state"],[212,27,185,25],[213,4,186,2],[213,5,186,3],[214,4,63,2],[214,11,63,9,"current"],[214,18,63,16],[215,6,63,16,"_loop"],[215,11,63,16],[216,4,63,16],[218,4,188,2],[219,4,189,2],[219,8,189,6,"options"],[219,15,189,13],[219,27,189,6,"options"],[219,34,189,13],[219,35,189,15,"path"],[219,39,189,19],[219,41,189,21],[220,6,190,4,"path"],[220,10,190,8],[220,13,190,11],[220,16,190,14,"options"],[220,23,190,21],[220,24,190,22,"path"],[220,28,190,26],[220,32,190,30,"path"],[220,36,190,34],[220,38,190,36],[221,4,191,2],[223,4,193,2],[224,4,194,2,"path"],[224,8,194,6],[224,11,194,9,"path"],[224,15,194,13],[224,16,194,14,"replace"],[224,23,194,21],[224,24,194,22],[224,30,194,28],[224,32,194,30],[224,35,194,33],[224,36,194,34],[225,4,195,2,"path"],[225,8,195,6],[225,11,195,9,"path"],[225,15,195,13],[225,16,195,14,"length"],[225,22,195,20],[225,25,195,23],[225,26,195,24],[225,29,195,27,"path"],[225,33,195,31],[225,34,195,32,"replace"],[225,41,195,39],[225,42,195,40],[225,47,195,45],[225,49,195,47],[225,51,195,49],[225,52,195,50],[225,55,195,53,"path"],[225,59,195,57],[227,4,197,2],[228,4,198,2],[229,4,199,2],[229,8,199,6],[229,9,199,7,"path"],[229,13,199,11],[229,14,199,12,"startsWith"],[229,24,199,22],[229,25,199,23],[229,28,199,26],[229,29,199,27],[229,31,199,29],[230,6,200,4,"path"],[230,10,200,8],[230,13,200,11],[230,17,200,15,"path"],[230,21,200,19],[230,23,200,21],[231,4,201,2],[232,4,202,2],[232,11,202,9,"path"],[232,15,202,13],[233,2,203,0],[234,2,204,0],[234,6,204,6,"createConfigItem"],[234,22,204,22],[234,25,204,25],[234,34,204,6,"createConfigItem"],[234,50,204,22,"createConfigItem"],[234,51,204,26,"config"],[234,57,204,32],[234,59,204,34,"parentParts"],[234,70,204,45],[234,72,204,50],[235,4,205,2],[235,8,205,6],[235,15,205,13,"config"],[235,21,205,19],[235,26,205,24],[235,34,205,32],[235,36,205,34],[236,6,206,4],[237,6,207,4],[237,10,207,10,"parts"],[237,17,207,15],[237,20,207,18],[237,24,207,18,"getPatternParts"],[237,56,207,33],[237,58,207,34,"config"],[237,64,207,40],[237,65,207,41],[238,6,208,4],[238,10,208,8,"parentParts"],[238,21,208,19],[238,23,208,21],[239,8,209,6],[239,15,209,13],[240,10,210,8,"parts"],[240,15,210,13],[240,20,210,13,"concat"],[240,26,210,13],[240,31,210,13,"_toConsumableArray2"],[240,50,210,13],[240,51,210,13,"default"],[240,58,210,13],[240,60,210,19,"parentParts"],[240,71,210,30],[240,78,210,30,"_toConsumableArray2"],[240,97,210,30],[240,98,210,30,"default"],[240,105,210,30],[240,107,210,35,"parts"],[240,114,210,40],[241,8,211,6],[241,9,211,7],[242,6,212,4],[243,6,213,4],[243,13,213,11],[244,8,214,6,"parts"],[244,13,214,11],[244,15,214,6,"parts"],[245,6,215,4],[245,7,215,5],[246,4,216,2],[247,4,217,2],[247,8,217,6,"config"],[247,14,217,12],[247,15,217,13,"exact"],[247,20,217,18],[247,24,217,22,"config"],[247,30,217,28],[247,31,217,29,"path"],[247,35,217,33],[247,40,217,38,"undefined"],[247,49,217,47],[247,51,217,49],[248,6,218,4],[248,12,218,10],[248,16,218,14,"Error"],[248,21,218,19],[248,22,218,20],[248,172,218,170],[248,173,218,171],[249,4,219,2],[251,4,221,2],[252,4,222,2],[253,4,223,2],[253,8,223,8,"parts"],[253,13,223,13],[253,16,223,16,"config"],[253,22,223,22],[253,23,223,23,"exact"],[253,28,223,28],[253,33,223,33],[253,37,223,37],[253,43,223,37,"concat"],[253,49,223,37],[253,54,223,37,"_toConsumableArray2"],[253,73,223,37],[253,74,223,37,"default"],[253,81,223,37],[253,83,223,45,"parentParts"],[253,94,223,56],[253,98,223,60],[253,100,223,62],[253,107,223,62,"_toConsumableArray2"],[253,126,223,62],[253,127,223,62,"default"],[253,134,223,62],[253,136,223,69,"config"],[253,142,223,75],[253,143,223,76,"path"],[253,147,223,80],[253,150,223,83],[253,154,223,83,"getPatternParts"],[253,186,223,98],[253,188,223,99,"config"],[253,194,223,105],[253,195,223,106,"path"],[253,199,223,110],[253,200,223,111],[253,203,223,114],[253,205,223,116],[253,210,223,121,"config"],[253,216,223,127],[253,217,223,128,"path"],[253,221,223,132],[253,224,223,135],[253,228,223,135,"getPatternParts"],[253,260,223,150],[253,262,223,151,"config"],[253,268,223,157],[253,269,223,158,"path"],[253,273,223,162],[253,274,223,163],[253,277,223,166,"undefined"],[253,286,223,175],[254,4,224,2],[254,8,224,8,"screens"],[254,15,224,15],[254,18,224,18,"config"],[254,24,224,24],[254,25,224,25,"screens"],[254,32,224,32],[254,35,224,35,"createNormalizedConfigs"],[254,58,224,58],[254,59,224,59,"config"],[254,65,224,65],[254,66,224,66,"screens"],[254,73,224,73],[254,75,224,75,"parts"],[254,80,224,80],[254,81,224,81],[254,84,224,84,"undefined"],[254,93,224,93],[255,4,225,2],[255,11,225,9],[256,6,226,4,"parts"],[256,11,226,9],[256,13,226,4,"parts"],[256,18,226,9],[257,6,227,4,"stringify"],[257,15,227,13],[257,17,227,15,"config"],[257,23,227,21],[257,24,227,22,"stringify"],[257,33,227,31],[258,6,228,4,"screens"],[258,13,228,11],[258,15,228,4,"screens"],[259,4,229,2],[259,5,229,3],[260,2,230,0],[260,3,230,1],[261,2,231,0],[261,6,231,6,"createNormalizedConfigs"],[261,29,231,29],[261,32,231,32],[261,41,231,6,"createNormalizedConfigs"],[261,64,231,29,"createNormalizedConfigs"],[261,65,231,33,"options"],[261,72,231,40],[261,74,231,42,"parts"],[261,79,231,47],[262,4,231,47],[262,11,231,52,"Object"],[262,17,231,58],[262,18,231,59,"fromEntries"],[262,29,231,70],[262,30,231,71,"Object"],[262,36,231,77],[262,37,231,78,"entries"],[262,44,231,85],[262,45,231,86,"options"],[262,52,231,93],[262,53,231,94],[262,54,231,95,"map"],[262,57,231,98],[262,58,231,99],[262,68,231,99,"_ref7"],[262,73,231,99],[262,75,231,114],[263,6,231,114],[263,10,231,114,"_ref8"],[263,15,231,114],[263,22,231,114,"_slicedToArray2"],[263,37,231,114],[263,38,231,114,"default"],[263,45,231,114],[263,47,231,114,"_ref7"],[263,52,231,114],[264,8,231,101,"name"],[264,12,231,105],[264,15,231,105,"_ref8"],[264,20,231,105],[265,8,231,107,"c"],[265,9,231,108],[265,12,231,108,"_ref8"],[265,17,231,108],[266,6,232,2],[266,10,232,8,"result"],[266,16,232,14],[266,19,232,17,"createConfigItem"],[266,35,232,33],[266,36,232,34,"c"],[266,37,232,35],[266,39,232,37,"parts"],[266,44,232,42],[266,45,232,43],[267,6,233,2],[267,13,233,9],[267,14,233,10,"name"],[267,18,233,14],[267,20,233,16,"result"],[267,26,233,22],[267,27,233,23],[268,4,234,0],[268,5,234,1],[268,6,234,2],[268,7,234,3],[269,2,234,3],[270,0,234,4],[270,3]],"functionMap":{"names":["<global>","getActiveRoute","getNormalizedConfigs","getPathFromState","Object.entries.map$argument_0","options.parts.find$argument_0","Object.entries.map.filter$argument_0","parts.forEach$argument_0","parts.map$argument_0","Array.from.map$argument_0","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;uBCK;CDM;6BEE;CFO;OG+B;kFC2B;mDCG,0BD;SDU,SG,sBH;oBIY;WJU;yBKuB;+CCsB,sFD;OLG;iFCK,sCD;CHoC;yBUC;CV0B;gCWC,mEP;COG,EX"}},"type":"js/module"}]}