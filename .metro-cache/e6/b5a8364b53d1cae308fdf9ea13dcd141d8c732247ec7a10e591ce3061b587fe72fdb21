{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":91,"index":91}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"../services/supabase/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":93},"end":{"line":2,"column":71,"index":164}}],"key":"1oKwhaRe1xqGzl3XNlbj9GPxLtM=","exportNames":["*"]}},{"name":"@react-native-community/netinfo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":166},"end":{"line":3,"column":54,"index":220}}],"key":"PqZcYTlMIVnzFjdViPzMiGUu7Hg=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":222},"end":{"line":4,"column":56,"index":278}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"../store/api/networkAwareApi","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":280},"end":{"line":5,"column":59,"index":339}}],"key":"vZV6uiUYSWrK0KaKVyVGr5uRKC0=","exportNames":["*"]}},{"name":"../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":341},"end":{"line":6,"column":51,"index":392}}],"key":"yE50x5RqRtg1gxlUHvyLXkSBAF0=","exportNames":["*"]}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useConnection = exports.ConnectionProvider = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\"));\n  var _react = _interopRequireWildcard(require(_dependencyMap[3], \"react\"));\n  var _client = require(_dependencyMap[4], \"../services/supabase/client\");\n  var _netinfo = _interopRequireDefault(require(_dependencyMap[5], \"@react-native-community/netinfo\"));\n  var _reactNative = require(_dependencyMap[6], \"react-native\");\n  var _networkAwareApi = require(_dependencyMap[7], \"../store/api/networkAwareApi\");\n  var _EventLogger = require(_dependencyMap[8], \"../utils/EventLogger\");\n  var _jsxDevRuntime = require(_dependencyMap[9], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"/Users/marcminott/Documents/DevProject/ShortcutsLike/src/contexts/ConnectionContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  var ConnectionContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var ConnectionProvider = exports.ConnectionProvider = function ConnectionProvider(_ref) {\n    _s();\n    var children = _ref.children;\n    var _useState = (0, _react.useState)({\n        isConnected: true,\n        isAuthenticated: false,\n        isChecking: false,\n        error: null,\n        lastChecked: null,\n        details: 'initializing'\n      }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      connectionState = _useState2[0],\n      setConnectionState = _useState2[1];\n    var checkConnection = (0, _react.useCallback)(/*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {\n      setConnectionState(function (prev) {\n        return Object.assign({}, prev, {\n          isChecking: true,\n          error: null\n        });\n      });\n      try {\n        // First check network connectivity\n        var netState = yield _netinfo.default.fetch();\n        if (!netState.isConnected) {\n          setConnectionState({\n            isConnected: false,\n            isAuthenticated: false,\n            isChecking: false,\n            error: 'No internet connection',\n            lastChecked: new Date(),\n            details: 'network_offline'\n          });\n          return;\n        }\n\n        // Then check Supabase connection\n        var result = yield (0, _client.testConnection)();\n        setConnectionState({\n          isConnected: result.connected,\n          isAuthenticated: result.authenticated || false,\n          isChecking: false,\n          error: result.error || null,\n          lastChecked: new Date(),\n          details: result.details || 'unknown'\n        });\n      } catch (error) {\n        var _error$message;\n        // Don't spam network errors\n        if (!(error != null && (_error$message = error.message) != null && _error$message.includes('Network request failed'))) {\n          (0, _networkAwareApi.logApiError)(error, 'ConnectionContext.checkConnection');\n        }\n        setConnectionState({\n          isConnected: false,\n          isAuthenticated: false,\n          isChecking: false,\n          error: error.message || 'Connection check failed',\n          lastChecked: new Date(),\n          details: 'error'\n        });\n      }\n    }), []);\n    var resetError = (0, _react.useCallback)(function () {\n      setConnectionState(function (prev) {\n        return Object.assign({}, prev, {\n          error: null\n        });\n      });\n    }, []);\n\n    // Check connection on mount and when app comes to foreground\n    (0, _react.useEffect)(function () {\n      // MUCH longer delay to prevent blocking app startup completely\n      var initialCheckTimer = setTimeout(function () {\n        checkConnection().catch(function (error) {\n          _EventLogger.EventLogger.warn('ConnectionContext', 'Initial connection check failed, app will continue offline:', error);\n        });\n      }, 3000); // 3 second delay to let app fully initialize\n\n      // Listen for app state changes\n      var subscription = _reactNative.AppState.addEventListener('change', function (nextAppState) {\n        if (nextAppState === 'active') {\n          // Add delay to prevent blocking app resume\n          setTimeout(function () {\n            checkConnection().catch(function (error) {\n              _EventLogger.EventLogger.warn('ConnectionContext', 'Connection check on app resume failed:', error);\n            });\n          }, 500);\n        }\n      });\n\n      // Listen for network state changes with error handling\n      var unsubscribe = _netinfo.default.addEventListener(function (state) {\n        try {\n          if (state.isConnected && !connectionState.isConnected) {\n            // Delay connection check after network reconnects\n            setTimeout(function () {\n              checkConnection().catch(function (error) {\n                _EventLogger.EventLogger.warn('ConnectionContext', 'Network reconnect check failed:', error);\n              });\n            }, 1000);\n          } else if (!state.isConnected) {\n            setConnectionState(function (prev) {\n              return Object.assign({}, prev, {\n                isConnected: false,\n                error: 'No internet connection',\n                details: 'network_offline'\n              });\n            });\n          }\n        } catch (error) {\n          _EventLogger.EventLogger.warn('ConnectionContext', 'Network state change handler error:', error);\n        }\n      });\n\n      // Listen for auth state changes with error handling\n      var authListener;\n      try {\n        var _supabase$auth$onAuth = _client.supabase.auth.onAuthStateChange(function (event, session) {\n            try {\n              if (event === 'SIGNED_IN' || event === 'TOKEN_REFRESHED') {\n                // Delay connection check to prevent blocking auth flow\n                setTimeout(function () {\n                  checkConnection().catch(function (error) {\n                    _EventLogger.EventLogger.warn('ConnectionContext', 'Auth state change connection check failed:', error);\n                  });\n                }, 1000);\n              } else if (event === 'SIGNED_OUT') {\n                setConnectionState(function (prev) {\n                  return Object.assign({}, prev, {\n                    isAuthenticated: false\n                  });\n                });\n              }\n            } catch (error) {\n              _EventLogger.EventLogger.warn('ConnectionContext', 'Auth state change handler error:', error);\n            }\n          }),\n          data = _supabase$auth$onAuth.data;\n        authListener = data;\n      } catch (error) {\n        _EventLogger.EventLogger.warn('ConnectionContext', 'Failed to set up auth listener:', error);\n      }\n      return function () {\n        clearTimeout(initialCheckTimer);\n        try {\n          var _authListener;\n          subscription.remove();\n          unsubscribe();\n          (_authListener = authListener) == null || (_authListener = _authListener.subscription) == null || _authListener.unsubscribe();\n        } catch (error) {\n          _EventLogger.EventLogger.warn('ConnectionContext', 'Cleanup error in ConnectionProvider:', error);\n        }\n      };\n    }, [checkConnection]);\n\n    // Periodic connection check every 5 minutes\n    (0, _react.useEffect)(function () {\n      var interval = setInterval(function () {\n        if (!connectionState.isChecking) {\n          checkConnection();\n        }\n      }, 5 * 60 * 1000); // 5 minutes\n\n      return function () {\n        return clearInterval(interval);\n      };\n    }, [checkConnection, connectionState.isChecking]);\n    return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(ConnectionContext.Provider, {\n      value: {\n        connectionState: connectionState,\n        checkConnection: checkConnection,\n        resetError: resetError\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }, _this);\n  };\n  _s(ConnectionProvider, \"evlMK2EM9TxLnw/uYKgmqtteW7I=\");\n  _c = ConnectionProvider;\n  var useConnection = exports.useConnection = function useConnection() {\n    _s2();\n    var context = (0, _react.useContext)(ConnectionContext);\n    if (!context) {\n      throw new Error('useConnection must be used within ConnectionProvider');\n    }\n    return context;\n  };\n  _s2(useConnection, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"ConnectionProvider\");\n});","lineCount":216,"map":[[9,2,1,0],[9,6,1,0,"_react"],[9,12,1,0],[9,15,1,0,"_interopRequireWildcard"],[9,38,1,0],[9,39,1,0,"require"],[9,46,1,0],[9,47,1,0,"_dependencyMap"],[9,61,1,0],[10,2,2,0],[10,6,2,0,"_client"],[10,13,2,0],[10,16,2,0,"require"],[10,23,2,0],[10,24,2,0,"_dependencyMap"],[10,38,2,0],[11,2,3,0],[11,6,3,0,"_netinfo"],[11,14,3,0],[11,17,3,0,"_interopRequireDefault"],[11,39,3,0],[11,40,3,0,"require"],[11,47,3,0],[11,48,3,0,"_dependencyMap"],[11,62,3,0],[12,2,4,0],[12,6,4,0,"_reactNative"],[12,18,4,0],[12,21,4,0,"require"],[12,28,4,0],[12,29,4,0,"_dependencyMap"],[12,43,4,0],[13,2,5,0],[13,6,5,0,"_networkAwareApi"],[13,22,5,0],[13,25,5,0,"require"],[13,32,5,0],[13,33,5,0,"_dependencyMap"],[13,47,5,0],[14,2,6,0],[14,6,6,0,"_EventLogger"],[14,18,6,0],[14,21,6,0,"require"],[14,28,6,0],[14,29,6,0,"_dependencyMap"],[14,43,6,0],[15,2,6,51],[15,6,6,51,"_jsxDevRuntime"],[15,20,6,51],[15,23,6,51,"require"],[15,30,6,51],[15,31,6,51,"_dependencyMap"],[15,45,6,51],[16,2,6,51],[16,6,6,51,"_jsxFileName"],[16,18,6,51],[17,4,6,51,"_this"],[17,9,6,51],[18,4,6,51,"_s"],[18,6,6,51],[18,9,6,51,"$RefreshSig$"],[18,21,6,51],[19,4,6,51,"_s2"],[19,7,6,51],[19,10,6,51,"$RefreshSig$"],[19,22,6,51],[20,2,6,51],[20,11,6,51,"_interopRequireWildcard"],[20,35,6,51,"e"],[20,36,6,51],[20,38,6,51,"t"],[20,39,6,51],[20,68,6,51,"WeakMap"],[20,75,6,51],[20,81,6,51,"r"],[20,82,6,51],[20,89,6,51,"WeakMap"],[20,96,6,51],[20,100,6,51,"n"],[20,101,6,51],[20,108,6,51,"WeakMap"],[20,115,6,51],[20,127,6,51,"_interopRequireWildcard"],[20,150,6,51],[20,162,6,51,"_interopRequireWildcard"],[20,186,6,51,"e"],[20,187,6,51],[20,189,6,51,"t"],[20,190,6,51],[20,199,6,51,"t"],[20,200,6,51],[20,204,6,51,"e"],[20,205,6,51],[20,209,6,51,"e"],[20,210,6,51],[20,211,6,51,"__esModule"],[20,221,6,51],[20,230,6,51,"e"],[20,231,6,51],[20,237,6,51,"o"],[20,238,6,51],[20,240,6,51,"i"],[20,241,6,51],[20,243,6,51,"f"],[20,244,6,51],[20,249,6,51,"__proto__"],[20,258,6,51],[20,266,6,51,"default"],[20,273,6,51],[20,275,6,51,"e"],[20,276,6,51],[20,293,6,51,"e"],[20,294,6,51],[20,317,6,51,"e"],[20,318,6,51],[20,343,6,51,"e"],[20,344,6,51],[20,353,6,51,"f"],[20,354,6,51],[20,360,6,51,"o"],[20,361,6,51],[20,364,6,51,"t"],[20,365,6,51],[20,368,6,51,"n"],[20,369,6,51],[20,372,6,51,"r"],[20,373,6,51],[20,381,6,51,"o"],[20,382,6,51],[20,383,6,51,"has"],[20,386,6,51],[20,387,6,51,"e"],[20,388,6,51],[20,398,6,51,"o"],[20,399,6,51],[20,400,6,51,"get"],[20,403,6,51],[20,404,6,51,"e"],[20,405,6,51],[20,408,6,51,"o"],[20,409,6,51],[20,410,6,51,"set"],[20,413,6,51],[20,414,6,51,"e"],[20,415,6,51],[20,417,6,51,"f"],[20,418,6,51],[20,432,6,51,"_t"],[20,434,6,51],[20,438,6,51,"e"],[20,439,6,51],[20,455,6,51,"_t"],[20,457,6,51],[20,464,6,51,"hasOwnProperty"],[20,478,6,51],[20,479,6,51,"call"],[20,483,6,51],[20,484,6,51,"e"],[20,485,6,51],[20,487,6,51,"_t"],[20,489,6,51],[20,496,6,51,"i"],[20,497,6,51],[20,501,6,51,"o"],[20,502,6,51],[20,505,6,51,"Object"],[20,511,6,51],[20,512,6,51,"defineProperty"],[20,526,6,51],[20,531,6,51,"Object"],[20,537,6,51],[20,538,6,51,"getOwnPropertyDescriptor"],[20,562,6,51],[20,563,6,51,"e"],[20,564,6,51],[20,566,6,51,"_t"],[20,568,6,51],[20,575,6,51,"i"],[20,576,6,51],[20,577,6,51,"get"],[20,580,6,51],[20,584,6,51,"i"],[20,585,6,51],[20,586,6,51,"set"],[20,589,6,51],[20,593,6,51,"o"],[20,594,6,51],[20,595,6,51,"f"],[20,596,6,51],[20,598,6,51,"_t"],[20,600,6,51],[20,602,6,51,"i"],[20,603,6,51],[20,607,6,51,"f"],[20,608,6,51],[20,609,6,51,"_t"],[20,611,6,51],[20,615,6,51,"e"],[20,616,6,51],[20,617,6,51,"_t"],[20,619,6,51],[20,630,6,51,"f"],[20,631,6,51],[20,636,6,51,"e"],[20,637,6,51],[20,639,6,51,"t"],[20,640,6,51],[21,2,23,0],[21,6,23,6,"ConnectionContext"],[21,23,23,23],[21,39,23,26],[21,43,23,26,"createContext"],[21,63,23,39],[21,65,23,75,"undefined"],[21,74,23,84],[21,75,23,85],[22,2,25,7],[22,6,25,13,"ConnectionProvider"],[22,24,25,72],[22,27,25,72,"exports"],[22,34,25,72],[22,35,25,72,"ConnectionProvider"],[22,53,25,72],[22,56,25,75],[22,65,25,13,"ConnectionProvider"],[22,83,25,72,"ConnectionProvider"],[22,84,25,72,"_ref"],[22,88,25,72],[22,90,25,93],[23,4,25,93,"_s"],[23,6,25,93],[24,4,25,93],[24,8,25,78,"children"],[24,16,25,86],[24,19,25,86,"_ref"],[24,23,25,86],[24,24,25,78,"children"],[24,32,25,86],[25,4,26,2],[25,8,26,2,"_useState"],[25,17,26,2],[25,20,26,48],[25,24,26,48,"useState"],[25,39,26,56],[25,41,26,74],[26,8,27,4,"isConnected"],[26,19,27,15],[26,21,27,17],[26,25,27,21],[27,8,28,4,"isAuthenticated"],[27,23,28,19],[27,25,28,21],[27,30,28,26],[28,8,29,4,"isChecking"],[28,18,29,14],[28,20,29,16],[28,25,29,21],[29,8,30,4,"error"],[29,13,30,9],[29,15,30,11],[29,19,30,15],[30,8,31,4,"lastChecked"],[30,19,31,15],[30,21,31,17],[30,25,31,21],[31,8,32,4,"details"],[31,15,32,11],[31,17,32,13],[32,6,33,2],[32,7,33,3],[32,8,33,4],[33,6,33,4,"_useState2"],[33,16,33,4],[33,23,33,4,"_slicedToArray2"],[33,38,33,4],[33,39,33,4,"default"],[33,46,33,4],[33,48,33,4,"_useState"],[33,57,33,4],[34,6,26,9,"connectionState"],[34,21,26,24],[34,24,26,24,"_useState2"],[34,34,26,24],[35,6,26,26,"setConnectionState"],[35,24,26,44],[35,27,26,44,"_useState2"],[35,37,26,44],[36,4,35,2],[36,8,35,8,"checkConnection"],[36,23,35,23],[36,26,35,26],[36,30,35,26,"useCallback"],[36,48,35,37],[36,67,35,37,"_asyncToGenerator2"],[36,85,35,37],[36,86,35,37,"default"],[36,93,35,37],[36,95,35,38],[36,108,35,50],[37,6,36,4,"setConnectionState"],[37,24,36,22],[37,25,36,23],[37,35,36,23,"prev"],[37,39,36,27],[38,8,36,27],[38,15,36,27,"Object"],[38,21,36,27],[38,22,36,27,"assign"],[38,28,36,27],[38,33,36,37,"prev"],[38,37,36,41],[39,10,36,43,"isChecking"],[39,20,36,53],[39,22,36,55],[39,26,36,59],[40,10,36,61,"error"],[40,15,36,66],[40,17,36,68],[41,8,36,72],[42,6,36,72],[42,7,36,75],[42,8,36,76],[43,6,38,4],[43,10,38,8],[44,8,39,6],[45,8,40,6],[45,12,40,12,"netState"],[45,20,40,20],[45,29,40,29,"NetInfo"],[45,45,40,36],[45,46,40,37,"fetch"],[45,51,40,42],[45,52,40,43],[45,53,40,44],[46,8,42,6],[46,12,42,10],[46,13,42,11,"netState"],[46,21,42,19],[46,22,42,20,"isConnected"],[46,33,42,31],[46,35,42,33],[47,10,43,8,"setConnectionState"],[47,28,43,26],[47,29,43,27],[48,12,44,10,"isConnected"],[48,23,44,21],[48,25,44,23],[48,30,44,28],[49,12,45,10,"isAuthenticated"],[49,27,45,25],[49,29,45,27],[49,34,45,32],[50,12,46,10,"isChecking"],[50,22,46,20],[50,24,46,22],[50,29,46,27],[51,12,47,10,"error"],[51,17,47,15],[51,19,47,17],[51,43,47,41],[52,12,48,10,"lastChecked"],[52,23,48,21],[52,25,48,23],[52,29,48,27,"Date"],[52,33,48,31],[52,34,48,32],[52,35,48,33],[53,12,49,10,"details"],[53,19,49,17],[53,21,49,19],[54,10,50,8],[54,11,50,9],[54,12,50,10],[55,10,51,8],[56,8,52,6],[58,8,54,6],[59,8,55,6],[59,12,55,12,"result"],[59,18,55,18],[59,27,55,27],[59,31,55,27,"testConnection"],[59,53,55,41],[59,55,55,42],[59,56,55,43],[60,8,57,6,"setConnectionState"],[60,26,57,24],[60,27,57,25],[61,10,58,8,"isConnected"],[61,21,58,19],[61,23,58,21,"result"],[61,29,58,27],[61,30,58,28,"connected"],[61,39,58,37],[62,10,59,8,"isAuthenticated"],[62,25,59,23],[62,27,59,25,"result"],[62,33,59,31],[62,34,59,32,"authenticated"],[62,47,59,45],[62,51,59,49],[62,56,59,54],[63,10,60,8,"isChecking"],[63,20,60,18],[63,22,60,20],[63,27,60,25],[64,10,61,8,"error"],[64,15,61,13],[64,17,61,15,"result"],[64,23,61,21],[64,24,61,22,"error"],[64,29,61,27],[64,33,61,31],[64,37,61,35],[65,10,62,8,"lastChecked"],[65,21,62,19],[65,23,62,21],[65,27,62,25,"Date"],[65,31,62,29],[65,32,62,30],[65,33,62,31],[66,10,63,8,"details"],[66,17,63,15],[66,19,63,17,"result"],[66,25,63,23],[66,26,63,24,"details"],[66,33,63,31],[66,37,63,35],[67,8,64,6],[67,9,64,7],[67,10,64,8],[68,6,65,4],[68,7,65,5],[68,8,65,6],[68,15,65,13,"error"],[68,20,65,23],[68,22,65,25],[69,8,65,25],[69,12,65,25,"_error$message"],[69,26,65,25],[70,8,66,6],[71,8,67,6],[71,12,67,10],[71,14,67,11,"error"],[71,19,67,16],[71,32,67,16,"_error$message"],[71,46,67,16],[71,49,67,11,"error"],[71,54,67,16],[71,55,67,18,"message"],[71,62,67,25],[71,75,67,11,"_error$message"],[71,89,67,11],[71,90,67,27,"includes"],[71,98,67,35],[71,99,67,36],[71,123,67,60],[71,124,67,61],[71,127,67,63],[72,10,68,8],[72,14,68,8,"logApiError"],[72,42,68,19],[72,44,68,20,"error"],[72,49,68,25],[72,51,68,27],[72,86,68,62],[72,87,68,63],[73,8,69,6],[74,8,71,6,"setConnectionState"],[74,26,71,24],[74,27,71,25],[75,10,72,8,"isConnected"],[75,21,72,19],[75,23,72,21],[75,28,72,26],[76,10,73,8,"isAuthenticated"],[76,25,73,23],[76,27,73,25],[76,32,73,30],[77,10,74,8,"isChecking"],[77,20,74,18],[77,22,74,20],[77,27,74,25],[78,10,75,8,"error"],[78,15,75,13],[78,17,75,15,"error"],[78,22,75,20],[78,23,75,21,"message"],[78,30,75,28],[78,34,75,32],[78,59,75,57],[79,10,76,8,"lastChecked"],[79,21,76,19],[79,23,76,21],[79,27,76,25,"Date"],[79,31,76,29],[79,32,76,30],[79,33,76,31],[80,10,77,8,"details"],[80,17,77,15],[80,19,77,17],[81,8,78,6],[81,9,78,7],[81,10,78,8],[82,6,79,4],[83,4,80,2],[83,5,80,3],[83,8,80,5],[83,10,80,7],[83,11,80,8],[84,4,82,2],[84,8,82,8,"resetError"],[84,18,82,18],[84,21,82,21],[84,25,82,21,"useCallback"],[84,43,82,32],[84,45,82,33],[84,57,82,39],[85,6,83,4,"setConnectionState"],[85,24,83,22],[85,25,83,23],[85,35,83,23,"prev"],[85,39,83,27],[86,8,83,27],[86,15,83,27,"Object"],[86,21,83,27],[86,22,83,27,"assign"],[86,28,83,27],[86,33,83,37,"prev"],[86,37,83,41],[87,10,83,43,"error"],[87,15,83,48],[87,17,83,50],[88,8,83,54],[89,6,83,54],[89,7,83,57],[89,8,83,58],[90,4,84,2],[90,5,84,3],[90,7,84,5],[90,9,84,7],[90,10,84,8],[92,4,86,2],[93,4,87,2],[93,8,87,2,"useEffect"],[93,24,87,11],[93,26,87,12],[93,38,87,18],[94,6,88,4],[95,6,89,4],[95,10,89,10,"initialCheckTimer"],[95,27,89,27],[95,30,89,30,"setTimeout"],[95,40,89,40],[95,41,89,41],[95,53,89,47],[96,8,90,6,"checkConnection"],[96,23,90,21],[96,24,90,22],[96,25,90,23],[96,26,90,24,"catch"],[96,31,90,29],[96,32,90,30],[96,42,90,30,"error"],[96,47,90,35],[96,49,90,39],[97,10,91,8,"EventLogger"],[97,34,91,19],[97,35,91,20,"warn"],[97,39,91,24],[97,40,91,25],[97,59,91,44],[97,61,91,46],[97,122,91,107],[97,124,91,109,"error"],[97,129,91,114],[97,130,91,115],[98,8,92,6],[98,9,92,7],[98,10,92,8],[99,6,93,4],[99,7,93,5],[99,9,93,7],[99,13,93,11],[99,14,93,12],[99,15,93,13],[99,16,93,14],[101,6,95,4],[102,6,96,4],[102,10,96,10,"subscription"],[102,22,96,22],[102,25,96,25,"AppState"],[102,46,96,33],[102,47,96,34,"addEventListener"],[102,63,96,50],[102,64,96,51],[102,72,96,59],[102,74,96,61],[102,84,96,62,"nextAppState"],[102,96,96,90],[102,98,96,95],[103,8,97,6],[103,12,97,10,"nextAppState"],[103,24,97,22],[103,29,97,27],[103,37,97,35],[103,39,97,37],[104,10,98,8],[105,10,99,8,"setTimeout"],[105,20,99,18],[105,21,99,19],[105,33,99,25],[106,12,100,10,"checkConnection"],[106,27,100,25],[106,28,100,26],[106,29,100,27],[106,30,100,28,"catch"],[106,35,100,33],[106,36,100,34],[106,46,100,34,"error"],[106,51,100,39],[106,53,100,43],[107,14,101,12,"EventLogger"],[107,38,101,23],[107,39,101,24,"warn"],[107,43,101,28],[107,44,101,29],[107,63,101,48],[107,65,101,50],[107,105,101,90],[107,107,101,92,"error"],[107,112,101,97],[107,113,101,98],[108,12,102,10],[108,13,102,11],[108,14,102,12],[109,10,103,8],[109,11,103,9],[109,13,103,11],[109,16,103,14],[109,17,103,15],[110,8,104,6],[111,6,105,4],[111,7,105,5],[111,8,105,6],[113,6,107,4],[114,6,108,4],[114,10,108,10,"unsubscribe"],[114,21,108,21],[114,24,108,24,"NetInfo"],[114,40,108,31],[114,41,108,32,"addEventListener"],[114,57,108,48],[114,58,108,49],[114,68,108,50,"state"],[114,73,108,55],[114,75,108,60],[115,8,109,6],[115,12,109,10],[116,10,110,8],[116,14,110,12,"state"],[116,19,110,17],[116,20,110,18,"isConnected"],[116,31,110,29],[116,35,110,33],[116,36,110,34,"connectionState"],[116,51,110,49],[116,52,110,50,"isConnected"],[116,63,110,61],[116,65,110,63],[117,12,111,10],[118,12,112,10,"setTimeout"],[118,22,112,20],[118,23,112,21],[118,35,112,27],[119,14,113,12,"checkConnection"],[119,29,113,27],[119,30,113,28],[119,31,113,29],[119,32,113,30,"catch"],[119,37,113,35],[119,38,113,36],[119,48,113,36,"error"],[119,53,113,41],[119,55,113,45],[120,16,114,14,"EventLogger"],[120,40,114,25],[120,41,114,26,"warn"],[120,45,114,30],[120,46,114,31],[120,65,114,50],[120,67,114,52],[120,100,114,85],[120,102,114,87,"error"],[120,107,114,92],[120,108,114,93],[121,14,115,12],[121,15,115,13],[121,16,115,14],[122,12,116,10],[122,13,116,11],[122,15,116,13],[122,19,116,17],[122,20,116,18],[123,10,117,8],[123,11,117,9],[123,17,117,15],[123,21,117,19],[123,22,117,20,"state"],[123,27,117,25],[123,28,117,26,"isConnected"],[123,39,117,37],[123,41,117,39],[124,12,118,10,"setConnectionState"],[124,30,118,28],[124,31,118,29],[124,41,118,29,"prev"],[124,45,118,33],[125,14,118,33],[125,21,118,33,"Object"],[125,27,118,33],[125,28,118,33,"assign"],[125,34,118,33],[125,39,119,15,"prev"],[125,43,119,19],[126,16,120,12,"isConnected"],[126,27,120,23],[126,29,120,25],[126,34,120,30],[127,16,121,12,"error"],[127,21,121,17],[127,23,121,19],[127,47,121,43],[128,16,122,12,"details"],[128,23,122,19],[128,25,122,21],[129,14,122,38],[130,12,122,38],[130,13,123,12],[130,14,123,13],[131,10,124,8],[132,8,125,6],[132,9,125,7],[132,10,125,8],[132,17,125,15,"error"],[132,22,125,20],[132,24,125,22],[133,10,126,8,"EventLogger"],[133,34,126,19],[133,35,126,20,"warn"],[133,39,126,24],[133,40,126,25],[133,59,126,44],[133,61,126,46],[133,98,126,83],[133,100,126,85,"error"],[133,105,126,90],[133,106,126,91],[134,8,127,6],[135,6,128,4],[135,7,128,5],[135,8,128,6],[137,6,130,4],[138,6,131,4],[138,10,131,8,"authListener"],[138,22,131,25],[139,6,132,4],[139,10,132,8],[140,8,133,6],[140,12,133,6,"_supabase$auth$onAuth"],[140,33,133,6],[140,36,133,23,"supabase"],[140,52,133,31],[140,53,133,32,"auth"],[140,57,133,36],[140,58,133,37,"onAuthStateChange"],[140,75,133,54],[140,76,133,55],[140,86,133,56,"event"],[140,91,133,61],[140,93,133,63,"session"],[140,100,133,70],[140,102,133,75],[141,12,134,8],[141,16,134,12],[142,14,135,10],[142,18,135,14,"event"],[142,23,135,19],[142,28,135,24],[142,39,135,35],[142,43,135,39,"event"],[142,48,135,44],[142,53,135,49],[142,70,135,66],[142,72,135,68],[143,16,136,12],[144,16,137,12,"setTimeout"],[144,26,137,22],[144,27,137,23],[144,39,137,29],[145,18,138,14,"checkConnection"],[145,33,138,29],[145,34,138,30],[145,35,138,31],[145,36,138,32,"catch"],[145,41,138,37],[145,42,138,38],[145,52,138,38,"error"],[145,57,138,43],[145,59,138,47],[146,20,139,16,"EventLogger"],[146,44,139,27],[146,45,139,28,"warn"],[146,49,139,32],[146,50,139,33],[146,69,139,52],[146,71,139,54],[146,115,139,98],[146,117,139,100,"error"],[146,122,139,105],[146,123,139,106],[147,18,140,14],[147,19,140,15],[147,20,140,16],[148,16,141,12],[148,17,141,13],[148,19,141,15],[148,23,141,19],[148,24,141,20],[149,14,142,10],[149,15,142,11],[149,21,142,17],[149,25,142,21,"event"],[149,30,142,26],[149,35,142,31],[149,47,142,43],[149,49,142,45],[150,16,143,12,"setConnectionState"],[150,34,143,30],[150,35,143,31],[150,45,143,31,"prev"],[150,49,143,35],[151,18,143,35],[151,25,143,35,"Object"],[151,31,143,35],[151,32,143,35,"assign"],[151,38,143,35],[151,43,144,17,"prev"],[151,47,144,21],[152,20,145,14,"isAuthenticated"],[152,35,145,29],[152,37,145,31],[153,18,145,36],[154,16,145,36],[154,17,146,14],[154,18,146,15],[155,14,147,10],[156,12,148,8],[156,13,148,9],[156,14,148,10],[156,21,148,17,"error"],[156,26,148,22],[156,28,148,24],[157,14,149,10,"EventLogger"],[157,38,149,21],[157,39,149,22,"warn"],[157,43,149,26],[157,44,149,27],[157,63,149,46],[157,65,149,48],[157,99,149,82],[157,101,149,84,"error"],[157,106,149,89],[157,107,149,90],[158,12,150,8],[159,10,151,6],[159,11,151,7],[159,12,151,8],[160,10,133,14,"data"],[160,14,133,18],[160,17,133,18,"_supabase$auth$onAuth"],[160,38,133,18],[160,39,133,14,"data"],[160,43,133,18],[161,8,152,6,"authListener"],[161,20,152,18],[161,23,152,21,"data"],[161,27,152,25],[162,6,153,4],[162,7,153,5],[162,8,153,6],[162,15,153,13,"error"],[162,20,153,18],[162,22,153,20],[163,8,154,6,"EventLogger"],[163,32,154,17],[163,33,154,18,"warn"],[163,37,154,22],[163,38,154,23],[163,57,154,42],[163,59,154,44],[163,92,154,77],[163,94,154,79,"error"],[163,99,154,84],[163,100,154,85],[164,6,155,4],[165,6,157,4],[165,13,157,11],[165,25,157,17],[166,8,158,6,"clearTimeout"],[166,20,158,18],[166,21,158,19,"initialCheckTimer"],[166,38,158,36],[166,39,158,37],[167,8,159,6],[167,12,159,10],[168,10,159,10],[168,14,159,10,"_authListener"],[168,27,159,10],[169,10,160,8,"subscription"],[169,22,160,20],[169,23,160,21,"remove"],[169,29,160,27],[169,30,160,28],[169,31,160,29],[170,10,161,8,"unsubscribe"],[170,21,161,19],[170,22,161,20],[170,23,161,21],[171,10,162,8],[171,11,162,8,"_authListener"],[171,24,162,8],[171,27,162,8,"authListener"],[171,39,162,20],[171,53,162,20,"_authListener"],[171,66,162,20],[171,69,162,8,"_authListener"],[171,82,162,8],[171,83,162,22,"subscription"],[171,95,162,34],[171,108,162,8,"_authListener"],[171,121,162,8],[171,122,162,36,"unsubscribe"],[171,133,162,47],[171,134,162,48],[171,135,162,49],[172,8,163,6],[172,9,163,7],[172,10,163,8],[172,17,163,15,"error"],[172,22,163,20],[172,24,163,22],[173,10,164,8,"EventLogger"],[173,34,164,19],[173,35,164,20,"warn"],[173,39,164,24],[173,40,164,25],[173,59,164,44],[173,61,164,46],[173,99,164,84],[173,101,164,86,"error"],[173,106,164,91],[173,107,164,92],[174,8,165,6],[175,6,166,4],[175,7,166,5],[176,4,167,2],[176,5,167,3],[176,7,167,5],[176,8,167,6,"checkConnection"],[176,23,167,21],[176,24,167,22],[176,25,167,23],[178,4,169,2],[179,4,170,2],[179,8,170,2,"useEffect"],[179,24,170,11],[179,26,170,12],[179,38,170,18],[180,6,171,4],[180,10,171,10,"interval"],[180,18,171,18],[180,21,171,21,"setInterval"],[180,32,171,32],[180,33,171,33],[180,45,171,39],[181,8,172,6],[181,12,172,10],[181,13,172,11,"connectionState"],[181,28,172,26],[181,29,172,27,"isChecking"],[181,39,172,37],[181,41,172,39],[182,10,173,8,"checkConnection"],[182,25,173,23],[182,26,173,24],[182,27,173,25],[183,8,174,6],[184,6,175,4],[184,7,175,5],[184,9,175,7],[184,10,175,8],[184,13,175,11],[184,15,175,13],[184,18,175,16],[184,22,175,20],[184,23,175,21],[184,24,175,22],[184,25,175,23],[186,6,177,4],[186,13,177,11],[187,8,177,11],[187,15,177,17,"clearInterval"],[187,28,177,30],[187,29,177,31,"interval"],[187,37,177,39],[187,38,177,40],[188,6,177,40],[189,4,178,2],[189,5,178,3],[189,7,178,5],[189,8,178,6,"checkConnection"],[189,23,178,21],[189,25,178,23,"connectionState"],[189,40,178,38],[189,41,178,39,"isChecking"],[189,51,178,49],[189,52,178,50],[189,53,178,51],[190,4,180,2],[190,24,181,4],[190,28,181,4,"_jsxDevRuntime"],[190,42,181,4],[190,43,181,4,"jsxDEV"],[190,49,181,4],[190,51,181,5,"ConnectionContext"],[190,68,181,22],[190,69,181,23,"Provider"],[190,77,181,31],[191,6,181,32,"value"],[191,11,181,37],[191,13,181,39],[192,8,181,41,"connectionState"],[192,23,181,56],[192,25,181,41,"connectionState"],[192,40,181,56],[193,8,181,58,"checkConnection"],[193,23,181,73],[193,25,181,58,"checkConnection"],[193,40,181,73],[194,8,181,75,"resetError"],[194,18,181,85],[194,20,181,75,"resetError"],[195,6,181,86],[195,7,181,88],[196,6,181,88,"children"],[196,14,181,88],[196,16,182,7,"children"],[197,4,182,15],[198,6,182,15,"fileName"],[198,14,182,15],[198,16,182,15,"_jsxFileName"],[198,28,182,15],[199,6,182,15,"lineNumber"],[199,16,182,15],[200,6,182,15,"columnNumber"],[200,18,182,15],[201,4,182,15],[201,7,182,15,"_this"],[201,12,183,32],[201,13,183,33],[202,2,185,0],[202,3,185,1],[203,2,185,2,"_s"],[203,4,185,2],[203,5,25,13,"ConnectionProvider"],[203,23,25,72],[204,2,25,72,"_c"],[204,4,25,72],[204,7,25,13,"ConnectionProvider"],[204,25,25,72],[205,2,187,7],[205,6,187,13,"useConnection"],[205,19,187,26],[205,22,187,26,"exports"],[205,29,187,26],[205,30,187,26,"useConnection"],[205,43,187,26],[205,46,187,29],[205,55,187,13,"useConnection"],[205,68,187,26,"useConnection"],[205,69,187,26],[205,71,187,35],[206,4,187,35,"_s2"],[206,7,187,35],[207,4,188,2],[207,8,188,8,"context"],[207,15,188,15],[207,18,188,18],[207,22,188,18,"useContext"],[207,39,188,28],[207,41,188,29,"ConnectionContext"],[207,58,188,46],[207,59,188,47],[208,4,189,2],[208,8,189,6],[208,9,189,7,"context"],[208,16,189,14],[208,18,189,16],[209,6,190,4],[209,12,190,10],[209,16,190,14,"Error"],[209,21,190,19],[209,22,190,20],[209,76,190,74],[209,77,190,75],[210,4,191,2],[211,4,192,2],[211,11,192,9,"context"],[211,18,192,16],[212,2,193,0],[212,3,193,1],[213,2,193,2,"_s2"],[213,5,193,2],[213,6,187,13,"useConnection"],[213,19,187,26],[214,2,187,26],[214,6,187,26,"_c"],[214,8,187,26],[215,2,187,26,"$RefreshReg$"],[215,14,187,26],[215,15,187,26,"_c"],[215,17,187,26],[216,0,187,26],[216,3]],"functionMap":{"names":["<global>","ConnectionProvider","checkConnection","setConnectionState$argument_0","resetError","useEffect$argument_0","setTimeout$argument_0","checkConnection._catch$argument_0","AppState.addEventListener$argument_1","NetInfo.addEventListener$argument_0","supabase.auth.onAuthStateChange$argument_0","<anonymous>","setInterval$argument_0","useConnection"],"mappings":"AAA;2ECwB;sCCU;uBCC,oDD;GD4C;iCGE;uBDC,kCC;GHC;YIG;yCCE;8BCC;ODE;KDC;6DGG;mBFG;kCCC;WDE;SEC;KHE;iDIG;qBHI;oCCC;aDE;WGC;6BNE;YMK;KJK;uDKK;uBJI;sCCC;eDE;aIC;+BPE;cOG;OLK;WMM;KNS;GJC;YIG;iCOC;KPI;WME,6BN;GJC;CDO;6BaE;CbM"}},"type":"js/module"}]}