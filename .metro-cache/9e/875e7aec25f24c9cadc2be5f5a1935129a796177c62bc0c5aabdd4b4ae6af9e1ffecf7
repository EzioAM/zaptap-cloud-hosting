{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"expo-notifications","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":175},"end":{"line":7,"column":52,"index":227}}],"key":"nrBDtkRVez7cBhLzyaRjl+xVfvE=","exportNames":["*"]}},{"name":"expo-device","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":229},"end":{"line":8,"column":38,"index":267}}],"key":"bBpmAhO1g++sdeUzQmFVGoQIVwg=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":269},"end":{"line":9,"column":40,"index":309}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":311},"end":{"line":10,"column":69,"index":380}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":382},"end":{"line":11,"column":54,"index":436}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}},{"name":"../../types/notifications","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":438},"end":{"line":21,"column":35,"index":695}}],"key":"RfYZJlS05mZGiTEEd7xWH/zL7nI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = undefined;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[3]));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[4]));\n  var Notifications = _interopRequireWildcard(require(_dependencyMap[5]));\n  var Device = _interopRequireWildcard(require(_dependencyMap[6]));\n  var _reactNative = require(_dependencyMap[7]);\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[8]));\n  var _EventLogger = require(_dependencyMap[9]);\n  var _notifications = require(_dependencyMap[10]);\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  /**\r\n   * NotificationService.ts\r\n   * Core notification service handling Expo notifications\r\n   * Features: permissions, push tokens, local notifications, badge management\r\n   */\n  var NotificationService = /*#__PURE__*/function () {\n    function NotificationService() {\n      (0, _classCallCheck2.default)(this, NotificationService);\n      this.isInitialized = false;\n      this.notificationListener = null;\n      this.responseListener = null;\n      this.setupNotificationHandler();\n    }\n    return (0, _createClass2.default)(NotificationService, [{\n      key: \"initialize\",\n      value: (\n      /**\r\n       * Initialize the notification service\r\n       */\n      function () {\n        var _initialize = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            if (this.isInitialized) {\n              return true;\n            }\n\n            // Set up notification channels for Android\n            {\n              yield this.setupAndroidChannels();\n            }\n\n            // Set up notification categories\n            yield this.setupNotificationCategories();\n\n            // Setup listeners\n            this.setupNotificationListeners();\n            this.isInitialized = true;\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Initialized successfully');\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Initialization failed:', error);\n            return false;\n          }\n        });\n        function initialize() {\n          return _initialize.apply(this, arguments);\n        }\n        return initialize;\n      }()\n      /**\r\n       * Request notification permissions\r\n       */\n      )\n    }, {\n      key: \"requestPermissions\",\n      value: (function () {\n        var _requestPermissions = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            if (!Device.isDevice) {\n              _EventLogger.EventLogger.warn('Notification', '[NotificationService] Notifications not supported on simulator');\n              return {\n                status: 'denied'\n              };\n            }\n            var _yield$Notifications$ = yield Notifications.getPermissionsAsync(),\n              existingStatus = _yield$Notifications$.status;\n            var finalStatus = existingStatus;\n            if (existingStatus !== 'granted') {\n              var _yield$Notifications$2 = yield Notifications.requestPermissionsAsync({\n                  ios: {\n                    allowAlert: true,\n                    allowBadge: true,\n                    allowSound: true,\n                    allowAnnouncements: true,\n                    allowCriticalAlerts: false\n                  }\n                }),\n                status = _yield$Notifications$2.status;\n              finalStatus = status;\n            }\n\n            // Get detailed permissions for iOS\n            var iosPermissions;\n            var result = {\n              status: finalStatus,\n              ios: iosPermissions\n            };\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Permission status:', result);\n            return result;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Permission request failed:', error);\n            return {\n              status: 'denied'\n            };\n          }\n        });\n        function requestPermissions() {\n          return _requestPermissions.apply(this, arguments);\n        }\n        return requestPermissions;\n      }()\n      /**\r\n       * Get push notification token\r\n       */\n      )\n    }, {\n      key: \"getPushToken\",\n      value: (function () {\n        var _getPushToken = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            if (!Device.isDevice) {\n              _EventLogger.EventLogger.warn('Notification', '[NotificationService] Push tokens not available on simulator');\n              return null;\n            }\n            var permissions = yield this.requestPermissions();\n            if (permissions.status !== 'granted') {\n              _EventLogger.EventLogger.warn('Notification', '[NotificationService] Push notifications permission not granted');\n              return null;\n            }\n            var tokenData = yield Notifications.getExpoPushTokenAsync({\n              projectId: 'c9104518-2191-4a5a-aa20-76cebb5193cd' // From app.config.js\n            });\n            var token = tokenData.data;\n\n            // Store token locally\n            yield _asyncStorage.default.setItem(NotificationService.STORAGE_KEYS.PUSH_TOKEN, token);\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Push token obtained:', token.substring(0, 20) + '...');\n            return token;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to get push token:', error);\n            return null;\n          }\n        });\n        function getPushToken() {\n          return _getPushToken.apply(this, arguments);\n        }\n        return getPushToken;\n      }()\n      /**\r\n       * Schedule a local notification\r\n       */\n      )\n    }, {\n      key: \"scheduleLocalNotification\",\n      value: (function () {\n        var _scheduleLocalNotification = (0, _asyncToGenerator2.default)(function* (request) {\n          try {\n            var permissions = yield this.requestPermissions();\n            if (permissions.status !== 'granted') {\n              _EventLogger.EventLogger.warn('Notification', '[NotificationService] Cannot schedule notification without permission');\n              return null;\n            }\n            var notificationRequest = {\n              content: {\n                title: request.content.title,\n                body: request.content.body,\n                data: request.content.data || {},\n                sound: request.content.sound || 'default',\n                badge: request.content.badge,\n                categoryIdentifier: request.content.categoryIdentifier\n              },\n              trigger: null // Will be set based on trigger type\n            };\n\n            // Set trigger based on type\n            if (request.trigger.type === 'time' && request.trigger.date) {\n              notificationRequest.trigger = {\n                date: request.trigger.date,\n                repeats: request.trigger.repeats || false,\n                channelId: request.trigger.channelId || _notifications.NotificationChannels.DEFAULT.id\n              };\n            }\n            var identifier = yield Notifications.scheduleNotificationAsync(notificationRequest);\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Local notification scheduled:', identifier);\n            return identifier;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to schedule local notification:', error);\n            return null;\n          }\n        });\n        function scheduleLocalNotification(_x) {\n          return _scheduleLocalNotification.apply(this, arguments);\n        }\n        return scheduleLocalNotification;\n      }()\n      /**\r\n       * Cancel a scheduled notification\r\n       */\n      )\n    }, {\n      key: \"cancelNotification\",\n      value: (function () {\n        var _cancelNotification = (0, _asyncToGenerator2.default)(function* (identifier) {\n          try {\n            yield Notifications.cancelScheduledNotificationAsync(identifier);\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Notification cancelled:', identifier);\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to cancel notification:', error);\n          }\n        });\n        function cancelNotification(_x2) {\n          return _cancelNotification.apply(this, arguments);\n        }\n        return cancelNotification;\n      }()\n      /**\r\n       * Cancel all scheduled notifications\r\n       */\n      )\n    }, {\n      key: \"cancelAllNotifications\",\n      value: (function () {\n        var _cancelAllNotifications = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            yield Notifications.cancelAllScheduledNotificationsAsync();\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] All notifications cancelled');\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to cancel all notifications:', error);\n          }\n        });\n        function cancelAllNotifications() {\n          return _cancelAllNotifications.apply(this, arguments);\n        }\n        return cancelAllNotifications;\n      }()\n      /**\r\n       * Set app badge number\r\n       */\n      )\n    }, {\n      key: \"setBadgeCount\",\n      value: (function () {\n        var _setBadgeCount = (0, _asyncToGenerator2.default)(function* (count) {\n          try {\n            yield Notifications.setBadgeCountAsync(count);\n            yield _asyncStorage.default.setItem(NotificationService.STORAGE_KEYS.BADGE_COUNT, count.toString());\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Badge count set to:', count);\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to set badge count:', error);\n          }\n        });\n        function setBadgeCount(_x3) {\n          return _setBadgeCount.apply(this, arguments);\n        }\n        return setBadgeCount;\n      }()\n      /**\r\n       * Get current badge count\r\n       */\n      )\n    }, {\n      key: \"getBadgeCount\",\n      value: (function () {\n        var _getBadgeCount = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var stored = yield _asyncStorage.default.getItem(NotificationService.STORAGE_KEYS.BADGE_COUNT);\n            return stored ? parseInt(stored, 10) : 0;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to get badge count:', error);\n            return 0;\n          }\n        });\n        function getBadgeCount() {\n          return _getBadgeCount.apply(this, arguments);\n        }\n        return getBadgeCount;\n      }()\n      /**\r\n       * Clear app badge\r\n       */\n      )\n    }, {\n      key: \"clearBadge\",\n      value: (function () {\n        var _clearBadge = (0, _asyncToGenerator2.default)(function* () {\n          yield this.setBadgeCount(0);\n        });\n        function clearBadge() {\n          return _clearBadge.apply(this, arguments);\n        }\n        return clearBadge;\n      }()\n      /**\r\n       * Get notification preferences\r\n       */\n      )\n    }, {\n      key: \"getPreferences\",\n      value: (function () {\n        var _getPreferences = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var stored = yield _asyncStorage.default.getItem(NotificationService.STORAGE_KEYS.PREFERENCES);\n            if (stored) {\n              return {\n                ..._notifications.DEFAULT_NOTIFICATION_PREFERENCES,\n                ...JSON.parse(stored)\n              };\n            }\n            return _notifications.DEFAULT_NOTIFICATION_PREFERENCES;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to get preferences:', error);\n            return _notifications.DEFAULT_NOTIFICATION_PREFERENCES;\n          }\n        });\n        function getPreferences() {\n          return _getPreferences.apply(this, arguments);\n        }\n        return getPreferences;\n      }()\n      /**\r\n       * Save notification preferences\r\n       */\n      )\n    }, {\n      key: \"savePreferences\",\n      value: (function () {\n        var _savePreferences = (0, _asyncToGenerator2.default)(function* (preferences) {\n          try {\n            yield _asyncStorage.default.setItem(NotificationService.STORAGE_KEYS.PREFERENCES, JSON.stringify(preferences));\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Preferences saved');\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to save preferences:', error);\n          }\n        });\n        function savePreferences(_x4) {\n          return _savePreferences.apply(this, arguments);\n        }\n        return savePreferences;\n      }()\n      /**\r\n       * Check if notifications should be shown based on quiet hours\r\n       */\n      )\n    }, {\n      key: \"shouldShowNotification\",\n      value: (function () {\n        var _shouldShowNotification = (0, _asyncToGenerator2.default)(function* (type) {\n          try {\n            var preferences = yield this.getPreferences();\n            if (!preferences.enabled) {\n              return false;\n            }\n\n            // Check category preferences\n            switch (type) {\n              case 'automation':\n                if (!preferences.categories.automations) return false;\n                break;\n              case 'share':\n                if (!preferences.categories.shares) return false;\n                break;\n              case 'social':\n                if (!preferences.categories.social) return false;\n                break;\n              case 'system':\n                if (!preferences.categories.system) return false;\n                break;\n            }\n\n            // Check quiet hours\n            if (preferences.quietHours.enabled) {\n              var now = new Date();\n              var currentTime = now.getHours() * 60 + now.getMinutes();\n              var _preferences$quietHou = preferences.quietHours.start.split(':').map(Number),\n                _preferences$quietHou2 = (0, _slicedToArray2.default)(_preferences$quietHou, 2),\n                startHour = _preferences$quietHou2[0],\n                startMin = _preferences$quietHou2[1];\n              var _preferences$quietHou3 = preferences.quietHours.end.split(':').map(Number),\n                _preferences$quietHou4 = (0, _slicedToArray2.default)(_preferences$quietHou3, 2),\n                endHour = _preferences$quietHou4[0],\n                endMin = _preferences$quietHou4[1];\n              var quietStart = startHour * 60 + startMin;\n              var quietEnd = endHour * 60 + endMin;\n\n              // Handle quiet hours spanning midnight\n              if (quietStart > quietEnd) {\n                if (currentTime >= quietStart || currentTime <= quietEnd) {\n                  return false;\n                }\n              } else {\n                if (currentTime >= quietStart && currentTime <= quietEnd) {\n                  return false;\n                }\n              }\n            }\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Error checking notification permission:', error);\n            return true; // Default to showing notifications\n          }\n        });\n        function shouldShowNotification(_x5) {\n          return _shouldShowNotification.apply(this, arguments);\n        }\n        return shouldShowNotification;\n      }()\n      /**\r\n       * Set up notification handler for background/foreground behavior\r\n       */\n      )\n    }, {\n      key: \"setupNotificationHandler\",\n      value: function setupNotificationHandler() {\n        var _this = this;\n        Notifications.setNotificationHandler({\n          handleNotification: function () {\n            var _ref = (0, _asyncToGenerator2.default)(function* (notification) {\n              var type = notification.request.content.data?.type;\n              var shouldShow = yield _this.shouldShowNotification(type || 'system');\n              return {\n                shouldShowAlert: shouldShow,\n                shouldPlaySound: shouldShow,\n                shouldSetBadge: shouldShow\n              };\n            });\n            return function handleNotification(_x6) {\n              return _ref.apply(this, arguments);\n            };\n          }()\n        });\n      }\n\n      /**\r\n       * Set up Android notification channels\r\n       */\n    }, {\n      key: \"setupAndroidChannels\",\n      value: (function () {\n        var _setupAndroidChannels = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var channels = Object.values(_notifications.NotificationChannels);\n            for (var channel of channels) {\n              yield Notifications.setNotificationChannelAsync(channel.id, {\n                name: channel.name,\n                description: channel.description,\n                importance: Notifications.AndroidImportance[channel.importance.toUpperCase()],\n                vibrationPattern: [0, 250, 250, 250],\n                lightColor: '#8B5CF6',\n                sound: 'default',\n                enableVibrate: true\n              });\n            }\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Android channels configured');\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to setup Android channels:', error);\n          }\n        });\n        function setupAndroidChannels() {\n          return _setupAndroidChannels.apply(this, arguments);\n        }\n        return setupAndroidChannels;\n      }()\n      /**\r\n       * Set up notification categories for actions\r\n       */\n      )\n    }, {\n      key: \"setupNotificationCategories\",\n      value: (function () {\n        var _setupNotificationCategories = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            yield Notifications.setNotificationCategoryAsync('automation', [{\n              identifier: 'view',\n              buttonTitle: 'View',\n              options: {\n                opensAppToForeground: true\n              }\n            }, {\n              identifier: 'dismiss',\n              buttonTitle: 'Dismiss',\n              options: {\n                opensAppToForeground: false\n              }\n            }]);\n            yield Notifications.setNotificationCategoryAsync('share', [{\n              identifier: 'open',\n              buttonTitle: 'Open',\n              options: {\n                opensAppToForeground: true\n              }\n            }, {\n              identifier: 'later',\n              buttonTitle: 'Later',\n              options: {\n                opensAppToForeground: false\n              }\n            }]);\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Notification categories configured');\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to setup notification categories:', error);\n          }\n        });\n        function setupNotificationCategories() {\n          return _setupNotificationCategories.apply(this, arguments);\n        }\n        return setupNotificationCategories;\n      }()\n      /**\r\n       * Set up notification listeners\r\n       */\n      )\n    }, {\n      key: \"setupNotificationListeners\",\n      value: function setupNotificationListeners() {\n        // Clean up existing listeners\n        if (this.notificationListener) {\n          this.notificationListener.remove();\n        }\n        if (this.responseListener) {\n          this.responseListener.remove();\n        }\n\n        // Listener for notifications received while app is running\n        this.notificationListener = Notifications.addNotificationReceivedListener(this.handleNotificationReceived.bind(this));\n\n        // Listener for user tapping notification\n        this.responseListener = Notifications.addNotificationResponseReceivedListener(this.handleNotificationResponse.bind(this));\n        _EventLogger.EventLogger.debug('Notification', '[NotificationService] Notification listeners configured');\n      }\n\n      /**\r\n       * Handle notification received while app is running\r\n       */\n    }, {\n      key: \"handleNotificationReceived\",\n      value: (function () {\n        var _handleNotificationReceived = (0, _asyncToGenerator2.default)(function* (notification) {\n          try {\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Notification received:', notification);\n\n            // Update badge count\n            var currentBadge = yield this.getBadgeCount();\n            yield this.setBadgeCount(currentBadge + 1);\n\n            // Store notification for later reference\n            // This would typically be handled by the NotificationHandler\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Error handling received notification:', error);\n          }\n        });\n        function handleNotificationReceived(_x7) {\n          return _handleNotificationReceived.apply(this, arguments);\n        }\n        return handleNotificationReceived;\n      }()\n      /**\r\n       * Handle notification response (user tapped notification)\r\n       */\n      )\n    }, {\n      key: \"handleNotificationResponse\",\n      value: (function () {\n        var _handleNotificationResponse = (0, _asyncToGenerator2.default)(function* (response) {\n          try {\n            _EventLogger.EventLogger.debug('Notification', '[NotificationService] Notification response:', response);\n\n            // Clear badge when user interacts with notification\n            yield this.clearBadge();\n\n            // This would typically be handled by the NotificationHandler\n            // for deep linking and app navigation\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Error handling notification response:', error);\n          }\n        });\n        function handleNotificationResponse(_x8) {\n          return _handleNotificationResponse.apply(this, arguments);\n        }\n        return handleNotificationResponse;\n      }()\n      /**\r\n       * Clean up listeners\r\n       */\n      )\n    }, {\n      key: \"cleanup\",\n      value: function cleanup() {\n        if (this.notificationListener) {\n          this.notificationListener.remove();\n          this.notificationListener = null;\n        }\n        if (this.responseListener) {\n          this.responseListener.remove();\n          this.responseListener = null;\n        }\n        this.isInitialized = false;\n        _EventLogger.EventLogger.debug('Notification', '[NotificationService] Cleaned up');\n      }\n\n      /**\r\n       * Get stored push token\r\n       */\n    }, {\n      key: \"getStoredPushToken\",\n      value: (function () {\n        var _getStoredPushToken = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            return yield _asyncStorage.default.getItem(NotificationService.STORAGE_KEYS.PUSH_TOKEN);\n          } catch (error) {\n            _EventLogger.EventLogger.error('Notification', '[NotificationService] Failed to get stored push token:', error);\n            return null;\n          }\n        });\n        function getStoredPushToken() {\n          return _getStoredPushToken.apply(this, arguments);\n        }\n        return getStoredPushToken;\n      }()\n      /**\r\n       * Test notification (for debugging)\r\n       */\n      )\n    }, {\n      key: \"sendTestNotification\",\n      value: (function () {\n        var _sendTestNotification = (0, _asyncToGenerator2.default)(function* () {\n          yield this.scheduleLocalNotification({\n            content: {\n              title: 'Test Notification',\n              body: 'This is a test notification from Zaptap',\n              data: {\n                type: 'system'\n              },\n              categoryIdentifier: 'automation'\n            },\n            trigger: {\n              type: 'time',\n              date: new Date(Date.now() + 2000) // 2 seconds from now\n            }\n          });\n        });\n        function sendTestNotification() {\n          return _sendTestNotification.apply(this, arguments);\n        }\n        return sendTestNotification;\n      }())\n    }], [{\n      key: \"getInstance\",\n      value: function getInstance() {\n        if (!NotificationService.instance) {\n          NotificationService.instance = new NotificationService();\n        }\n        return NotificationService.instance;\n      }\n    }]);\n  }();\n  // Storage keys\n  NotificationService.STORAGE_KEYS = {\n    PREFERENCES: '@zaptap_notification_preferences',\n    PUSH_TOKEN: '@zaptap_push_token',\n    LAST_TOKEN_SYNC: '@zaptap_token_sync',\n    BADGE_COUNT: '@zaptap_badge_count'\n  };\n  var _default = exports.default = NotificationService.getInstance();\n});","lineCount":672,"map":[[11,2,7,0],[11,6,7,0,"Notifications"],[11,19,7,0],[11,22,7,0,"_interopRequireWildcard"],[11,45,7,0],[11,46,7,0,"require"],[11,53,7,0],[11,54,7,0,"_dependencyMap"],[11,68,7,0],[12,2,8,0],[12,6,8,0,"Device"],[12,12,8,0],[12,15,8,0,"_interopRequireWildcard"],[12,38,8,0],[12,39,8,0,"require"],[12,46,8,0],[12,47,8,0,"_dependencyMap"],[12,61,8,0],[13,2,9,0],[13,6,9,0,"_reactNative"],[13,18,9,0],[13,21,9,0,"require"],[13,28,9,0],[13,29,9,0,"_dependencyMap"],[13,43,9,0],[14,2,10,0],[14,6,10,0,"_asyncStorage"],[14,19,10,0],[14,22,10,0,"_interopRequireDefault"],[14,44,10,0],[14,45,10,0,"require"],[14,52,10,0],[14,53,10,0,"_dependencyMap"],[14,67,10,0],[15,2,11,0],[15,6,11,0,"_EventLogger"],[15,18,11,0],[15,21,11,0,"require"],[15,28,11,0],[15,29,11,0,"_dependencyMap"],[15,43,11,0],[16,2,12,0],[16,6,12,0,"_notifications"],[16,20,12,0],[16,23,12,0,"require"],[16,30,12,0],[16,31,12,0,"_dependencyMap"],[16,45,12,0],[17,2,21,35],[17,11,21,35,"_interopRequireWildcard"],[17,35,21,35,"e"],[17,36,21,35],[17,38,21,35,"t"],[17,39,21,35],[17,68,21,35,"WeakMap"],[17,75,21,35],[17,81,21,35,"r"],[17,82,21,35],[17,89,21,35,"WeakMap"],[17,96,21,35],[17,100,21,35,"n"],[17,101,21,35],[17,108,21,35,"WeakMap"],[17,115,21,35],[17,127,21,35,"_interopRequireWildcard"],[17,150,21,35],[17,162,21,35,"_interopRequireWildcard"],[17,163,21,35,"e"],[17,164,21,35],[17,166,21,35,"t"],[17,167,21,35],[17,176,21,35,"t"],[17,177,21,35],[17,181,21,35,"e"],[17,182,21,35],[17,186,21,35,"e"],[17,187,21,35],[17,188,21,35,"__esModule"],[17,198,21,35],[17,207,21,35,"e"],[17,208,21,35],[17,214,21,35,"o"],[17,215,21,35],[17,217,21,35,"i"],[17,218,21,35],[17,220,21,35,"f"],[17,221,21,35],[17,226,21,35,"__proto__"],[17,235,21,35],[17,243,21,35,"default"],[17,250,21,35],[17,252,21,35,"e"],[17,253,21,35],[17,270,21,35,"e"],[17,271,21,35],[17,294,21,35,"e"],[17,295,21,35],[17,320,21,35,"e"],[17,321,21,35],[17,330,21,35,"f"],[17,331,21,35],[17,337,21,35,"o"],[17,338,21,35],[17,341,21,35,"t"],[17,342,21,35],[17,345,21,35,"n"],[17,346,21,35],[17,349,21,35,"r"],[17,350,21,35],[17,358,21,35,"o"],[17,359,21,35],[17,360,21,35,"has"],[17,363,21,35],[17,364,21,35,"e"],[17,365,21,35],[17,375,21,35,"o"],[17,376,21,35],[17,377,21,35,"get"],[17,380,21,35],[17,381,21,35,"e"],[17,382,21,35],[17,385,21,35,"o"],[17,386,21,35],[17,387,21,35,"set"],[17,390,21,35],[17,391,21,35,"e"],[17,392,21,35],[17,394,21,35,"f"],[17,395,21,35],[17,409,21,35,"_t"],[17,411,21,35],[17,415,21,35,"e"],[17,416,21,35],[17,432,21,35,"_t"],[17,434,21,35],[17,441,21,35,"hasOwnProperty"],[17,455,21,35],[17,456,21,35,"call"],[17,460,21,35],[17,461,21,35,"e"],[17,462,21,35],[17,464,21,35,"_t"],[17,466,21,35],[17,473,21,35,"i"],[17,474,21,35],[17,478,21,35,"o"],[17,479,21,35],[17,482,21,35,"Object"],[17,488,21,35],[17,489,21,35,"defineProperty"],[17,503,21,35],[17,508,21,35,"Object"],[17,514,21,35],[17,515,21,35,"getOwnPropertyDescriptor"],[17,539,21,35],[17,540,21,35,"e"],[17,541,21,35],[17,543,21,35,"_t"],[17,545,21,35],[17,552,21,35,"i"],[17,553,21,35],[17,554,21,35,"get"],[17,557,21,35],[17,561,21,35,"i"],[17,562,21,35],[17,563,21,35,"set"],[17,566,21,35],[17,570,21,35,"o"],[17,571,21,35],[17,572,21,35,"f"],[17,573,21,35],[17,575,21,35,"_t"],[17,577,21,35],[17,579,21,35,"i"],[17,580,21,35],[17,584,21,35,"f"],[17,585,21,35],[17,586,21,35,"_t"],[17,588,21,35],[17,592,21,35,"e"],[17,593,21,35],[17,594,21,35,"_t"],[17,596,21,35],[17,607,21,35,"f"],[17,608,21,35],[17,613,21,35,"e"],[17,614,21,35],[17,616,21,35,"t"],[17,617,21,35],[18,2,1,0],[19,0,2,0],[20,0,3,0],[21,0,4,0],[22,0,5,0],[23,2,1,0],[23,6,23,6,"NotificationService"],[23,25,23,25],[24,4,37,2],[24,13,37,2,"NotificationService"],[24,33,37,2],[24,35,37,24],[25,6,37,24],[25,10,37,24,"_classCallCheck2"],[25,26,37,24],[25,27,37,24,"default"],[25,34,37,24],[25,42,37,24,"NotificationService"],[25,61,37,24],[26,6,37,24],[26,11,25,10,"isInitialized"],[26,24,25,23],[26,27,25,26],[26,32,25,31],[27,6,25,31],[27,11,26,10,"notificationListener"],[27,31,26,30],[27,34,26,68],[27,38,26,72],[28,6,26,72],[28,11,27,10,"responseListener"],[28,27,27,26],[28,30,27,64],[28,34,27,68],[29,6,38,4],[29,10,38,8],[29,11,38,9,"setupNotificationHandler"],[29,35,38,33],[29,36,38,34],[29,37,38,35],[30,4,39,2],[31,4,39,3],[31,15,39,3,"_createClass2"],[31,28,39,3],[31,29,39,3,"default"],[31,36,39,3],[31,38,39,3,"NotificationService"],[31,57,39,3],[32,6,39,3,"key"],[32,9,39,3],[33,6,39,3,"value"],[33,11,39,3],[34,6,48,2],[35,0,49,0],[36,0,50,0],[37,6,48,2],[38,8,48,2],[38,12,48,2,"_initialize"],[38,23,48,2],[38,30,48,2,"_asyncToGenerator2"],[38,48,48,2],[38,49,48,2,"default"],[38,56,48,2],[38,58,51,2],[38,71,51,46],[39,10,52,4],[39,14,52,8],[40,12,53,6],[40,16,53,10],[40,20,53,14],[40,21,53,15,"isInitialized"],[40,34,53,28],[40,36,53,30],[41,14,54,8],[41,21,54,15],[41,25,54,19],[42,12,55,6],[44,12,57,6],[45,12,58,37],[46,14,59,8],[46,20,59,14],[46,24,59,18],[46,25,59,19,"setupAndroidChannels"],[46,45,59,39],[46,46,59,40],[46,47,59,41],[47,12,60,6],[49,12,62,6],[50,12,63,6],[50,18,63,12],[50,22,63,16],[50,23,63,17,"setupNotificationCategories"],[50,50,63,44],[50,51,63,45],[50,52,63,46],[52,12,65,6],[53,12,66,6],[53,16,66,10],[53,17,66,11,"setupNotificationListeners"],[53,43,66,37],[53,44,66,38],[53,45,66,39],[54,12,68,6],[54,16,68,10],[54,17,68,11,"isInitialized"],[54,30,68,24],[54,33,68,27],[54,37,68,31],[55,12,69,6,"EventLogger"],[55,36,69,17],[55,37,69,18,"debug"],[55,42,69,23],[55,43,69,24],[55,57,69,38],[55,59,69,40],[55,107,69,88],[55,108,69,89],[56,12,70,6],[56,19,70,13],[56,23,70,17],[57,10,72,4],[57,11,72,5],[57,12,72,6],[57,19,72,13,"error"],[57,24,72,18],[57,26,72,20],[58,12,73,6,"EventLogger"],[58,36,73,17],[58,37,73,18,"error"],[58,42,73,23],[58,43,73,24],[58,57,73,38],[58,59,73,40],[58,105,73,86],[58,107,73,88,"error"],[58,112,73,102],[58,113,73,103],[59,12,74,6],[59,19,74,13],[59,24,74,18],[60,10,75,4],[61,8,76,2],[61,9,76,3],[62,8,76,3],[62,17,51,15,"initialize"],[62,27,51,25,"initialize"],[62,28,51,25],[63,10,51,25],[63,17,51,25,"_initialize"],[63,28,51,25],[63,29,51,25,"apply"],[63,34,51,25],[63,41,51,25,"arguments"],[63,50,51,25],[64,8,51,25],[65,8,51,25],[65,15,51,15,"initialize"],[65,25,51,25],[66,6,51,25],[67,6,78,2],[68,0,79,0],[69,0,80,0],[70,6,78,2],[71,4,78,2],[72,6,78,2,"key"],[72,9,78,2],[73,6,78,2,"value"],[73,11,78,2],[74,8,78,2],[74,12,78,2,"_requestPermissions"],[74,31,78,2],[74,38,78,2,"_asyncToGenerator2"],[74,56,78,2],[74,57,78,2,"default"],[74,64,78,2],[74,66,81,2],[74,79,81,70],[75,10,82,4],[75,14,82,8],[76,12,83,6],[76,16,83,10],[76,17,83,11,"Device"],[76,23,83,17],[76,24,83,18,"isDevice"],[76,32,83,26],[76,34,83,28],[77,14,84,8,"EventLogger"],[77,38,84,19],[77,39,84,20,"warn"],[77,43,84,24],[77,44,84,25],[77,58,84,39],[77,60,84,41],[77,124,84,105],[77,125,84,106],[78,14,85,8],[78,21,85,15],[79,16,85,17,"status"],[79,22,85,23],[79,24,85,25],[80,14,85,34],[80,15,85,35],[81,12,86,6],[82,12,88,6],[82,16,88,6,"_yield$Notifications$"],[82,37,88,6],[82,46,88,47,"Notifications"],[82,59,88,60],[82,60,88,61,"getPermissionsAsync"],[82,79,88,80],[82,80,88,81],[82,81,88,82],[83,14,88,22,"existingStatus"],[83,28,88,36],[83,31,88,36,"_yield$Notifications$"],[83,52,88,36],[83,53,88,14,"status"],[83,59,88,20],[84,12,90,6],[84,16,90,10,"finalStatus"],[84,27,90,21],[84,30,90,24,"existingStatus"],[84,44,90,38],[85,12,92,6],[85,16,92,10,"existingStatus"],[85,30,92,24],[85,35,92,29],[85,44,92,38],[85,46,92,40],[86,14,93,8],[86,18,93,8,"_yield$Notifications$2"],[86,40,93,8],[86,49,93,33,"Notifications"],[86,62,93,46],[86,63,93,47,"requestPermissionsAsync"],[86,86,93,70],[86,87,93,71],[87,18,94,10,"ios"],[87,21,94,13],[87,23,94,15],[88,20,95,12,"allowAlert"],[88,30,95,22],[88,32,95,24],[88,36,95,28],[89,20,96,12,"allowBadge"],[89,30,96,22],[89,32,96,24],[89,36,96,28],[90,20,97,12,"allowSound"],[90,30,97,22],[90,32,97,24],[90,36,97,28],[91,20,98,12,"allowAnnouncements"],[91,38,98,30],[91,40,98,32],[91,44,98,36],[92,20,99,12,"allowCriticalAlerts"],[92,39,99,31],[92,41,99,33],[93,18,100,10],[94,16,101,8],[94,17,101,9],[94,18,101,10],[95,16,93,16,"status"],[95,22,93,22],[95,25,93,22,"_yield$Notifications$2"],[95,47,93,22],[95,48,93,16,"status"],[95,54,93,22],[96,14,102,8,"finalStatus"],[96,25,102,19],[96,28,102,22,"status"],[96,34,102,28],[97,12,103,6],[99,12,105,6],[100,12,106,6],[100,16,106,10,"iosPermissions"],[100,30,106,24],[101,12,121,6],[101,16,121,12,"result"],[101,22,121,43],[101,25,121,46],[102,14,122,8,"status"],[102,20,122,14],[102,22,122,16,"finalStatus"],[102,33,122,68],[103,14,123,8,"ios"],[103,17,123,11],[103,19,123,13,"iosPermissions"],[104,12,124,6],[104,13,124,7],[105,12,126,6,"EventLogger"],[105,36,126,17],[105,37,126,18,"debug"],[105,42,126,23],[105,43,126,24],[105,57,126,38],[105,59,126,40],[105,101,126,82],[105,103,126,84,"result"],[105,109,126,90],[105,110,126,91],[106,12,127,6],[106,19,127,13,"result"],[106,25,127,19],[107,10,129,4],[107,11,129,5],[107,12,129,6],[107,19,129,13,"error"],[107,24,129,18],[107,26,129,20],[108,12,130,6,"EventLogger"],[108,36,130,17],[108,37,130,18,"error"],[108,42,130,23],[108,43,130,24],[108,57,130,38],[108,59,130,40],[108,109,130,90],[108,111,130,92,"error"],[108,116,130,106],[108,117,130,107],[109,12,131,6],[109,19,131,13],[110,14,131,15,"status"],[110,20,131,21],[110,22,131,23],[111,12,131,32],[111,13,131,33],[112,10,132,4],[113,8,133,2],[113,9,133,3],[114,8,133,3],[114,17,81,15,"requestPermissions"],[114,35,81,33,"requestPermissions"],[114,36,81,33],[115,10,81,33],[115,17,81,33,"_requestPermissions"],[115,36,81,33],[115,37,81,33,"apply"],[115,42,81,33],[115,49,81,33,"arguments"],[115,58,81,33],[116,8,81,33],[117,8,81,33],[117,15,81,15,"requestPermissions"],[117,33,81,33],[118,6,81,33],[119,6,135,2],[120,0,136,0],[121,0,137,0],[122,6,135,2],[123,4,135,2],[124,6,135,2,"key"],[124,9,135,2],[125,6,135,2,"value"],[125,11,135,2],[126,8,135,2],[126,12,135,2,"_getPushToken"],[126,25,135,2],[126,32,135,2,"_asyncToGenerator2"],[126,50,135,2],[126,51,135,2,"default"],[126,58,135,2],[126,60,138,2],[126,73,138,54],[127,10,139,4],[127,14,139,8],[128,12,140,6],[128,16,140,10],[128,17,140,11,"Device"],[128,23,140,17],[128,24,140,18,"isDevice"],[128,32,140,26],[128,34,140,28],[129,14,141,8,"EventLogger"],[129,38,141,19],[129,39,141,20,"warn"],[129,43,141,24],[129,44,141,25],[129,58,141,39],[129,60,141,41],[129,122,141,103],[129,123,141,104],[130,14,142,8],[130,21,142,15],[130,25,142,19],[131,12,143,6],[132,12,145,6],[132,16,145,12,"permissions"],[132,27,145,23],[132,36,145,32],[132,40,145,36],[132,41,145,37,"requestPermissions"],[132,59,145,55],[132,60,145,56],[132,61,145,57],[133,12,146,6],[133,16,146,10,"permissions"],[133,27,146,21],[133,28,146,22,"status"],[133,34,146,28],[133,39,146,33],[133,48,146,42],[133,50,146,44],[134,14,147,8,"EventLogger"],[134,38,147,19],[134,39,147,20,"warn"],[134,43,147,24],[134,44,147,25],[134,58,147,39],[134,60,147,41],[134,125,147,106],[134,126,147,107],[135,14,148,8],[135,21,148,15],[135,25,148,19],[136,12,149,6],[137,12,151,6],[137,16,151,12,"tokenData"],[137,25,151,21],[137,34,151,30,"Notifications"],[137,47,151,43],[137,48,151,44,"getExpoPushTokenAsync"],[137,69,151,65],[137,70,151,66],[138,14,152,8,"projectId"],[138,23,152,17],[138,25,152,19],[138,63,152,57],[138,64,152,59],[139,12,153,6],[139,13,153,7],[139,14,153,8],[140,12,155,6],[140,16,155,12,"token"],[140,21,155,17],[140,24,155,20,"tokenData"],[140,33,155,29],[140,34,155,30,"data"],[140,38,155,34],[142,12,157,6],[143,12,158,6],[143,18,158,12,"AsyncStorage"],[143,39,158,24],[143,40,158,25,"setItem"],[143,47,158,32],[143,48,158,33,"NotificationService"],[143,67,158,52],[143,68,158,53,"STORAGE_KEYS"],[143,80,158,65],[143,81,158,66,"PUSH_TOKEN"],[143,91,158,76],[143,93,158,78,"token"],[143,98,158,83],[143,99,158,84],[144,12,160,6,"EventLogger"],[144,36,160,17],[144,37,160,18,"debug"],[144,42,160,23],[144,43,160,24],[144,57,160,38],[144,59,160,40],[144,103,160,84],[144,105,160,86,"token"],[144,110,160,91],[144,111,160,92,"substring"],[144,120,160,101],[144,121,160,102],[144,122,160,103],[144,124,160,105],[144,126,160,107],[144,127,160,108],[144,130,160,111],[144,135,160,116],[144,136,160,117],[145,12,161,6],[145,19,161,13,"token"],[145,24,161,18],[146,10,163,4],[146,11,163,5],[146,12,163,6],[146,19,163,13,"error"],[146,24,163,18],[146,26,163,20],[147,12,164,6,"EventLogger"],[147,36,164,17],[147,37,164,18,"error"],[147,42,164,23],[147,43,164,24],[147,57,164,38],[147,59,164,40],[147,108,164,89],[147,110,164,91,"error"],[147,115,164,105],[147,116,164,106],[148,12,165,6],[148,19,165,13],[148,23,165,17],[149,10,166,4],[150,8,167,2],[150,9,167,3],[151,8,167,3],[151,17,138,15,"getPushToken"],[151,29,138,27,"getPushToken"],[151,30,138,27],[152,10,138,27],[152,17,138,27,"_getPushToken"],[152,30,138,27],[152,31,138,27,"apply"],[152,36,138,27],[152,43,138,27,"arguments"],[152,52,138,27],[153,8,138,27],[154,8,138,27],[154,15,138,15,"getPushToken"],[154,27,138,27],[155,6,138,27],[156,6,169,2],[157,0,170,0],[158,0,171,0],[159,6,169,2],[160,4,169,2],[161,6,169,2,"key"],[161,9,169,2],[162,6,169,2,"value"],[162,11,169,2],[163,8,169,2],[163,12,169,2,"_scheduleLocalNotification"],[163,38,169,2],[163,45,169,2,"_asyncToGenerator2"],[163,63,169,2],[163,64,169,2,"default"],[163,71,169,2],[163,73,172,2],[163,84,172,41,"request"],[163,91,172,74],[163,93,172,100],[164,10,173,4],[164,14,173,8],[165,12,174,6],[165,16,174,12,"permissions"],[165,27,174,23],[165,36,174,32],[165,40,174,36],[165,41,174,37,"requestPermissions"],[165,59,174,55],[165,60,174,56],[165,61,174,57],[166,12,175,6],[166,16,175,10,"permissions"],[166,27,175,21],[166,28,175,22,"status"],[166,34,175,28],[166,39,175,33],[166,48,175,42],[166,50,175,44],[167,14,176,8,"EventLogger"],[167,38,176,19],[167,39,176,20,"warn"],[167,43,176,24],[167,44,176,25],[167,58,176,39],[167,60,176,41],[167,131,176,112],[167,132,176,113],[168,14,177,8],[168,21,177,15],[168,25,177,19],[169,12,178,6],[170,12,180,6],[170,16,180,12,"notificationRequest"],[170,35,180,71],[170,38,180,74],[171,14,181,8,"content"],[171,21,181,15],[171,23,181,17],[172,16,182,10,"title"],[172,21,182,15],[172,23,182,17,"request"],[172,30,182,24],[172,31,182,25,"content"],[172,38,182,32],[172,39,182,33,"title"],[172,44,182,38],[173,16,183,10,"body"],[173,20,183,14],[173,22,183,16,"request"],[173,29,183,23],[173,30,183,24,"content"],[173,37,183,31],[173,38,183,32,"body"],[173,42,183,36],[174,16,184,10,"data"],[174,20,184,14],[174,22,184,16,"request"],[174,29,184,23],[174,30,184,24,"content"],[174,37,184,31],[174,38,184,32,"data"],[174,42,184,36],[174,46,184,40],[174,47,184,41],[174,48,184,42],[175,16,185,10,"sound"],[175,21,185,15],[175,23,185,17,"request"],[175,30,185,24],[175,31,185,25,"content"],[175,38,185,32],[175,39,185,33,"sound"],[175,44,185,38],[175,48,185,42],[175,57,185,51],[176,16,186,10,"badge"],[176,21,186,15],[176,23,186,17,"request"],[176,30,186,24],[176,31,186,25,"content"],[176,38,186,32],[176,39,186,33,"badge"],[176,44,186,38],[177,16,187,10,"categoryIdentifier"],[177,34,187,28],[177,36,187,30,"request"],[177,43,187,37],[177,44,187,38,"content"],[177,51,187,45],[177,52,187,46,"categoryIdentifier"],[178,14,188,8],[178,15,188,9],[179,14,189,8,"trigger"],[179,21,189,15],[179,23,189,17],[179,27,189,21],[179,28,189,23],[180,12,190,6],[180,13,190,7],[182,12,192,6],[183,12,193,6],[183,16,193,10,"request"],[183,23,193,17],[183,24,193,18,"trigger"],[183,31,193,25],[183,32,193,26,"type"],[183,36,193,30],[183,41,193,35],[183,47,193,41],[183,51,193,45,"request"],[183,58,193,52],[183,59,193,53,"trigger"],[183,66,193,60],[183,67,193,61,"date"],[183,71,193,65],[183,73,193,67],[184,14,194,8,"notificationRequest"],[184,33,194,27],[184,34,194,28,"trigger"],[184,41,194,35],[184,44,194,38],[185,16,195,10,"date"],[185,20,195,14],[185,22,195,16,"request"],[185,29,195,23],[185,30,195,24,"trigger"],[185,37,195,31],[185,38,195,32,"date"],[185,42,195,36],[186,16,196,10,"repeats"],[186,23,196,17],[186,25,196,19,"request"],[186,32,196,26],[186,33,196,27,"trigger"],[186,40,196,34],[186,41,196,35,"repeats"],[186,48,196,42],[186,52,196,46],[186,57,196,51],[187,16,197,10,"channelId"],[187,25,197,19],[187,27,197,21,"request"],[187,34,197,28],[187,35,197,29,"trigger"],[187,42,197,36],[187,43,197,37,"channelId"],[187,52,197,46],[187,56,197,50,"NotificationChannels"],[187,91,197,70],[187,92,197,71,"DEFAULT"],[187,99,197,78],[187,100,197,79,"id"],[188,14,198,8],[188,15,198,9],[189,12,199,6],[190,12,201,6],[190,16,201,12,"identifier"],[190,26,201,22],[190,35,201,31,"Notifications"],[190,48,201,44],[190,49,201,45,"scheduleNotificationAsync"],[190,74,201,70],[190,75,201,71,"notificationRequest"],[190,94,201,90],[190,95,201,91],[191,12,202,6,"EventLogger"],[191,36,202,17],[191,37,202,18,"debug"],[191,42,202,23],[191,43,202,24],[191,57,202,38],[191,59,202,40],[191,112,202,93],[191,114,202,95,"identifier"],[191,124,202,105],[191,125,202,106],[192,12,203,6],[192,19,203,13,"identifier"],[192,29,203,23],[193,10,205,4],[193,11,205,5],[193,12,205,6],[193,19,205,13,"error"],[193,24,205,18],[193,26,205,20],[194,12,206,6,"EventLogger"],[194,36,206,17],[194,37,206,18,"error"],[194,42,206,23],[194,43,206,24],[194,57,206,38],[194,59,206,40],[194,121,206,102],[194,123,206,104,"error"],[194,128,206,118],[194,129,206,119],[195,12,207,6],[195,19,207,13],[195,23,207,17],[196,10,208,4],[197,8,209,2],[197,9,209,3],[198,8,209,3],[198,17,172,15,"scheduleLocalNotification"],[198,42,172,40,"scheduleLocalNotification"],[198,43,172,40,"_x"],[198,45,172,40],[199,10,172,40],[199,17,172,40,"_scheduleLocalNotification"],[199,43,172,40],[199,44,172,40,"apply"],[199,49,172,40],[199,56,172,40,"arguments"],[199,65,172,40],[200,8,172,40],[201,8,172,40],[201,15,172,15,"scheduleLocalNotification"],[201,40,172,40],[202,6,172,40],[203,6,211,2],[204,0,212,0],[205,0,213,0],[206,6,211,2],[207,4,211,2],[208,6,211,2,"key"],[208,9,211,2],[209,6,211,2,"value"],[209,11,211,2],[210,8,211,2],[210,12,211,2,"_cancelNotification"],[210,31,211,2],[210,38,211,2,"_asyncToGenerator2"],[210,56,211,2],[210,57,211,2,"default"],[210,64,211,2],[210,66,214,2],[210,77,214,34,"identifier"],[210,87,214,52],[210,89,214,69],[211,10,215,4],[211,14,215,8],[212,12,216,6],[212,18,216,12,"Notifications"],[212,31,216,25],[212,32,216,26,"cancelScheduledNotificationAsync"],[212,64,216,58],[212,65,216,59,"identifier"],[212,75,216,69],[212,76,216,70],[213,12,217,6,"EventLogger"],[213,36,217,17],[213,37,217,18,"debug"],[213,42,217,23],[213,43,217,24],[213,57,217,38],[213,59,217,40],[213,106,217,87],[213,108,217,89,"identifier"],[213,118,217,99],[213,119,217,100],[214,10,218,4],[214,11,218,5],[214,12,218,6],[214,19,218,13,"error"],[214,24,218,18],[214,26,218,20],[215,12,219,6,"EventLogger"],[215,36,219,17],[215,37,219,18,"error"],[215,42,219,23],[215,43,219,24],[215,57,219,38],[215,59,219,40],[215,113,219,94],[215,115,219,96,"error"],[215,120,219,110],[215,121,219,111],[216,10,220,4],[217,8,221,2],[217,9,221,3],[218,8,221,3],[218,17,214,15,"cancelNotification"],[218,35,214,33,"cancelNotification"],[218,36,214,33,"_x2"],[218,39,214,33],[219,10,214,33],[219,17,214,33,"_cancelNotification"],[219,36,214,33],[219,37,214,33,"apply"],[219,42,214,33],[219,49,214,33,"arguments"],[219,58,214,33],[220,8,214,33],[221,8,214,33],[221,15,214,15,"cancelNotification"],[221,33,214,33],[222,6,214,33],[223,6,223,2],[224,0,224,0],[225,0,225,0],[226,6,223,2],[227,4,223,2],[228,6,223,2,"key"],[228,9,223,2],[229,6,223,2,"value"],[229,11,223,2],[230,8,223,2],[230,12,223,2,"_cancelAllNotifications"],[230,35,223,2],[230,42,223,2,"_asyncToGenerator2"],[230,60,223,2],[230,61,223,2,"default"],[230,68,223,2],[230,70,226,2],[230,83,226,55],[231,10,227,4],[231,14,227,8],[232,12,228,6],[232,18,228,12,"Notifications"],[232,31,228,25],[232,32,228,26,"cancelAllScheduledNotificationsAsync"],[232,68,228,62],[232,69,228,63],[232,70,228,64],[233,12,229,6,"EventLogger"],[233,36,229,17],[233,37,229,18,"debug"],[233,42,229,23],[233,43,229,24],[233,57,229,38],[233,59,229,40],[233,110,229,91],[233,111,229,92],[234,10,230,4],[234,11,230,5],[234,12,230,6],[234,19,230,13,"error"],[234,24,230,18],[234,26,230,20],[235,12,231,6,"EventLogger"],[235,36,231,17],[235,37,231,18,"error"],[235,42,231,23],[235,43,231,24],[235,57,231,38],[235,59,231,40],[235,118,231,99],[235,120,231,101,"error"],[235,125,231,115],[235,126,231,116],[236,10,232,4],[237,8,233,2],[237,9,233,3],[238,8,233,3],[238,17,226,15,"cancelAllNotifications"],[238,39,226,37,"cancelAllNotifications"],[238,40,226,37],[239,10,226,37],[239,17,226,37,"_cancelAllNotifications"],[239,40,226,37],[239,41,226,37,"apply"],[239,46,226,37],[239,53,226,37,"arguments"],[239,62,226,37],[240,8,226,37],[241,8,226,37],[241,15,226,15,"cancelAllNotifications"],[241,37,226,37],[242,6,226,37],[243,6,235,2],[244,0,236,0],[245,0,237,0],[246,6,235,2],[247,4,235,2],[248,6,235,2,"key"],[248,9,235,2],[249,6,235,2,"value"],[249,11,235,2],[250,8,235,2],[250,12,235,2,"_setBadgeCount"],[250,26,235,2],[250,33,235,2,"_asyncToGenerator2"],[250,51,235,2],[250,52,235,2,"default"],[250,59,235,2],[250,61,238,2],[250,72,238,29,"count"],[250,77,238,42],[250,79,238,59],[251,10,239,4],[251,14,239,8],[252,12,240,6],[252,18,240,12,"Notifications"],[252,31,240,25],[252,32,240,26,"setBadgeCountAsync"],[252,50,240,44],[252,51,240,45,"count"],[252,56,240,50],[252,57,240,51],[253,12,241,6],[253,18,241,12,"AsyncStorage"],[253,39,241,24],[253,40,241,25,"setItem"],[253,47,241,32],[253,48,241,33,"NotificationService"],[253,67,241,52],[253,68,241,53,"STORAGE_KEYS"],[253,80,241,65],[253,81,241,66,"BADGE_COUNT"],[253,92,241,77],[253,94,241,79,"count"],[253,99,241,84],[253,100,241,85,"toString"],[253,108,241,93],[253,109,241,94],[253,110,241,95],[253,111,241,96],[254,12,242,6,"EventLogger"],[254,36,242,17],[254,37,242,18,"debug"],[254,42,242,23],[254,43,242,24],[254,57,242,38],[254,59,242,40],[254,102,242,83],[254,104,242,85,"count"],[254,109,242,90],[254,110,242,91],[255,10,243,4],[255,11,243,5],[255,12,243,6],[255,19,243,13,"error"],[255,24,243,18],[255,26,243,20],[256,12,244,6,"EventLogger"],[256,36,244,17],[256,37,244,18,"error"],[256,42,244,23],[256,43,244,24],[256,57,244,38],[256,59,244,40],[256,109,244,90],[256,111,244,92,"error"],[256,116,244,106],[256,117,244,107],[257,10,245,4],[258,8,246,2],[258,9,246,3],[259,8,246,3],[259,17,238,15,"setBadgeCount"],[259,30,238,28,"setBadgeCount"],[259,31,238,28,"_x3"],[259,34,238,28],[260,10,238,28],[260,17,238,28,"_setBadgeCount"],[260,31,238,28],[260,32,238,28,"apply"],[260,37,238,28],[260,44,238,28,"arguments"],[260,53,238,28],[261,8,238,28],[262,8,238,28],[262,15,238,15,"setBadgeCount"],[262,28,238,28],[263,6,238,28],[264,6,248,2],[265,0,249,0],[266,0,250,0],[267,6,248,2],[268,4,248,2],[269,6,248,2,"key"],[269,9,248,2],[270,6,248,2,"value"],[270,11,248,2],[271,8,248,2],[271,12,248,2,"_getBadgeCount"],[271,26,248,2],[271,33,248,2,"_asyncToGenerator2"],[271,51,248,2],[271,52,248,2,"default"],[271,59,248,2],[271,61,251,2],[271,74,251,48],[272,10,252,4],[272,14,252,8],[273,12,253,6],[273,16,253,12,"stored"],[273,22,253,18],[273,31,253,27,"AsyncStorage"],[273,52,253,39],[273,53,253,40,"getItem"],[273,60,253,47],[273,61,253,48,"NotificationService"],[273,80,253,67],[273,81,253,68,"STORAGE_KEYS"],[273,93,253,80],[273,94,253,81,"BADGE_COUNT"],[273,105,253,92],[273,106,253,93],[274,12,254,6],[274,19,254,13,"stored"],[274,25,254,19],[274,28,254,22,"parseInt"],[274,36,254,30],[274,37,254,31,"stored"],[274,43,254,37],[274,45,254,39],[274,47,254,41],[274,48,254,42],[274,51,254,45],[274,52,254,46],[275,10,255,4],[275,11,255,5],[275,12,255,6],[275,19,255,13,"error"],[275,24,255,18],[275,26,255,20],[276,12,256,6,"EventLogger"],[276,36,256,17],[276,37,256,18,"error"],[276,42,256,23],[276,43,256,24],[276,57,256,38],[276,59,256,40],[276,109,256,90],[276,111,256,92,"error"],[276,116,256,106],[276,117,256,107],[277,12,257,6],[277,19,257,13],[277,20,257,14],[278,10,258,4],[279,8,259,2],[279,9,259,3],[280,8,259,3],[280,17,251,15,"getBadgeCount"],[280,30,251,28,"getBadgeCount"],[280,31,251,28],[281,10,251,28],[281,17,251,28,"_getBadgeCount"],[281,31,251,28],[281,32,251,28,"apply"],[281,37,251,28],[281,44,251,28,"arguments"],[281,53,251,28],[282,8,251,28],[283,8,251,28],[283,15,251,15,"getBadgeCount"],[283,28,251,28],[284,6,251,28],[285,6,261,2],[286,0,262,0],[287,0,263,0],[288,6,261,2],[289,4,261,2],[290,6,261,2,"key"],[290,9,261,2],[291,6,261,2,"value"],[291,11,261,2],[292,8,261,2],[292,12,261,2,"_clearBadge"],[292,23,261,2],[292,30,261,2,"_asyncToGenerator2"],[292,48,261,2],[292,49,261,2,"default"],[292,56,261,2],[292,58,264,2],[292,71,264,43],[293,10,265,4],[293,16,265,10],[293,20,265,14],[293,21,265,15,"setBadgeCount"],[293,34,265,28],[293,35,265,29],[293,36,265,30],[293,37,265,31],[294,8,266,2],[294,9,266,3],[295,8,266,3],[295,17,264,15,"clearBadge"],[295,27,264,25,"clearBadge"],[295,28,264,25],[296,10,264,25],[296,17,264,25,"_clearBadge"],[296,28,264,25],[296,29,264,25,"apply"],[296,34,264,25],[296,41,264,25,"arguments"],[296,50,264,25],[297,8,264,25],[298,8,264,25],[298,15,264,15,"clearBadge"],[298,25,264,25],[299,6,264,25],[300,6,268,2],[301,0,269,0],[302,0,270,0],[303,6,268,2],[304,4,268,2],[305,6,268,2,"key"],[305,9,268,2],[306,6,268,2,"value"],[306,11,268,2],[307,8,268,2],[307,12,268,2,"_getPreferences"],[307,27,268,2],[307,34,268,2,"_asyncToGenerator2"],[307,52,268,2],[307,53,268,2,"default"],[307,60,268,2],[307,62,271,2],[307,75,271,66],[308,10,272,4],[308,14,272,8],[309,12,273,6],[309,16,273,12,"stored"],[309,22,273,18],[309,31,273,27,"AsyncStorage"],[309,52,273,39],[309,53,273,40,"getItem"],[309,60,273,47],[309,61,273,48,"NotificationService"],[309,80,273,67],[309,81,273,68,"STORAGE_KEYS"],[309,93,273,80],[309,94,273,81,"PREFERENCES"],[309,105,273,92],[309,106,273,93],[310,12,274,6],[310,16,274,10,"stored"],[310,22,274,16],[310,24,274,18],[311,14,275,8],[311,21,275,15],[312,16,275,17],[312,19,275,20,"DEFAULT_NOTIFICATION_PREFERENCES"],[312,66,275,52],[313,16,275,54],[313,19,275,57,"JSON"],[313,23,275,61],[313,24,275,62,"parse"],[313,29,275,67],[313,30,275,68,"stored"],[313,36,275,74],[314,14,275,76],[314,15,275,77],[315,12,276,6],[316,12,277,6],[316,19,277,13,"DEFAULT_NOTIFICATION_PREFERENCES"],[316,66,277,45],[317,10,278,4],[317,11,278,5],[317,12,278,6],[317,19,278,13,"error"],[317,24,278,18],[317,26,278,20],[318,12,279,6,"EventLogger"],[318,36,279,17],[318,37,279,18,"error"],[318,42,279,23],[318,43,279,24],[318,57,279,38],[318,59,279,40],[318,109,279,90],[318,111,279,92,"error"],[318,116,279,106],[318,117,279,107],[319,12,280,6],[319,19,280,13,"DEFAULT_NOTIFICATION_PREFERENCES"],[319,66,280,45],[320,10,281,4],[321,8,282,2],[321,9,282,3],[322,8,282,3],[322,17,271,15,"getPreferences"],[322,31,271,29,"getPreferences"],[322,32,271,29],[323,10,271,29],[323,17,271,29,"_getPreferences"],[323,32,271,29],[323,33,271,29,"apply"],[323,38,271,29],[323,45,271,29,"arguments"],[323,54,271,29],[324,8,271,29],[325,8,271,29],[325,15,271,15,"getPreferences"],[325,29,271,29],[326,6,271,29],[327,6,284,2],[328,0,285,0],[329,0,286,0],[330,6,284,2],[331,4,284,2],[332,6,284,2,"key"],[332,9,284,2],[333,6,284,2,"value"],[333,11,284,2],[334,8,284,2],[334,12,284,2,"_savePreferences"],[334,28,284,2],[334,35,284,2,"_asyncToGenerator2"],[334,53,284,2],[334,54,284,2,"default"],[334,61,284,2],[334,63,287,2],[334,74,287,31,"preferences"],[334,85,287,67],[334,87,287,84],[335,10,288,4],[335,14,288,8],[336,12,289,6],[336,18,289,12,"AsyncStorage"],[336,39,289,24],[336,40,289,25,"setItem"],[336,47,289,32],[336,48,290,8,"NotificationService"],[336,67,290,27],[336,68,290,28,"STORAGE_KEYS"],[336,80,290,40],[336,81,290,41,"PREFERENCES"],[336,92,290,52],[336,94,291,8,"JSON"],[336,98,291,12],[336,99,291,13,"stringify"],[336,108,291,22],[336,109,291,23,"preferences"],[336,120,291,34],[336,121,292,6],[336,122,292,7],[337,12,293,6,"EventLogger"],[337,36,293,17],[337,37,293,18,"debug"],[337,42,293,23],[337,43,293,24],[337,57,293,38],[337,59,293,40],[337,100,293,81],[337,101,293,82],[338,10,294,4],[338,11,294,5],[338,12,294,6],[338,19,294,13,"error"],[338,24,294,18],[338,26,294,20],[339,12,295,6,"EventLogger"],[339,36,295,17],[339,37,295,18,"error"],[339,42,295,23],[339,43,295,24],[339,57,295,38],[339,59,295,40],[339,110,295,91],[339,112,295,93,"error"],[339,117,295,107],[339,118,295,108],[340,10,296,4],[341,8,297,2],[341,9,297,3],[342,8,297,3],[342,17,287,15,"savePreferences"],[342,32,287,30,"savePreferences"],[342,33,287,30,"_x4"],[342,36,287,30],[343,10,287,30],[343,17,287,30,"_savePreferences"],[343,33,287,30],[343,34,287,30,"apply"],[343,39,287,30],[343,46,287,30,"arguments"],[343,55,287,30],[344,8,287,30],[345,8,287,30],[345,15,287,15,"savePreferences"],[345,30,287,30],[346,6,287,30],[347,6,299,2],[348,0,300,0],[349,0,301,0],[350,6,299,2],[351,4,299,2],[352,6,299,2,"key"],[352,9,299,2],[353,6,299,2,"value"],[353,11,299,2],[354,8,299,2],[354,12,299,2,"_shouldShowNotification"],[354,35,299,2],[354,42,299,2,"_asyncToGenerator2"],[354,60,299,2],[354,61,299,2,"default"],[354,68,299,2],[354,70,302,2],[354,81,302,38,"type"],[354,85,302,71],[354,87,302,91],[355,10,303,4],[355,14,303,8],[356,12,304,6],[356,16,304,12,"preferences"],[356,27,304,23],[356,36,304,32],[356,40,304,36],[356,41,304,37,"getPreferences"],[356,55,304,51],[356,56,304,52],[356,57,304,53],[357,12,306,6],[357,16,306,10],[357,17,306,11,"preferences"],[357,28,306,22],[357,29,306,23,"enabled"],[357,36,306,30],[357,38,306,32],[358,14,307,8],[358,21,307,15],[358,26,307,20],[359,12,308,6],[361,12,310,6],[362,12,311,6],[362,20,311,14,"type"],[362,24,311,18],[363,14,312,8],[363,19,312,13],[363,31,312,25],[364,16,313,10],[364,20,313,14],[364,21,313,15,"preferences"],[364,32,313,26],[364,33,313,27,"categories"],[364,43,313,37],[364,44,313,38,"automations"],[364,55,313,49],[364,57,313,51],[364,64,313,58],[364,69,313,63],[365,16,314,10],[366,14,315,8],[366,19,315,13],[366,26,315,20],[367,16,316,10],[367,20,316,14],[367,21,316,15,"preferences"],[367,32,316,26],[367,33,316,27,"categories"],[367,43,316,37],[367,44,316,38,"shares"],[367,50,316,44],[367,52,316,46],[367,59,316,53],[367,64,316,58],[368,16,317,10],[369,14,318,8],[369,19,318,13],[369,27,318,21],[370,16,319,10],[370,20,319,14],[370,21,319,15,"preferences"],[370,32,319,26],[370,33,319,27,"categories"],[370,43,319,37],[370,44,319,38,"social"],[370,50,319,44],[370,52,319,46],[370,59,319,53],[370,64,319,58],[371,16,320,10],[372,14,321,8],[372,19,321,13],[372,27,321,21],[373,16,322,10],[373,20,322,14],[373,21,322,15,"preferences"],[373,32,322,26],[373,33,322,27,"categories"],[373,43,322,37],[373,44,322,38,"system"],[373,50,322,44],[373,52,322,46],[373,59,322,53],[373,64,322,58],[374,16,323,10],[375,12,324,6],[377,12,326,6],[378,12,327,6],[378,16,327,10,"preferences"],[378,27,327,21],[378,28,327,22,"quietHours"],[378,38,327,32],[378,39,327,33,"enabled"],[378,46,327,40],[378,48,327,42],[379,14,328,8],[379,18,328,14,"now"],[379,21,328,17],[379,24,328,20],[379,28,328,24,"Date"],[379,32,328,28],[379,33,328,29],[379,34,328,30],[380,14,329,8],[380,18,329,14,"currentTime"],[380,29,329,25],[380,32,329,28,"now"],[380,35,329,31],[380,36,329,32,"getHours"],[380,44,329,40],[380,45,329,41],[380,46,329,42],[380,49,329,45],[380,51,329,47],[380,54,329,50,"now"],[380,57,329,53],[380,58,329,54,"getMinutes"],[380,68,329,64],[380,69,329,65],[380,70,329,66],[381,14,331,8],[381,18,331,8,"_preferences$quietHou"],[381,39,331,8],[381,42,331,38,"preferences"],[381,53,331,49],[381,54,331,50,"quietHours"],[381,64,331,60],[381,65,331,61,"start"],[381,70,331,66],[381,71,331,67,"split"],[381,76,331,72],[381,77,331,73],[381,80,331,76],[381,81,331,77],[381,82,331,78,"map"],[381,85,331,81],[381,86,331,82,"Number"],[381,92,331,88],[381,93,331,89],[382,16,331,89,"_preferences$quietHou2"],[382,38,331,89],[382,45,331,89,"_slicedToArray2"],[382,60,331,89],[382,61,331,89,"default"],[382,68,331,89],[382,70,331,89,"_preferences$quietHou"],[382,91,331,89],[383,16,331,15,"startHour"],[383,25,331,24],[383,28,331,24,"_preferences$quietHou2"],[383,50,331,24],[384,16,331,26,"startMin"],[384,24,331,34],[384,27,331,34,"_preferences$quietHou2"],[384,49,331,34],[385,14,332,8],[385,18,332,8,"_preferences$quietHou3"],[385,40,332,8],[385,43,332,34,"preferences"],[385,54,332,45],[385,55,332,46,"quietHours"],[385,65,332,56],[385,66,332,57,"end"],[385,69,332,60],[385,70,332,61,"split"],[385,75,332,66],[385,76,332,67],[385,79,332,70],[385,80,332,71],[385,81,332,72,"map"],[385,84,332,75],[385,85,332,76,"Number"],[385,91,332,82],[385,92,332,83],[386,16,332,83,"_preferences$quietHou4"],[386,38,332,83],[386,45,332,83,"_slicedToArray2"],[386,60,332,83],[386,61,332,83,"default"],[386,68,332,83],[386,70,332,83,"_preferences$quietHou3"],[386,92,332,83],[387,16,332,15,"endHour"],[387,23,332,22],[387,26,332,22,"_preferences$quietHou4"],[387,48,332,22],[388,16,332,24,"endMin"],[388,22,332,30],[388,25,332,30,"_preferences$quietHou4"],[388,47,332,30],[389,14,334,8],[389,18,334,14,"quietStart"],[389,28,334,24],[389,31,334,27,"startHour"],[389,40,334,36],[389,43,334,39],[389,45,334,41],[389,48,334,44,"startMin"],[389,56,334,52],[390,14,335,8],[390,18,335,14,"quietEnd"],[390,26,335,22],[390,29,335,25,"endHour"],[390,36,335,32],[390,39,335,35],[390,41,335,37],[390,44,335,40,"endMin"],[390,50,335,46],[392,14,337,8],[393,14,338,8],[393,18,338,12,"quietStart"],[393,28,338,22],[393,31,338,25,"quietEnd"],[393,39,338,33],[393,41,338,35],[394,16,339,10],[394,20,339,14,"currentTime"],[394,31,339,25],[394,35,339,29,"quietStart"],[394,45,339,39],[394,49,339,43,"currentTime"],[394,60,339,54],[394,64,339,58,"quietEnd"],[394,72,339,66],[394,74,339,68],[395,18,340,12],[395,25,340,19],[395,30,340,24],[396,16,341,10],[397,14,342,8],[397,15,342,9],[397,21,342,15],[398,16,343,10],[398,20,343,14,"currentTime"],[398,31,343,25],[398,35,343,29,"quietStart"],[398,45,343,39],[398,49,343,43,"currentTime"],[398,60,343,54],[398,64,343,58,"quietEnd"],[398,72,343,66],[398,74,343,68],[399,18,344,12],[399,25,344,19],[399,30,344,24],[400,16,345,10],[401,14,346,8],[402,12,347,6],[403,12,349,6],[403,19,349,13],[403,23,349,17],[404,10,351,4],[404,11,351,5],[404,12,351,6],[404,19,351,13,"error"],[404,24,351,18],[404,26,351,20],[405,12,352,6,"EventLogger"],[405,36,352,17],[405,37,352,18,"error"],[405,42,352,23],[405,43,352,24],[405,57,352,38],[405,59,352,40],[405,122,352,103],[405,124,352,105,"error"],[405,129,352,119],[405,130,352,120],[406,12,353,6],[406,19,353,13],[406,23,353,17],[406,24,353,18],[406,25,353,19],[407,10,354,4],[408,8,355,2],[408,9,355,3],[409,8,355,3],[409,17,302,15,"shouldShowNotification"],[409,39,302,37,"shouldShowNotification"],[409,40,302,37,"_x5"],[409,43,302,37],[410,10,302,37],[410,17,302,37,"_shouldShowNotification"],[410,40,302,37],[410,41,302,37,"apply"],[410,46,302,37],[410,53,302,37,"arguments"],[410,62,302,37],[411,8,302,37],[412,8,302,37],[412,15,302,15,"shouldShowNotification"],[412,37,302,37],[413,6,302,37],[414,6,357,2],[415,0,358,0],[416,0,359,0],[417,6,357,2],[418,4,357,2],[419,6,357,2,"key"],[419,9,357,2],[420,6,357,2,"value"],[420,11,357,2],[420,13,360,2],[420,22,360,10,"setupNotificationHandler"],[420,46,360,34,"setupNotificationHandler"],[420,47,360,34],[420,49,360,43],[421,8,360,43],[421,12,360,43,"_this"],[421,17,360,43],[422,8,361,4,"Notifications"],[422,21,361,17],[422,22,361,18,"setNotificationHandler"],[422,44,361,40],[422,45,361,41],[423,10,362,6,"handleNotification"],[423,28,362,24],[424,12,362,24],[424,16,362,24,"_ref"],[424,20,362,24],[424,27,362,24,"_asyncToGenerator2"],[424,45,362,24],[424,46,362,24,"default"],[424,53,362,24],[424,55,362,26],[424,66,362,33,"notification"],[424,78,362,45],[424,80,362,50],[425,14,363,8],[425,18,363,14,"type"],[425,22,363,18],[425,25,363,21,"notification"],[425,37,363,33],[425,38,363,34,"request"],[425,45,363,41],[425,46,363,42,"content"],[425,53,363,49],[425,54,363,50,"data"],[425,58,363,54],[425,60,363,56,"type"],[425,64,363,91],[426,14,364,8],[426,18,364,14,"shouldShow"],[426,28,364,24],[426,37,364,33,"_this"],[426,42,364,37],[426,43,364,38,"shouldShowNotification"],[426,65,364,60],[426,66,364,61,"type"],[426,70,364,65],[426,74,364,69],[426,82,364,77],[426,83,364,78],[427,14,366,8],[427,21,366,15],[428,16,367,10,"shouldShowAlert"],[428,31,367,25],[428,33,367,27,"shouldShow"],[428,43,367,37],[429,16,368,10,"shouldPlaySound"],[429,31,368,25],[429,33,368,27,"shouldShow"],[429,43,368,37],[430,16,369,10,"shouldSetBadge"],[430,30,369,24],[430,32,369,26,"shouldShow"],[431,14,370,8],[431,15,370,9],[432,12,371,6],[432,13,371,7],[433,12,371,7],[433,28,362,6,"handleNotification"],[433,46,362,24,"handleNotification"],[433,47,362,24,"_x6"],[433,50,362,24],[434,14,362,24],[434,21,362,24,"_ref"],[434,25,362,24],[434,26,362,24,"apply"],[434,31,362,24],[434,38,362,24,"arguments"],[434,47,362,24],[435,12,362,24],[436,10,362,24],[437,8,372,4],[437,9,372,5],[437,10,372,6],[438,6,373,2],[440,6,375,2],[441,0,376,0],[442,0,377,0],[443,4,375,2],[444,6,375,2,"key"],[444,9,375,2],[445,6,375,2,"value"],[445,11,375,2],[446,8,375,2],[446,12,375,2,"_setupAndroidChannels"],[446,33,375,2],[446,40,375,2,"_asyncToGenerator2"],[446,58,375,2],[446,59,375,2,"default"],[446,66,375,2],[446,68,378,2],[446,81,378,54],[447,10,381,4],[447,14,381,8],[448,12,382,6],[448,16,382,12,"channels"],[448,24,382,20],[448,27,382,23,"Object"],[448,33,382,29],[448,34,382,30,"values"],[448,40,382,36],[448,41,382,37,"NotificationChannels"],[448,76,382,57],[448,77,382,58],[449,12,384,6],[449,17,384,11],[449,21,384,17,"channel"],[449,28,384,24],[449,32,384,28,"channels"],[449,40,384,36],[449,42,384,38],[450,14,385,8],[450,20,385,14,"Notifications"],[450,33,385,27],[450,34,385,28,"setNotificationChannelAsync"],[450,61,385,55],[450,62,385,56,"channel"],[450,69,385,63],[450,70,385,64,"id"],[450,72,385,66],[450,74,385,68],[451,16,386,10,"name"],[451,20,386,14],[451,22,386,16,"channel"],[451,29,386,23],[451,30,386,24,"name"],[451,34,386,28],[452,16,387,10,"description"],[452,27,387,21],[452,29,387,23,"channel"],[452,36,387,30],[452,37,387,31,"description"],[452,48,387,42],[453,16,388,10,"importance"],[453,26,388,20],[453,28,388,22,"Notifications"],[453,41,388,35],[453,42,388,36,"AndroidImportance"],[453,59,388,53],[453,60,388,54,"channel"],[453,67,388,61],[453,68,388,62,"importance"],[453,78,388,72],[453,79,388,73,"toUpperCase"],[453,90,388,84],[453,91,388,85],[453,92,388,86],[453,93,388,135],[454,16,389,10,"vibrationPattern"],[454,32,389,26],[454,34,389,28],[454,35,389,29],[454,36,389,30],[454,38,389,32],[454,41,389,35],[454,43,389,37],[454,46,389,40],[454,48,389,42],[454,51,389,45],[454,52,389,46],[455,16,390,10,"lightColor"],[455,26,390,20],[455,28,390,22],[455,37,390,31],[456,16,391,10,"sound"],[456,21,391,15],[456,23,391,17],[456,32,391,26],[457,16,392,10,"enableVibrate"],[457,29,392,23],[457,31,392,25],[458,14,393,8],[458,15,393,9],[458,16,393,10],[459,12,394,6],[460,12,396,6,"EventLogger"],[460,36,396,17],[460,37,396,18,"debug"],[460,42,396,23],[460,43,396,24],[460,57,396,38],[460,59,396,40],[460,110,396,91],[460,111,396,92],[461,10,397,4],[461,11,397,5],[461,12,397,6],[461,19,397,13,"error"],[461,24,397,18],[461,26,397,20],[462,12,398,6,"EventLogger"],[462,36,398,17],[462,37,398,18,"error"],[462,42,398,23],[462,43,398,24],[462,57,398,38],[462,59,398,40],[462,116,398,97],[462,118,398,99,"error"],[462,123,398,113],[462,124,398,114],[463,10,399,4],[464,8,400,2],[464,9,400,3],[465,8,400,3],[465,17,378,16,"setupAndroidChannels"],[465,37,378,36,"setupAndroidChannels"],[465,38,378,36],[466,10,378,36],[466,17,378,36,"_setupAndroidChannels"],[466,38,378,36],[466,39,378,36,"apply"],[466,44,378,36],[466,51,378,36,"arguments"],[466,60,378,36],[467,8,378,36],[468,8,378,36],[468,15,378,16,"setupAndroidChannels"],[468,35,378,36],[469,6,378,36],[470,6,402,2],[471,0,403,0],[472,0,404,0],[473,6,402,2],[474,4,402,2],[475,6,402,2,"key"],[475,9,402,2],[476,6,402,2,"value"],[476,11,402,2],[477,8,402,2],[477,12,402,2,"_setupNotificationCategories"],[477,40,402,2],[477,47,402,2,"_asyncToGenerator2"],[477,65,402,2],[477,66,402,2,"default"],[477,73,402,2],[477,75,405,2],[477,88,405,61],[478,10,406,4],[478,14,406,8],[479,12,407,6],[479,18,407,12,"Notifications"],[479,31,407,25],[479,32,407,26,"setNotificationCategoryAsync"],[479,60,407,54],[479,61,407,55],[479,73,407,67],[479,75,407,69],[479,76,408,8],[480,14,409,10,"identifier"],[480,24,409,20],[480,26,409,22],[480,32,409,28],[481,14,410,10,"buttonTitle"],[481,25,410,21],[481,27,410,23],[481,33,410,29],[482,14,411,10,"options"],[482,21,411,17],[482,23,411,19],[483,16,411,21,"opensAppToForeground"],[483,36,411,41],[483,38,411,43],[484,14,411,48],[485,12,412,8],[485,13,412,9],[485,15,413,8],[486,14,414,10,"identifier"],[486,24,414,20],[486,26,414,22],[486,35,414,31],[487,14,415,10,"buttonTitle"],[487,25,415,21],[487,27,415,23],[487,36,415,32],[488,14,416,10,"options"],[488,21,416,17],[488,23,416,19],[489,16,416,21,"opensAppToForeground"],[489,36,416,41],[489,38,416,43],[490,14,416,49],[491,12,417,8],[491,13,417,9],[491,14,418,7],[491,15,418,8],[492,12,420,6],[492,18,420,12,"Notifications"],[492,31,420,25],[492,32,420,26,"setNotificationCategoryAsync"],[492,60,420,54],[492,61,420,55],[492,68,420,62],[492,70,420,64],[492,71,421,8],[493,14,422,10,"identifier"],[493,24,422,20],[493,26,422,22],[493,32,422,28],[494,14,423,10,"buttonTitle"],[494,25,423,21],[494,27,423,23],[494,33,423,29],[495,14,424,10,"options"],[495,21,424,17],[495,23,424,19],[496,16,424,21,"opensAppToForeground"],[496,36,424,41],[496,38,424,43],[497,14,424,48],[498,12,425,8],[498,13,425,9],[498,15,426,8],[499,14,427,10,"identifier"],[499,24,427,20],[499,26,427,22],[499,33,427,29],[500,14,428,10,"buttonTitle"],[500,25,428,21],[500,27,428,23],[500,34,428,30],[501,14,429,10,"options"],[501,21,429,17],[501,23,429,19],[502,16,429,21,"opensAppToForeground"],[502,36,429,41],[502,38,429,43],[503,14,429,49],[504,12,430,8],[504,13,430,9],[504,14,431,7],[504,15,431,8],[505,12,433,6,"EventLogger"],[505,36,433,17],[505,37,433,18,"debug"],[505,42,433,23],[505,43,433,24],[505,57,433,38],[505,59,433,40],[505,117,433,98],[505,118,433,99],[506,10,434,4],[506,11,434,5],[506,12,434,6],[506,19,434,13,"error"],[506,24,434,18],[506,26,434,20],[507,12,435,6,"EventLogger"],[507,36,435,17],[507,37,435,18,"error"],[507,42,435,23],[507,43,435,24],[507,57,435,38],[507,59,435,40],[507,123,435,104],[507,125,435,106,"error"],[507,130,435,120],[507,131,435,121],[508,10,436,4],[509,8,437,2],[509,9,437,3],[510,8,437,3],[510,17,405,16,"setupNotificationCategories"],[510,44,405,43,"setupNotificationCategories"],[510,45,405,43],[511,10,405,43],[511,17,405,43,"_setupNotificationCategories"],[511,45,405,43],[511,46,405,43,"apply"],[511,51,405,43],[511,58,405,43,"arguments"],[511,67,405,43],[512,8,405,43],[513,8,405,43],[513,15,405,16,"setupNotificationCategories"],[513,42,405,43],[514,6,405,43],[515,6,439,2],[516,0,440,0],[517,0,441,0],[518,6,439,2],[519,4,439,2],[520,6,439,2,"key"],[520,9,439,2],[521,6,439,2,"value"],[521,11,439,2],[521,13,442,2],[521,22,442,10,"setupNotificationListeners"],[521,48,442,36,"setupNotificationListeners"],[521,49,442,36],[521,51,442,45],[522,8,443,4],[523,8,444,4],[523,12,444,8],[523,16,444,12],[523,17,444,13,"notificationListener"],[523,37,444,33],[523,39,444,35],[524,10,445,6],[524,14,445,10],[524,15,445,11,"notificationListener"],[524,35,445,31],[524,36,445,32,"remove"],[524,42,445,38],[524,43,445,39],[524,44,445,40],[525,8,446,4],[526,8,447,4],[526,12,447,8],[526,16,447,12],[526,17,447,13,"responseListener"],[526,33,447,29],[526,35,447,31],[527,10,448,6],[527,14,448,10],[527,15,448,11,"responseListener"],[527,31,448,27],[527,32,448,28,"remove"],[527,38,448,34],[527,39,448,35],[527,40,448,36],[528,8,449,4],[530,8,451,4],[531,8,452,4],[531,12,452,8],[531,13,452,9,"notificationListener"],[531,33,452,29],[531,36,452,32,"Notifications"],[531,49,452,45],[531,50,452,46,"addNotificationReceivedListener"],[531,81,452,77],[531,82,453,6],[531,86,453,10],[531,87,453,11,"handleNotificationReceived"],[531,113,453,37],[531,114,453,38,"bind"],[531,118,453,42],[531,119,453,43],[531,123,453,47],[531,124,454,4],[531,125,454,5],[533,8,456,4],[534,8,457,4],[534,12,457,8],[534,13,457,9,"responseListener"],[534,29,457,25],[534,32,457,28,"Notifications"],[534,45,457,41],[534,46,457,42,"addNotificationResponseReceivedListener"],[534,85,457,81],[534,86,458,6],[534,90,458,10],[534,91,458,11,"handleNotificationResponse"],[534,117,458,37],[534,118,458,38,"bind"],[534,122,458,42],[534,123,458,43],[534,127,458,47],[534,128,459,4],[534,129,459,5],[535,8,461,4,"EventLogger"],[535,32,461,15],[535,33,461,16,"debug"],[535,38,461,21],[535,39,461,22],[535,53,461,36],[535,55,461,38],[535,112,461,95],[535,113,461,96],[536,6,462,2],[538,6,464,2],[539,0,465,0],[540,0,466,0],[541,4,464,2],[542,6,464,2,"key"],[542,9,464,2],[543,6,464,2,"value"],[543,11,464,2],[544,8,464,2],[544,12,464,2,"_handleNotificationReceived"],[544,39,464,2],[544,46,464,2,"_asyncToGenerator2"],[544,64,464,2],[544,65,464,2,"default"],[544,72,464,2],[544,74,467,2],[544,85,467,43,"notification"],[544,97,467,83],[544,99,467,100],[545,10,468,4],[545,14,468,8],[546,12,469,6,"EventLogger"],[546,36,469,17],[546,37,469,18,"debug"],[546,42,469,23],[546,43,469,24],[546,57,469,38],[546,59,469,40],[546,105,469,86],[546,107,469,88,"notification"],[546,119,469,100],[546,120,469,101],[548,12,471,6],[549,12,472,6],[549,16,472,12,"currentBadge"],[549,28,472,24],[549,37,472,33],[549,41,472,37],[549,42,472,38,"getBadgeCount"],[549,55,472,51],[549,56,472,52],[549,57,472,53],[550,12,473,6],[550,18,473,12],[550,22,473,16],[550,23,473,17,"setBadgeCount"],[550,36,473,30],[550,37,473,31,"currentBadge"],[550,49,473,43],[550,52,473,46],[550,53,473,47],[550,54,473,48],[552,12,475,6],[553,12,476,6],[554,10,478,4],[554,11,478,5],[554,12,478,6],[554,19,478,13,"error"],[554,24,478,18],[554,26,478,20],[555,12,479,6,"EventLogger"],[555,36,479,17],[555,37,479,18,"error"],[555,42,479,23],[555,43,479,24],[555,57,479,38],[555,59,479,40],[555,120,479,101],[555,122,479,103,"error"],[555,127,479,117],[555,128,479,118],[556,10,480,4],[557,8,481,2],[557,9,481,3],[558,8,481,3],[558,17,467,16,"handleNotificationReceived"],[558,43,467,42,"handleNotificationReceived"],[558,44,467,42,"_x7"],[558,47,467,42],[559,10,467,42],[559,17,467,42,"_handleNotificationReceived"],[559,44,467,42],[559,45,467,42,"apply"],[559,50,467,42],[559,57,467,42,"arguments"],[559,66,467,42],[560,8,467,42],[561,8,467,42],[561,15,467,16,"handleNotificationReceived"],[561,41,467,42],[562,6,467,42],[563,6,483,2],[564,0,484,0],[565,0,485,0],[566,6,483,2],[567,4,483,2],[568,6,483,2,"key"],[568,9,483,2],[569,6,483,2,"value"],[569,11,483,2],[570,8,483,2],[570,12,483,2,"_handleNotificationResponse"],[570,39,483,2],[570,46,483,2,"_asyncToGenerator2"],[570,64,483,2],[570,65,483,2,"default"],[570,72,483,2],[570,74,486,2],[570,85,486,43,"response"],[570,93,486,87],[570,95,486,104],[571,10,487,4],[571,14,487,8],[572,12,488,6,"EventLogger"],[572,36,488,17],[572,37,488,18,"debug"],[572,42,488,23],[572,43,488,24],[572,57,488,38],[572,59,488,40],[572,105,488,86],[572,107,488,88,"response"],[572,115,488,96],[572,116,488,97],[574,12,490,6],[575,12,491,6],[575,18,491,12],[575,22,491,16],[575,23,491,17,"clearBadge"],[575,33,491,27],[575,34,491,28],[575,35,491,29],[577,12,493,6],[578,12,494,6],[579,10,496,4],[579,11,496,5],[579,12,496,6],[579,19,496,13,"error"],[579,24,496,18],[579,26,496,20],[580,12,497,6,"EventLogger"],[580,36,497,17],[580,37,497,18,"error"],[580,42,497,23],[580,43,497,24],[580,57,497,38],[580,59,497,40],[580,120,497,101],[580,122,497,103,"error"],[580,127,497,117],[580,128,497,118],[581,10,498,4],[582,8,499,2],[582,9,499,3],[583,8,499,3],[583,17,486,16,"handleNotificationResponse"],[583,43,486,42,"handleNotificationResponse"],[583,44,486,42,"_x8"],[583,47,486,42],[584,10,486,42],[584,17,486,42,"_handleNotificationResponse"],[584,44,486,42],[584,45,486,42,"apply"],[584,50,486,42],[584,57,486,42,"arguments"],[584,66,486,42],[585,8,486,42],[586,8,486,42],[586,15,486,16,"handleNotificationResponse"],[586,41,486,42],[587,6,486,42],[588,6,501,2],[589,0,502,0],[590,0,503,0],[591,6,501,2],[592,4,501,2],[593,6,501,2,"key"],[593,9,501,2],[594,6,501,2,"value"],[594,11,501,2],[594,13,504,2],[594,22,504,9,"cleanup"],[594,29,504,16,"cleanup"],[594,30,504,16],[594,32,504,25],[595,8,505,4],[595,12,505,8],[595,16,505,12],[595,17,505,13,"notificationListener"],[595,37,505,33],[595,39,505,35],[596,10,506,6],[596,14,506,10],[596,15,506,11,"notificationListener"],[596,35,506,31],[596,36,506,32,"remove"],[596,42,506,38],[596,43,506,39],[596,44,506,40],[597,10,507,6],[597,14,507,10],[597,15,507,11,"notificationListener"],[597,35,507,31],[597,38,507,34],[597,42,507,38],[598,8,508,4],[599,8,509,4],[599,12,509,8],[599,16,509,12],[599,17,509,13,"responseListener"],[599,33,509,29],[599,35,509,31],[600,10,510,6],[600,14,510,10],[600,15,510,11,"responseListener"],[600,31,510,27],[600,32,510,28,"remove"],[600,38,510,34],[600,39,510,35],[600,40,510,36],[601,10,511,6],[601,14,511,10],[601,15,511,11,"responseListener"],[601,31,511,27],[601,34,511,30],[601,38,511,34],[602,8,512,4],[603,8,514,4],[603,12,514,8],[603,13,514,9,"isInitialized"],[603,26,514,22],[603,29,514,25],[603,34,514,30],[604,8,515,4,"EventLogger"],[604,32,515,15],[604,33,515,16,"debug"],[604,38,515,21],[604,39,515,22],[604,53,515,36],[604,55,515,38],[604,89,515,72],[604,90,515,73],[605,6,516,2],[607,6,518,2],[608,0,519,0],[609,0,520,0],[610,4,518,2],[611,6,518,2,"key"],[611,9,518,2],[612,6,518,2,"value"],[612,11,518,2],[613,8,518,2],[613,12,518,2,"_getStoredPushToken"],[613,31,518,2],[613,38,518,2,"_asyncToGenerator2"],[613,56,518,2],[613,57,518,2,"default"],[613,64,518,2],[613,66,521,2],[613,79,521,60],[614,10,522,4],[614,14,522,8],[615,12,523,6],[615,25,523,19,"AsyncStorage"],[615,46,523,31],[615,47,523,32,"getItem"],[615,54,523,39],[615,55,523,40,"NotificationService"],[615,74,523,59],[615,75,523,60,"STORAGE_KEYS"],[615,87,523,72],[615,88,523,73,"PUSH_TOKEN"],[615,98,523,83],[615,99,523,84],[616,10,524,4],[616,11,524,5],[616,12,524,6],[616,19,524,13,"error"],[616,24,524,18],[616,26,524,20],[617,12,525,6,"EventLogger"],[617,36,525,17],[617,37,525,18,"error"],[617,42,525,23],[617,43,525,24],[617,57,525,38],[617,59,525,40],[617,115,525,96],[617,117,525,98,"error"],[617,122,525,112],[617,123,525,113],[618,12,526,6],[618,19,526,13],[618,23,526,17],[619,10,527,4],[620,8,528,2],[620,9,528,3],[621,8,528,3],[621,17,521,15,"getStoredPushToken"],[621,35,521,33,"getStoredPushToken"],[621,36,521,33],[622,10,521,33],[622,17,521,33,"_getStoredPushToken"],[622,36,521,33],[622,37,521,33,"apply"],[622,42,521,33],[622,49,521,33,"arguments"],[622,58,521,33],[623,8,521,33],[624,8,521,33],[624,15,521,15,"getStoredPushToken"],[624,33,521,33],[625,6,521,33],[626,6,530,2],[627,0,531,0],[628,0,532,0],[629,6,530,2],[630,4,530,2],[631,6,530,2,"key"],[631,9,530,2],[632,6,530,2,"value"],[632,11,530,2],[633,8,530,2],[633,12,530,2,"_sendTestNotification"],[633,33,530,2],[633,40,530,2,"_asyncToGenerator2"],[633,58,530,2],[633,59,530,2,"default"],[633,66,530,2],[633,68,533,2],[633,81,533,53],[634,10,534,4],[634,16,534,10],[634,20,534,14],[634,21,534,15,"scheduleLocalNotification"],[634,46,534,40],[634,47,534,41],[635,12,535,6,"content"],[635,19,535,13],[635,21,535,15],[636,14,536,8,"title"],[636,19,536,13],[636,21,536,15],[636,40,536,34],[637,14,537,8,"body"],[637,18,537,12],[637,20,537,14],[637,61,537,55],[638,14,538,8,"data"],[638,18,538,12],[638,20,538,14],[639,16,538,16,"type"],[639,20,538,20],[639,22,538,22],[640,14,538,31],[640,15,538,32],[641,14,539,8,"categoryIdentifier"],[641,32,539,26],[641,34,539,28],[642,12,540,6],[642,13,540,7],[643,12,541,6,"trigger"],[643,19,541,13],[643,21,541,15],[644,14,542,8,"type"],[644,18,542,12],[644,20,542,14],[644,26,542,20],[645,14,543,8,"date"],[645,18,543,12],[645,20,543,14],[645,24,543,18,"Date"],[645,28,543,22],[645,29,543,23,"Date"],[645,33,543,27],[645,34,543,28,"now"],[645,37,543,31],[645,38,543,32],[645,39,543,33],[645,42,543,36],[645,46,543,40],[645,47,543,41],[645,48,543,43],[646,12,544,6],[647,10,545,4],[647,11,545,5],[647,12,545,6],[648,8,546,2],[648,9,546,3],[649,8,546,3],[649,17,533,15,"sendTestNotification"],[649,37,533,35,"sendTestNotification"],[649,38,533,35],[650,10,533,35],[650,17,533,35,"_sendTestNotification"],[650,38,533,35],[650,39,533,35,"apply"],[650,44,533,35],[650,51,533,35,"arguments"],[650,60,533,35],[651,8,533,35],[652,8,533,35],[652,15,533,15,"sendTestNotification"],[652,35,533,35],[653,6,533,35],[654,4,533,35],[655,6,533,35,"key"],[655,9,533,35],[656,6,533,35,"value"],[656,11,533,35],[656,13,41,2],[656,22,41,16,"getInstance"],[656,33,41,27,"getInstance"],[656,34,41,27],[656,36,41,51],[657,8,42,4],[657,12,42,8],[657,13,42,9,"NotificationService"],[657,32,42,28],[657,33,42,29,"instance"],[657,41,42,37],[657,43,42,39],[658,10,43,6,"NotificationService"],[658,29,43,25],[658,30,43,26,"instance"],[658,38,43,34],[658,41,43,37],[658,45,43,41,"NotificationService"],[658,64,43,60],[658,65,43,61],[658,66,43,62],[659,8,44,4],[660,8,45,4],[660,15,45,11,"NotificationService"],[660,34,45,30],[660,35,45,31,"instance"],[660,43,45,39],[661,6,46,2],[662,4,46,3],[663,2,46,3],[664,2,29,2],[665,2,23,6,"NotificationService"],[665,21,23,25],[665,22,30,26,"STORAGE_KEYS"],[665,34,30,38],[665,37,30,41],[666,4,31,4,"PREFERENCES"],[666,15,31,15],[666,17,31,17],[666,51,31,51],[667,4,32,4,"PUSH_TOKEN"],[667,14,32,14],[667,16,32,16],[667,36,32,36],[668,4,33,4,"LAST_TOKEN_SYNC"],[668,19,33,19],[668,21,33,21],[668,41,33,41],[669,4,34,4,"BADGE_COUNT"],[669,15,34,15],[669,17,34,17],[670,2,35,2],[670,3,35,3],[671,2,35,3],[671,6,35,3,"_default"],[671,14,35,3],[671,17,35,3,"exports"],[671,24,35,3],[671,25,35,3,"default"],[671,32,35,3],[671,35,549,15,"NotificationService"],[671,54,549,34],[671,55,549,35,"getInstance"],[671,66,549,46],[671,67,549,47],[671,68,549,48],[672,0,549,48],[672,3]],"functionMap":{"names":["<global>","NotificationService","constructor","getInstance","initialize","requestPermissions","getPushToken","scheduleLocalNotification","cancelNotification","cancelAllNotifications","setBadgeCount","getBadgeCount","clearBadge","getPreferences","savePreferences","shouldShowNotification","setupNotificationHandler","Notifications.setNotificationHandler$argument_0.handleNotification","setupAndroidChannels","setupNotificationCategories","setupNotificationListeners","handleNotificationReceived","handleNotificationResponse","cleanup","getStoredPushToken","sendTestNotification"],"mappings":"AAA;ACsB;ECc;GDE;EEE;GFK;EGK;GHyB;EIK;GJoD;EKK;GL6B;EMK;GNqC;EOK;GPO;EQK;GRO;ESK;GTQ;EUK;GVQ;EWK;GXE;EYK;GZW;EaK;GbU;EcK;GdqD;EeK;0BCE;ODS;GfE;EiBK;GjBsB;EkBK;GlBgC;EmBK;GnBoB;EoBK;GpBc;EqBK;GrBa;EsBK;GtBY;EuBK;GvBO;EwBK;GxBa;CDC"}},"type":"js/module"}]}