{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PerformanceMeasurement = void 0;\n  exports.measurePerformance = measurePerformance;\n  exports.usePerformanceTracking = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  /**\n  import { EventLogger } from './/EventLogger';\n   * Performance measurement utilities for app launch time optimization\n   * Provides tools to measure and verify launch time improvements\n   */\n  var PerformanceMeasurement = exports.PerformanceMeasurement = /*#__PURE__*/function () {\n    function PerformanceMeasurement() {\n      (0, _classCallCheck2.default)(this, PerformanceMeasurement);\n    }\n    return (0, _createClass2.default)(PerformanceMeasurement, null, [{\n      key: \"initialize\",\n      value:\n      /**\n       * Initialize performance measurement\n       */\n      function initialize() {\n        if (this.isInitialized) return;\n        this.appStartTime = Date.now();\n        this.measurementPoints.clear();\n        this.measurementPoints.set('app_start', this.appStartTime);\n        this.isInitialized = true;\n        if (__DEV__) {\n          EventLogger.debug('PerformanceMeasurement', '📊 Performance measurement initialized');\n        }\n      }\n\n      /**\n       * Get detailed performance report with optimization benchmarks\n       */\n    }, {\n      key: \"getDetailedReport\",\n      value: function getDetailedReport() {\n        var _this = this;\n        var totalLaunchTime = this.getAppLaunchTime();\n        var target = 2000; // 2 second target\n        var improvement = target - totalLaunchTime;\n        var status = 'needs_improvement';\n        if (totalLaunchTime < 1500) status = 'excellent';else if (totalLaunchTime < 2000) status = 'good';\n\n        // Calculate phase breakdown\n        var phases = [{\n          name: 'Bootstrap',\n          start: 'app_bootstrap_start',\n          end: 'services_loaded'\n        }, {\n          name: 'Services Init',\n          start: 'services_loaded',\n          end: 'app_initialization_complete'\n        }, {\n          name: 'First Render',\n          start: 'app_render_start',\n          end: 'app_initialization_complete'\n        }];\n        var breakdown = phases.map(function (phase) {\n          var duration = _this.getTimeBetween(phase.start, phase.end) || 0;\n          return {\n            phase: phase.name,\n            duration: duration,\n            percentage: totalLaunchTime > 0 ? Math.round(duration / totalLaunchTime * 100) : 0\n          };\n        });\n        return {\n          totalLaunchTime: totalLaunchTime,\n          benchmarks: {\n            target: target,\n            current: totalLaunchTime,\n            improvement: improvement,\n            status: status\n          },\n          breakdown: breakdown\n        };\n      }\n\n      /**\n       * Get time between two measurement points\n       */\n    }, {\n      key: \"getTimeBetween\",\n      value: function getTimeBetween(startPoint, endPoint) {\n        var start = this.measurementPoints.get(startPoint);\n        var end = this.measurementPoints.get(endPoint);\n        if (!start || !end) return null;\n        return end - start;\n      }\n\n      /**\n       * Mark a performance point\n       */\n    }, {\n      key: \"mark\",\n      value: function mark(pointName) {\n        var now = Date.now();\n        this.measurementPoints.set(pointName, now);\n        if (__DEV__) {\n          var elapsed = now - this.appStartTime;\n          EventLogger.debug('PerformanceMeasurement', '📊 Performance mark: ${pointName} at ${elapsed}ms');\n        }\n      }\n\n      /**\n       * Measure time between two points\n       */\n    }, {\n      key: \"measure\",\n      value: function measure(name, startPoint, endPoint) {\n        var start = this.measurementPoints.get(startPoint);\n        var end = this.measurementPoints.get(endPoint);\n        if (!start || !end) {\n          EventLogger.warn('PerformanceMeasurement', 'Performance measurement failed: missing points ${startPoint} or ${endPoint}');\n          return null;\n        }\n        var duration = end - start;\n        if (__DEV__) {\n          EventLogger.debug('PerformanceMeasurement', '📊 Performance measure: ${name} = ${duration}ms');\n        }\n        return duration;\n      }\n\n      /**\n       * Get total app launch time\n       */\n    }, {\n      key: \"getAppLaunchTime\",\n      value: function getAppLaunchTime() {\n        var now = Date.now();\n        return now - this.appStartTime;\n      }\n\n      /**\n       * Check if launch time exceeds threshold\n       */\n    }, {\n      key: \"checkLaunchTimeThreshold\",\n      value: function checkLaunchTimeThreshold() {\n        var thresholdMs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2000;\n        var launchTime = this.getAppLaunchTime();\n        var passed = launchTime <= thresholdMs;\n        if (__DEV__) {\n          var status = passed ? '✅' : '❌';\n          EventLogger.debug('PerformanceMeasurement', '${status} Launch time check: ${launchTime}ms (threshold: ${thresholdMs}ms)');\n        }\n        return {\n          passed: passed,\n          launchTime: launchTime,\n          threshold: thresholdMs\n        };\n      }\n\n      /**\n       * Get performance summary\n       */\n    }, {\n      key: \"getSummary\",\n      value: function getSummary() {\n        var _this2 = this;\n        var points = {};\n        var relativeTimes = {};\n        this.measurementPoints.forEach(function (time, name) {\n          points[name] = time;\n          relativeTimes[name] = time - _this2.appStartTime;\n        });\n        return {\n          appLaunchTime: this.getAppLaunchTime(),\n          measurementPoints: points,\n          relativeTimes: relativeTimes\n        };\n      }\n\n      /**\n       * Reset all measurements\n       */\n    }, {\n      key: \"reset\",\n      value: function reset() {\n        this.appStartTime = Date.now();\n        this.measurementPoints.clear();\n        this.measurementPoints.set('app_start', this.appStartTime);\n        if (__DEV__) {\n          EventLogger.debug('PerformanceMeasurement', '📊 Performance measurements reset');\n        }\n      }\n\n      /**\n       * Export measurements as JSON for analysis\n       */\n    }, {\n      key: \"exportMeasurements\",\n      value: function exportMeasurements() {\n        var summary = this.getSummary();\n        return JSON.stringify(summary, null, 2);\n      }\n\n      /**\n       * Track component mount time\n       */\n    }, {\n      key: \"trackComponentMount\",\n      value: function trackComponentMount(componentName) {\n        var _this3 = this;\n        var startTime = Date.now();\n        this.mark(`${componentName}_mount_start`);\n        return function () {\n          var endTime = Date.now();\n          _this3.mark(`${componentName}_mount_end`);\n          var mountTime = endTime - startTime;\n          if (__DEV__) {\n            EventLogger.debug('PerformanceMeasurement', '📊 Component ${componentName} mounted in ${mountTime}ms');\n          }\n        };\n      }\n\n      /**\n       * Track async operation time\n       */\n    }, {\n      key: \"trackAsyncOperation\",\n      value: (function () {\n        var _trackAsyncOperation = (0, _asyncToGenerator2.default)(function* (operationName, operation) {\n          var startTime = Date.now();\n          this.mark(`${operationName}_start`);\n          try {\n            var result = yield operation();\n            var endTime = Date.now();\n            this.mark(`${operationName}_end`);\n            var duration = endTime - startTime;\n            if (__DEV__) {\n              EventLogger.debug('PerformanceMeasurement', '📊 Async operation ${operationName} completed in ${duration}ms');\n            }\n            return result;\n          } catch (error) {\n            var _endTime = Date.now();\n            this.mark(`${operationName}_error`);\n            var _duration = _endTime - startTime;\n            if (__DEV__) {\n              EventLogger.debug('PerformanceMeasurement', '📊 Async operation ${operationName} failed after ${duration}ms');\n            }\n            throw error;\n          }\n        });\n        function trackAsyncOperation(_x, _x2) {\n          return _trackAsyncOperation.apply(this, arguments);\n        }\n        return trackAsyncOperation;\n      }()\n      /**\n       * Create a performance-aware setTimeout\n       */\n      )\n    }, {\n      key: \"performanceTimeout\",\n      value: function performanceTimeout(callback, delay, name) {\n        var _this4 = this;\n        var startTime = Date.now();\n        if (name) {\n          this.mark(`timeout_${name}_scheduled`);\n        }\n        return setTimeout(function () {\n          var actualDelay = Date.now() - startTime;\n          if (name) {\n            _this4.mark(`timeout_${name}_executed`);\n            if (__DEV__ && Math.abs(actualDelay - delay) > 10) {\n              EventLogger.debug('PerformanceMeasurement', '📊 Timeout ${name}: scheduled ${delay}ms, actual ${actualDelay}ms');\n            }\n          }\n          callback();\n        }, delay);\n      }\n\n      /**\n       * Measure render performance\n       */\n    }, {\n      key: \"measureRender\",\n      value: function measureRender(componentName) {\n        var _this5 = this;\n        var startTime;\n        return {\n          start: function start() {\n            startTime = Date.now();\n            _this5.mark(`render_${componentName}_start`);\n          },\n          end: function end() {\n            var endTime = Date.now();\n            _this5.mark(`render_${componentName}_end`);\n            var renderTime = endTime - startTime;\n            if (__DEV__) {\n              EventLogger.debug('PerformanceMeasurement', '📊 Render ${componentName}: ${renderTime}ms');\n            }\n            return renderTime;\n          }\n        };\n      }\n    }]);\n  }();\n  /**\n   * Performance measurement hook for React components\n   */\n  PerformanceMeasurement.appStartTime = Date.now();\n  PerformanceMeasurement.measurementPoints = new Map();\n  PerformanceMeasurement.isInitialized = false;\n  var usePerformanceTracking = exports.usePerformanceTracking = function usePerformanceTracking(componentName) {\n    var cleanup = PerformanceMeasurement.trackComponentMount(componentName);\n    return {\n      mark: function mark(pointName) {\n        return PerformanceMeasurement.mark(`${componentName}_${pointName}`);\n      },\n      measure: function measure(name, start, end) {\n        return PerformanceMeasurement.measure(name, `${componentName}_${start}`, `${componentName}_${end}`);\n      },\n      cleanup: cleanup\n    };\n  };\n\n  /**\n   * Performance measurement decorator for methods\n   */\n  function measurePerformance(name) {\n    return function (target, propertyKey, descriptor) {\n      var originalMethod = descriptor.value;\n      var methodName = name || `${target.constructor.name}.${propertyKey}`;\n      descriptor.value = /*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {\n        var _this6 = this;\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return PerformanceMeasurement.trackAsyncOperation(methodName, function () {\n          return originalMethod.apply(_this6, args);\n        });\n      });\n      return descriptor;\n    };\n  }\n\n  // Initialize on import\n  PerformanceMeasurement.initialize();\n});","lineCount":347,"map":[[12,2,1,0],[13,0,2,0],[14,0,3,0],[15,0,4,0],[16,0,5,0],[17,2,1,0],[17,6,7,13,"PerformanceMeasurement"],[17,28,7,35],[17,31,7,35,"exports"],[17,38,7,35],[17,39,7,35,"PerformanceMeasurement"],[17,61,7,35],[18,4,7,35],[18,13,7,35,"PerformanceMeasurement"],[18,36,7,35],[19,6,7,35],[19,10,7,35,"_classCallCheck2"],[19,26,7,35],[19,27,7,35,"default"],[19,34,7,35],[19,42,7,35,"PerformanceMeasurement"],[19,64,7,35],[20,4,7,35],[21,4,7,35],[21,15,7,35,"_createClass2"],[21,28,7,35],[21,29,7,35,"default"],[21,36,7,35],[21,38,7,35,"PerformanceMeasurement"],[21,60,7,35],[22,6,7,35,"key"],[22,9,7,35],[23,6,7,35,"value"],[23,11,7,35],[24,6,12,2],[25,0,13,0],[26,0,14,0],[27,6,15,2],[27,15,15,16,"initialize"],[27,25,15,26,"initialize"],[27,26,15,26],[27,28,15,35],[28,8,16,4],[28,12,16,8],[28,16,16,12],[28,17,16,13,"isInitialized"],[28,30,16,26],[28,32,16,28],[29,8,18,4],[29,12,18,8],[29,13,18,9,"appStartTime"],[29,25,18,21],[29,28,18,24,"Date"],[29,32,18,28],[29,33,18,29,"now"],[29,36,18,32],[29,37,18,33],[29,38,18,34],[30,8,19,4],[30,12,19,8],[30,13,19,9,"measurementPoints"],[30,30,19,26],[30,31,19,27,"clear"],[30,36,19,32],[30,37,19,33],[30,38,19,34],[31,8,20,4],[31,12,20,8],[31,13,20,9,"measurementPoints"],[31,30,20,26],[31,31,20,27,"set"],[31,34,20,30],[31,35,20,31],[31,46,20,42],[31,48,20,44],[31,52,20,48],[31,53,20,49,"appStartTime"],[31,65,20,61],[31,66,20,62],[32,8,21,4],[32,12,21,8],[32,13,21,9,"isInitialized"],[32,26,21,22],[32,29,21,25],[32,33,21,29],[33,8,23,4],[33,12,23,8,"__DEV__"],[33,19,23,15],[33,21,23,17],[34,10,24,6,"EventLogger"],[34,21,24,17],[34,22,24,18,"debug"],[34,27,24,23],[34,28,24,24],[34,52,24,48],[34,54,24,50],[34,94,24,90],[34,95,24,91],[35,8,25,4],[36,6,26,2],[38,6,28,2],[39,0,29,0],[40,0,30,0],[41,4,28,2],[42,6,28,2,"key"],[42,9,28,2],[43,6,28,2,"value"],[43,11,28,2],[43,13,31,2],[43,22,31,16,"getDetailedReport"],[43,39,31,33,"getDetailedReport"],[43,40,31,33],[43,42,44,4],[44,8,44,4],[44,12,44,4,"_this"],[44,17,44,4],[45,8,45,4],[45,12,45,10,"totalLaunchTime"],[45,27,45,25],[45,30,45,28],[45,34,45,32],[45,35,45,33,"getAppLaunchTime"],[45,51,45,49],[45,52,45,50],[45,53,45,51],[46,8,46,4],[46,12,46,10,"target"],[46,18,46,16],[46,21,46,19],[46,25,46,23],[46,26,46,24],[46,27,46,25],[47,8,47,4],[47,12,47,10,"improvement"],[47,23,47,21],[47,26,47,24,"target"],[47,32,47,30],[47,35,47,33,"totalLaunchTime"],[47,50,47,48],[48,8,49,4],[48,12,49,8,"status"],[48,18,49,58],[48,21,49,61],[48,40,49,80],[49,8,50,4],[49,12,50,8,"totalLaunchTime"],[49,27,50,23],[49,30,50,26],[49,34,50,30],[49,36,50,32,"status"],[49,42,50,38],[49,45,50,41],[49,56,50,52],[49,57,50,53],[49,62,51,9],[49,66,51,13,"totalLaunchTime"],[49,81,51,28],[49,84,51,31],[49,88,51,35],[49,90,51,37,"status"],[49,96,51,43],[49,99,51,46],[49,105,51,52],[51,8,53,4],[52,8,54,4],[52,12,54,10,"phases"],[52,18,54,16],[52,21,54,19],[52,22,55,6],[53,10,55,8,"name"],[53,14,55,12],[53,16,55,14],[53,27,55,25],[54,10,55,27,"start"],[54,15,55,32],[54,17,55,34],[54,38,55,55],[55,10,55,57,"end"],[55,13,55,60],[55,15,55,62],[56,8,55,80],[56,9,55,81],[56,11,56,6],[57,10,56,8,"name"],[57,14,56,12],[57,16,56,14],[57,31,56,29],[58,10,56,31,"start"],[58,15,56,36],[58,17,56,38],[58,34,56,55],[59,10,56,57,"end"],[59,13,56,60],[59,15,56,62],[60,8,56,92],[60,9,56,93],[60,11,57,6],[61,10,57,8,"name"],[61,14,57,12],[61,16,57,14],[61,30,57,28],[62,10,57,30,"start"],[62,15,57,35],[62,17,57,37],[62,35,57,55],[63,10,57,57,"end"],[63,13,57,60],[63,15,57,62],[64,8,57,92],[64,9,57,93],[64,10,58,5],[65,8,60,4],[65,12,60,10,"breakdown"],[65,21,60,19],[65,24,60,22,"phases"],[65,30,60,28],[65,31,60,29,"map"],[65,34,60,32],[65,35,60,33],[65,45,60,33,"phase"],[65,50,60,38],[65,52,60,42],[66,10,61,6],[66,14,61,12,"duration"],[66,22,61,20],[66,25,61,23,"_this"],[66,30,61,27],[66,31,61,28,"getTimeBetween"],[66,45,61,42],[66,46,61,43,"phase"],[66,51,61,48],[66,52,61,49,"start"],[66,57,61,54],[66,59,61,56,"phase"],[66,64,61,61],[66,65,61,62,"end"],[66,68,61,65],[66,69,61,66],[66,73,61,70],[66,74,61,71],[67,10,62,6],[67,17,62,13],[68,12,63,8,"phase"],[68,17,63,13],[68,19,63,15,"phase"],[68,24,63,20],[68,25,63,21,"name"],[68,29,63,25],[69,12,64,8,"duration"],[69,20,64,16],[69,22,64,8,"duration"],[69,30,64,16],[70,12,65,8,"percentage"],[70,22,65,18],[70,24,65,20,"totalLaunchTime"],[70,39,65,35],[70,42,65,38],[70,43,65,39],[70,46,65,42,"Math"],[70,50,65,46],[70,51,65,47,"round"],[70,56,65,52],[70,57,65,54,"duration"],[70,65,65,62],[70,68,65,65,"totalLaunchTime"],[70,83,65,80],[70,86,65,84],[70,89,65,87],[70,90,65,88],[70,93,65,91],[71,10,66,6],[71,11,66,7],[72,8,67,4],[72,9,67,5],[72,10,67,6],[73,8,69,4],[73,15,69,11],[74,10,70,6,"totalLaunchTime"],[74,25,70,21],[74,27,70,6,"totalLaunchTime"],[74,42,70,21],[75,10,71,6,"benchmarks"],[75,20,71,16],[75,22,71,18],[76,12,72,8,"target"],[76,18,72,14],[76,20,72,8,"target"],[76,26,72,14],[77,12,73,8,"current"],[77,19,73,15],[77,21,73,17,"totalLaunchTime"],[77,36,73,32],[78,12,74,8,"improvement"],[78,23,74,19],[78,25,74,8,"improvement"],[78,36,74,19],[79,12,75,8,"status"],[79,18,75,14],[79,20,75,8,"status"],[80,10,76,6],[80,11,76,7],[81,10,77,6,"breakdown"],[81,19,77,15],[81,21,77,6,"breakdown"],[82,8,78,4],[82,9,78,5],[83,6,79,2],[85,6,81,2],[86,0,82,0],[87,0,83,0],[88,4,81,2],[89,6,81,2,"key"],[89,9,81,2],[90,6,81,2,"value"],[90,11,81,2],[90,13,84,2],[90,22,84,16,"getTimeBetween"],[90,36,84,30,"getTimeBetween"],[90,37,84,31,"startPoint"],[90,47,84,49],[90,49,84,51,"endPoint"],[90,57,84,67],[90,59,84,84],[91,8,85,4],[91,12,85,10,"start"],[91,17,85,15],[91,20,85,18],[91,24,85,22],[91,25,85,23,"measurementPoints"],[91,42,85,40],[91,43,85,41,"get"],[91,46,85,44],[91,47,85,45,"startPoint"],[91,57,85,55],[91,58,85,56],[92,8,86,4],[92,12,86,10,"end"],[92,15,86,13],[92,18,86,16],[92,22,86,20],[92,23,86,21,"measurementPoints"],[92,40,86,38],[92,41,86,39,"get"],[92,44,86,42],[92,45,86,43,"endPoint"],[92,53,86,51],[92,54,86,52],[93,8,88,4],[93,12,88,8],[93,13,88,9,"start"],[93,18,88,14],[93,22,88,18],[93,23,88,19,"end"],[93,26,88,22],[93,28,88,24],[93,35,88,31],[93,39,88,35],[94,8,89,4],[94,15,89,11,"end"],[94,18,89,14],[94,21,89,17,"start"],[94,26,89,22],[95,6,90,2],[97,6,92,2],[98,0,93,0],[99,0,94,0],[100,4,92,2],[101,6,92,2,"key"],[101,9,92,2],[102,6,92,2,"value"],[102,11,92,2],[102,13,95,2],[102,22,95,16,"mark"],[102,26,95,20,"mark"],[102,27,95,21,"pointName"],[102,36,95,38],[102,38,95,46],[103,8,96,4],[103,12,96,10,"now"],[103,15,96,13],[103,18,96,16,"Date"],[103,22,96,20],[103,23,96,21,"now"],[103,26,96,24],[103,27,96,25],[103,28,96,26],[104,8,97,4],[104,12,97,8],[104,13,97,9,"measurementPoints"],[104,30,97,26],[104,31,97,27,"set"],[104,34,97,30],[104,35,97,31,"pointName"],[104,44,97,40],[104,46,97,42,"now"],[104,49,97,45],[104,50,97,46],[105,8,99,4],[105,12,99,8,"__DEV__"],[105,19,99,15],[105,21,99,17],[106,10,100,6],[106,14,100,12,"elapsed"],[106,21,100,19],[106,24,100,22,"now"],[106,27,100,25],[106,30,100,28],[106,34,100,32],[106,35,100,33,"appStartTime"],[106,47,100,45],[107,10,101,6,"EventLogger"],[107,21,101,17],[107,22,101,18,"debug"],[107,27,101,23],[107,28,101,24],[107,52,101,48],[107,54,101,50],[107,105,101,101],[107,106,101,102],[108,8,102,4],[109,6,103,2],[111,6,105,2],[112,0,106,0],[113,0,107,0],[114,4,105,2],[115,6,105,2,"key"],[115,9,105,2],[116,6,105,2,"value"],[116,11,105,2],[116,13,108,2],[116,22,108,16,"measure"],[116,29,108,23,"measure"],[116,30,109,4,"name"],[116,34,109,16],[116,36,110,4,"startPoint"],[116,46,110,22],[116,48,111,4,"endPoint"],[116,56,111,20],[116,58,112,19],[117,8,113,4],[117,12,113,10,"start"],[117,17,113,15],[117,20,113,18],[117,24,113,22],[117,25,113,23,"measurementPoints"],[117,42,113,40],[117,43,113,41,"get"],[117,46,113,44],[117,47,113,45,"startPoint"],[117,57,113,55],[117,58,113,56],[118,8,114,4],[118,12,114,10,"end"],[118,15,114,13],[118,18,114,16],[118,22,114,20],[118,23,114,21,"measurementPoints"],[118,40,114,38],[118,41,114,39,"get"],[118,44,114,42],[118,45,114,43,"endPoint"],[118,53,114,51],[118,54,114,52],[119,8,116,4],[119,12,116,8],[119,13,116,9,"start"],[119,18,116,14],[119,22,116,18],[119,23,116,19,"end"],[119,26,116,22],[119,28,116,24],[120,10,117,6,"EventLogger"],[120,21,117,17],[120,22,117,18,"warn"],[120,26,117,22],[120,27,117,23],[120,51,117,47],[120,53,117,49],[120,130,117,126],[120,131,117,127],[121,10,118,6],[121,17,118,13],[121,21,118,17],[122,8,119,4],[123,8,121,4],[123,12,121,10,"duration"],[123,20,121,18],[123,23,121,21,"end"],[123,26,121,24],[123,29,121,27,"start"],[123,34,121,32],[124,8,123,4],[124,12,123,8,"__DEV__"],[124,19,123,15],[124,21,123,17],[125,10,124,6,"EventLogger"],[125,21,124,17],[125,22,124,18,"debug"],[125,27,124,23],[125,28,124,24],[125,52,124,48],[125,54,124,50],[125,103,124,99],[125,104,124,100],[126,8,125,4],[127,8,127,4],[127,15,127,11,"duration"],[127,23,127,19],[128,6,128,2],[130,6,130,2],[131,0,131,0],[132,0,132,0],[133,4,130,2],[134,6,130,2,"key"],[134,9,130,2],[135,6,130,2,"value"],[135,11,130,2],[135,13,133,2],[135,22,133,16,"getAppLaunchTime"],[135,38,133,32,"getAppLaunchTime"],[135,39,133,32],[135,41,133,43],[136,8,134,4],[136,12,134,10,"now"],[136,15,134,13],[136,18,134,16,"Date"],[136,22,134,20],[136,23,134,21,"now"],[136,26,134,24],[136,27,134,25],[136,28,134,26],[137,8,135,4],[137,15,135,11,"now"],[137,18,135,14],[137,21,135,17],[137,25,135,21],[137,26,135,22,"appStartTime"],[137,38,135,34],[138,6,136,2],[140,6,138,2],[141,0,139,0],[142,0,140,0],[143,4,138,2],[144,6,138,2,"key"],[144,9,138,2],[145,6,138,2,"value"],[145,11,138,2],[145,13,141,2],[145,22,141,16,"checkLaunchTimeThreshold"],[145,46,141,40,"checkLaunchTimeThreshold"],[145,47,141,40],[145,49,145,4],[146,8,145,4],[146,12,141,41,"thresholdMs"],[146,23,141,60],[146,26,141,60,"arguments"],[146,35,141,60],[146,36,141,60,"length"],[146,42,141,60],[146,50,141,60,"arguments"],[146,59,141,60],[146,67,141,60,"undefined"],[146,76,141,60],[146,79,141,60,"arguments"],[146,88,141,60],[146,94,141,63],[146,98,141,67],[147,8,146,4],[147,12,146,10,"launchTime"],[147,22,146,20],[147,25,146,23],[147,29,146,27],[147,30,146,28,"getAppLaunchTime"],[147,46,146,44],[147,47,146,45],[147,48,146,46],[148,8,147,4],[148,12,147,10,"passed"],[148,18,147,16],[148,21,147,19,"launchTime"],[148,31,147,29],[148,35,147,33,"thresholdMs"],[148,46,147,44],[149,8,149,4],[149,12,149,8,"__DEV__"],[149,19,149,15],[149,21,149,17],[150,10,150,6],[150,14,150,12,"status"],[150,20,150,18],[150,23,150,21,"passed"],[150,29,150,27],[150,32,150,30],[150,35,150,33],[150,38,150,36],[150,41,150,39],[151,10,151,6,"EventLogger"],[151,21,151,17],[151,22,151,18,"debug"],[151,27,151,23],[151,28,151,24],[151,52,151,48],[151,54,151,50],[151,130,151,126],[151,131,151,127],[152,8,152,4],[153,8,154,4],[153,15,154,11],[154,10,155,6,"passed"],[154,16,155,12],[154,18,155,6,"passed"],[154,24,155,12],[155,10,156,6,"launchTime"],[155,20,156,16],[155,22,156,6,"launchTime"],[155,32,156,16],[156,10,157,6,"threshold"],[156,19,157,15],[156,21,157,17,"thresholdMs"],[157,8,158,4],[157,9,158,5],[158,6,159,2],[160,6,161,2],[161,0,162,0],[162,0,163,0],[163,4,161,2],[164,6,161,2,"key"],[164,9,161,2],[165,6,161,2,"value"],[165,11,161,2],[165,13,164,2],[165,22,164,16,"getSummary"],[165,32,164,26,"getSummary"],[165,33,164,26],[165,35,168,4],[166,8,168,4],[166,12,168,4,"_this2"],[166,18,168,4],[167,8,169,4],[167,12,169,10,"points"],[167,18,169,40],[167,21,169,43],[167,22,169,44],[167,23,169,45],[168,8,170,4],[168,12,170,10,"relativeTimes"],[168,25,170,47],[168,28,170,50],[168,29,170,51],[168,30,170,52],[169,8,172,4],[169,12,172,8],[169,13,172,9,"measurementPoints"],[169,30,172,26],[169,31,172,27,"forEach"],[169,38,172,34],[169,39,172,35],[169,49,172,36,"time"],[169,53,172,40],[169,55,172,42,"name"],[169,59,172,46],[169,61,172,51],[170,10,173,6,"points"],[170,16,173,12],[170,17,173,13,"name"],[170,21,173,17],[170,22,173,18],[170,25,173,21,"time"],[170,29,173,25],[171,10,174,6,"relativeTimes"],[171,23,174,19],[171,24,174,20,"name"],[171,28,174,24],[171,29,174,25],[171,32,174,28,"time"],[171,36,174,32],[171,39,174,35,"_this2"],[171,45,174,39],[171,46,174,40,"appStartTime"],[171,58,174,52],[172,8,175,4],[172,9,175,5],[172,10,175,6],[173,8,177,4],[173,15,177,11],[174,10,178,6,"appLaunchTime"],[174,23,178,19],[174,25,178,21],[174,29,178,25],[174,30,178,26,"getAppLaunchTime"],[174,46,178,42],[174,47,178,43],[174,48,178,44],[175,10,179,6,"measurementPoints"],[175,27,179,23],[175,29,179,25,"points"],[175,35,179,31],[176,10,180,6,"relativeTimes"],[176,23,180,19],[176,25,180,6,"relativeTimes"],[177,8,181,4],[177,9,181,5],[178,6,182,2],[180,6,184,2],[181,0,185,0],[182,0,186,0],[183,4,184,2],[184,6,184,2,"key"],[184,9,184,2],[185,6,184,2,"value"],[185,11,184,2],[185,13,187,2],[185,22,187,16,"reset"],[185,27,187,21,"reset"],[185,28,187,21],[185,30,187,30],[186,8,188,4],[186,12,188,8],[186,13,188,9,"appStartTime"],[186,25,188,21],[186,28,188,24,"Date"],[186,32,188,28],[186,33,188,29,"now"],[186,36,188,32],[186,37,188,33],[186,38,188,34],[187,8,189,4],[187,12,189,8],[187,13,189,9,"measurementPoints"],[187,30,189,26],[187,31,189,27,"clear"],[187,36,189,32],[187,37,189,33],[187,38,189,34],[188,8,190,4],[188,12,190,8],[188,13,190,9,"measurementPoints"],[188,30,190,26],[188,31,190,27,"set"],[188,34,190,30],[188,35,190,31],[188,46,190,42],[188,48,190,44],[188,52,190,48],[188,53,190,49,"appStartTime"],[188,65,190,61],[188,66,190,62],[189,8,192,4],[189,12,192,8,"__DEV__"],[189,19,192,15],[189,21,192,17],[190,10,193,6,"EventLogger"],[190,21,193,17],[190,22,193,18,"debug"],[190,27,193,23],[190,28,193,24],[190,52,193,48],[190,54,193,50],[190,89,193,85],[190,90,193,86],[191,8,194,4],[192,6,195,2],[194,6,197,2],[195,0,198,0],[196,0,199,0],[197,4,197,2],[198,6,197,2,"key"],[198,9,197,2],[199,6,197,2,"value"],[199,11,197,2],[199,13,200,2],[199,22,200,16,"exportMeasurements"],[199,40,200,34,"exportMeasurements"],[199,41,200,34],[199,43,200,45],[200,8,201,4],[200,12,201,10,"summary"],[200,19,201,17],[200,22,201,20],[200,26,201,24],[200,27,201,25,"getSummary"],[200,37,201,35],[200,38,201,36],[200,39,201,37],[201,8,202,4],[201,15,202,11,"JSON"],[201,19,202,15],[201,20,202,16,"stringify"],[201,29,202,25],[201,30,202,26,"summary"],[201,37,202,33],[201,39,202,35],[201,43,202,39],[201,45,202,41],[201,46,202,42],[201,47,202,43],[202,6,203,2],[204,6,205,2],[205,0,206,0],[206,0,207,0],[207,4,205,2],[208,6,205,2,"key"],[208,9,205,2],[209,6,205,2,"value"],[209,11,205,2],[209,13,208,2],[209,22,208,16,"trackComponentMount"],[209,41,208,35,"trackComponentMount"],[209,42,208,36,"componentName"],[209,55,208,57],[209,57,208,71],[210,8,208,71],[210,12,208,71,"_this3"],[210,18,208,71],[211,8,209,4],[211,12,209,10,"startTime"],[211,21,209,19],[211,24,209,22,"Date"],[211,28,209,26],[211,29,209,27,"now"],[211,32,209,30],[211,33,209,31],[211,34,209,32],[212,8,210,4],[212,12,210,8],[212,13,210,9,"mark"],[212,17,210,13],[212,18,210,14],[212,21,210,17,"componentName"],[212,34,210,30],[212,48,210,44],[212,49,210,45],[213,8,212,4],[213,15,212,11],[213,27,212,17],[214,10,213,6],[214,14,213,12,"endTime"],[214,21,213,19],[214,24,213,22,"Date"],[214,28,213,26],[214,29,213,27,"now"],[214,32,213,30],[214,33,213,31],[214,34,213,32],[215,10,214,6,"_this3"],[215,16,214,10],[215,17,214,11,"mark"],[215,21,214,15],[215,22,214,16],[215,25,214,19,"componentName"],[215,38,214,32],[215,50,214,44],[215,51,214,45],[216,10,215,6],[216,14,215,12,"mountTime"],[216,23,215,21],[216,26,215,24,"endTime"],[216,33,215,31],[216,36,215,34,"startTime"],[216,45,215,43],[217,10,217,6],[217,14,217,10,"__DEV__"],[217,21,217,17],[217,23,217,19],[218,12,218,8,"EventLogger"],[218,23,218,19],[218,24,218,20,"debug"],[218,29,218,25],[218,30,218,26],[218,54,218,50],[218,56,218,52],[218,113,218,109],[218,114,218,110],[219,10,219,6],[220,8,220,4],[220,9,220,5],[221,6,221,2],[223,6,223,2],[224,0,224,0],[225,0,225,0],[226,4,223,2],[227,6,223,2,"key"],[227,9,223,2],[228,6,223,2,"value"],[228,11,223,2],[229,8,223,2],[229,12,223,2,"_trackAsyncOperation"],[229,32,223,2],[229,39,223,2,"_asyncToGenerator2"],[229,57,223,2],[229,58,223,2,"default"],[229,65,223,2],[229,67,226,2],[229,78,227,4,"operationName"],[229,91,227,25],[229,93,228,4,"operation"],[229,102,228,31],[229,104,229,16],[230,10,230,4],[230,14,230,10,"startTime"],[230,23,230,19],[230,26,230,22,"Date"],[230,30,230,26],[230,31,230,27,"now"],[230,34,230,30],[230,35,230,31],[230,36,230,32],[231,10,231,4],[231,14,231,8],[231,15,231,9,"mark"],[231,19,231,13],[231,20,231,14],[231,23,231,17,"operationName"],[231,36,231,30],[231,44,231,38],[231,45,231,39],[232,10,233,4],[232,14,233,8],[233,12,234,6],[233,16,234,12,"result"],[233,22,234,18],[233,31,234,27,"operation"],[233,40,234,36],[233,41,234,37],[233,42,234,38],[234,12,235,6],[234,16,235,12,"endTime"],[234,23,235,19],[234,26,235,22,"Date"],[234,30,235,26],[234,31,235,27,"now"],[234,34,235,30],[234,35,235,31],[234,36,235,32],[235,12,236,6],[235,16,236,10],[235,17,236,11,"mark"],[235,21,236,15],[235,22,236,16],[235,25,236,19,"operationName"],[235,38,236,32],[235,44,236,38],[235,45,236,39],[236,12,237,6],[236,16,237,12,"duration"],[236,24,237,20],[236,27,237,23,"endTime"],[236,34,237,30],[236,37,237,33,"startTime"],[236,46,237,42],[237,12,239,6],[237,16,239,10,"__DEV__"],[237,23,239,17],[237,25,239,19],[238,14,240,8,"EventLogger"],[238,25,240,19],[238,26,240,20,"debug"],[238,31,240,25],[238,32,240,26],[238,56,240,50],[238,58,240,52],[238,122,240,116],[238,123,240,117],[239,12,241,6],[240,12,243,6],[240,19,243,13,"result"],[240,25,243,19],[241,10,244,4],[241,11,244,5],[241,12,244,6],[241,19,244,13,"error"],[241,24,244,18],[241,26,244,20],[242,12,245,6],[242,16,245,12,"endTime"],[242,24,245,19],[242,27,245,22,"Date"],[242,31,245,26],[242,32,245,27,"now"],[242,35,245,30],[242,36,245,31],[242,37,245,32],[243,12,246,6],[243,16,246,10],[243,17,246,11,"mark"],[243,21,246,15],[243,22,246,16],[243,25,246,19,"operationName"],[243,38,246,32],[243,46,246,40],[243,47,246,41],[244,12,247,6],[244,16,247,12,"duration"],[244,25,247,20],[244,28,247,23,"endTime"],[244,36,247,30],[244,39,247,33,"startTime"],[244,48,247,42],[245,12,249,6],[245,16,249,10,"__DEV__"],[245,23,249,17],[245,25,249,19],[246,14,250,8,"EventLogger"],[246,25,250,19],[246,26,250,20,"debug"],[246,31,250,25],[246,32,250,26],[246,56,250,50],[246,58,250,52],[246,122,250,116],[246,123,250,117],[247,12,251,6],[248,12,253,6],[248,18,253,12,"error"],[248,23,253,17],[249,10,254,4],[250,8,255,2],[250,9,255,3],[251,8,255,3],[251,17,226,22,"trackAsyncOperation"],[251,36,226,41,"trackAsyncOperation"],[251,37,226,41,"_x"],[251,39,226,41],[251,41,226,41,"_x2"],[251,44,226,41],[252,10,226,41],[252,17,226,41,"_trackAsyncOperation"],[252,37,226,41],[252,38,226,41,"apply"],[252,43,226,41],[252,50,226,41,"arguments"],[252,59,226,41],[253,8,226,41],[254,8,226,41],[254,15,226,22,"trackAsyncOperation"],[254,34,226,41],[255,6,226,41],[256,6,257,2],[257,0,258,0],[258,0,259,0],[259,6,257,2],[260,4,257,2],[261,6,257,2,"key"],[261,9,257,2],[262,6,257,2,"value"],[262,11,257,2],[262,13,260,2],[262,22,260,16,"performanceTimeout"],[262,40,260,34,"performanceTimeout"],[262,41,261,4,"callback"],[262,49,261,24],[262,51,262,4,"delay"],[262,56,262,17],[262,58,263,4,"name"],[262,62,263,17],[262,64,264,20],[263,8,264,20],[263,12,264,20,"_this4"],[263,18,264,20],[264,8,265,4],[264,12,265,10,"startTime"],[264,21,265,19],[264,24,265,22,"Date"],[264,28,265,26],[264,29,265,27,"now"],[264,32,265,30],[264,33,265,31],[264,34,265,32],[265,8,266,4],[265,12,266,8,"name"],[265,16,266,12],[265,18,266,14],[266,10,267,6],[266,14,267,10],[266,15,267,11,"mark"],[266,19,267,15],[266,20,267,16],[266,31,267,27,"name"],[266,35,267,31],[266,47,267,43],[266,48,267,44],[267,8,268,4],[268,8,270,4],[268,15,270,11,"setTimeout"],[268,25,270,21],[268,26,270,22],[268,38,270,28],[269,10,271,6],[269,14,271,12,"actualDelay"],[269,25,271,23],[269,28,271,26,"Date"],[269,32,271,30],[269,33,271,31,"now"],[269,36,271,34],[269,37,271,35],[269,38,271,36],[269,41,271,39,"startTime"],[269,50,271,48],[270,10,272,6],[270,14,272,10,"name"],[270,18,272,14],[270,20,272,16],[271,12,273,8,"_this4"],[271,18,273,12],[271,19,273,13,"mark"],[271,23,273,17],[271,24,273,18],[271,35,273,29,"name"],[271,39,273,33],[271,50,273,44],[271,51,273,45],[272,12,274,8],[272,16,274,12,"__DEV__"],[272,23,274,19],[272,27,274,23,"Math"],[272,31,274,27],[272,32,274,28,"abs"],[272,35,274,31],[272,36,274,32,"actualDelay"],[272,47,274,43],[272,50,274,46,"delay"],[272,55,274,51],[272,56,274,52],[272,59,274,55],[272,61,274,57],[272,63,274,59],[273,14,275,10,"EventLogger"],[273,25,275,21],[273,26,275,22,"debug"],[273,31,275,27],[273,32,275,28],[273,56,275,52],[273,58,275,54],[273,125,275,121],[273,126,275,122],[274,12,276,8],[275,10,277,6],[276,10,278,6,"callback"],[276,18,278,14],[276,19,278,15],[276,20,278,16],[277,8,279,4],[277,9,279,5],[277,11,279,7,"delay"],[277,16,279,12],[277,17,279,13],[278,6,280,2],[280,6,282,2],[281,0,283,0],[282,0,284,0],[283,4,282,2],[284,6,282,2,"key"],[284,9,282,2],[285,6,282,2,"value"],[285,11,282,2],[285,13,285,2],[285,22,285,16,"measureRender"],[285,35,285,29,"measureRender"],[285,36,285,30,"componentName"],[285,49,285,51],[285,51,288,4],[286,8,288,4],[286,12,288,4,"_this5"],[286,18,288,4],[287,8,289,4],[287,12,289,8,"startTime"],[287,21,289,25],[288,8,291,4],[288,15,291,11],[289,10,292,6,"start"],[289,15,292,11],[289,17,292,13],[289,26,292,6,"start"],[289,31,292,11,"start"],[289,32,292,11],[289,34,292,19],[290,12,293,8,"startTime"],[290,21,293,17],[290,24,293,20,"Date"],[290,28,293,24],[290,29,293,25,"now"],[290,32,293,28],[290,33,293,29],[290,34,293,30],[291,12,294,8,"_this5"],[291,18,294,12],[291,19,294,13,"mark"],[291,23,294,17],[291,24,294,18],[291,34,294,28,"componentName"],[291,47,294,41],[291,55,294,49],[291,56,294,50],[292,10,295,6],[292,11,295,7],[293,10,296,6,"end"],[293,13,296,9],[293,15,296,11],[293,24,296,6,"end"],[293,27,296,9,"end"],[293,28,296,9],[293,30,296,17],[294,12,297,8],[294,16,297,14,"endTime"],[294,23,297,21],[294,26,297,24,"Date"],[294,30,297,28],[294,31,297,29,"now"],[294,34,297,32],[294,35,297,33],[294,36,297,34],[295,12,298,8,"_this5"],[295,18,298,12],[295,19,298,13,"mark"],[295,23,298,17],[295,24,298,18],[295,34,298,28,"componentName"],[295,47,298,41],[295,53,298,47],[295,54,298,48],[296,12,299,8],[296,16,299,14,"renderTime"],[296,26,299,24],[296,29,299,27,"endTime"],[296,36,299,34],[296,39,299,37,"startTime"],[296,48,299,46],[297,12,301,8],[297,16,301,12,"__DEV__"],[297,23,301,19],[297,25,301,21],[298,14,302,10,"EventLogger"],[298,25,302,21],[298,26,302,22,"debug"],[298,31,302,27],[298,32,302,28],[298,56,302,52],[298,58,302,54],[298,103,302,99],[298,104,302,100],[299,12,303,8],[300,12,305,8],[300,19,305,15,"renderTime"],[300,29,305,25],[301,10,306,6],[302,8,307,4],[302,9,307,5],[303,6,308,2],[304,4,308,3],[305,2,308,3],[306,2,311,0],[307,0,312,0],[308,0,313,0],[309,2,7,13,"PerformanceMeasurement"],[309,24,7,35],[309,25,8,17,"appStartTime"],[309,37,8,29],[309,40,8,40,"Date"],[309,44,8,44],[309,45,8,45,"now"],[309,48,8,48],[309,49,8,49],[309,50,8,50],[310,2,7,13,"PerformanceMeasurement"],[310,24,7,35],[310,25,9,17,"measurementPoints"],[310,42,9,34],[310,45,9,58],[310,49,9,62,"Map"],[310,52,9,65],[310,53,9,66],[310,54,9,67],[311,2,7,13,"PerformanceMeasurement"],[311,24,7,35],[311,25,10,17,"isInitialized"],[311,38,10,30],[311,41,10,33],[311,46,10,38],[312,2,314,7],[312,6,314,13,"usePerformanceTracking"],[312,28,314,35],[312,31,314,35,"exports"],[312,38,314,35],[312,39,314,35,"usePerformanceTracking"],[312,61,314,35],[312,64,314,38],[312,73,314,13,"usePerformanceTracking"],[312,95,314,35,"usePerformanceTracking"],[312,96,314,39,"componentName"],[312,109,314,60],[312,111,314,65],[313,4,315,2],[313,8,315,8,"cleanup"],[313,15,315,15],[313,18,315,18,"PerformanceMeasurement"],[313,40,315,40],[313,41,315,41,"trackComponentMount"],[313,60,315,60],[313,61,315,61,"componentName"],[313,74,315,74],[313,75,315,75],[314,4,317,2],[314,11,317,9],[315,6,318,4,"mark"],[315,10,318,8],[315,12,318,10],[315,21,318,4,"mark"],[315,25,318,8,"mark"],[315,26,318,11,"pointName"],[315,35,318,28],[316,8,318,28],[316,15,318,33,"PerformanceMeasurement"],[316,37,318,55],[316,38,318,56,"mark"],[316,42,318,60],[316,43,318,61],[316,46,318,64,"componentName"],[316,59,318,77],[316,63,318,81,"pointName"],[316,72,318,90],[316,74,318,92],[316,75,318,93],[317,6,318,93],[318,6,319,4,"measure"],[318,13,319,11],[318,15,319,13],[318,24,319,4,"measure"],[318,31,319,11,"measure"],[318,32,319,14,"name"],[318,36,319,26],[318,38,319,28,"start"],[318,43,319,41],[318,45,319,43,"end"],[318,48,319,54],[319,8,319,54],[319,15,320,6,"PerformanceMeasurement"],[319,37,320,28],[319,38,320,29,"measure"],[319,45,320,36],[319,46,320,37,"name"],[319,50,320,41],[319,52,320,43],[319,55,320,46,"componentName"],[319,68,320,59],[319,72,320,63,"start"],[319,77,320,68],[319,79,320,70],[319,81,320,72],[319,84,320,75,"componentName"],[319,97,320,88],[319,101,320,92,"end"],[319,104,320,95],[319,106,320,97],[319,107,320,98],[320,6,320,98],[321,6,321,4,"cleanup"],[321,13,321,11],[321,15,321,4,"cleanup"],[322,4,322,2],[322,5,322,3],[323,2,323,0],[323,3,323,1],[325,2,325,0],[326,0,326,0],[327,0,327,0],[328,2,328,7],[328,11,328,16,"measurePerformance"],[328,29,328,34,"measurePerformance"],[328,30,328,35,"name"],[328,34,328,48],[328,36,328,50],[329,4,329,2],[329,11,329,9],[329,21,329,19,"target"],[329,27,329,30],[329,29,329,32,"propertyKey"],[329,40,329,51],[329,42,329,53,"descriptor"],[329,52,329,83],[329,54,329,85],[330,6,330,4],[330,10,330,10,"originalMethod"],[330,24,330,24],[330,27,330,27,"descriptor"],[330,37,330,37],[330,38,330,38,"value"],[330,43,330,43],[331,6,331,4],[331,10,331,10,"methodName"],[331,20,331,20],[331,23,331,23,"name"],[331,27,331,27],[331,31,331,31],[331,34,331,34,"target"],[331,40,331,40],[331,41,331,41,"constructor"],[331,52,331,52],[331,53,331,53,"name"],[331,57,331,57],[331,61,331,61,"propertyKey"],[331,72,331,72],[331,74,331,74],[332,6,333,4,"descriptor"],[332,16,333,14],[332,17,333,15,"value"],[332,22,333,20],[332,42,333,20,"_asyncToGenerator2"],[332,60,333,20],[332,61,333,20,"default"],[332,68,333,20],[332,70,333,23],[332,83,333,55],[333,8,333,55],[333,12,333,55,"_this6"],[333,18,333,55],[334,8,333,55],[334,17,333,55,"_len"],[334,21,333,55],[334,24,333,55,"arguments"],[334,33,333,55],[334,34,333,55,"length"],[334,40,333,55],[334,42,333,42,"args"],[334,46,333,46],[334,53,333,46,"Array"],[334,58,333,46],[334,59,333,46,"_len"],[334,63,333,46],[334,66,333,46,"_key"],[334,70,333,46],[334,76,333,46,"_key"],[334,80,333,46],[334,83,333,46,"_len"],[334,87,333,46],[334,89,333,46,"_key"],[334,93,333,46],[335,10,333,42,"args"],[335,14,333,46],[335,15,333,46,"_key"],[335,19,333,46],[335,23,333,46,"arguments"],[335,32,333,46],[335,33,333,46,"_key"],[335,37,333,46],[336,8,333,46],[337,8,334,6],[337,15,334,13,"PerformanceMeasurement"],[337,37,334,35],[337,38,334,36,"trackAsyncOperation"],[337,57,334,55],[337,58,335,8,"methodName"],[337,68,335,18],[337,70,336,8],[338,10,336,8],[338,17,336,14,"originalMethod"],[338,31,336,28],[338,32,336,29,"apply"],[338,37,336,34],[338,38,336,35,"_this6"],[338,44,336,39],[338,46,336,41,"args"],[338,50,336,45],[338,51,336,46],[339,8,336,46],[339,9,337,6],[339,10,337,7],[340,6,338,4],[340,7,338,5],[341,6,340,4],[341,13,340,11,"descriptor"],[341,23,340,21],[342,4,341,2],[342,5,341,3],[343,2,342,0],[345,2,344,0],[346,2,345,0,"PerformanceMeasurement"],[346,24,345,22],[346,25,345,23,"initialize"],[346,35,345,33],[346,36,345,34],[346,37,345,35],[347,0,345,36],[347,3]],"functionMap":{"names":["<global>","PerformanceMeasurement","initialize","getDetailedReport","phases.map$argument_0","getTimeBetween","mark","measure","getAppLaunchTime","checkLaunchTimeThreshold","getSummary","measurementPoints.forEach$argument_0","reset","exportMeasurements","trackComponentMount","<anonymous>","trackAsyncOperation","performanceTimeout","setTimeout$argument_0","measureRender","start","end","usePerformanceTracking","measurePerformance","descriptor.value","trackAsyncOperation$argument_1"],"mappings":"AAA;OCM;ECQ;GDW;EEK;iCC6B;KDO;GFY;EIK;GJM;EKK;GLQ;EMK;GNoB;EOK;GPG;EQK;GRkB;ESK;mCCQ;KDG;GTO;EWK;GXQ;EYK;GZG;EaK;WCI;KDQ;GbC;EeK;Gf6B;EgBK;sBCU;KDS;GhBC;EkBK;aCO;ODG;WEC;OFU;GlBE;CDC;sCsBK;UhBI,mFgB;afC;kGeC;CtBG;OuBK;SRC;uBSI;QCG,sCD;KTE;GQG;CvBC"}},"type":"js/module"}]}