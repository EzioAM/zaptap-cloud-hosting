{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"../supabase/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"q3G/dBcB/lyqe2ZqsudXc9dkd4E=","exportNames":["*"]}},{"name":"../../data/sampleAutomations","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":65,"index":112}}],"key":"qovUovanueZCS1yq4TL09RiTMLU=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":113},"end":{"line":3,"column":54,"index":167}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.OnboardingService = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _client = require(_dependencyMap[4], \"../supabase/client\");\n  var _sampleAutomations = require(_dependencyMap[5], \"../../data/sampleAutomations\");\n  var _EventLogger = require(_dependencyMap[6], \"../../utils/EventLogger\");\n  var OnboardingService = exports.OnboardingService = /*#__PURE__*/function () {\n    function OnboardingService() {\n      (0, _classCallCheck2.default)(this, OnboardingService);\n    }\n    return (0, _createClass2.default)(OnboardingService, null, [{\n      key: \"createSampleAutomations\",\n      value: (\n      /**\n       * Create sample automations for a new user\n       */\n      function () {\n        var _createSampleAutomations = (0, _asyncToGenerator2.default)(function* (userId) {\n          try {\n            // Prepare sample automations with user ID\n            var automationsToInsert = _sampleAutomations.sampleAutomations.map(function (automation) {\n              return {\n                title: automation.title,\n                description: automation.description,\n                category: automation.category,\n                is_public: automation.is_public,\n                is_template: automation.is_template,\n                icon: automation.icon,\n                color: automation.color,\n                tags: automation.tags,\n                user_id: userId,\n                steps: automation.steps,\n                execution_count: 0,\n                rating: 5,\n                likes_count: Math.floor(Math.random() * 50) + 10,\n                // Random likes between 10-60\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n              };\n            });\n\n            // Insert automations\n            var _yield$supabase$from$ = yield _client.supabase.from('automations').insert(automationsToInsert).select(),\n              insertedAutomations = _yield$supabase$from$.data,\n              automationError = _yield$supabase$from$.error;\n            if (automationError) {\n              _EventLogger.EventLogger.error('Onboarding', 'Error creating sample automations:', automationError);\n              return {\n                success: false,\n                error: automationError\n              };\n            }\n\n            // Note: Steps are now stored as JSON in the automations table\n            // No need to insert them separately\n\n            return {\n              success: true,\n              count: (insertedAutomations == null ? void 0 : insertedAutomations.length) || 0,\n              automations: insertedAutomations\n            };\n          } catch (error) {\n            _EventLogger.EventLogger.error('Onboarding', 'Failed to create sample automations:', error);\n            return {\n              success: false,\n              error: error\n            };\n          }\n        });\n        function createSampleAutomations(_x) {\n          return _createSampleAutomations.apply(this, arguments);\n        }\n        return createSampleAutomations;\n      }()\n      /**\n       * Check if user already has sample automations\n       */\n      )\n    }, {\n      key: \"hasSampleAutomations\",\n      value: (function () {\n        var _hasSampleAutomations = (0, _asyncToGenerator2.default)(function* (userId) {\n          try {\n            var _yield$supabase$from$2 = yield _client.supabase.from('automations').select('id').eq('user_id', userId).eq('is_template', true).limit(1),\n              data = _yield$supabase$from$2.data,\n              error = _yield$supabase$from$2.error;\n            if (error) {\n              _EventLogger.EventLogger.error('Onboarding', 'Error checking sample automations:', error);\n              return false;\n            }\n            return ((data == null ? void 0 : data.length) || 0) > 0;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Onboarding', 'Failed to check sample automations:', error);\n            return false;\n          }\n        });\n        function hasSampleAutomations(_x2) {\n          return _hasSampleAutomations.apply(this, arguments);\n        }\n        return hasSampleAutomations;\n      }()\n      /**\n       * Initialize new user with sample data\n       */\n      )\n    }, {\n      key: \"initializeNewUser\",\n      value: (function () {\n        var _initializeNewUser = (0, _asyncToGenerator2.default)(function* (userId) {\n          try {\n            // Check if user already has sample automations\n            var hasSamples = yield this.hasSampleAutomations(userId);\n            if (!hasSamples) {\n              // Create sample automations\n              var result = yield this.createSampleAutomations(userId);\n              if (result.success) {\n                _EventLogger.EventLogger.debug('Onboarding', 'Created ${result.count} sample automations for user ${userId}');\n              }\n              return result;\n            }\n            return {\n              success: true,\n              message: 'User already has sample automations'\n            };\n          } catch (error) {\n            _EventLogger.EventLogger.error('Onboarding', 'Failed to initialize new user:', error);\n            return {\n              success: false,\n              error: error\n            };\n          }\n        });\n        function initializeNewUser(_x3) {\n          return _initializeNewUser.apply(this, arguments);\n        }\n        return initializeNewUser;\n      }())\n    }]);\n  }();\n});","lineCount":146,"map":[[10,2,1,0],[10,6,1,0,"_client"],[10,13,1,0],[10,16,1,0,"require"],[10,23,1,0],[10,24,1,0,"_dependencyMap"],[10,38,1,0],[11,2,2,0],[11,6,2,0,"_sampleAutomations"],[11,24,2,0],[11,27,2,0,"require"],[11,34,2,0],[11,35,2,0,"_dependencyMap"],[11,49,2,0],[12,2,3,0],[12,6,3,0,"_EventLogger"],[12,18,3,0],[12,21,3,0,"require"],[12,28,3,0],[12,29,3,0,"_dependencyMap"],[12,43,3,0],[13,2,3,54],[13,6,5,13,"OnboardingService"],[13,23,5,30],[13,26,5,30,"exports"],[13,33,5,30],[13,34,5,30,"OnboardingService"],[13,51,5,30],[14,4,5,30],[14,13,5,30,"OnboardingService"],[14,31,5,30],[15,6,5,30],[15,10,5,30,"_classCallCheck2"],[15,26,5,30],[15,27,5,30,"default"],[15,34,5,30],[15,42,5,30,"OnboardingService"],[15,59,5,30],[16,4,5,30],[17,4,5,30],[17,15,5,30,"_createClass2"],[17,28,5,30],[17,29,5,30,"default"],[17,36,5,30],[17,38,5,30,"OnboardingService"],[17,55,5,30],[18,6,5,30,"key"],[18,9,5,30],[19,6,5,30,"value"],[19,11,5,30],[20,6,6,2],[21,0,7,0],[22,0,8,0],[23,6,6,2],[24,8,6,2],[24,12,6,2,"_createSampleAutomations"],[24,36,6,2],[24,43,6,2,"_asyncToGenerator2"],[24,61,6,2],[24,62,6,2,"default"],[24,69,6,2],[24,71,9,2],[24,82,9,39,"userId"],[24,88,9,53],[24,90,9,55],[25,10,10,4],[25,14,10,8],[26,12,11,6],[27,12,12,6],[27,16,12,12,"automationsToInsert"],[27,35,12,31],[27,38,12,34,"sampleAutomations"],[27,74,12,51],[27,75,12,52,"map"],[27,78,12,55],[27,79,12,56],[27,89,12,56,"automation"],[27,99,12,66],[28,14,12,66],[28,21,12,71],[29,16,13,8,"title"],[29,21,13,13],[29,23,13,15,"automation"],[29,33,13,25],[29,34,13,26,"title"],[29,39,13,31],[30,16,14,8,"description"],[30,27,14,19],[30,29,14,21,"automation"],[30,39,14,31],[30,40,14,32,"description"],[30,51,14,43],[31,16,15,8,"category"],[31,24,15,16],[31,26,15,18,"automation"],[31,36,15,28],[31,37,15,29,"category"],[31,45,15,37],[32,16,16,8,"is_public"],[32,25,16,17],[32,27,16,19,"automation"],[32,37,16,29],[32,38,16,30,"is_public"],[32,47,16,39],[33,16,17,8,"is_template"],[33,27,17,19],[33,29,17,21,"automation"],[33,39,17,31],[33,40,17,32,"is_template"],[33,51,17,43],[34,16,18,8,"icon"],[34,20,18,12],[34,22,18,14,"automation"],[34,32,18,24],[34,33,18,25,"icon"],[34,37,18,29],[35,16,19,8,"color"],[35,21,19,13],[35,23,19,15,"automation"],[35,33,19,25],[35,34,19,26,"color"],[35,39,19,31],[36,16,20,8,"tags"],[36,20,20,12],[36,22,20,14,"automation"],[36,32,20,24],[36,33,20,25,"tags"],[36,37,20,29],[37,16,21,8,"user_id"],[37,23,21,15],[37,25,21,17,"userId"],[37,31,21,23],[38,16,22,8,"steps"],[38,21,22,13],[38,23,22,15,"automation"],[38,33,22,25],[38,34,22,26,"steps"],[38,39,22,31],[39,16,23,8,"execution_count"],[39,31,23,23],[39,33,23,25],[39,34,23,26],[40,16,24,8,"rating"],[40,22,24,14],[40,24,24,16],[40,25,24,17],[41,16,25,8,"likes_count"],[41,27,25,19],[41,29,25,21,"Math"],[41,33,25,25],[41,34,25,26,"floor"],[41,39,25,31],[41,40,25,32,"Math"],[41,44,25,36],[41,45,25,37,"random"],[41,51,25,43],[41,52,25,44],[41,53,25,45],[41,56,25,48],[41,58,25,50],[41,59,25,51],[41,62,25,54],[41,64,25,56],[42,16,25,58],[43,16,26,8,"created_at"],[43,26,26,18],[43,28,26,20],[43,32,26,24,"Date"],[43,36,26,28],[43,37,26,29],[43,38,26,30],[43,39,26,31,"toISOString"],[43,50,26,42],[43,51,26,43],[43,52,26,44],[44,16,27,8,"updated_at"],[44,26,27,18],[44,28,27,20],[44,32,27,24,"Date"],[44,36,27,28],[44,37,27,29],[44,38,27,30],[44,39,27,31,"toISOString"],[44,50,27,42],[44,51,27,43],[45,14,28,6],[45,15,28,7],[46,12,28,7],[46,13,28,8],[46,14,28,9],[48,12,30,6],[49,12,31,6],[49,16,31,6,"_yield$supabase$from$"],[49,37,31,6],[49,46,31,74,"supabase"],[49,62,31,82],[49,63,32,9,"from"],[49,67,32,13],[49,68,32,14],[49,81,32,27],[49,82,32,28],[49,83,33,9,"insert"],[49,89,33,15],[49,90,33,16,"automationsToInsert"],[49,109,33,35],[49,110,33,36],[49,111,34,9,"select"],[49,117,34,15],[49,118,34,16],[49,119,34,17],[50,14,31,20,"insertedAutomations"],[50,33,31,39],[50,36,31,39,"_yield$supabase$from$"],[50,57,31,39],[50,58,31,14,"data"],[50,62,31,18],[51,14,31,48,"automationError"],[51,29,31,63],[51,32,31,63,"_yield$supabase$from$"],[51,53,31,63],[51,54,31,41,"error"],[51,59,31,46],[52,12,36,6],[52,16,36,10,"automationError"],[52,31,36,25],[52,33,36,27],[53,14,37,8,"EventLogger"],[53,38,37,19],[53,39,37,20,"error"],[53,44,37,25],[53,45,37,26],[53,57,37,38],[53,59,37,40],[53,95,37,76],[53,97,37,78,"automationError"],[53,112,37,102],[53,113,37,103],[54,14,38,8],[54,21,38,15],[55,16,38,17,"success"],[55,23,38,24],[55,25,38,26],[55,30,38,31],[56,16,38,33,"error"],[56,21,38,38],[56,23,38,40,"automationError"],[57,14,38,56],[57,15,38,57],[58,12,39,6],[60,12,41,6],[61,12,42,6],[63,12,44,6],[63,19,44,13],[64,14,45,8,"success"],[64,21,45,15],[64,23,45,17],[64,27,45,21],[65,14,46,8,"count"],[65,19,46,13],[65,21,46,15],[65,22,46,15,"insertedAutomations"],[65,41,46,34],[65,61,46,15,"insertedAutomations"],[65,80,46,34],[65,81,46,36,"length"],[65,87,46,42],[65,92,46,46],[65,93,46,47],[66,14,47,8,"automations"],[66,25,47,19],[66,27,47,21,"insertedAutomations"],[67,12,48,6],[67,13,48,7],[68,10,49,4],[68,11,49,5],[68,12,49,6],[68,19,49,13,"error"],[68,24,49,18],[68,26,49,20],[69,12,50,6,"EventLogger"],[69,36,50,17],[69,37,50,18,"error"],[69,42,50,23],[69,43,50,24],[69,55,50,36],[69,57,50,38],[69,95,50,76],[69,97,50,78,"error"],[69,102,50,92],[69,103,50,93],[70,12,51,6],[70,19,51,13],[71,14,51,15,"success"],[71,21,51,22],[71,23,51,24],[71,28,51,29],[72,14,51,31,"error"],[72,19,51,36],[72,21,51,31,"error"],[73,12,51,37],[73,13,51,38],[74,10,52,4],[75,8,53,2],[75,9,53,3],[76,8,53,3],[76,17,9,15,"createSampleAutomations"],[76,40,9,38,"createSampleAutomations"],[76,41,9,38,"_x"],[76,43,9,38],[77,10,9,38],[77,17,9,38,"_createSampleAutomations"],[77,41,9,38],[77,42,9,38,"apply"],[77,47,9,38],[77,54,9,38,"arguments"],[77,63,9,38],[78,8,9,38],[79,8,9,38],[79,15,9,15,"createSampleAutomations"],[79,38,9,38],[80,6,9,38],[81,6,55,2],[82,0,56,0],[83,0,57,0],[84,6,55,2],[85,4,55,2],[86,6,55,2,"key"],[86,9,55,2],[87,6,55,2,"value"],[87,11,55,2],[88,8,55,2],[88,12,55,2,"_hasSampleAutomations"],[88,33,55,2],[88,40,55,2,"_asyncToGenerator2"],[88,58,55,2],[88,59,55,2,"default"],[88,66,55,2],[88,68,58,2],[88,79,58,36,"userId"],[88,85,58,50],[88,87,58,70],[89,10,59,4],[89,14,59,8],[90,12,60,6],[90,16,60,6,"_yield$supabase$from$2"],[90,38,60,6],[90,47,60,36,"supabase"],[90,63,60,44],[90,64,61,9,"from"],[90,68,61,13],[90,69,61,14],[90,82,61,27],[90,83,61,28],[90,84,62,9,"select"],[90,90,62,15],[90,91,62,16],[90,95,62,20],[90,96,62,21],[90,97,63,9,"eq"],[90,99,63,11],[90,100,63,12],[90,109,63,21],[90,111,63,23,"userId"],[90,117,63,29],[90,118,63,30],[90,119,64,9,"eq"],[90,121,64,11],[90,122,64,12],[90,135,64,25],[90,137,64,27],[90,141,64,31],[90,142,64,32],[90,143,65,9,"limit"],[90,148,65,14],[90,149,65,15],[90,150,65,16],[90,151,65,17],[91,14,60,14,"data"],[91,18,60,18],[91,21,60,18,"_yield$supabase$from$2"],[91,43,60,18],[91,44,60,14,"data"],[91,48,60,18],[92,14,60,20,"error"],[92,19,60,25],[92,22,60,25,"_yield$supabase$from$2"],[92,44,60,25],[92,45,60,20,"error"],[92,50,60,25],[93,12,67,6],[93,16,67,10,"error"],[93,21,67,15],[93,23,67,17],[94,14,68,8,"EventLogger"],[94,38,68,19],[94,39,68,20,"error"],[94,44,68,25],[94,45,68,26],[94,57,68,38],[94,59,68,40],[94,95,68,76],[94,97,68,78,"error"],[94,102,68,92],[94,103,68,93],[95,14,69,8],[95,21,69,15],[95,26,69,20],[96,12,70,6],[97,12,72,6],[97,19,72,13],[97,20,72,14],[97,21,72,14,"data"],[97,25,72,18],[97,45,72,14,"data"],[97,49,72,18],[97,50,72,20,"length"],[97,56,72,26],[97,61,72,30],[97,62,72,31],[97,66,72,35],[97,67,72,36],[98,10,73,4],[98,11,73,5],[98,12,73,6],[98,19,73,13,"error"],[98,24,73,18],[98,26,73,20],[99,12,74,6,"EventLogger"],[99,36,74,17],[99,37,74,18,"error"],[99,42,74,23],[99,43,74,24],[99,55,74,36],[99,57,74,38],[99,94,74,75],[99,96,74,77,"error"],[99,101,74,91],[99,102,74,92],[100,12,75,6],[100,19,75,13],[100,24,75,18],[101,10,76,4],[102,8,77,2],[102,9,77,3],[103,8,77,3],[103,17,58,15,"hasSampleAutomations"],[103,37,58,35,"hasSampleAutomations"],[103,38,58,35,"_x2"],[103,41,58,35],[104,10,58,35],[104,17,58,35,"_hasSampleAutomations"],[104,38,58,35],[104,39,58,35,"apply"],[104,44,58,35],[104,51,58,35,"arguments"],[104,60,58,35],[105,8,58,35],[106,8,58,35],[106,15,58,15,"hasSampleAutomations"],[106,35,58,35],[107,6,58,35],[108,6,79,2],[109,0,80,0],[110,0,81,0],[111,6,79,2],[112,4,79,2],[113,6,79,2,"key"],[113,9,79,2],[114,6,79,2,"value"],[114,11,79,2],[115,8,79,2],[115,12,79,2,"_initializeNewUser"],[115,30,79,2],[115,37,79,2,"_asyncToGenerator2"],[115,55,79,2],[115,56,79,2,"default"],[115,63,79,2],[115,65,82,2],[115,76,82,33,"userId"],[115,82,82,47],[115,84,82,49],[116,10,83,4],[116,14,83,8],[117,12,84,6],[118,12,85,6],[118,16,85,12,"hasSamples"],[118,26,85,22],[118,35,85,31],[118,39,85,35],[118,40,85,36,"hasSampleAutomations"],[118,60,85,56],[118,61,85,57,"userId"],[118,67,85,63],[118,68,85,64],[119,12,87,6],[119,16,87,10],[119,17,87,11,"hasSamples"],[119,27,87,21],[119,29,87,23],[120,14,88,8],[121,14,89,8],[121,18,89,14,"result"],[121,24,89,20],[121,33,89,29],[121,37,89,33],[121,38,89,34,"createSampleAutomations"],[121,61,89,57],[121,62,89,58,"userId"],[121,68,89,64],[121,69,89,65],[122,14,91,8],[122,18,91,12,"result"],[122,24,91,18],[122,25,91,19,"success"],[122,32,91,26],[122,34,91,28],[123,16,92,10,"EventLogger"],[123,40,92,21],[123,41,92,22,"debug"],[123,46,92,27],[123,47,92,28],[123,59,92,40],[123,61,92,42],[123,124,92,105],[123,125,92,106],[124,14,93,8],[125,14,95,8],[125,21,95,15,"result"],[125,27,95,21],[126,12,96,6],[127,12,98,6],[127,19,98,13],[128,14,98,15,"success"],[128,21,98,22],[128,23,98,24],[128,27,98,28],[129,14,98,30,"message"],[129,21,98,37],[129,23,98,39],[130,12,98,77],[130,13,98,78],[131,10,99,4],[131,11,99,5],[131,12,99,6],[131,19,99,13,"error"],[131,24,99,18],[131,26,99,20],[132,12,100,6,"EventLogger"],[132,36,100,17],[132,37,100,18,"error"],[132,42,100,23],[132,43,100,24],[132,55,100,36],[132,57,100,38],[132,89,100,70],[132,91,100,72,"error"],[132,96,100,86],[132,97,100,87],[133,12,101,6],[133,19,101,13],[134,14,101,15,"success"],[134,21,101,22],[134,23,101,24],[134,28,101,29],[135,14,101,31,"error"],[135,19,101,36],[135,21,101,31,"error"],[136,12,101,37],[136,13,101,38],[137,10,102,4],[138,8,103,2],[138,9,103,3],[139,8,103,3],[139,17,82,15,"initializeNewUser"],[139,34,82,32,"initializeNewUser"],[139,35,82,32,"_x3"],[139,38,82,32],[140,10,82,32],[140,17,82,32,"_initializeNewUser"],[140,35,82,32],[140,36,82,32,"apply"],[140,41,82,32],[140,48,82,32,"arguments"],[140,57,82,32],[141,8,82,32],[142,8,82,32],[142,15,82,15,"initializeNewUser"],[142,32,82,32],[143,6,82,32],[144,4,82,32],[145,2,82,32],[146,0,82,32],[146,3]],"functionMap":{"names":["<global>","OnboardingService","createSampleAutomations","sampleAutomations.map$argument_0","hasSampleAutomations","initializeNewUser"],"mappings":"AAA;OCI;ECI;wDCG;QDgB;GDyB;EGK;GHmB;EIK;GJqB"}},"type":"js/module"}]}