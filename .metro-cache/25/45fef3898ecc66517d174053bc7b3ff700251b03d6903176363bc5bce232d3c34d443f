{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"expo-notifications","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":205},"end":{"line":7,"column":52,"index":257}}],"key":"nrBDtkRVez7cBhLzyaRjl+xVfvE=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":301},"end":{"line":9,"column":69,"index":370}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"./NotificationService","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":519},"end":{"line":16,"column":56,"index":575}}],"key":"QuAJF8LO9sSj+VodWFVeKd6SEzk=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":577},"end":{"line":17,"column":54,"index":631}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _toConsumableArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n  var Notifications = _interopRequireWildcard(require(_dependencyMap[5], \"expo-notifications\"));\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[6], \"@react-native-async-storage/async-storage\"));\n  var _NotificationService = _interopRequireDefault(require(_dependencyMap[7], \"./NotificationService\"));\n  var _EventLogger = require(_dependencyMap[8], \"../../utils/EventLogger\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  /**\r\n   * NotificationHandler.ts\r\n   * Handles different notification types, deep linking, and notification actions\r\n   * Features: deep linking, automation execution, analytics tracking, error handling\r\n   */\n  var NotificationHandler = /*#__PURE__*/function () {\n    function NotificationHandler() {\n      (0, _classCallCheck2.default)(this, NotificationHandler);\n      this.navigationRef = null;\n      this.notificationQueue = [];\n    }\n    return (0, _createClass2.default)(NotificationHandler, [{\n      key: \"setNavigationRef\",\n      value:\n      /**\r\n       * Set navigation reference for deep linking\r\n       */\n      function setNavigationRef(navigationRef) {\n        this.navigationRef = navigationRef;\n        _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Navigation reference set');\n      }\n\n      /**\r\n       * Check if navigation is ready\r\n       */\n    }, {\n      key: \"isNavigationReady\",\n      value: function isNavigationReady() {\n        var _this$navigationRef;\n        return ((_this$navigationRef = this.navigationRef) == null || (_this$navigationRef = _this$navigationRef.current) == null || _this$navigationRef.isReady == null ? void 0 : _this$navigationRef.isReady()) === true;\n      }\n\n      /**\r\n       * Initialize notification handler\r\n       */\n    }, {\n      key: \"initialize\",\n      value: (function () {\n        var _initialize = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            // Process any queued notifications\n            yield this.processNotificationQueue();\n\n            // Set up notification listeners\n            this.setupNotificationListeners();\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Initialized successfully');\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Initialization failed:', error);\n          }\n        });\n        function initialize() {\n          return _initialize.apply(this, arguments);\n        }\n        return initialize;\n      }()\n      /**\r\n       * Handle incoming notification\r\n       */\n      )\n    }, {\n      key: \"handleNotification\",\n      value: (function () {\n        var _handleNotification = (0, _asyncToGenerator2.default)(function* (notification) {\n          try {\n            var payload = this.parseNotificationPayload(notification);\n            if (!payload) {\n              _EventLogger.EventLogger.warn('NotificationHandler', '[NotificationHandler] Invalid notification payload');\n              return;\n            }\n\n            // Store notification\n            var storedNotification = yield this.storeNotification(payload);\n\n            // Update unread count\n            yield this.incrementUnreadCount();\n\n            // Track analytics\n            yield this.trackNotificationReceived(payload);\n\n            // Handle specific notification types\n            yield this.handleNotificationType(payload);\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Notification handled:', payload.type);\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to handle notification:', error);\n          }\n        });\n        function handleNotification(_x) {\n          return _handleNotification.apply(this, arguments);\n        }\n        return handleNotification;\n      }()\n      /**\r\n       * Handle notification response (user tapped notification)\r\n       */\n      )\n    }, {\n      key: \"handleNotificationResponse\",\n      value: (function () {\n        var _handleNotificationResponse = (0, _asyncToGenerator2.default)(function* (response) {\n          try {\n            var payload = this.parseNotificationPayload(response.notification);\n            if (!payload) {\n              _EventLogger.EventLogger.warn('NotificationHandler', '[NotificationHandler] Invalid notification response payload');\n              return;\n            }\n\n            // Mark notification as read\n            yield this.markNotificationAsRead(payload);\n\n            // Handle deep linking\n            yield this.handleDeepLink(payload, response.actionIdentifier);\n\n            // Track analytics\n            yield this.trackNotificationOpened(payload, response.actionIdentifier);\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Notification response handled:', payload.type, response.actionIdentifier);\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to handle notification response:', error);\n          }\n        });\n        function handleNotificationResponse(_x2) {\n          return _handleNotificationResponse.apply(this, arguments);\n        }\n        return handleNotificationResponse;\n      }()\n      /**\r\n       * Parse notification payload\r\n       */\n      )\n    }, {\n      key: \"parseNotificationPayload\",\n      value: function parseNotificationPayload(notification) {\n        try {\n          var _notification$request = notification.request.content,\n            title = _notification$request.title,\n            body = _notification$request.body,\n            data = _notification$request.data;\n          if (!title || !body || !(data != null && data.type)) {\n            return null;\n          }\n          return {\n            type: data.type,\n            title: title,\n            body: body,\n            data: data\n          };\n        } catch (error) {\n          _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to parse notification payload:', error);\n          return null;\n        }\n      }\n\n      /**\r\n       * Store notification locally\r\n       */\n    }, {\n      key: \"storeNotification\",\n      value: (function () {\n        var _storeNotification = (0, _asyncToGenerator2.default)(function* (payload) {\n          try {\n            var notification = {\n              id: yield this.generateNotificationId(),\n              type: payload.type,\n              title: payload.title,\n              body: payload.body,\n              data: payload.data,\n              read: false,\n              createdAt: payload.data.timestamp || new Date().toISOString(),\n              receivedAt: new Date().toISOString()\n            };\n\n            // Get existing notifications\n            var existing = yield this.getStoredNotifications();\n\n            // Add new notification at the beginning\n            var updated = [notification].concat((0, _toConsumableArray2.default)(existing));\n\n            // Limit to maximum stored notifications\n            var limited = updated.slice(0, NotificationHandler.MAX_STORED_NOTIFICATIONS);\n\n            // Store updated list\n            yield _asyncStorage.default.setItem(NotificationHandler.STORAGE_KEYS.NOTIFICATION_HISTORY, JSON.stringify(limited));\n            return notification;\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to store notification:', error);\n            throw error;\n          }\n        });\n        function storeNotification(_x3) {\n          return _storeNotification.apply(this, arguments);\n        }\n        return storeNotification;\n      }()\n      /**\r\n       * Get stored notifications\r\n       */\n      )\n    }, {\n      key: \"getStoredNotifications\",\n      value: (function () {\n        var _getStoredNotifications = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var stored = yield _asyncStorage.default.getItem(NotificationHandler.STORAGE_KEYS.NOTIFICATION_HISTORY);\n            return stored ? JSON.parse(stored) : [];\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to get stored notifications:', error);\n            return [];\n          }\n        });\n        function getStoredNotifications() {\n          return _getStoredNotifications.apply(this, arguments);\n        }\n        return getStoredNotifications;\n      }()\n      /**\r\n       * Mark notification as read\r\n       */\n      )\n    }, {\n      key: \"markNotificationAsRead\",\n      value: (function () {\n        var _markNotificationAsRead = (0, _asyncToGenerator2.default)(function* (payload) {\n          try {\n            var notifications = yield this.getStoredNotifications();\n            var updated = notifications.map(function (notification) {\n              if (notification.title === payload.title && notification.body === payload.body && !notification.read) {\n                return Object.assign({}, notification, {\n                  read: true\n                });\n              }\n              return notification;\n            });\n            yield _asyncStorage.default.setItem(NotificationHandler.STORAGE_KEYS.NOTIFICATION_HISTORY, JSON.stringify(updated));\n\n            // Update unread count\n            yield this.updateUnreadCount();\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to mark notification as read:', error);\n          }\n        });\n        function markNotificationAsRead(_x4) {\n          return _markNotificationAsRead.apply(this, arguments);\n        }\n        return markNotificationAsRead;\n      }()\n      /**\r\n       * Handle specific notification types\r\n       */\n      )\n    }, {\n      key: \"handleNotificationType\",\n      value: (function () {\n        var _handleNotificationType = (0, _asyncToGenerator2.default)(function* (payload) {\n          try {\n            switch (payload.type) {\n              case 'automation':\n                yield this.handleAutomationNotification(payload);\n                break;\n              case 'share':\n                yield this.handleShareNotification(payload);\n                break;\n              case 'social':\n                yield this.handleSocialNotification(payload);\n                break;\n              case 'system':\n                yield this.handleSystemNotification(payload);\n                break;\n              default:\n                _EventLogger.EventLogger.warn('NotificationHandler', '[NotificationHandler] Unknown notification type:', payload.type);\n            }\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to handle notification type:', error);\n          }\n        });\n        function handleNotificationType(_x5) {\n          return _handleNotificationType.apply(this, arguments);\n        }\n        return handleNotificationType;\n      }()\n      /**\r\n       * Handle automation notifications\r\n       */\n      )\n    }, {\n      key: \"handleAutomationNotification\",\n      value: (function () {\n        var _handleAutomationNotification = (0, _asyncToGenerator2.default)(function* (payload) {\n          var _payload$data = payload.data,\n            automationId = _payload$data.automationId,\n            action = _payload$data.action;\n          if (action === 'execute' && automationId) {\n            // Could trigger automation execution here\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Automation execution notification:', automationId);\n          }\n        });\n        function handleAutomationNotification(_x6) {\n          return _handleAutomationNotification.apply(this, arguments);\n        }\n        return handleAutomationNotification;\n      }()\n      /**\r\n       * Handle share notifications\r\n       */\n      )\n    }, {\n      key: \"handleShareNotification\",\n      value: (function () {\n        var _handleShareNotification = (0, _asyncToGenerator2.default)(function* (payload) {\n          var _payload$data2 = payload.data,\n            shareUrl = _payload$data2.shareUrl,\n            automationId = _payload$data2.automationId;\n          if (shareUrl) {\n            // Store share URL for later access\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Share notification:', shareUrl);\n          }\n        });\n        function handleShareNotification(_x7) {\n          return _handleShareNotification.apply(this, arguments);\n        }\n        return handleShareNotification;\n      }()\n      /**\r\n       * Handle social notifications\r\n       */\n      )\n    }, {\n      key: \"handleSocialNotification\",\n      value: (function () {\n        var _handleSocialNotification = (0, _asyncToGenerator2.default)(function* (payload) {\n          var _payload$data3 = payload.data,\n            userId = _payload$data3.userId,\n            action = _payload$data3.action;\n          _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Social notification:', action, userId);\n        });\n        function handleSocialNotification(_x8) {\n          return _handleSocialNotification.apply(this, arguments);\n        }\n        return handleSocialNotification;\n      }()\n      /**\r\n       * Handle system notifications\r\n       */\n      )\n    }, {\n      key: \"handleSystemNotification\",\n      value: (function () {\n        var _handleSystemNotification = (0, _asyncToGenerator2.default)(function* (payload) {\n          var action = payload.data.action;\n          _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] System notification:', action);\n        });\n        function handleSystemNotification(_x9) {\n          return _handleSystemNotification.apply(this, arguments);\n        }\n        return handleSystemNotification;\n      }()\n      /**\r\n       * Handle deep linking from notifications\r\n       */\n      )\n    }, {\n      key: \"handleDeepLink\",\n      value: (function () {\n        var _handleDeepLink = (0, _asyncToGenerator2.default)(function* (payload, actionIdentifier) {\n          var _this = this;\n          try {\n            var _this$navigationRef2;\n            var deepLinkAction = this.getDeepLinkAction(payload, actionIdentifier);\n            if (!deepLinkAction) {\n              _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] No deep link action for notification');\n              return;\n            }\n\n            // Check if navigation is ready\n            if (this.isNavigationReady()) {\n              this.navigationRef.current.navigate(deepLinkAction.screen, deepLinkAction.params);\n              _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Navigated to:', deepLinkAction.screen);\n            } else if ((_this$navigationRef2 = this.navigationRef) != null && _this$navigationRef2.current) {\n              // Navigation ref exists but not ready, retry after delay\n              _EventLogger.EventLogger.warn('NotificationHandler', '[NotificationHandler] Navigation not ready, retrying in 500ms');\n              setTimeout(function () {\n                if (_this.isNavigationReady()) {\n                  _this.navigationRef.current.navigate(deepLinkAction.screen, deepLinkAction.params);\n                  _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Navigated to (on retry):', deepLinkAction.screen);\n                } else {\n                  // Still not ready, queue it\n                  _this.queueNavigationAction(payload, deepLinkAction);\n                }\n              }, 500);\n            } else {\n              // No navigation ref at all, queue for later\n              this.queueNavigationAction(payload, deepLinkAction);\n              _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Queued navigation for later:', deepLinkAction.screen);\n            }\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to handle deep link:', error);\n          }\n        });\n        function handleDeepLink(_x0, _x1) {\n          return _handleDeepLink.apply(this, arguments);\n        }\n        return handleDeepLink;\n      }()\n      /**\r\n       * Queue navigation action for later\r\n       */\n      )\n    }, {\n      key: \"queueNavigationAction\",\n      value: (function () {\n        var _queueNavigationAction = (0, _asyncToGenerator2.default)(function* (payload, deepLinkAction) {\n          this.notificationQueue.push({\n            id: yield this.generateNotificationId(),\n            type: payload.type,\n            title: payload.title,\n            body: payload.body,\n            data: Object.assign({}, payload.data, {\n              deepLinkAction: deepLinkAction\n            }),\n            read: false,\n            createdAt: new Date().toISOString(),\n            receivedAt: new Date().toISOString()\n          });\n        });\n        function queueNavigationAction(_x10, _x11) {\n          return _queueNavigationAction.apply(this, arguments);\n        }\n        return queueNavigationAction;\n      }()\n      /**\r\n       * Get deep link action for notification\r\n       */\n      )\n    }, {\n      key: \"getDeepLinkAction\",\n      value: function getDeepLinkAction(payload, actionIdentifier) {\n        var type = payload.type,\n          data = payload.data;\n        switch (type) {\n          case 'automation':\n            if (actionIdentifier === 'view' && data.automationId) {\n              return {\n                screen: 'AutomationDetails',\n                params: {\n                  automationId: data.automationId\n                }\n              };\n            }\n            break;\n          case 'share':\n            if (actionIdentifier === 'open' && data.shareUrl) {\n              // Parse share URL to get automation ID\n              var shareMatch = data.shareUrl.match(/\\/share\\/([^\\/]+)/);\n              if (shareMatch) {\n                return {\n                  screen: 'SharedAutomation',\n                  params: {\n                    publicId: shareMatch[1]\n                  }\n                };\n              }\n            }\n            break;\n          case 'social':\n            if (actionIdentifier === 'view' && data.userId) {\n              return {\n                screen: 'Profile',\n                params: {\n                  userId: data.userId\n                }\n              };\n            }\n            break;\n          case 'system':\n            if (actionIdentifier === 'view') {\n              return {\n                screen: 'Settings',\n                params: {}\n              };\n            }\n            break;\n        }\n        return null;\n      }\n\n      /**\r\n       * Process queued notifications (when navigation becomes available)\r\n       */\n    }, {\n      key: \"processNotificationQueue\",\n      value: (function () {\n        var _processNotificationQueue = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            if (this.notificationQueue.length === 0 || !this.isNavigationReady()) {\n              return;\n            }\n            for (var notification of this.notificationQueue) {\n              var deepLinkAction = notification.data.deepLinkAction;\n              if (deepLinkAction) {\n                this.navigationRef.current.navigate(deepLinkAction.screen, deepLinkAction.params);\n                _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Processed queued navigation:', deepLinkAction.screen);\n              }\n            }\n            this.notificationQueue = [];\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to process notification queue:', error);\n          }\n        });\n        function processNotificationQueue() {\n          return _processNotificationQueue.apply(this, arguments);\n        }\n        return processNotificationQueue;\n      }()\n      /**\r\n       * Set up notification listeners\r\n       */\n      )\n    }, {\n      key: \"setupNotificationListeners\",\n      value: function setupNotificationListeners() {\n        // Listener for notifications received while app is running\n        Notifications.addNotificationReceivedListener(this.handleNotification.bind(this));\n\n        // Listener for user tapping notification\n        Notifications.addNotificationResponseReceivedListener(this.handleNotificationResponse.bind(this));\n        _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Notification listeners set up');\n      }\n\n      /**\r\n       * Generate unique notification ID\r\n       */\n    }, {\n      key: \"generateNotificationId\",\n      value: (function () {\n        var _generateNotificationId = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var lastId = yield _asyncStorage.default.getItem(NotificationHandler.STORAGE_KEYS.LAST_NOTIFICATION_ID);\n            var newId = lastId ? parseInt(lastId, 10) + 1 : 1;\n            yield _asyncStorage.default.setItem(NotificationHandler.STORAGE_KEYS.LAST_NOTIFICATION_ID, newId.toString());\n            return `notification_${newId}_${Date.now()}`;\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to generate notification ID:', error);\n            return `notification_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n          }\n        });\n        function generateNotificationId() {\n          return _generateNotificationId.apply(this, arguments);\n        }\n        return generateNotificationId;\n      }()\n      /**\r\n       * Increment unread count\r\n       */\n      )\n    }, {\n      key: \"incrementUnreadCount\",\n      value: (function () {\n        var _incrementUnreadCount = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var current = yield this.getUnreadCount();\n            var newCount = current + 1;\n            yield _asyncStorage.default.setItem(NotificationHandler.STORAGE_KEYS.UNREAD_COUNT, newCount.toString());\n\n            // Update app badge\n            yield _NotificationService.default.setBadgeCount(newCount);\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to increment unread count:', error);\n          }\n        });\n        function incrementUnreadCount() {\n          return _incrementUnreadCount.apply(this, arguments);\n        }\n        return incrementUnreadCount;\n      }()\n      /**\r\n       * Update unread count based on stored notifications\r\n       */\n      )\n    }, {\n      key: \"updateUnreadCount\",\n      value: (function () {\n        var _updateUnreadCount = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var notifications = yield this.getStoredNotifications();\n            var unreadCount = notifications.filter(function (n) {\n              return !n.read;\n            }).length;\n            yield _asyncStorage.default.setItem(NotificationHandler.STORAGE_KEYS.UNREAD_COUNT, unreadCount.toString());\n\n            // Update app badge\n            yield _NotificationService.default.setBadgeCount(unreadCount);\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to update unread count:', error);\n          }\n        });\n        function updateUnreadCount() {\n          return _updateUnreadCount.apply(this, arguments);\n        }\n        return updateUnreadCount;\n      }()\n      /**\r\n       * Get unread count\r\n       */\n      )\n    }, {\n      key: \"getUnreadCount\",\n      value: (function () {\n        var _getUnreadCount = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var stored = yield _asyncStorage.default.getItem(NotificationHandler.STORAGE_KEYS.UNREAD_COUNT);\n            return stored ? parseInt(stored, 10) : 0;\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to get unread count:', error);\n            return 0;\n          }\n        });\n        function getUnreadCount() {\n          return _getUnreadCount.apply(this, arguments);\n        }\n        return getUnreadCount;\n      }()\n      /**\r\n       * Clear all notifications\r\n       */\n      )\n    }, {\n      key: \"clearAllNotifications\",\n      value: (function () {\n        var _clearAllNotifications = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            yield _asyncStorage.default.multiRemove([NotificationHandler.STORAGE_KEYS.NOTIFICATION_HISTORY, NotificationHandler.STORAGE_KEYS.UNREAD_COUNT]);\n            yield _NotificationService.default.clearBadge();\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] All notifications cleared');\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to clear notifications:', error);\n          }\n        });\n        function clearAllNotifications() {\n          return _clearAllNotifications.apply(this, arguments);\n        }\n        return clearAllNotifications;\n      }()\n      /**\r\n       * Mark all notifications as read\r\n       */\n      )\n    }, {\n      key: \"markAllAsRead\",\n      value: (function () {\n        var _markAllAsRead = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var notifications = yield this.getStoredNotifications();\n            var updated = notifications.map(function (n) {\n              return Object.assign({}, n, {\n                read: true\n              });\n            });\n            yield _asyncStorage.default.setItem(NotificationHandler.STORAGE_KEYS.NOTIFICATION_HISTORY, JSON.stringify(updated));\n            yield _asyncStorage.default.setItem(NotificationHandler.STORAGE_KEYS.UNREAD_COUNT, '0');\n            yield _NotificationService.default.clearBadge();\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] All notifications marked as read');\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to mark all as read:', error);\n          }\n        });\n        function markAllAsRead() {\n          return _markAllAsRead.apply(this, arguments);\n        }\n        return markAllAsRead;\n      }()\n      /**\r\n       * Track notification received analytics\r\n       */\n      )\n    }, {\n      key: \"trackNotificationReceived\",\n      value: (function () {\n        var _trackNotificationReceived = (0, _asyncToGenerator2.default)(function* (payload) {\n          try {\n            // Analytics tracking would go here\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Analytics: notification received', payload.type);\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to track notification received:', error);\n          }\n        });\n        function trackNotificationReceived(_x12) {\n          return _trackNotificationReceived.apply(this, arguments);\n        }\n        return trackNotificationReceived;\n      }()\n      /**\r\n       * Track notification opened analytics\r\n       */\n      )\n    }, {\n      key: \"trackNotificationOpened\",\n      value: (function () {\n        var _trackNotificationOpened = (0, _asyncToGenerator2.default)(function* (payload, actionIdentifier) {\n          try {\n            // Analytics tracking would go here\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Analytics: notification opened', payload.type, actionIdentifier);\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to track notification opened:', error);\n          }\n        });\n        function trackNotificationOpened(_x13, _x14) {\n          return _trackNotificationOpened.apply(this, arguments);\n        }\n        return trackNotificationOpened;\n      }()\n      /**\r\n       * Send test notification\r\n       */\n      )\n    }, {\n      key: \"sendTestNotification\",\n      value: (function () {\n        var _sendTestNotification = (0, _asyncToGenerator2.default)(function* () {\n          var testPayload = {\n            type: 'system',\n            title: 'Test Notification',\n            body: 'This is a test notification from Zaptap',\n            data: {\n              action: 'test',\n              timestamp: new Date().toISOString()\n            }\n          };\n          yield this.handleNotification({\n            date: Date.now(),\n            request: {\n              identifier: 'test',\n              content: {\n                title: testPayload.title,\n                body: testPayload.body,\n                data: testPayload.data\n              },\n              trigger: null\n            }\n          });\n        });\n        function sendTestNotification() {\n          return _sendTestNotification.apply(this, arguments);\n        }\n        return sendTestNotification;\n      }())\n    }], [{\n      key: \"getInstance\",\n      value: function getInstance() {\n        if (!NotificationHandler.instance) {\n          NotificationHandler.instance = new NotificationHandler();\n        }\n        return NotificationHandler.instance;\n      }\n    }]);\n  }();\n  // Storage keys\n  NotificationHandler.STORAGE_KEYS = {\n    NOTIFICATION_HISTORY: '@zaptap_notification_history',\n    UNREAD_COUNT: '@zaptap_unread_count',\n    LAST_NOTIFICATION_ID: '@zaptap_last_notification_id'\n  };\n  // Maximum notifications to store locally\n  NotificationHandler.MAX_STORED_NOTIFICATIONS = 50;\n  var _default = exports.default = NotificationHandler.getInstance();\n});","lineCount":778,"map":[[11,2,7,0],[11,6,7,0,"Notifications"],[11,19,7,0],[11,22,7,0,"_interopRequireWildcard"],[11,45,7,0],[11,46,7,0,"require"],[11,53,7,0],[11,54,7,0,"_dependencyMap"],[11,68,7,0],[12,2,9,0],[12,6,9,0,"_asyncStorage"],[12,19,9,0],[12,22,9,0,"_interopRequireDefault"],[12,44,9,0],[12,45,9,0,"require"],[12,52,9,0],[12,53,9,0,"_dependencyMap"],[12,67,9,0],[13,2,16,0],[13,6,16,0,"_NotificationService"],[13,26,16,0],[13,29,16,0,"_interopRequireDefault"],[13,51,16,0],[13,52,16,0,"require"],[13,59,16,0],[13,60,16,0,"_dependencyMap"],[13,74,16,0],[14,2,17,0],[14,6,17,0,"_EventLogger"],[14,18,17,0],[14,21,17,0,"require"],[14,28,17,0],[14,29,17,0,"_dependencyMap"],[14,43,17,0],[15,2,17,54],[15,11,17,54,"_interopRequireWildcard"],[15,35,17,54,"e"],[15,36,17,54],[15,38,17,54,"t"],[15,39,17,54],[15,68,17,54,"WeakMap"],[15,75,17,54],[15,81,17,54,"r"],[15,82,17,54],[15,89,17,54,"WeakMap"],[15,96,17,54],[15,100,17,54,"n"],[15,101,17,54],[15,108,17,54,"WeakMap"],[15,115,17,54],[15,127,17,54,"_interopRequireWildcard"],[15,150,17,54],[15,162,17,54,"_interopRequireWildcard"],[15,186,17,54,"e"],[15,187,17,54],[15,189,17,54,"t"],[15,190,17,54],[15,199,17,54,"t"],[15,200,17,54],[15,204,17,54,"e"],[15,205,17,54],[15,209,17,54,"e"],[15,210,17,54],[15,211,17,54,"__esModule"],[15,221,17,54],[15,230,17,54,"e"],[15,231,17,54],[15,237,17,54,"o"],[15,238,17,54],[15,240,17,54,"i"],[15,241,17,54],[15,243,17,54,"f"],[15,244,17,54],[15,249,17,54,"__proto__"],[15,258,17,54],[15,266,17,54,"default"],[15,273,17,54],[15,275,17,54,"e"],[15,276,17,54],[15,293,17,54,"e"],[15,294,17,54],[15,317,17,54,"e"],[15,318,17,54],[15,343,17,54,"e"],[15,344,17,54],[15,353,17,54,"f"],[15,354,17,54],[15,360,17,54,"o"],[15,361,17,54],[15,364,17,54,"t"],[15,365,17,54],[15,368,17,54,"n"],[15,369,17,54],[15,372,17,54,"r"],[15,373,17,54],[15,381,17,54,"o"],[15,382,17,54],[15,383,17,54,"has"],[15,386,17,54],[15,387,17,54,"e"],[15,388,17,54],[15,398,17,54,"o"],[15,399,17,54],[15,400,17,54,"get"],[15,403,17,54],[15,404,17,54,"e"],[15,405,17,54],[15,408,17,54,"o"],[15,409,17,54],[15,410,17,54,"set"],[15,413,17,54],[15,414,17,54,"e"],[15,415,17,54],[15,417,17,54,"f"],[15,418,17,54],[15,432,17,54,"_t"],[15,434,17,54],[15,438,17,54,"e"],[15,439,17,54],[15,455,17,54,"_t"],[15,457,17,54],[15,464,17,54,"hasOwnProperty"],[15,478,17,54],[15,479,17,54,"call"],[15,483,17,54],[15,484,17,54,"e"],[15,485,17,54],[15,487,17,54,"_t"],[15,489,17,54],[15,496,17,54,"i"],[15,497,17,54],[15,501,17,54,"o"],[15,502,17,54],[15,505,17,54,"Object"],[15,511,17,54],[15,512,17,54,"defineProperty"],[15,526,17,54],[15,531,17,54,"Object"],[15,537,17,54],[15,538,17,54,"getOwnPropertyDescriptor"],[15,562,17,54],[15,563,17,54,"e"],[15,564,17,54],[15,566,17,54,"_t"],[15,568,17,54],[15,575,17,54,"i"],[15,576,17,54],[15,577,17,54,"get"],[15,580,17,54],[15,584,17,54,"i"],[15,585,17,54],[15,586,17,54,"set"],[15,589,17,54],[15,593,17,54,"o"],[15,594,17,54],[15,595,17,54,"f"],[15,596,17,54],[15,598,17,54,"_t"],[15,600,17,54],[15,602,17,54,"i"],[15,603,17,54],[15,607,17,54,"f"],[15,608,17,54],[15,609,17,54,"_t"],[15,611,17,54],[15,615,17,54,"e"],[15,616,17,54],[15,617,17,54,"_t"],[15,619,17,54],[15,630,17,54,"f"],[15,631,17,54],[15,636,17,54,"e"],[15,637,17,54],[15,639,17,54,"t"],[15,640,17,54],[16,2,1,0],[17,0,2,0],[18,0,3,0],[19,0,4,0],[20,0,5,0],[21,2,1,0],[21,6,28,6,"NotificationHandler"],[21,25,28,25],[22,4,43,2],[22,13,43,2,"NotificationHandler"],[22,33,43,2],[22,35,43,24],[23,6,43,24],[23,10,43,24,"_classCallCheck2"],[23,26,43,24],[23,27,43,24,"default"],[23,34,43,24],[23,42,43,24,"NotificationHandler"],[23,61,43,24],[24,6,43,24],[24,11,30,10,"navigationRef"],[24,24,30,23],[24,27,30,48],[24,31,30,52],[25,6,30,52],[25,11,31,10,"notificationQueue"],[25,28,31,27],[25,31,31,52],[25,33,31,54],[26,4,43,25],[27,4,43,26],[27,15,43,26,"_createClass2"],[27,28,43,26],[27,29,43,26,"default"],[27,36,43,26],[27,38,43,26,"NotificationHandler"],[27,57,43,26],[28,6,43,26,"key"],[28,9,43,26],[29,6,43,26,"value"],[29,11,43,26],[30,6,52,2],[31,0,53,0],[32,0,54,0],[33,6,55,2],[33,15,55,9,"setNavigationRef"],[33,31,55,25,"setNavigationRef"],[33,32,55,26,"navigationRef"],[33,45,55,54],[33,47,55,62],[34,8,56,4],[34,12,56,8],[34,13,56,9,"navigationRef"],[34,26,56,22],[34,29,56,25,"navigationRef"],[34,42,56,38],[35,8,57,4,"EventLogger"],[35,32,57,15],[35,33,57,16,"debug"],[35,38,57,21],[35,39,57,22],[35,60,57,43],[35,62,57,45],[35,110,57,93],[35,111,57,94],[36,6,58,2],[38,6,60,2],[39,0,61,0],[40,0,62,0],[41,4,60,2],[42,6,60,2,"key"],[42,9,60,2],[43,6,60,2,"value"],[43,11,60,2],[43,13,63,2],[43,22,63,10,"isNavigationReady"],[43,39,63,27,"isNavigationReady"],[43,40,63,27],[43,42,63,39],[44,8,63,39],[44,12,63,39,"_this$navigationRef"],[44,31,63,39],[45,8,64,4],[45,15,64,11],[45,17,64,11,"_this$navigationRef"],[45,36,64,11],[45,43,64,15],[45,44,64,16,"navigationRef"],[45,57,64,29],[45,71,64,29,"_this$navigationRef"],[45,90,64,29],[45,93,64,11,"_this$navigationRef"],[45,112,64,11],[45,113,64,31,"current"],[45,120,64,38],[45,133,64,11,"_this$navigationRef"],[45,152,64,11],[45,153,64,40,"isReady"],[45,160,64,47],[45,180,64,11,"_this$navigationRef"],[45,199,64,11],[45,200,64,40,"isReady"],[45,207,64,47],[45,208,64,50],[45,209,64,51],[45,215,64,56],[45,219,64,60],[46,6,65,2],[48,6,67,2],[49,0,68,0],[50,0,69,0],[51,4,67,2],[52,6,67,2,"key"],[52,9,67,2],[53,6,67,2,"value"],[53,11,67,2],[54,8,67,2],[54,12,67,2,"_initialize"],[54,23,67,2],[54,30,67,2,"_asyncToGenerator2"],[54,48,67,2],[54,49,67,2,"default"],[54,56,67,2],[54,58,70,2],[54,71,70,43],[55,10,71,4],[55,14,71,8],[56,12,72,6],[57,12,73,6],[57,18,73,12],[57,22,73,16],[57,23,73,17,"processNotificationQueue"],[57,47,73,41],[57,48,73,42],[57,49,73,43],[59,12,75,6],[60,12,76,6],[60,16,76,10],[60,17,76,11,"setupNotificationListeners"],[60,43,76,37],[60,44,76,38],[60,45,76,39],[61,12,78,6,"EventLogger"],[61,36,78,17],[61,37,78,18,"debug"],[61,42,78,23],[61,43,78,24],[61,64,78,45],[61,66,78,47],[61,114,78,95],[61,115,78,96],[62,10,79,4],[62,11,79,5],[62,12,79,6],[62,19,79,13,"error"],[62,24,79,18],[62,26,79,20],[63,12,80,6,"EventLogger"],[63,36,80,17],[63,37,80,18,"error"],[63,42,80,23],[63,43,80,24],[63,64,80,45],[63,66,80,47],[63,112,80,93],[63,114,80,95,"error"],[63,119,80,109],[63,120,80,110],[64,10,81,4],[65,8,82,2],[65,9,82,3],[66,8,82,3],[66,17,70,15,"initialize"],[66,27,70,25,"initialize"],[66,28,70,25],[67,10,70,25],[67,17,70,25,"_initialize"],[67,28,70,25],[67,29,70,25,"apply"],[67,34,70,25],[67,41,70,25,"arguments"],[67,50,70,25],[68,8,70,25],[69,8,70,25],[69,15,70,15,"initialize"],[69,25,70,25],[70,6,70,25],[71,6,84,2],[72,0,85,0],[73,0,86,0],[74,6,84,2],[75,4,84,2],[76,6,84,2,"key"],[76,9,84,2],[77,6,84,2,"value"],[77,11,84,2],[78,8,84,2],[78,12,84,2,"_handleNotification"],[78,31,84,2],[78,38,84,2,"_asyncToGenerator2"],[78,56,84,2],[78,57,84,2,"default"],[78,64,84,2],[78,66,87,2],[78,77,87,34,"notification"],[78,89,87,74],[78,91,87,91],[79,10,88,4],[79,14,88,8],[80,12,89,6],[80,16,89,12,"payload"],[80,23,89,19],[80,26,89,22],[80,30,89,26],[80,31,89,27,"parseNotificationPayload"],[80,55,89,51],[80,56,89,52,"notification"],[80,68,89,64],[80,69,89,65],[81,12,90,6],[81,16,90,10],[81,17,90,11,"payload"],[81,24,90,18],[81,26,90,20],[82,14,91,8,"EventLogger"],[82,38,91,19],[82,39,91,20,"warn"],[82,43,91,24],[82,44,91,25],[82,65,91,46],[82,67,91,48],[82,119,91,100],[82,120,91,101],[83,14,92,8],[84,12,93,6],[86,12,95,6],[87,12,96,6],[87,16,96,12,"storedNotification"],[87,34,96,30],[87,43,96,39],[87,47,96,43],[87,48,96,44,"storeNotification"],[87,65,96,61],[87,66,96,62,"payload"],[87,73,96,69],[87,74,96,70],[89,12,98,6],[90,12,99,6],[90,18,99,12],[90,22,99,16],[90,23,99,17,"incrementUnreadCount"],[90,43,99,37],[90,44,99,38],[90,45,99,39],[92,12,101,6],[93,12,102,6],[93,18,102,12],[93,22,102,16],[93,23,102,17,"trackNotificationReceived"],[93,48,102,42],[93,49,102,43,"payload"],[93,56,102,50],[93,57,102,51],[95,12,104,6],[96,12,105,6],[96,18,105,12],[96,22,105,16],[96,23,105,17,"handleNotificationType"],[96,45,105,39],[96,46,105,40,"payload"],[96,53,105,47],[96,54,105,48],[97,12,107,6,"EventLogger"],[97,36,107,17],[97,37,107,18,"debug"],[97,42,107,23],[97,43,107,24],[97,64,107,45],[97,66,107,47],[97,111,107,92],[97,113,107,94,"payload"],[97,120,107,101],[97,121,107,102,"type"],[97,125,107,106],[97,126,107,107],[98,10,109,4],[98,11,109,5],[98,12,109,6],[98,19,109,13,"error"],[98,24,109,18],[98,26,109,20],[99,12,110,6,"EventLogger"],[99,36,110,17],[99,37,110,18,"error"],[99,42,110,23],[99,43,110,24],[99,64,110,45],[99,66,110,47],[99,120,110,101],[99,122,110,103,"error"],[99,127,110,117],[99,128,110,118],[100,10,111,4],[101,8,112,2],[101,9,112,3],[102,8,112,3],[102,17,87,15,"handleNotification"],[102,35,87,33,"handleNotification"],[102,36,87,33,"_x"],[102,38,87,33],[103,10,87,33],[103,17,87,33,"_handleNotification"],[103,36,87,33],[103,37,87,33,"apply"],[103,42,87,33],[103,49,87,33,"arguments"],[103,58,87,33],[104,8,87,33],[105,8,87,33],[105,15,87,15,"handleNotification"],[105,33,87,33],[106,6,87,33],[107,6,114,2],[108,0,115,0],[109,0,116,0],[110,6,114,2],[111,4,114,2],[112,6,114,2,"key"],[112,9,114,2],[113,6,114,2,"value"],[113,11,114,2],[114,8,114,2],[114,12,114,2,"_handleNotificationResponse"],[114,39,114,2],[114,46,114,2,"_asyncToGenerator2"],[114,64,114,2],[114,65,114,2,"default"],[114,72,114,2],[114,74,117,2],[114,85,117,42,"response"],[114,93,117,86],[114,95,117,103],[115,10,118,4],[115,14,118,8],[116,12,119,6],[116,16,119,12,"payload"],[116,23,119,19],[116,26,119,22],[116,30,119,26],[116,31,119,27,"parseNotificationPayload"],[116,55,119,51],[116,56,119,52,"response"],[116,64,119,60],[116,65,119,61,"notification"],[116,77,119,73],[116,78,119,74],[117,12,120,6],[117,16,120,10],[117,17,120,11,"payload"],[117,24,120,18],[117,26,120,20],[118,14,121,8,"EventLogger"],[118,38,121,19],[118,39,121,20,"warn"],[118,43,121,24],[118,44,121,25],[118,65,121,46],[118,67,121,48],[118,128,121,109],[118,129,121,110],[119,14,122,8],[120,12,123,6],[122,12,125,6],[123,12,126,6],[123,18,126,12],[123,22,126,16],[123,23,126,17,"markNotificationAsRead"],[123,45,126,39],[123,46,126,40,"payload"],[123,53,126,47],[123,54,126,48],[125,12,128,6],[126,12,129,6],[126,18,129,12],[126,22,129,16],[126,23,129,17,"handleDeepLink"],[126,37,129,31],[126,38,129,32,"payload"],[126,45,129,39],[126,47,129,41,"response"],[126,55,129,49],[126,56,129,50,"actionIdentifier"],[126,72,129,66],[126,73,129,67],[128,12,131,6],[129,12,132,6],[129,18,132,12],[129,22,132,16],[129,23,132,17,"trackNotificationOpened"],[129,46,132,40],[129,47,132,41,"payload"],[129,54,132,48],[129,56,132,50,"response"],[129,64,132,58],[129,65,132,59,"actionIdentifier"],[129,81,132,75],[129,82,132,76],[130,12,134,6,"EventLogger"],[130,36,134,17],[130,37,134,18,"debug"],[130,42,134,23],[130,43,134,24],[130,64,134,45],[130,66,134,47],[130,120,134,101],[130,122,134,103,"payload"],[130,129,134,110],[130,130,134,111,"type"],[130,134,134,115],[130,136,134,117,"response"],[130,144,134,125],[130,145,134,126,"actionIdentifier"],[130,161,134,142],[130,162,134,143],[131,10,136,4],[131,11,136,5],[131,12,136,6],[131,19,136,13,"error"],[131,24,136,18],[131,26,136,20],[132,12,137,6,"EventLogger"],[132,36,137,17],[132,37,137,18,"error"],[132,42,137,23],[132,43,137,24],[132,64,137,45],[132,66,137,47],[132,129,137,110],[132,131,137,112,"error"],[132,136,137,126],[132,137,137,127],[133,10,138,4],[134,8,139,2],[134,9,139,3],[135,8,139,3],[135,17,117,15,"handleNotificationResponse"],[135,43,117,41,"handleNotificationResponse"],[135,44,117,41,"_x2"],[135,47,117,41],[136,10,117,41],[136,17,117,41,"_handleNotificationResponse"],[136,44,117,41],[136,45,117,41,"apply"],[136,50,117,41],[136,57,117,41,"arguments"],[136,66,117,41],[137,8,117,41],[138,8,117,41],[138,15,117,15,"handleNotificationResponse"],[138,41,117,41],[139,6,117,41],[140,6,141,2],[141,0,142,0],[142,0,143,0],[143,6,141,2],[144,4,141,2],[145,6,141,2,"key"],[145,9,141,2],[146,6,141,2,"value"],[146,11,141,2],[146,13,144,2],[146,22,144,10,"parseNotificationPayload"],[146,46,144,34,"parseNotificationPayload"],[146,47,144,35,"notification"],[146,59,144,75],[146,61,144,105],[147,8,145,4],[147,12,145,8],[148,10,146,6],[148,14,146,6,"_notification$request"],[148,35,146,6],[148,38,146,36,"notification"],[148,50,146,48],[148,51,146,49,"request"],[148,58,146,56],[148,59,146,57,"content"],[148,66,146,64],[149,12,146,14,"title"],[149,17,146,19],[149,20,146,19,"_notification$request"],[149,41,146,19],[149,42,146,14,"title"],[149,47,146,19],[150,12,146,21,"body"],[150,16,146,25],[150,19,146,25,"_notification$request"],[150,40,146,25],[150,41,146,21,"body"],[150,45,146,25],[151,12,146,27,"data"],[151,16,146,31],[151,19,146,31,"_notification$request"],[151,40,146,31],[151,41,146,27,"data"],[151,45,146,31],[152,10,148,6],[152,14,148,10],[152,15,148,11,"title"],[152,20,148,16],[152,24,148,20],[152,25,148,21,"body"],[152,29,148,25],[152,33,148,29],[152,35,148,30,"data"],[152,39,148,34],[152,51,148,30,"data"],[152,55,148,34],[152,56,148,36,"type"],[152,60,148,40],[152,63,148,42],[153,12,149,8],[153,19,149,15],[153,23,149,19],[154,10,150,6],[155,10,152,6],[155,17,152,13],[156,12,153,8,"type"],[156,16,153,12],[156,18,153,14,"data"],[156,22,153,18],[156,23,153,19,"type"],[156,27,153,54],[157,12,154,8,"title"],[157,17,154,13],[157,19,154,8,"title"],[157,24,154,13],[158,12,155,8,"body"],[158,16,155,12],[158,18,155,8,"body"],[158,22,155,12],[159,12,156,8,"data"],[159,16,156,12],[159,18,156,14,"data"],[160,10,157,6],[160,11,157,7],[161,8,159,4],[161,9,159,5],[161,10,159,6],[161,17,159,13,"error"],[161,22,159,18],[161,24,159,20],[162,10,160,6,"EventLogger"],[162,34,160,17],[162,35,160,18,"error"],[162,40,160,23],[162,41,160,24],[162,62,160,45],[162,64,160,47],[162,125,160,108],[162,127,160,110,"error"],[162,132,160,124],[162,133,160,125],[163,10,161,6],[163,17,161,13],[163,21,161,17],[164,8,162,4],[165,6,163,2],[167,6,165,2],[168,0,166,0],[169,0,167,0],[170,4,165,2],[171,6,165,2,"key"],[171,9,165,2],[172,6,165,2,"value"],[172,11,165,2],[173,8,165,2],[173,12,165,2,"_storeNotification"],[173,30,165,2],[173,37,165,2,"_asyncToGenerator2"],[173,55,165,2],[173,56,165,2,"default"],[173,63,165,2],[173,65,168,2],[173,76,168,34,"payload"],[173,83,168,62],[173,85,168,93],[174,10,169,4],[174,14,169,8],[175,12,170,6],[175,16,170,12,"notification"],[175,28,170,44],[175,31,170,47],[176,14,171,8,"id"],[176,16,171,10],[176,24,171,18],[176,28,171,22],[176,29,171,23,"generateNotificationId"],[176,51,171,45],[176,52,171,46],[176,53,171,47],[177,14,172,8,"type"],[177,18,172,12],[177,20,172,14,"payload"],[177,27,172,21],[177,28,172,22,"type"],[177,32,172,26],[178,14,173,8,"title"],[178,19,173,13],[178,21,173,15,"payload"],[178,28,173,22],[178,29,173,23,"title"],[178,34,173,28],[179,14,174,8,"body"],[179,18,174,12],[179,20,174,14,"payload"],[179,27,174,21],[179,28,174,22,"body"],[179,32,174,26],[180,14,175,8,"data"],[180,18,175,12],[180,20,175,14,"payload"],[180,27,175,21],[180,28,175,22,"data"],[180,32,175,26],[181,14,176,8,"read"],[181,18,176,12],[181,20,176,14],[181,25,176,19],[182,14,177,8,"createdAt"],[182,23,177,17],[182,25,177,19,"payload"],[182,32,177,26],[182,33,177,27,"data"],[182,37,177,31],[182,38,177,32,"timestamp"],[182,47,177,41],[182,51,177,45],[182,55,177,49,"Date"],[182,59,177,53],[182,60,177,54],[182,61,177,55],[182,62,177,56,"toISOString"],[182,73,177,67],[182,74,177,68],[182,75,177,69],[183,14,178,8,"receivedAt"],[183,24,178,18],[183,26,178,20],[183,30,178,24,"Date"],[183,34,178,28],[183,35,178,29],[183,36,178,30],[183,37,178,31,"toISOString"],[183,48,178,42],[183,49,178,43],[184,12,179,6],[184,13,179,7],[186,12,181,6],[187,12,182,6],[187,16,182,12,"existing"],[187,24,182,20],[187,33,182,29],[187,37,182,33],[187,38,182,34,"getStoredNotifications"],[187,60,182,56],[187,61,182,57],[187,62,182,58],[189,12,184,6],[190,12,185,6],[190,16,185,12,"updated"],[190,23,185,19],[190,27,185,23,"notification"],[190,39,185,35],[190,41,185,35,"concat"],[190,47,185,35],[190,52,185,35,"_toConsumableArray2"],[190,71,185,35],[190,72,185,35,"default"],[190,79,185,35],[190,81,185,40,"existing"],[190,89,185,48],[190,91,185,49],[192,12,187,6],[193,12,188,6],[193,16,188,12,"limited"],[193,23,188,19],[193,26,188,22,"updated"],[193,33,188,29],[193,34,188,30,"slice"],[193,39,188,35],[193,40,188,36],[193,41,188,37],[193,43,188,39,"NotificationHandler"],[193,62,188,58],[193,63,188,59,"MAX_STORED_NOTIFICATIONS"],[193,87,188,83],[193,88,188,84],[195,12,190,6],[196,12,191,6],[196,18,191,12,"AsyncStorage"],[196,39,191,24],[196,40,191,25,"setItem"],[196,47,191,32],[196,48,192,8,"NotificationHandler"],[196,67,192,27],[196,68,192,28,"STORAGE_KEYS"],[196,80,192,40],[196,81,192,41,"NOTIFICATION_HISTORY"],[196,101,192,61],[196,103,193,8,"JSON"],[196,107,193,12],[196,108,193,13,"stringify"],[196,117,193,22],[196,118,193,23,"limited"],[196,125,193,30],[196,126,194,6],[196,127,194,7],[197,12,196,6],[197,19,196,13,"notification"],[197,31,196,25],[198,10,198,4],[198,11,198,5],[198,12,198,6],[198,19,198,13,"error"],[198,24,198,18],[198,26,198,20],[199,12,199,6,"EventLogger"],[199,36,199,17],[199,37,199,18,"error"],[199,42,199,23],[199,43,199,24],[199,64,199,45],[199,66,199,47],[199,119,199,100],[199,121,199,102,"error"],[199,126,199,116],[199,127,199,117],[200,12,200,6],[200,18,200,12,"error"],[200,23,200,17],[201,10,201,4],[202,8,202,2],[202,9,202,3],[203,8,202,3],[203,17,168,16,"storeNotification"],[203,34,168,33,"storeNotification"],[203,35,168,33,"_x3"],[203,38,168,33],[204,10,168,33],[204,17,168,33,"_storeNotification"],[204,35,168,33],[204,36,168,33,"apply"],[204,41,168,33],[204,48,168,33,"arguments"],[204,57,168,33],[205,8,168,33],[206,8,168,33],[206,15,168,16,"storeNotification"],[206,32,168,33],[207,6,168,33],[208,6,204,2],[209,0,205,0],[210,0,206,0],[211,6,204,2],[212,4,204,2],[213,6,204,2,"key"],[213,9,204,2],[214,6,204,2,"value"],[214,11,204,2],[215,8,204,2],[215,12,204,2,"_getStoredNotifications"],[215,35,204,2],[215,42,204,2,"_asyncToGenerator2"],[215,60,204,2],[215,61,204,2,"default"],[215,68,204,2],[215,70,207,2],[215,83,207,71],[216,10,208,4],[216,14,208,8],[217,12,209,6],[217,16,209,12,"stored"],[217,22,209,18],[217,31,209,27,"AsyncStorage"],[217,52,209,39],[217,53,209,40,"getItem"],[217,60,209,47],[217,61,209,48,"NotificationHandler"],[217,80,209,67],[217,81,209,68,"STORAGE_KEYS"],[217,93,209,80],[217,94,209,81,"NOTIFICATION_HISTORY"],[217,114,209,101],[217,115,209,102],[218,12,210,6],[218,19,210,13,"stored"],[218,25,210,19],[218,28,210,22,"JSON"],[218,32,210,26],[218,33,210,27,"parse"],[218,38,210,32],[218,39,210,33,"stored"],[218,45,210,39],[218,46,210,40],[218,49,210,43],[218,51,210,45],[219,10,211,4],[219,11,211,5],[219,12,211,6],[219,19,211,13,"error"],[219,24,211,18],[219,26,211,20],[220,12,212,6,"EventLogger"],[220,36,212,17],[220,37,212,18,"error"],[220,42,212,23],[220,43,212,24],[220,64,212,45],[220,66,212,47],[220,125,212,106],[220,127,212,108,"error"],[220,132,212,122],[220,133,212,123],[221,12,213,6],[221,19,213,13],[221,21,213,15],[222,10,214,4],[223,8,215,2],[223,9,215,3],[224,8,215,3],[224,17,207,15,"getStoredNotifications"],[224,39,207,37,"getStoredNotifications"],[224,40,207,37],[225,10,207,37],[225,17,207,37,"_getStoredNotifications"],[225,40,207,37],[225,41,207,37,"apply"],[225,46,207,37],[225,53,207,37,"arguments"],[225,62,207,37],[226,8,207,37],[227,8,207,37],[227,15,207,15,"getStoredNotifications"],[227,37,207,37],[228,6,207,37],[229,6,217,2],[230,0,218,0],[231,0,219,0],[232,6,217,2],[233,4,217,2],[234,6,217,2,"key"],[234,9,217,2],[235,6,217,2,"value"],[235,11,217,2],[236,8,217,2],[236,12,217,2,"_markNotificationAsRead"],[236,35,217,2],[236,42,217,2,"_asyncToGenerator2"],[236,60,217,2],[236,61,217,2,"default"],[236,68,217,2],[236,70,220,2],[236,81,220,38,"payload"],[236,88,220,66],[236,90,220,83],[237,10,221,4],[237,14,221,8],[238,12,222,6],[238,16,222,12,"notifications"],[238,29,222,25],[238,38,222,34],[238,42,222,38],[238,43,222,39,"getStoredNotifications"],[238,65,222,61],[238,66,222,62],[238,67,222,63],[239,12,224,6],[239,16,224,12,"updated"],[239,23,224,19],[239,26,224,22,"notifications"],[239,39,224,35],[239,40,224,36,"map"],[239,43,224,39],[239,44,224,40],[239,54,224,40,"notification"],[239,66,224,52],[239,68,224,56],[240,14,225,8],[240,18,225,12,"notification"],[240,30,225,24],[240,31,225,25,"title"],[240,36,225,30],[240,41,225,35,"payload"],[240,48,225,42],[240,49,225,43,"title"],[240,54,225,48],[240,58,226,12,"notification"],[240,70,226,24],[240,71,226,25,"body"],[240,75,226,29],[240,80,226,34,"payload"],[240,87,226,41],[240,88,226,42,"body"],[240,92,226,46],[240,96,227,12],[240,97,227,13,"notification"],[240,109,227,25],[240,110,227,26,"read"],[240,114,227,30],[240,116,227,32],[241,16,228,10],[241,23,228,10,"Object"],[241,29,228,10],[241,30,228,10,"assign"],[241,36,228,10],[241,41,228,22,"notification"],[241,53,228,34],[242,18,228,36,"read"],[242,22,228,40],[242,24,228,42],[243,16,228,46],[244,14,229,8],[245,14,230,8],[245,21,230,15,"notification"],[245,33,230,27],[246,12,231,6],[246,13,231,7],[246,14,231,8],[247,12,233,6],[247,18,233,12,"AsyncStorage"],[247,39,233,24],[247,40,233,25,"setItem"],[247,47,233,32],[247,48,234,8,"NotificationHandler"],[247,67,234,27],[247,68,234,28,"STORAGE_KEYS"],[247,80,234,40],[247,81,234,41,"NOTIFICATION_HISTORY"],[247,101,234,61],[247,103,235,8,"JSON"],[247,107,235,12],[247,108,235,13,"stringify"],[247,117,235,22],[247,118,235,23,"updated"],[247,125,235,30],[247,126,236,6],[247,127,236,7],[249,12,238,6],[250,12,239,6],[250,18,239,12],[250,22,239,16],[250,23,239,17,"updateUnreadCount"],[250,40,239,34],[250,41,239,35],[250,42,239,36],[251,10,241,4],[251,11,241,5],[251,12,241,6],[251,19,241,13,"error"],[251,24,241,18],[251,26,241,20],[252,12,242,6,"EventLogger"],[252,36,242,17],[252,37,242,18,"error"],[252,42,242,23],[252,43,242,24],[252,64,242,45],[252,66,242,47],[252,126,242,107],[252,128,242,109,"error"],[252,133,242,123],[252,134,242,124],[253,10,243,4],[254,8,244,2],[254,9,244,3],[255,8,244,3],[255,17,220,15,"markNotificationAsRead"],[255,39,220,37,"markNotificationAsRead"],[255,40,220,37,"_x4"],[255,43,220,37],[256,10,220,37],[256,17,220,37,"_markNotificationAsRead"],[256,40,220,37],[256,41,220,37,"apply"],[256,46,220,37],[256,53,220,37,"arguments"],[256,62,220,37],[257,8,220,37],[258,8,220,37],[258,15,220,15,"markNotificationAsRead"],[258,37,220,37],[259,6,220,37],[260,6,246,2],[261,0,247,0],[262,0,248,0],[263,6,246,2],[264,4,246,2],[265,6,246,2,"key"],[265,9,246,2],[266,6,246,2,"value"],[266,11,246,2],[267,8,246,2],[267,12,246,2,"_handleNotificationType"],[267,35,246,2],[267,42,246,2,"_asyncToGenerator2"],[267,60,246,2],[267,61,246,2,"default"],[267,68,246,2],[267,70,249,2],[267,81,249,39,"payload"],[267,88,249,67],[267,90,249,84],[268,10,250,4],[268,14,250,8],[269,12,251,6],[269,20,251,14,"payload"],[269,27,251,21],[269,28,251,22,"type"],[269,32,251,26],[270,14,252,8],[270,19,252,13],[270,31,252,25],[271,16,253,10],[271,22,253,16],[271,26,253,20],[271,27,253,21,"handleAutomationNotification"],[271,55,253,49],[271,56,253,50,"payload"],[271,63,253,57],[271,64,253,58],[272,16,254,10],[273,14,255,8],[273,19,255,13],[273,26,255,20],[274,16,256,10],[274,22,256,16],[274,26,256,20],[274,27,256,21,"handleShareNotification"],[274,50,256,44],[274,51,256,45,"payload"],[274,58,256,52],[274,59,256,53],[275,16,257,10],[276,14,258,8],[276,19,258,13],[276,27,258,21],[277,16,259,10],[277,22,259,16],[277,26,259,20],[277,27,259,21,"handleSocialNotification"],[277,51,259,45],[277,52,259,46,"payload"],[277,59,259,53],[277,60,259,54],[278,16,260,10],[279,14,261,8],[279,19,261,13],[279,27,261,21],[280,16,262,10],[280,22,262,16],[280,26,262,20],[280,27,262,21,"handleSystemNotification"],[280,51,262,45],[280,52,262,46,"payload"],[280,59,262,53],[280,60,262,54],[281,16,263,10],[282,14,264,8],[283,16,265,10,"EventLogger"],[283,40,265,21],[283,41,265,22,"warn"],[283,45,265,26],[283,46,265,27],[283,67,265,48],[283,69,265,50],[283,119,265,100],[283,121,265,102,"payload"],[283,128,265,109],[283,129,265,110,"type"],[283,133,265,114],[283,134,265,115],[284,12,266,6],[285,10,267,4],[285,11,267,5],[285,12,267,6],[285,19,267,13,"error"],[285,24,267,18],[285,26,267,20],[286,12,268,6,"EventLogger"],[286,36,268,17],[286,37,268,18,"error"],[286,42,268,23],[286,43,268,24],[286,64,268,45],[286,66,268,47],[286,125,268,106],[286,127,268,108,"error"],[286,132,268,122],[286,133,268,123],[287,10,269,4],[288,8,270,2],[288,9,270,3],[289,8,270,3],[289,17,249,16,"handleNotificationType"],[289,39,249,38,"handleNotificationType"],[289,40,249,38,"_x5"],[289,43,249,38],[290,10,249,38],[290,17,249,38,"_handleNotificationType"],[290,40,249,38],[290,41,249,38,"apply"],[290,46,249,38],[290,53,249,38,"arguments"],[290,62,249,38],[291,8,249,38],[292,8,249,38],[292,15,249,16,"handleNotificationType"],[292,37,249,38],[293,6,249,38],[294,6,272,2],[295,0,273,0],[296,0,274,0],[297,6,272,2],[298,4,272,2],[299,6,272,2,"key"],[299,9,272,2],[300,6,272,2,"value"],[300,11,272,2],[301,8,272,2],[301,12,272,2,"_handleAutomationNotification"],[301,41,272,2],[301,48,272,2,"_asyncToGenerator2"],[301,66,272,2],[301,67,272,2,"default"],[301,74,272,2],[301,76,275,2],[301,87,275,45,"payload"],[301,94,275,73],[301,96,275,90],[302,10,276,4],[302,14,276,4,"_payload$data"],[302,27,276,4],[302,30,276,37,"payload"],[302,37,276,44],[302,38,276,45,"data"],[302,42,276,49],[303,12,276,12,"automationId"],[303,24,276,24],[303,27,276,24,"_payload$data"],[303,40,276,24],[303,41,276,12,"automationId"],[303,53,276,24],[304,12,276,26,"action"],[304,18,276,32],[304,21,276,32,"_payload$data"],[304,34,276,32],[304,35,276,26,"action"],[304,41,276,32],[305,10,278,4],[305,14,278,8,"action"],[305,20,278,14],[305,25,278,19],[305,34,278,28],[305,38,278,32,"automationId"],[305,50,278,44],[305,52,278,46],[306,12,279,6],[307,12,280,6,"EventLogger"],[307,36,280,17],[307,37,280,18,"debug"],[307,42,280,23],[307,43,280,24],[307,64,280,45],[307,66,280,47],[307,124,280,105],[307,126,280,107,"automationId"],[307,138,280,119],[307,139,280,120],[308,10,281,4],[309,8,282,2],[309,9,282,3],[310,8,282,3],[310,17,275,16,"handleAutomationNotification"],[310,45,275,44,"handleAutomationNotification"],[310,46,275,44,"_x6"],[310,49,275,44],[311,10,275,44],[311,17,275,44,"_handleAutomationNotification"],[311,46,275,44],[311,47,275,44,"apply"],[311,52,275,44],[311,59,275,44,"arguments"],[311,68,275,44],[312,8,275,44],[313,8,275,44],[313,15,275,16,"handleAutomationNotification"],[313,43,275,44],[314,6,275,44],[315,6,284,2],[316,0,285,0],[317,0,286,0],[318,6,284,2],[319,4,284,2],[320,6,284,2,"key"],[320,9,284,2],[321,6,284,2,"value"],[321,11,284,2],[322,8,284,2],[322,12,284,2,"_handleShareNotification"],[322,36,284,2],[322,43,284,2,"_asyncToGenerator2"],[322,61,284,2],[322,62,284,2,"default"],[322,69,284,2],[322,71,287,2],[322,82,287,40,"payload"],[322,89,287,68],[322,91,287,85],[323,10,288,4],[323,14,288,4,"_payload$data2"],[323,28,288,4],[323,31,288,39,"payload"],[323,38,288,46],[323,39,288,47,"data"],[323,43,288,51],[324,12,288,12,"shareUrl"],[324,20,288,20],[324,23,288,20,"_payload$data2"],[324,37,288,20],[324,38,288,12,"shareUrl"],[324,46,288,20],[325,12,288,22,"automationId"],[325,24,288,34],[325,27,288,34,"_payload$data2"],[325,41,288,34],[325,42,288,22,"automationId"],[325,54,288,34],[326,10,290,4],[326,14,290,8,"shareUrl"],[326,22,290,16],[326,24,290,18],[327,12,291,6],[328,12,292,6,"EventLogger"],[328,36,292,17],[328,37,292,18,"debug"],[328,42,292,23],[328,43,292,24],[328,64,292,45],[328,66,292,47],[328,109,292,90],[328,111,292,92,"shareUrl"],[328,119,292,100],[328,120,292,101],[329,10,293,4],[330,8,294,2],[330,9,294,3],[331,8,294,3],[331,17,287,16,"handleShareNotification"],[331,40,287,39,"handleShareNotification"],[331,41,287,39,"_x7"],[331,44,287,39],[332,10,287,39],[332,17,287,39,"_handleShareNotification"],[332,41,287,39],[332,42,287,39,"apply"],[332,47,287,39],[332,54,287,39,"arguments"],[332,63,287,39],[333,8,287,39],[334,8,287,39],[334,15,287,16,"handleShareNotification"],[334,38,287,39],[335,6,287,39],[336,6,296,2],[337,0,297,0],[338,0,298,0],[339,6,296,2],[340,4,296,2],[341,6,296,2,"key"],[341,9,296,2],[342,6,296,2,"value"],[342,11,296,2],[343,8,296,2],[343,12,296,2,"_handleSocialNotification"],[343,37,296,2],[343,44,296,2,"_asyncToGenerator2"],[343,62,296,2],[343,63,296,2,"default"],[343,70,296,2],[343,72,299,2],[343,83,299,41,"payload"],[343,90,299,69],[343,92,299,86],[344,10,300,4],[344,14,300,4,"_payload$data3"],[344,28,300,4],[344,31,300,31,"payload"],[344,38,300,38],[344,39,300,39,"data"],[344,43,300,43],[345,12,300,12,"userId"],[345,18,300,18],[345,21,300,18,"_payload$data3"],[345,35,300,18],[345,36,300,12,"userId"],[345,42,300,18],[346,12,300,20,"action"],[346,18,300,26],[346,21,300,26,"_payload$data3"],[346,35,300,26],[346,36,300,20,"action"],[346,42,300,26],[347,10,302,4,"EventLogger"],[347,34,302,15],[347,35,302,16,"debug"],[347,40,302,21],[347,41,302,22],[347,62,302,43],[347,64,302,45],[347,108,302,89],[347,110,302,91,"action"],[347,116,302,97],[347,118,302,99,"userId"],[347,124,302,105],[347,125,302,106],[348,8,303,2],[348,9,303,3],[349,8,303,3],[349,17,299,16,"handleSocialNotification"],[349,41,299,40,"handleSocialNotification"],[349,42,299,40,"_x8"],[349,45,299,40],[350,10,299,40],[350,17,299,40,"_handleSocialNotification"],[350,42,299,40],[350,43,299,40,"apply"],[350,48,299,40],[350,55,299,40,"arguments"],[350,64,299,40],[351,8,299,40],[352,8,299,40],[352,15,299,16,"handleSocialNotification"],[352,39,299,40],[353,6,299,40],[354,6,305,2],[355,0,306,0],[356,0,307,0],[357,6,305,2],[358,4,305,2],[359,6,305,2,"key"],[359,9,305,2],[360,6,305,2,"value"],[360,11,305,2],[361,8,305,2],[361,12,305,2,"_handleSystemNotification"],[361,37,305,2],[361,44,305,2,"_asyncToGenerator2"],[361,62,305,2],[361,63,305,2,"default"],[361,70,305,2],[361,72,308,2],[361,83,308,41,"payload"],[361,90,308,69],[361,92,308,86],[362,10,309,4],[362,14,309,12,"action"],[362,20,309,18],[362,23,309,23,"payload"],[362,30,309,30],[362,31,309,31,"data"],[362,35,309,35],[362,36,309,12,"action"],[362,42,309,18],[363,10,311,4,"EventLogger"],[363,34,311,15],[363,35,311,16,"debug"],[363,40,311,21],[363,41,311,22],[363,62,311,43],[363,64,311,45],[363,108,311,89],[363,110,311,91,"action"],[363,116,311,97],[363,117,311,98],[364,8,312,2],[364,9,312,3],[365,8,312,3],[365,17,308,16,"handleSystemNotification"],[365,41,308,40,"handleSystemNotification"],[365,42,308,40,"_x9"],[365,45,308,40],[366,10,308,40],[366,17,308,40,"_handleSystemNotification"],[366,42,308,40],[366,43,308,40,"apply"],[366,48,308,40],[366,55,308,40,"arguments"],[366,64,308,40],[367,8,308,40],[368,8,308,40],[368,15,308,16,"handleSystemNotification"],[368,39,308,40],[369,6,308,40],[370,6,314,2],[371,0,315,0],[372,0,316,0],[373,6,314,2],[374,4,314,2],[375,6,314,2,"key"],[375,9,314,2],[376,6,314,2,"value"],[376,11,314,2],[377,8,314,2],[377,12,314,2,"_handleDeepLink"],[377,27,314,2],[377,34,314,2,"_asyncToGenerator2"],[377,52,314,2],[377,53,314,2,"default"],[377,60,314,2],[377,62,317,2],[377,73,317,31,"payload"],[377,80,317,59],[377,82,317,61,"actionIdentifier"],[377,98,317,85],[377,100,317,102],[378,10,317,102],[378,14,317,102,"_this"],[378,19,317,102],[379,10,318,4],[379,14,318,8],[380,12,318,8],[380,16,318,8,"_this$navigationRef2"],[380,36,318,8],[381,12,319,6],[381,16,319,12,"deepLinkAction"],[381,30,319,26],[381,33,319,29],[381,37,319,33],[381,38,319,34,"getDeepLinkAction"],[381,55,319,51],[381,56,319,52,"payload"],[381,63,319,59],[381,65,319,61,"actionIdentifier"],[381,81,319,77],[381,82,319,78],[382,12,321,6],[382,16,321,10],[382,17,321,11,"deepLinkAction"],[382,31,321,25],[382,33,321,27],[383,14,322,8,"EventLogger"],[383,38,322,19],[383,39,322,20,"debug"],[383,44,322,25],[383,45,322,26],[383,66,322,47],[383,68,322,49],[383,128,322,109],[383,129,322,110],[384,14,323,8],[385,12,324,6],[387,12,326,6],[388,12,327,6],[388,16,327,10],[388,20,327,14],[388,21,327,15,"isNavigationReady"],[388,38,327,32],[388,39,327,33],[388,40,327,34],[388,42,327,36],[389,14,328,8],[389,18,328,12],[389,19,328,13,"navigationRef"],[389,32,328,26],[389,33,328,28,"current"],[389,40,328,35],[389,41,328,36,"navigate"],[389,49,328,44],[389,50,328,45,"deepLinkAction"],[389,64,328,59],[389,65,328,60,"screen"],[389,71,328,66],[389,73,328,68,"deepLinkAction"],[389,87,328,82],[389,88,328,83,"params"],[389,94,328,89],[389,95,328,90],[390,14,329,8,"EventLogger"],[390,38,329,19],[390,39,329,20,"debug"],[390,44,329,25],[390,45,329,26],[390,66,329,47],[390,68,329,49],[390,105,329,86],[390,107,329,88,"deepLinkAction"],[390,121,329,102],[390,122,329,103,"screen"],[390,128,329,109],[390,129,329,110],[391,12,330,6],[391,13,330,7],[391,19,330,13],[391,24,330,13,"_this$navigationRef2"],[391,44,330,13],[391,47,330,17],[391,51,330,21],[391,52,330,22,"navigationRef"],[391,65,330,35],[391,78,330,17,"_this$navigationRef2"],[391,98,330,17],[391,99,330,37,"current"],[391,106,330,44],[391,108,330,46],[392,14,331,8],[393,14,332,8,"EventLogger"],[393,38,332,19],[393,39,332,20,"warn"],[393,43,332,24],[393,44,332,25],[393,65,332,46],[393,67,332,48],[393,130,332,111],[393,131,332,112],[394,14,333,8,"setTimeout"],[394,24,333,18],[394,25,333,19],[394,37,333,25],[395,16,334,10],[395,20,334,14,"_this"],[395,25,334,18],[395,26,334,19,"isNavigationReady"],[395,43,334,36],[395,44,334,37],[395,45,334,38],[395,47,334,40],[396,18,335,12,"_this"],[396,23,335,16],[396,24,335,17,"navigationRef"],[396,37,335,30],[396,38,335,32,"current"],[396,45,335,39],[396,46,335,40,"navigate"],[396,54,335,48],[396,55,335,49,"deepLinkAction"],[396,69,335,63],[396,70,335,64,"screen"],[396,76,335,70],[396,78,335,72,"deepLinkAction"],[396,92,335,86],[396,93,335,87,"params"],[396,99,335,93],[396,100,335,94],[397,18,336,12,"EventLogger"],[397,42,336,23],[397,43,336,24,"debug"],[397,48,336,29],[397,49,336,30],[397,70,336,51],[397,72,336,53],[397,120,336,101],[397,122,336,103,"deepLinkAction"],[397,136,336,117],[397,137,336,118,"screen"],[397,143,336,124],[397,144,336,125],[398,16,337,10],[398,17,337,11],[398,23,337,17],[399,18,338,12],[400,18,339,12,"_this"],[400,23,339,16],[400,24,339,17,"queueNavigationAction"],[400,45,339,38],[400,46,339,39,"payload"],[400,53,339,46],[400,55,339,48,"deepLinkAction"],[400,69,339,62],[400,70,339,63],[401,16,340,10],[402,14,341,8],[402,15,341,9],[402,17,341,11],[402,20,341,14],[402,21,341,15],[403,12,342,6],[403,13,342,7],[403,19,342,13],[404,14,343,8],[405,14,344,8],[405,18,344,12],[405,19,344,13,"queueNavigationAction"],[405,40,344,34],[405,41,344,35,"payload"],[405,48,344,42],[405,50,344,44,"deepLinkAction"],[405,64,344,58],[405,65,344,59],[406,14,345,8,"EventLogger"],[406,38,345,19],[406,39,345,20,"debug"],[406,44,345,25],[406,45,345,26],[406,66,345,47],[406,68,345,49],[406,120,345,101],[406,122,345,103,"deepLinkAction"],[406,136,345,117],[406,137,345,118,"screen"],[406,143,345,124],[406,144,345,125],[407,12,346,6],[408,10,348,4],[408,11,348,5],[408,12,348,6],[408,19,348,13,"error"],[408,24,348,18],[408,26,348,20],[409,12,349,6,"EventLogger"],[409,36,349,17],[409,37,349,18,"error"],[409,42,349,23],[409,43,349,24],[409,64,349,45],[409,66,349,47],[409,117,349,98],[409,119,349,100,"error"],[409,124,349,114],[409,125,349,115],[410,10,350,4],[411,8,351,2],[411,9,351,3],[412,8,351,3],[412,17,317,16,"handleDeepLink"],[412,31,317,30,"handleDeepLink"],[412,32,317,30,"_x0"],[412,35,317,30],[412,37,317,30,"_x1"],[412,40,317,30],[413,10,317,30],[413,17,317,30,"_handleDeepLink"],[413,32,317,30],[413,33,317,30,"apply"],[413,38,317,30],[413,45,317,30,"arguments"],[413,54,317,30],[414,8,317,30],[415,8,317,30],[415,15,317,16,"handleDeepLink"],[415,29,317,30],[416,6,317,30],[417,6,353,2],[418,0,354,0],[419,0,355,0],[420,6,353,2],[421,4,353,2],[422,6,353,2,"key"],[422,9,353,2],[423,6,353,2,"value"],[423,11,353,2],[424,8,353,2],[424,12,353,2,"_queueNavigationAction"],[424,34,353,2],[424,41,353,2,"_asyncToGenerator2"],[424,59,353,2],[424,60,353,2,"default"],[424,67,353,2],[424,69,356,2],[424,80,356,38,"payload"],[424,87,356,66],[424,89,356,68,"deepLinkAction"],[424,103,356,98],[424,105,356,115],[425,10,357,4],[425,14,357,8],[425,15,357,9,"notificationQueue"],[425,32,357,26],[425,33,357,27,"push"],[425,37,357,31],[425,38,357,32],[426,12,358,6,"id"],[426,14,358,8],[426,22,358,16],[426,26,358,20],[426,27,358,21,"generateNotificationId"],[426,49,358,43],[426,50,358,44],[426,51,358,45],[427,12,359,6,"type"],[427,16,359,10],[427,18,359,12,"payload"],[427,25,359,19],[427,26,359,20,"type"],[427,30,359,24],[428,12,360,6,"title"],[428,17,360,11],[428,19,360,13,"payload"],[428,26,360,20],[428,27,360,21,"title"],[428,32,360,26],[429,12,361,6,"body"],[429,16,361,10],[429,18,361,12,"payload"],[429,25,361,19],[429,26,361,20,"body"],[429,30,361,24],[430,12,362,6,"data"],[430,16,362,10],[430,18,362,10,"Object"],[430,24,362,10],[430,25,362,10,"assign"],[430,31,362,10],[430,36,362,17,"payload"],[430,43,362,24],[430,44,362,25,"data"],[430,48,362,29],[431,14,362,31,"deepLinkAction"],[431,28,362,45],[431,30,362,31,"deepLinkAction"],[432,12,362,45],[432,14,362,47],[433,12,363,6,"read"],[433,16,363,10],[433,18,363,12],[433,23,363,17],[434,12,364,6,"createdAt"],[434,21,364,15],[434,23,364,17],[434,27,364,21,"Date"],[434,31,364,25],[434,32,364,26],[434,33,364,27],[434,34,364,28,"toISOString"],[434,45,364,39],[434,46,364,40],[434,47,364,41],[435,12,365,6,"receivedAt"],[435,22,365,16],[435,24,365,18],[435,28,365,22,"Date"],[435,32,365,26],[435,33,365,27],[435,34,365,28],[435,35,365,29,"toISOString"],[435,46,365,40],[435,47,365,41],[436,10,366,4],[436,11,366,5],[436,12,366,6],[437,8,367,2],[437,9,367,3],[438,8,367,3],[438,17,356,16,"queueNavigationAction"],[438,38,356,37,"queueNavigationAction"],[438,39,356,37,"_x10"],[438,43,356,37],[438,45,356,37,"_x11"],[438,49,356,37],[439,10,356,37],[439,17,356,37,"_queueNavigationAction"],[439,39,356,37],[439,40,356,37,"apply"],[439,45,356,37],[439,52,356,37,"arguments"],[439,61,356,37],[440,8,356,37],[441,8,356,37],[441,15,356,16,"queueNavigationAction"],[441,36,356,37],[442,6,356,37],[443,6,369,2],[444,0,370,0],[445,0,371,0],[446,6,369,2],[447,4,369,2],[448,6,369,2,"key"],[448,9,369,2],[449,6,369,2,"value"],[449,11,369,2],[449,13,372,2],[449,22,372,10,"getDeepLinkAction"],[449,39,372,27,"getDeepLinkAction"],[449,40,372,28,"payload"],[449,47,372,56],[449,49,372,58,"actionIdentifier"],[449,65,372,82],[449,67,372,107],[450,8,373,4],[450,12,373,12,"type"],[450,16,373,16],[450,19,373,27,"payload"],[450,26,373,34],[450,27,373,12,"type"],[450,31,373,16],[451,10,373,18,"data"],[451,14,373,22],[451,17,373,27,"payload"],[451,24,373,34],[451,25,373,18,"data"],[451,29,373,22],[452,8,375,4],[452,16,375,12,"type"],[452,20,375,16],[453,10,376,6],[453,15,376,11],[453,27,376,23],[454,12,377,8],[454,16,377,12,"actionIdentifier"],[454,32,377,28],[454,37,377,33],[454,43,377,39],[454,47,377,43,"data"],[454,51,377,47],[454,52,377,48,"automationId"],[454,64,377,60],[454,66,377,62],[455,14,378,10],[455,21,378,17],[456,16,379,12,"screen"],[456,22,379,18],[456,24,379,20],[456,43,379,39],[457,16,380,12,"params"],[457,22,380,18],[457,24,380,20],[458,18,380,22,"automationId"],[458,30,380,34],[458,32,380,36,"data"],[458,36,380,40],[458,37,380,41,"automationId"],[459,16,380,54],[460,14,381,10],[460,15,381,11],[461,12,382,8],[462,12,383,8],[463,10,385,6],[463,15,385,11],[463,22,385,18],[464,12,386,8],[464,16,386,12,"actionIdentifier"],[464,32,386,28],[464,37,386,33],[464,43,386,39],[464,47,386,43,"data"],[464,51,386,47],[464,52,386,48,"shareUrl"],[464,60,386,56],[464,62,386,58],[465,14,387,10],[466,14,388,10],[466,18,388,16,"shareMatch"],[466,28,388,26],[466,31,388,29,"data"],[466,35,388,33],[466,36,388,34,"shareUrl"],[466,44,388,42],[466,45,388,43,"match"],[466,50,388,48],[466,51,388,49],[466,70,388,68],[466,71,388,69],[467,14,389,10],[467,18,389,14,"shareMatch"],[467,28,389,24],[467,30,389,26],[468,16,390,12],[468,23,390,19],[469,18,391,14,"screen"],[469,24,391,20],[469,26,391,22],[469,44,391,40],[470,18,392,14,"params"],[470,24,392,20],[470,26,392,22],[471,20,392,24,"publicId"],[471,28,392,32],[471,30,392,34,"shareMatch"],[471,40,392,44],[471,41,392,45],[471,42,392,46],[472,18,392,48],[473,16,393,12],[473,17,393,13],[474,14,394,10],[475,12,395,8],[476,12,396,8],[477,10,398,6],[477,15,398,11],[477,23,398,19],[478,12,399,8],[478,16,399,12,"actionIdentifier"],[478,32,399,28],[478,37,399,33],[478,43,399,39],[478,47,399,43,"data"],[478,51,399,47],[478,52,399,48,"userId"],[478,58,399,54],[478,60,399,56],[479,14,400,10],[479,21,400,17],[480,16,401,12,"screen"],[480,22,401,18],[480,24,401,20],[480,33,401,29],[481,16,402,12,"params"],[481,22,402,18],[481,24,402,20],[482,18,402,22,"userId"],[482,24,402,28],[482,26,402,30,"data"],[482,30,402,34],[482,31,402,35,"userId"],[483,16,402,42],[484,14,403,10],[484,15,403,11],[485,12,404,8],[486,12,405,8],[487,10,407,6],[487,15,407,11],[487,23,407,19],[488,12,408,8],[488,16,408,12,"actionIdentifier"],[488,32,408,28],[488,37,408,33],[488,43,408,39],[488,45,408,41],[489,14,409,10],[489,21,409,17],[490,16,410,12,"screen"],[490,22,410,18],[490,24,410,20],[490,34,410,30],[491,16,411,12,"params"],[491,22,411,18],[491,24,411,20],[491,25,411,21],[492,14,412,10],[492,15,412,11],[493,12,413,8],[494,12,414,8],[495,8,415,4],[496,8,417,4],[496,15,417,11],[496,19,417,15],[497,6,418,2],[499,6,420,2],[500,0,421,0],[501,0,422,0],[502,4,420,2],[503,6,420,2,"key"],[503,9,420,2],[504,6,420,2,"value"],[504,11,420,2],[505,8,420,2],[505,12,420,2,"_processNotificationQueue"],[505,37,420,2],[505,44,420,2,"_asyncToGenerator2"],[505,62,420,2],[505,63,420,2,"default"],[505,70,420,2],[505,72,423,2],[505,85,423,58],[506,10,424,4],[506,14,424,8],[507,12,425,6],[507,16,425,10],[507,20,425,14],[507,21,425,15,"notificationQueue"],[507,38,425,32],[507,39,425,33,"length"],[507,45,425,39],[507,50,425,44],[507,51,425,45],[507,55,425,49],[507,56,425,50],[507,60,425,54],[507,61,425,55,"isNavigationReady"],[507,78,425,72],[507,79,425,73],[507,80,425,74],[507,82,425,76],[508,14,426,8],[509,12,427,6],[510,12,429,6],[510,17,429,11],[510,21,429,17,"notification"],[510,33,429,29],[510,37,429,33],[510,41,429,37],[510,42,429,38,"notificationQueue"],[510,59,429,55],[510,61,429,57],[511,14,430,8],[511,18,430,14,"deepLinkAction"],[511,32,430,28],[511,35,430,31,"notification"],[511,47,430,43],[511,48,430,44,"data"],[511,52,430,48],[511,53,430,49,"deepLinkAction"],[511,67,430,81],[512,14,431,8],[512,18,431,12,"deepLinkAction"],[512,32,431,26],[512,34,431,28],[513,16,432,10],[513,20,432,14],[513,21,432,15,"navigationRef"],[513,34,432,28],[513,35,432,30,"current"],[513,42,432,37],[513,43,432,38,"navigate"],[513,51,432,46],[513,52,432,47,"deepLinkAction"],[513,66,432,61],[513,67,432,62,"screen"],[513,73,432,68],[513,75,432,70,"deepLinkAction"],[513,89,432,84],[513,90,432,85,"params"],[513,96,432,91],[513,97,432,92],[514,16,433,10,"EventLogger"],[514,40,433,21],[514,41,433,22,"debug"],[514,46,433,27],[514,47,433,28],[514,68,433,49],[514,70,433,51],[514,122,433,103],[514,124,433,105,"deepLinkAction"],[514,138,433,119],[514,139,433,120,"screen"],[514,145,433,126],[514,146,433,127],[515,14,434,8],[516,12,435,6],[517,12,437,6],[517,16,437,10],[517,17,437,11,"notificationQueue"],[517,34,437,28],[517,37,437,31],[517,39,437,33],[518,10,439,4],[518,11,439,5],[518,12,439,6],[518,19,439,13,"error"],[518,24,439,18],[518,26,439,20],[519,12,440,6,"EventLogger"],[519,36,440,17],[519,37,440,18,"error"],[519,42,440,23],[519,43,440,24],[519,64,440,45],[519,66,440,47],[519,127,440,108],[519,129,440,110,"error"],[519,134,440,124],[519,135,440,125],[520,10,441,4],[521,8,442,2],[521,9,442,3],[522,8,442,3],[522,17,423,16,"processNotificationQueue"],[522,41,423,40,"processNotificationQueue"],[522,42,423,40],[523,10,423,40],[523,17,423,40,"_processNotificationQueue"],[523,42,423,40],[523,43,423,40,"apply"],[523,48,423,40],[523,55,423,40,"arguments"],[523,64,423,40],[524,8,423,40],[525,8,423,40],[525,15,423,16,"processNotificationQueue"],[525,39,423,40],[526,6,423,40],[527,6,444,2],[528,0,445,0],[529,0,446,0],[530,6,444,2],[531,4,444,2],[532,6,444,2,"key"],[532,9,444,2],[533,6,444,2,"value"],[533,11,444,2],[533,13,447,2],[533,22,447,10,"setupNotificationListeners"],[533,48,447,36,"setupNotificationListeners"],[533,49,447,36],[533,51,447,45],[534,8,448,4],[535,8,449,4,"Notifications"],[535,21,449,17],[535,22,449,18,"addNotificationReceivedListener"],[535,53,449,49],[535,54,450,6],[535,58,450,10],[535,59,450,11,"handleNotification"],[535,77,450,29],[535,78,450,30,"bind"],[535,82,450,34],[535,83,450,35],[535,87,450,39],[535,88,451,4],[535,89,451,5],[537,8,453,4],[538,8,454,4,"Notifications"],[538,21,454,17],[538,22,454,18,"addNotificationResponseReceivedListener"],[538,61,454,57],[538,62,455,6],[538,66,455,10],[538,67,455,11,"handleNotificationResponse"],[538,93,455,37],[538,94,455,38,"bind"],[538,98,455,42],[538,99,455,43],[538,103,455,47],[538,104,456,4],[538,105,456,5],[539,8,458,4,"EventLogger"],[539,32,458,15],[539,33,458,16,"debug"],[539,38,458,21],[539,39,458,22],[539,60,458,43],[539,62,458,45],[539,115,458,98],[539,116,458,99],[540,6,459,2],[542,6,461,2],[543,0,462,0],[544,0,463,0],[545,4,461,2],[546,6,461,2,"key"],[546,9,461,2],[547,6,461,2,"value"],[547,11,461,2],[548,8,461,2],[548,12,461,2,"_generateNotificationId"],[548,35,461,2],[548,42,461,2,"_asyncToGenerator2"],[548,60,461,2],[548,61,461,2,"default"],[548,68,461,2],[548,70,464,2],[548,83,464,58],[549,10,465,4],[549,14,465,8],[550,12,466,6],[550,16,466,12,"lastId"],[550,22,466,18],[550,31,466,27,"AsyncStorage"],[550,52,466,39],[550,53,466,40,"getItem"],[550,60,466,47],[550,61,466,48,"NotificationHandler"],[550,80,466,67],[550,81,466,68,"STORAGE_KEYS"],[550,93,466,80],[550,94,466,81,"LAST_NOTIFICATION_ID"],[550,114,466,101],[550,115,466,102],[551,12,467,6],[551,16,467,12,"newId"],[551,21,467,17],[551,24,467,20,"lastId"],[551,30,467,26],[551,33,467,29,"parseInt"],[551,41,467,37],[551,42,467,38,"lastId"],[551,48,467,44],[551,50,467,46],[551,52,467,48],[551,53,467,49],[551,56,467,52],[551,57,467,53],[551,60,467,56],[551,61,467,57],[552,12,469,6],[552,18,469,12,"AsyncStorage"],[552,39,469,24],[552,40,469,25,"setItem"],[552,47,469,32],[552,48,470,8,"NotificationHandler"],[552,67,470,27],[552,68,470,28,"STORAGE_KEYS"],[552,80,470,40],[552,81,470,41,"LAST_NOTIFICATION_ID"],[552,101,470,61],[552,103,471,8,"newId"],[552,108,471,13],[552,109,471,14,"toString"],[552,117,471,22],[552,118,471,23],[552,119,472,6],[552,120,472,7],[553,12,474,6],[553,19,474,13],[553,35,474,29,"newId"],[553,40,474,34],[553,44,474,38,"Date"],[553,48,474,42],[553,49,474,43,"now"],[553,52,474,46],[553,53,474,47],[553,54,474,48],[553,56,474,50],[554,10,476,4],[554,11,476,5],[554,12,476,6],[554,19,476,13,"error"],[554,24,476,18],[554,26,476,20],[555,12,477,6,"EventLogger"],[555,36,477,17],[555,37,477,18,"error"],[555,42,477,23],[555,43,477,24],[555,64,477,45],[555,66,477,47],[555,125,477,106],[555,127,477,108,"error"],[555,132,477,122],[555,133,477,123],[556,12,478,6],[556,19,478,13],[556,35,478,29,"Date"],[556,39,478,33],[556,40,478,34,"now"],[556,43,478,37],[556,44,478,38],[556,45,478,39],[556,49,478,43,"Math"],[556,53,478,47],[556,54,478,48,"random"],[556,60,478,54],[556,61,478,55],[556,62,478,56],[556,63,478,57,"toString"],[556,71,478,65],[556,72,478,66],[556,74,478,68],[556,75,478,69],[556,76,478,70,"substr"],[556,82,478,76],[556,83,478,77],[556,84,478,78],[556,86,478,80],[556,87,478,81],[556,88,478,82],[556,90,478,84],[557,10,479,4],[558,8,480,2],[558,9,480,3],[559,8,480,3],[559,17,464,16,"generateNotificationId"],[559,39,464,38,"generateNotificationId"],[559,40,464,38],[560,10,464,38],[560,17,464,38,"_generateNotificationId"],[560,40,464,38],[560,41,464,38,"apply"],[560,46,464,38],[560,53,464,38,"arguments"],[560,62,464,38],[561,8,464,38],[562,8,464,38],[562,15,464,16,"generateNotificationId"],[562,37,464,38],[563,6,464,38],[564,6,482,2],[565,0,483,0],[566,0,484,0],[567,6,482,2],[568,4,482,2],[569,6,482,2,"key"],[569,9,482,2],[570,6,482,2,"value"],[570,11,482,2],[571,8,482,2],[571,12,482,2,"_incrementUnreadCount"],[571,33,482,2],[571,40,482,2,"_asyncToGenerator2"],[571,58,482,2],[571,59,482,2,"default"],[571,66,482,2],[571,68,485,2],[571,81,485,54],[572,10,486,4],[572,14,486,8],[573,12,487,6],[573,16,487,12,"current"],[573,23,487,19],[573,32,487,28],[573,36,487,32],[573,37,487,33,"getUnreadCount"],[573,51,487,47],[573,52,487,48],[573,53,487,49],[574,12,488,6],[574,16,488,12,"newCount"],[574,24,488,20],[574,27,488,23,"current"],[574,34,488,30],[574,37,488,33],[574,38,488,34],[575,12,490,6],[575,18,490,12,"AsyncStorage"],[575,39,490,24],[575,40,490,25,"setItem"],[575,47,490,32],[575,48,491,8,"NotificationHandler"],[575,67,491,27],[575,68,491,28,"STORAGE_KEYS"],[575,80,491,40],[575,81,491,41,"UNREAD_COUNT"],[575,93,491,53],[575,95,492,8,"newCount"],[575,103,492,16],[575,104,492,17,"toString"],[575,112,492,25],[575,113,492,26],[575,114,493,6],[575,115,493,7],[577,12,495,6],[578,12,496,6],[578,18,496,12,"NotificationService"],[578,46,496,31],[578,47,496,32,"setBadgeCount"],[578,60,496,45],[578,61,496,46,"newCount"],[578,69,496,54],[578,70,496,55],[579,10,498,4],[579,11,498,5],[579,12,498,6],[579,19,498,13,"error"],[579,24,498,18],[579,26,498,20],[580,12,499,6,"EventLogger"],[580,36,499,17],[580,37,499,18,"error"],[580,42,499,23],[580,43,499,24],[580,64,499,45],[580,66,499,47],[580,123,499,104],[580,125,499,106,"error"],[580,130,499,120],[580,131,499,121],[581,10,500,4],[582,8,501,2],[582,9,501,3],[583,8,501,3],[583,17,485,16,"incrementUnreadCount"],[583,37,485,36,"incrementUnreadCount"],[583,38,485,36],[584,10,485,36],[584,17,485,36,"_incrementUnreadCount"],[584,38,485,36],[584,39,485,36,"apply"],[584,44,485,36],[584,51,485,36,"arguments"],[584,60,485,36],[585,8,485,36],[586,8,485,36],[586,15,485,16,"incrementUnreadCount"],[586,35,485,36],[587,6,485,36],[588,6,503,2],[589,0,504,0],[590,0,505,0],[591,6,503,2],[592,4,503,2],[593,6,503,2,"key"],[593,9,503,2],[594,6,503,2,"value"],[594,11,503,2],[595,8,503,2],[595,12,503,2,"_updateUnreadCount"],[595,30,503,2],[595,37,503,2,"_asyncToGenerator2"],[595,55,503,2],[595,56,503,2,"default"],[595,63,503,2],[595,65,506,2],[595,78,506,51],[596,10,507,4],[596,14,507,8],[597,12,508,6],[597,16,508,12,"notifications"],[597,29,508,25],[597,38,508,34],[597,42,508,38],[597,43,508,39,"getStoredNotifications"],[597,65,508,61],[597,66,508,62],[597,67,508,63],[598,12,509,6],[598,16,509,12,"unreadCount"],[598,27,509,23],[598,30,509,26,"notifications"],[598,43,509,39],[598,44,509,40,"filter"],[598,50,509,46],[598,51,509,47],[598,61,509,47,"n"],[598,62,509,48],[599,14,509,48],[599,21,509,52],[599,22,509,53,"n"],[599,23,509,54],[599,24,509,55,"read"],[599,28,509,59],[600,12,509,59],[600,14,509,60],[600,15,509,61,"length"],[600,21,509,67],[601,12,511,6],[601,18,511,12,"AsyncStorage"],[601,39,511,24],[601,40,511,25,"setItem"],[601,47,511,32],[601,48,512,8,"NotificationHandler"],[601,67,512,27],[601,68,512,28,"STORAGE_KEYS"],[601,80,512,40],[601,81,512,41,"UNREAD_COUNT"],[601,93,512,53],[601,95,513,8,"unreadCount"],[601,106,513,19],[601,107,513,20,"toString"],[601,115,513,28],[601,116,513,29],[601,117,514,6],[601,118,514,7],[603,12,516,6],[604,12,517,6],[604,18,517,12,"NotificationService"],[604,46,517,31],[604,47,517,32,"setBadgeCount"],[604,60,517,45],[604,61,517,46,"unreadCount"],[604,72,517,57],[604,73,517,58],[605,10,519,4],[605,11,519,5],[605,12,519,6],[605,19,519,13,"error"],[605,24,519,18],[605,26,519,20],[606,12,520,6,"EventLogger"],[606,36,520,17],[606,37,520,18,"error"],[606,42,520,23],[606,43,520,24],[606,64,520,45],[606,66,520,47],[606,120,520,101],[606,122,520,103,"error"],[606,127,520,117],[606,128,520,118],[607,10,521,4],[608,8,522,2],[608,9,522,3],[609,8,522,3],[609,17,506,16,"updateUnreadCount"],[609,34,506,33,"updateUnreadCount"],[609,35,506,33],[610,10,506,33],[610,17,506,33,"_updateUnreadCount"],[610,35,506,33],[610,36,506,33,"apply"],[610,41,506,33],[610,48,506,33,"arguments"],[610,57,506,33],[611,8,506,33],[612,8,506,33],[612,15,506,16,"updateUnreadCount"],[612,32,506,33],[613,6,506,33],[614,6,524,2],[615,0,525,0],[616,0,526,0],[617,6,524,2],[618,4,524,2],[619,6,524,2,"key"],[619,9,524,2],[620,6,524,2,"value"],[620,11,524,2],[621,8,524,2],[621,12,524,2,"_getUnreadCount"],[621,27,524,2],[621,34,524,2,"_asyncToGenerator2"],[621,52,524,2],[621,53,524,2,"default"],[621,60,524,2],[621,62,527,2],[621,75,527,49],[622,10,528,4],[622,14,528,8],[623,12,529,6],[623,16,529,12,"stored"],[623,22,529,18],[623,31,529,27,"AsyncStorage"],[623,52,529,39],[623,53,529,40,"getItem"],[623,60,529,47],[623,61,529,48,"NotificationHandler"],[623,80,529,67],[623,81,529,68,"STORAGE_KEYS"],[623,93,529,80],[623,94,529,81,"UNREAD_COUNT"],[623,106,529,93],[623,107,529,94],[624,12,530,6],[624,19,530,13,"stored"],[624,25,530,19],[624,28,530,22,"parseInt"],[624,36,530,30],[624,37,530,31,"stored"],[624,43,530,37],[624,45,530,39],[624,47,530,41],[624,48,530,42],[624,51,530,45],[624,52,530,46],[625,10,531,4],[625,11,531,5],[625,12,531,6],[625,19,531,13,"error"],[625,24,531,18],[625,26,531,20],[626,12,532,6,"EventLogger"],[626,36,532,17],[626,37,532,18,"error"],[626,42,532,23],[626,43,532,24],[626,64,532,45],[626,66,532,47],[626,117,532,98],[626,119,532,100,"error"],[626,124,532,114],[626,125,532,115],[627,12,533,6],[627,19,533,13],[627,20,533,14],[628,10,534,4],[629,8,535,2],[629,9,535,3],[630,8,535,3],[630,17,527,15,"getUnreadCount"],[630,31,527,29,"getUnreadCount"],[630,32,527,29],[631,10,527,29],[631,17,527,29,"_getUnreadCount"],[631,32,527,29],[631,33,527,29,"apply"],[631,38,527,29],[631,45,527,29,"arguments"],[631,54,527,29],[632,8,527,29],[633,8,527,29],[633,15,527,15,"getUnreadCount"],[633,29,527,29],[634,6,527,29],[635,6,537,2],[636,0,538,0],[637,0,539,0],[638,6,537,2],[639,4,537,2],[640,6,537,2,"key"],[640,9,537,2],[641,6,537,2,"value"],[641,11,537,2],[642,8,537,2],[642,12,537,2,"_clearAllNotifications"],[642,34,537,2],[642,41,537,2,"_asyncToGenerator2"],[642,59,537,2],[642,60,537,2,"default"],[642,67,537,2],[642,69,540,2],[642,82,540,54],[643,10,541,4],[643,14,541,8],[644,12,542,6],[644,18,542,12,"AsyncStorage"],[644,39,542,24],[644,40,542,25,"multiRemove"],[644,51,542,36],[644,52,542,37],[644,53,543,8,"NotificationHandler"],[644,72,543,27],[644,73,543,28,"STORAGE_KEYS"],[644,85,543,40],[644,86,543,41,"NOTIFICATION_HISTORY"],[644,106,543,61],[644,108,544,8,"NotificationHandler"],[644,127,544,27],[644,128,544,28,"STORAGE_KEYS"],[644,140,544,40],[644,141,544,41,"UNREAD_COUNT"],[644,153,544,53],[644,154,545,7],[644,155,545,8],[645,12,547,6],[645,18,547,12,"NotificationService"],[645,46,547,31],[645,47,547,32,"clearBadge"],[645,57,547,42],[645,58,547,43],[645,59,547,44],[646,12,549,6,"EventLogger"],[646,36,549,17],[646,37,549,18,"debug"],[646,42,549,23],[646,43,549,24],[646,64,549,45],[646,66,549,47],[646,115,549,96],[646,116,549,97],[647,10,551,4],[647,11,551,5],[647,12,551,6],[647,19,551,13,"error"],[647,24,551,18],[647,26,551,20],[648,12,552,6,"EventLogger"],[648,36,552,17],[648,37,552,18,"error"],[648,42,552,23],[648,43,552,24],[648,64,552,45],[648,66,552,47],[648,120,552,101],[648,122,552,103,"error"],[648,127,552,117],[648,128,552,118],[649,10,553,4],[650,8,554,2],[650,9,554,3],[651,8,554,3],[651,17,540,15,"clearAllNotifications"],[651,38,540,36,"clearAllNotifications"],[651,39,540,36],[652,10,540,36],[652,17,540,36,"_clearAllNotifications"],[652,39,540,36],[652,40,540,36,"apply"],[652,45,540,36],[652,52,540,36,"arguments"],[652,61,540,36],[653,8,540,36],[654,8,540,36],[654,15,540,15,"clearAllNotifications"],[654,36,540,36],[655,6,540,36],[656,6,556,2],[657,0,557,0],[658,0,558,0],[659,6,556,2],[660,4,556,2],[661,6,556,2,"key"],[661,9,556,2],[662,6,556,2,"value"],[662,11,556,2],[663,8,556,2],[663,12,556,2,"_markAllAsRead"],[663,26,556,2],[663,33,556,2,"_asyncToGenerator2"],[663,51,556,2],[663,52,556,2,"default"],[663,59,556,2],[663,61,559,2],[663,74,559,46],[664,10,560,4],[664,14,560,8],[665,12,561,6],[665,16,561,12,"notifications"],[665,29,561,25],[665,38,561,34],[665,42,561,38],[665,43,561,39,"getStoredNotifications"],[665,65,561,61],[665,66,561,62],[665,67,561,63],[666,12,562,6],[666,16,562,12,"updated"],[666,23,562,19],[666,26,562,22,"notifications"],[666,39,562,35],[666,40,562,36,"map"],[666,43,562,39],[666,44,562,40],[666,54,562,40,"n"],[666,55,562,41],[667,14,562,41],[667,21,562,41,"Object"],[667,27,562,41],[667,28,562,41,"assign"],[667,34,562,41],[667,39,562,51,"n"],[667,40,562,52],[668,16,562,54,"read"],[668,20,562,58],[668,22,562,60],[669,14,562,64],[670,12,562,64],[670,13,562,67],[670,14,562,68],[671,12,564,6],[671,18,564,12,"AsyncStorage"],[671,39,564,24],[671,40,564,25,"setItem"],[671,47,564,32],[671,48,565,8,"NotificationHandler"],[671,67,565,27],[671,68,565,28,"STORAGE_KEYS"],[671,80,565,40],[671,81,565,41,"NOTIFICATION_HISTORY"],[671,101,565,61],[671,103,566,8,"JSON"],[671,107,566,12],[671,108,566,13,"stringify"],[671,117,566,22],[671,118,566,23,"updated"],[671,125,566,30],[671,126,567,6],[671,127,567,7],[672,12,569,6],[672,18,569,12,"AsyncStorage"],[672,39,569,24],[672,40,569,25,"setItem"],[672,47,569,32],[672,48,570,8,"NotificationHandler"],[672,67,570,27],[672,68,570,28,"STORAGE_KEYS"],[672,80,570,40],[672,81,570,41,"UNREAD_COUNT"],[672,93,570,53],[672,95,571,8],[672,98,572,6],[672,99,572,7],[673,12,574,6],[673,18,574,12,"NotificationService"],[673,46,574,31],[673,47,574,32,"clearBadge"],[673,57,574,42],[673,58,574,43],[673,59,574,44],[674,12,576,6,"EventLogger"],[674,36,576,17],[674,37,576,18,"debug"],[674,42,576,23],[674,43,576,24],[674,64,576,45],[674,66,576,47],[674,122,576,103],[674,123,576,104],[675,10,578,4],[675,11,578,5],[675,12,578,6],[675,19,578,13,"error"],[675,24,578,18],[675,26,578,20],[676,12,579,6,"EventLogger"],[676,36,579,17],[676,37,579,18,"error"],[676,42,579,23],[676,43,579,24],[676,64,579,45],[676,66,579,47],[676,117,579,98],[676,119,579,100,"error"],[676,124,579,114],[676,125,579,115],[677,10,580,4],[678,8,581,2],[678,9,581,3],[679,8,581,3],[679,17,559,15,"markAllAsRead"],[679,30,559,28,"markAllAsRead"],[679,31,559,28],[680,10,559,28],[680,17,559,28,"_markAllAsRead"],[680,31,559,28],[680,32,559,28,"apply"],[680,37,559,28],[680,44,559,28,"arguments"],[680,53,559,28],[681,8,559,28],[682,8,559,28],[682,15,559,15,"markAllAsRead"],[682,28,559,28],[683,6,559,28],[684,6,583,2],[685,0,584,0],[686,0,585,0],[687,6,583,2],[688,4,583,2],[689,6,583,2,"key"],[689,9,583,2],[690,6,583,2,"value"],[690,11,583,2],[691,8,583,2],[691,12,583,2,"_trackNotificationReceived"],[691,38,583,2],[691,45,583,2,"_asyncToGenerator2"],[691,63,583,2],[691,64,583,2,"default"],[691,71,583,2],[691,73,586,2],[691,84,586,42,"payload"],[691,91,586,70],[691,93,586,87],[692,10,587,4],[692,14,587,8],[693,12,588,6],[694,12,589,6,"EventLogger"],[694,36,589,17],[694,37,589,18,"debug"],[694,42,589,23],[694,43,589,24],[694,64,589,45],[694,66,589,47],[694,122,589,103],[694,124,589,105,"payload"],[694,131,589,112],[694,132,589,113,"type"],[694,136,589,117],[694,137,589,118],[695,10,590,4],[695,11,590,5],[695,12,590,6],[695,19,590,13,"error"],[695,24,590,18],[695,26,590,20],[696,12,591,6,"EventLogger"],[696,36,591,17],[696,37,591,18,"error"],[696,42,591,23],[696,43,591,24],[696,64,591,45],[696,66,591,47],[696,128,591,109],[696,130,591,111,"error"],[696,135,591,125],[696,136,591,126],[697,10,592,4],[698,8,593,2],[698,9,593,3],[699,8,593,3],[699,17,586,16,"trackNotificationReceived"],[699,42,586,41,"trackNotificationReceived"],[699,43,586,41,"_x12"],[699,47,586,41],[700,10,586,41],[700,17,586,41,"_trackNotificationReceived"],[700,43,586,41],[700,44,586,41,"apply"],[700,49,586,41],[700,56,586,41,"arguments"],[700,65,586,41],[701,8,586,41],[702,8,586,41],[702,15,586,16,"trackNotificationReceived"],[702,40,586,41],[703,6,586,41],[704,6,595,2],[705,0,596,0],[706,0,597,0],[707,6,595,2],[708,4,595,2],[709,6,595,2,"key"],[709,9,595,2],[710,6,595,2,"value"],[710,11,595,2],[711,8,595,2],[711,12,595,2,"_trackNotificationOpened"],[711,36,595,2],[711,43,595,2,"_asyncToGenerator2"],[711,61,595,2],[711,62,595,2,"default"],[711,69,595,2],[711,71,598,2],[711,82,598,40,"payload"],[711,89,598,68],[711,91,598,70,"actionIdentifier"],[711,107,598,94],[711,109,598,111],[712,10,599,4],[712,14,599,8],[713,12,600,6],[714,12,601,6,"EventLogger"],[714,36,601,17],[714,37,601,18,"debug"],[714,42,601,23],[714,43,601,24],[714,64,601,45],[714,66,601,47],[714,120,601,101],[714,122,601,103,"payload"],[714,129,601,110],[714,130,601,111,"type"],[714,134,601,115],[714,136,601,117,"actionIdentifier"],[714,152,601,133],[714,153,601,134],[715,10,602,4],[715,11,602,5],[715,12,602,6],[715,19,602,13,"error"],[715,24,602,18],[715,26,602,20],[716,12,603,6,"EventLogger"],[716,36,603,17],[716,37,603,18,"error"],[716,42,603,23],[716,43,603,24],[716,64,603,45],[716,66,603,47],[716,126,603,107],[716,128,603,109,"error"],[716,133,603,123],[716,134,603,124],[717,10,604,4],[718,8,605,2],[718,9,605,3],[719,8,605,3],[719,17,598,16,"trackNotificationOpened"],[719,40,598,39,"trackNotificationOpened"],[719,41,598,39,"_x13"],[719,45,598,39],[719,47,598,39,"_x14"],[719,51,598,39],[720,10,598,39],[720,17,598,39,"_trackNotificationOpened"],[720,41,598,39],[720,42,598,39,"apply"],[720,47,598,39],[720,54,598,39,"arguments"],[720,63,598,39],[721,8,598,39],[722,8,598,39],[722,15,598,16,"trackNotificationOpened"],[722,38,598,39],[723,6,598,39],[724,6,607,2],[725,0,608,0],[726,0,609,0],[727,6,607,2],[728,4,607,2],[729,6,607,2,"key"],[729,9,607,2],[730,6,607,2,"value"],[730,11,607,2],[731,8,607,2],[731,12,607,2,"_sendTestNotification"],[731,33,607,2],[731,40,607,2,"_asyncToGenerator2"],[731,58,607,2],[731,59,607,2,"default"],[731,66,607,2],[731,68,610,2],[731,81,610,53],[732,10,611,4],[732,14,611,10,"testPayload"],[732,25,611,42],[732,28,611,45],[733,12,612,6,"type"],[733,16,612,10],[733,18,612,12],[733,26,612,20],[734,12,613,6,"title"],[734,17,613,11],[734,19,613,13],[734,38,613,32],[735,12,614,6,"body"],[735,16,614,10],[735,18,614,12],[735,59,614,53],[736,12,615,6,"data"],[736,16,615,10],[736,18,615,12],[737,14,616,8,"action"],[737,20,616,14],[737,22,616,16],[737,28,616,22],[738,14,617,8,"timestamp"],[738,23,617,17],[738,25,617,19],[738,29,617,23,"Date"],[738,33,617,27],[738,34,617,28],[738,35,617,29],[738,36,617,30,"toISOString"],[738,47,617,41],[738,48,617,42],[739,12,618,6],[740,10,619,4],[740,11,619,5],[741,10,621,4],[741,16,621,10],[741,20,621,14],[741,21,621,15,"handleNotification"],[741,39,621,33],[741,40,621,34],[742,12,622,6,"date"],[742,16,622,10],[742,18,622,12,"Date"],[742,22,622,16],[742,23,622,17,"now"],[742,26,622,20],[742,27,622,21],[742,28,622,22],[743,12,623,6,"request"],[743,19,623,13],[743,21,623,15],[744,14,624,8,"identifier"],[744,24,624,18],[744,26,624,20],[744,32,624,26],[745,14,625,8,"content"],[745,21,625,15],[745,23,625,17],[746,16,626,10,"title"],[746,21,626,15],[746,23,626,17,"testPayload"],[746,34,626,28],[746,35,626,29,"title"],[746,40,626,34],[747,16,627,10,"body"],[747,20,627,14],[747,22,627,16,"testPayload"],[747,33,627,27],[747,34,627,28,"body"],[747,38,627,32],[748,16,628,10,"data"],[748,20,628,14],[748,22,628,16,"testPayload"],[748,33,628,27],[748,34,628,28,"data"],[749,14,629,8],[749,15,629,9],[750,14,630,8,"trigger"],[750,21,630,15],[750,23,630,17],[751,12,631,6],[752,10,632,4],[752,11,632,35],[752,12,632,36],[753,8,633,2],[753,9,633,3],[754,8,633,3],[754,17,610,15,"sendTestNotification"],[754,37,610,35,"sendTestNotification"],[754,38,610,35],[755,10,610,35],[755,17,610,35,"_sendTestNotification"],[755,38,610,35],[755,39,610,35,"apply"],[755,44,610,35],[755,51,610,35,"arguments"],[755,60,610,35],[756,8,610,35],[757,8,610,35],[757,15,610,15,"sendTestNotification"],[757,35,610,35],[758,6,610,35],[759,4,610,35],[760,6,610,35,"key"],[760,9,610,35],[761,6,610,35,"value"],[761,11,610,35],[761,13,45,2],[761,22,45,16,"getInstance"],[761,33,45,27,"getInstance"],[761,34,45,27],[761,36,45,51],[762,8,46,4],[762,12,46,8],[762,13,46,9,"NotificationHandler"],[762,32,46,28],[762,33,46,29,"instance"],[762,41,46,37],[762,43,46,39],[763,10,47,6,"NotificationHandler"],[763,29,47,25],[763,30,47,26,"instance"],[763,38,47,34],[763,41,47,37],[763,45,47,41,"NotificationHandler"],[763,64,47,60],[763,65,47,61],[763,66,47,62],[764,8,48,4],[765,8,49,4],[765,15,49,11,"NotificationHandler"],[765,34,49,30],[765,35,49,31,"instance"],[765,43,49,39],[766,6,50,2],[767,4,50,3],[768,2,50,3],[769,2,33,2],[770,2,28,6,"NotificationHandler"],[770,21,28,25],[770,22,34,26,"STORAGE_KEYS"],[770,34,34,38],[770,37,34,41],[771,4,35,4,"NOTIFICATION_HISTORY"],[771,24,35,24],[771,26,35,26],[771,56,35,56],[772,4,36,4,"UNREAD_COUNT"],[772,16,36,16],[772,18,36,18],[772,40,36,40],[773,4,37,4,"LAST_NOTIFICATION_ID"],[773,24,37,24],[773,26,37,26],[774,2,38,2],[774,3,38,3],[775,2,40,2],[776,2,28,6,"NotificationHandler"],[776,21,28,25],[776,22,41,26,"MAX_STORED_NOTIFICATIONS"],[776,46,41,50],[776,49,41,53],[776,51,41,55],[777,2,41,55],[777,6,41,55,"_default"],[777,14,41,55],[777,17,41,55,"exports"],[777,24,41,55],[777,25,41,55,"default"],[777,32,41,55],[777,35,636,15,"NotificationHandler"],[777,54,636,34],[777,55,636,35,"getInstance"],[777,66,636,46],[777,67,636,47],[777,68,636,48],[778,0,636,48],[778,3]],"functionMap":{"names":["<global>","NotificationHandler","constructor","getInstance","setNavigationRef","isNavigationReady","initialize","handleNotification","handleNotificationResponse","parseNotificationPayload","storeNotification","getStoredNotifications","markNotificationAsRead","notifications.map$argument_0","handleNotificationType","handleAutomationNotification","handleShareNotification","handleSocialNotification","handleSystemNotification","handleDeepLink","setTimeout$argument_0","queueNavigationAction","getDeepLinkAction","processNotificationQueue","setupNotificationListeners","generateNotificationId","incrementUnreadCount","updateUnreadCount","notifications.filter$argument_0","getUnreadCount","clearAllNotifications","markAllAsRead","trackNotificationReceived","trackNotificationOpened","sendTestNotification"],"mappings":"AAA;AC2B;ECe,wBD;EEE;GFK;EGK;GHG;EIK;GJE;EKK;GLY;EMK;GNyB;EOK;GPsB;EQK;GRmB;ESK;GTkC;EUK;GVQ;EWK;wCCI;ODO;GXa;EaK;GbqB;EcK;GdO;EeK;GfO;EgBK;GhBI;EiBK;GjBI;EkBK;mBCgB;SDQ;GlBU;EoBK;GpBW;EqBK;GrB8C;EsBK;GtBmB;EuBK;GvBY;EwBK;GxBgB;EyBK;GzBgB;E0BK;+CCG,YD;G1Ba;E4BK;G5BQ;E6BK;G7Bc;E8BK;wClBG,2BkB;G9BmB;E+BK;G/BO;EgCK;GhCO;EiCK;GjCuB;CDC"}},"type":"js/module"}]}