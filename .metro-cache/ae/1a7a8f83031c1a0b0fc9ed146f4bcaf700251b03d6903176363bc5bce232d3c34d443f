{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"expo-notifications","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":205},"end":{"line":7,"column":52,"index":257}}],"key":"nrBDtkRVez7cBhLzyaRjl+xVfvE=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":301},"end":{"line":9,"column":69,"index":370}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"./NotificationService","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":519},"end":{"line":16,"column":56,"index":575}}],"key":"QuAJF8LO9sSj+VodWFVeKd6SEzk=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":577},"end":{"line":17,"column":54,"index":631}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = undefined;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3]));\n  var Notifications = _interopRequireWildcard(require(_dependencyMap[4]));\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[5]));\n  var _NotificationService = _interopRequireDefault(require(_dependencyMap[6]));\n  var _EventLogger = require(_dependencyMap[7]);\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  /**\r\n   * NotificationHandler.ts\r\n   * Handles different notification types, deep linking, and notification actions\r\n   * Features: deep linking, automation execution, analytics tracking, error handling\r\n   */\n  var NotificationHandler = /*#__PURE__*/function () {\n    function NotificationHandler() {\n      (0, _classCallCheck2.default)(this, NotificationHandler);\n      this.navigationRef = null;\n      this.notificationQueue = [];\n    }\n    return (0, _createClass2.default)(NotificationHandler, [{\n      key: \"setNavigationRef\",\n      value:\n      /**\r\n       * Set navigation reference for deep linking\r\n       */\n      function setNavigationRef(navigationRef) {\n        this.navigationRef = navigationRef;\n        _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Navigation reference set');\n      }\n\n      /**\r\n       * Check if navigation is ready\r\n       */\n    }, {\n      key: \"isNavigationReady\",\n      value: function isNavigationReady() {\n        return this.navigationRef?.current?.isReady?.() === true;\n      }\n\n      /**\r\n       * Initialize notification handler\r\n       */\n    }, {\n      key: \"initialize\",\n      value: (function () {\n        var _initialize = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            // Process any queued notifications\n            yield this.processNotificationQueue();\n\n            // Set up notification listeners\n            this.setupNotificationListeners();\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Initialized successfully');\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Initialization failed:', error);\n          }\n        });\n        function initialize() {\n          return _initialize.apply(this, arguments);\n        }\n        return initialize;\n      }()\n      /**\r\n       * Handle incoming notification\r\n       */\n      )\n    }, {\n      key: \"handleNotification\",\n      value: (function () {\n        var _handleNotification = (0, _asyncToGenerator2.default)(function* (notification) {\n          try {\n            var payload = this.parseNotificationPayload(notification);\n            if (!payload) {\n              _EventLogger.EventLogger.warn('NotificationHandler', '[NotificationHandler] Invalid notification payload');\n              return;\n            }\n\n            // Store notification\n            var storedNotification = yield this.storeNotification(payload);\n\n            // Update unread count\n            yield this.incrementUnreadCount();\n\n            // Track analytics\n            yield this.trackNotificationReceived(payload);\n\n            // Handle specific notification types\n            yield this.handleNotificationType(payload);\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Notification handled:', payload.type);\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to handle notification:', error);\n          }\n        });\n        function handleNotification(_x) {\n          return _handleNotification.apply(this, arguments);\n        }\n        return handleNotification;\n      }()\n      /**\r\n       * Handle notification response (user tapped notification)\r\n       */\n      )\n    }, {\n      key: \"handleNotificationResponse\",\n      value: (function () {\n        var _handleNotificationResponse = (0, _asyncToGenerator2.default)(function* (response) {\n          try {\n            var payload = this.parseNotificationPayload(response.notification);\n            if (!payload) {\n              _EventLogger.EventLogger.warn('NotificationHandler', '[NotificationHandler] Invalid notification response payload');\n              return;\n            }\n\n            // Mark notification as read\n            yield this.markNotificationAsRead(payload);\n\n            // Handle deep linking\n            yield this.handleDeepLink(payload, response.actionIdentifier);\n\n            // Track analytics\n            yield this.trackNotificationOpened(payload, response.actionIdentifier);\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Notification response handled:', payload.type, response.actionIdentifier);\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to handle notification response:', error);\n          }\n        });\n        function handleNotificationResponse(_x2) {\n          return _handleNotificationResponse.apply(this, arguments);\n        }\n        return handleNotificationResponse;\n      }()\n      /**\r\n       * Parse notification payload\r\n       */\n      )\n    }, {\n      key: \"parseNotificationPayload\",\n      value: function parseNotificationPayload(notification) {\n        try {\n          var _notification$request = notification.request.content,\n            title = _notification$request.title,\n            body = _notification$request.body,\n            data = _notification$request.data;\n          if (!title || !body || !data?.type) {\n            return null;\n          }\n          return {\n            type: data.type,\n            title,\n            body,\n            data: data\n          };\n        } catch (error) {\n          _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to parse notification payload:', error);\n          return null;\n        }\n      }\n\n      /**\r\n       * Store notification locally\r\n       */\n    }, {\n      key: \"storeNotification\",\n      value: (function () {\n        var _storeNotification = (0, _asyncToGenerator2.default)(function* (payload) {\n          try {\n            var notification = {\n              id: yield this.generateNotificationId(),\n              type: payload.type,\n              title: payload.title,\n              body: payload.body,\n              data: payload.data,\n              read: false,\n              createdAt: payload.data.timestamp || new Date().toISOString(),\n              receivedAt: new Date().toISOString()\n            };\n\n            // Get existing notifications\n            var existing = yield this.getStoredNotifications();\n\n            // Add new notification at the beginning\n            var updated = [notification, ...existing];\n\n            // Limit to maximum stored notifications\n            var limited = updated.slice(0, NotificationHandler.MAX_STORED_NOTIFICATIONS);\n\n            // Store updated list\n            yield _asyncStorage.default.setItem(NotificationHandler.STORAGE_KEYS.NOTIFICATION_HISTORY, JSON.stringify(limited));\n            return notification;\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to store notification:', error);\n            throw error;\n          }\n        });\n        function storeNotification(_x3) {\n          return _storeNotification.apply(this, arguments);\n        }\n        return storeNotification;\n      }()\n      /**\r\n       * Get stored notifications\r\n       */\n      )\n    }, {\n      key: \"getStoredNotifications\",\n      value: (function () {\n        var _getStoredNotifications = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var stored = yield _asyncStorage.default.getItem(NotificationHandler.STORAGE_KEYS.NOTIFICATION_HISTORY);\n            return stored ? JSON.parse(stored) : [];\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to get stored notifications:', error);\n            return [];\n          }\n        });\n        function getStoredNotifications() {\n          return _getStoredNotifications.apply(this, arguments);\n        }\n        return getStoredNotifications;\n      }()\n      /**\r\n       * Mark notification as read\r\n       */\n      )\n    }, {\n      key: \"markNotificationAsRead\",\n      value: (function () {\n        var _markNotificationAsRead = (0, _asyncToGenerator2.default)(function* (payload) {\n          try {\n            var notifications = yield this.getStoredNotifications();\n            var updated = notifications.map(notification => {\n              if (notification.title === payload.title && notification.body === payload.body && !notification.read) {\n                return {\n                  ...notification,\n                  read: true\n                };\n              }\n              return notification;\n            });\n            yield _asyncStorage.default.setItem(NotificationHandler.STORAGE_KEYS.NOTIFICATION_HISTORY, JSON.stringify(updated));\n\n            // Update unread count\n            yield this.updateUnreadCount();\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to mark notification as read:', error);\n          }\n        });\n        function markNotificationAsRead(_x4) {\n          return _markNotificationAsRead.apply(this, arguments);\n        }\n        return markNotificationAsRead;\n      }()\n      /**\r\n       * Handle specific notification types\r\n       */\n      )\n    }, {\n      key: \"handleNotificationType\",\n      value: (function () {\n        var _handleNotificationType = (0, _asyncToGenerator2.default)(function* (payload) {\n          try {\n            switch (payload.type) {\n              case 'automation':\n                yield this.handleAutomationNotification(payload);\n                break;\n              case 'share':\n                yield this.handleShareNotification(payload);\n                break;\n              case 'social':\n                yield this.handleSocialNotification(payload);\n                break;\n              case 'system':\n                yield this.handleSystemNotification(payload);\n                break;\n              default:\n                _EventLogger.EventLogger.warn('NotificationHandler', '[NotificationHandler] Unknown notification type:', payload.type);\n            }\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to handle notification type:', error);\n          }\n        });\n        function handleNotificationType(_x5) {\n          return _handleNotificationType.apply(this, arguments);\n        }\n        return handleNotificationType;\n      }()\n      /**\r\n       * Handle automation notifications\r\n       */\n      )\n    }, {\n      key: \"handleAutomationNotification\",\n      value: (function () {\n        var _handleAutomationNotification = (0, _asyncToGenerator2.default)(function* (payload) {\n          var _payload$data = payload.data,\n            automationId = _payload$data.automationId,\n            action = _payload$data.action;\n          if (action === 'execute' && automationId) {\n            // Could trigger automation execution here\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Automation execution notification:', automationId);\n          }\n        });\n        function handleAutomationNotification(_x6) {\n          return _handleAutomationNotification.apply(this, arguments);\n        }\n        return handleAutomationNotification;\n      }()\n      /**\r\n       * Handle share notifications\r\n       */\n      )\n    }, {\n      key: \"handleShareNotification\",\n      value: (function () {\n        var _handleShareNotification = (0, _asyncToGenerator2.default)(function* (payload) {\n          var _payload$data2 = payload.data,\n            shareUrl = _payload$data2.shareUrl,\n            automationId = _payload$data2.automationId;\n          if (shareUrl) {\n            // Store share URL for later access\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Share notification:', shareUrl);\n          }\n        });\n        function handleShareNotification(_x7) {\n          return _handleShareNotification.apply(this, arguments);\n        }\n        return handleShareNotification;\n      }()\n      /**\r\n       * Handle social notifications\r\n       */\n      )\n    }, {\n      key: \"handleSocialNotification\",\n      value: (function () {\n        var _handleSocialNotification = (0, _asyncToGenerator2.default)(function* (payload) {\n          var _payload$data3 = payload.data,\n            userId = _payload$data3.userId,\n            action = _payload$data3.action;\n          _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Social notification:', action, userId);\n        });\n        function handleSocialNotification(_x8) {\n          return _handleSocialNotification.apply(this, arguments);\n        }\n        return handleSocialNotification;\n      }()\n      /**\r\n       * Handle system notifications\r\n       */\n      )\n    }, {\n      key: \"handleSystemNotification\",\n      value: (function () {\n        var _handleSystemNotification = (0, _asyncToGenerator2.default)(function* (payload) {\n          var action = payload.data.action;\n          _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] System notification:', action);\n        });\n        function handleSystemNotification(_x9) {\n          return _handleSystemNotification.apply(this, arguments);\n        }\n        return handleSystemNotification;\n      }()\n      /**\r\n       * Handle deep linking from notifications\r\n       */\n      )\n    }, {\n      key: \"handleDeepLink\",\n      value: (function () {\n        var _handleDeepLink = (0, _asyncToGenerator2.default)(function* (payload, actionIdentifier) {\n          try {\n            var deepLinkAction = this.getDeepLinkAction(payload, actionIdentifier);\n            if (!deepLinkAction) {\n              _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] No deep link action for notification');\n              return;\n            }\n\n            // Check if navigation is ready\n            if (this.isNavigationReady()) {\n              this.navigationRef.current.navigate(deepLinkAction.screen, deepLinkAction.params);\n              _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Navigated to:', deepLinkAction.screen);\n            } else if (this.navigationRef?.current) {\n              // Navigation ref exists but not ready, retry after delay\n              _EventLogger.EventLogger.warn('NotificationHandler', '[NotificationHandler] Navigation not ready, retrying in 500ms');\n              setTimeout(() => {\n                if (this.isNavigationReady()) {\n                  this.navigationRef.current.navigate(deepLinkAction.screen, deepLinkAction.params);\n                  _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Navigated to (on retry):', deepLinkAction.screen);\n                } else {\n                  // Still not ready, queue it\n                  this.queueNavigationAction(payload, deepLinkAction);\n                }\n              }, 500);\n            } else {\n              // No navigation ref at all, queue for later\n              this.queueNavigationAction(payload, deepLinkAction);\n              _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Queued navigation for later:', deepLinkAction.screen);\n            }\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to handle deep link:', error);\n          }\n        });\n        function handleDeepLink(_x0, _x1) {\n          return _handleDeepLink.apply(this, arguments);\n        }\n        return handleDeepLink;\n      }()\n      /**\r\n       * Queue navigation action for later\r\n       */\n      )\n    }, {\n      key: \"queueNavigationAction\",\n      value: (function () {\n        var _queueNavigationAction = (0, _asyncToGenerator2.default)(function* (payload, deepLinkAction) {\n          this.notificationQueue.push({\n            id: yield this.generateNotificationId(),\n            type: payload.type,\n            title: payload.title,\n            body: payload.body,\n            data: {\n              ...payload.data,\n              deepLinkAction\n            },\n            read: false,\n            createdAt: new Date().toISOString(),\n            receivedAt: new Date().toISOString()\n          });\n        });\n        function queueNavigationAction(_x10, _x11) {\n          return _queueNavigationAction.apply(this, arguments);\n        }\n        return queueNavigationAction;\n      }()\n      /**\r\n       * Get deep link action for notification\r\n       */\n      )\n    }, {\n      key: \"getDeepLinkAction\",\n      value: function getDeepLinkAction(payload, actionIdentifier) {\n        var type = payload.type,\n          data = payload.data;\n        switch (type) {\n          case 'automation':\n            if (actionIdentifier === 'view' && data.automationId) {\n              return {\n                screen: 'AutomationDetails',\n                params: {\n                  automationId: data.automationId\n                }\n              };\n            }\n            break;\n          case 'share':\n            if (actionIdentifier === 'open' && data.shareUrl) {\n              // Parse share URL to get automation ID\n              var shareMatch = data.shareUrl.match(/\\/share\\/([^\\/]+)/);\n              if (shareMatch) {\n                return {\n                  screen: 'SharedAutomation',\n                  params: {\n                    publicId: shareMatch[1]\n                  }\n                };\n              }\n            }\n            break;\n          case 'social':\n            if (actionIdentifier === 'view' && data.userId) {\n              return {\n                screen: 'Profile',\n                params: {\n                  userId: data.userId\n                }\n              };\n            }\n            break;\n          case 'system':\n            if (actionIdentifier === 'view') {\n              return {\n                screen: 'Settings',\n                params: {}\n              };\n            }\n            break;\n        }\n        return null;\n      }\n\n      /**\r\n       * Process queued notifications (when navigation becomes available)\r\n       */\n    }, {\n      key: \"processNotificationQueue\",\n      value: (function () {\n        var _processNotificationQueue = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            if (this.notificationQueue.length === 0 || !this.isNavigationReady()) {\n              return;\n            }\n            for (var notification of this.notificationQueue) {\n              var deepLinkAction = notification.data.deepLinkAction;\n              if (deepLinkAction) {\n                this.navigationRef.current.navigate(deepLinkAction.screen, deepLinkAction.params);\n                _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Processed queued navigation:', deepLinkAction.screen);\n              }\n            }\n            this.notificationQueue = [];\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to process notification queue:', error);\n          }\n        });\n        function processNotificationQueue() {\n          return _processNotificationQueue.apply(this, arguments);\n        }\n        return processNotificationQueue;\n      }()\n      /**\r\n       * Set up notification listeners\r\n       */\n      )\n    }, {\n      key: \"setupNotificationListeners\",\n      value: function setupNotificationListeners() {\n        // Listener for notifications received while app is running\n        Notifications.addNotificationReceivedListener(this.handleNotification.bind(this));\n\n        // Listener for user tapping notification\n        Notifications.addNotificationResponseReceivedListener(this.handleNotificationResponse.bind(this));\n        _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Notification listeners set up');\n      }\n\n      /**\r\n       * Generate unique notification ID\r\n       */\n    }, {\n      key: \"generateNotificationId\",\n      value: (function () {\n        var _generateNotificationId = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var lastId = yield _asyncStorage.default.getItem(NotificationHandler.STORAGE_KEYS.LAST_NOTIFICATION_ID);\n            var newId = lastId ? parseInt(lastId, 10) + 1 : 1;\n            yield _asyncStorage.default.setItem(NotificationHandler.STORAGE_KEYS.LAST_NOTIFICATION_ID, newId.toString());\n            return `notification_${newId}_${Date.now()}`;\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to generate notification ID:', error);\n            return `notification_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n          }\n        });\n        function generateNotificationId() {\n          return _generateNotificationId.apply(this, arguments);\n        }\n        return generateNotificationId;\n      }()\n      /**\r\n       * Increment unread count\r\n       */\n      )\n    }, {\n      key: \"incrementUnreadCount\",\n      value: (function () {\n        var _incrementUnreadCount = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var current = yield this.getUnreadCount();\n            var newCount = current + 1;\n            yield _asyncStorage.default.setItem(NotificationHandler.STORAGE_KEYS.UNREAD_COUNT, newCount.toString());\n\n            // Update app badge\n            yield _NotificationService.default.setBadgeCount(newCount);\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to increment unread count:', error);\n          }\n        });\n        function incrementUnreadCount() {\n          return _incrementUnreadCount.apply(this, arguments);\n        }\n        return incrementUnreadCount;\n      }()\n      /**\r\n       * Update unread count based on stored notifications\r\n       */\n      )\n    }, {\n      key: \"updateUnreadCount\",\n      value: (function () {\n        var _updateUnreadCount = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var notifications = yield this.getStoredNotifications();\n            var unreadCount = notifications.filter(n => !n.read).length;\n            yield _asyncStorage.default.setItem(NotificationHandler.STORAGE_KEYS.UNREAD_COUNT, unreadCount.toString());\n\n            // Update app badge\n            yield _NotificationService.default.setBadgeCount(unreadCount);\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to update unread count:', error);\n          }\n        });\n        function updateUnreadCount() {\n          return _updateUnreadCount.apply(this, arguments);\n        }\n        return updateUnreadCount;\n      }()\n      /**\r\n       * Get unread count\r\n       */\n      )\n    }, {\n      key: \"getUnreadCount\",\n      value: (function () {\n        var _getUnreadCount = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var stored = yield _asyncStorage.default.getItem(NotificationHandler.STORAGE_KEYS.UNREAD_COUNT);\n            return stored ? parseInt(stored, 10) : 0;\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to get unread count:', error);\n            return 0;\n          }\n        });\n        function getUnreadCount() {\n          return _getUnreadCount.apply(this, arguments);\n        }\n        return getUnreadCount;\n      }()\n      /**\r\n       * Clear all notifications\r\n       */\n      )\n    }, {\n      key: \"clearAllNotifications\",\n      value: (function () {\n        var _clearAllNotifications = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            yield _asyncStorage.default.multiRemove([NotificationHandler.STORAGE_KEYS.NOTIFICATION_HISTORY, NotificationHandler.STORAGE_KEYS.UNREAD_COUNT]);\n            yield _NotificationService.default.clearBadge();\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] All notifications cleared');\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to clear notifications:', error);\n          }\n        });\n        function clearAllNotifications() {\n          return _clearAllNotifications.apply(this, arguments);\n        }\n        return clearAllNotifications;\n      }()\n      /**\r\n       * Mark all notifications as read\r\n       */\n      )\n    }, {\n      key: \"markAllAsRead\",\n      value: (function () {\n        var _markAllAsRead = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var notifications = yield this.getStoredNotifications();\n            var updated = notifications.map(n => ({\n              ...n,\n              read: true\n            }));\n            yield _asyncStorage.default.setItem(NotificationHandler.STORAGE_KEYS.NOTIFICATION_HISTORY, JSON.stringify(updated));\n            yield _asyncStorage.default.setItem(NotificationHandler.STORAGE_KEYS.UNREAD_COUNT, '0');\n            yield _NotificationService.default.clearBadge();\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] All notifications marked as read');\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to mark all as read:', error);\n          }\n        });\n        function markAllAsRead() {\n          return _markAllAsRead.apply(this, arguments);\n        }\n        return markAllAsRead;\n      }()\n      /**\r\n       * Track notification received analytics\r\n       */\n      )\n    }, {\n      key: \"trackNotificationReceived\",\n      value: (function () {\n        var _trackNotificationReceived = (0, _asyncToGenerator2.default)(function* (payload) {\n          try {\n            // Analytics tracking would go here\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Analytics: notification received', payload.type);\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to track notification received:', error);\n          }\n        });\n        function trackNotificationReceived(_x12) {\n          return _trackNotificationReceived.apply(this, arguments);\n        }\n        return trackNotificationReceived;\n      }()\n      /**\r\n       * Track notification opened analytics\r\n       */\n      )\n    }, {\n      key: \"trackNotificationOpened\",\n      value: (function () {\n        var _trackNotificationOpened = (0, _asyncToGenerator2.default)(function* (payload, actionIdentifier) {\n          try {\n            // Analytics tracking would go here\n            _EventLogger.EventLogger.debug('NotificationHandler', '[NotificationHandler] Analytics: notification opened', payload.type, actionIdentifier);\n          } catch (error) {\n            _EventLogger.EventLogger.error('NotificationHandler', '[NotificationHandler] Failed to track notification opened:', error);\n          }\n        });\n        function trackNotificationOpened(_x13, _x14) {\n          return _trackNotificationOpened.apply(this, arguments);\n        }\n        return trackNotificationOpened;\n      }()\n      /**\r\n       * Send test notification\r\n       */\n      )\n    }, {\n      key: \"sendTestNotification\",\n      value: (function () {\n        var _sendTestNotification = (0, _asyncToGenerator2.default)(function* () {\n          var testPayload = {\n            type: 'system',\n            title: 'Test Notification',\n            body: 'This is a test notification from Zaptap',\n            data: {\n              action: 'test',\n              timestamp: new Date().toISOString()\n            }\n          };\n          yield this.handleNotification({\n            date: Date.now(),\n            request: {\n              identifier: 'test',\n              content: {\n                title: testPayload.title,\n                body: testPayload.body,\n                data: testPayload.data\n              },\n              trigger: null\n            }\n          });\n        });\n        function sendTestNotification() {\n          return _sendTestNotification.apply(this, arguments);\n        }\n        return sendTestNotification;\n      }())\n    }], [{\n      key: \"getInstance\",\n      value: function getInstance() {\n        if (!NotificationHandler.instance) {\n          NotificationHandler.instance = new NotificationHandler();\n        }\n        return NotificationHandler.instance;\n      }\n    }]);\n  }();\n  // Storage keys\n  NotificationHandler.STORAGE_KEYS = {\n    NOTIFICATION_HISTORY: '@zaptap_notification_history',\n    UNREAD_COUNT: '@zaptap_unread_count',\n    LAST_NOTIFICATION_ID: '@zaptap_last_notification_id'\n  };\n  // Maximum notifications to store locally\n  NotificationHandler.MAX_STORED_NOTIFICATIONS = 50;\n  var _default = exports.default = NotificationHandler.getInstance();\n});","lineCount":773,"map":[[10,2,7,0],[10,6,7,0,"Notifications"],[10,19,7,0],[10,22,7,0,"_interopRequireWildcard"],[10,45,7,0],[10,46,7,0,"require"],[10,53,7,0],[10,54,7,0,"_dependencyMap"],[10,68,7,0],[11,2,9,0],[11,6,9,0,"_asyncStorage"],[11,19,9,0],[11,22,9,0,"_interopRequireDefault"],[11,44,9,0],[11,45,9,0,"require"],[11,52,9,0],[11,53,9,0,"_dependencyMap"],[11,67,9,0],[12,2,16,0],[12,6,16,0,"_NotificationService"],[12,26,16,0],[12,29,16,0,"_interopRequireDefault"],[12,51,16,0],[12,52,16,0,"require"],[12,59,16,0],[12,60,16,0,"_dependencyMap"],[12,74,16,0],[13,2,17,0],[13,6,17,0,"_EventLogger"],[13,18,17,0],[13,21,17,0,"require"],[13,28,17,0],[13,29,17,0,"_dependencyMap"],[13,43,17,0],[14,2,17,54],[14,11,17,54,"_interopRequireWildcard"],[14,35,17,54,"e"],[14,36,17,54],[14,38,17,54,"t"],[14,39,17,54],[14,68,17,54,"WeakMap"],[14,75,17,54],[14,81,17,54,"r"],[14,82,17,54],[14,89,17,54,"WeakMap"],[14,96,17,54],[14,100,17,54,"n"],[14,101,17,54],[14,108,17,54,"WeakMap"],[14,115,17,54],[14,127,17,54,"_interopRequireWildcard"],[14,150,17,54],[14,162,17,54,"_interopRequireWildcard"],[14,163,17,54,"e"],[14,164,17,54],[14,166,17,54,"t"],[14,167,17,54],[14,176,17,54,"t"],[14,177,17,54],[14,181,17,54,"e"],[14,182,17,54],[14,186,17,54,"e"],[14,187,17,54],[14,188,17,54,"__esModule"],[14,198,17,54],[14,207,17,54,"e"],[14,208,17,54],[14,214,17,54,"o"],[14,215,17,54],[14,217,17,54,"i"],[14,218,17,54],[14,220,17,54,"f"],[14,221,17,54],[14,226,17,54,"__proto__"],[14,235,17,54],[14,243,17,54,"default"],[14,250,17,54],[14,252,17,54,"e"],[14,253,17,54],[14,270,17,54,"e"],[14,271,17,54],[14,294,17,54,"e"],[14,295,17,54],[14,320,17,54,"e"],[14,321,17,54],[14,330,17,54,"f"],[14,331,17,54],[14,337,17,54,"o"],[14,338,17,54],[14,341,17,54,"t"],[14,342,17,54],[14,345,17,54,"n"],[14,346,17,54],[14,349,17,54,"r"],[14,350,17,54],[14,358,17,54,"o"],[14,359,17,54],[14,360,17,54,"has"],[14,363,17,54],[14,364,17,54,"e"],[14,365,17,54],[14,375,17,54,"o"],[14,376,17,54],[14,377,17,54,"get"],[14,380,17,54],[14,381,17,54,"e"],[14,382,17,54],[14,385,17,54,"o"],[14,386,17,54],[14,387,17,54,"set"],[14,390,17,54],[14,391,17,54,"e"],[14,392,17,54],[14,394,17,54,"f"],[14,395,17,54],[14,409,17,54,"_t"],[14,411,17,54],[14,415,17,54,"e"],[14,416,17,54],[14,432,17,54,"_t"],[14,434,17,54],[14,441,17,54,"hasOwnProperty"],[14,455,17,54],[14,456,17,54,"call"],[14,460,17,54],[14,461,17,54,"e"],[14,462,17,54],[14,464,17,54,"_t"],[14,466,17,54],[14,473,17,54,"i"],[14,474,17,54],[14,478,17,54,"o"],[14,479,17,54],[14,482,17,54,"Object"],[14,488,17,54],[14,489,17,54,"defineProperty"],[14,503,17,54],[14,508,17,54,"Object"],[14,514,17,54],[14,515,17,54,"getOwnPropertyDescriptor"],[14,539,17,54],[14,540,17,54,"e"],[14,541,17,54],[14,543,17,54,"_t"],[14,545,17,54],[14,552,17,54,"i"],[14,553,17,54],[14,554,17,54,"get"],[14,557,17,54],[14,561,17,54,"i"],[14,562,17,54],[14,563,17,54,"set"],[14,566,17,54],[14,570,17,54,"o"],[14,571,17,54],[14,572,17,54,"f"],[14,573,17,54],[14,575,17,54,"_t"],[14,577,17,54],[14,579,17,54,"i"],[14,580,17,54],[14,584,17,54,"f"],[14,585,17,54],[14,586,17,54,"_t"],[14,588,17,54],[14,592,17,54,"e"],[14,593,17,54],[14,594,17,54,"_t"],[14,596,17,54],[14,607,17,54,"f"],[14,608,17,54],[14,613,17,54,"e"],[14,614,17,54],[14,616,17,54,"t"],[14,617,17,54],[15,2,1,0],[16,0,2,0],[17,0,3,0],[18,0,4,0],[19,0,5,0],[20,2,1,0],[20,6,28,6,"NotificationHandler"],[20,25,28,25],[21,4,43,2],[21,13,43,2,"NotificationHandler"],[21,33,43,2],[21,35,43,24],[22,6,43,24],[22,10,43,24,"_classCallCheck2"],[22,26,43,24],[22,27,43,24,"default"],[22,34,43,24],[22,42,43,24,"NotificationHandler"],[22,61,43,24],[23,6,43,24],[23,11,30,10,"navigationRef"],[23,24,30,23],[23,27,30,48],[23,31,30,52],[24,6,30,52],[24,11,31,10,"notificationQueue"],[24,28,31,27],[24,31,31,52],[24,33,31,54],[25,4,43,25],[26,4,43,26],[26,15,43,26,"_createClass2"],[26,28,43,26],[26,29,43,26,"default"],[26,36,43,26],[26,38,43,26,"NotificationHandler"],[26,57,43,26],[27,6,43,26,"key"],[27,9,43,26],[28,6,43,26,"value"],[28,11,43,26],[29,6,52,2],[30,0,53,0],[31,0,54,0],[32,6,55,2],[32,15,55,9,"setNavigationRef"],[32,31,55,25,"setNavigationRef"],[32,32,55,26,"navigationRef"],[32,45,55,54],[32,47,55,62],[33,8,56,4],[33,12,56,8],[33,13,56,9,"navigationRef"],[33,26,56,22],[33,29,56,25,"navigationRef"],[33,42,56,38],[34,8,57,4,"EventLogger"],[34,32,57,15],[34,33,57,16,"debug"],[34,38,57,21],[34,39,57,22],[34,60,57,43],[34,62,57,45],[34,110,57,93],[34,111,57,94],[35,6,58,2],[37,6,60,2],[38,0,61,0],[39,0,62,0],[40,4,60,2],[41,6,60,2,"key"],[41,9,60,2],[42,6,60,2,"value"],[42,11,60,2],[42,13,63,2],[42,22,63,10,"isNavigationReady"],[42,39,63,27,"isNavigationReady"],[42,40,63,27],[42,42,63,39],[43,8,64,4],[43,15,64,11],[43,19,64,15],[43,20,64,16,"navigationRef"],[43,33,64,29],[43,35,64,31,"current"],[43,42,64,38],[43,44,64,40,"isReady"],[43,51,64,47],[43,54,64,50],[43,55,64,51],[43,60,64,56],[43,64,64,60],[44,6,65,2],[46,6,67,2],[47,0,68,0],[48,0,69,0],[49,4,67,2],[50,6,67,2,"key"],[50,9,67,2],[51,6,67,2,"value"],[51,11,67,2],[52,8,67,2],[52,12,67,2,"_initialize"],[52,23,67,2],[52,30,67,2,"_asyncToGenerator2"],[52,48,67,2],[52,49,67,2,"default"],[52,56,67,2],[52,58,70,2],[52,71,70,43],[53,10,71,4],[53,14,71,8],[54,12,72,6],[55,12,73,6],[55,18,73,12],[55,22,73,16],[55,23,73,17,"processNotificationQueue"],[55,47,73,41],[55,48,73,42],[55,49,73,43],[57,12,75,6],[58,12,76,6],[58,16,76,10],[58,17,76,11,"setupNotificationListeners"],[58,43,76,37],[58,44,76,38],[58,45,76,39],[59,12,78,6,"EventLogger"],[59,36,78,17],[59,37,78,18,"debug"],[59,42,78,23],[59,43,78,24],[59,64,78,45],[59,66,78,47],[59,114,78,95],[59,115,78,96],[60,10,79,4],[60,11,79,5],[60,12,79,6],[60,19,79,13,"error"],[60,24,79,18],[60,26,79,20],[61,12,80,6,"EventLogger"],[61,36,80,17],[61,37,80,18,"error"],[61,42,80,23],[61,43,80,24],[61,64,80,45],[61,66,80,47],[61,112,80,93],[61,114,80,95,"error"],[61,119,80,109],[61,120,80,110],[62,10,81,4],[63,8,82,2],[63,9,82,3],[64,8,82,3],[64,17,70,15,"initialize"],[64,27,70,25,"initialize"],[64,28,70,25],[65,10,70,25],[65,17,70,25,"_initialize"],[65,28,70,25],[65,29,70,25,"apply"],[65,34,70,25],[65,41,70,25,"arguments"],[65,50,70,25],[66,8,70,25],[67,8,70,25],[67,15,70,15,"initialize"],[67,25,70,25],[68,6,70,25],[69,6,84,2],[70,0,85,0],[71,0,86,0],[72,6,84,2],[73,4,84,2],[74,6,84,2,"key"],[74,9,84,2],[75,6,84,2,"value"],[75,11,84,2],[76,8,84,2],[76,12,84,2,"_handleNotification"],[76,31,84,2],[76,38,84,2,"_asyncToGenerator2"],[76,56,84,2],[76,57,84,2,"default"],[76,64,84,2],[76,66,87,2],[76,77,87,34,"notification"],[76,89,87,74],[76,91,87,91],[77,10,88,4],[77,14,88,8],[78,12,89,6],[78,16,89,12,"payload"],[78,23,89,19],[78,26,89,22],[78,30,89,26],[78,31,89,27,"parseNotificationPayload"],[78,55,89,51],[78,56,89,52,"notification"],[78,68,89,64],[78,69,89,65],[79,12,90,6],[79,16,90,10],[79,17,90,11,"payload"],[79,24,90,18],[79,26,90,20],[80,14,91,8,"EventLogger"],[80,38,91,19],[80,39,91,20,"warn"],[80,43,91,24],[80,44,91,25],[80,65,91,46],[80,67,91,48],[80,119,91,100],[80,120,91,101],[81,14,92,8],[82,12,93,6],[84,12,95,6],[85,12,96,6],[85,16,96,12,"storedNotification"],[85,34,96,30],[85,43,96,39],[85,47,96,43],[85,48,96,44,"storeNotification"],[85,65,96,61],[85,66,96,62,"payload"],[85,73,96,69],[85,74,96,70],[87,12,98,6],[88,12,99,6],[88,18,99,12],[88,22,99,16],[88,23,99,17,"incrementUnreadCount"],[88,43,99,37],[88,44,99,38],[88,45,99,39],[90,12,101,6],[91,12,102,6],[91,18,102,12],[91,22,102,16],[91,23,102,17,"trackNotificationReceived"],[91,48,102,42],[91,49,102,43,"payload"],[91,56,102,50],[91,57,102,51],[93,12,104,6],[94,12,105,6],[94,18,105,12],[94,22,105,16],[94,23,105,17,"handleNotificationType"],[94,45,105,39],[94,46,105,40,"payload"],[94,53,105,47],[94,54,105,48],[95,12,107,6,"EventLogger"],[95,36,107,17],[95,37,107,18,"debug"],[95,42,107,23],[95,43,107,24],[95,64,107,45],[95,66,107,47],[95,111,107,92],[95,113,107,94,"payload"],[95,120,107,101],[95,121,107,102,"type"],[95,125,107,106],[95,126,107,107],[96,10,109,4],[96,11,109,5],[96,12,109,6],[96,19,109,13,"error"],[96,24,109,18],[96,26,109,20],[97,12,110,6,"EventLogger"],[97,36,110,17],[97,37,110,18,"error"],[97,42,110,23],[97,43,110,24],[97,64,110,45],[97,66,110,47],[97,120,110,101],[97,122,110,103,"error"],[97,127,110,117],[97,128,110,118],[98,10,111,4],[99,8,112,2],[99,9,112,3],[100,8,112,3],[100,17,87,15,"handleNotification"],[100,35,87,33,"handleNotification"],[100,36,87,33,"_x"],[100,38,87,33],[101,10,87,33],[101,17,87,33,"_handleNotification"],[101,36,87,33],[101,37,87,33,"apply"],[101,42,87,33],[101,49,87,33,"arguments"],[101,58,87,33],[102,8,87,33],[103,8,87,33],[103,15,87,15,"handleNotification"],[103,33,87,33],[104,6,87,33],[105,6,114,2],[106,0,115,0],[107,0,116,0],[108,6,114,2],[109,4,114,2],[110,6,114,2,"key"],[110,9,114,2],[111,6,114,2,"value"],[111,11,114,2],[112,8,114,2],[112,12,114,2,"_handleNotificationResponse"],[112,39,114,2],[112,46,114,2,"_asyncToGenerator2"],[112,64,114,2],[112,65,114,2,"default"],[112,72,114,2],[112,74,117,2],[112,85,117,42,"response"],[112,93,117,86],[112,95,117,103],[113,10,118,4],[113,14,118,8],[114,12,119,6],[114,16,119,12,"payload"],[114,23,119,19],[114,26,119,22],[114,30,119,26],[114,31,119,27,"parseNotificationPayload"],[114,55,119,51],[114,56,119,52,"response"],[114,64,119,60],[114,65,119,61,"notification"],[114,77,119,73],[114,78,119,74],[115,12,120,6],[115,16,120,10],[115,17,120,11,"payload"],[115,24,120,18],[115,26,120,20],[116,14,121,8,"EventLogger"],[116,38,121,19],[116,39,121,20,"warn"],[116,43,121,24],[116,44,121,25],[116,65,121,46],[116,67,121,48],[116,128,121,109],[116,129,121,110],[117,14,122,8],[118,12,123,6],[120,12,125,6],[121,12,126,6],[121,18,126,12],[121,22,126,16],[121,23,126,17,"markNotificationAsRead"],[121,45,126,39],[121,46,126,40,"payload"],[121,53,126,47],[121,54,126,48],[123,12,128,6],[124,12,129,6],[124,18,129,12],[124,22,129,16],[124,23,129,17,"handleDeepLink"],[124,37,129,31],[124,38,129,32,"payload"],[124,45,129,39],[124,47,129,41,"response"],[124,55,129,49],[124,56,129,50,"actionIdentifier"],[124,72,129,66],[124,73,129,67],[126,12,131,6],[127,12,132,6],[127,18,132,12],[127,22,132,16],[127,23,132,17,"trackNotificationOpened"],[127,46,132,40],[127,47,132,41,"payload"],[127,54,132,48],[127,56,132,50,"response"],[127,64,132,58],[127,65,132,59,"actionIdentifier"],[127,81,132,75],[127,82,132,76],[128,12,134,6,"EventLogger"],[128,36,134,17],[128,37,134,18,"debug"],[128,42,134,23],[128,43,134,24],[128,64,134,45],[128,66,134,47],[128,120,134,101],[128,122,134,103,"payload"],[128,129,134,110],[128,130,134,111,"type"],[128,134,134,115],[128,136,134,117,"response"],[128,144,134,125],[128,145,134,126,"actionIdentifier"],[128,161,134,142],[128,162,134,143],[129,10,136,4],[129,11,136,5],[129,12,136,6],[129,19,136,13,"error"],[129,24,136,18],[129,26,136,20],[130,12,137,6,"EventLogger"],[130,36,137,17],[130,37,137,18,"error"],[130,42,137,23],[130,43,137,24],[130,64,137,45],[130,66,137,47],[130,129,137,110],[130,131,137,112,"error"],[130,136,137,126],[130,137,137,127],[131,10,138,4],[132,8,139,2],[132,9,139,3],[133,8,139,3],[133,17,117,15,"handleNotificationResponse"],[133,43,117,41,"handleNotificationResponse"],[133,44,117,41,"_x2"],[133,47,117,41],[134,10,117,41],[134,17,117,41,"_handleNotificationResponse"],[134,44,117,41],[134,45,117,41,"apply"],[134,50,117,41],[134,57,117,41,"arguments"],[134,66,117,41],[135,8,117,41],[136,8,117,41],[136,15,117,15,"handleNotificationResponse"],[136,41,117,41],[137,6,117,41],[138,6,141,2],[139,0,142,0],[140,0,143,0],[141,6,141,2],[142,4,141,2],[143,6,141,2,"key"],[143,9,141,2],[144,6,141,2,"value"],[144,11,141,2],[144,13,144,2],[144,22,144,10,"parseNotificationPayload"],[144,46,144,34,"parseNotificationPayload"],[144,47,144,35,"notification"],[144,59,144,75],[144,61,144,105],[145,8,145,4],[145,12,145,8],[146,10,146,6],[146,14,146,6,"_notification$request"],[146,35,146,6],[146,38,146,36,"notification"],[146,50,146,48],[146,51,146,49,"request"],[146,58,146,56],[146,59,146,57,"content"],[146,66,146,64],[147,12,146,14,"title"],[147,17,146,19],[147,20,146,19,"_notification$request"],[147,41,146,19],[147,42,146,14,"title"],[147,47,146,19],[148,12,146,21,"body"],[148,16,146,25],[148,19,146,25,"_notification$request"],[148,40,146,25],[148,41,146,21,"body"],[148,45,146,25],[149,12,146,27,"data"],[149,16,146,31],[149,19,146,31,"_notification$request"],[149,40,146,31],[149,41,146,27,"data"],[149,45,146,31],[150,10,148,6],[150,14,148,10],[150,15,148,11,"title"],[150,20,148,16],[150,24,148,20],[150,25,148,21,"body"],[150,29,148,25],[150,33,148,29],[150,34,148,30,"data"],[150,38,148,34],[150,40,148,36,"type"],[150,44,148,40],[150,46,148,42],[151,12,149,8],[151,19,149,15],[151,23,149,19],[152,10,150,6],[153,10,152,6],[153,17,152,13],[154,12,153,8,"type"],[154,16,153,12],[154,18,153,14,"data"],[154,22,153,18],[154,23,153,19,"type"],[154,27,153,54],[155,12,154,8,"title"],[155,17,154,13],[156,12,155,8,"body"],[156,16,155,12],[157,12,156,8,"data"],[157,16,156,12],[157,18,156,14,"data"],[158,10,157,6],[158,11,157,7],[159,8,159,4],[159,9,159,5],[159,10,159,6],[159,17,159,13,"error"],[159,22,159,18],[159,24,159,20],[160,10,160,6,"EventLogger"],[160,34,160,17],[160,35,160,18,"error"],[160,40,160,23],[160,41,160,24],[160,62,160,45],[160,64,160,47],[160,125,160,108],[160,127,160,110,"error"],[160,132,160,124],[160,133,160,125],[161,10,161,6],[161,17,161,13],[161,21,161,17],[162,8,162,4],[163,6,163,2],[165,6,165,2],[166,0,166,0],[167,0,167,0],[168,4,165,2],[169,6,165,2,"key"],[169,9,165,2],[170,6,165,2,"value"],[170,11,165,2],[171,8,165,2],[171,12,165,2,"_storeNotification"],[171,30,165,2],[171,37,165,2,"_asyncToGenerator2"],[171,55,165,2],[171,56,165,2,"default"],[171,63,165,2],[171,65,168,2],[171,76,168,34,"payload"],[171,83,168,62],[171,85,168,93],[172,10,169,4],[172,14,169,8],[173,12,170,6],[173,16,170,12,"notification"],[173,28,170,44],[173,31,170,47],[174,14,171,8,"id"],[174,16,171,10],[174,24,171,18],[174,28,171,22],[174,29,171,23,"generateNotificationId"],[174,51,171,45],[174,52,171,46],[174,53,171,47],[175,14,172,8,"type"],[175,18,172,12],[175,20,172,14,"payload"],[175,27,172,21],[175,28,172,22,"type"],[175,32,172,26],[176,14,173,8,"title"],[176,19,173,13],[176,21,173,15,"payload"],[176,28,173,22],[176,29,173,23,"title"],[176,34,173,28],[177,14,174,8,"body"],[177,18,174,12],[177,20,174,14,"payload"],[177,27,174,21],[177,28,174,22,"body"],[177,32,174,26],[178,14,175,8,"data"],[178,18,175,12],[178,20,175,14,"payload"],[178,27,175,21],[178,28,175,22,"data"],[178,32,175,26],[179,14,176,8,"read"],[179,18,176,12],[179,20,176,14],[179,25,176,19],[180,14,177,8,"createdAt"],[180,23,177,17],[180,25,177,19,"payload"],[180,32,177,26],[180,33,177,27,"data"],[180,37,177,31],[180,38,177,32,"timestamp"],[180,47,177,41],[180,51,177,45],[180,55,177,49,"Date"],[180,59,177,53],[180,60,177,54],[180,61,177,55],[180,62,177,56,"toISOString"],[180,73,177,67],[180,74,177,68],[180,75,177,69],[181,14,178,8,"receivedAt"],[181,24,178,18],[181,26,178,20],[181,30,178,24,"Date"],[181,34,178,28],[181,35,178,29],[181,36,178,30],[181,37,178,31,"toISOString"],[181,48,178,42],[181,49,178,43],[182,12,179,6],[182,13,179,7],[184,12,181,6],[185,12,182,6],[185,16,182,12,"existing"],[185,24,182,20],[185,33,182,29],[185,37,182,33],[185,38,182,34,"getStoredNotifications"],[185,60,182,56],[185,61,182,57],[185,62,182,58],[187,12,184,6],[188,12,185,6],[188,16,185,12,"updated"],[188,23,185,19],[188,26,185,22],[188,27,185,23,"notification"],[188,39,185,35],[188,41,185,37],[188,44,185,40,"existing"],[188,52,185,48],[188,53,185,49],[190,12,187,6],[191,12,188,6],[191,16,188,12,"limited"],[191,23,188,19],[191,26,188,22,"updated"],[191,33,188,29],[191,34,188,30,"slice"],[191,39,188,35],[191,40,188,36],[191,41,188,37],[191,43,188,39,"NotificationHandler"],[191,62,188,58],[191,63,188,59,"MAX_STORED_NOTIFICATIONS"],[191,87,188,83],[191,88,188,84],[193,12,190,6],[194,12,191,6],[194,18,191,12,"AsyncStorage"],[194,39,191,24],[194,40,191,25,"setItem"],[194,47,191,32],[194,48,192,8,"NotificationHandler"],[194,67,192,27],[194,68,192,28,"STORAGE_KEYS"],[194,80,192,40],[194,81,192,41,"NOTIFICATION_HISTORY"],[194,101,192,61],[194,103,193,8,"JSON"],[194,107,193,12],[194,108,193,13,"stringify"],[194,117,193,22],[194,118,193,23,"limited"],[194,125,193,30],[194,126,194,6],[194,127,194,7],[195,12,196,6],[195,19,196,13,"notification"],[195,31,196,25],[196,10,198,4],[196,11,198,5],[196,12,198,6],[196,19,198,13,"error"],[196,24,198,18],[196,26,198,20],[197,12,199,6,"EventLogger"],[197,36,199,17],[197,37,199,18,"error"],[197,42,199,23],[197,43,199,24],[197,64,199,45],[197,66,199,47],[197,119,199,100],[197,121,199,102,"error"],[197,126,199,116],[197,127,199,117],[198,12,200,6],[198,18,200,12,"error"],[198,23,200,17],[199,10,201,4],[200,8,202,2],[200,9,202,3],[201,8,202,3],[201,17,168,16,"storeNotification"],[201,34,168,33,"storeNotification"],[201,35,168,33,"_x3"],[201,38,168,33],[202,10,168,33],[202,17,168,33,"_storeNotification"],[202,35,168,33],[202,36,168,33,"apply"],[202,41,168,33],[202,48,168,33,"arguments"],[202,57,168,33],[203,8,168,33],[204,8,168,33],[204,15,168,16,"storeNotification"],[204,32,168,33],[205,6,168,33],[206,6,204,2],[207,0,205,0],[208,0,206,0],[209,6,204,2],[210,4,204,2],[211,6,204,2,"key"],[211,9,204,2],[212,6,204,2,"value"],[212,11,204,2],[213,8,204,2],[213,12,204,2,"_getStoredNotifications"],[213,35,204,2],[213,42,204,2,"_asyncToGenerator2"],[213,60,204,2],[213,61,204,2,"default"],[213,68,204,2],[213,70,207,2],[213,83,207,71],[214,10,208,4],[214,14,208,8],[215,12,209,6],[215,16,209,12,"stored"],[215,22,209,18],[215,31,209,27,"AsyncStorage"],[215,52,209,39],[215,53,209,40,"getItem"],[215,60,209,47],[215,61,209,48,"NotificationHandler"],[215,80,209,67],[215,81,209,68,"STORAGE_KEYS"],[215,93,209,80],[215,94,209,81,"NOTIFICATION_HISTORY"],[215,114,209,101],[215,115,209,102],[216,12,210,6],[216,19,210,13,"stored"],[216,25,210,19],[216,28,210,22,"JSON"],[216,32,210,26],[216,33,210,27,"parse"],[216,38,210,32],[216,39,210,33,"stored"],[216,45,210,39],[216,46,210,40],[216,49,210,43],[216,51,210,45],[217,10,211,4],[217,11,211,5],[217,12,211,6],[217,19,211,13,"error"],[217,24,211,18],[217,26,211,20],[218,12,212,6,"EventLogger"],[218,36,212,17],[218,37,212,18,"error"],[218,42,212,23],[218,43,212,24],[218,64,212,45],[218,66,212,47],[218,125,212,106],[218,127,212,108,"error"],[218,132,212,122],[218,133,212,123],[219,12,213,6],[219,19,213,13],[219,21,213,15],[220,10,214,4],[221,8,215,2],[221,9,215,3],[222,8,215,3],[222,17,207,15,"getStoredNotifications"],[222,39,207,37,"getStoredNotifications"],[222,40,207,37],[223,10,207,37],[223,17,207,37,"_getStoredNotifications"],[223,40,207,37],[223,41,207,37,"apply"],[223,46,207,37],[223,53,207,37,"arguments"],[223,62,207,37],[224,8,207,37],[225,8,207,37],[225,15,207,15,"getStoredNotifications"],[225,37,207,37],[226,6,207,37],[227,6,217,2],[228,0,218,0],[229,0,219,0],[230,6,217,2],[231,4,217,2],[232,6,217,2,"key"],[232,9,217,2],[233,6,217,2,"value"],[233,11,217,2],[234,8,217,2],[234,12,217,2,"_markNotificationAsRead"],[234,35,217,2],[234,42,217,2,"_asyncToGenerator2"],[234,60,217,2],[234,61,217,2,"default"],[234,68,217,2],[234,70,220,2],[234,81,220,38,"payload"],[234,88,220,66],[234,90,220,83],[235,10,221,4],[235,14,221,8],[236,12,222,6],[236,16,222,12,"notifications"],[236,29,222,25],[236,38,222,34],[236,42,222,38],[236,43,222,39,"getStoredNotifications"],[236,65,222,61],[236,66,222,62],[236,67,222,63],[237,12,224,6],[237,16,224,12,"updated"],[237,23,224,19],[237,26,224,22,"notifications"],[237,39,224,35],[237,40,224,36,"map"],[237,43,224,39],[237,44,224,40,"notification"],[237,56,224,52],[237,60,224,56],[238,14,225,8],[238,18,225,12,"notification"],[238,30,225,24],[238,31,225,25,"title"],[238,36,225,30],[238,41,225,35,"payload"],[238,48,225,42],[238,49,225,43,"title"],[238,54,225,48],[238,58,226,12,"notification"],[238,70,226,24],[238,71,226,25,"body"],[238,75,226,29],[238,80,226,34,"payload"],[238,87,226,41],[238,88,226,42,"body"],[238,92,226,46],[238,96,227,12],[238,97,227,13,"notification"],[238,109,227,25],[238,110,227,26,"read"],[238,114,227,30],[238,116,227,32],[239,16,228,10],[239,23,228,17],[240,18,228,19],[240,21,228,22,"notification"],[240,33,228,34],[241,18,228,36,"read"],[241,22,228,40],[241,24,228,42],[242,16,228,47],[242,17,228,48],[243,14,229,8],[244,14,230,8],[244,21,230,15,"notification"],[244,33,230,27],[245,12,231,6],[245,13,231,7],[245,14,231,8],[246,12,233,6],[246,18,233,12,"AsyncStorage"],[246,39,233,24],[246,40,233,25,"setItem"],[246,47,233,32],[246,48,234,8,"NotificationHandler"],[246,67,234,27],[246,68,234,28,"STORAGE_KEYS"],[246,80,234,40],[246,81,234,41,"NOTIFICATION_HISTORY"],[246,101,234,61],[246,103,235,8,"JSON"],[246,107,235,12],[246,108,235,13,"stringify"],[246,117,235,22],[246,118,235,23,"updated"],[246,125,235,30],[246,126,236,6],[246,127,236,7],[248,12,238,6],[249,12,239,6],[249,18,239,12],[249,22,239,16],[249,23,239,17,"updateUnreadCount"],[249,40,239,34],[249,41,239,35],[249,42,239,36],[250,10,241,4],[250,11,241,5],[250,12,241,6],[250,19,241,13,"error"],[250,24,241,18],[250,26,241,20],[251,12,242,6,"EventLogger"],[251,36,242,17],[251,37,242,18,"error"],[251,42,242,23],[251,43,242,24],[251,64,242,45],[251,66,242,47],[251,126,242,107],[251,128,242,109,"error"],[251,133,242,123],[251,134,242,124],[252,10,243,4],[253,8,244,2],[253,9,244,3],[254,8,244,3],[254,17,220,15,"markNotificationAsRead"],[254,39,220,37,"markNotificationAsRead"],[254,40,220,37,"_x4"],[254,43,220,37],[255,10,220,37],[255,17,220,37,"_markNotificationAsRead"],[255,40,220,37],[255,41,220,37,"apply"],[255,46,220,37],[255,53,220,37,"arguments"],[255,62,220,37],[256,8,220,37],[257,8,220,37],[257,15,220,15,"markNotificationAsRead"],[257,37,220,37],[258,6,220,37],[259,6,246,2],[260,0,247,0],[261,0,248,0],[262,6,246,2],[263,4,246,2],[264,6,246,2,"key"],[264,9,246,2],[265,6,246,2,"value"],[265,11,246,2],[266,8,246,2],[266,12,246,2,"_handleNotificationType"],[266,35,246,2],[266,42,246,2,"_asyncToGenerator2"],[266,60,246,2],[266,61,246,2,"default"],[266,68,246,2],[266,70,249,2],[266,81,249,39,"payload"],[266,88,249,67],[266,90,249,84],[267,10,250,4],[267,14,250,8],[268,12,251,6],[268,20,251,14,"payload"],[268,27,251,21],[268,28,251,22,"type"],[268,32,251,26],[269,14,252,8],[269,19,252,13],[269,31,252,25],[270,16,253,10],[270,22,253,16],[270,26,253,20],[270,27,253,21,"handleAutomationNotification"],[270,55,253,49],[270,56,253,50,"payload"],[270,63,253,57],[270,64,253,58],[271,16,254,10],[272,14,255,8],[272,19,255,13],[272,26,255,20],[273,16,256,10],[273,22,256,16],[273,26,256,20],[273,27,256,21,"handleShareNotification"],[273,50,256,44],[273,51,256,45,"payload"],[273,58,256,52],[273,59,256,53],[274,16,257,10],[275,14,258,8],[275,19,258,13],[275,27,258,21],[276,16,259,10],[276,22,259,16],[276,26,259,20],[276,27,259,21,"handleSocialNotification"],[276,51,259,45],[276,52,259,46,"payload"],[276,59,259,53],[276,60,259,54],[277,16,260,10],[278,14,261,8],[278,19,261,13],[278,27,261,21],[279,16,262,10],[279,22,262,16],[279,26,262,20],[279,27,262,21,"handleSystemNotification"],[279,51,262,45],[279,52,262,46,"payload"],[279,59,262,53],[279,60,262,54],[280,16,263,10],[281,14,264,8],[282,16,265,10,"EventLogger"],[282,40,265,21],[282,41,265,22,"warn"],[282,45,265,26],[282,46,265,27],[282,67,265,48],[282,69,265,50],[282,119,265,100],[282,121,265,102,"payload"],[282,128,265,109],[282,129,265,110,"type"],[282,133,265,114],[282,134,265,115],[283,12,266,6],[284,10,267,4],[284,11,267,5],[284,12,267,6],[284,19,267,13,"error"],[284,24,267,18],[284,26,267,20],[285,12,268,6,"EventLogger"],[285,36,268,17],[285,37,268,18,"error"],[285,42,268,23],[285,43,268,24],[285,64,268,45],[285,66,268,47],[285,125,268,106],[285,127,268,108,"error"],[285,132,268,122],[285,133,268,123],[286,10,269,4],[287,8,270,2],[287,9,270,3],[288,8,270,3],[288,17,249,16,"handleNotificationType"],[288,39,249,38,"handleNotificationType"],[288,40,249,38,"_x5"],[288,43,249,38],[289,10,249,38],[289,17,249,38,"_handleNotificationType"],[289,40,249,38],[289,41,249,38,"apply"],[289,46,249,38],[289,53,249,38,"arguments"],[289,62,249,38],[290,8,249,38],[291,8,249,38],[291,15,249,16,"handleNotificationType"],[291,37,249,38],[292,6,249,38],[293,6,272,2],[294,0,273,0],[295,0,274,0],[296,6,272,2],[297,4,272,2],[298,6,272,2,"key"],[298,9,272,2],[299,6,272,2,"value"],[299,11,272,2],[300,8,272,2],[300,12,272,2,"_handleAutomationNotification"],[300,41,272,2],[300,48,272,2,"_asyncToGenerator2"],[300,66,272,2],[300,67,272,2,"default"],[300,74,272,2],[300,76,275,2],[300,87,275,45,"payload"],[300,94,275,73],[300,96,275,90],[301,10,276,4],[301,14,276,4,"_payload$data"],[301,27,276,4],[301,30,276,37,"payload"],[301,37,276,44],[301,38,276,45,"data"],[301,42,276,49],[302,12,276,12,"automationId"],[302,24,276,24],[302,27,276,24,"_payload$data"],[302,40,276,24],[302,41,276,12,"automationId"],[302,53,276,24],[303,12,276,26,"action"],[303,18,276,32],[303,21,276,32,"_payload$data"],[303,34,276,32],[303,35,276,26,"action"],[303,41,276,32],[304,10,278,4],[304,14,278,8,"action"],[304,20,278,14],[304,25,278,19],[304,34,278,28],[304,38,278,32,"automationId"],[304,50,278,44],[304,52,278,46],[305,12,279,6],[306,12,280,6,"EventLogger"],[306,36,280,17],[306,37,280,18,"debug"],[306,42,280,23],[306,43,280,24],[306,64,280,45],[306,66,280,47],[306,124,280,105],[306,126,280,107,"automationId"],[306,138,280,119],[306,139,280,120],[307,10,281,4],[308,8,282,2],[308,9,282,3],[309,8,282,3],[309,17,275,16,"handleAutomationNotification"],[309,45,275,44,"handleAutomationNotification"],[309,46,275,44,"_x6"],[309,49,275,44],[310,10,275,44],[310,17,275,44,"_handleAutomationNotification"],[310,46,275,44],[310,47,275,44,"apply"],[310,52,275,44],[310,59,275,44,"arguments"],[310,68,275,44],[311,8,275,44],[312,8,275,44],[312,15,275,16,"handleAutomationNotification"],[312,43,275,44],[313,6,275,44],[314,6,284,2],[315,0,285,0],[316,0,286,0],[317,6,284,2],[318,4,284,2],[319,6,284,2,"key"],[319,9,284,2],[320,6,284,2,"value"],[320,11,284,2],[321,8,284,2],[321,12,284,2,"_handleShareNotification"],[321,36,284,2],[321,43,284,2,"_asyncToGenerator2"],[321,61,284,2],[321,62,284,2,"default"],[321,69,284,2],[321,71,287,2],[321,82,287,40,"payload"],[321,89,287,68],[321,91,287,85],[322,10,288,4],[322,14,288,4,"_payload$data2"],[322,28,288,4],[322,31,288,39,"payload"],[322,38,288,46],[322,39,288,47,"data"],[322,43,288,51],[323,12,288,12,"shareUrl"],[323,20,288,20],[323,23,288,20,"_payload$data2"],[323,37,288,20],[323,38,288,12,"shareUrl"],[323,46,288,20],[324,12,288,22,"automationId"],[324,24,288,34],[324,27,288,34,"_payload$data2"],[324,41,288,34],[324,42,288,22,"automationId"],[324,54,288,34],[325,10,290,4],[325,14,290,8,"shareUrl"],[325,22,290,16],[325,24,290,18],[326,12,291,6],[327,12,292,6,"EventLogger"],[327,36,292,17],[327,37,292,18,"debug"],[327,42,292,23],[327,43,292,24],[327,64,292,45],[327,66,292,47],[327,109,292,90],[327,111,292,92,"shareUrl"],[327,119,292,100],[327,120,292,101],[328,10,293,4],[329,8,294,2],[329,9,294,3],[330,8,294,3],[330,17,287,16,"handleShareNotification"],[330,40,287,39,"handleShareNotification"],[330,41,287,39,"_x7"],[330,44,287,39],[331,10,287,39],[331,17,287,39,"_handleShareNotification"],[331,41,287,39],[331,42,287,39,"apply"],[331,47,287,39],[331,54,287,39,"arguments"],[331,63,287,39],[332,8,287,39],[333,8,287,39],[333,15,287,16,"handleShareNotification"],[333,38,287,39],[334,6,287,39],[335,6,296,2],[336,0,297,0],[337,0,298,0],[338,6,296,2],[339,4,296,2],[340,6,296,2,"key"],[340,9,296,2],[341,6,296,2,"value"],[341,11,296,2],[342,8,296,2],[342,12,296,2,"_handleSocialNotification"],[342,37,296,2],[342,44,296,2,"_asyncToGenerator2"],[342,62,296,2],[342,63,296,2,"default"],[342,70,296,2],[342,72,299,2],[342,83,299,41,"payload"],[342,90,299,69],[342,92,299,86],[343,10,300,4],[343,14,300,4,"_payload$data3"],[343,28,300,4],[343,31,300,31,"payload"],[343,38,300,38],[343,39,300,39,"data"],[343,43,300,43],[344,12,300,12,"userId"],[344,18,300,18],[344,21,300,18,"_payload$data3"],[344,35,300,18],[344,36,300,12,"userId"],[344,42,300,18],[345,12,300,20,"action"],[345,18,300,26],[345,21,300,26,"_payload$data3"],[345,35,300,26],[345,36,300,20,"action"],[345,42,300,26],[346,10,302,4,"EventLogger"],[346,34,302,15],[346,35,302,16,"debug"],[346,40,302,21],[346,41,302,22],[346,62,302,43],[346,64,302,45],[346,108,302,89],[346,110,302,91,"action"],[346,116,302,97],[346,118,302,99,"userId"],[346,124,302,105],[346,125,302,106],[347,8,303,2],[347,9,303,3],[348,8,303,3],[348,17,299,16,"handleSocialNotification"],[348,41,299,40,"handleSocialNotification"],[348,42,299,40,"_x8"],[348,45,299,40],[349,10,299,40],[349,17,299,40,"_handleSocialNotification"],[349,42,299,40],[349,43,299,40,"apply"],[349,48,299,40],[349,55,299,40,"arguments"],[349,64,299,40],[350,8,299,40],[351,8,299,40],[351,15,299,16,"handleSocialNotification"],[351,39,299,40],[352,6,299,40],[353,6,305,2],[354,0,306,0],[355,0,307,0],[356,6,305,2],[357,4,305,2],[358,6,305,2,"key"],[358,9,305,2],[359,6,305,2,"value"],[359,11,305,2],[360,8,305,2],[360,12,305,2,"_handleSystemNotification"],[360,37,305,2],[360,44,305,2,"_asyncToGenerator2"],[360,62,305,2],[360,63,305,2,"default"],[360,70,305,2],[360,72,308,2],[360,83,308,41,"payload"],[360,90,308,69],[360,92,308,86],[361,10,309,4],[361,14,309,12,"action"],[361,20,309,18],[361,23,309,23,"payload"],[361,30,309,30],[361,31,309,31,"data"],[361,35,309,35],[361,36,309,12,"action"],[361,42,309,18],[362,10,311,4,"EventLogger"],[362,34,311,15],[362,35,311,16,"debug"],[362,40,311,21],[362,41,311,22],[362,62,311,43],[362,64,311,45],[362,108,311,89],[362,110,311,91,"action"],[362,116,311,97],[362,117,311,98],[363,8,312,2],[363,9,312,3],[364,8,312,3],[364,17,308,16,"handleSystemNotification"],[364,41,308,40,"handleSystemNotification"],[364,42,308,40,"_x9"],[364,45,308,40],[365,10,308,40],[365,17,308,40,"_handleSystemNotification"],[365,42,308,40],[365,43,308,40,"apply"],[365,48,308,40],[365,55,308,40,"arguments"],[365,64,308,40],[366,8,308,40],[367,8,308,40],[367,15,308,16,"handleSystemNotification"],[367,39,308,40],[368,6,308,40],[369,6,314,2],[370,0,315,0],[371,0,316,0],[372,6,314,2],[373,4,314,2],[374,6,314,2,"key"],[374,9,314,2],[375,6,314,2,"value"],[375,11,314,2],[376,8,314,2],[376,12,314,2,"_handleDeepLink"],[376,27,314,2],[376,34,314,2,"_asyncToGenerator2"],[376,52,314,2],[376,53,314,2,"default"],[376,60,314,2],[376,62,317,2],[376,73,317,31,"payload"],[376,80,317,59],[376,82,317,61,"actionIdentifier"],[376,98,317,85],[376,100,317,102],[377,10,318,4],[377,14,318,8],[378,12,319,6],[378,16,319,12,"deepLinkAction"],[378,30,319,26],[378,33,319,29],[378,37,319,33],[378,38,319,34,"getDeepLinkAction"],[378,55,319,51],[378,56,319,52,"payload"],[378,63,319,59],[378,65,319,61,"actionIdentifier"],[378,81,319,77],[378,82,319,78],[379,12,321,6],[379,16,321,10],[379,17,321,11,"deepLinkAction"],[379,31,321,25],[379,33,321,27],[380,14,322,8,"EventLogger"],[380,38,322,19],[380,39,322,20,"debug"],[380,44,322,25],[380,45,322,26],[380,66,322,47],[380,68,322,49],[380,128,322,109],[380,129,322,110],[381,14,323,8],[382,12,324,6],[384,12,326,6],[385,12,327,6],[385,16,327,10],[385,20,327,14],[385,21,327,15,"isNavigationReady"],[385,38,327,32],[385,39,327,33],[385,40,327,34],[385,42,327,36],[386,14,328,8],[386,18,328,12],[386,19,328,13,"navigationRef"],[386,32,328,26],[386,33,328,28,"current"],[386,40,328,35],[386,41,328,36,"navigate"],[386,49,328,44],[386,50,328,45,"deepLinkAction"],[386,64,328,59],[386,65,328,60,"screen"],[386,71,328,66],[386,73,328,68,"deepLinkAction"],[386,87,328,82],[386,88,328,83,"params"],[386,94,328,89],[386,95,328,90],[387,14,329,8,"EventLogger"],[387,38,329,19],[387,39,329,20,"debug"],[387,44,329,25],[387,45,329,26],[387,66,329,47],[387,68,329,49],[387,105,329,86],[387,107,329,88,"deepLinkAction"],[387,121,329,102],[387,122,329,103,"screen"],[387,128,329,109],[387,129,329,110],[388,12,330,6],[388,13,330,7],[388,19,330,13],[388,23,330,17],[388,27,330,21],[388,28,330,22,"navigationRef"],[388,41,330,35],[388,43,330,37,"current"],[388,50,330,44],[388,52,330,46],[389,14,331,8],[390,14,332,8,"EventLogger"],[390,38,332,19],[390,39,332,20,"warn"],[390,43,332,24],[390,44,332,25],[390,65,332,46],[390,67,332,48],[390,130,332,111],[390,131,332,112],[391,14,333,8,"setTimeout"],[391,24,333,18],[391,25,333,19],[391,31,333,25],[392,16,334,10],[392,20,334,14],[392,24,334,18],[392,25,334,19,"isNavigationReady"],[392,42,334,36],[392,43,334,37],[392,44,334,38],[392,46,334,40],[393,18,335,12],[393,22,335,16],[393,23,335,17,"navigationRef"],[393,36,335,30],[393,37,335,32,"current"],[393,44,335,39],[393,45,335,40,"navigate"],[393,53,335,48],[393,54,335,49,"deepLinkAction"],[393,68,335,63],[393,69,335,64,"screen"],[393,75,335,70],[393,77,335,72,"deepLinkAction"],[393,91,335,86],[393,92,335,87,"params"],[393,98,335,93],[393,99,335,94],[394,18,336,12,"EventLogger"],[394,42,336,23],[394,43,336,24,"debug"],[394,48,336,29],[394,49,336,30],[394,70,336,51],[394,72,336,53],[394,120,336,101],[394,122,336,103,"deepLinkAction"],[394,136,336,117],[394,137,336,118,"screen"],[394,143,336,124],[394,144,336,125],[395,16,337,10],[395,17,337,11],[395,23,337,17],[396,18,338,12],[397,18,339,12],[397,22,339,16],[397,23,339,17,"queueNavigationAction"],[397,44,339,38],[397,45,339,39,"payload"],[397,52,339,46],[397,54,339,48,"deepLinkAction"],[397,68,339,62],[397,69,339,63],[398,16,340,10],[399,14,341,8],[399,15,341,9],[399,17,341,11],[399,20,341,14],[399,21,341,15],[400,12,342,6],[400,13,342,7],[400,19,342,13],[401,14,343,8],[402,14,344,8],[402,18,344,12],[402,19,344,13,"queueNavigationAction"],[402,40,344,34],[402,41,344,35,"payload"],[402,48,344,42],[402,50,344,44,"deepLinkAction"],[402,64,344,58],[402,65,344,59],[403,14,345,8,"EventLogger"],[403,38,345,19],[403,39,345,20,"debug"],[403,44,345,25],[403,45,345,26],[403,66,345,47],[403,68,345,49],[403,120,345,101],[403,122,345,103,"deepLinkAction"],[403,136,345,117],[403,137,345,118,"screen"],[403,143,345,124],[403,144,345,125],[404,12,346,6],[405,10,348,4],[405,11,348,5],[405,12,348,6],[405,19,348,13,"error"],[405,24,348,18],[405,26,348,20],[406,12,349,6,"EventLogger"],[406,36,349,17],[406,37,349,18,"error"],[406,42,349,23],[406,43,349,24],[406,64,349,45],[406,66,349,47],[406,117,349,98],[406,119,349,100,"error"],[406,124,349,114],[406,125,349,115],[407,10,350,4],[408,8,351,2],[408,9,351,3],[409,8,351,3],[409,17,317,16,"handleDeepLink"],[409,31,317,30,"handleDeepLink"],[409,32,317,30,"_x0"],[409,35,317,30],[409,37,317,30,"_x1"],[409,40,317,30],[410,10,317,30],[410,17,317,30,"_handleDeepLink"],[410,32,317,30],[410,33,317,30,"apply"],[410,38,317,30],[410,45,317,30,"arguments"],[410,54,317,30],[411,8,317,30],[412,8,317,30],[412,15,317,16,"handleDeepLink"],[412,29,317,30],[413,6,317,30],[414,6,353,2],[415,0,354,0],[416,0,355,0],[417,6,353,2],[418,4,353,2],[419,6,353,2,"key"],[419,9,353,2],[420,6,353,2,"value"],[420,11,353,2],[421,8,353,2],[421,12,353,2,"_queueNavigationAction"],[421,34,353,2],[421,41,353,2,"_asyncToGenerator2"],[421,59,353,2],[421,60,353,2,"default"],[421,67,353,2],[421,69,356,2],[421,80,356,38,"payload"],[421,87,356,66],[421,89,356,68,"deepLinkAction"],[421,103,356,98],[421,105,356,115],[422,10,357,4],[422,14,357,8],[422,15,357,9,"notificationQueue"],[422,32,357,26],[422,33,357,27,"push"],[422,37,357,31],[422,38,357,32],[423,12,358,6,"id"],[423,14,358,8],[423,22,358,16],[423,26,358,20],[423,27,358,21,"generateNotificationId"],[423,49,358,43],[423,50,358,44],[423,51,358,45],[424,12,359,6,"type"],[424,16,359,10],[424,18,359,12,"payload"],[424,25,359,19],[424,26,359,20,"type"],[424,30,359,24],[425,12,360,6,"title"],[425,17,360,11],[425,19,360,13,"payload"],[425,26,360,20],[425,27,360,21,"title"],[425,32,360,26],[426,12,361,6,"body"],[426,16,361,10],[426,18,361,12,"payload"],[426,25,361,19],[426,26,361,20,"body"],[426,30,361,24],[427,12,362,6,"data"],[427,16,362,10],[427,18,362,12],[428,14,362,14],[428,17,362,17,"payload"],[428,24,362,24],[428,25,362,25,"data"],[428,29,362,29],[429,14,362,31,"deepLinkAction"],[430,12,362,46],[430,13,362,47],[431,12,363,6,"read"],[431,16,363,10],[431,18,363,12],[431,23,363,17],[432,12,364,6,"createdAt"],[432,21,364,15],[432,23,364,17],[432,27,364,21,"Date"],[432,31,364,25],[432,32,364,26],[432,33,364,27],[432,34,364,28,"toISOString"],[432,45,364,39],[432,46,364,40],[432,47,364,41],[433,12,365,6,"receivedAt"],[433,22,365,16],[433,24,365,18],[433,28,365,22,"Date"],[433,32,365,26],[433,33,365,27],[433,34,365,28],[433,35,365,29,"toISOString"],[433,46,365,40],[433,47,365,41],[434,10,366,4],[434,11,366,5],[434,12,366,6],[435,8,367,2],[435,9,367,3],[436,8,367,3],[436,17,356,16,"queueNavigationAction"],[436,38,356,37,"queueNavigationAction"],[436,39,356,37,"_x10"],[436,43,356,37],[436,45,356,37,"_x11"],[436,49,356,37],[437,10,356,37],[437,17,356,37,"_queueNavigationAction"],[437,39,356,37],[437,40,356,37,"apply"],[437,45,356,37],[437,52,356,37,"arguments"],[437,61,356,37],[438,8,356,37],[439,8,356,37],[439,15,356,16,"queueNavigationAction"],[439,36,356,37],[440,6,356,37],[441,6,369,2],[442,0,370,0],[443,0,371,0],[444,6,369,2],[445,4,369,2],[446,6,369,2,"key"],[446,9,369,2],[447,6,369,2,"value"],[447,11,369,2],[447,13,372,2],[447,22,372,10,"getDeepLinkAction"],[447,39,372,27,"getDeepLinkAction"],[447,40,372,28,"payload"],[447,47,372,56],[447,49,372,58,"actionIdentifier"],[447,65,372,82],[447,67,372,107],[448,8,373,4],[448,12,373,12,"type"],[448,16,373,16],[448,19,373,27,"payload"],[448,26,373,34],[448,27,373,12,"type"],[448,31,373,16],[449,10,373,18,"data"],[449,14,373,22],[449,17,373,27,"payload"],[449,24,373,34],[449,25,373,18,"data"],[449,29,373,22],[450,8,375,4],[450,16,375,12,"type"],[450,20,375,16],[451,10,376,6],[451,15,376,11],[451,27,376,23],[452,12,377,8],[452,16,377,12,"actionIdentifier"],[452,32,377,28],[452,37,377,33],[452,43,377,39],[452,47,377,43,"data"],[452,51,377,47],[452,52,377,48,"automationId"],[452,64,377,60],[452,66,377,62],[453,14,378,10],[453,21,378,17],[454,16,379,12,"screen"],[454,22,379,18],[454,24,379,20],[454,43,379,39],[455,16,380,12,"params"],[455,22,380,18],[455,24,380,20],[456,18,380,22,"automationId"],[456,30,380,34],[456,32,380,36,"data"],[456,36,380,40],[456,37,380,41,"automationId"],[457,16,380,54],[458,14,381,10],[458,15,381,11],[459,12,382,8],[460,12,383,8],[461,10,385,6],[461,15,385,11],[461,22,385,18],[462,12,386,8],[462,16,386,12,"actionIdentifier"],[462,32,386,28],[462,37,386,33],[462,43,386,39],[462,47,386,43,"data"],[462,51,386,47],[462,52,386,48,"shareUrl"],[462,60,386,56],[462,62,386,58],[463,14,387,10],[464,14,388,10],[464,18,388,16,"shareMatch"],[464,28,388,26],[464,31,388,29,"data"],[464,35,388,33],[464,36,388,34,"shareUrl"],[464,44,388,42],[464,45,388,43,"match"],[464,50,388,48],[464,51,388,49],[464,70,388,68],[464,71,388,69],[465,14,389,10],[465,18,389,14,"shareMatch"],[465,28,389,24],[465,30,389,26],[466,16,390,12],[466,23,390,19],[467,18,391,14,"screen"],[467,24,391,20],[467,26,391,22],[467,44,391,40],[468,18,392,14,"params"],[468,24,392,20],[468,26,392,22],[469,20,392,24,"publicId"],[469,28,392,32],[469,30,392,34,"shareMatch"],[469,40,392,44],[469,41,392,45],[469,42,392,46],[470,18,392,48],[471,16,393,12],[471,17,393,13],[472,14,394,10],[473,12,395,8],[474,12,396,8],[475,10,398,6],[475,15,398,11],[475,23,398,19],[476,12,399,8],[476,16,399,12,"actionIdentifier"],[476,32,399,28],[476,37,399,33],[476,43,399,39],[476,47,399,43,"data"],[476,51,399,47],[476,52,399,48,"userId"],[476,58,399,54],[476,60,399,56],[477,14,400,10],[477,21,400,17],[478,16,401,12,"screen"],[478,22,401,18],[478,24,401,20],[478,33,401,29],[479,16,402,12,"params"],[479,22,402,18],[479,24,402,20],[480,18,402,22,"userId"],[480,24,402,28],[480,26,402,30,"data"],[480,30,402,34],[480,31,402,35,"userId"],[481,16,402,42],[482,14,403,10],[482,15,403,11],[483,12,404,8],[484,12,405,8],[485,10,407,6],[485,15,407,11],[485,23,407,19],[486,12,408,8],[486,16,408,12,"actionIdentifier"],[486,32,408,28],[486,37,408,33],[486,43,408,39],[486,45,408,41],[487,14,409,10],[487,21,409,17],[488,16,410,12,"screen"],[488,22,410,18],[488,24,410,20],[488,34,410,30],[489,16,411,12,"params"],[489,22,411,18],[489,24,411,20],[489,25,411,21],[490,14,412,10],[490,15,412,11],[491,12,413,8],[492,12,414,8],[493,8,415,4],[494,8,417,4],[494,15,417,11],[494,19,417,15],[495,6,418,2],[497,6,420,2],[498,0,421,0],[499,0,422,0],[500,4,420,2],[501,6,420,2,"key"],[501,9,420,2],[502,6,420,2,"value"],[502,11,420,2],[503,8,420,2],[503,12,420,2,"_processNotificationQueue"],[503,37,420,2],[503,44,420,2,"_asyncToGenerator2"],[503,62,420,2],[503,63,420,2,"default"],[503,70,420,2],[503,72,423,2],[503,85,423,58],[504,10,424,4],[504,14,424,8],[505,12,425,6],[505,16,425,10],[505,20,425,14],[505,21,425,15,"notificationQueue"],[505,38,425,32],[505,39,425,33,"length"],[505,45,425,39],[505,50,425,44],[505,51,425,45],[505,55,425,49],[505,56,425,50],[505,60,425,54],[505,61,425,55,"isNavigationReady"],[505,78,425,72],[505,79,425,73],[505,80,425,74],[505,82,425,76],[506,14,426,8],[507,12,427,6],[508,12,429,6],[508,17,429,11],[508,21,429,17,"notification"],[508,33,429,29],[508,37,429,33],[508,41,429,37],[508,42,429,38,"notificationQueue"],[508,59,429,55],[508,61,429,57],[509,14,430,8],[509,18,430,14,"deepLinkAction"],[509,32,430,28],[509,35,430,31,"notification"],[509,47,430,43],[509,48,430,44,"data"],[509,52,430,48],[509,53,430,49,"deepLinkAction"],[509,67,430,81],[510,14,431,8],[510,18,431,12,"deepLinkAction"],[510,32,431,26],[510,34,431,28],[511,16,432,10],[511,20,432,14],[511,21,432,15,"navigationRef"],[511,34,432,28],[511,35,432,30,"current"],[511,42,432,37],[511,43,432,38,"navigate"],[511,51,432,46],[511,52,432,47,"deepLinkAction"],[511,66,432,61],[511,67,432,62,"screen"],[511,73,432,68],[511,75,432,70,"deepLinkAction"],[511,89,432,84],[511,90,432,85,"params"],[511,96,432,91],[511,97,432,92],[512,16,433,10,"EventLogger"],[512,40,433,21],[512,41,433,22,"debug"],[512,46,433,27],[512,47,433,28],[512,68,433,49],[512,70,433,51],[512,122,433,103],[512,124,433,105,"deepLinkAction"],[512,138,433,119],[512,139,433,120,"screen"],[512,145,433,126],[512,146,433,127],[513,14,434,8],[514,12,435,6],[515,12,437,6],[515,16,437,10],[515,17,437,11,"notificationQueue"],[515,34,437,28],[515,37,437,31],[515,39,437,33],[516,10,439,4],[516,11,439,5],[516,12,439,6],[516,19,439,13,"error"],[516,24,439,18],[516,26,439,20],[517,12,440,6,"EventLogger"],[517,36,440,17],[517,37,440,18,"error"],[517,42,440,23],[517,43,440,24],[517,64,440,45],[517,66,440,47],[517,127,440,108],[517,129,440,110,"error"],[517,134,440,124],[517,135,440,125],[518,10,441,4],[519,8,442,2],[519,9,442,3],[520,8,442,3],[520,17,423,16,"processNotificationQueue"],[520,41,423,40,"processNotificationQueue"],[520,42,423,40],[521,10,423,40],[521,17,423,40,"_processNotificationQueue"],[521,42,423,40],[521,43,423,40,"apply"],[521,48,423,40],[521,55,423,40,"arguments"],[521,64,423,40],[522,8,423,40],[523,8,423,40],[523,15,423,16,"processNotificationQueue"],[523,39,423,40],[524,6,423,40],[525,6,444,2],[526,0,445,0],[527,0,446,0],[528,6,444,2],[529,4,444,2],[530,6,444,2,"key"],[530,9,444,2],[531,6,444,2,"value"],[531,11,444,2],[531,13,447,2],[531,22,447,10,"setupNotificationListeners"],[531,48,447,36,"setupNotificationListeners"],[531,49,447,36],[531,51,447,45],[532,8,448,4],[533,8,449,4,"Notifications"],[533,21,449,17],[533,22,449,18,"addNotificationReceivedListener"],[533,53,449,49],[533,54,450,6],[533,58,450,10],[533,59,450,11,"handleNotification"],[533,77,450,29],[533,78,450,30,"bind"],[533,82,450,34],[533,83,450,35],[533,87,450,39],[533,88,451,4],[533,89,451,5],[535,8,453,4],[536,8,454,4,"Notifications"],[536,21,454,17],[536,22,454,18,"addNotificationResponseReceivedListener"],[536,61,454,57],[536,62,455,6],[536,66,455,10],[536,67,455,11,"handleNotificationResponse"],[536,93,455,37],[536,94,455,38,"bind"],[536,98,455,42],[536,99,455,43],[536,103,455,47],[536,104,456,4],[536,105,456,5],[537,8,458,4,"EventLogger"],[537,32,458,15],[537,33,458,16,"debug"],[537,38,458,21],[537,39,458,22],[537,60,458,43],[537,62,458,45],[537,115,458,98],[537,116,458,99],[538,6,459,2],[540,6,461,2],[541,0,462,0],[542,0,463,0],[543,4,461,2],[544,6,461,2,"key"],[544,9,461,2],[545,6,461,2,"value"],[545,11,461,2],[546,8,461,2],[546,12,461,2,"_generateNotificationId"],[546,35,461,2],[546,42,461,2,"_asyncToGenerator2"],[546,60,461,2],[546,61,461,2,"default"],[546,68,461,2],[546,70,464,2],[546,83,464,58],[547,10,465,4],[547,14,465,8],[548,12,466,6],[548,16,466,12,"lastId"],[548,22,466,18],[548,31,466,27,"AsyncStorage"],[548,52,466,39],[548,53,466,40,"getItem"],[548,60,466,47],[548,61,466,48,"NotificationHandler"],[548,80,466,67],[548,81,466,68,"STORAGE_KEYS"],[548,93,466,80],[548,94,466,81,"LAST_NOTIFICATION_ID"],[548,114,466,101],[548,115,466,102],[549,12,467,6],[549,16,467,12,"newId"],[549,21,467,17],[549,24,467,20,"lastId"],[549,30,467,26],[549,33,467,29,"parseInt"],[549,41,467,37],[549,42,467,38,"lastId"],[549,48,467,44],[549,50,467,46],[549,52,467,48],[549,53,467,49],[549,56,467,52],[549,57,467,53],[549,60,467,56],[549,61,467,57],[550,12,469,6],[550,18,469,12,"AsyncStorage"],[550,39,469,24],[550,40,469,25,"setItem"],[550,47,469,32],[550,48,470,8,"NotificationHandler"],[550,67,470,27],[550,68,470,28,"STORAGE_KEYS"],[550,80,470,40],[550,81,470,41,"LAST_NOTIFICATION_ID"],[550,101,470,61],[550,103,471,8,"newId"],[550,108,471,13],[550,109,471,14,"toString"],[550,117,471,22],[550,118,471,23],[550,119,472,6],[550,120,472,7],[551,12,474,6],[551,19,474,13],[551,35,474,29,"newId"],[551,40,474,34],[551,44,474,38,"Date"],[551,48,474,42],[551,49,474,43,"now"],[551,52,474,46],[551,53,474,47],[551,54,474,48],[551,56,474,50],[552,10,476,4],[552,11,476,5],[552,12,476,6],[552,19,476,13,"error"],[552,24,476,18],[552,26,476,20],[553,12,477,6,"EventLogger"],[553,36,477,17],[553,37,477,18,"error"],[553,42,477,23],[553,43,477,24],[553,64,477,45],[553,66,477,47],[553,125,477,106],[553,127,477,108,"error"],[553,132,477,122],[553,133,477,123],[554,12,478,6],[554,19,478,13],[554,35,478,29,"Date"],[554,39,478,33],[554,40,478,34,"now"],[554,43,478,37],[554,44,478,38],[554,45,478,39],[554,49,478,43,"Math"],[554,53,478,47],[554,54,478,48,"random"],[554,60,478,54],[554,61,478,55],[554,62,478,56],[554,63,478,57,"toString"],[554,71,478,65],[554,72,478,66],[554,74,478,68],[554,75,478,69],[554,76,478,70,"substr"],[554,82,478,76],[554,83,478,77],[554,84,478,78],[554,86,478,80],[554,87,478,81],[554,88,478,82],[554,90,478,84],[555,10,479,4],[556,8,480,2],[556,9,480,3],[557,8,480,3],[557,17,464,16,"generateNotificationId"],[557,39,464,38,"generateNotificationId"],[557,40,464,38],[558,10,464,38],[558,17,464,38,"_generateNotificationId"],[558,40,464,38],[558,41,464,38,"apply"],[558,46,464,38],[558,53,464,38,"arguments"],[558,62,464,38],[559,8,464,38],[560,8,464,38],[560,15,464,16,"generateNotificationId"],[560,37,464,38],[561,6,464,38],[562,6,482,2],[563,0,483,0],[564,0,484,0],[565,6,482,2],[566,4,482,2],[567,6,482,2,"key"],[567,9,482,2],[568,6,482,2,"value"],[568,11,482,2],[569,8,482,2],[569,12,482,2,"_incrementUnreadCount"],[569,33,482,2],[569,40,482,2,"_asyncToGenerator2"],[569,58,482,2],[569,59,482,2,"default"],[569,66,482,2],[569,68,485,2],[569,81,485,54],[570,10,486,4],[570,14,486,8],[571,12,487,6],[571,16,487,12,"current"],[571,23,487,19],[571,32,487,28],[571,36,487,32],[571,37,487,33,"getUnreadCount"],[571,51,487,47],[571,52,487,48],[571,53,487,49],[572,12,488,6],[572,16,488,12,"newCount"],[572,24,488,20],[572,27,488,23,"current"],[572,34,488,30],[572,37,488,33],[572,38,488,34],[573,12,490,6],[573,18,490,12,"AsyncStorage"],[573,39,490,24],[573,40,490,25,"setItem"],[573,47,490,32],[573,48,491,8,"NotificationHandler"],[573,67,491,27],[573,68,491,28,"STORAGE_KEYS"],[573,80,491,40],[573,81,491,41,"UNREAD_COUNT"],[573,93,491,53],[573,95,492,8,"newCount"],[573,103,492,16],[573,104,492,17,"toString"],[573,112,492,25],[573,113,492,26],[573,114,493,6],[573,115,493,7],[575,12,495,6],[576,12,496,6],[576,18,496,12,"NotificationService"],[576,46,496,31],[576,47,496,32,"setBadgeCount"],[576,60,496,45],[576,61,496,46,"newCount"],[576,69,496,54],[576,70,496,55],[577,10,498,4],[577,11,498,5],[577,12,498,6],[577,19,498,13,"error"],[577,24,498,18],[577,26,498,20],[578,12,499,6,"EventLogger"],[578,36,499,17],[578,37,499,18,"error"],[578,42,499,23],[578,43,499,24],[578,64,499,45],[578,66,499,47],[578,123,499,104],[578,125,499,106,"error"],[578,130,499,120],[578,131,499,121],[579,10,500,4],[580,8,501,2],[580,9,501,3],[581,8,501,3],[581,17,485,16,"incrementUnreadCount"],[581,37,485,36,"incrementUnreadCount"],[581,38,485,36],[582,10,485,36],[582,17,485,36,"_incrementUnreadCount"],[582,38,485,36],[582,39,485,36,"apply"],[582,44,485,36],[582,51,485,36,"arguments"],[582,60,485,36],[583,8,485,36],[584,8,485,36],[584,15,485,16,"incrementUnreadCount"],[584,35,485,36],[585,6,485,36],[586,6,503,2],[587,0,504,0],[588,0,505,0],[589,6,503,2],[590,4,503,2],[591,6,503,2,"key"],[591,9,503,2],[592,6,503,2,"value"],[592,11,503,2],[593,8,503,2],[593,12,503,2,"_updateUnreadCount"],[593,30,503,2],[593,37,503,2,"_asyncToGenerator2"],[593,55,503,2],[593,56,503,2,"default"],[593,63,503,2],[593,65,506,2],[593,78,506,51],[594,10,507,4],[594,14,507,8],[595,12,508,6],[595,16,508,12,"notifications"],[595,29,508,25],[595,38,508,34],[595,42,508,38],[595,43,508,39,"getStoredNotifications"],[595,65,508,61],[595,66,508,62],[595,67,508,63],[596,12,509,6],[596,16,509,12,"unreadCount"],[596,27,509,23],[596,30,509,26,"notifications"],[596,43,509,39],[596,44,509,40,"filter"],[596,50,509,46],[596,51,509,47,"n"],[596,52,509,48],[596,56,509,52],[596,57,509,53,"n"],[596,58,509,54],[596,59,509,55,"read"],[596,63,509,59],[596,64,509,60],[596,65,509,61,"length"],[596,71,509,67],[597,12,511,6],[597,18,511,12,"AsyncStorage"],[597,39,511,24],[597,40,511,25,"setItem"],[597,47,511,32],[597,48,512,8,"NotificationHandler"],[597,67,512,27],[597,68,512,28,"STORAGE_KEYS"],[597,80,512,40],[597,81,512,41,"UNREAD_COUNT"],[597,93,512,53],[597,95,513,8,"unreadCount"],[597,106,513,19],[597,107,513,20,"toString"],[597,115,513,28],[597,116,513,29],[597,117,514,6],[597,118,514,7],[599,12,516,6],[600,12,517,6],[600,18,517,12,"NotificationService"],[600,46,517,31],[600,47,517,32,"setBadgeCount"],[600,60,517,45],[600,61,517,46,"unreadCount"],[600,72,517,57],[600,73,517,58],[601,10,519,4],[601,11,519,5],[601,12,519,6],[601,19,519,13,"error"],[601,24,519,18],[601,26,519,20],[602,12,520,6,"EventLogger"],[602,36,520,17],[602,37,520,18,"error"],[602,42,520,23],[602,43,520,24],[602,64,520,45],[602,66,520,47],[602,120,520,101],[602,122,520,103,"error"],[602,127,520,117],[602,128,520,118],[603,10,521,4],[604,8,522,2],[604,9,522,3],[605,8,522,3],[605,17,506,16,"updateUnreadCount"],[605,34,506,33,"updateUnreadCount"],[605,35,506,33],[606,10,506,33],[606,17,506,33,"_updateUnreadCount"],[606,35,506,33],[606,36,506,33,"apply"],[606,41,506,33],[606,48,506,33,"arguments"],[606,57,506,33],[607,8,506,33],[608,8,506,33],[608,15,506,16,"updateUnreadCount"],[608,32,506,33],[609,6,506,33],[610,6,524,2],[611,0,525,0],[612,0,526,0],[613,6,524,2],[614,4,524,2],[615,6,524,2,"key"],[615,9,524,2],[616,6,524,2,"value"],[616,11,524,2],[617,8,524,2],[617,12,524,2,"_getUnreadCount"],[617,27,524,2],[617,34,524,2,"_asyncToGenerator2"],[617,52,524,2],[617,53,524,2,"default"],[617,60,524,2],[617,62,527,2],[617,75,527,49],[618,10,528,4],[618,14,528,8],[619,12,529,6],[619,16,529,12,"stored"],[619,22,529,18],[619,31,529,27,"AsyncStorage"],[619,52,529,39],[619,53,529,40,"getItem"],[619,60,529,47],[619,61,529,48,"NotificationHandler"],[619,80,529,67],[619,81,529,68,"STORAGE_KEYS"],[619,93,529,80],[619,94,529,81,"UNREAD_COUNT"],[619,106,529,93],[619,107,529,94],[620,12,530,6],[620,19,530,13,"stored"],[620,25,530,19],[620,28,530,22,"parseInt"],[620,36,530,30],[620,37,530,31,"stored"],[620,43,530,37],[620,45,530,39],[620,47,530,41],[620,48,530,42],[620,51,530,45],[620,52,530,46],[621,10,531,4],[621,11,531,5],[621,12,531,6],[621,19,531,13,"error"],[621,24,531,18],[621,26,531,20],[622,12,532,6,"EventLogger"],[622,36,532,17],[622,37,532,18,"error"],[622,42,532,23],[622,43,532,24],[622,64,532,45],[622,66,532,47],[622,117,532,98],[622,119,532,100,"error"],[622,124,532,114],[622,125,532,115],[623,12,533,6],[623,19,533,13],[623,20,533,14],[624,10,534,4],[625,8,535,2],[625,9,535,3],[626,8,535,3],[626,17,527,15,"getUnreadCount"],[626,31,527,29,"getUnreadCount"],[626,32,527,29],[627,10,527,29],[627,17,527,29,"_getUnreadCount"],[627,32,527,29],[627,33,527,29,"apply"],[627,38,527,29],[627,45,527,29,"arguments"],[627,54,527,29],[628,8,527,29],[629,8,527,29],[629,15,527,15,"getUnreadCount"],[629,29,527,29],[630,6,527,29],[631,6,537,2],[632,0,538,0],[633,0,539,0],[634,6,537,2],[635,4,537,2],[636,6,537,2,"key"],[636,9,537,2],[637,6,537,2,"value"],[637,11,537,2],[638,8,537,2],[638,12,537,2,"_clearAllNotifications"],[638,34,537,2],[638,41,537,2,"_asyncToGenerator2"],[638,59,537,2],[638,60,537,2,"default"],[638,67,537,2],[638,69,540,2],[638,82,540,54],[639,10,541,4],[639,14,541,8],[640,12,542,6],[640,18,542,12,"AsyncStorage"],[640,39,542,24],[640,40,542,25,"multiRemove"],[640,51,542,36],[640,52,542,37],[640,53,543,8,"NotificationHandler"],[640,72,543,27],[640,73,543,28,"STORAGE_KEYS"],[640,85,543,40],[640,86,543,41,"NOTIFICATION_HISTORY"],[640,106,543,61],[640,108,544,8,"NotificationHandler"],[640,127,544,27],[640,128,544,28,"STORAGE_KEYS"],[640,140,544,40],[640,141,544,41,"UNREAD_COUNT"],[640,153,544,53],[640,154,545,7],[640,155,545,8],[641,12,547,6],[641,18,547,12,"NotificationService"],[641,46,547,31],[641,47,547,32,"clearBadge"],[641,57,547,42],[641,58,547,43],[641,59,547,44],[642,12,549,6,"EventLogger"],[642,36,549,17],[642,37,549,18,"debug"],[642,42,549,23],[642,43,549,24],[642,64,549,45],[642,66,549,47],[642,115,549,96],[642,116,549,97],[643,10,551,4],[643,11,551,5],[643,12,551,6],[643,19,551,13,"error"],[643,24,551,18],[643,26,551,20],[644,12,552,6,"EventLogger"],[644,36,552,17],[644,37,552,18,"error"],[644,42,552,23],[644,43,552,24],[644,64,552,45],[644,66,552,47],[644,120,552,101],[644,122,552,103,"error"],[644,127,552,117],[644,128,552,118],[645,10,553,4],[646,8,554,2],[646,9,554,3],[647,8,554,3],[647,17,540,15,"clearAllNotifications"],[647,38,540,36,"clearAllNotifications"],[647,39,540,36],[648,10,540,36],[648,17,540,36,"_clearAllNotifications"],[648,39,540,36],[648,40,540,36,"apply"],[648,45,540,36],[648,52,540,36,"arguments"],[648,61,540,36],[649,8,540,36],[650,8,540,36],[650,15,540,15,"clearAllNotifications"],[650,36,540,36],[651,6,540,36],[652,6,556,2],[653,0,557,0],[654,0,558,0],[655,6,556,2],[656,4,556,2],[657,6,556,2,"key"],[657,9,556,2],[658,6,556,2,"value"],[658,11,556,2],[659,8,556,2],[659,12,556,2,"_markAllAsRead"],[659,26,556,2],[659,33,556,2,"_asyncToGenerator2"],[659,51,556,2],[659,52,556,2,"default"],[659,59,556,2],[659,61,559,2],[659,74,559,46],[660,10,560,4],[660,14,560,8],[661,12,561,6],[661,16,561,12,"notifications"],[661,29,561,25],[661,38,561,34],[661,42,561,38],[661,43,561,39,"getStoredNotifications"],[661,65,561,61],[661,66,561,62],[661,67,561,63],[662,12,562,6],[662,16,562,12,"updated"],[662,23,562,19],[662,26,562,22,"notifications"],[662,39,562,35],[662,40,562,36,"map"],[662,43,562,39],[662,44,562,40,"n"],[662,45,562,41],[662,50,562,46],[663,14,562,48],[663,17,562,51,"n"],[663,18,562,52],[664,14,562,54,"read"],[664,18,562,58],[664,20,562,60],[665,12,562,65],[665,13,562,66],[665,14,562,67],[665,15,562,68],[666,12,564,6],[666,18,564,12,"AsyncStorage"],[666,39,564,24],[666,40,564,25,"setItem"],[666,47,564,32],[666,48,565,8,"NotificationHandler"],[666,67,565,27],[666,68,565,28,"STORAGE_KEYS"],[666,80,565,40],[666,81,565,41,"NOTIFICATION_HISTORY"],[666,101,565,61],[666,103,566,8,"JSON"],[666,107,566,12],[666,108,566,13,"stringify"],[666,117,566,22],[666,118,566,23,"updated"],[666,125,566,30],[666,126,567,6],[666,127,567,7],[667,12,569,6],[667,18,569,12,"AsyncStorage"],[667,39,569,24],[667,40,569,25,"setItem"],[667,47,569,32],[667,48,570,8,"NotificationHandler"],[667,67,570,27],[667,68,570,28,"STORAGE_KEYS"],[667,80,570,40],[667,81,570,41,"UNREAD_COUNT"],[667,93,570,53],[667,95,571,8],[667,98,572,6],[667,99,572,7],[668,12,574,6],[668,18,574,12,"NotificationService"],[668,46,574,31],[668,47,574,32,"clearBadge"],[668,57,574,42],[668,58,574,43],[668,59,574,44],[669,12,576,6,"EventLogger"],[669,36,576,17],[669,37,576,18,"debug"],[669,42,576,23],[669,43,576,24],[669,64,576,45],[669,66,576,47],[669,122,576,103],[669,123,576,104],[670,10,578,4],[670,11,578,5],[670,12,578,6],[670,19,578,13,"error"],[670,24,578,18],[670,26,578,20],[671,12,579,6,"EventLogger"],[671,36,579,17],[671,37,579,18,"error"],[671,42,579,23],[671,43,579,24],[671,64,579,45],[671,66,579,47],[671,117,579,98],[671,119,579,100,"error"],[671,124,579,114],[671,125,579,115],[672,10,580,4],[673,8,581,2],[673,9,581,3],[674,8,581,3],[674,17,559,15,"markAllAsRead"],[674,30,559,28,"markAllAsRead"],[674,31,559,28],[675,10,559,28],[675,17,559,28,"_markAllAsRead"],[675,31,559,28],[675,32,559,28,"apply"],[675,37,559,28],[675,44,559,28,"arguments"],[675,53,559,28],[676,8,559,28],[677,8,559,28],[677,15,559,15,"markAllAsRead"],[677,28,559,28],[678,6,559,28],[679,6,583,2],[680,0,584,0],[681,0,585,0],[682,6,583,2],[683,4,583,2],[684,6,583,2,"key"],[684,9,583,2],[685,6,583,2,"value"],[685,11,583,2],[686,8,583,2],[686,12,583,2,"_trackNotificationReceived"],[686,38,583,2],[686,45,583,2,"_asyncToGenerator2"],[686,63,583,2],[686,64,583,2,"default"],[686,71,583,2],[686,73,586,2],[686,84,586,42,"payload"],[686,91,586,70],[686,93,586,87],[687,10,587,4],[687,14,587,8],[688,12,588,6],[689,12,589,6,"EventLogger"],[689,36,589,17],[689,37,589,18,"debug"],[689,42,589,23],[689,43,589,24],[689,64,589,45],[689,66,589,47],[689,122,589,103],[689,124,589,105,"payload"],[689,131,589,112],[689,132,589,113,"type"],[689,136,589,117],[689,137,589,118],[690,10,590,4],[690,11,590,5],[690,12,590,6],[690,19,590,13,"error"],[690,24,590,18],[690,26,590,20],[691,12,591,6,"EventLogger"],[691,36,591,17],[691,37,591,18,"error"],[691,42,591,23],[691,43,591,24],[691,64,591,45],[691,66,591,47],[691,128,591,109],[691,130,591,111,"error"],[691,135,591,125],[691,136,591,126],[692,10,592,4],[693,8,593,2],[693,9,593,3],[694,8,593,3],[694,17,586,16,"trackNotificationReceived"],[694,42,586,41,"trackNotificationReceived"],[694,43,586,41,"_x12"],[694,47,586,41],[695,10,586,41],[695,17,586,41,"_trackNotificationReceived"],[695,43,586,41],[695,44,586,41,"apply"],[695,49,586,41],[695,56,586,41,"arguments"],[695,65,586,41],[696,8,586,41],[697,8,586,41],[697,15,586,16,"trackNotificationReceived"],[697,40,586,41],[698,6,586,41],[699,6,595,2],[700,0,596,0],[701,0,597,0],[702,6,595,2],[703,4,595,2],[704,6,595,2,"key"],[704,9,595,2],[705,6,595,2,"value"],[705,11,595,2],[706,8,595,2],[706,12,595,2,"_trackNotificationOpened"],[706,36,595,2],[706,43,595,2,"_asyncToGenerator2"],[706,61,595,2],[706,62,595,2,"default"],[706,69,595,2],[706,71,598,2],[706,82,598,40,"payload"],[706,89,598,68],[706,91,598,70,"actionIdentifier"],[706,107,598,94],[706,109,598,111],[707,10,599,4],[707,14,599,8],[708,12,600,6],[709,12,601,6,"EventLogger"],[709,36,601,17],[709,37,601,18,"debug"],[709,42,601,23],[709,43,601,24],[709,64,601,45],[709,66,601,47],[709,120,601,101],[709,122,601,103,"payload"],[709,129,601,110],[709,130,601,111,"type"],[709,134,601,115],[709,136,601,117,"actionIdentifier"],[709,152,601,133],[709,153,601,134],[710,10,602,4],[710,11,602,5],[710,12,602,6],[710,19,602,13,"error"],[710,24,602,18],[710,26,602,20],[711,12,603,6,"EventLogger"],[711,36,603,17],[711,37,603,18,"error"],[711,42,603,23],[711,43,603,24],[711,64,603,45],[711,66,603,47],[711,126,603,107],[711,128,603,109,"error"],[711,133,603,123],[711,134,603,124],[712,10,604,4],[713,8,605,2],[713,9,605,3],[714,8,605,3],[714,17,598,16,"trackNotificationOpened"],[714,40,598,39,"trackNotificationOpened"],[714,41,598,39,"_x13"],[714,45,598,39],[714,47,598,39,"_x14"],[714,51,598,39],[715,10,598,39],[715,17,598,39,"_trackNotificationOpened"],[715,41,598,39],[715,42,598,39,"apply"],[715,47,598,39],[715,54,598,39,"arguments"],[715,63,598,39],[716,8,598,39],[717,8,598,39],[717,15,598,16,"trackNotificationOpened"],[717,38,598,39],[718,6,598,39],[719,6,607,2],[720,0,608,0],[721,0,609,0],[722,6,607,2],[723,4,607,2],[724,6,607,2,"key"],[724,9,607,2],[725,6,607,2,"value"],[725,11,607,2],[726,8,607,2],[726,12,607,2,"_sendTestNotification"],[726,33,607,2],[726,40,607,2,"_asyncToGenerator2"],[726,58,607,2],[726,59,607,2,"default"],[726,66,607,2],[726,68,610,2],[726,81,610,53],[727,10,611,4],[727,14,611,10,"testPayload"],[727,25,611,42],[727,28,611,45],[728,12,612,6,"type"],[728,16,612,10],[728,18,612,12],[728,26,612,20],[729,12,613,6,"title"],[729,17,613,11],[729,19,613,13],[729,38,613,32],[730,12,614,6,"body"],[730,16,614,10],[730,18,614,12],[730,59,614,53],[731,12,615,6,"data"],[731,16,615,10],[731,18,615,12],[732,14,616,8,"action"],[732,20,616,14],[732,22,616,16],[732,28,616,22],[733,14,617,8,"timestamp"],[733,23,617,17],[733,25,617,19],[733,29,617,23,"Date"],[733,33,617,27],[733,34,617,28],[733,35,617,29],[733,36,617,30,"toISOString"],[733,47,617,41],[733,48,617,42],[734,12,618,6],[735,10,619,4],[735,11,619,5],[736,10,621,4],[736,16,621,10],[736,20,621,14],[736,21,621,15,"handleNotification"],[736,39,621,33],[736,40,621,34],[737,12,622,6,"date"],[737,16,622,10],[737,18,622,12,"Date"],[737,22,622,16],[737,23,622,17,"now"],[737,26,622,20],[737,27,622,21],[737,28,622,22],[738,12,623,6,"request"],[738,19,623,13],[738,21,623,15],[739,14,624,8,"identifier"],[739,24,624,18],[739,26,624,20],[739,32,624,26],[740,14,625,8,"content"],[740,21,625,15],[740,23,625,17],[741,16,626,10,"title"],[741,21,626,15],[741,23,626,17,"testPayload"],[741,34,626,28],[741,35,626,29,"title"],[741,40,626,34],[742,16,627,10,"body"],[742,20,627,14],[742,22,627,16,"testPayload"],[742,33,627,27],[742,34,627,28,"body"],[742,38,627,32],[743,16,628,10,"data"],[743,20,628,14],[743,22,628,16,"testPayload"],[743,33,628,27],[743,34,628,28,"data"],[744,14,629,8],[744,15,629,9],[745,14,630,8,"trigger"],[745,21,630,15],[745,23,630,17],[746,12,631,6],[747,10,632,4],[747,11,632,35],[747,12,632,36],[748,8,633,2],[748,9,633,3],[749,8,633,3],[749,17,610,15,"sendTestNotification"],[749,37,610,35,"sendTestNotification"],[749,38,610,35],[750,10,610,35],[750,17,610,35,"_sendTestNotification"],[750,38,610,35],[750,39,610,35,"apply"],[750,44,610,35],[750,51,610,35,"arguments"],[750,60,610,35],[751,8,610,35],[752,8,610,35],[752,15,610,15,"sendTestNotification"],[752,35,610,35],[753,6,610,35],[754,4,610,35],[755,6,610,35,"key"],[755,9,610,35],[756,6,610,35,"value"],[756,11,610,35],[756,13,45,2],[756,22,45,16,"getInstance"],[756,33,45,27,"getInstance"],[756,34,45,27],[756,36,45,51],[757,8,46,4],[757,12,46,8],[757,13,46,9,"NotificationHandler"],[757,32,46,28],[757,33,46,29,"instance"],[757,41,46,37],[757,43,46,39],[758,10,47,6,"NotificationHandler"],[758,29,47,25],[758,30,47,26,"instance"],[758,38,47,34],[758,41,47,37],[758,45,47,41,"NotificationHandler"],[758,64,47,60],[758,65,47,61],[758,66,47,62],[759,8,48,4],[760,8,49,4],[760,15,49,11,"NotificationHandler"],[760,34,49,30],[760,35,49,31,"instance"],[760,43,49,39],[761,6,50,2],[762,4,50,3],[763,2,50,3],[764,2,33,2],[765,2,28,6,"NotificationHandler"],[765,21,28,25],[765,22,34,26,"STORAGE_KEYS"],[765,34,34,38],[765,37,34,41],[766,4,35,4,"NOTIFICATION_HISTORY"],[766,24,35,24],[766,26,35,26],[766,56,35,56],[767,4,36,4,"UNREAD_COUNT"],[767,16,36,16],[767,18,36,18],[767,40,36,40],[768,4,37,4,"LAST_NOTIFICATION_ID"],[768,24,37,24],[768,26,37,26],[769,2,38,2],[769,3,38,3],[770,2,40,2],[771,2,28,6,"NotificationHandler"],[771,21,28,25],[771,22,41,26,"MAX_STORED_NOTIFICATIONS"],[771,46,41,50],[771,49,41,53],[771,51,41,55],[772,2,41,55],[772,6,41,55,"_default"],[772,14,41,55],[772,17,41,55,"exports"],[772,24,41,55],[772,25,41,55,"default"],[772,32,41,55],[772,35,636,15,"NotificationHandler"],[772,54,636,34],[772,55,636,35,"getInstance"],[772,66,636,46],[772,67,636,47],[772,68,636,48],[773,0,636,48],[773,3]],"functionMap":{"names":["<global>","NotificationHandler","constructor","getInstance","setNavigationRef","isNavigationReady","initialize","handleNotification","handleNotificationResponse","parseNotificationPayload","storeNotification","getStoredNotifications","markNotificationAsRead","notifications.map$argument_0","handleNotificationType","handleAutomationNotification","handleShareNotification","handleSocialNotification","handleSystemNotification","handleDeepLink","setTimeout$argument_0","queueNavigationAction","getDeepLinkAction","processNotificationQueue","setupNotificationListeners","generateNotificationId","incrementUnreadCount","updateUnreadCount","notifications.filter$argument_0","getUnreadCount","clearAllNotifications","markAllAsRead","trackNotificationReceived","trackNotificationOpened","sendTestNotification"],"mappings":"AAA;AC2B;ECe,wBD;EEE;GFK;EGK;GHG;EIK;GJE;EKK;GLY;EMK;GNyB;EOK;GPsB;EQK;GRmB;ESK;GTkC;EUK;GVQ;EWK;wCCI;ODO;GXa;EaK;GbqB;EcK;GdO;EeK;GfO;EgBK;GhBI;EiBK;GjBI;EkBK;mBCgB;SDQ;GlBU;EoBK;GpBW;EqBK;GrB8C;EsBK;GtBmB;EuBK;GvBY;EwBK;GxBgB;EyBK;GzBgB;E0BK;+CCG,YD;G1Ba;E4BK;G5BQ;E6BK;G7Bc;E8BK;wClBG,2BkB;G9BmB;E+BK;G/BO;EgCK;GhCO;EiCK;GjCuB;CDC"}},"type":"js/module"}]}