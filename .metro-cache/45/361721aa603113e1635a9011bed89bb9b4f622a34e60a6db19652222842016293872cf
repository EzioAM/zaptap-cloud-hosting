{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"aU3Lrys8xTVpYSDJal2nhppojC8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":414},"end":{"line":9,"column":31,"index":445}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":481},"end":{"line":11,"column":34,"index":515}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":516},"end":{"line":24,"column":22,"index":714}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"../handlers/PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":856},"end":{"line":33,"column":66,"index":922}}],"key":"Z7WldcovRqVbXERv5Mkjp/bqHuA=","exportNames":["*"]}},{"name":"../handlers/TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":38,"column":0,"index":1052},"end":{"line":38,"column":66,"index":1118}}],"key":"+Msf+8iAdn6txPXicJvQZ0hdOZ0=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":39,"column":0,"index":1119},"end":{"line":39,"column":33,"index":1152}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _react = _interopRequireWildcard(require(_dependencyMap[6], \"react\"));\n  var React = _react;\n  var _invariant = _interopRequireDefault(require(_dependencyMap[7], \"invariant\"));\n  var _reactNative = require(_dependencyMap[8], \"react-native\");\n  var _PanGestureHandler = require(_dependencyMap[9], \"../handlers/PanGestureHandler\");\n  var _TapGestureHandler = require(_dependencyMap[10], \"../handlers/TapGestureHandler\");\n  var _State = require(_dependencyMap[11], \"../State\");\n  var _jsxDevRuntime = require(_dependencyMap[12], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-gesture-handler/src/components/DrawerLayout.tsx\"; // This component is based on RN's DrawerLayoutAndroid API\n  //\n  // It perhaps deserves to be put in a separate repo, but since it relies on\n  // react-native-gesture-handler library which isn't very popular at the moment I\n  // decided to keep it here for the time being. It will allow us to move faster\n  // and fix issues that may arise in gesture handler library that could be found\n  // when using the drawer component\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  // Animated.AnimatedInterpolation has been converted to a generic type\n  // in @types/react-native 0.70. This way we can maintain compatibility\n  // with all versions of @types/react-native`\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n  /**\n   * @deprecated use Reanimated version of DrawerLayout instead\n   */\n  var DrawerLayout = exports.default = /*#__PURE__*/function (_Component) {\n    function DrawerLayout(_props) {\n      var _this;\n      (0, _classCallCheck2.default)(this, DrawerLayout);\n      _this = _callSuper(this, DrawerLayout, [_props]);\n      _this.accessibilityIsModalView = /*#__PURE__*/React.createRef();\n      _this.pointerEventsView = /*#__PURE__*/React.createRef();\n      _this.panGestureHandler = /*#__PURE__*/React.createRef();\n      _this.drawerShown = false;\n      _this.updateAnimatedEvent = function (props, state) {\n        // Event definition is based on\n        var drawerPosition = props.drawerPosition,\n          drawerWidth = props.drawerWidth,\n          drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n          touchXValue = state.touchX,\n          drawerTranslation = state.drawerTranslation,\n          containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n        if (drawerPosition !== 'left') {\n          // Most of the code is written in a way to handle left-side drawer. In\n          // order to handle right-side drawer the only thing we need to do is to\n          // reverse events coming from gesture handler in a way they emulate\n          // left-side drawer gestures. E.g. dragX is simply -dragX, and touchX is\n          // calulcated by subtracing real touchX from the width of the container\n          // (such that when touch happens at the right edge the value is simply 0)\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue); // TODO(TS): (for all \"as\" in this file) make sure we can map this\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue)); // TODO(TS): make sure we can map this;\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        // While closing the drawer when user starts gesture outside of its area (in greyed\n        // out part of the window), we want the drawer to follow only once finger reaches the\n        // edge of the drawer.\n        // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n        // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n        // an arrow pointing left\n        // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    +---------------+    +---------------+    +---------------+    +---------------+\n        //\n        // For the above to work properly we define animated value that will keep\n        // start position of the gesture. Then we use that value to calculate how\n        // much we need to subtract from the dragX. If the gesture started on the\n        // greyed out area we take the distance from the edge of the drawer to the\n        // start position. Otherwise we don't subtract at all and the drawer be\n        // pulled back as soon as you start the pan.\n        //\n        // This is used only when drawerType is \"front\"\n        //\n        var translationX = dragX;\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition); // TODO: as above\n        }\n        _this.openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        var gestureOptions = {\n          useNativeDriver: props.useNativeAnimations\n        };\n        if (_this.props.onDrawerSlide) {\n          gestureOptions.listener = function (ev) {\n            var translationX = Math.floor(Math.abs(ev.nativeEvent.translationX));\n            var position = translationX / _this.state.containerWidth;\n            _this.props.onDrawerSlide == null || _this.props.onDrawerSlide(position);\n          };\n        }\n        _this.onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], gestureOptions);\n      };\n      _this.handleContainerLayout = function (_ref) {\n        var nativeEvent = _ref.nativeEvent;\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n      _this.emitStateChanged = function (newState, drawerWillShow) {\n        _this.props.onDrawerStateChanged == null || _this.props.onDrawerStateChanged(newState, drawerWillShow);\n      };\n      _this.openingHandlerStateChange = function (_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n        if (nativeEvent.oldState === _State.State.ACTIVE) {\n          _this.handleRelease({\n            nativeEvent: nativeEvent\n          });\n        } else if (nativeEvent.state === _State.State.ACTIVE) {\n          _this.emitStateChanged(DRAGGING, false);\n          _this.setState({\n            drawerState: DRAGGING\n          });\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n      _this.onTapHandlerStateChange = function (_ref3) {\n        var nativeEvent = _ref3.nativeEvent;\n        if (_this.drawerShown && nativeEvent.oldState === _State.State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n      _this.handleRelease = function (_ref4) {\n        var nativeEvent = _ref4.nativeEvent;\n        var _this$props = _this.props,\n          drawerWidth = _this$props.drawerWidth,\n          drawerPosition = _this$props.drawerPosition,\n          drawerType = _this$props.drawerType;\n        var containerWidth = _this.state.containerWidth;\n        var dragX = nativeEvent.translationX,\n          velocityX = nativeEvent.velocityX,\n          touchX = nativeEvent.x;\n        if (drawerPosition !== 'left') {\n          // See description in _updateAnimatedEvent about why events are flipped\n          // for right-side drawer\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this.drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n        if (shouldOpen) {\n          _this.animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this.animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n      _this.updateShowing = function (showing) {\n        var _this$accessibilityIs, _this$pointerEventsVi, _this$panGestureHandl;\n        _this.drawerShown = showing;\n        (_this$accessibilityIs = _this.accessibilityIsModalView.current) == null || _this$accessibilityIs.setNativeProps({\n          accessibilityViewIsModal: showing\n        });\n        (_this$pointerEventsVi = _this.pointerEventsView.current) == null || _this$pointerEventsVi.setNativeProps({\n          pointerEvents: showing ? 'auto' : 'none'\n        });\n        var _this$props2 = _this.props,\n          drawerPosition = _this$props2.drawerPosition,\n          minSwipeDistance = _this$props2.minSwipeDistance,\n          edgeWidth = _this$props2.edgeWidth;\n        var fromLeft = drawerPosition === 'left';\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (_this.drawerShown ? -1 : 1);\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: showing ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: showing ? undefined : edgeWidth\n        };\n        // @ts-ignore internal API, maybe could be fixed in handler types\n        (_this$panGestureHandl = _this.panGestureHandler.current) == null || _this$panGestureHandl.setNativeProps({\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance\n        });\n      };\n      _this.animateDrawer = function (fromValue, toValue, velocity, speed) {\n        _this.state.dragX.setValue(0);\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n        if (fromValue != null) {\n          var nextFramePosition = fromValue;\n          if (_this.props.useNativeAnimations) {\n            // When using native driver, we predict the next position of the\n            // animation because it takes one frame of a roundtrip to pass RELEASE\n            // event from native driver to JS before we can start animating. Without\n            // it, it is more noticable that the frame is dropped.\n            if (fromValue < toValue && velocity > 0) {\n              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n            } else if (fromValue > toValue && velocity < 0) {\n              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n            }\n          }\n          _this.state.drawerTranslation.setValue(nextFramePosition);\n        }\n        var willShow = toValue !== 0;\n        _this.updateShowing(willShow);\n        _this.emitStateChanged(SETTLING, willShow);\n        _this.setState({\n          drawerState: SETTLING\n        });\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity: velocity,\n          bounciness: 0,\n          toValue: toValue,\n          useNativeDriver: _this.props.useNativeAnimations,\n          speed: speed != null ? speed : undefined\n        }).start(function (_ref5) {\n          var finished = _ref5.finished;\n          if (finished) {\n            _this.emitStateChanged(IDLE, willShow);\n            _this.setState({\n              drawerOpened: willShow\n            });\n            if (_this.state.drawerState !== DRAGGING) {\n              // It's possilbe that user started drag while the drawer\n              // was settling, don't override state in this case\n              _this.setState({\n                drawerState: IDLE\n              });\n            }\n            if (willShow) {\n              _this.props.onDrawerOpen == null || _this.props.onDrawerOpen();\n            } else {\n              _this.props.onDrawerClose == null || _this.props.onDrawerClose();\n            }\n          }\n        });\n      };\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _this.animateDrawer(\n        // TODO: decide if it should be null or undefined is the proper value\n        undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would not be clickable\n        _this.forceUpdate();\n      };\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        // TODO: decide if it should be null or undefined is the proper value\n        _this.animateDrawer(undefined, 0, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would be still clickable\n        _this.forceUpdate();\n      };\n      _this.renderOverlay = function () {\n        /* Overlay styles */\n        (0, _invariant.default)(_this.openValue, 'should be set');\n        var overlayOpacity;\n        if (_this.state.drawerState !== IDLE) {\n          overlayOpacity = _this.openValue;\n        } else {\n          overlayOpacity = _this.state.drawerOpened ? 1 : 0;\n        }\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_TapGestureHandler.TapGestureHandler, {\n          onHandlerStateChange: _this.onTapHandlerStateChange,\n          children: /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            pointerEvents: _this.drawerShown ? 'auto' : 'none',\n            ref: _this.pointerEventsView,\n            style: [styles.overlay, dynamicOverlayStyles]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 9\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 7\n        }, _this);\n      };\n      _this.renderDrawer = function () {\n        var _this$props3 = _this.props,\n          drawerBackgroundColor = _this$props3.drawerBackgroundColor,\n          drawerWidth = _this$props3.drawerWidth,\n          drawerPosition = _this$props3.drawerPosition,\n          drawerType = _this$props3.drawerType,\n          drawerContainerStyle = _this$props3.drawerContainerStyle,\n          contentContainerStyle = _this$props3.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n\n        // We rely on row and row-reverse flex directions to position the drawer\n        // properly. Apparently for RTL these are flipped which requires us to use\n        // the opposite setting for the drawer to appear from left or right\n        // according to the drawerPosition prop\n        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this.openValue;\n        (0, _invariant.default)(openValue, 'should be set');\n        var containerStyles;\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n        var drawerTranslateX = 0;\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          if (_this.state.drawerState !== IDLE) {\n            drawerTranslateX = openValue.interpolate({\n              inputRange: [0, 1],\n              outputRange: [closedDrawerOffset, 0],\n              extrapolate: 'clamp'\n            });\n          } else {\n            drawerTranslateX = _this.state.drawerOpened ? 0 : closedDrawerOffset;\n          }\n        }\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'\n        };\n        return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this.handleContainerLayout,\n          children: [/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n            importantForAccessibility: _this.drawerShown ? 'no-hide-descendants' : 'yes',\n            children: [typeof _this.props.children === 'function' ? _this.props.children(_this.openValue) : _this.props.children, _this.renderOverlay()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            pointerEvents: \"box-none\",\n            ref: _this.accessibilityIsModalView,\n            accessibilityViewIsModal: _this.drawerShown,\n            style: [styles.drawerContainer, drawerStyles, drawerContainerStyle],\n            children: /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactNative.View, {\n              style: dynamicDrawerStyles,\n              children: _this.props.renderNavigationView(_this.openValue)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 7\n        }, _this);\n      };\n      _this.setPanGestureRef = function (ref) {\n        // TODO(TS): make sure it is OK taken from\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065#issuecomment-596081842\n        _this.panGestureHandler.current = ref;\n        _this.props.onGestureRef == null || _this.props.onGestureRef(ref);\n      };\n      var _dragX = new _reactNative.Animated.Value(0);\n      var _touchX = new _reactNative.Animated.Value(0);\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        containerWidth: 0,\n        drawerState: IDLE,\n        drawerOpened: false\n      };\n      _this.updateAnimatedEvent(_props, _this.state);\n      return _this;\n    }\n    (0, _inherits2.default)(DrawerLayout, _Component);\n    return (0, _createClass2.default)(DrawerLayout, [{\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this.updateAnimatedEvent(props, state);\n        }\n        return true;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props4 = this.props,\n          drawerPosition = _this$props4.drawerPosition,\n          drawerLockMode = _this$props4.drawerLockMode,\n          edgeWidth = _this$props4.edgeWidth,\n          minSwipeDistance = _this$props4.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (this.drawerShown ? -1 : 1);\n\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        };\n        return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_PanGestureHandler.PanGestureHandler\n        // @ts-ignore could be fixed in handler types\n        , {\n          userSelect: this.props.userSelect,\n          activeCursor: this.props.activeCursor,\n          mouseButton: this.props.mouseButton,\n          enableContextMenu: this.props.enableContextMenu,\n          ref: this.setPanGestureRef,\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance,\n          failOffsetY: [-15, 15],\n          onGestureEvent: this.onGestureEvent,\n          onHandlerStateChange: this.openingHandlerStateChange,\n          enableTrackpadTwoFingerGesture: this.props.enableTrackpadTwoFingerGesture,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          children: this.renderDrawer()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 7\n        }, this);\n      }\n    }]);\n  }(_react.Component);\n  DrawerLayout.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked',\n    enableTrackpadTwoFingerGesture: false\n  };\n  DrawerLayout.positions = {\n    Left: 'left',\n    Right: 'right'\n  };\n  var styles = _reactNative.StyleSheet.create({\n    drawerContainer: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1001,\n      flexDirection: 'row'\n    }),\n    containerInFront: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1002\n    }),\n    containerOnBack: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject),\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1000\n    })\n  });\n});","lineCount":567,"map":[[12,2,9,0],[12,6,9,0,"_react"],[12,12,9,0],[12,15,9,0,"_interopRequireWildcard"],[12,38,9,0],[12,39,9,0,"require"],[12,46,9,0],[12,47,9,0,"_dependencyMap"],[12,61,9,0],[13,2,9,31],[13,6,9,31,"React"],[13,11,9,31],[13,14,9,31,"_react"],[13,20,9,31],[14,2,11,0],[14,6,11,0,"_invariant"],[14,16,11,0],[14,19,11,0,"_interopRequireDefault"],[14,41,11,0],[14,42,11,0,"require"],[14,49,11,0],[14,50,11,0,"_dependencyMap"],[14,64,11,0],[15,2,12,0],[15,6,12,0,"_reactNative"],[15,18,12,0],[15,21,12,0,"require"],[15,28,12,0],[15,29,12,0,"_dependencyMap"],[15,43,12,0],[16,2,33,0],[16,6,33,0,"_PanGestureHandler"],[16,24,33,0],[16,27,33,0,"require"],[16,34,33,0],[16,35,33,0,"_dependencyMap"],[16,49,33,0],[17,2,38,0],[17,6,38,0,"_TapGestureHandler"],[17,24,38,0],[17,27,38,0,"require"],[17,34,38,0],[17,35,38,0,"_dependencyMap"],[17,49,38,0],[18,2,39,0],[18,6,39,0,"_State"],[18,12,39,0],[18,15,39,0,"require"],[18,22,39,0],[18,23,39,0,"_dependencyMap"],[18,37,39,0],[19,2,39,33],[19,6,39,33,"_jsxDevRuntime"],[19,20,39,33],[19,23,39,33,"require"],[19,30,39,33],[19,31,39,33,"_dependencyMap"],[19,45,39,33],[20,2,39,33],[20,6,39,33,"_jsxFileName"],[20,18,39,33],[20,151,1,0],[21,2,2,0],[22,2,3,0],[23,2,4,0],[24,2,5,0],[25,2,6,0],[26,2,7,0],[27,2,7,0],[27,11,7,0,"_interopRequireWildcard"],[27,35,7,0,"e"],[27,36,7,0],[27,38,7,0,"t"],[27,39,7,0],[27,68,7,0,"WeakMap"],[27,75,7,0],[27,81,7,0,"r"],[27,82,7,0],[27,89,7,0,"WeakMap"],[27,96,7,0],[27,100,7,0,"n"],[27,101,7,0],[27,108,7,0,"WeakMap"],[27,115,7,0],[27,127,7,0,"_interopRequireWildcard"],[27,150,7,0],[27,162,7,0,"_interopRequireWildcard"],[27,186,7,0,"e"],[27,187,7,0],[27,189,7,0,"t"],[27,190,7,0],[27,199,7,0,"t"],[27,200,7,0],[27,204,7,0,"e"],[27,205,7,0],[27,209,7,0,"e"],[27,210,7,0],[27,211,7,0,"__esModule"],[27,221,7,0],[27,230,7,0,"e"],[27,231,7,0],[27,237,7,0,"o"],[27,238,7,0],[27,240,7,0,"i"],[27,241,7,0],[27,243,7,0,"f"],[27,244,7,0],[27,249,7,0,"__proto__"],[27,258,7,0],[27,266,7,0,"default"],[27,273,7,0],[27,275,7,0,"e"],[27,276,7,0],[27,293,7,0,"e"],[27,294,7,0],[27,317,7,0,"e"],[27,318,7,0],[27,343,7,0,"e"],[27,344,7,0],[27,353,7,0,"f"],[27,354,7,0],[27,360,7,0,"o"],[27,361,7,0],[27,364,7,0,"t"],[27,365,7,0],[27,368,7,0,"n"],[27,369,7,0],[27,372,7,0,"r"],[27,373,7,0],[27,381,7,0,"o"],[27,382,7,0],[27,383,7,0,"has"],[27,386,7,0],[27,387,7,0,"e"],[27,388,7,0],[27,398,7,0,"o"],[27,399,7,0],[27,400,7,0,"get"],[27,403,7,0],[27,404,7,0,"e"],[27,405,7,0],[27,408,7,0,"o"],[27,409,7,0],[27,410,7,0,"set"],[27,413,7,0],[27,414,7,0,"e"],[27,415,7,0],[27,417,7,0,"f"],[27,418,7,0],[27,432,7,0,"_t"],[27,434,7,0],[27,438,7,0,"e"],[27,439,7,0],[27,455,7,0,"_t"],[27,457,7,0],[27,464,7,0,"hasOwnProperty"],[27,478,7,0],[27,479,7,0,"call"],[27,483,7,0],[27,484,7,0,"e"],[27,485,7,0],[27,487,7,0,"_t"],[27,489,7,0],[27,496,7,0,"i"],[27,497,7,0],[27,501,7,0,"o"],[27,502,7,0],[27,505,7,0,"Object"],[27,511,7,0],[27,512,7,0,"defineProperty"],[27,526,7,0],[27,531,7,0,"Object"],[27,537,7,0],[27,538,7,0,"getOwnPropertyDescriptor"],[27,562,7,0],[27,563,7,0,"e"],[27,564,7,0],[27,566,7,0,"_t"],[27,568,7,0],[27,575,7,0,"i"],[27,576,7,0],[27,577,7,0,"get"],[27,580,7,0],[27,584,7,0,"i"],[27,585,7,0],[27,586,7,0,"set"],[27,589,7,0],[27,593,7,0,"o"],[27,594,7,0],[27,595,7,0,"f"],[27,596,7,0],[27,598,7,0,"_t"],[27,600,7,0],[27,602,7,0,"i"],[27,603,7,0],[27,607,7,0,"f"],[27,608,7,0],[27,609,7,0,"_t"],[27,611,7,0],[27,615,7,0,"e"],[27,616,7,0],[27,617,7,0,"_t"],[27,619,7,0],[27,630,7,0,"f"],[27,631,7,0],[27,636,7,0,"e"],[27,637,7,0],[27,639,7,0,"t"],[27,640,7,0],[28,2,7,0],[28,11,7,0,"_callSuper"],[28,22,7,0,"t"],[28,23,7,0],[28,25,7,0,"o"],[28,26,7,0],[28,28,7,0,"e"],[28,29,7,0],[28,40,7,0,"o"],[28,41,7,0],[28,48,7,0,"_getPrototypeOf2"],[28,64,7,0],[28,65,7,0,"default"],[28,72,7,0],[28,74,7,0,"o"],[28,75,7,0],[28,82,7,0,"_possibleConstructorReturn2"],[28,109,7,0],[28,110,7,0,"default"],[28,117,7,0],[28,119,7,0,"t"],[28,120,7,0],[28,122,7,0,"_isNativeReflectConstruct"],[28,147,7,0],[28,152,7,0,"Reflect"],[28,159,7,0],[28,160,7,0,"construct"],[28,169,7,0],[28,170,7,0,"o"],[28,171,7,0],[28,173,7,0,"e"],[28,174,7,0],[28,186,7,0,"_getPrototypeOf2"],[28,202,7,0],[28,203,7,0,"default"],[28,210,7,0],[28,212,7,0,"t"],[28,213,7,0],[28,215,7,0,"constructor"],[28,226,7,0],[28,230,7,0,"o"],[28,231,7,0],[28,232,7,0,"apply"],[28,237,7,0],[28,238,7,0,"t"],[28,239,7,0],[28,241,7,0,"e"],[28,242,7,0],[29,2,7,0],[29,11,7,0,"_isNativeReflectConstruct"],[29,37,7,0],[29,51,7,0,"t"],[29,52,7,0],[29,56,7,0,"Boolean"],[29,63,7,0],[29,64,7,0,"prototype"],[29,73,7,0],[29,74,7,0,"valueOf"],[29,81,7,0],[29,82,7,0,"call"],[29,86,7,0],[29,87,7,0,"Reflect"],[29,94,7,0],[29,95,7,0,"construct"],[29,104,7,0],[29,105,7,0,"Boolean"],[29,112,7,0],[29,145,7,0,"t"],[29,146,7,0],[29,159,7,0,"_isNativeReflectConstruct"],[29,184,7,0],[29,196,7,0,"_isNativeReflectConstruct"],[29,222,7,0],[29,235,7,0,"t"],[29,236,7,0],[30,2,41,0],[30,6,41,6,"DRAG_TOSS"],[30,15,41,15],[30,18,41,18],[30,22,41,22],[31,2,43,0],[31,6,43,6,"IDLE"],[31,10,43,23],[31,13,43,26],[31,19,43,32],[32,2,44,0],[32,6,44,6,"DRAGGING"],[32,14,44,27],[32,17,44,30],[32,27,44,40],[33,2,45,0],[33,6,45,6,"SETTLING"],[33,14,45,27],[33,17,45,30],[33,27,45,40],[35,2,47,0],[36,0,48,0],[37,0,49,0],[39,2,52,0],[40,0,53,0],[41,0,54,0],[43,2,57,0],[44,0,58,0],[45,0,59,0],[47,2,62,0],[48,0,63,0],[49,0,64,0],[51,2,67,0],[52,0,68,0],[53,0,69,0],[55,2,72,0],[56,2,73,0],[57,2,74,0],[59,2,77,0],[60,0,78,0],[61,0,79,0],[63,2,208,0],[64,0,209,0],[65,0,210,0],[67,2,220,0],[68,0,221,0],[69,0,222,0],[70,2,228,0],[71,0,229,0],[72,0,230,0],[73,2,228,0],[73,6,231,21,"DrawerLayout"],[73,18,231,33],[73,21,231,33,"exports"],[73,28,231,33],[73,29,231,33,"default"],[73,36,231,33],[73,62,231,33,"_Component"],[73,72,231,33],[74,4,247,2],[74,13,247,2,"DrawerLayout"],[74,26,247,14,"props"],[74,32,247,38],[74,34,247,40],[75,6,247,40],[75,10,247,40,"_this"],[75,15,247,40],[76,6,247,40],[76,10,247,40,"_classCallCheck2"],[76,26,247,40],[76,27,247,40,"default"],[76,34,247,40],[76,42,247,40,"DrawerLayout"],[76,54,247,40],[77,6,248,4,"_this"],[77,11,248,4],[77,14,248,4,"_callSuper"],[77,24,248,4],[77,31,248,4,"DrawerLayout"],[77,43,248,4],[77,46,248,10,"props"],[77,52,248,15],[78,6,248,17,"_this"],[78,11,248,17],[78,12,283,10,"accessibilityIsModalView"],[78,36,283,34],[78,52,283,37,"React"],[78,57,283,42],[78,58,283,43,"createRef"],[78,67,283,52],[78,68,283,59],[78,69,283,60],[79,6,283,60,"_this"],[79,11,283,60],[79,12,284,10,"pointerEventsView"],[79,29,284,27],[79,45,284,30,"React"],[79,50,284,35],[79,51,284,36,"createRef"],[79,60,284,45],[79,61,284,52],[79,62,284,53],[80,6,284,53,"_this"],[80,11,284,53],[80,12,285,10,"panGestureHandler"],[80,29,285,27],[80,45,285,30,"React"],[80,50,285,35],[80,51,285,36,"createRef"],[80,60,285,45],[80,61,285,72],[80,62,285,73],[81,6,285,73,"_this"],[81,11,285,73],[81,12,286,10,"drawerShown"],[81,23,286,21],[81,26,286,24],[81,31,286,29],[82,6,286,29,"_this"],[82,11,286,29],[82,12,293,10,"updateAnimatedEvent"],[82,31,293,29],[82,34,293,32],[82,44,294,4,"props"],[82,49,294,28],[82,51,295,4,"state"],[82,56,295,28],[82,58,296,7],[83,8,297,4],[84,8,298,4],[84,12,298,12,"drawerPosition"],[84,26,298,26],[84,29,298,56,"props"],[84,34,298,61],[84,35,298,12,"drawerPosition"],[84,49,298,26],[85,10,298,28,"drawerWidth"],[85,21,298,39],[85,24,298,56,"props"],[85,29,298,61],[85,30,298,28,"drawerWidth"],[85,41,298,39],[86,10,298,41,"drawerType"],[86,20,298,51],[86,23,298,56,"props"],[86,28,298,61],[86,29,298,41,"drawerType"],[86,39,298,51],[87,8,299,4],[87,12,300,13,"dragXValue"],[87,22,300,23],[87,25,304,8,"state"],[87,30,304,13],[87,31,300,6,"dragX"],[87,36,300,11],[88,10,301,14,"touchXValue"],[88,21,301,25],[88,24,304,8,"state"],[88,29,304,13],[88,30,301,6,"touchX"],[88,36,301,12],[89,10,302,6,"drawerTranslation"],[89,27,302,23],[89,30,304,8,"state"],[89,35,304,13],[89,36,302,6,"drawerTranslation"],[89,53,302,23],[90,10,303,6,"containerWidth"],[90,24,303,20],[90,27,304,8,"state"],[90,32,304,13],[90,33,303,6,"containerWidth"],[90,47,303,20],[91,8,306,4],[91,12,306,8,"dragX"],[91,17,306,13],[91,20,306,16,"dragXValue"],[91,30,306,26],[92,8,307,4],[92,12,307,8,"touchX"],[92,18,307,14],[92,21,307,17,"touchXValue"],[92,32,307,28],[93,8,309,4],[93,12,309,8,"drawerPosition"],[93,26,309,22],[93,31,309,27],[93,37,309,33],[93,39,309,35],[94,10,310,6],[95,10,311,6],[96,10,312,6],[97,10,313,6],[98,10,314,6],[99,10,315,6],[100,10,316,6,"dragX"],[100,15,316,11],[100,18,316,14,"Animated"],[100,39,316,22],[100,40,316,23,"multiply"],[100,48,316,31],[100,49,317,8],[100,53,317,12,"Animated"],[100,74,317,20],[100,75,317,21,"Value"],[100,80,317,26],[100,81,317,27],[100,82,317,28],[100,83,317,29],[100,84,317,30],[100,86,318,8,"dragXValue"],[100,96,319,6],[100,97,319,25],[100,98,319,26],[100,99,319,27],[101,10,320,6,"touchX"],[101,16,320,12],[101,19,320,15,"Animated"],[101,40,320,23],[101,41,320,24,"add"],[101,44,320,27],[101,45,321,8],[101,49,321,12,"Animated"],[101,70,321,20],[101,71,321,21,"Value"],[101,76,321,26],[101,77,321,27,"containerWidth"],[101,91,321,41],[101,92,321,42],[101,94,322,8,"Animated"],[101,115,322,16],[101,116,322,17,"multiply"],[101,124,322,25],[101,125,322,26],[101,129,322,30,"Animated"],[101,150,322,38],[101,151,322,39,"Value"],[101,156,322,44],[101,157,322,45],[101,158,322,46],[101,159,322,47],[101,160,322,48],[101,162,322,50,"touchXValue"],[101,173,322,61],[101,174,323,6],[101,175,323,25],[101,176,323,26],[101,177,323,27],[102,10,324,6,"touchXValue"],[102,21,324,17],[102,22,324,18,"setValue"],[102,30,324,26],[102,31,324,27,"containerWidth"],[102,45,324,41],[102,46,324,42],[103,8,325,4],[103,9,325,5],[103,15,325,11],[104,10,326,6,"touchXValue"],[104,21,326,17],[104,22,326,18,"setValue"],[104,30,326,26],[104,31,326,27],[104,32,326,28],[104,33,326,29],[105,8,327,4],[107,8,329,4],[108,8,330,4],[109,8,331,4],[110,8,332,4],[111,8,333,4],[112,8,334,4],[113,8,335,4],[114,8,336,4],[115,8,337,4],[116,8,338,4],[117,8,339,4],[118,8,340,4],[119,8,341,4],[120,8,342,4],[121,8,343,4],[122,8,344,4],[123,8,345,4],[124,8,346,4],[125,8,347,4],[126,8,348,4],[127,8,349,4],[128,8,350,4],[129,8,351,4],[130,8,352,4],[131,8,353,4],[132,8,354,4],[132,12,354,8,"translationX"],[132,24,354,20],[132,27,354,23,"dragX"],[132,32,354,28],[133,8,355,4],[133,12,355,8,"drawerType"],[133,22,355,18],[133,27,355,23],[133,34,355,30],[133,36,355,32],[134,10,356,6],[134,14,356,12,"startPositionX"],[134,28,356,26],[134,31,356,29,"Animated"],[134,52,356,37],[134,53,356,38,"add"],[134,56,356,41],[134,57,357,8,"touchX"],[134,63,357,14],[134,65,358,8,"Animated"],[134,86,358,16],[134,87,358,17,"multiply"],[134,95,358,25],[134,96,358,26],[134,100,358,30,"Animated"],[134,121,358,38],[134,122,358,39,"Value"],[134,127,358,44],[134,128,358,45],[134,129,358,46],[134,130,358,47],[134,131,358,48],[134,133,358,50,"dragX"],[134,138,358,55],[134,139,359,6],[134,140,359,7],[135,10,361,6],[135,14,361,12,"dragOffsetFromOnStartPosition"],[135,43,361,41],[135,46,361,44,"startPositionX"],[135,60,361,58],[135,61,361,59,"interpolate"],[135,72,361,70],[135,73,361,71],[136,12,362,8,"inputRange"],[136,22,362,18],[136,24,362,20],[136,25,362,21,"drawerWidth"],[136,36,362,32],[136,39,362,36],[136,40,362,37],[136,42,362,39,"drawerWidth"],[136,53,362,50],[136,55,362,53,"drawerWidth"],[136,66,362,64],[136,69,362,68],[136,70,362,69],[136,71,362,70],[137,12,363,8,"outputRange"],[137,23,363,19],[137,25,363,21],[137,26,363,22],[137,27,363,23],[137,29,363,25],[137,30,363,26],[137,32,363,28],[137,33,363,29],[138,10,364,6],[138,11,364,7],[138,12,364,8],[139,10,365,6,"translationX"],[139,22,365,18],[139,25,365,21,"Animated"],[139,46,365,29],[139,47,365,30,"add"],[139,50,365,33],[139,51,366,8,"dragX"],[139,56,366,13],[139,58,367,8,"dragOffsetFromOnStartPosition"],[139,87,368,6],[139,88,368,25],[139,89,368,26],[139,90,368,27],[140,8,369,4],[141,8,371,4,"_this"],[141,13,371,4],[141,14,371,9,"openValue"],[141,23,371,18],[141,26,371,21,"Animated"],[141,47,371,29],[141,48,371,30,"add"],[141,51,371,33],[141,52,371,34,"translationX"],[141,64,371,46],[141,66,371,48,"drawerTranslation"],[141,83,371,65],[141,84,371,66],[141,85,371,67,"interpolate"],[141,96,371,78],[141,97,371,79],[142,10,372,6,"inputRange"],[142,20,372,16],[142,22,372,18],[142,23,372,19],[142,24,372,20],[142,26,372,22,"drawerWidth"],[142,37,372,33],[142,38,372,35],[143,10,373,6,"outputRange"],[143,21,373,17],[143,23,373,19],[143,24,373,20],[143,25,373,21],[143,27,373,23],[143,28,373,24],[143,29,373,25],[144,10,374,6,"extrapolate"],[144,21,374,17],[144,23,374,19],[145,8,375,4],[145,9,375,5],[145,10,375,6],[146,8,377,4],[146,12,377,10,"gestureOptions"],[146,26,383,5],[146,29,383,8],[147,10,384,6,"useNativeDriver"],[147,25,384,21],[147,27,384,23,"props"],[147,32,384,28],[147,33,384,29,"useNativeAnimations"],[148,8,385,4],[148,9,385,5],[149,8,387,4],[149,12,387,8,"_this"],[149,17,387,8],[149,18,387,13,"props"],[149,23,387,18],[149,24,387,19,"onDrawerSlide"],[149,37,387,32],[149,39,387,34],[150,10,388,6,"gestureOptions"],[150,24,388,20],[150,25,388,21,"listener"],[150,33,388,29],[150,36,388,32],[150,46,388,33,"ev"],[150,48,388,35],[150,50,388,40],[151,12,389,8],[151,16,389,14,"translationX"],[151,28,389,26],[151,31,389,29,"Math"],[151,35,389,33],[151,36,389,34,"floor"],[151,41,389,39],[151,42,389,40,"Math"],[151,46,389,44],[151,47,389,45,"abs"],[151,50,389,48],[151,51,389,49,"ev"],[151,53,389,51],[151,54,389,52,"nativeEvent"],[151,65,389,63],[151,66,389,64,"translationX"],[151,78,389,76],[151,79,389,77],[151,80,389,78],[152,12,390,8],[152,16,390,14,"position"],[152,24,390,22],[152,27,390,25,"translationX"],[152,39,390,37],[152,42,390,40,"_this"],[152,47,390,40],[152,48,390,45,"state"],[152,53,390,50],[152,54,390,51,"containerWidth"],[152,68,390,65],[153,12,392,8,"_this"],[153,17,392,8],[153,18,392,13,"props"],[153,23,392,18],[153,24,392,19,"onDrawerSlide"],[153,37,392,32],[153,49,392,8,"_this"],[153,54,392,8],[153,55,392,13,"props"],[153,60,392,18],[153,61,392,19,"onDrawerSlide"],[153,74,392,32],[153,75,392,35,"position"],[153,83,392,43],[153,84,392,44],[154,10,393,6],[154,11,393,7],[155,8,394,4],[156,8,396,4,"_this"],[156,13,396,4],[156,14,396,9,"onGestureEvent"],[156,28,396,23],[156,31,396,26,"Animated"],[156,52,396,34],[156,53,396,35,"event"],[156,58,396,40],[156,59,397,6],[156,60,397,7],[157,10,397,9,"nativeEvent"],[157,21,397,20],[157,23,397,22],[158,12,397,24,"translationX"],[158,24,397,36],[158,26,397,38,"dragXValue"],[158,36,397,48],[159,12,397,50,"x"],[159,13,397,51],[159,15,397,53,"touchXValue"],[160,10,397,65],[161,8,397,67],[161,9,397,68],[161,10,397,69],[161,12,398,6,"gestureOptions"],[161,26,399,4],[161,27,399,5],[162,6,400,2],[162,7,400,3],[163,6,400,3,"_this"],[163,11,400,3],[163,12,402,10,"handleContainerLayout"],[163,33,402,31],[163,36,402,34],[163,46,402,34,"_ref"],[163,50,402,34],[163,52,402,74],[164,8,402,74],[164,12,402,37,"nativeEvent"],[164,23,402,48],[164,26,402,48,"_ref"],[164,30,402,48],[164,31,402,37,"nativeEvent"],[164,42,402,48],[165,8,403,4,"_this"],[165,13,403,4],[165,14,403,9,"setState"],[165,22,403,17],[165,23,403,18],[166,10,403,20,"containerWidth"],[166,24,403,34],[166,26,403,36,"nativeEvent"],[166,37,403,47],[166,38,403,48,"layout"],[166,44,403,54],[166,45,403,55,"width"],[167,8,403,61],[167,9,403,62],[167,10,403,63],[168,6,404,2],[168,7,404,3],[169,6,404,3,"_this"],[169,11,404,3],[169,12,406,10,"emitStateChanged"],[169,28,406,26],[169,31,406,29],[169,41,407,4,"newState"],[169,49,407,25],[169,51,408,4,"drawerWillShow"],[169,65,408,27],[169,67,409,7],[170,8,410,4,"_this"],[170,13,410,4],[170,14,410,9,"props"],[170,19,410,14],[170,20,410,15,"onDrawerStateChanged"],[170,40,410,35],[170,52,410,4,"_this"],[170,57,410,4],[170,58,410,9,"props"],[170,63,410,14],[170,64,410,15,"onDrawerStateChanged"],[170,84,410,35],[170,85,410,38,"newState"],[170,93,410,46],[170,95,410,48,"drawerWillShow"],[170,109,410,62],[170,110,410,63],[171,6,411,2],[171,7,411,3],[172,6,411,3,"_this"],[172,11,411,3],[172,12,413,10,"openingHandlerStateChange"],[172,37,413,35],[172,40,413,38],[172,50,413,38,"_ref2"],[172,55,413,38],[172,57,415,64],[173,8,415,64],[173,12,414,4,"nativeEvent"],[173,23,414,15],[173,26,414,15,"_ref2"],[173,31,414,15],[173,32,414,4,"nativeEvent"],[173,43,414,15],[174,8,416,4],[174,12,416,8,"nativeEvent"],[174,23,416,19],[174,24,416,20,"oldState"],[174,32,416,28],[174,37,416,33,"State"],[174,49,416,38],[174,50,416,39,"ACTIVE"],[174,56,416,45],[174,58,416,47],[175,10,417,6,"_this"],[175,15,417,6],[175,16,417,11,"handleRelease"],[175,29,417,24],[175,30,417,25],[176,12,417,27,"nativeEvent"],[176,23,417,38],[176,25,417,27,"nativeEvent"],[177,10,417,39],[177,11,417,40],[177,12,417,41],[178,8,418,4],[178,9,418,5],[178,15,418,11],[178,19,418,15,"nativeEvent"],[178,30,418,26],[178,31,418,27,"state"],[178,36,418,32],[178,41,418,37,"State"],[178,53,418,42],[178,54,418,43,"ACTIVE"],[178,60,418,49],[178,62,418,51],[179,10,419,6,"_this"],[179,15,419,6],[179,16,419,11,"emitStateChanged"],[179,32,419,27],[179,33,419,28,"DRAGGING"],[179,41,419,36],[179,43,419,38],[179,48,419,43],[179,49,419,44],[180,10,420,6,"_this"],[180,15,420,6],[180,16,420,11,"setState"],[180,24,420,19],[180,25,420,20],[181,12,420,22,"drawerState"],[181,23,420,33],[181,25,420,35,"DRAGGING"],[182,10,420,44],[182,11,420,45],[182,12,420,46],[183,10,421,6],[183,14,421,10,"_this"],[183,19,421,10],[183,20,421,15,"props"],[183,25,421,20],[183,26,421,21,"keyboardDismissMode"],[183,45,421,40],[183,50,421,45],[183,59,421,54],[183,61,421,56],[184,12,422,8,"Keyboard"],[184,33,422,16],[184,34,422,17,"dismiss"],[184,41,422,24],[184,42,422,25],[184,43,422,26],[185,10,423,6],[186,10,424,6],[186,14,424,10,"_this"],[186,19,424,10],[186,20,424,15,"props"],[186,25,424,20],[186,26,424,21,"hideStatusBar"],[186,39,424,34],[186,41,424,36],[187,12,425,8,"StatusBar"],[187,34,425,17],[187,35,425,18,"setHidden"],[187,44,425,27],[187,45,425,28],[187,49,425,32],[187,51,425,34,"_this"],[187,56,425,34],[187,57,425,39,"props"],[187,62,425,44],[187,63,425,45,"statusBarAnimation"],[187,81,425,63],[187,85,425,67],[187,92,425,74],[187,93,425,75],[188,10,426,6],[189,8,427,4],[190,6,428,2],[190,7,428,3],[191,6,428,3,"_this"],[191,11,428,3],[191,12,430,10,"onTapHandlerStateChange"],[191,35,430,33],[191,38,430,36],[191,48,430,36,"_ref3"],[191,53,430,36],[191,55,432,64],[192,8,432,64],[192,12,431,4,"nativeEvent"],[192,23,431,15],[192,26,431,15,"_ref3"],[192,31,431,15],[192,32,431,4,"nativeEvent"],[192,43,431,15],[193,8,433,4],[193,12,434,6,"_this"],[193,17,434,6],[193,18,434,11,"drawerShown"],[193,29,434,22],[193,33,435,6,"nativeEvent"],[193,44,435,17],[193,45,435,18,"oldState"],[193,53,435,26],[193,58,435,31,"State"],[193,70,435,36],[193,71,435,37,"ACTIVE"],[193,77,435,43],[193,81,436,6,"_this"],[193,86,436,6],[193,87,436,11,"props"],[193,92,436,16],[193,93,436,17,"drawerLockMode"],[193,107,436,31],[193,112,436,36],[193,125,436,49],[193,127,437,6],[194,10,438,6,"_this"],[194,15,438,6],[194,16,438,11,"closeDrawer"],[194,27,438,22],[194,28,438,23],[194,29,438,24],[195,8,439,4],[196,6,440,2],[196,7,440,3],[197,6,440,3,"_this"],[197,11,440,3],[197,12,442,10,"handleRelease"],[197,25,442,23],[197,28,442,26],[197,38,442,26,"_ref4"],[197,43,442,26],[197,45,444,64],[198,8,444,64],[198,12,443,4,"nativeEvent"],[198,23,443,15],[198,26,443,15,"_ref4"],[198,31,443,15],[198,32,443,4,"nativeEvent"],[198,43,443,15],[199,8,445,4],[199,12,445,4,"_this$props"],[199,23,445,4],[199,26,445,56,"_this"],[199,31,445,56],[199,32,445,61,"props"],[199,37,445,66],[200,10,445,12,"drawerWidth"],[200,21,445,23],[200,24,445,23,"_this$props"],[200,35,445,23],[200,36,445,12,"drawerWidth"],[200,47,445,23],[201,10,445,25,"drawerPosition"],[201,24,445,39],[201,27,445,39,"_this$props"],[201,38,445,39],[201,39,445,25,"drawerPosition"],[201,53,445,39],[202,10,445,41,"drawerType"],[202,20,445,51],[202,23,445,51,"_this$props"],[202,34,445,51],[202,35,445,41,"drawerType"],[202,45,445,51],[203,8,446,4],[203,12,446,12,"containerWidth"],[203,26,446,26],[203,29,446,31,"_this"],[203,34,446,31],[203,35,446,36,"state"],[203,40,446,41],[203,41,446,12,"containerWidth"],[203,55,446,26],[204,8,447,4],[204,12,447,24,"dragX"],[204,17,447,29],[204,20,447,56,"nativeEvent"],[204,31,447,67],[204,32,447,10,"translationX"],[204,44,447,22],[205,10,447,31,"velocityX"],[205,19,447,40],[205,22,447,56,"nativeEvent"],[205,33,447,67],[205,34,447,31,"velocityX"],[205,43,447,40],[206,10,447,45,"touchX"],[206,16,447,51],[206,19,447,56,"nativeEvent"],[206,30,447,67],[206,31,447,42,"x"],[206,32,447,43],[207,8,449,4],[207,12,449,8,"drawerPosition"],[207,26,449,22],[207,31,449,27],[207,37,449,33],[207,39,449,35],[208,10,450,6],[209,10,451,6],[210,10,452,6,"dragX"],[210,15,452,11],[210,18,452,14],[210,19,452,15,"dragX"],[210,24,452,20],[211,10,453,6,"touchX"],[211,16,453,12],[211,19,453,15,"containerWidth"],[211,33,453,29],[211,36,453,32,"touchX"],[211,42,453,38],[212,10,454,6,"velocityX"],[212,19,454,15],[212,22,454,18],[212,23,454,19,"velocityX"],[212,32,454,28],[213,8,455,4],[214,8,457,4],[214,12,457,10,"gestureStartX"],[214,25,457,23],[214,28,457,26,"touchX"],[214,34,457,32],[214,37,457,35,"dragX"],[214,42,457,40],[215,8,458,4],[215,12,458,8,"dragOffsetBasedOnStart"],[215,34,458,30],[215,37,458,33],[215,38,458,34],[216,8,460,4],[216,12,460,8,"drawerType"],[216,22,460,18],[216,27,460,23],[216,34,460,30],[216,36,460,32],[217,10,461,6,"dragOffsetBasedOnStart"],[217,32,461,28],[217,35,462,8,"gestureStartX"],[217,48,462,21],[217,51,462,24,"drawerWidth"],[217,62,462,36],[217,65,462,39,"gestureStartX"],[217,78,462,52],[217,81,462,55,"drawerWidth"],[217,92,462,67],[217,95,462,70],[217,96,462,71],[218,8,463,4],[219,8,465,4],[219,12,465,10,"startOffsetX"],[219,24,465,22],[219,27,466,6,"dragX"],[219,32,466,11],[219,35,466,14,"dragOffsetBasedOnStart"],[219,57,466,36],[219,61,466,40,"_this"],[219,66,466,40],[219,67,466,45,"drawerShown"],[219,78,466,56],[219,81,466,59,"drawerWidth"],[219,92,466,70],[219,95,466,74],[219,96,466,75],[219,97,466,76],[220,8,467,4],[220,12,467,10,"projOffsetX"],[220,23,467,21],[220,26,467,24,"startOffsetX"],[220,38,467,36],[220,41,467,39,"DRAG_TOSS"],[220,50,467,48],[220,53,467,51,"velocityX"],[220,62,467,60],[221,8,469,4],[221,12,469,10,"shouldOpen"],[221,22,469,20],[221,25,469,23,"projOffsetX"],[221,36,469,34],[221,39,469,37,"drawerWidth"],[221,50,469,48],[221,53,469,52],[221,54,469,53],[222,8,471,4],[222,12,471,8,"shouldOpen"],[222,22,471,18],[222,24,471,20],[223,10,472,6,"_this"],[223,15,472,6],[223,16,472,11,"animateDrawer"],[223,29,472,24],[223,30,472,25,"startOffsetX"],[223,42,472,37],[223,44,472,39,"drawerWidth"],[223,55,472,50],[223,57,472,53,"velocityX"],[223,66,472,62],[223,67,472,63],[224,8,473,4],[224,9,473,5],[224,15,473,11],[225,10,474,6,"_this"],[225,15,474,6],[225,16,474,11,"animateDrawer"],[225,29,474,24],[225,30,474,25,"startOffsetX"],[225,42,474,37],[225,44,474,39],[225,45,474,40],[225,47,474,42,"velocityX"],[225,56,474,51],[225,57,474,52],[226,8,475,4],[227,6,476,2],[227,7,476,3],[228,6,476,3,"_this"],[228,11,476,3],[228,12,478,10,"updateShowing"],[228,25,478,23],[228,28,478,26],[228,38,478,27,"showing"],[228,45,478,43],[228,47,478,48],[229,8,478,48],[229,12,478,48,"_this$accessibilityIs"],[229,33,478,48],[229,35,478,48,"_this$pointerEventsVi"],[229,56,478,48],[229,58,478,48,"_this$panGestureHandl"],[229,79,478,48],[230,8,479,4,"_this"],[230,13,479,4],[230,14,479,9,"drawerShown"],[230,25,479,20],[230,28,479,23,"showing"],[230,35,479,30],[231,8,480,4],[231,9,480,4,"_this$accessibilityIs"],[231,30,480,4],[231,33,480,4,"_this"],[231,38,480,4],[231,39,480,9,"accessibilityIsModalView"],[231,63,480,33],[231,64,480,34,"current"],[231,71,480,41],[231,84,480,4,"_this$accessibilityIs"],[231,105,480,4],[231,106,480,43,"setNativeProps"],[231,120,480,57],[231,121,480,58],[232,10,481,6,"accessibilityViewIsModal"],[232,34,481,30],[232,36,481,32,"showing"],[233,8,482,4],[233,9,482,5],[233,10,482,6],[234,8,483,4],[234,9,483,4,"_this$pointerEventsVi"],[234,30,483,4],[234,33,483,4,"_this"],[234,38,483,4],[234,39,483,9,"pointerEventsView"],[234,56,483,26],[234,57,483,27,"current"],[234,64,483,34],[234,77,483,4,"_this$pointerEventsVi"],[234,98,483,4],[234,99,483,36,"setNativeProps"],[234,113,483,50],[234,114,483,51],[235,10,484,6,"pointerEvents"],[235,23,484,19],[235,25,484,21,"showing"],[235,32,484,28],[235,35,484,31],[235,41,484,37],[235,44,484,40],[236,8,485,4],[236,9,485,5],[236,10,485,6],[237,8,486,4],[237,12,486,4,"_this$props2"],[237,24,486,4],[237,27,486,60,"_this"],[237,32,486,60],[237,33,486,65,"props"],[237,38,486,70],[238,10,486,12,"drawerPosition"],[238,24,486,26],[238,27,486,26,"_this$props2"],[238,39,486,26],[238,40,486,12,"drawerPosition"],[238,54,486,26],[239,10,486,28,"minSwipeDistance"],[239,26,486,44],[239,29,486,44,"_this$props2"],[239,41,486,44],[239,42,486,28,"minSwipeDistance"],[239,58,486,44],[240,10,486,46,"edgeWidth"],[240,19,486,55],[240,22,486,55,"_this$props2"],[240,34,486,55],[240,35,486,46,"edgeWidth"],[240,44,486,55],[241,8,487,4],[241,12,487,10,"fromLeft"],[241,20,487,18],[241,23,487,21,"drawerPosition"],[241,37,487,35],[241,42,487,40],[241,48,487,46],[242,8,488,4],[243,8,489,4],[244,8,490,4],[245,8,491,4],[245,12,491,10,"gestureOrientation"],[245,30,491,28],[245,33,492,6],[245,34,492,7,"fromLeft"],[245,42,492,15],[245,45,492,18],[245,46,492,19],[245,49,492,22],[245,50,492,23],[245,51,492,24],[245,56,492,29,"_this"],[245,61,492,29],[245,62,492,34,"drawerShown"],[245,73,492,45],[245,76,492,48],[245,77,492,49],[245,78,492,50],[245,81,492,53],[245,82,492,54],[245,83,492,55],[246,8,493,4],[247,8,494,4],[248,8,495,4],[249,8,496,4],[249,12,496,10,"hitSlop"],[249,19,496,17],[249,22,496,20,"fromLeft"],[249,30,496,28],[249,33,497,8],[250,10,497,10,"left"],[250,14,497,14],[250,16,497,16],[250,17,497,17],[251,10,497,19,"width"],[251,15,497,24],[251,17,497,26,"showing"],[251,24,497,33],[251,27,497,36,"undefined"],[251,36,497,45],[251,39,497,48,"edgeWidth"],[252,8,497,58],[252,9,497,59],[252,12,498,8],[253,10,498,10,"right"],[253,15,498,15],[253,17,498,17],[253,18,498,18],[254,10,498,20,"width"],[254,15,498,25],[254,17,498,27,"showing"],[254,24,498,34],[254,27,498,37,"undefined"],[254,36,498,46],[254,39,498,49,"edgeWidth"],[255,8,498,59],[255,9,498,60],[256,8,499,4],[257,8,500,4],[257,9,500,4,"_this$panGestureHandl"],[257,30,500,4],[257,33,500,4,"_this"],[257,38,500,4],[257,39,500,9,"panGestureHandler"],[257,56,500,26],[257,57,500,27,"current"],[257,64,500,34],[257,77,500,4,"_this$panGestureHandl"],[257,98,500,4],[257,99,500,36,"setNativeProps"],[257,113,500,50],[257,114,500,51],[258,10,501,6,"hitSlop"],[258,17,501,13],[258,19,501,6,"hitSlop"],[258,26,501,13],[259,10,502,6,"activeOffsetX"],[259,23,502,19],[259,25,502,21,"gestureOrientation"],[259,43,502,39],[259,46,502,42,"minSwipeDistance"],[260,8,503,4],[260,9,503,5],[260,10,503,6],[261,6,504,2],[261,7,504,3],[262,6,504,3,"_this"],[262,11,504,3],[262,12,506,10,"animateDrawer"],[262,25,506,23],[262,28,506,26],[262,38,507,4,"fromValue"],[262,47,507,40],[262,49,508,4,"toValue"],[262,56,508,19],[262,58,509,4,"velocity"],[262,66,509,20],[262,68,510,4,"speed"],[262,73,510,18],[262,75,511,7],[263,8,512,4,"_this"],[263,13,512,4],[263,14,512,9,"state"],[263,19,512,14],[263,20,512,15,"dragX"],[263,25,512,20],[263,26,512,21,"setValue"],[263,34,512,29],[263,35,512,30],[263,36,512,31],[263,37,512,32],[264,8,513,4,"_this"],[264,13,513,4],[264,14,513,9,"state"],[264,19,513,14],[264,20,513,15,"touchX"],[264,26,513,21],[264,27,513,22,"setValue"],[264,35,513,30],[264,36,514,6,"_this"],[264,41,514,6],[264,42,514,11,"props"],[264,47,514,16],[264,48,514,17,"drawerPosition"],[264,62,514,31],[264,67,514,36],[264,73,514,42],[264,76,514,45],[264,77,514,46],[264,80,514,49,"_this"],[264,85,514,49],[264,86,514,54,"state"],[264,91,514,59],[264,92,514,60,"containerWidth"],[264,106,515,4],[264,107,515,5],[265,8,517,4],[265,12,517,8,"fromValue"],[265,21,517,17],[265,25,517,21],[265,29,517,25],[265,31,517,27],[266,10,518,6],[266,14,518,10,"nextFramePosition"],[266,31,518,27],[266,34,518,30,"fromValue"],[266,43,518,39],[267,10,519,6],[267,14,519,10,"_this"],[267,19,519,10],[267,20,519,15,"props"],[267,25,519,20],[267,26,519,21,"useNativeAnimations"],[267,45,519,40],[267,47,519,42],[268,12,520,8],[269,12,521,8],[270,12,522,8],[271,12,523,8],[272,12,524,8],[272,16,524,12,"fromValue"],[272,25,524,21],[272,28,524,24,"toValue"],[272,35,524,31],[272,39,524,35,"velocity"],[272,47,524,43],[272,50,524,46],[272,51,524,47],[272,53,524,49],[273,14,525,10,"nextFramePosition"],[273,31,525,27],[273,34,525,30,"Math"],[273,38,525,34],[273,39,525,35,"min"],[273,42,525,38],[273,43,525,39,"fromValue"],[273,52,525,48],[273,55,525,51,"velocity"],[273,63,525,59],[273,66,525,62],[273,70,525,66],[273,72,525,68,"toValue"],[273,79,525,75],[273,80,525,76],[274,12,526,8],[274,13,526,9],[274,19,526,15],[274,23,526,19,"fromValue"],[274,32,526,28],[274,35,526,31,"toValue"],[274,42,526,38],[274,46,526,42,"velocity"],[274,54,526,50],[274,57,526,53],[274,58,526,54],[274,60,526,56],[275,14,527,10,"nextFramePosition"],[275,31,527,27],[275,34,527,30,"Math"],[275,38,527,34],[275,39,527,35,"max"],[275,42,527,38],[275,43,527,39,"fromValue"],[275,52,527,48],[275,55,527,51,"velocity"],[275,63,527,59],[275,66,527,62],[275,70,527,66],[275,72,527,68,"toValue"],[275,79,527,75],[275,80,527,76],[276,12,528,8],[277,10,529,6],[278,10,530,6,"_this"],[278,15,530,6],[278,16,530,11,"state"],[278,21,530,16],[278,22,530,17,"drawerTranslation"],[278,39,530,34],[278,40,530,35,"setValue"],[278,48,530,43],[278,49,530,44,"nextFramePosition"],[278,66,530,61],[278,67,530,62],[279,8,531,4],[280,8,533,4],[280,12,533,10,"willShow"],[280,20,533,18],[280,23,533,21,"toValue"],[280,30,533,28],[280,35,533,33],[280,36,533,34],[281,8,534,4,"_this"],[281,13,534,4],[281,14,534,9,"updateShowing"],[281,27,534,22],[281,28,534,23,"willShow"],[281,36,534,31],[281,37,534,32],[282,8,535,4,"_this"],[282,13,535,4],[282,14,535,9,"emitStateChanged"],[282,30,535,25],[282,31,535,26,"SETTLING"],[282,39,535,34],[282,41,535,36,"willShow"],[282,49,535,44],[282,50,535,45],[283,8,536,4,"_this"],[283,13,536,4],[283,14,536,9,"setState"],[283,22,536,17],[283,23,536,18],[284,10,536,20,"drawerState"],[284,21,536,31],[284,23,536,33,"SETTLING"],[285,8,536,42],[285,9,536,43],[285,10,536,44],[286,8,537,4],[286,12,537,8,"_this"],[286,17,537,8],[286,18,537,13,"props"],[286,23,537,18],[286,24,537,19,"hideStatusBar"],[286,37,537,32],[286,39,537,34],[287,10,538,6,"StatusBar"],[287,32,538,15],[287,33,538,16,"setHidden"],[287,42,538,25],[287,43,538,26,"willShow"],[287,51,538,34],[287,53,538,36,"_this"],[287,58,538,36],[287,59,538,41,"props"],[287,64,538,46],[287,65,538,47,"statusBarAnimation"],[287,83,538,65],[287,87,538,69],[287,94,538,76],[287,95,538,77],[288,8,539,4],[289,8,540,4,"Animated"],[289,29,540,12],[289,30,540,13,"spring"],[289,36,540,19],[289,37,540,20,"_this"],[289,42,540,20],[289,43,540,25,"state"],[289,48,540,30],[289,49,540,31,"drawerTranslation"],[289,66,540,48],[289,68,540,50],[290,10,541,6,"velocity"],[290,18,541,14],[290,20,541,6,"velocity"],[290,28,541,14],[291,10,542,6,"bounciness"],[291,20,542,16],[291,22,542,18],[291,23,542,19],[292,10,543,6,"toValue"],[292,17,543,13],[292,19,543,6,"toValue"],[292,26,543,13],[293,10,544,6,"useNativeDriver"],[293,25,544,21],[293,27,544,23,"_this"],[293,32,544,23],[293,33,544,28,"props"],[293,38,544,33],[293,39,544,34,"useNativeAnimations"],[293,58,544,54],[294,10,545,6,"speed"],[294,15,545,11],[294,17,545,13,"speed"],[294,22,545,18],[294,33,545,13,"speed"],[294,38,545,18],[294,41,545,22,"undefined"],[295,8,546,4],[295,9,546,5],[295,10,546,6],[295,11,546,7,"start"],[295,16,546,12],[295,17,546,13],[295,27,546,13,"_ref5"],[295,32,546,13],[295,34,546,31],[296,10,546,31],[296,14,546,16,"finished"],[296,22,546,24],[296,25,546,24,"_ref5"],[296,30,546,24],[296,31,546,16,"finished"],[296,39,546,24],[297,10,547,6],[297,14,547,10,"finished"],[297,22,547,18],[297,24,547,20],[298,12,548,8,"_this"],[298,17,548,8],[298,18,548,13,"emitStateChanged"],[298,34,548,29],[298,35,548,30,"IDLE"],[298,39,548,34],[298,41,548,36,"willShow"],[298,49,548,44],[298,50,548,45],[299,12,549,8,"_this"],[299,17,549,8],[299,18,549,13,"setState"],[299,26,549,21],[299,27,549,22],[300,14,549,24,"drawerOpened"],[300,26,549,36],[300,28,549,38,"willShow"],[301,12,549,47],[301,13,549,48],[301,14,549,49],[302,12,550,8],[302,16,550,12,"_this"],[302,21,550,12],[302,22,550,17,"state"],[302,27,550,22],[302,28,550,23,"drawerState"],[302,39,550,34],[302,44,550,39,"DRAGGING"],[302,52,550,47],[302,54,550,49],[303,14,551,10],[304,14,552,10],[305,14,553,10,"_this"],[305,19,553,10],[305,20,553,15,"setState"],[305,28,553,23],[305,29,553,24],[306,16,553,26,"drawerState"],[306,27,553,37],[306,29,553,39,"IDLE"],[307,14,553,44],[307,15,553,45],[307,16,553,46],[308,12,554,8],[309,12,555,8],[309,16,555,12,"willShow"],[309,24,555,20],[309,26,555,22],[310,14,556,10,"_this"],[310,19,556,10],[310,20,556,15,"props"],[310,25,556,20],[310,26,556,21,"onDrawerOpen"],[310,38,556,33],[310,50,556,10,"_this"],[310,55,556,10],[310,56,556,15,"props"],[310,61,556,20],[310,62,556,21,"onDrawerOpen"],[310,74,556,33],[310,75,556,36],[310,76,556,37],[311,12,557,8],[311,13,557,9],[311,19,557,15],[312,14,558,10,"_this"],[312,19,558,10],[312,20,558,15,"props"],[312,25,558,20],[312,26,558,21,"onDrawerClose"],[312,39,558,34],[312,51,558,10,"_this"],[312,56,558,10],[312,57,558,15,"props"],[312,62,558,20],[312,63,558,21,"onDrawerClose"],[312,76,558,34],[312,77,558,37],[312,78,558,38],[313,12,559,8],[314,10,560,6],[315,8,561,4],[315,9,561,5],[315,10,561,6],[316,6,562,2],[316,7,562,3],[317,6,562,3,"_this"],[317,11,562,3],[317,12,564,2,"openDrawer"],[317,22,564,12],[317,25,564,15],[317,37,564,55],[318,8,564,55],[318,12,564,16,"options"],[318,19,564,45],[318,22,564,45,"arguments"],[318,31,564,45],[318,32,564,45,"length"],[318,38,564,45],[318,46,564,45,"arguments"],[318,55,564,45],[318,63,564,45,"undefined"],[318,72,564,45],[318,75,564,45,"arguments"],[318,84,564,45],[318,90,564,48],[318,91,564,49],[318,92,564,50],[319,8,565,4,"_this"],[319,13,565,4],[319,14,565,9,"animateDrawer"],[319,27,565,22],[320,8,566,6],[321,8,567,6,"undefined"],[321,17,567,15],[321,19,568,6,"_this"],[321,24,568,6],[321,25,568,11,"props"],[321,30,568,16],[321,31,568,17,"drawerWidth"],[321,42,568,28],[321,44,569,6,"options"],[321,51,569,13],[321,52,569,14,"velocity"],[321,60,569,22],[321,63,569,25,"options"],[321,70,569,32],[321,71,569,33,"velocity"],[321,79,569,41],[321,82,569,44],[321,83,569,45],[321,85,570,6,"options"],[321,92,570,13],[321,93,570,14,"speed"],[321,98,571,4],[321,99,571,5],[323,8,573,4],[324,8,574,4],[325,8,575,4,"_this"],[325,13,575,4],[325,14,575,9,"forceUpdate"],[325,25,575,20],[325,26,575,21],[325,27,575,22],[326,6,576,2],[326,7,576,3],[327,6,576,3,"_this"],[327,11,576,3],[327,12,578,2,"closeDrawer"],[327,23,578,13],[327,26,578,16],[327,38,578,56],[328,8,578,56],[328,12,578,17,"options"],[328,19,578,46],[328,22,578,46,"arguments"],[328,31,578,46],[328,32,578,46,"length"],[328,38,578,46],[328,46,578,46,"arguments"],[328,55,578,46],[328,63,578,46,"undefined"],[328,72,578,46],[328,75,578,46,"arguments"],[328,84,578,46],[328,90,578,49],[328,91,578,50],[328,92,578,51],[329,8,579,4],[330,8,580,4,"_this"],[330,13,580,4],[330,14,580,9,"animateDrawer"],[330,27,580,22],[330,28,581,6,"undefined"],[330,37,581,15],[330,39,582,6],[330,40,582,7],[330,42,583,6,"options"],[330,49,583,13],[330,50,583,14,"velocity"],[330,58,583,22],[330,61,583,25,"options"],[330,68,583,32],[330,69,583,33,"velocity"],[330,77,583,41],[330,80,583,44],[330,81,583,45],[330,83,584,6,"options"],[330,90,584,13],[330,91,584,14,"speed"],[330,96,585,4],[330,97,585,5],[332,8,587,4],[333,8,588,4],[334,8,589,4,"_this"],[334,13,589,4],[334,14,589,9,"forceUpdate"],[334,25,589,20],[334,26,589,21],[334,27,589,22],[335,6,590,2],[335,7,590,3],[336,6,590,3,"_this"],[336,11,590,3],[336,12,592,10,"renderOverlay"],[336,25,592,23],[336,28,592,26],[336,40,592,32],[337,8,593,4],[338,8,594,4],[338,12,594,4,"invariant"],[338,30,594,13],[338,32,594,14,"_this"],[338,37,594,14],[338,38,594,19,"openValue"],[338,47,594,28],[338,49,594,30],[338,64,594,45],[338,65,594,46],[339,8,595,4],[339,12,595,8,"overlayOpacity"],[339,26,595,22],[340,8,597,4],[340,12,597,8,"_this"],[340,17,597,8],[340,18,597,13,"state"],[340,23,597,18],[340,24,597,19,"drawerState"],[340,35,597,30],[340,40,597,35,"IDLE"],[340,44,597,39],[340,46,597,41],[341,10,598,6,"overlayOpacity"],[341,24,598,20],[341,27,598,23,"_this"],[341,32,598,23],[341,33,598,28,"openValue"],[341,42,598,37],[342,8,599,4],[342,9,599,5],[342,15,599,11],[343,10,600,6,"overlayOpacity"],[343,24,600,20],[343,27,600,23,"_this"],[343,32,600,23],[343,33,600,28,"state"],[343,38,600,33],[343,39,600,34,"drawerOpened"],[343,51,600,46],[343,54,600,49],[343,55,600,50],[343,58,600,53],[343,59,600,54],[344,8,601,4],[345,8,603,4],[345,12,603,10,"dynamicOverlayStyles"],[345,32,603,30],[345,35,603,33],[346,10,604,6,"opacity"],[346,17,604,13],[346,19,604,15,"overlayOpacity"],[346,33,604,29],[347,10,605,6,"backgroundColor"],[347,25,605,21],[347,27,605,23,"_this"],[347,32,605,23],[347,33,605,28,"props"],[347,38,605,33],[347,39,605,34,"overlayColor"],[348,8,606,4],[348,9,606,5],[349,8,608,4],[349,28,609,6],[349,32,609,6,"_jsxDevRuntime"],[349,46,609,6],[349,47,609,6,"jsxDEV"],[349,53,609,6],[349,55,609,7,"_TapGestureHandler"],[349,73,609,7],[349,74,609,7,"TapGestureHandler"],[349,91,609,24],[350,10,609,25,"onHandlerStateChange"],[350,30,609,45],[350,32,609,47,"_this"],[350,37,609,47],[350,38,609,52,"onTapHandlerStateChange"],[350,61,609,76],[351,10,609,76,"children"],[351,18,609,76],[351,33,610,8],[351,37,610,8,"_jsxDevRuntime"],[351,51,610,8],[351,52,610,8,"jsxDEV"],[351,58,610,8],[351,60,610,9,"_reactNative"],[351,72,610,9],[351,73,610,9,"Animated"],[351,81,610,17],[351,82,610,18,"View"],[351,86,610,22],[352,12,611,10,"pointerEvents"],[352,25,611,23],[352,27,611,25,"_this"],[352,32,611,25],[352,33,611,30,"drawerShown"],[352,44,611,41],[352,47,611,44],[352,53,611,50],[352,56,611,53],[352,62,611,60],[353,12,612,10,"ref"],[353,15,612,13],[353,17,612,15,"_this"],[353,22,612,15],[353,23,612,20,"pointerEventsView"],[353,40,612,38],[354,12,613,10,"style"],[354,17,613,15],[354,19,613,17],[354,20,613,18,"styles"],[354,26,613,24],[354,27,613,25,"overlay"],[354,34,613,32],[354,36,613,34,"dynamicOverlayStyles"],[354,56,613,54],[355,10,613,56],[356,12,613,56,"fileName"],[356,20,613,56],[356,22,613,56,"_jsxFileName"],[356,34,613,56],[357,12,613,56,"lineNumber"],[357,22,613,56],[358,12,613,56,"columnNumber"],[358,24,613,56],[359,10,613,56],[359,13,613,56,"_this"],[359,18,614,9],[360,8,614,10],[361,10,614,10,"fileName"],[361,18,614,10],[361,20,614,10,"_jsxFileName"],[361,32,614,10],[362,10,614,10,"lineNumber"],[362,20,614,10],[363,10,614,10,"columnNumber"],[363,22,614,10],[364,8,614,10],[364,11,614,10,"_this"],[364,16,615,25],[364,17,615,26],[365,6,617,2],[365,7,617,3],[366,6,617,3,"_this"],[366,11,617,3],[366,12,619,10,"renderDrawer"],[366,24,619,22],[366,27,619,25],[366,39,619,31],[367,8,620,4],[367,12,620,4,"_this$props3"],[367,24,620,4],[367,27,627,8,"_this"],[367,32,627,8],[367,33,627,13,"props"],[367,38,627,18],[368,10,621,6,"drawerBackgroundColor"],[368,31,621,27],[368,34,621,27,"_this$props3"],[368,46,621,27],[368,47,621,6,"drawerBackgroundColor"],[368,68,621,27],[369,10,622,6,"drawerWidth"],[369,21,622,17],[369,24,622,17,"_this$props3"],[369,36,622,17],[369,37,622,6,"drawerWidth"],[369,48,622,17],[370,10,623,6,"drawerPosition"],[370,24,623,20],[370,27,623,20,"_this$props3"],[370,39,623,20],[370,40,623,6,"drawerPosition"],[370,54,623,20],[371,10,624,6,"drawerType"],[371,20,624,16],[371,23,624,16,"_this$props3"],[371,35,624,16],[371,36,624,6,"drawerType"],[371,46,624,16],[372,10,625,6,"drawerContainerStyle"],[372,30,625,26],[372,33,625,26,"_this$props3"],[372,45,625,26],[372,46,625,6,"drawerContainerStyle"],[372,66,625,26],[373,10,626,6,"contentContainerStyle"],[373,31,626,27],[373,34,626,27,"_this$props3"],[373,46,626,27],[373,47,626,6,"contentContainerStyle"],[373,68,626,27],[374,8,629,4],[374,12,629,10,"fromLeft"],[374,20,629,18],[374,23,629,21,"drawerPosition"],[374,37,629,35],[374,42,629,40],[374,48,629,46],[375,8,630,4],[375,12,630,10,"drawerSlide"],[375,23,630,21],[375,26,630,24,"drawerType"],[375,36,630,34],[375,41,630,39],[375,47,630,45],[376,8,631,4],[376,12,631,10,"containerSlide"],[376,26,631,24],[376,29,631,27,"drawerType"],[376,39,631,37],[376,44,631,42],[376,51,631,49],[378,8,633,4],[379,8,634,4],[380,8,635,4],[381,8,636,4],[382,8,637,4],[382,12,637,10,"reverseContentDirection"],[382,35,637,33],[382,38,637,36,"I18nManager"],[382,62,637,47],[382,63,637,48,"isRTL"],[382,68,637,53],[382,71,637,56,"fromLeft"],[382,79,637,64],[382,82,637,67],[382,83,637,68,"fromLeft"],[382,91,637,76],[383,8,639,4],[383,12,639,10,"dynamicDrawerStyles"],[383,31,639,29],[383,34,639,32],[384,10,640,6,"backgroundColor"],[384,25,640,21],[384,27,640,23,"drawerBackgroundColor"],[384,48,640,44],[385,10,641,6,"width"],[385,15,641,11],[385,17,641,13,"drawerWidth"],[386,8,642,4],[386,9,642,5],[387,8,643,4],[387,12,643,10,"openValue"],[387,21,643,19],[387,24,643,22,"_this"],[387,29,643,22],[387,30,643,27,"openValue"],[387,39,643,36],[388,8,644,4],[388,12,644,4,"invariant"],[388,30,644,13],[388,32,644,14,"openValue"],[388,41,644,23],[388,43,644,25],[388,58,644,40],[388,59,644,41],[389,8,646,4],[389,12,646,8,"containerStyles"],[389,27,646,23],[390,8,647,4],[390,12,647,8,"containerSlide"],[390,26,647,22],[390,28,647,24],[391,10,648,6],[391,14,648,12,"containerTranslateX"],[391,33,648,31],[391,36,648,34,"openValue"],[391,45,648,43],[391,46,648,44,"interpolate"],[391,57,648,55],[391,58,648,56],[392,12,649,8,"inputRange"],[392,22,649,18],[392,24,649,20],[392,25,649,21],[392,26,649,22],[392,28,649,24],[392,29,649,25],[392,30,649,26],[393,12,650,8,"outputRange"],[393,23,650,19],[393,25,650,21,"fromLeft"],[393,33,650,29],[393,36,650,32],[393,37,650,33],[393,38,650,34],[393,40,650,36,"drawerWidth"],[393,51,650,47],[393,52,650,49],[393,55,650,52],[393,56,650,53],[393,57,650,54],[393,59,650,56],[393,60,650,57,"drawerWidth"],[393,71,650,69],[393,72,650,70],[394,12,651,8,"extrapolate"],[394,23,651,19],[394,25,651,21],[395,10,652,6],[395,11,652,7],[395,12,652,8],[396,10,653,6,"containerStyles"],[396,25,653,21],[396,28,653,24],[397,12,654,8,"transform"],[397,21,654,17],[397,23,654,19],[397,24,654,20],[398,14,654,22,"translateX"],[398,24,654,32],[398,26,654,34,"containerTranslateX"],[399,12,654,54],[399,13,654,55],[400,10,655,6],[400,11,655,7],[401,8,656,4],[402,8,658,4],[402,12,658,8,"drawerTranslateX"],[402,28,658,56],[402,31,658,59],[402,32,658,60],[403,8,659,4],[403,12,659,8,"drawerSlide"],[403,23,659,19],[403,25,659,21],[404,10,660,6],[404,14,660,12,"closedDrawerOffset"],[404,32,660,30],[404,35,660,33,"fromLeft"],[404,43,660,41],[404,46,660,44],[404,47,660,45,"drawerWidth"],[404,58,660,57],[404,61,660,60,"drawerWidth"],[404,72,660,72],[405,10,661,6],[405,14,661,10,"_this"],[405,19,661,10],[405,20,661,15,"state"],[405,25,661,20],[405,26,661,21,"drawerState"],[405,37,661,32],[405,42,661,37,"IDLE"],[405,46,661,41],[405,48,661,43],[406,12,662,8,"drawerTranslateX"],[406,28,662,24],[406,31,662,27,"openValue"],[406,40,662,36],[406,41,662,37,"interpolate"],[406,52,662,48],[406,53,662,49],[407,14,663,10,"inputRange"],[407,24,663,20],[407,26,663,22],[407,27,663,23],[407,28,663,24],[407,30,663,26],[407,31,663,27],[407,32,663,28],[408,14,664,10,"outputRange"],[408,25,664,21],[408,27,664,23],[408,28,664,24,"closedDrawerOffset"],[408,46,664,42],[408,48,664,44],[408,49,664,45],[408,50,664,46],[409,14,665,10,"extrapolate"],[409,25,665,21],[409,27,665,23],[410,12,666,8],[410,13,666,9],[410,14,666,10],[411,10,667,6],[411,11,667,7],[411,17,667,13],[412,12,668,8,"drawerTranslateX"],[412,28,668,24],[412,31,668,27,"_this"],[412,36,668,27],[412,37,668,32,"state"],[412,42,668,37],[412,43,668,38,"drawerOpened"],[412,55,668,50],[412,58,668,53],[412,59,668,54],[412,62,668,57,"closedDrawerOffset"],[412,80,668,75],[413,10,669,6],[414,8,670,4],[415,8,671,4],[415,12,671,10,"drawerStyles"],[415,24,674,5],[415,27,674,8],[416,10,675,6,"transform"],[416,19,675,15],[416,21,675,17],[416,22,675,18],[417,12,675,20,"translateX"],[417,22,675,30],[417,24,675,32,"drawerTranslateX"],[418,10,675,49],[418,11,675,50],[418,12,675,51],[419,10,676,6,"flexDirection"],[419,23,676,19],[419,25,676,21,"reverseContentDirection"],[419,48,676,44],[419,51,676,47],[419,64,676,60],[419,67,676,63],[420,8,677,4],[420,9,677,5],[421,8,679,4],[421,28,680,6],[421,32,680,6,"_jsxDevRuntime"],[421,46,680,6],[421,47,680,6,"jsxDEV"],[421,53,680,6],[421,55,680,7,"_reactNative"],[421,67,680,7],[421,68,680,7,"Animated"],[421,76,680,15],[421,77,680,16,"View"],[421,81,680,20],[422,10,680,21,"style"],[422,15,680,26],[422,17,680,28,"styles"],[422,23,680,34],[422,24,680,35,"main"],[422,28,680,40],[423,10,680,41,"onLayout"],[423,18,680,49],[423,20,680,51,"_this"],[423,25,680,51],[423,26,680,56,"handleContainerLayout"],[423,47,680,78],[424,10,680,78,"children"],[424,18,680,78],[424,34,681,8],[424,38,681,8,"_jsxDevRuntime"],[424,52,681,8],[424,53,681,8,"jsxDEV"],[424,59,681,8],[424,61,681,9,"_reactNative"],[424,73,681,9],[424,74,681,9,"Animated"],[424,82,681,17],[424,83,681,18,"View"],[424,87,681,22],[425,12,682,10,"style"],[425,17,682,15],[425,19,682,17],[425,20,683,12,"drawerType"],[425,30,683,22],[425,35,683,27],[425,42,683,34],[425,45,684,16,"styles"],[425,51,684,22],[425,52,684,23,"containerOnBack"],[425,67,684,38],[425,70,685,16,"styles"],[425,76,685,22],[425,77,685,23,"containerInFront"],[425,93,685,39],[425,95,686,12,"containerStyles"],[425,110,686,27],[425,112,687,12,"contentContainerStyle"],[425,133,687,33],[425,134,688,12],[426,12,689,10,"importantForAccessibility"],[426,37,689,35],[426,39,690,12,"_this"],[426,44,690,12],[426,45,690,17,"drawerShown"],[426,56,690,28],[426,59,690,31],[426,80,690,52],[426,83,690,55],[426,88,691,11],[427,12,691,11,"children"],[427,20,691,11],[427,23,692,11],[427,30,692,18,"_this"],[427,35,692,18],[427,36,692,23,"props"],[427,41,692,28],[427,42,692,29,"children"],[427,50,692,37],[427,55,692,42],[427,65,692,52],[427,68,693,14,"_this"],[427,73,693,14],[427,74,693,19,"props"],[427,79,693,24],[427,80,693,25,"children"],[427,88,693,33],[427,89,693,34,"_this"],[427,94,693,34],[427,95,693,39,"openValue"],[427,104,693,48],[427,105,693,49],[427,108,694,14,"_this"],[427,113,694,14],[427,114,694,19,"props"],[427,119,694,24],[427,120,694,25,"children"],[427,128,694,33],[427,130,695,11,"_this"],[427,135,695,11],[427,136,695,16,"renderOverlay"],[427,149,695,29],[427,150,695,30],[427,151,695,31],[428,10,695,31],[429,12,695,31,"fileName"],[429,20,695,31],[429,22,695,31,"_jsxFileName"],[429,34,695,31],[430,12,695,31,"lineNumber"],[430,22,695,31],[431,12,695,31,"columnNumber"],[431,24,695,31],[432,10,695,31],[432,13,695,31,"_this"],[432,18,696,23],[432,19,696,24],[432,34,697,8],[432,38,697,8,"_jsxDevRuntime"],[432,52,697,8],[432,53,697,8,"jsxDEV"],[432,59,697,8],[432,61,697,9,"_reactNative"],[432,73,697,9],[432,74,697,9,"Animated"],[432,82,697,17],[432,83,697,18,"View"],[432,87,697,22],[433,12,698,10,"pointerEvents"],[433,25,698,23],[433,27,698,24],[433,37,698,34],[434,12,699,10,"ref"],[434,15,699,13],[434,17,699,15,"_this"],[434,22,699,15],[434,23,699,20,"accessibilityIsModalView"],[434,47,699,45],[435,12,700,10,"accessibilityViewIsModal"],[435,36,700,34],[435,38,700,36,"_this"],[435,43,700,36],[435,44,700,41,"drawerShown"],[435,55,700,53],[436,12,701,10,"style"],[436,17,701,15],[436,19,701,17],[436,20,701,18,"styles"],[436,26,701,24],[436,27,701,25,"drawerContainer"],[436,42,701,40],[436,44,701,42,"drawerStyles"],[436,56,701,54],[436,58,701,56,"drawerContainerStyle"],[436,78,701,76],[436,79,701,78],[437,12,701,78,"children"],[437,20,701,78],[437,35,702,10],[437,39,702,10,"_jsxDevRuntime"],[437,53,702,10],[437,54,702,10,"jsxDEV"],[437,60,702,10],[437,62,702,11,"_reactNative"],[437,74,702,11],[437,75,702,11,"View"],[437,79,702,15],[438,14,702,16,"style"],[438,19,702,21],[438,21,702,23,"dynamicDrawerStyles"],[438,40,702,43],[439,14,702,43,"children"],[439,22,702,43],[439,24,703,13,"_this"],[439,29,703,13],[439,30,703,18,"props"],[439,35,703,23],[439,36,703,24,"renderNavigationView"],[439,56,703,44],[439,57,703,45,"_this"],[439,62,703,45],[439,63,703,50,"openValue"],[439,72,703,77],[440,12,703,78],[441,14,703,78,"fileName"],[441,22,703,78],[441,24,703,78,"_jsxFileName"],[441,36,703,78],[442,14,703,78,"lineNumber"],[442,24,703,78],[443,14,703,78,"columnNumber"],[443,26,703,78],[444,12,703,78],[444,15,703,78,"_this"],[444,20,704,16],[445,10,704,17],[446,12,704,17,"fileName"],[446,20,704,17],[446,22,704,17,"_jsxFileName"],[446,34,704,17],[447,12,704,17,"lineNumber"],[447,22,704,17],[448,12,704,17,"columnNumber"],[448,24,704,17],[449,10,704,17],[449,13,704,17,"_this"],[449,18,705,23],[449,19,705,24],[450,8,705,24],[451,10,705,24,"fileName"],[451,18,705,24],[451,20,705,24,"_jsxFileName"],[451,32,705,24],[452,10,705,24,"lineNumber"],[452,20,705,24],[453,10,705,24,"columnNumber"],[453,22,705,24],[454,8,705,24],[454,11,705,24,"_this"],[454,16,706,21],[454,17,706,22],[455,6,708,2],[455,7,708,3],[456,6,708,3,"_this"],[456,11,708,3],[456,12,710,10,"setPanGestureRef"],[456,28,710,26],[456,31,710,29],[456,41,710,30,"ref"],[456,44,710,52],[456,46,710,57],[457,8,711,4],[458,8,712,4],[459,8,714,6,"_this"],[459,13,714,6],[459,14,714,11,"panGestureHandler"],[459,31,714,28],[459,32,715,6,"current"],[459,39,715,13],[459,42,715,16,"ref"],[459,45,715,19],[460,8,716,4,"_this"],[460,13,716,4],[460,14,716,9,"props"],[460,19,716,14],[460,20,716,15,"onGestureRef"],[460,32,716,27],[460,44,716,4,"_this"],[460,49,716,4],[460,50,716,9,"props"],[460,55,716,14],[460,56,716,15,"onGestureRef"],[460,68,716,27],[460,69,716,30,"ref"],[460,72,716,33],[460,73,716,34],[461,6,717,2],[461,7,717,3],[462,6,250,4],[462,10,250,10,"dragX"],[462,16,250,15],[462,19,250,18],[462,23,250,22,"Animated"],[462,44,250,30],[462,45,250,31,"Value"],[462,50,250,36],[462,51,250,37],[462,52,250,38],[462,53,250,39],[463,6,251,4],[463,10,251,10,"touchX"],[463,17,251,16],[463,20,251,19],[463,24,251,23,"Animated"],[463,45,251,31],[463,46,251,32,"Value"],[463,51,251,37],[463,52,251,38],[463,53,251,39],[463,54,251,40],[464,6,252,4],[464,10,252,10,"drawerTranslation"],[464,28,252,27],[464,31,252,30],[464,35,252,34,"Animated"],[464,56,252,42],[464,57,252,43,"Value"],[464,62,252,48],[464,63,252,49],[464,64,252,50],[464,65,252,51],[465,6,254,4,"_this"],[465,11,254,4],[465,12,254,9,"state"],[465,17,254,14],[465,20,254,17],[466,8,255,6,"dragX"],[466,13,255,11],[466,15,255,6,"dragX"],[466,21,255,11],[467,8,256,6,"touchX"],[467,14,256,12],[467,16,256,6,"touchX"],[467,23,256,12],[468,8,257,6,"drawerTranslation"],[468,25,257,23],[468,27,257,6,"drawerTranslation"],[468,45,257,23],[469,8,258,6,"containerWidth"],[469,22,258,20],[469,24,258,22],[469,25,258,23],[470,8,259,6,"drawerState"],[470,19,259,17],[470,21,259,19,"IDLE"],[470,25,259,23],[471,8,260,6,"drawerOpened"],[471,20,260,18],[471,22,260,20],[472,6,261,4],[472,7,261,5],[473,6,263,4,"_this"],[473,11,263,4],[473,12,263,9,"updateAnimatedEvent"],[473,31,263,28],[473,32,263,29,"props"],[473,38,263,34],[473,40,263,36,"_this"],[473,45,263,36],[473,46,263,41,"state"],[473,51,263,46],[473,52,263,47],[474,6,263,48],[474,13,263,48,"_this"],[474,18,263,48],[475,4,264,2],[476,4,264,3],[476,8,264,3,"_inherits2"],[476,18,264,3],[476,19,264,3,"default"],[476,26,264,3],[476,28,264,3,"DrawerLayout"],[476,40,264,3],[476,42,264,3,"_Component"],[476,52,264,3],[477,4,264,3],[477,15,264,3,"_createClass2"],[477,28,264,3],[477,29,264,3,"default"],[477,36,264,3],[477,38,264,3,"DrawerLayout"],[477,50,264,3],[478,6,264,3,"key"],[478,9,264,3],[479,6,264,3,"value"],[479,11,264,3],[479,13,266,2],[479,22,266,2,"shouldComponentUpdate"],[479,43,266,23,"shouldComponentUpdate"],[479,44,266,24,"props"],[479,49,266,48],[479,51,266,50,"state"],[479,56,266,74],[479,58,266,76],[480,8,267,4],[480,12,268,6],[480,16,268,10],[480,17,268,11,"props"],[480,22,268,16],[480,23,268,17,"drawerPosition"],[480,37,268,31],[480,42,268,36,"props"],[480,47,268,41],[480,48,268,42,"drawerPosition"],[480,62,268,56],[480,66,269,6],[480,70,269,10],[480,71,269,11,"props"],[480,76,269,16],[480,77,269,17,"drawerWidth"],[480,88,269,28],[480,93,269,33,"props"],[480,98,269,38],[480,99,269,39,"drawerWidth"],[480,110,269,50],[480,114,270,6],[480,118,270,10],[480,119,270,11,"props"],[480,124,270,16],[480,125,270,17,"drawerType"],[480,135,270,27],[480,140,270,32,"props"],[480,145,270,37],[480,146,270,38,"drawerType"],[480,156,270,48],[480,160,271,6],[480,164,271,10],[480,165,271,11,"state"],[480,170,271,16],[480,171,271,17,"containerWidth"],[480,185,271,31],[480,190,271,36,"state"],[480,195,271,41],[480,196,271,42,"containerWidth"],[480,210,271,56],[480,212,272,6],[481,10,273,6],[481,14,273,10],[481,15,273,11,"updateAnimatedEvent"],[481,34,273,30],[481,35,273,31,"props"],[481,40,273,36],[481,42,273,38,"state"],[481,47,273,43],[481,48,273,44],[482,8,274,4],[483,8,276,4],[483,15,276,11],[483,19,276,15],[484,6,277,2],[485,4,277,3],[486,6,277,3,"key"],[486,9,277,3],[487,6,277,3,"value"],[487,11,277,3],[487,13,719,2],[487,22,719,2,"render"],[487,28,719,8,"render"],[487,29,719,8],[487,31,719,11],[488,8,720,4],[488,12,720,4,"_this$props4"],[488,24,720,4],[488,27,721,6],[488,31,721,10],[488,32,721,11,"props"],[488,37,721,16],[489,10,720,12,"drawerPosition"],[489,24,720,26],[489,27,720,26,"_this$props4"],[489,39,720,26],[489,40,720,12,"drawerPosition"],[489,54,720,26],[490,10,720,28,"drawerLockMode"],[490,24,720,42],[490,27,720,42,"_this$props4"],[490,39,720,42],[490,40,720,28,"drawerLockMode"],[490,54,720,42],[491,10,720,44,"edgeWidth"],[491,19,720,53],[491,22,720,53,"_this$props4"],[491,34,720,53],[491,35,720,44,"edgeWidth"],[491,44,720,53],[492,10,720,55,"minSwipeDistance"],[492,26,720,71],[492,29,720,71,"_this$props4"],[492,41,720,71],[492,42,720,55,"minSwipeDistance"],[492,58,720,71],[493,8,723,4],[493,12,723,10,"fromLeft"],[493,20,723,18],[493,23,723,21,"drawerPosition"],[493,37,723,35],[493,42,723,40],[493,48,723,46],[495,8,725,4],[496,8,726,4],[497,8,727,4],[498,8,728,4],[498,12,728,10,"gestureOrientation"],[498,30,728,28],[498,33,729,6],[498,34,729,7,"fromLeft"],[498,42,729,15],[498,45,729,18],[498,46,729,19],[498,49,729,22],[498,50,729,23],[498,51,729,24],[498,56,729,29],[498,60,729,33],[498,61,729,34,"drawerShown"],[498,72,729,45],[498,75,729,48],[498,76,729,49],[498,77,729,50],[498,80,729,53],[498,81,729,54],[498,82,729,55],[500,8,731,4],[501,8,732,4],[502,8,733,4],[503,8,734,4],[503,12,734,10,"hitSlop"],[503,19,734,17],[503,22,734,20,"fromLeft"],[503,30,734,28],[503,33,735,8],[504,10,735,10,"left"],[504,14,735,14],[504,16,735,16],[504,17,735,17],[505,10,735,19,"width"],[505,15,735,24],[505,17,735,26],[505,21,735,30],[505,22,735,31,"drawerShown"],[505,33,735,42],[505,36,735,45,"undefined"],[505,45,735,54],[505,48,735,57,"edgeWidth"],[506,8,735,67],[506,9,735,68],[506,12,736,8],[507,10,736,10,"right"],[507,15,736,15],[507,17,736,17],[507,18,736,18],[508,10,736,20,"width"],[508,15,736,25],[508,17,736,27],[508,21,736,31],[508,22,736,32,"drawerShown"],[508,33,736,43],[508,36,736,46,"undefined"],[508,45,736,55],[508,48,736,58,"edgeWidth"],[509,8,736,68],[509,9,736,69],[510,8,738,4],[510,28,739,6],[510,32,739,6,"_jsxDevRuntime"],[510,46,739,6],[510,47,739,6,"jsxDEV"],[510,53,739,6],[510,55,739,7,"_PanGestureHandler"],[510,73,739,7],[510,74,739,7,"PanGestureHandler"],[511,8,740,8],[512,8,740,8],[513,10,741,8,"userSelect"],[513,20,741,18],[513,22,741,20],[513,26,741,24],[513,27,741,25,"props"],[513,32,741,30],[513,33,741,31,"userSelect"],[513,43,741,42],[514,10,742,8,"activeCursor"],[514,22,742,20],[514,24,742,22],[514,28,742,26],[514,29,742,27,"props"],[514,34,742,32],[514,35,742,33,"activeCursor"],[514,47,742,46],[515,10,743,8,"mouseButton"],[515,21,743,19],[515,23,743,21],[515,27,743,25],[515,28,743,26,"props"],[515,33,743,31],[515,34,743,32,"mouseButton"],[515,45,743,44],[516,10,744,8,"enableContextMenu"],[516,27,744,25],[516,29,744,27],[516,33,744,31],[516,34,744,32,"props"],[516,39,744,37],[516,40,744,38,"enableContextMenu"],[516,57,744,56],[517,10,745,8,"ref"],[517,13,745,11],[517,15,745,13],[517,19,745,17],[517,20,745,18,"setPanGestureRef"],[517,36,745,35],[518,10,746,8,"hitSlop"],[518,17,746,15],[518,19,746,17,"hitSlop"],[518,26,746,25],[519,10,747,8,"activeOffsetX"],[519,23,747,21],[519,25,747,23,"gestureOrientation"],[519,43,747,41],[519,46,747,44,"minSwipeDistance"],[519,62,747,62],[520,10,748,8,"failOffsetY"],[520,21,748,19],[520,23,748,21],[520,24,748,22],[520,25,748,23],[520,27,748,25],[520,29,748,27],[520,31,748,29],[520,32,748,31],[521,10,749,8,"onGestureEvent"],[521,24,749,22],[521,26,749,24],[521,30,749,28],[521,31,749,29,"onGestureEvent"],[521,45,749,44],[522,10,750,8,"onHandlerStateChange"],[522,30,750,28],[522,32,750,30],[522,36,750,34],[522,37,750,35,"openingHandlerStateChange"],[522,62,750,61],[523,10,751,8,"enableTrackpadTwoFingerGesture"],[523,40,751,38],[523,42,752,10],[523,46,752,14],[523,47,752,15,"props"],[523,52,752,20],[523,53,752,21,"enableTrackpadTwoFingerGesture"],[523,83,753,9],[524,10,754,8,"enabled"],[524,17,754,15],[524,19,755,10,"drawerLockMode"],[524,33,755,24],[524,38,755,29],[524,53,755,44],[524,57,755,48,"drawerLockMode"],[524,71,755,62],[524,76,755,67],[524,89,756,9],[525,10,756,9,"children"],[525,18,756,9],[525,20,757,9],[525,24,757,13],[525,25,757,14,"renderDrawer"],[525,37,757,26],[525,38,757,27],[526,8,757,28],[527,10,757,28,"fileName"],[527,18,757,28],[527,20,757,28,"_jsxFileName"],[527,32,757,28],[528,10,757,28,"lineNumber"],[528,20,757,28],[529,10,757,28,"columnNumber"],[529,22,757,28],[530,8,757,28],[530,15,758,25],[530,16,758,26],[531,6,760,2],[532,4,760,3],[533,2,760,3],[533,4,231,42,"Component"],[533,20,231,51],[534,2,231,21,"DrawerLayout"],[534,14,231,33],[534,15,235,9,"defaultProps"],[534,27,235,21],[534,30,235,24],[535,4,236,4,"drawerWidth"],[535,15,236,15],[535,17,236,17],[535,20,236,20],[536,4,237,4,"drawerPosition"],[536,18,237,18],[536,20,237,20],[536,26,237,26],[537,4,238,4,"useNativeAnimations"],[537,23,238,23],[537,25,238,25],[537,29,238,29],[538,4,239,4,"drawerType"],[538,14,239,14],[538,16,239,16],[538,23,239,23],[539,4,240,4,"edgeWidth"],[539,13,240,13],[539,15,240,15],[539,17,240,17],[540,4,241,4,"minSwipeDistance"],[540,20,241,20],[540,22,241,22],[540,23,241,23],[541,4,242,4,"overlayColor"],[541,16,242,16],[541,18,242,18],[541,38,242,38],[542,4,243,4,"drawerLockMode"],[542,18,243,18],[542,20,243,20],[542,30,243,30],[543,4,244,4,"enableTrackpadTwoFingerGesture"],[543,34,244,34],[543,36,244,36],[544,2,245,2],[544,3,245,3],[545,2,231,21,"DrawerLayout"],[545,14,231,33],[545,15,288,9,"positions"],[545,24,288,18],[545,27,288,21],[546,4,289,4,"Left"],[546,8,289,8],[546,10,289,10],[546,16,289,16],[547,4,290,4,"Right"],[547,9,290,9],[547,11,290,11],[548,2,291,2],[548,3,291,3],[549,2,763,0],[549,6,763,6,"styles"],[549,12,763,12],[549,15,763,15,"StyleSheet"],[549,38,763,25],[549,39,763,26,"create"],[549,45,763,32],[549,46,763,33],[550,4,764,2,"drawerContainer"],[550,19,764,17],[550,21,764,17,"Object"],[550,27,764,17],[550,28,764,17,"assign"],[550,34,764,17],[550,39,765,7,"StyleSheet"],[550,62,765,17],[550,63,765,18,"absoluteFillObject"],[550,81,765,36],[551,6,766,4,"zIndex"],[551,12,766,10],[551,14,766,12],[551,18,766,16],[552,6,767,4,"flexDirection"],[552,19,767,17],[552,21,767,19],[553,4,767,24],[553,6,768,3],[554,4,769,2,"containerInFront"],[554,20,769,18],[554,22,769,18,"Object"],[554,28,769,18],[554,29,769,18,"assign"],[554,35,769,18],[554,40,770,7,"StyleSheet"],[554,63,770,17],[554,64,770,18,"absoluteFillObject"],[554,82,770,36],[555,6,771,4,"zIndex"],[555,12,771,10],[555,14,771,12],[556,4,771,16],[556,6,772,3],[557,4,773,2,"containerOnBack"],[557,19,773,17],[557,21,773,17,"Object"],[557,27,773,17],[557,28,773,17,"assign"],[557,34,773,17],[557,39,774,7,"StyleSheet"],[557,62,774,17],[557,63,774,18,"absoluteFillObject"],[557,81,774,36],[557,82,775,3],[558,4,776,2,"main"],[558,8,776,6],[558,10,776,8],[559,6,777,4,"flex"],[559,10,777,8],[559,12,777,10],[559,13,777,11],[560,6,778,4,"zIndex"],[560,12,778,10],[560,14,778,12],[560,15,778,13],[561,6,779,4,"overflow"],[561,14,779,12],[561,16,779,14],[562,4,780,2],[562,5,780,3],[563,4,781,2,"overlay"],[563,11,781,9],[563,13,781,9,"Object"],[563,19,781,9],[563,20,781,9,"assign"],[563,26,781,9],[563,31,782,7,"StyleSheet"],[563,54,782,17],[563,55,782,18,"absoluteFillObject"],[563,73,782,36],[564,6,783,4,"zIndex"],[564,12,783,10],[564,14,783,12],[565,4,783,16],[566,2,785,0],[566,3,785,1],[566,4,785,2],[567,0,785,3],[567,3]],"functionMap":{"names":["<global>","DrawerLayout","constructor","shouldComponentUpdate","updateAnimatedEvent","gestureOptions.listener","handleContainerLayout","emitStateChanged","openingHandlerStateChange","onTapHandlerStateChange","handleRelease","updateShowing","animateDrawer","Animated.spring.start$argument_0","openDrawer","closeDrawer","renderOverlay","renderDrawer","setPanGestureRef","render"],"mappings":"AAA;eCsO;ECgB;GDiB;EEE;GFW;gCGgB;gCC+F;ODK;GHO;kCKE;GLE;6BME;GNK;sCOE;GPe;oCQE;GRU;0BSE;GTkC;0BUE;GV0B;0BWE;aCwC;KDe;GXC;eaE;GbY;gBcE;GdY;0BeE;GfyB;yBgBE;GhByF;6BiBE;GjBO;EkBE;GlByC;CDC"}},"type":"js/module"}]}