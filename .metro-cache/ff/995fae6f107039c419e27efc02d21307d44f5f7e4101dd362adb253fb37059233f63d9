{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"./GoTrueAdminApi","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":41,"index":257},"end":{"line":6,"column":68,"index":284}}],"key":"i76uMxXVdWAA3Rph0eWK7LoaO/w=","exportNames":["*"]}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":20,"index":307},"end":{"line":7,"column":46,"index":333}}],"key":"Tozkr70n9lVAcLLAJew2JSVOK9Y=","exportNames":["*"]}},{"name":"./lib/errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":352},"end":{"line":8,"column":40,"index":375}}],"key":"Hvlclxpmmg311e5qhG3wYodSjVs=","exportNames":["*"]}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":393},"end":{"line":9,"column":38,"index":415}}],"key":"R6LkNjEOXDiLQ/+hwj6jDUhuOC4=","exportNames":["*"]}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":18,"index":435},"end":{"line":10,"column":42,"index":459}},{"start":{"line":16,"column":18,"index":715},"end":{"line":16,"column":42,"index":739}}],"key":"WC5jlm7KwiIsdJM6jCtPN6iFk4U=","exportNames":["*"]}},{"name":"./lib/local-storage","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":24,"index":485},"end":{"line":11,"column":54,"index":515}}],"key":"28e7FuPaeGJTeNMVDStJkLK21ZQ=","exportNames":["*"]}},{"name":"./lib/polyfills","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":20,"index":537},"end":{"line":12,"column":46,"index":563}}],"key":"H1na6Pv39nAwh4LAnhORLuVehnY=","exportNames":["*"]}},{"name":"./lib/version","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":18,"index":583},"end":{"line":13,"column":42,"index":607}}],"key":"be4aTMTsFhd78/kHR0JbG8rudXE=","exportNames":["*"]}},{"name":"./lib/locks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":16,"index":625},"end":{"line":14,"column":38,"index":647}}],"key":"30OMvxA5kFoj+Fk30l1b7z+Cmv4=","exportNames":["*"]}},{"name":"./lib/base64url","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":20,"index":669},"end":{"line":15,"column":46,"index":695}}],"key":"A8ay9+wpIpGL0Q6K/yfIViI8mrc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _toConsumableArray = require(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  var _slicedToArray = require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n  var _classCallCheck = require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n  var _asyncToGenerator = require(_dependencyMap[4], \"@babel/runtime/helpers/asyncToGenerator\");\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var GoTrueAdminApi_1 = __importDefault(require(_dependencyMap[5], \"./GoTrueAdminApi\"));\n  var constants_1 = require(_dependencyMap[6], \"./lib/constants\");\n  var errors_1 = require(_dependencyMap[7], \"./lib/errors\");\n  var fetch_1 = require(_dependencyMap[8], \"./lib/fetch\");\n  var helpers_1 = require(_dependencyMap[9], \"./lib/helpers\");\n  var local_storage_1 = require(_dependencyMap[10], \"./lib/local-storage\");\n  var polyfills_1 = require(_dependencyMap[11], \"./lib/polyfills\");\n  var version_1 = require(_dependencyMap[12], \"./lib/version\");\n  var locks_1 = require(_dependencyMap[13], \"./lib/locks\");\n  var base64url_1 = require(_dependencyMap[14], \"./lib/base64url\");\n  var helpers_2 = require(_dependencyMap[9], \"./lib/helpers\");\n  (0, polyfills_1.polyfillGlobalThis)(); // Make \"globalThis\" available\n  var DEFAULT_OPTIONS = {\n    url: constants_1.GOTRUE_URL,\n    storageKey: constants_1.STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: constants_1.DEFAULT_HEADERS,\n    flowType: 'implicit',\n    debug: false,\n    hasCustomAuthorizationHeader: false\n  };\n  function lockNoOp(_x, _x2, _x3) {\n    return _lockNoOp.apply(this, arguments);\n  }\n  /**\n   * Caches JWKS values for all clients created in the same environment. This is\n   * especially useful for shared-memory execution environments such as Vercel's\n   * Fluid Compute, AWS Lambda or Supabase's Edge Functions. Regardless of how\n   * many clients are created, if they share the same storage key they will use\n   * the same JWKS cache, significantly speeding up getClaims() with asymmetric\n   * JWTs.\n   */\n  function _lockNoOp() {\n    _lockNoOp = _asyncToGenerator(function* (name, acquireTimeout, fn) {\n      return yield fn();\n    });\n    return _lockNoOp.apply(this, arguments);\n  }\n  var GLOBAL_JWKS = {};\n  var GoTrueClient = /*#__PURE__*/function () {\n    /**\n     * Create a new client for use in the browser.\n     */\n    function GoTrueClient(options) {\n      var _this = this;\n      _classCallCheck(this, GoTrueClient);\n      var _a, _b;\n      /**\n       * @experimental\n       */\n      this.userStorage = null;\n      this.memoryStorage = null;\n      this.stateChangeEmitters = new Map();\n      this.autoRefreshTicker = null;\n      this.visibilityChangedCallback = null;\n      this.refreshingDeferred = null;\n      /**\n       * Keeps track of the async client initialization.\n       * When null or not yet resolved the auth state is `unknown`\n       * Once resolved the the auth state is known and it's save to call any further client methods.\n       * Keep extra care to never reject or throw uncaught errors\n       */\n      this.initializePromise = null;\n      this.detectSessionInUrl = true;\n      this.hasCustomAuthorizationHeader = false;\n      this.suppressGetSessionWarning = false;\n      this.lockAcquired = false;\n      this.pendingInLock = [];\n      /**\n       * Used to broadcast state change events to other tabs listening.\n       */\n      this.broadcastChannel = null;\n      this.logger = console.log;\n      this.instanceID = GoTrueClient.nextInstanceID;\n      GoTrueClient.nextInstanceID += 1;\n      if (this.instanceID > 0 && (0, helpers_1.isBrowser)()) {\n        console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n      }\n      var settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n      this.logDebugMessages = !!settings.debug;\n      if (typeof settings.debug === 'function') {\n        this.logger = settings.debug;\n      }\n      this.persistSession = settings.persistSession;\n      this.storageKey = settings.storageKey;\n      this.autoRefreshToken = settings.autoRefreshToken;\n      this.admin = new GoTrueAdminApi_1.default({\n        url: settings.url,\n        headers: settings.headers,\n        fetch: settings.fetch\n      });\n      this.url = settings.url;\n      this.headers = settings.headers;\n      this.fetch = (0, helpers_1.resolveFetch)(settings.fetch);\n      this.lock = settings.lock || lockNoOp;\n      this.detectSessionInUrl = settings.detectSessionInUrl;\n      this.flowType = settings.flowType;\n      this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n      if (settings.lock) {\n        this.lock = settings.lock;\n      } else if ((0, helpers_1.isBrowser)() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n        this.lock = locks_1.navigatorLock;\n      } else {\n        this.lock = lockNoOp;\n      }\n      if (!this.jwks) {\n        this.jwks = {\n          keys: []\n        };\n        this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\n      }\n      this.mfa = {\n        verify: this._verify.bind(this),\n        enroll: this._enroll.bind(this),\n        unenroll: this._unenroll.bind(this),\n        challenge: this._challenge.bind(this),\n        listFactors: this._listFactors.bind(this),\n        challengeAndVerify: this._challengeAndVerify.bind(this),\n        getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this)\n      };\n      if (this.persistSession) {\n        if (settings.storage) {\n          this.storage = settings.storage;\n        } else {\n          if ((0, helpers_1.supportsLocalStorage)()) {\n            this.storage = globalThis.localStorage;\n          } else {\n            this.memoryStorage = {};\n            this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n          }\n        }\n        if (settings.userStorage) {\n          this.userStorage = settings.userStorage;\n        }\n      } else {\n        this.memoryStorage = {};\n        this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n      }\n      if ((0, helpers_1.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n        try {\n          this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n        } catch (e) {\n          console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n        }\n        (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (event) {\n            _this._debug('received broadcast notification from other tab or client', event);\n            yield _this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n          });\n          return function (_x4) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n      this.initialize();\n    }\n    /**\n     * The JWKS used for verifying asymmetric JWTs\n     */\n    return _createClass(GoTrueClient, [{\n      key: \"jwks\",\n      get: function get() {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.jwks) !== null && _b !== void 0 ? _b : {\n          keys: []\n        };\n      },\n      set: function set(value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n          jwks: value\n        });\n      }\n    }, {\n      key: \"jwks_cached_at\",\n      get: function get() {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.cachedAt) !== null && _b !== void 0 ? _b : Number.MIN_SAFE_INTEGER;\n      },\n      set: function set(value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n          cachedAt: value\n        });\n      }\n    }, {\n      key: \"_debug\",\n      value: function _debug() {\n        if (this.logDebugMessages) {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          this.logger.apply(this, [`GoTrueClient@${this.instanceID} (${version_1.version}) ${new Date().toISOString()}`].concat(args));\n        }\n        return this;\n      }\n      /**\n       * Initializes the client session either from the url or from storage.\n       * This method is automatically called when instantiating the client, but should also be called\n       * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n       */\n    }, {\n      key: \"initialize\",\n      value: (function () {\n        var _initialize2 = _asyncToGenerator(function* () {\n          var _this2 = this;\n          if (this.initializePromise) {\n            return yield this.initializePromise;\n          }\n          this.initializePromise = _asyncToGenerator(function* () {\n            return yield _this2._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n              return yield _this2._initialize();\n            }));\n          })();\n          return yield this.initializePromise;\n        });\n        function initialize() {\n          return _initialize2.apply(this, arguments);\n        }\n        return initialize;\n      }()\n      /**\n       * IMPORTANT:\n       * 1. Never throw in this method, as it is called from the constructor\n       * 2. Never return a session from this method as it would be cached over\n       *    the whole lifetime of the client\n       */\n      )\n    }, {\n      key: \"_initialize\",\n      value: (function () {\n        var _initialize3 = _asyncToGenerator(function* () {\n          var _this3 = this;\n          var _a;\n          try {\n            var params = (0, helpers_1.parseParametersFromURL)(window.location.href);\n            var callbackUrlType = 'none';\n            if (this._isImplicitGrantCallback(params)) {\n              callbackUrlType = 'implicit';\n            } else if (yield this._isPKCECallback(params)) {\n              callbackUrlType = 'pkce';\n            }\n            /**\n             * Attempt to get the session from the URL only if these conditions are fulfilled\n             *\n             * Note: If the URL isn't one of the callback url types (implicit or pkce),\n             * then there could be an existing session so we don't want to prematurely remove it\n             */\n            if ((0, helpers_1.isBrowser)() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n              var _yield$this$_getSessi = yield this._getSessionFromURL(params, callbackUrlType),\n                data = _yield$this$_getSessi.data,\n                error = _yield$this$_getSessi.error;\n              if (error) {\n                this._debug('#_initialize()', 'error detecting session from URL', error);\n                if ((0, errors_1.isAuthImplicitGrantRedirectError)(error)) {\n                  var errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\n                  if (errorCode === 'identity_already_exists' || errorCode === 'identity_not_found' || errorCode === 'single_identity_not_deletable') {\n                    return {\n                      error: error\n                    };\n                  }\n                }\n                // failed login attempt via url,\n                // remove old session as in verifyOtp, signUp and signInWith*\n                yield this._removeSession();\n                return {\n                  error: error\n                };\n              }\n              var session = data.session,\n                redirectType = data.redirectType;\n              this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n              yield this._saveSession(session);\n              setTimeout(/*#__PURE__*/_asyncToGenerator(function* () {\n                if (redirectType === 'recovery') {\n                  yield _this3._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                } else {\n                  yield _this3._notifyAllSubscribers('SIGNED_IN', session);\n                }\n              }), 0);\n              return {\n                error: null\n              };\n            }\n            // no login attempt via callback url try to recover session from storage\n            yield this._recoverAndRefresh();\n            return {\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                error: error\n              };\n            }\n            return {\n              error: new errors_1.AuthUnknownError('Unexpected error during initialization', error)\n            };\n          } finally {\n            yield this._handleVisibilityChange();\n            this._debug('#_initialize()', 'end');\n          }\n        });\n        function _initialize() {\n          return _initialize3.apply(this, arguments);\n        }\n        return _initialize;\n      }()\n      /**\n       * Creates a new anonymous user.\n       *\n       * @returns A session where the is_anonymous claim in the access token JWT set to true\n       */\n      )\n    }, {\n      key: \"signInAnonymously\",\n      value: (function () {\n        var _signInAnonymously = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c;\n          try {\n            var res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n              headers: this.headers,\n              body: {\n                data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n                gotrue_meta_security: {\n                  captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken\n                }\n              },\n              xform: fetch_1._sessionResponse\n            });\n            var data = res.data,\n              error = res.error;\n            if (error || !data) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            var session = data.session;\n            var user = data.user;\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user: user,\n                session: session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInAnonymously(_x5) {\n          return _signInAnonymously.apply(this, arguments);\n        }\n        return signInAnonymously;\n      }()\n      /**\n       * Creates a new user.\n       *\n       * Be aware that if a user account exists in the system you may get back an\n       * error message that attempts to hide this information from the user.\n       * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n       *\n       * @returns A logged-in session if the server has \"autoconfirm\" ON\n       * @returns A user if the server has \"autoconfirm\" OFF\n       */\n      )\n    }, {\n      key: \"signUp\",\n      value: (function () {\n        var _signUp = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c;\n          try {\n            var res;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                password = credentials.password,\n                options = credentials.options;\n              var codeChallenge = null;\n              var codeChallengeMethod = null;\n              if (this.flowType === 'pkce') {\n                ;\n                var _yield = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                var _yield2 = _slicedToArray(_yield, 2);\n                codeChallenge = _yield2[0];\n                codeChallengeMethod = _yield2[1];\n              }\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                body: {\n                  email: email,\n                  password: password,\n                  data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  },\n                  code_challenge: codeChallenge,\n                  code_challenge_method: codeChallengeMethod\n                },\n                xform: fetch_1._sessionResponse\n              });\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _password = credentials.password,\n                _options = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                body: {\n                  phone: phone,\n                  password: _password,\n                  data: (_b = _options === null || _options === void 0 ? void 0 : _options.data) !== null && _b !== void 0 ? _b : {},\n                  channel: (_c = _options === null || _options === void 0 ? void 0 : _options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                  gotrue_meta_security: {\n                    captcha_token: _options === null || _options === void 0 ? void 0 : _options.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponse\n              });\n            } else {\n              throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            var _res = res,\n              data = _res.data,\n              error = _res.error;\n            if (error || !data) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            var session = data.session;\n            var user = data.user;\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user: user,\n                session: session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function signUp(_x6) {\n          return _signUp.apply(this, arguments);\n        }\n        return signUp;\n      }()\n      /**\n       * Log in an existing user with an email and password or phone and password.\n       *\n       * Be aware that you may get back an error message that will not distinguish\n       * between the cases where the account does not exist or that the\n       * email/phone and password combination is wrong or that the account can only\n       * be accessed via social login.\n       */\n      )\n    }, {\n      key: \"signInWithPassword\",\n      value: (function () {\n        var _signInWithPassword = _asyncToGenerator(function* (credentials) {\n          try {\n            var res;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                password = credentials.password,\n                options = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                headers: this.headers,\n                body: {\n                  email: email,\n                  password: password,\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponsePassword\n              });\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _password2 = credentials.password,\n                _options2 = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                headers: this.headers,\n                body: {\n                  phone: phone,\n                  password: _password2,\n                  gotrue_meta_security: {\n                    captcha_token: _options2 === null || _options2 === void 0 ? void 0 : _options2.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponsePassword\n              });\n            } else {\n              throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            var _res2 = res,\n              data = _res2.data,\n              error = _res2.error;\n            if (error) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            } else if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign({\n                user: data.user,\n                session: data.session\n              }, data.weak_password ? {\n                weakPassword: data.weak_password\n              } : null),\n              error: error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithPassword(_x7) {\n          return _signInWithPassword.apply(this, arguments);\n        }\n        return signInWithPassword;\n      }()\n      /**\n       * Log in an existing user via a third-party provider.\n       * This method supports the PKCE flow.\n       */\n      )\n    }, {\n      key: \"signInWithOAuth\",\n      value: (function () {\n        var _signInWithOAuth = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d;\n          return yield this._handleProviderSignIn(credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect\n          });\n        });\n        function signInWithOAuth(_x8) {\n          return _signInWithOAuth.apply(this, arguments);\n        }\n        return signInWithOAuth;\n      }()\n      /**\n       * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n       */\n      )\n    }, {\n      key: \"exchangeCodeForSession\",\n      value: (function () {\n        var _exchangeCodeForSession2 = _asyncToGenerator(function* (authCode) {\n          var _this4 = this;\n          yield this.initializePromise;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return _this4._exchangeCodeForSession(authCode);\n          }));\n        });\n        function exchangeCodeForSession(_x9) {\n          return _exchangeCodeForSession2.apply(this, arguments);\n        }\n        return exchangeCodeForSession;\n      }()\n      /**\n       * Signs in a user by verifying a message signed by the user's private key.\n       * Only Solana supported at this time, using the Sign in with Solana standard.\n       */\n      )\n    }, {\n      key: \"signInWithWeb3\",\n      value: (function () {\n        var _signInWithWeb = _asyncToGenerator(function* (credentials) {\n          var chain = credentials.chain;\n          if (chain === 'solana') {\n            return yield this.signInWithSolana(credentials);\n          }\n          throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\n        });\n        function signInWithWeb3(_x0) {\n          return _signInWithWeb.apply(this, arguments);\n        }\n        return signInWithWeb3;\n      }())\n    }, {\n      key: \"signInWithSolana\",\n      value: function () {\n        var _signInWithSolana = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n          var message;\n          var signature;\n          if ('message' in credentials) {\n            message = credentials.message;\n            signature = credentials.signature;\n          } else {\n            var chain = credentials.chain,\n              wallet = credentials.wallet,\n              statement = credentials.statement,\n              options = credentials.options;\n            var resolvedWallet;\n            if (!(0, helpers_1.isBrowser)()) {\n              if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n                throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n              }\n              resolvedWallet = wallet;\n            } else if (typeof wallet === 'object') {\n              resolvedWallet = wallet;\n            } else {\n              var windowAny = window;\n              if ('solana' in windowAny && typeof windowAny.solana === 'object' && ('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function' || 'signMessage' in windowAny.solana && typeof windowAny.solana.signMessage === 'function')) {\n                resolvedWallet = windowAny.solana;\n              } else {\n                throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\n              }\n            }\n            var url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n            if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\n              var output = yield resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({\n                issuedAt: new Date().toISOString()\n              }, options === null || options === void 0 ? void 0 : options.signInWithSolana), {\n                // non-overridable properties\n                version: '1',\n                domain: url.host,\n                uri: url.href\n              }), statement ? {\n                statement: statement\n              } : null));\n              var outputToProcess;\n              if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\n                outputToProcess = output[0];\n              } else if (output && typeof output === 'object' && 'signedMessage' in output && 'signature' in output) {\n                outputToProcess = output;\n              } else {\n                throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\n              }\n              if ('signedMessage' in outputToProcess && 'signature' in outputToProcess && (typeof outputToProcess.signedMessage === 'string' || outputToProcess.signedMessage instanceof Uint8Array) && outputToProcess.signature instanceof Uint8Array) {\n                message = typeof outputToProcess.signedMessage === 'string' ? outputToProcess.signedMessage : new TextDecoder().decode(outputToProcess.signedMessage);\n                signature = outputToProcess.signature;\n              } else {\n                throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\n              }\n            } else {\n              if (!('signMessage' in resolvedWallet) || typeof resolvedWallet.signMessage !== 'function' || !('publicKey' in resolvedWallet) || typeof resolvedWallet !== 'object' || !resolvedWallet.publicKey || !('toBase58' in resolvedWallet.publicKey) || typeof resolvedWallet.publicKey.toBase58 !== 'function') {\n                throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\n              }\n              message = [`${url.host} wants you to sign in with your Solana account:`, resolvedWallet.publicKey.toBase58()].concat(_toConsumableArray(statement ? ['', statement, ''] : ['']), ['Version: 1', `URI: ${url.href}`, `Issued At: ${(_c = (_b = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _b === void 0 ? void 0 : _b.issuedAt) !== null && _c !== void 0 ? _c : new Date().toISOString()}`], _toConsumableArray(((_d = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _d === void 0 ? void 0 : _d.notBefore) ? [`Not Before: ${options.signInWithSolana.notBefore}`] : []), _toConsumableArray(((_e = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _e === void 0 ? void 0 : _e.expirationTime) ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`] : []), _toConsumableArray(((_f = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _f === void 0 ? void 0 : _f.chainId) ? [`Chain ID: ${options.signInWithSolana.chainId}`] : []), _toConsumableArray(((_g = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _g === void 0 ? void 0 : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []), _toConsumableArray(((_h = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _h === void 0 ? void 0 : _h.requestId) ? [`Request ID: ${options.signInWithSolana.requestId}`] : []), _toConsumableArray(((_k = (_j = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _j === void 0 ? void 0 : _j.resources) === null || _k === void 0 ? void 0 : _k.length) ? ['Resources'].concat(_toConsumableArray(options.signInWithSolana.resources.map(function (resource) {\n                return `- ${resource}`;\n              }))) : [])).join('\\n');\n              var maybeSignature = yield resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\n              if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\n                throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\n              }\n              signature = maybeSignature;\n            }\n          }\n          try {\n            var _yield3 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n                headers: this.headers,\n                body: Object.assign({\n                  chain: 'solana',\n                  message: message,\n                  signature: (0, base64url_1.bytesToBase64URL)(signature)\n                }, ((_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken) ? {\n                  gotrue_meta_security: {\n                    captcha_token: (_m = credentials.options) === null || _m === void 0 ? void 0 : _m.captchaToken\n                  }\n                } : null),\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield3.data,\n              error = _yield3.error;\n            if (error) {\n              throw error;\n            }\n            if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign({}, data),\n              error: error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithSolana(_x1) {\n          return _signInWithSolana.apply(this, arguments);\n        }\n        return signInWithSolana;\n      }()\n    }, {\n      key: \"_exchangeCodeForSession\",\n      value: function () {\n        var _exchangeCodeForSession3 = _asyncToGenerator(function* (authCode) {\n          var storageItem = yield (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          var _split = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/'),\n            _split2 = _slicedToArray(_split, 2),\n            codeVerifier = _split2[0],\n            redirectType = _split2[1];\n          try {\n            var _yield4 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n                headers: this.headers,\n                body: {\n                  auth_code: authCode,\n                  code_verifier: codeVerifier\n                },\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield4.data,\n              error = _yield4.error;\n            yield (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n            if (error) {\n              throw error;\n            }\n            if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  redirectType: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign(Object.assign({}, data), {\n                redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null\n              }),\n              error: error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  redirectType: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function _exchangeCodeForSession(_x10) {\n          return _exchangeCodeForSession3.apply(this, arguments);\n        }\n        return _exchangeCodeForSession;\n      }()\n      /**\n       * Allows signing in with an OIDC ID token. The authentication provider used\n       * should be enabled and configured.\n       */\n    }, {\n      key: \"signInWithIdToken\",\n      value: (function () {\n        var _signInWithIdToken = _asyncToGenerator(function* (credentials) {\n          try {\n            var options = credentials.options,\n              provider = credentials.provider,\n              token = credentials.token,\n              access_token = credentials.access_token,\n              nonce = credentials.nonce;\n            var res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n              headers: this.headers,\n              body: {\n                provider: provider,\n                id_token: token,\n                access_token: access_token,\n                nonce: nonce,\n                gotrue_meta_security: {\n                  captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                }\n              },\n              xform: fetch_1._sessionResponse\n            });\n            var data = res.data,\n              error = res.error;\n            if (error) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            } else if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: data,\n              error: error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithIdToken(_x11) {\n          return _signInWithIdToken.apply(this, arguments);\n        }\n        return signInWithIdToken;\n      }()\n      /**\n       * Log in a user using magiclink or a one-time password (OTP).\n       *\n       * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n       * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n       * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n       *\n       * Be aware that you may get back an error message that will not distinguish\n       * between the cases where the account does not exist or, that the account\n       * can only be accessed via social login.\n       *\n       * Do note that you will need to configure a Whatsapp sender on Twilio\n       * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n       * channel is not supported on other providers\n       * at this time.\n       * This method supports PKCE when an email is passed.\n       */\n      )\n    }, {\n      key: \"signInWithOtp\",\n      value: (function () {\n        var _signInWithOtp = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d, _e;\n          try {\n            if ('email' in credentials) {\n              var email = credentials.email,\n                options = credentials.options;\n              var codeChallenge = null;\n              var codeChallengeMethod = null;\n              if (this.flowType === 'pkce') {\n                ;\n                var _yield5 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                var _yield6 = _slicedToArray(_yield5, 2);\n                codeChallenge = _yield6[0];\n                codeChallengeMethod = _yield6[1];\n              }\n              var _yield7 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                  headers: this.headers,\n                  body: {\n                    email: email,\n                    data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                    create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    },\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod\n                  },\n                  redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n                }),\n                error = _yield7.error;\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _options3 = credentials.options;\n              var _yield8 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                  headers: this.headers,\n                  body: {\n                    phone: phone,\n                    data: (_c = _options3 === null || _options3 === void 0 ? void 0 : _options3.data) !== null && _c !== void 0 ? _c : {},\n                    create_user: (_d = _options3 === null || _options3 === void 0 ? void 0 : _options3.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                    gotrue_meta_security: {\n                      captcha_token: _options3 === null || _options3 === void 0 ? void 0 : _options3.captchaToken\n                    },\n                    channel: (_e = _options3 === null || _options3 === void 0 ? void 0 : _options3.channel) !== null && _e !== void 0 ? _e : 'sms'\n                  }\n                }),\n                data = _yield8.data,\n                _error = _yield8.error;\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === void 0 ? void 0 : data.message_id\n                },\n                error: _error\n              };\n            }\n            throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number.');\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithOtp(_x12) {\n          return _signInWithOtp.apply(this, arguments);\n        }\n        return signInWithOtp;\n      }()\n      /**\n       * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n       */\n      )\n    }, {\n      key: \"verifyOtp\",\n      value: (function () {\n        var _verifyOtp = _asyncToGenerator(function* (params) {\n          var _a, _b;\n          try {\n            var redirectTo = undefined;\n            var captchaToken = undefined;\n            if ('options' in params) {\n              redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n              captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n            }\n            var _yield9 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/verify`, {\n                headers: this.headers,\n                body: Object.assign(Object.assign({}, params), {\n                  gotrue_meta_security: {\n                    captcha_token: captchaToken\n                  }\n                }),\n                redirectTo: redirectTo,\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield9.data,\n              error = _yield9.error;\n            if (error) {\n              throw error;\n            }\n            if (!data) {\n              throw new Error('An error occurred on token verification.');\n            }\n            var session = data.session;\n            var user = data.user;\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n              yield this._saveSession(session);\n              yield this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user: user,\n                session: session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function verifyOtp(_x13) {\n          return _verifyOtp.apply(this, arguments);\n        }\n        return verifyOtp;\n      }()\n      /**\n       * Attempts a single-sign on using an enterprise Identity Provider. A\n       * successful SSO attempt will redirect the current page to the identity\n       * provider authorization page. The redirect URL is implementation and SSO\n       * protocol specific.\n       *\n       * You can use it by providing a SSO domain. Typically you can extract this\n       * domain by asking users for their email address. If this domain is\n       * registered on the Auth instance the redirect will use that organization's\n       * currently active SSO Identity Provider for the login.\n       *\n       * If you have built an organization-specific login page, you can use the\n       * organization's SSO Identity Provider UUID directly instead.\n       */\n      )\n    }, {\n      key: \"signInWithSSO\",\n      value: (function () {\n        var _signInWithSSO = _asyncToGenerator(function* (params) {\n          var _a, _b, _c;\n          try {\n            var codeChallenge = null;\n            var codeChallengeMethod = null;\n            if (this.flowType === 'pkce') {\n              ;\n              var _yield0 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n              var _yield1 = _slicedToArray(_yield0, 2);\n              codeChallenge = _yield1[0];\n              codeChallengeMethod = _yield1[1];\n            }\n            return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/sso`, {\n              body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, 'providerId' in params ? {\n                provider_id: params.providerId\n              } : null), 'domain' in params ? {\n                domain: params.domain\n              } : null), {\n                redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined\n              }), ((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken) ? {\n                gotrue_meta_security: {\n                  captcha_token: params.options.captchaToken\n                }\n              } : null), {\n                skip_http_redirect: true,\n                code_challenge: codeChallenge,\n                code_challenge_method: codeChallengeMethod\n              }),\n              headers: this.headers,\n              xform: fetch_1._ssoResponse\n            });\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithSSO(_x14) {\n          return _signInWithSSO.apply(this, arguments);\n        }\n        return signInWithSSO;\n      }()\n      /**\n       * Sends a reauthentication OTP to the user's email or phone number.\n       * Requires the user to be signed-in.\n       */\n      )\n    }, {\n      key: \"reauthenticate\",\n      value: (function () {\n        var _reauthenticate2 = _asyncToGenerator(function* () {\n          var _this5 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this5._reauthenticate();\n          }));\n        });\n        function reauthenticate() {\n          return _reauthenticate2.apply(this, arguments);\n        }\n        return reauthenticate;\n      }())\n    }, {\n      key: \"_reauthenticate\",\n      value: function () {\n        var _reauthenticate3 = _asyncToGenerator(function* () {\n          var _this6 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator(function* (result) {\n                var session = result.data.session,\n                  sessionError = result.error;\n                if (sessionError) throw sessionError;\n                if (!session) throw new errors_1.AuthSessionMissingError();\n                var _yield10 = yield (0, fetch_1._request)(_this6.fetch, 'GET', `${_this6.url}/reauthenticate`, {\n                    headers: _this6.headers,\n                    jwt: session.access_token\n                  }),\n                  error = _yield10.error;\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: error\n                };\n              });\n              return function (_x15) {\n                return _ref7.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function _reauthenticate() {\n          return _reauthenticate3.apply(this, arguments);\n        }\n        return _reauthenticate;\n      }()\n      /**\n       * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n       */\n    }, {\n      key: \"resend\",\n      value: (function () {\n        var _resend = _asyncToGenerator(function* (credentials) {\n          try {\n            var endpoint = `${this.url}/resend`;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                type = credentials.type,\n                options = credentials.options;\n              var _yield11 = yield (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n                  headers: this.headers,\n                  body: {\n                    email: email,\n                    type: type,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    }\n                  },\n                  redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n                }),\n                error = _yield11.error;\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _type = credentials.type,\n                _options4 = credentials.options;\n              var _yield12 = yield (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n                  headers: this.headers,\n                  body: {\n                    phone: phone,\n                    type: _type,\n                    gotrue_meta_security: {\n                      captcha_token: _options4 === null || _options4 === void 0 ? void 0 : _options4.captchaToken\n                    }\n                  }\n                }),\n                data = _yield12.data,\n                _error2 = _yield12.error;\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === void 0 ? void 0 : data.message_id\n                },\n                error: _error2\n              };\n            }\n            throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function resend(_x16) {\n          return _resend.apply(this, arguments);\n        }\n        return resend;\n      }()\n      /**\n       * Returns the session, refreshing it if necessary.\n       *\n       * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n       *\n       * **IMPORTANT:** This method loads values directly from the storage attached\n       * to the client. If that storage is based on request cookies for example,\n       * the values in it may not be authentic and therefore it's strongly advised\n       * against using this method and its results in such circumstances. A warning\n       * will be emitted if this is detected. Use {@link #getUser()} instead.\n       */\n      )\n    }, {\n      key: \"getSession\",\n      value: (function () {\n        var _getSession = _asyncToGenerator(function* () {\n          var _this7 = this;\n          yield this.initializePromise;\n          var result = yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return _this7._useSession(/*#__PURE__*/function () {\n              var _ref9 = _asyncToGenerator(function* (result) {\n                return result;\n              });\n              return function (_x17) {\n                return _ref9.apply(this, arguments);\n              };\n            }());\n          }));\n          return result;\n        });\n        function getSession() {\n          return _getSession.apply(this, arguments);\n        }\n        return getSession;\n      }()\n      /**\n       * Acquires a global lock based on the storage key.\n       */\n      )\n    }, {\n      key: \"_acquireLock\",\n      value: (function () {\n        var _acquireLock2 = _asyncToGenerator(function* (acquireTimeout, fn) {\n          var _this8 = this;\n          this._debug('#_acquireLock', 'begin', acquireTimeout);\n          try {\n            if (this.lockAcquired) {\n              var last = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve();\n              var result = _asyncToGenerator(function* () {\n                yield last;\n                return yield fn();\n              })();\n              this.pendingInLock.push(_asyncToGenerator(function* () {\n                try {\n                  yield result;\n                } catch (e) {\n                  // we just care if it finished\n                }\n              })());\n              return result;\n            }\n            return yield this.lock(`lock:${this.storageKey}`, acquireTimeout, /*#__PURE__*/_asyncToGenerator(function* () {\n              _this8._debug('#_acquireLock', 'lock acquired for storage key', _this8.storageKey);\n              try {\n                _this8.lockAcquired = true;\n                var _result = fn();\n                _this8.pendingInLock.push(_asyncToGenerator(function* () {\n                  try {\n                    yield _result;\n                  } catch (e) {\n                    // we just care if it finished\n                  }\n                })());\n                yield _result;\n                // keep draining the queue until there's nothing to wait on\n                while (_this8.pendingInLock.length) {\n                  var waitOn = _toConsumableArray(_this8.pendingInLock);\n                  yield Promise.all(waitOn);\n                  _this8.pendingInLock.splice(0, waitOn.length);\n                }\n                return yield _result;\n              } finally {\n                _this8._debug('#_acquireLock', 'lock released for storage key', _this8.storageKey);\n                _this8.lockAcquired = false;\n              }\n            }));\n          } finally {\n            this._debug('#_acquireLock', 'end');\n          }\n        });\n        function _acquireLock(_x18, _x19) {\n          return _acquireLock2.apply(this, arguments);\n        }\n        return _acquireLock;\n      }()\n      /**\n       * Use instead of {@link #getSession} inside the library. It is\n       * semantically usually what you want, as getting a session involves some\n       * processing afterwards that requires only one client operating on the\n       * session at once across multiple tabs or processes.\n       */\n      )\n    }, {\n      key: \"_useSession\",\n      value: (function () {\n        var _useSession2 = _asyncToGenerator(function* (fn) {\n          this._debug('#_useSession', 'begin');\n          try {\n            // the use of __loadSession here is the only correct use of the function!\n            var result = yield this.__loadSession();\n            return yield fn(result);\n          } finally {\n            this._debug('#_useSession', 'end');\n          }\n        });\n        function _useSession(_x20) {\n          return _useSession2.apply(this, arguments);\n        }\n        return _useSession;\n      }()\n      /**\n       * NEVER USE DIRECTLY!\n       *\n       * Always use {@link #_useSession}.\n       */\n      )\n    }, {\n      key: \"__loadSession\",\n      value: (function () {\n        var _loadSession = _asyncToGenerator(function* () {\n          var _this9 = this;\n          this._debug('#__loadSession()', 'begin');\n          if (!this.lockAcquired) {\n            this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n          }\n          try {\n            var currentSession = null;\n            var maybeSession = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n            this._debug('#getSession()', 'session from storage', maybeSession);\n            if (maybeSession !== null) {\n              if (this._isValidSession(maybeSession)) {\n                currentSession = maybeSession;\n              } else {\n                this._debug('#getSession()', 'session from storage is not valid');\n                yield this._removeSession();\n              }\n            }\n            if (!currentSession) {\n              return {\n                data: {\n                  session: null\n                },\n                error: null\n              };\n            }\n            // A session is considered expired before the access token _actually_\n            // expires. When the autoRefreshToken option is off (or when the tab is\n            // in the background), very eager users of getSession() -- like\n            // realtime-js -- might send a valid JWT which will expire by the time it\n            // reaches the server.\n            var hasExpired = currentSession.expires_at ? currentSession.expires_at * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS : false;\n            this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\n            if (!hasExpired) {\n              if (this.userStorage) {\n                var maybeUser = yield (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n                if (maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) {\n                  currentSession.user = maybeUser.user;\n                } else {\n                  currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n                }\n              }\n              if (this.storage.isServer && currentSession.user) {\n                var suppressWarning = this.suppressGetSessionWarning;\n                var proxySession = new Proxy(currentSession, {\n                  get: function get(target, prop, receiver) {\n                    if (!suppressWarning && prop === 'user') {\n                      // only show warning when the user object is being accessed from the server\n                      console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\n                      suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                      _this9.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                    }\n                    return Reflect.get(target, prop, receiver);\n                  }\n                });\n                currentSession = proxySession;\n              }\n              return {\n                data: {\n                  session: currentSession\n                },\n                error: null\n              };\n            }\n            var _yield$this$_callRefr = yield this._callRefreshToken(currentSession.refresh_token),\n              session = _yield$this$_callRefr.session,\n              error = _yield$this$_callRefr.error;\n            if (error) {\n              return {\n                data: {\n                  session: null\n                },\n                error: error\n              };\n            }\n            return {\n              data: {\n                session: session\n              },\n              error: null\n            };\n          } finally {\n            this._debug('#__loadSession()', 'end');\n          }\n        });\n        function __loadSession() {\n          return _loadSession.apply(this, arguments);\n        }\n        return __loadSession;\n      }()\n      /**\n       * Gets the current user details if there is an existing session. This method\n       * performs a network request to the Supabase Auth server, so the returned\n       * value is authentic and can be used to base authorization rules on.\n       *\n       * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n       */\n      )\n    }, {\n      key: \"getUser\",\n      value: (function () {\n        var _getUser2 = _asyncToGenerator(function* (jwt) {\n          var _this0 = this;\n          if (jwt) {\n            return yield this._getUser(jwt);\n          }\n          yield this.initializePromise;\n          var result = yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this0._getUser();\n          }));\n          return result;\n        });\n        function getUser(_x21) {\n          return _getUser2.apply(this, arguments);\n        }\n        return getUser;\n      }())\n    }, {\n      key: \"_getUser\",\n      value: function () {\n        var _getUser3 = _asyncToGenerator(function* (jwt) {\n          var _this1 = this;\n          try {\n            if (jwt) {\n              return yield (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/user`, {\n                headers: this.headers,\n                jwt: jwt,\n                xform: fetch_1._userResponse\n              });\n            }\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref13 = _asyncToGenerator(function* (result) {\n                var _a, _b, _c;\n                var data = result.data,\n                  error = result.error;\n                if (error) {\n                  throw error;\n                }\n                // returns an error if there is no access_token or custom authorization header\n                if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !_this1.hasCustomAuthorizationHeader) {\n                  return {\n                    data: {\n                      user: null\n                    },\n                    error: new errors_1.AuthSessionMissingError()\n                  };\n                }\n                return yield (0, fetch_1._request)(_this1.fetch, 'GET', `${_this1.url}/user`, {\n                  headers: _this1.headers,\n                  jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n                  xform: fetch_1._userResponse\n                });\n              });\n              return function (_x23) {\n                return _ref13.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              if ((0, errors_1.isAuthSessionMissingError)(error)) {\n                // JWT contains a `session_id` which does not correspond to an active\n                // session in the database, indicating the user is signed out.\n                yield this._removeSession();\n                yield (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n              }\n              return {\n                data: {\n                  user: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function _getUser(_x22) {\n          return _getUser3.apply(this, arguments);\n        }\n        return _getUser;\n      }()\n      /**\n       * Updates user data for a logged in user.\n       */\n    }, {\n      key: \"updateUser\",\n      value: (function () {\n        var _updateUser2 = _asyncToGenerator(function* (attributes) {\n          var _this10 = this;\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this10._updateUser(attributes, options);\n          }));\n        });\n        function updateUser(_x24) {\n          return _updateUser2.apply(this, arguments);\n        }\n        return updateUser;\n      }())\n    }, {\n      key: \"_updateUser\",\n      value: function () {\n        var _updateUser3 = _asyncToGenerator(function* (attributes) {\n          var _this11 = this;\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref15 = _asyncToGenerator(function* (result) {\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  throw sessionError;\n                }\n                if (!sessionData.session) {\n                  throw new errors_1.AuthSessionMissingError();\n                }\n                var session = sessionData.session;\n                var codeChallenge = null;\n                var codeChallengeMethod = null;\n                if (_this11.flowType === 'pkce' && attributes.email != null) {\n                  ;\n                  var _yield13 = yield (0, helpers_1.getCodeChallengeAndMethod)(_this11.storage, _this11.storageKey);\n                  var _yield14 = _slicedToArray(_yield13, 2);\n                  codeChallenge = _yield14[0];\n                  codeChallengeMethod = _yield14[1];\n                }\n                var _yield15 = yield (0, fetch_1._request)(_this11.fetch, 'PUT', `${_this11.url}/user`, {\n                    headers: _this11.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: Object.assign(Object.assign({}, attributes), {\n                      code_challenge: codeChallenge,\n                      code_challenge_method: codeChallengeMethod\n                    }),\n                    jwt: session.access_token,\n                    xform: fetch_1._userResponse\n                  }),\n                  data = _yield15.data,\n                  userError = _yield15.error;\n                if (userError) throw userError;\n                session.user = data.user;\n                yield _this11._saveSession(session);\n                yield _this11._notifyAllSubscribers('USER_UPDATED', session);\n                return {\n                  data: {\n                    user: session.user\n                  },\n                  error: null\n                };\n              });\n              return function (_x26) {\n                return _ref15.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function _updateUser(_x25) {\n          return _updateUser3.apply(this, arguments);\n        }\n        return _updateUser;\n      }()\n      /**\n       * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n       * If the refresh token or access token in the current session is invalid, an error will be thrown.\n       * @param currentSession The current session that minimally contains an access token and refresh token.\n       */\n    }, {\n      key: \"setSession\",\n      value: (function () {\n        var _setSession2 = _asyncToGenerator(function* (currentSession) {\n          var _this12 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this12._setSession(currentSession);\n          }));\n        });\n        function setSession(_x27) {\n          return _setSession2.apply(this, arguments);\n        }\n        return setSession;\n      }())\n    }, {\n      key: \"_setSession\",\n      value: function () {\n        var _setSession3 = _asyncToGenerator(function* (currentSession) {\n          try {\n            if (!currentSession.access_token || !currentSession.refresh_token) {\n              throw new errors_1.AuthSessionMissingError();\n            }\n            var timeNow = Date.now() / 1000;\n            var expiresAt = timeNow;\n            var hasExpired = true;\n            var session = null;\n            var _ref17 = (0, helpers_1.decodeJWT)(currentSession.access_token),\n              payload = _ref17.payload;\n            if (payload.exp) {\n              expiresAt = payload.exp;\n              hasExpired = expiresAt <= timeNow;\n            }\n            if (hasExpired) {\n              var _yield$this$_callRefr2 = yield this._callRefreshToken(currentSession.refresh_token),\n                refreshedSession = _yield$this$_callRefr2.session,\n                error = _yield$this$_callRefr2.error;\n              if (error) {\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: error\n                };\n              }\n              if (!refreshedSession) {\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: null\n                };\n              }\n              session = refreshedSession;\n            } else {\n              var _yield$this$_getUser = yield this._getUser(currentSession.access_token),\n                data = _yield$this$_getUser.data,\n                _error3 = _yield$this$_getUser.error;\n              if (_error3) {\n                throw _error3;\n              }\n              session = {\n                access_token: currentSession.access_token,\n                refresh_token: currentSession.refresh_token,\n                user: data.user,\n                token_type: 'bearer',\n                expires_in: expiresAt - timeNow,\n                expires_at: expiresAt\n              };\n              yield this._saveSession(session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user: session.user,\n                session: session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function _setSession(_x28) {\n          return _setSession3.apply(this, arguments);\n        }\n        return _setSession;\n      }()\n      /**\n       * Returns a new session, regardless of expiry status.\n       * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n       * If the current session's refresh token is invalid, an error will be thrown.\n       * @param currentSession The current session. If passed in, it must contain a refresh token.\n       */\n    }, {\n      key: \"refreshSession\",\n      value: (function () {\n        var _refreshSession2 = _asyncToGenerator(function* (currentSession) {\n          var _this13 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this13._refreshSession(currentSession);\n          }));\n        });\n        function refreshSession(_x29) {\n          return _refreshSession2.apply(this, arguments);\n        }\n        return refreshSession;\n      }())\n    }, {\n      key: \"_refreshSession\",\n      value: function () {\n        var _refreshSession3 = _asyncToGenerator(function* (currentSession) {\n          var _this14 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref19 = _asyncToGenerator(function* (result) {\n                var _a;\n                if (!currentSession) {\n                  var data = result.data,\n                    _error4 = result.error;\n                  if (_error4) {\n                    throw _error4;\n                  }\n                  currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                  throw new errors_1.AuthSessionMissingError();\n                }\n                var _yield$_this14$_callR = yield _this14._callRefreshToken(currentSession.refresh_token),\n                  session = _yield$_this14$_callR.session,\n                  error = _yield$_this14$_callR.error;\n                if (error) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error: error\n                  };\n                }\n                if (!session) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error: null\n                  };\n                }\n                return {\n                  data: {\n                    user: session.user,\n                    session: session\n                  },\n                  error: null\n                };\n              });\n              return function (_x31) {\n                return _ref19.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function _refreshSession(_x30) {\n          return _refreshSession3.apply(this, arguments);\n        }\n        return _refreshSession;\n      }()\n      /**\n       * Gets the session data from a URL string\n       */\n    }, {\n      key: \"_getSessionFromURL\",\n      value: (function () {\n        var _getSessionFromURL2 = _asyncToGenerator(function* (params, callbackUrlType) {\n          try {\n            if (!(0, helpers_1.isBrowser)()) throw new errors_1.AuthImplicitGrantRedirectError('No browser detected.');\n            // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n            if (params.error || params.error_description || params.error_code) {\n              // The error class returned implies that the redirect is from an implicit grant flow\n              // but it could also be from a redirect error from a PKCE flow.\n              throw new errors_1.AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n                error: params.error || 'unspecified_error',\n                code: params.error_code || 'unspecified_code'\n              });\n            }\n            // Checks for mismatches between the flowType initialised in the client and the URL parameters\n            switch (callbackUrlType) {\n              case 'implicit':\n                if (this.flowType === 'pkce') {\n                  throw new errors_1.AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n                }\n                break;\n              case 'pkce':\n                if (this.flowType === 'implicit') {\n                  throw new errors_1.AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                }\n                break;\n              default:\n              // there's no mismatch so we continue\n            }\n            // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n            if (callbackUrlType === 'pkce') {\n              this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\n              if (!params.code) throw new errors_1.AuthPKCEGrantCodeExchangeError('No code detected.');\n              var _yield$this$_exchange = yield this._exchangeCodeForSession(params.code),\n                _data = _yield$this$_exchange.data,\n                _error5 = _yield$this$_exchange.error;\n              if (_error5) throw _error5;\n              var url = new URL(window.location.href);\n              url.searchParams.delete('code');\n              window.history.replaceState(window.history.state, '', url.toString());\n              return {\n                data: {\n                  session: _data.session,\n                  redirectType: null\n                },\n                error: null\n              };\n            }\n            var provider_token = params.provider_token,\n              provider_refresh_token = params.provider_refresh_token,\n              access_token = params.access_token,\n              refresh_token = params.refresh_token,\n              expires_in = params.expires_in,\n              expires_at = params.expires_at,\n              token_type = params.token_type;\n            if (!access_token || !expires_in || !refresh_token || !token_type) {\n              throw new errors_1.AuthImplicitGrantRedirectError('No session defined in URL');\n            }\n            var timeNow = Math.round(Date.now() / 1000);\n            var expiresIn = parseInt(expires_in);\n            var expiresAt = timeNow + expiresIn;\n            if (expires_at) {\n              expiresAt = parseInt(expires_at);\n            }\n            var actuallyExpiresIn = expiresAt - timeNow;\n            if (actuallyExpiresIn * 1000 <= constants_1.AUTO_REFRESH_TICK_DURATION_MS) {\n              console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\n            }\n            var issuedAt = expiresAt - expiresIn;\n            if (timeNow - issuedAt >= 120) {\n              console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n            } else if (timeNow - issuedAt < 0) {\n              console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\n            }\n            var _yield$this$_getUser2 = yield this._getUser(access_token),\n              data = _yield$this$_getUser2.data,\n              error = _yield$this$_getUser2.error;\n            if (error) throw error;\n            var session = {\n              provider_token: provider_token,\n              provider_refresh_token: provider_refresh_token,\n              access_token: access_token,\n              expires_in: expiresIn,\n              expires_at: expiresAt,\n              refresh_token: refresh_token,\n              token_type: token_type,\n              user: data.user\n            };\n            // Remove tokens from URL\n            window.location.hash = '';\n            this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n            return {\n              data: {\n                session: session,\n                redirectType: params.type\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  redirectType: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function _getSessionFromURL(_x32, _x33) {\n          return _getSessionFromURL2.apply(this, arguments);\n        }\n        return _getSessionFromURL;\n      }()\n      /**\n       * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n       */\n      )\n    }, {\n      key: \"_isImplicitGrantCallback\",\n      value: function _isImplicitGrantCallback(params) {\n        return Boolean(params.access_token || params.error_description);\n      }\n      /**\n       * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n       */\n    }, {\n      key: \"_isPKCECallback\",\n      value: (function () {\n        var _isPKCECallback2 = _asyncToGenerator(function* (params) {\n          var currentStorageContent = yield (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          return !!(params.code && currentStorageContent);\n        });\n        function _isPKCECallback(_x34) {\n          return _isPKCECallback2.apply(this, arguments);\n        }\n        return _isPKCECallback;\n      }()\n      /**\n       * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n       *\n       * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n       * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n       *\n       * If using `others` scope, no `SIGNED_OUT` event is fired!\n       */\n      )\n    }, {\n      key: \"signOut\",\n      value: (function () {\n        var _signOut2 = _asyncToGenerator(function* () {\n          var _this15 = this;\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n            scope: 'global'\n          };\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this15._signOut(options);\n          }));\n        });\n        function signOut() {\n          return _signOut2.apply(this, arguments);\n        }\n        return signOut;\n      }())\n    }, {\n      key: \"_signOut\",\n      value: function () {\n        var _signOut3 = _asyncToGenerator(function* () {\n          var _this16 = this;\n          var _ref21 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n              scope: 'global'\n            },\n            scope = _ref21.scope;\n          return yield this._useSession(/*#__PURE__*/function () {\n            var _ref22 = _asyncToGenerator(function* (result) {\n              var _a;\n              var data = result.data,\n                sessionError = result.error;\n              if (sessionError) {\n                return {\n                  error: sessionError\n                };\n              }\n              var accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n              if (accessToken) {\n                var _yield$_this16$admin$ = yield _this16.admin.signOut(accessToken, scope),\n                  error = _yield$_this16$admin$.error;\n                if (error) {\n                  // ignore 404s since user might not exist anymore\n                  // ignore 401s since an invalid or expired JWT should sign out the current session\n                  if (!((0, errors_1.isAuthApiError)(error) && (error.status === 404 || error.status === 401 || error.status === 403))) {\n                    return {\n                      error: error\n                    };\n                  }\n                }\n              }\n              if (scope !== 'others') {\n                yield _this16._removeSession();\n                yield (0, helpers_1.removeItemAsync)(_this16.storage, `${_this16.storageKey}-code-verifier`);\n              }\n              return {\n                error: null\n              };\n            });\n            return function (_x35) {\n              return _ref22.apply(this, arguments);\n            };\n          }());\n        });\n        function _signOut() {\n          return _signOut3.apply(this, arguments);\n        }\n        return _signOut;\n      }()\n      /**\n       * Receive a notification every time an auth event happens.\n       * @param callback A callback function to be invoked when an auth event happens.\n       */\n    }, {\n      key: \"onAuthStateChange\",\n      value: function onAuthStateChange(callback) {\n        var _this17 = this;\n        var id = (0, helpers_1.uuid)();\n        var subscription = {\n          id: id,\n          callback: callback,\n          unsubscribe: function unsubscribe() {\n            _this17._debug('#unsubscribe()', 'state change callback with id removed', id);\n            _this17.stateChangeEmitters.delete(id);\n          }\n        };\n        this._debug('#onAuthStateChange()', 'registered callback with id', id);\n        this.stateChangeEmitters.set(id, subscription);\n        _asyncToGenerator(function* () {\n          yield _this17.initializePromise;\n          yield _this17._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            _this17._emitInitialSession(id);\n          }));\n        })();\n        return {\n          data: {\n            subscription: subscription\n          }\n        };\n      }\n    }, {\n      key: \"_emitInitialSession\",\n      value: function () {\n        var _emitInitialSession2 = _asyncToGenerator(function* (id) {\n          var _this18 = this;\n          return yield this._useSession(/*#__PURE__*/function () {\n            var _ref25 = _asyncToGenerator(function* (result) {\n              var _a, _b;\n              try {\n                var session = result.data.session,\n                  error = result.error;\n                if (error) throw error;\n                yield (_a = _this18.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session);\n                _this18._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n              } catch (err) {\n                yield (_b = _this18.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null);\n                _this18._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\n                console.error(err);\n              }\n            });\n            return function (_x37) {\n              return _ref25.apply(this, arguments);\n            };\n          }());\n        });\n        function _emitInitialSession(_x36) {\n          return _emitInitialSession2.apply(this, arguments);\n        }\n        return _emitInitialSession;\n      }()\n      /**\n       * Sends a password reset request to an email address. This method supports the PKCE flow.\n       *\n       * @param email The email address of the user.\n       * @param options.redirectTo The URL to send the user to after they click the password reset link.\n       * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n       */\n    }, {\n      key: \"resetPasswordForEmail\",\n      value: (function () {\n        var _resetPasswordForEmail = _asyncToGenerator(function* (email) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          var codeChallenge = null;\n          var codeChallengeMethod = null;\n          if (this.flowType === 'pkce') {\n            ;\n            var _yield16 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey, true // isPasswordRecovery\n            );\n            var _yield17 = _slicedToArray(_yield16, 2);\n            codeChallenge = _yield17[0];\n            codeChallengeMethod = _yield17[1];\n          }\n          try {\n            return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/recover`, {\n              body: {\n                email: email,\n                code_challenge: codeChallenge,\n                code_challenge_method: codeChallengeMethod,\n                gotrue_meta_security: {\n                  captcha_token: options.captchaToken\n                }\n              },\n              headers: this.headers,\n              redirectTo: options.redirectTo\n            });\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function resetPasswordForEmail(_x38) {\n          return _resetPasswordForEmail.apply(this, arguments);\n        }\n        return resetPasswordForEmail;\n      }()\n      /**\n       * Gets all the identities linked to a user.\n       */\n      )\n    }, {\n      key: \"getUserIdentities\",\n      value: (function () {\n        var _getUserIdentities = _asyncToGenerator(function* () {\n          var _a;\n          try {\n            var _yield$this$getUser = yield this.getUser(),\n              data = _yield$this$getUser.data,\n              error = _yield$this$getUser.error;\n            if (error) throw error;\n            return {\n              data: {\n                identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : []\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function getUserIdentities() {\n          return _getUserIdentities.apply(this, arguments);\n        }\n        return getUserIdentities;\n      }()\n      /**\n       * Links an oauth identity to an existing user.\n       * This method supports the PKCE flow.\n       */\n      )\n    }, {\n      key: \"linkIdentity\",\n      value: (function () {\n        var _linkIdentity = _asyncToGenerator(function* (credentials) {\n          var _this19 = this;\n          var _a;\n          try {\n            var _yield$this$_useSessi = yield this._useSession(/*#__PURE__*/function () {\n                var _ref26 = _asyncToGenerator(function* (result) {\n                  var _a, _b, _c, _d, _e;\n                  var data = result.data,\n                    error = result.error;\n                  if (error) throw error;\n                  var url = yield _this19._getUrlForProvider(`${_this19.url}/user/identities/authorize`, credentials.provider, {\n                    redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                    scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                    queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                    skipBrowserRedirect: true\n                  });\n                  return yield (0, fetch_1._request)(_this19.fetch, 'GET', url, {\n                    headers: _this19.headers,\n                    jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined\n                  });\n                });\n                return function (_x40) {\n                  return _ref26.apply(this, arguments);\n                };\n              }()),\n              data = _yield$this$_useSessi.data,\n              error = _yield$this$_useSessi.error;\n            if (error) throw error;\n            if ((0, helpers_1.isBrowser)() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n              window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n            }\n            return {\n              data: {\n                provider: credentials.provider,\n                url: data === null || data === void 0 ? void 0 : data.url\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  provider: credentials.provider,\n                  url: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function linkIdentity(_x39) {\n          return _linkIdentity.apply(this, arguments);\n        }\n        return linkIdentity;\n      }()\n      /**\n       * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n       */\n      )\n    }, {\n      key: \"unlinkIdentity\",\n      value: (function () {\n        var _unlinkIdentity = _asyncToGenerator(function* (identity) {\n          var _this20 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref27 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var data = result.data,\n                  error = result.error;\n                if (error) {\n                  throw error;\n                }\n                return yield (0, fetch_1._request)(_this20.fetch, 'DELETE', `${_this20.url}/user/identities/${identity.identity_id}`, {\n                  headers: _this20.headers,\n                  jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined\n                });\n              });\n              return function (_x42) {\n                return _ref27.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function unlinkIdentity(_x41) {\n          return _unlinkIdentity.apply(this, arguments);\n        }\n        return unlinkIdentity;\n      }()\n      /**\n       * Generates a new JWT.\n       * @param refreshToken A valid refresh token that was returned on login.\n       */\n      )\n    }, {\n      key: \"_refreshAccessToken\",\n      value: (function () {\n        var _refreshAccessToken2 = _asyncToGenerator(function* (refreshToken) {\n          var _this21 = this;\n          var debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\n          this._debug(debugName, 'begin');\n          try {\n            var startedAt = Date.now();\n            // will attempt to refresh the token with exponential backoff\n            return yield (0, helpers_1.retryable)(/*#__PURE__*/function () {\n              var _ref28 = _asyncToGenerator(function* (attempt) {\n                if (attempt > 0) {\n                  yield (0, helpers_1.sleep)(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n                }\n                _this21._debug(debugName, 'refreshing attempt', attempt);\n                return yield (0, fetch_1._request)(_this21.fetch, 'POST', `${_this21.url}/token?grant_type=refresh_token`, {\n                  body: {\n                    refresh_token: refreshToken\n                  },\n                  headers: _this21.headers,\n                  xform: fetch_1._sessionResponse\n                });\n              });\n              return function (_x44) {\n                return _ref28.apply(this, arguments);\n              };\n            }(), function (attempt, error) {\n              var nextBackOffInterval = 200 * Math.pow(2, attempt);\n              return error && (0, errors_1.isAuthRetryableFetchError)(error) &&\n              // retryable only if the request can be sent before the backoff overflows the tick duration\n              Date.now() + nextBackOffInterval - startedAt < constants_1.AUTO_REFRESH_TICK_DURATION_MS;\n            });\n          } catch (error) {\n            this._debug(debugName, 'error', error);\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error: error\n              };\n            }\n            throw error;\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _refreshAccessToken(_x43) {\n          return _refreshAccessToken2.apply(this, arguments);\n        }\n        return _refreshAccessToken;\n      }())\n    }, {\n      key: \"_isValidSession\",\n      value: function _isValidSession(maybeSession) {\n        var isValidSession = typeof maybeSession === 'object' && maybeSession !== null && 'access_token' in maybeSession && 'refresh_token' in maybeSession && 'expires_at' in maybeSession;\n        return isValidSession;\n      }\n    }, {\n      key: \"_handleProviderSignIn\",\n      value: function () {\n        var _handleProviderSignIn2 = _asyncToGenerator(function* (provider, options) {\n          var url = yield this._getUrlForProvider(`${this.url}/authorize`, provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams\n          });\n          this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n          // try to open on the browser\n          if ((0, helpers_1.isBrowser)() && !options.skipBrowserRedirect) {\n            window.location.assign(url);\n          }\n          return {\n            data: {\n              provider: provider,\n              url: url\n            },\n            error: null\n          };\n        });\n        function _handleProviderSignIn(_x45, _x46) {\n          return _handleProviderSignIn2.apply(this, arguments);\n        }\n        return _handleProviderSignIn;\n      }()\n      /**\n       * Recovers the session from LocalStorage and refreshes the token\n       * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n       */\n    }, {\n      key: \"_recoverAndRefresh\",\n      value: (function () {\n        var _recoverAndRefresh2 = _asyncToGenerator(function* () {\n          var _a, _b;\n          var debugName = '#_recoverAndRefresh()';\n          this._debug(debugName, 'begin');\n          try {\n            var currentSession = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n            if (currentSession && this.userStorage) {\n              var maybeUser = yield (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n              if (!this.storage.isServer && Object.is(this.storage, this.userStorage) && !maybeUser) {\n                // storage and userStorage are the same storage medium, for example\n                // window.localStorage if userStorage does not have the user from\n                // storage stored, store it first thereby migrating the user object\n                // from storage -> userStorage\n                maybeUser = {\n                  user: currentSession.user\n                };\n                yield (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', maybeUser);\n              }\n              currentSession.user = (_a = maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) !== null && _a !== void 0 ? _a : (0, helpers_1.userNotAvailableProxy)();\n            } else if (currentSession && !currentSession.user) {\n              // user storage is not set, let's check if it was previously enabled so\n              // we bring back the storage as it should be\n              if (!currentSession.user) {\n                // test if userStorage was previously enabled and the storage medium was the same, to move the user back under the same key\n                var separateUser = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey + '-user');\n                if (separateUser && (separateUser === null || separateUser === void 0 ? void 0 : separateUser.user)) {\n                  currentSession.user = separateUser.user;\n                  yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n                  yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, currentSession);\n                } else {\n                  currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n                }\n              }\n            }\n            this._debug(debugName, 'session from storage', currentSession);\n            if (!this._isValidSession(currentSession)) {\n              this._debug(debugName, 'session is not valid');\n              if (currentSession !== null) {\n                yield this._removeSession();\n              }\n              return;\n            }\n            var expiresWithMargin = ((_b = currentSession.expires_at) !== null && _b !== void 0 ? _b : Infinity) * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS;\n            this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${constants_1.EXPIRY_MARGIN_MS}s`);\n            if (expiresWithMargin) {\n              if (this.autoRefreshToken && currentSession.refresh_token) {\n                var _yield$this$_callRefr3 = yield this._callRefreshToken(currentSession.refresh_token),\n                  error = _yield$this$_callRefr3.error;\n                if (error) {\n                  console.error(error);\n                  if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n                    this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n                    yield this._removeSession();\n                  }\n                }\n              }\n            } else if (currentSession.user && currentSession.user.__isUserNotAvailableProxy === true) {\n              // If we have a proxy user, try to get the real user data\n              try {\n                var _yield$this$_getUser3 = yield this._getUser(currentSession.access_token),\n                  data = _yield$this$_getUser3.data,\n                  userError = _yield$this$_getUser3.error;\n                if (!userError && (data === null || data === void 0 ? void 0 : data.user)) {\n                  currentSession.user = data.user;\n                  yield this._saveSession(currentSession);\n                  yield this._notifyAllSubscribers('SIGNED_IN', currentSession);\n                } else {\n                  this._debug(debugName, 'could not get user data, skipping SIGNED_IN notification');\n                }\n              } catch (getUserError) {\n                console.error('Error getting user data:', getUserError);\n                this._debug(debugName, 'error getting user data, skipping SIGNED_IN notification', getUserError);\n              }\n            } else {\n              // no need to persist currentSession again, as we just loaded it from\n              // local storage; persisting it again may overwrite a value saved by\n              // another client with access to the same local storage\n              yield this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            }\n          } catch (err) {\n            this._debug(debugName, 'error', err);\n            console.error(err);\n            return;\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _recoverAndRefresh() {\n          return _recoverAndRefresh2.apply(this, arguments);\n        }\n        return _recoverAndRefresh;\n      }())\n    }, {\n      key: \"_callRefreshToken\",\n      value: function () {\n        var _callRefreshToken2 = _asyncToGenerator(function* (refreshToken) {\n          var _a, _b;\n          if (!refreshToken) {\n            throw new errors_1.AuthSessionMissingError();\n          }\n          // refreshing is already in progress\n          if (this.refreshingDeferred) {\n            return this.refreshingDeferred.promise;\n          }\n          var debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\n          this._debug(debugName, 'begin');\n          try {\n            this.refreshingDeferred = new helpers_1.Deferred();\n            var _yield$this$_refreshA = yield this._refreshAccessToken(refreshToken),\n              data = _yield$this$_refreshA.data,\n              error = _yield$this$_refreshA.error;\n            if (error) throw error;\n            if (!data.session) throw new errors_1.AuthSessionMissingError();\n            yield this._saveSession(data.session);\n            yield this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n            var result = {\n              session: data.session,\n              error: null\n            };\n            this.refreshingDeferred.resolve(result);\n            return result;\n          } catch (error) {\n            this._debug(debugName, 'error', error);\n            if ((0, errors_1.isAuthError)(error)) {\n              var _result2 = {\n                session: null,\n                error: error\n              };\n              if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n                yield this._removeSession();\n              }\n              (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(_result2);\n              return _result2;\n            }\n            (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n            throw error;\n          } finally {\n            this.refreshingDeferred = null;\n            this._debug(debugName, 'end');\n          }\n        });\n        function _callRefreshToken(_x47) {\n          return _callRefreshToken2.apply(this, arguments);\n        }\n        return _callRefreshToken;\n      }()\n    }, {\n      key: \"_notifyAllSubscribers\",\n      value: function () {\n        var _notifyAllSubscribers2 = _asyncToGenerator(function* (event, session) {\n          var broadcast = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n          var debugName = `#_notifyAllSubscribers(${event})`;\n          this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\n          try {\n            if (this.broadcastChannel && broadcast) {\n              this.broadcastChannel.postMessage({\n                event: event,\n                session: session\n              });\n            }\n            var errors = [];\n            var promises = Array.from(this.stateChangeEmitters.values()).map(/*#__PURE__*/function () {\n              var _ref29 = _asyncToGenerator(function* (x) {\n                try {\n                  yield x.callback(event, session);\n                } catch (e) {\n                  errors.push(e);\n                }\n              });\n              return function (_x50) {\n                return _ref29.apply(this, arguments);\n              };\n            }());\n            yield Promise.all(promises);\n            if (errors.length > 0) {\n              for (var i = 0; i < errors.length; i += 1) {\n                console.error(errors[i]);\n              }\n              throw errors[0];\n            }\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _notifyAllSubscribers(_x48, _x49) {\n          return _notifyAllSubscribers2.apply(this, arguments);\n        }\n        return _notifyAllSubscribers;\n      }()\n      /**\n       * set currentSession and currentUser\n       * process to _startAutoRefreshToken if possible\n       */\n    }, {\n      key: \"_saveSession\",\n      value: (function () {\n        var _saveSession2 = _asyncToGenerator(function* (session) {\n          this._debug('#_saveSession()', session);\n          // _saveSession is always called whenever a new session has been acquired\n          // so we can safely suppress the warning returned by future getSession calls\n          this.suppressGetSessionWarning = true;\n          // Create a shallow copy to work with, to avoid mutating the original session object if it's used elsewhere\n          var sessionToProcess = Object.assign({}, session);\n          var userIsProxy = sessionToProcess.user && sessionToProcess.user.__isUserNotAvailableProxy === true;\n          if (this.userStorage) {\n            if (!userIsProxy && sessionToProcess.user) {\n              // If it's a real user object, save it to userStorage.\n              yield (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', {\n                user: sessionToProcess.user\n              });\n            } else if (userIsProxy) {\n              // If it's the proxy, it means user was not found in userStorage.\n              // We should ensure no stale user data for this key exists in userStorage if we were to save null,\n              // or simply not save the proxy. For now, we don't save the proxy here.\n              // If there's a need to clear userStorage if user becomes proxy, that logic would go here.\n            }\n            // Prepare the main session data for primary storage: remove the user property before cloning\n            // This is important because the original session.user might be the proxy\n            var mainSessionData = Object.assign({}, sessionToProcess);\n            delete mainSessionData.user; // Remove user (real or proxy) before cloning for main storage\n            var clonedMainSessionData = (0, helpers_2.deepClone)(mainSessionData);\n            yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedMainSessionData);\n          } else {\n            // No userStorage is configured.\n            // In this case, session.user should ideally not be a proxy.\n            // If it were, structuredClone would fail. This implies an issue elsewhere if user is a proxy here\n            var clonedSession = (0, helpers_2.deepClone)(sessionToProcess); // sessionToProcess still has its original user property\n            yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedSession);\n          }\n        });\n        function _saveSession(_x51) {\n          return _saveSession2.apply(this, arguments);\n        }\n        return _saveSession;\n      }())\n    }, {\n      key: \"_removeSession\",\n      value: function () {\n        var _removeSession2 = _asyncToGenerator(function* () {\n          this._debug('#_removeSession()');\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey);\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-code-verifier');\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n          if (this.userStorage) {\n            yield (0, helpers_1.removeItemAsync)(this.userStorage, this.storageKey + '-user');\n          }\n          yield this._notifyAllSubscribers('SIGNED_OUT', null);\n        });\n        function _removeSession() {\n          return _removeSession2.apply(this, arguments);\n        }\n        return _removeSession;\n      }()\n      /**\n       * Removes any registered visibilitychange callback.\n       *\n       * {@see #startAutoRefresh}\n       * {@see #stopAutoRefresh}\n       */\n    }, {\n      key: \"_removeVisibilityChangedCallback\",\n      value: function _removeVisibilityChangedCallback() {\n        this._debug('#_removeVisibilityChangedCallback()');\n        var callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n          if (callback && (0, helpers_1.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n            window.removeEventListener('visibilitychange', callback);\n          }\n        } catch (e) {\n          console.error('removing visibilitychange callback failed', e);\n        }\n      }\n      /**\n       * This is the private implementation of {@link #startAutoRefresh}. Use this\n       * within the library.\n       */\n    }, {\n      key: \"_startAutoRefresh\",\n      value: (function () {\n        var _startAutoRefresh2 = _asyncToGenerator(function* () {\n          var _this22 = this;\n          yield this._stopAutoRefresh();\n          this._debug('#_startAutoRefresh()');\n          var ticker = setInterval(function () {\n            return _this22._autoRefreshTokenTick();\n          }, constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n          this.autoRefreshTicker = ticker;\n          if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n            // ticker is a NodeJS Timeout object that has an `unref` method\n            // https://nodejs.org/api/timers.html#timeoutunref\n            // When auto refresh is used in NodeJS (like for testing) the\n            // `setInterval` is preventing the process from being marked as\n            // finished and tests run endlessly. This can be prevented by calling\n            // `unref()` on the returned object.\n            ticker.unref();\n            // @ts-expect-error TS has no context of Deno\n          } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n            // similar like for NodeJS, but with the Deno API\n            // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n            // @ts-expect-error TS has no context of Deno\n            Deno.unrefTimer(ticker);\n          }\n          // run the tick immediately, but in the next pass of the event loop so that\n          // #_initialize can be allowed to complete without recursively waiting on\n          // itself\n          setTimeout(/*#__PURE__*/_asyncToGenerator(function* () {\n            yield _this22.initializePromise;\n            yield _this22._autoRefreshTokenTick();\n          }), 0);\n        });\n        function _startAutoRefresh() {\n          return _startAutoRefresh2.apply(this, arguments);\n        }\n        return _startAutoRefresh;\n      }()\n      /**\n       * This is the private implementation of {@link #stopAutoRefresh}. Use this\n       * within the library.\n       */\n      )\n    }, {\n      key: \"_stopAutoRefresh\",\n      value: (function () {\n        var _stopAutoRefresh2 = _asyncToGenerator(function* () {\n          this._debug('#_stopAutoRefresh()');\n          var ticker = this.autoRefreshTicker;\n          this.autoRefreshTicker = null;\n          if (ticker) {\n            clearInterval(ticker);\n          }\n        });\n        function _stopAutoRefresh() {\n          return _stopAutoRefresh2.apply(this, arguments);\n        }\n        return _stopAutoRefresh;\n      }()\n      /**\n       * Starts an auto-refresh process in the background. The session is checked\n       * every few seconds. Close to the time of expiration a process is started to\n       * refresh the session. If refreshing fails it will be retried for as long as\n       * necessary.\n       *\n       * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n       * to call this function, it will be called for you.\n       *\n       * On browsers the refresh process works only when the tab/window is in the\n       * foreground to conserve resources as well as prevent race conditions and\n       * flooding auth with requests. If you call this method any managed\n       * visibility change callback will be removed and you must manage visibility\n       * changes on your own.\n       *\n       * On non-browser platforms the refresh process works *continuously* in the\n       * background, which may not be desirable. You should hook into your\n       * platform's foreground indication mechanism and call these methods\n       * appropriately to conserve resources.\n       *\n       * {@see #stopAutoRefresh}\n       */\n      )\n    }, {\n      key: \"startAutoRefresh\",\n      value: (function () {\n        var _startAutoRefresh3 = _asyncToGenerator(function* () {\n          this._removeVisibilityChangedCallback();\n          yield this._startAutoRefresh();\n        });\n        function startAutoRefresh() {\n          return _startAutoRefresh3.apply(this, arguments);\n        }\n        return startAutoRefresh;\n      }()\n      /**\n       * Stops an active auto refresh process running in the background (if any).\n       *\n       * If you call this method any managed visibility change callback will be\n       * removed and you must manage visibility changes on your own.\n       *\n       * See {@link #startAutoRefresh} for more details.\n       */\n      )\n    }, {\n      key: \"stopAutoRefresh\",\n      value: (function () {\n        var _stopAutoRefresh3 = _asyncToGenerator(function* () {\n          this._removeVisibilityChangedCallback();\n          yield this._stopAutoRefresh();\n        });\n        function stopAutoRefresh() {\n          return _stopAutoRefresh3.apply(this, arguments);\n        }\n        return stopAutoRefresh;\n      }()\n      /**\n       * Runs the auto refresh token tick.\n       */\n      )\n    }, {\n      key: \"_autoRefreshTokenTick\",\n      value: (function () {\n        var _autoRefreshTokenTick2 = _asyncToGenerator(function* () {\n          var _this23 = this;\n          this._debug('#_autoRefreshTokenTick()', 'begin');\n          try {\n            yield this._acquireLock(0, /*#__PURE__*/_asyncToGenerator(function* () {\n              try {\n                var now = Date.now();\n                try {\n                  return yield _this23._useSession(/*#__PURE__*/function () {\n                    var _ref32 = _asyncToGenerator(function* (result) {\n                      var session = result.data.session;\n                      if (!session || !session.refresh_token || !session.expires_at) {\n                        _this23._debug('#_autoRefreshTokenTick()', 'no session');\n                        return;\n                      }\n                      // session will expire in this many ticks (or has already expired if <= 0)\n                      var expiresInTicks = Math.floor((session.expires_at * 1000 - now) / constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n                      _this23._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${constants_1.AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${constants_1.AUTO_REFRESH_TICK_THRESHOLD} ticks`);\n                      if (expiresInTicks <= constants_1.AUTO_REFRESH_TICK_THRESHOLD) {\n                        yield _this23._callRefreshToken(session.refresh_token);\n                      }\n                    });\n                    return function (_x52) {\n                      return _ref32.apply(this, arguments);\n                    };\n                  }());\n                } catch (e) {\n                  console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n                }\n              } finally {\n                _this23._debug('#_autoRefreshTokenTick()', 'end');\n              }\n            }));\n          } catch (e) {\n            if (e.isAcquireTimeout || e instanceof locks_1.LockAcquireTimeoutError) {\n              this._debug('auto refresh token tick lock not available');\n            } else {\n              throw e;\n            }\n          }\n        });\n        function _autoRefreshTokenTick() {\n          return _autoRefreshTokenTick2.apply(this, arguments);\n        }\n        return _autoRefreshTokenTick;\n      }()\n      /**\n       * Registers callbacks on the browser / platform, which in-turn run\n       * algorithms when the browser window/tab are in foreground. On non-browser\n       * platforms it assumes always foreground.\n       */\n      )\n    }, {\n      key: \"_handleVisibilityChange\",\n      value: (function () {\n        var _handleVisibilityChange2 = _asyncToGenerator(function* () {\n          var _this24 = this;\n          this._debug('#_handleVisibilityChange()');\n          if (!(0, helpers_1.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            if (this.autoRefreshToken) {\n              // in non-browser environments the refresh token ticker runs always\n              this.startAutoRefresh();\n            }\n            return false;\n          }\n          try {\n            this.visibilityChangedCallback = /*#__PURE__*/_asyncToGenerator(function* () {\n              return yield _this24._onVisibilityChanged(false);\n            });\n            window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n            // now immediately call the visbility changed callback to setup with the\n            // current visbility state\n            yield this._onVisibilityChanged(true); // initial call\n          } catch (error) {\n            console.error('_handleVisibilityChange', error);\n          }\n        });\n        function _handleVisibilityChange() {\n          return _handleVisibilityChange2.apply(this, arguments);\n        }\n        return _handleVisibilityChange;\n      }()\n      /**\n       * Callback registered with `window.addEventListener('visibilitychange')`.\n       */\n      )\n    }, {\n      key: \"_onVisibilityChanged\",\n      value: (function () {\n        var _onVisibilityChanged2 = _asyncToGenerator(function* (calledFromInitialize) {\n          var _this25 = this;\n          var methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\n          this._debug(methodName, 'visibilityState', document.visibilityState);\n          if (document.visibilityState === 'visible') {\n            if (this.autoRefreshToken) {\n              // in browser environments the refresh token ticker runs only on focused tabs\n              // which prevents race conditions\n              this._startAutoRefresh();\n            }\n            if (!calledFromInitialize) {\n              // called when the visibility has changed, i.e. the browser\n              // transitioned from hidden -> visible so we need to see if the session\n              // should be recovered immediately... but to do that we need to acquire\n              // the lock first asynchronously\n              yield this.initializePromise;\n              yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n                if (document.visibilityState !== 'visible') {\n                  _this25._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n                  // visibility has changed while waiting for the lock, abort\n                  return;\n                }\n                // recover the session\n                yield _this25._recoverAndRefresh();\n              }));\n            }\n          } else if (document.visibilityState === 'hidden') {\n            if (this.autoRefreshToken) {\n              this._stopAutoRefresh();\n            }\n          }\n        });\n        function _onVisibilityChanged(_x53) {\n          return _onVisibilityChanged2.apply(this, arguments);\n        }\n        return _onVisibilityChanged;\n      }()\n      /**\n       * Generates the relevant login URL for a third-party provider.\n       * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n       * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n       * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n       */\n      )\n    }, {\n      key: \"_getUrlForProvider\",\n      value: (function () {\n        var _getUrlForProvider2 = _asyncToGenerator(function* (url, provider, options) {\n          var urlParams = [`provider=${encodeURIComponent(provider)}`];\n          if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n          }\n          if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n          }\n          if (this.flowType === 'pkce') {\n            var _yield18 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey),\n              _yield19 = _slicedToArray(_yield18, 2),\n              codeChallenge = _yield19[0],\n              codeChallengeMethod = _yield19[1];\n            var flowParams = new URLSearchParams({\n              code_challenge: `${encodeURIComponent(codeChallenge)}`,\n              code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`\n            });\n            urlParams.push(flowParams.toString());\n          }\n          if (options === null || options === void 0 ? void 0 : options.queryParams) {\n            var query = new URLSearchParams(options.queryParams);\n            urlParams.push(query.toString());\n          }\n          if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n            urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\n          }\n          return `${url}?${urlParams.join('&')}`;\n        });\n        function _getUrlForProvider(_x54, _x55, _x56) {\n          return _getUrlForProvider2.apply(this, arguments);\n        }\n        return _getUrlForProvider;\n      }())\n    }, {\n      key: \"_unenroll\",\n      value: function () {\n        var _unenroll2 = _asyncToGenerator(function* (params) {\n          var _this26 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref35 = _asyncToGenerator(function* (result) {\n                var _a;\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                return yield (0, fetch_1._request)(_this26.fetch, 'DELETE', `${_this26.url}/factors/${params.factorId}`, {\n                  headers: _this26.headers,\n                  jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                });\n              });\n              return function (_x58) {\n                return _ref35.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function _unenroll(_x57) {\n          return _unenroll2.apply(this, arguments);\n        }\n        return _unenroll;\n      }()\n    }, {\n      key: \"_enroll\",\n      value: function () {\n        var _enroll2 = _asyncToGenerator(function* (params) {\n          var _this27 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref36 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                var body = Object.assign({\n                  friendly_name: params.friendlyName,\n                  factor_type: params.factorType\n                }, params.factorType === 'phone' ? {\n                  phone: params.phone\n                } : {\n                  issuer: params.issuer\n                });\n                var _yield20 = yield (0, fetch_1._request)(_this27.fetch, 'POST', `${_this27.url}/factors`, {\n                    body: body,\n                    headers: _this27.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                  }),\n                  data = _yield20.data,\n                  error = _yield20.error;\n                if (error) {\n                  return {\n                    data: null,\n                    error: error\n                  };\n                }\n                if (params.factorType === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\n                  data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return {\n                  data: data,\n                  error: null\n                };\n              });\n              return function (_x60) {\n                return _ref36.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function _enroll(_x59) {\n          return _enroll2.apply(this, arguments);\n        }\n        return _enroll;\n      }()\n      /**\n       * {@see GoTrueMFAApi#verify}\n       */\n    }, {\n      key: \"_verify\",\n      value: (function () {\n        var _verify2 = _asyncToGenerator(function* (params) {\n          var _this28 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            try {\n              return yield _this28._useSession(/*#__PURE__*/function () {\n                var _ref38 = _asyncToGenerator(function* (result) {\n                  var _a;\n                  var sessionData = result.data,\n                    sessionError = result.error;\n                  if (sessionError) {\n                    return {\n                      data: null,\n                      error: sessionError\n                    };\n                  }\n                  var _yield21 = yield (0, fetch_1._request)(_this28.fetch, 'POST', `${_this28.url}/factors/${params.factorId}/verify`, {\n                      body: {\n                        code: params.code,\n                        challenge_id: params.challengeId\n                      },\n                      headers: _this28.headers,\n                      jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                    }),\n                    data = _yield21.data,\n                    error = _yield21.error;\n                  if (error) {\n                    return {\n                      data: null,\n                      error: error\n                    };\n                  }\n                  yield _this28._saveSession(Object.assign({\n                    expires_at: Math.round(Date.now() / 1000) + data.expires_in\n                  }, data));\n                  yield _this28._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                  return {\n                    data: data,\n                    error: error\n                  };\n                });\n                return function (_x62) {\n                  return _ref38.apply(this, arguments);\n                };\n              }());\n            } catch (error) {\n              if ((0, errors_1.isAuthError)(error)) {\n                return {\n                  data: null,\n                  error: error\n                };\n              }\n              throw error;\n            }\n          }));\n        });\n        function _verify(_x61) {\n          return _verify2.apply(this, arguments);\n        }\n        return _verify;\n      }()\n      /**\n       * {@see GoTrueMFAApi#challenge}\n       */\n      )\n    }, {\n      key: \"_challenge\",\n      value: (function () {\n        var _challenge2 = _asyncToGenerator(function* (params) {\n          var _this29 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            try {\n              return yield _this29._useSession(/*#__PURE__*/function () {\n                var _ref40 = _asyncToGenerator(function* (result) {\n                  var _a;\n                  var sessionData = result.data,\n                    sessionError = result.error;\n                  if (sessionError) {\n                    return {\n                      data: null,\n                      error: sessionError\n                    };\n                  }\n                  return yield (0, fetch_1._request)(_this29.fetch, 'POST', `${_this29.url}/factors/${params.factorId}/challenge`, {\n                    body: {\n                      channel: params.channel\n                    },\n                    headers: _this29.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                  });\n                });\n                return function (_x64) {\n                  return _ref40.apply(this, arguments);\n                };\n              }());\n            } catch (error) {\n              if ((0, errors_1.isAuthError)(error)) {\n                return {\n                  data: null,\n                  error: error\n                };\n              }\n              throw error;\n            }\n          }));\n        });\n        function _challenge(_x63) {\n          return _challenge2.apply(this, arguments);\n        }\n        return _challenge;\n      }()\n      /**\n       * {@see GoTrueMFAApi#challengeAndVerify}\n       */\n      )\n    }, {\n      key: \"_challengeAndVerify\",\n      value: (function () {\n        var _challengeAndVerify2 = _asyncToGenerator(function* (params) {\n          // both _challenge and _verify independently acquire the lock, so no need\n          // to acquire it here\n          var _yield$this$_challeng = yield this._challenge({\n              factorId: params.factorId\n            }),\n            challengeData = _yield$this$_challeng.data,\n            challengeError = _yield$this$_challeng.error;\n          if (challengeError) {\n            return {\n              data: null,\n              error: challengeError\n            };\n          }\n          return yield this._verify({\n            factorId: params.factorId,\n            challengeId: challengeData.id,\n            code: params.code\n          });\n        });\n        function _challengeAndVerify(_x65) {\n          return _challengeAndVerify2.apply(this, arguments);\n        }\n        return _challengeAndVerify;\n      }()\n      /**\n       * {@see GoTrueMFAApi#listFactors}\n       */\n      )\n    }, {\n      key: \"_listFactors\",\n      value: (function () {\n        var _listFactors2 = _asyncToGenerator(function* () {\n          // use #getUser instead of #_getUser as the former acquires a lock\n          var _yield$this$getUser2 = yield this.getUser(),\n            user = _yield$this$getUser2.data.user,\n            userError = _yield$this$getUser2.error;\n          if (userError) {\n            return {\n              data: null,\n              error: userError\n            };\n          }\n          var factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n          var totp = factors.filter(function (factor) {\n            return factor.factor_type === 'totp' && factor.status === 'verified';\n          });\n          var phone = factors.filter(function (factor) {\n            return factor.factor_type === 'phone' && factor.status === 'verified';\n          });\n          return {\n            data: {\n              all: factors,\n              totp: totp,\n              phone: phone\n            },\n            error: null\n          };\n        });\n        function _listFactors() {\n          return _listFactors2.apply(this, arguments);\n        }\n        return _listFactors;\n      }()\n      /**\n       * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n       */\n      )\n    }, {\n      key: \"_getAuthenticatorAssuranceLevel\",\n      value: (function () {\n        var _getAuthenticatorAssuranceLevel2 = _asyncToGenerator(function* () {\n          var _this30 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this30._useSession(/*#__PURE__*/function () {\n              var _ref42 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var session = result.data.session,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                if (!session) {\n                  return {\n                    data: {\n                      currentLevel: null,\n                      nextLevel: null,\n                      currentAuthenticationMethods: []\n                    },\n                    error: null\n                  };\n                }\n                var _ref43 = (0, helpers_1.decodeJWT)(session.access_token),\n                  payload = _ref43.payload;\n                var currentLevel = null;\n                if (payload.aal) {\n                  currentLevel = payload.aal;\n                }\n                var nextLevel = currentLevel;\n                var verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter(function (factor) {\n                  return factor.status === 'verified';\n                })) !== null && _b !== void 0 ? _b : [];\n                if (verifiedFactors.length > 0) {\n                  nextLevel = 'aal2';\n                }\n                var currentAuthenticationMethods = payload.amr || [];\n                return {\n                  data: {\n                    currentLevel: currentLevel,\n                    nextLevel: nextLevel,\n                    currentAuthenticationMethods: currentAuthenticationMethods\n                  },\n                  error: null\n                };\n              });\n              return function (_x66) {\n                return _ref42.apply(this, arguments);\n              };\n            }());\n          }));\n        });\n        function _getAuthenticatorAssuranceLevel() {\n          return _getAuthenticatorAssuranceLevel2.apply(this, arguments);\n        }\n        return _getAuthenticatorAssuranceLevel;\n      }())\n    }, {\n      key: \"fetchJwk\",\n      value: function () {\n        var _fetchJwk = _asyncToGenerator(function* (kid) {\n          var jwks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n            keys: []\n          };\n          // try fetching from the supplied jwks\n          var jwk = jwks.keys.find(function (key) {\n            return key.kid === kid;\n          });\n          if (jwk) {\n            return jwk;\n          }\n          var now = Date.now();\n          // try fetching from cache\n          jwk = this.jwks.keys.find(function (key) {\n            return key.kid === kid;\n          });\n          // jwk exists and jwks isn't stale\n          if (jwk && this.jwks_cached_at + constants_1.JWKS_TTL > now) {\n            return jwk;\n          }\n          // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n          var _yield22 = yield (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\n              headers: this.headers\n            }),\n            data = _yield22.data,\n            error = _yield22.error;\n          if (error) {\n            throw error;\n          }\n          if (!data.keys || data.keys.length === 0) {\n            return null;\n          }\n          this.jwks = data;\n          this.jwks_cached_at = now;\n          // Find the signing key\n          jwk = data.keys.find(function (key) {\n            return key.kid === kid;\n          });\n          if (!jwk) {\n            return null;\n          }\n          return jwk;\n        });\n        function fetchJwk(_x67) {\n          return _fetchJwk.apply(this, arguments);\n        }\n        return fetchJwk;\n      }()\n      /**\n       * Extracts the JWT claims present in the access token by first verifying the\n       * JWT against the server's JSON Web Key Set endpoint\n       * `/.well-known/jwks.json` which is often cached, resulting in significantly\n       * faster responses. Prefer this method over {@link #getUser} which always\n       * sends a request to the Auth server for each JWT.\n       *\n       * If the project is not using an asymmetric JWT signing key (like ECC or\n       * RSA) it always sends a request to the Auth server (similar to {@link\n       * #getUser}) to verify the JWT.\n       *\n       * @param jwt An optional specific JWT you wish to verify, not the one you\n       *            can obtain from {@link #getSession}.\n       * @param options Various additional options that allow you to customize the\n       *                behavior of this method.\n       */\n    }, {\n      key: \"getClaims\",\n      value: (function () {\n        var _getClaims = _asyncToGenerator(function* (jwt) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          try {\n            var token = jwt;\n            if (!token) {\n              var _yield$this$getSessio = yield this.getSession(),\n                data = _yield$this$getSessio.data,\n                error = _yield$this$getSessio.error;\n              if (error || !data.session) {\n                return {\n                  data: null,\n                  error: error\n                };\n              }\n              token = data.session.access_token;\n            }\n            var _ref44 = (0, helpers_1.decodeJWT)(token),\n              header = _ref44.header,\n              payload = _ref44.payload,\n              signature = _ref44.signature,\n              _ref44$raw = _ref44.raw,\n              rawHeader = _ref44$raw.header,\n              rawPayload = _ref44$raw.payload;\n            if (!(options === null || options === void 0 ? void 0 : options.allowExpired)) {\n              // Reject expired JWTs should only happen if jwt argument was passed\n              (0, helpers_1.validateExp)(payload.exp);\n            }\n            var signingKey = !header.alg || header.alg.startsWith('HS') || !header.kid || !('crypto' in globalThis && 'subtle' in globalThis.crypto) ? null : yield this.fetchJwk(header.kid, (options === null || options === void 0 ? void 0 : options.keys) ? {\n              keys: options.keys\n            } : options === null || options === void 0 ? void 0 : options.jwks);\n            // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n            if (!signingKey) {\n              var _yield$this$getUser3 = yield this.getUser(token),\n                _error6 = _yield$this$getUser3.error;\n              if (_error6) {\n                throw _error6;\n              }\n              // getUser succeeds so the claims in the JWT can be trusted\n              return {\n                data: {\n                  claims: payload,\n                  header: header,\n                  signature: signature\n                },\n                error: null\n              };\n            }\n            var algorithm = (0, helpers_1.getAlgorithm)(header.alg);\n            // Convert JWK to CryptoKey\n            var publicKey = yield crypto.subtle.importKey('jwk', signingKey, algorithm, true, ['verify']);\n            // Verify the signature\n            var isValid = yield crypto.subtle.verify(algorithm, publicKey, signature, (0, base64url_1.stringToUint8Array)(`${rawHeader}.${rawPayload}`));\n            if (!isValid) {\n              throw new errors_1.AuthInvalidJwtError('Invalid JWT signature');\n            }\n            // If verification succeeds, decode and return claims\n            return {\n              data: {\n                claims: payload,\n                header: header,\n                signature: signature\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error: error\n              };\n            }\n            throw error;\n          }\n        });\n        function getClaims(_x68) {\n          return _getClaims.apply(this, arguments);\n        }\n        return getClaims;\n      }())\n    }]);\n  }();\n  exports.default = GoTrueClient;\n  GoTrueClient.nextInstanceID = 0;\n});","lineCount":3542,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_toConsumableArray"],[4,24,1,13],[4,27,1,13,"require"],[4,34,1,13],[4,35,1,13,"_dependencyMap"],[4,49,1,13],[5,2,1,13],[5,6,1,13,"_slicedToArray"],[5,20,1,13],[5,23,1,13,"require"],[5,30,1,13],[5,31,1,13,"_dependencyMap"],[5,45,1,13],[6,2,1,13],[6,6,1,13,"_classCallCheck"],[6,21,1,13],[6,24,1,13,"require"],[6,31,1,13],[6,32,1,13,"_dependencyMap"],[6,46,1,13],[7,2,1,13],[7,6,1,13,"_createClass"],[7,18,1,13],[7,21,1,13,"require"],[7,28,1,13],[7,29,1,13,"_dependencyMap"],[7,43,1,13],[8,2,1,13],[8,6,1,13,"_asyncToGenerator"],[8,23,1,13],[8,26,1,13,"require"],[8,33,1,13],[8,34,1,13,"_dependencyMap"],[8,48,1,13],[9,2,2,0],[9,6,2,4,"__importDefault"],[9,21,2,19],[9,24,2,23],[9,28,2,27],[9,32,2,31],[9,36,2,35],[9,37,2,36,"__importDefault"],[9,52,2,51],[9,56,2,56],[9,66,2,66,"mod"],[9,69,2,69],[9,71,2,71],[10,4,3,4],[10,11,3,12,"mod"],[10,14,3,15],[10,18,3,19,"mod"],[10,21,3,22],[10,22,3,23,"__esModule"],[10,32,3,33],[10,35,3,37,"mod"],[10,38,3,40],[10,41,3,43],[11,6,3,45],[11,15,3,54],[11,17,3,56,"mod"],[12,4,3,60],[12,5,3,61],[13,2,4,0],[13,3,4,1],[14,2,5,0,"Object"],[14,8,5,6],[14,9,5,7,"defineProperty"],[14,23,5,21],[14,24,5,22,"exports"],[14,31,5,29],[14,33,5,31],[14,45,5,43],[14,47,5,45],[15,4,5,47,"value"],[15,9,5,52],[15,11,5,54],[16,2,5,59],[16,3,5,60],[16,4,5,61],[17,2,6,0],[17,6,6,6,"GoTrueAdminApi_1"],[17,22,6,22],[17,25,6,25,"__importDefault"],[17,40,6,40],[17,41,6,41,"require"],[17,48,6,48],[17,49,6,48,"_dependencyMap"],[17,63,6,48],[17,86,6,67],[17,87,6,68],[17,88,6,69],[18,2,7,0],[18,6,7,6,"constants_1"],[18,17,7,17],[18,20,7,20,"require"],[18,27,7,27],[18,28,7,27,"_dependencyMap"],[18,42,7,27],[18,64,7,45],[18,65,7,46],[19,2,8,0],[19,6,8,6,"errors_1"],[19,14,8,14],[19,17,8,17,"require"],[19,24,8,24],[19,25,8,24,"_dependencyMap"],[19,39,8,24],[19,58,8,39],[19,59,8,40],[20,2,9,0],[20,6,9,6,"fetch_1"],[20,13,9,13],[20,16,9,16,"require"],[20,23,9,23],[20,24,9,23,"_dependencyMap"],[20,38,9,23],[20,56,9,37],[20,57,9,38],[21,2,10,0],[21,6,10,6,"helpers_1"],[21,15,10,15],[21,18,10,18,"require"],[21,25,10,25],[21,26,10,25,"_dependencyMap"],[21,40,10,25],[21,60,10,41],[21,61,10,42],[22,2,11,0],[22,6,11,6,"local_storage_1"],[22,21,11,21],[22,24,11,24,"require"],[22,31,11,31],[22,32,11,31,"_dependencyMap"],[22,46,11,31],[22,73,11,53],[22,74,11,54],[23,2,12,0],[23,6,12,6,"polyfills_1"],[23,17,12,17],[23,20,12,20,"require"],[23,27,12,27],[23,28,12,27,"_dependencyMap"],[23,42,12,27],[23,65,12,45],[23,66,12,46],[24,2,13,0],[24,6,13,6,"version_1"],[24,15,13,15],[24,18,13,18,"require"],[24,25,13,25],[24,26,13,25,"_dependencyMap"],[24,40,13,25],[24,61,13,41],[24,62,13,42],[25,2,14,0],[25,6,14,6,"locks_1"],[25,13,14,13],[25,16,14,16,"require"],[25,23,14,23],[25,24,14,23,"_dependencyMap"],[25,38,14,23],[25,57,14,37],[25,58,14,38],[26,2,15,0],[26,6,15,6,"base64url_1"],[26,17,15,17],[26,20,15,20,"require"],[26,27,15,27],[26,28,15,27,"_dependencyMap"],[26,42,15,27],[26,65,15,45],[26,66,15,46],[27,2,16,0],[27,6,16,6,"helpers_2"],[27,15,16,15],[27,18,16,18,"require"],[27,25,16,25],[27,26,16,25,"_dependencyMap"],[27,40,16,25],[27,60,16,41],[27,61,16,42],[28,2,17,0],[28,3,17,1],[28,4,17,2],[28,6,17,4,"polyfills_1"],[28,17,17,15],[28,18,17,16,"polyfillGlobalThis"],[28,36,17,34],[28,38,17,36],[28,39,17,37],[28,40,17,38],[28,41,17,39],[29,2,18,0],[29,6,18,6,"DEFAULT_OPTIONS"],[29,21,18,21],[29,24,18,24],[30,4,19,4,"url"],[30,7,19,7],[30,9,19,9,"constants_1"],[30,20,19,20],[30,21,19,21,"GOTRUE_URL"],[30,31,19,31],[31,4,20,4,"storageKey"],[31,14,20,14],[31,16,20,16,"constants_1"],[31,27,20,27],[31,28,20,28,"STORAGE_KEY"],[31,39,20,39],[32,4,21,4,"autoRefreshToken"],[32,20,21,20],[32,22,21,22],[32,26,21,26],[33,4,22,4,"persistSession"],[33,18,22,18],[33,20,22,20],[33,24,22,24],[34,4,23,4,"detectSessionInUrl"],[34,22,23,22],[34,24,23,24],[34,28,23,28],[35,4,24,4,"headers"],[35,11,24,11],[35,13,24,13,"constants_1"],[35,24,24,24],[35,25,24,25,"DEFAULT_HEADERS"],[35,40,24,40],[36,4,25,4,"flowType"],[36,12,25,12],[36,14,25,14],[36,24,25,24],[37,4,26,4,"debug"],[37,9,26,9],[37,11,26,11],[37,16,26,16],[38,4,27,4,"hasCustomAuthorizationHeader"],[38,32,27,32],[38,34,27,34],[39,2,28,0],[39,3,28,1],[40,2,28,2],[40,11,29,15,"lockNoOp"],[40,19,29,23,"lockNoOp"],[40,20,29,23,"_x"],[40,22,29,23],[40,24,29,23,"_x2"],[40,27,29,23],[40,29,29,23,"_x3"],[40,32,29,23],[41,4,29,23],[41,11,29,23,"_lockNoOp"],[41,20,29,23],[41,21,29,23,"apply"],[41,26,29,23],[41,33,29,23,"arguments"],[41,42,29,23],[42,2,29,23],[43,2,32,0],[44,0,33,0],[45,0,34,0],[46,0,35,0],[47,0,36,0],[48,0,37,0],[49,0,38,0],[50,0,39,0],[51,2,32,0],[51,11,32,0,"_lockNoOp"],[51,21,32,0],[52,4,32,0,"_lockNoOp"],[52,13,32,0],[52,16,32,0,"_asyncToGenerator"],[52,33,32,0],[52,34,29,0],[52,45,29,24,"name"],[52,49,29,28],[52,51,29,30,"acquireTimeout"],[52,65,29,44],[52,67,29,46,"fn"],[52,69,29,48],[52,71,29,50],[53,6,30,4],[53,19,30,17,"fn"],[53,21,30,19],[53,22,30,20],[53,23,30,21],[54,4,31,0],[54,5,31,1],[55,4,31,1],[55,11,31,1,"_lockNoOp"],[55,20,31,1],[55,21,31,1,"apply"],[55,26,31,1],[55,33,31,1,"arguments"],[55,42,31,1],[56,2,31,1],[57,2,40,0],[57,6,40,6,"GLOBAL_JWKS"],[57,17,40,17],[57,20,40,20],[57,21,40,21],[57,22,40,22],[58,2,40,23],[58,6,41,6,"GoTrueClient"],[58,18,41,18],[59,4,42,4],[60,0,43,0],[61,0,44,0],[62,4,45,4],[62,13,45,4,"GoTrueClient"],[62,26,45,16,"options"],[62,33,45,23],[62,35,45,25],[63,6,45,25],[63,10,45,25,"_this"],[63,15,45,25],[64,6,45,25,"_classCallCheck"],[64,21,45,25],[64,28,45,25,"GoTrueClient"],[64,40,45,25],[65,6,46,8],[65,10,46,12,"_a"],[65,12,46,14],[65,14,46,16,"_b"],[65,16,46,18],[66,6,47,8],[67,0,48,0],[68,0,49,0],[69,6,50,8],[69,10,50,12],[69,11,50,13,"userStorage"],[69,22,50,24],[69,25,50,27],[69,29,50,31],[70,6,51,8],[70,10,51,12],[70,11,51,13,"memoryStorage"],[70,24,51,26],[70,27,51,29],[70,31,51,33],[71,6,52,8],[71,10,52,12],[71,11,52,13,"stateChangeEmitters"],[71,30,52,32],[71,33,52,35],[71,37,52,39,"Map"],[71,40,52,42],[71,41,52,43],[71,42,52,44],[72,6,53,8],[72,10,53,12],[72,11,53,13,"autoRefreshTicker"],[72,28,53,30],[72,31,53,33],[72,35,53,37],[73,6,54,8],[73,10,54,12],[73,11,54,13,"visibilityChangedCallback"],[73,36,54,38],[73,39,54,41],[73,43,54,45],[74,6,55,8],[74,10,55,12],[74,11,55,13,"refreshingDeferred"],[74,29,55,31],[74,32,55,34],[74,36,55,38],[75,6,56,8],[76,0,57,0],[77,0,58,0],[78,0,59,0],[79,0,60,0],[80,0,61,0],[81,6,62,8],[81,10,62,12],[81,11,62,13,"initializePromise"],[81,28,62,30],[81,31,62,33],[81,35,62,37],[82,6,63,8],[82,10,63,12],[82,11,63,13,"detectSessionInUrl"],[82,29,63,31],[82,32,63,34],[82,36,63,38],[83,6,64,8],[83,10,64,12],[83,11,64,13,"hasCustomAuthorizationHeader"],[83,39,64,41],[83,42,64,44],[83,47,64,49],[84,6,65,8],[84,10,65,12],[84,11,65,13,"suppressGetSessionWarning"],[84,36,65,38],[84,39,65,41],[84,44,65,46],[85,6,66,8],[85,10,66,12],[85,11,66,13,"lockAcquired"],[85,23,66,25],[85,26,66,28],[85,31,66,33],[86,6,67,8],[86,10,67,12],[86,11,67,13,"pendingInLock"],[86,24,67,26],[86,27,67,29],[86,29,67,31],[87,6,68,8],[88,0,69,0],[89,0,70,0],[90,6,71,8],[90,10,71,12],[90,11,71,13,"broadcastChannel"],[90,27,71,29],[90,30,71,32],[90,34,71,36],[91,6,72,8],[91,10,72,12],[91,11,72,13,"logger"],[91,17,72,19],[91,20,72,22,"console"],[91,27,72,29],[91,28,72,30,"log"],[91,31,72,33],[92,6,73,8],[92,10,73,12],[92,11,73,13,"instanceID"],[92,21,73,23],[92,24,73,26,"GoTrueClient"],[92,36,73,38],[92,37,73,39,"nextInstanceID"],[92,51,73,53],[93,6,74,8,"GoTrueClient"],[93,18,74,20],[93,19,74,21,"nextInstanceID"],[93,33,74,35],[93,37,74,39],[93,38,74,40],[94,6,75,8],[94,10,75,12],[94,14,75,16],[94,15,75,17,"instanceID"],[94,25,75,27],[94,28,75,30],[94,29,75,31],[94,33,75,35],[94,34,75,36],[94,35,75,37],[94,37,75,39,"helpers_1"],[94,46,75,48],[94,47,75,49,"isBrowser"],[94,56,75,58],[94,58,75,60],[94,59,75,61],[94,61,75,63],[95,8,76,12,"console"],[95,15,76,19],[95,16,76,20,"warn"],[95,20,76,24],[95,21,76,25],[95,227,76,231],[95,228,76,232],[96,6,77,8],[97,6,78,8],[97,10,78,14,"settings"],[97,18,78,22],[97,21,78,25,"Object"],[97,27,78,31],[97,28,78,32,"assign"],[97,34,78,38],[97,35,78,39,"Object"],[97,41,78,45],[97,42,78,46,"assign"],[97,48,78,52],[97,49,78,53],[97,50,78,54],[97,51,78,55],[97,53,78,57,"DEFAULT_OPTIONS"],[97,68,78,72],[97,69,78,73],[97,71,78,75,"options"],[97,78,78,82],[97,79,78,83],[98,6,79,8],[98,10,79,12],[98,11,79,13,"logDebugMessages"],[98,27,79,29],[98,30,79,32],[98,31,79,33],[98,32,79,34,"settings"],[98,40,79,42],[98,41,79,43,"debug"],[98,46,79,48],[99,6,80,8],[99,10,80,12],[99,17,80,19,"settings"],[99,25,80,27],[99,26,80,28,"debug"],[99,31,80,33],[99,36,80,38],[99,46,80,48],[99,48,80,50],[100,8,81,12],[100,12,81,16],[100,13,81,17,"logger"],[100,19,81,23],[100,22,81,26,"settings"],[100,30,81,34],[100,31,81,35,"debug"],[100,36,81,40],[101,6,82,8],[102,6,83,8],[102,10,83,12],[102,11,83,13,"persistSession"],[102,25,83,27],[102,28,83,30,"settings"],[102,36,83,38],[102,37,83,39,"persistSession"],[102,51,83,53],[103,6,84,8],[103,10,84,12],[103,11,84,13,"storageKey"],[103,21,84,23],[103,24,84,26,"settings"],[103,32,84,34],[103,33,84,35,"storageKey"],[103,43,84,45],[104,6,85,8],[104,10,85,12],[104,11,85,13,"autoRefreshToken"],[104,27,85,29],[104,30,85,32,"settings"],[104,38,85,40],[104,39,85,41,"autoRefreshToken"],[104,55,85,57],[105,6,86,8],[105,10,86,12],[105,11,86,13,"admin"],[105,16,86,18],[105,19,86,21],[105,23,86,25,"GoTrueAdminApi_1"],[105,39,86,41],[105,40,86,42,"default"],[105,47,86,49],[105,48,86,50],[106,8,87,12,"url"],[106,11,87,15],[106,13,87,17,"settings"],[106,21,87,25],[106,22,87,26,"url"],[106,25,87,29],[107,8,88,12,"headers"],[107,15,88,19],[107,17,88,21,"settings"],[107,25,88,29],[107,26,88,30,"headers"],[107,33,88,37],[108,8,89,12,"fetch"],[108,13,89,17],[108,15,89,19,"settings"],[108,23,89,27],[108,24,89,28,"fetch"],[109,6,90,8],[109,7,90,9],[109,8,90,10],[110,6,91,8],[110,10,91,12],[110,11,91,13,"url"],[110,14,91,16],[110,17,91,19,"settings"],[110,25,91,27],[110,26,91,28,"url"],[110,29,91,31],[111,6,92,8],[111,10,92,12],[111,11,92,13,"headers"],[111,18,92,20],[111,21,92,23,"settings"],[111,29,92,31],[111,30,92,32,"headers"],[111,37,92,39],[112,6,93,8],[112,10,93,12],[112,11,93,13,"fetch"],[112,16,93,18],[112,19,93,21],[112,20,93,22],[112,21,93,23],[112,23,93,25,"helpers_1"],[112,32,93,34],[112,33,93,35,"resolveFetch"],[112,45,93,47],[112,47,93,49,"settings"],[112,55,93,57],[112,56,93,58,"fetch"],[112,61,93,63],[112,62,93,64],[113,6,94,8],[113,10,94,12],[113,11,94,13,"lock"],[113,15,94,17],[113,18,94,20,"settings"],[113,26,94,28],[113,27,94,29,"lock"],[113,31,94,33],[113,35,94,37,"lockNoOp"],[113,43,94,45],[114,6,95,8],[114,10,95,12],[114,11,95,13,"detectSessionInUrl"],[114,29,95,31],[114,32,95,34,"settings"],[114,40,95,42],[114,41,95,43,"detectSessionInUrl"],[114,59,95,61],[115,6,96,8],[115,10,96,12],[115,11,96,13,"flowType"],[115,19,96,21],[115,22,96,24,"settings"],[115,30,96,32],[115,31,96,33,"flowType"],[115,39,96,41],[116,6,97,8],[116,10,97,12],[116,11,97,13,"hasCustomAuthorizationHeader"],[116,39,97,41],[116,42,97,44,"settings"],[116,50,97,52],[116,51,97,53,"hasCustomAuthorizationHeader"],[116,79,97,81],[117,6,98,8],[117,10,98,12,"settings"],[117,18,98,20],[117,19,98,21,"lock"],[117,23,98,25],[117,25,98,27],[118,8,99,12],[118,12,99,16],[118,13,99,17,"lock"],[118,17,99,21],[118,20,99,24,"settings"],[118,28,99,32],[118,29,99,33,"lock"],[118,33,99,37],[119,6,100,8],[119,7,100,9],[119,13,101,13],[119,17,101,17],[119,18,101,18],[119,19,101,19],[119,21,101,21,"helpers_1"],[119,30,101,30],[119,31,101,31,"isBrowser"],[119,40,101,40],[119,42,101,42],[119,43,101,43],[119,48,101,48],[119,49,101,49,"_a"],[119,51,101,51],[119,54,101,54,"globalThis"],[119,64,101,64],[119,69,101,69],[119,73,101,73],[119,77,101,77,"globalThis"],[119,87,101,87],[119,92,101,92],[119,97,101,97],[119,98,101,98],[119,101,101,101],[119,106,101,106],[119,107,101,107],[119,110,101,110,"globalThis"],[119,120,101,120],[119,121,101,121,"navigator"],[119,130,101,130],[119,136,101,136],[119,140,101,140],[119,144,101,144,"_a"],[119,146,101,146],[119,151,101,151],[119,156,101,156],[119,157,101,157],[119,160,101,160],[119,165,101,165],[119,166,101,166],[119,169,101,169,"_a"],[119,171,101,171],[119,172,101,172,"locks"],[119,177,101,177],[119,178,101,178],[119,180,101,180],[120,8,102,12],[120,12,102,16],[120,13,102,17,"lock"],[120,17,102,21],[120,20,102,24,"locks_1"],[120,27,102,31],[120,28,102,32,"navigatorLock"],[120,41,102,45],[121,6,103,8],[121,7,103,9],[121,13,104,13],[122,8,105,12],[122,12,105,16],[122,13,105,17,"lock"],[122,17,105,21],[122,20,105,24,"lockNoOp"],[122,28,105,32],[123,6,106,8],[124,6,107,8],[124,10,107,12],[124,11,107,13],[124,15,107,17],[124,16,107,18,"jwks"],[124,20,107,22],[124,22,107,24],[125,8,108,12],[125,12,108,16],[125,13,108,17,"jwks"],[125,17,108,21],[125,20,108,24],[126,10,108,26,"keys"],[126,14,108,30],[126,16,108,32],[127,8,108,35],[127,9,108,36],[128,8,109,12],[128,12,109,16],[128,13,109,17,"jwks_cached_at"],[128,27,109,31],[128,30,109,34,"Number"],[128,36,109,40],[128,37,109,41,"MIN_SAFE_INTEGER"],[128,53,109,57],[129,6,110,8],[130,6,111,8],[130,10,111,12],[130,11,111,13,"mfa"],[130,14,111,16],[130,17,111,19],[131,8,112,12,"verify"],[131,14,112,18],[131,16,112,20],[131,20,112,24],[131,21,112,25,"_verify"],[131,28,112,32],[131,29,112,33,"bind"],[131,33,112,37],[131,34,112,38],[131,38,112,42],[131,39,112,43],[132,8,113,12,"enroll"],[132,14,113,18],[132,16,113,20],[132,20,113,24],[132,21,113,25,"_enroll"],[132,28,113,32],[132,29,113,33,"bind"],[132,33,113,37],[132,34,113,38],[132,38,113,42],[132,39,113,43],[133,8,114,12,"unenroll"],[133,16,114,20],[133,18,114,22],[133,22,114,26],[133,23,114,27,"_unenroll"],[133,32,114,36],[133,33,114,37,"bind"],[133,37,114,41],[133,38,114,42],[133,42,114,46],[133,43,114,47],[134,8,115,12,"challenge"],[134,17,115,21],[134,19,115,23],[134,23,115,27],[134,24,115,28,"_challenge"],[134,34,115,38],[134,35,115,39,"bind"],[134,39,115,43],[134,40,115,44],[134,44,115,48],[134,45,115,49],[135,8,116,12,"listFactors"],[135,19,116,23],[135,21,116,25],[135,25,116,29],[135,26,116,30,"_listFactors"],[135,38,116,42],[135,39,116,43,"bind"],[135,43,116,47],[135,44,116,48],[135,48,116,52],[135,49,116,53],[136,8,117,12,"challengeAndVerify"],[136,26,117,30],[136,28,117,32],[136,32,117,36],[136,33,117,37,"_challengeAndVerify"],[136,52,117,56],[136,53,117,57,"bind"],[136,57,117,61],[136,58,117,62],[136,62,117,66],[136,63,117,67],[137,8,118,12,"getAuthenticatorAssuranceLevel"],[137,38,118,42],[137,40,118,44],[137,44,118,48],[137,45,118,49,"_getAuthenticatorAssuranceLevel"],[137,76,118,80],[137,77,118,81,"bind"],[137,81,118,85],[137,82,118,86],[137,86,118,90],[138,6,119,8],[138,7,119,9],[139,6,120,8],[139,10,120,12],[139,14,120,16],[139,15,120,17,"persistSession"],[139,29,120,31],[139,31,120,33],[140,8,121,12],[140,12,121,16,"settings"],[140,20,121,24],[140,21,121,25,"storage"],[140,28,121,32],[140,30,121,34],[141,10,122,16],[141,14,122,20],[141,15,122,21,"storage"],[141,22,122,28],[141,25,122,31,"settings"],[141,33,122,39],[141,34,122,40,"storage"],[141,41,122,47],[142,8,123,12],[142,9,123,13],[142,15,124,17],[143,10,125,16],[143,14,125,20],[143,15,125,21],[143,16,125,22],[143,18,125,24,"helpers_1"],[143,27,125,33],[143,28,125,34,"supportsLocalStorage"],[143,48,125,54],[143,50,125,56],[143,51,125,57],[143,53,125,59],[144,12,126,20],[144,16,126,24],[144,17,126,25,"storage"],[144,24,126,32],[144,27,126,35,"globalThis"],[144,37,126,45],[144,38,126,46,"localStorage"],[144,50,126,58],[145,10,127,16],[145,11,127,17],[145,17,128,21],[146,12,129,20],[146,16,129,24],[146,17,129,25,"memoryStorage"],[146,30,129,38],[146,33,129,41],[146,34,129,42],[146,35,129,43],[147,12,130,20],[147,16,130,24],[147,17,130,25,"storage"],[147,24,130,32],[147,27,130,35],[147,28,130,36],[147,29,130,37],[147,31,130,39,"local_storage_1"],[147,46,130,54],[147,47,130,55,"memoryLocalStorageAdapter"],[147,72,130,80],[147,74,130,82],[147,78,130,86],[147,79,130,87,"memoryStorage"],[147,92,130,100],[147,93,130,101],[148,10,131,16],[149,8,132,12],[150,8,133,12],[150,12,133,16,"settings"],[150,20,133,24],[150,21,133,25,"userStorage"],[150,32,133,36],[150,34,133,38],[151,10,134,16],[151,14,134,20],[151,15,134,21,"userStorage"],[151,26,134,32],[151,29,134,35,"settings"],[151,37,134,43],[151,38,134,44,"userStorage"],[151,49,134,55],[152,8,135,12],[153,6,136,8],[153,7,136,9],[153,13,137,13],[154,8,138,12],[154,12,138,16],[154,13,138,17,"memoryStorage"],[154,26,138,30],[154,29,138,33],[154,30,138,34],[154,31,138,35],[155,8,139,12],[155,12,139,16],[155,13,139,17,"storage"],[155,20,139,24],[155,23,139,27],[155,24,139,28],[155,25,139,29],[155,27,139,31,"local_storage_1"],[155,42,139,46],[155,43,139,47,"memoryLocalStorageAdapter"],[155,68,139,72],[155,70,139,74],[155,74,139,78],[155,75,139,79,"memoryStorage"],[155,88,139,92],[155,89,139,93],[156,6,140,8],[157,6,141,8],[157,10,141,12],[157,11,141,13],[157,12,141,14],[157,14,141,16,"helpers_1"],[157,23,141,25],[157,24,141,26,"isBrowser"],[157,33,141,35],[157,35,141,37],[157,36,141,38],[157,40,141,42,"globalThis"],[157,50,141,52],[157,51,141,53,"BroadcastChannel"],[157,67,141,69],[157,71,141,73],[157,75,141,77],[157,76,141,78,"persistSession"],[157,90,141,92],[157,94,141,96],[157,98,141,100],[157,99,141,101,"storageKey"],[157,109,141,111],[157,111,141,113],[158,8,142,12],[158,12,142,16],[159,10,143,16],[159,14,143,20],[159,15,143,21,"broadcastChannel"],[159,31,143,37],[159,34,143,40],[159,38,143,44,"globalThis"],[159,48,143,54],[159,49,143,55,"BroadcastChannel"],[159,65,143,71],[159,66,143,72],[159,70,143,76],[159,71,143,77,"storageKey"],[159,81,143,87],[159,82,143,88],[160,8,144,12],[160,9,144,13],[160,10,145,12],[160,17,145,19,"e"],[160,18,145,20],[160,20,145,22],[161,10,146,16,"console"],[161,17,146,23],[161,18,146,24,"error"],[161,23,146,29],[161,24,146,30],[161,112,146,118],[161,114,146,120,"e"],[161,115,146,121],[161,116,146,122],[162,8,147,12],[163,8,148,12],[163,9,148,13,"_b"],[163,11,148,15],[163,14,148,18],[163,18,148,22],[163,19,148,23,"broadcastChannel"],[163,35,148,39],[163,41,148,45],[163,45,148,49],[163,49,148,53,"_b"],[163,51,148,55],[163,56,148,60],[163,61,148,65],[163,62,148,66],[163,65,148,69],[163,70,148,74],[163,71,148,75],[163,74,148,78,"_b"],[163,76,148,80],[163,77,148,81,"addEventListener"],[163,93,148,97],[163,94,148,98],[163,103,148,107],[164,10,148,107],[164,14,148,107,"_ref"],[164,18,148,107],[164,21,148,107,"_asyncToGenerator"],[164,38,148,107],[164,39,148,109],[164,50,148,116,"event"],[164,55,148,121],[164,57,148,126],[165,12,149,16,"_this"],[165,17,149,20],[165,18,149,21,"_debug"],[165,24,149,27],[165,25,149,28],[165,83,149,86],[165,85,149,88,"event"],[165,90,149,93],[165,91,149,94],[166,12,150,16],[166,18,150,22,"_this"],[166,23,150,26],[166,24,150,27,"_notifyAllSubscribers"],[166,45,150,48],[166,46,150,49,"event"],[166,51,150,54],[166,52,150,55,"data"],[166,56,150,59],[166,57,150,60,"event"],[166,62,150,65],[166,64,150,67,"event"],[166,69,150,72],[166,70,150,73,"data"],[166,74,150,77],[166,75,150,78,"session"],[166,82,150,85],[166,84,150,87],[166,89,150,92],[166,90,150,93],[166,91,150,94],[166,92,150,95],[167,10,151,12],[167,11,151,13],[168,10,151,13],[168,27,151,13,"_x4"],[168,30,151,13],[169,12,151,13],[169,19,151,13,"_ref"],[169,23,151,13],[169,24,151,13,"apply"],[169,29,151,13],[169,36,151,13,"arguments"],[169,45,151,13],[170,10,151,13],[171,8,151,13],[171,12,151,14],[172,6,152,8],[173,6,153,8],[173,10,153,12],[173,11,153,13,"initialize"],[173,21,153,23],[173,22,153,24],[173,23,153,25],[174,4,154,4],[175,4,155,4],[176,0,156,0],[177,0,157,0],[178,4,155,4],[178,11,155,4,"_createClass"],[178,23,155,4],[178,24,155,4,"GoTrueClient"],[178,36,155,4],[179,6,155,4,"key"],[179,9,155,4],[180,6,155,4,"get"],[180,9,155,4],[180,11,158,4],[180,20,158,4,"get"],[180,24,158,4],[180,26,158,15],[181,8,159,8],[181,12,159,12,"_a"],[181,14,159,14],[181,16,159,16,"_b"],[181,18,159,18],[182,8,160,8],[182,15,160,15],[182,16,160,16,"_b"],[182,18,160,18],[182,21,160,21],[182,22,160,22,"_a"],[182,24,160,24],[182,27,160,27,"GLOBAL_JWKS"],[182,38,160,38],[182,39,160,39],[182,43,160,43],[182,44,160,44,"storageKey"],[182,54,160,54],[182,55,160,55],[182,61,160,61],[182,65,160,65],[182,69,160,69,"_a"],[182,71,160,71],[182,76,160,76],[182,81,160,81],[182,82,160,82],[182,85,160,85],[182,90,160,90],[182,91,160,91],[182,94,160,94,"_a"],[182,96,160,96],[182,97,160,97,"jwks"],[182,101,160,101],[182,107,160,107],[182,111,160,111],[182,115,160,115,"_b"],[182,117,160,117],[182,122,160,122],[182,127,160,127],[182,128,160,128],[182,131,160,131,"_b"],[182,133,160,133],[182,136,160,136],[183,10,160,138,"keys"],[183,14,160,142],[183,16,160,144],[184,8,160,147],[184,9,160,148],[185,6,161,4],[185,7,161,5],[186,6,161,5,"set"],[186,9,161,5],[186,11,162,4],[186,20,162,4,"set"],[186,24,162,13,"value"],[186,29,162,18],[186,31,162,20],[187,8,163,8,"GLOBAL_JWKS"],[187,19,163,19],[187,20,163,20],[187,24,163,24],[187,25,163,25,"storageKey"],[187,35,163,35],[187,36,163,36],[187,39,163,39,"Object"],[187,45,163,45],[187,46,163,46,"assign"],[187,52,163,52],[187,53,163,53,"Object"],[187,59,163,59],[187,60,163,60,"assign"],[187,66,163,66],[187,67,163,67],[187,68,163,68],[187,69,163,69],[187,71,163,71,"GLOBAL_JWKS"],[187,82,163,82],[187,83,163,83],[187,87,163,87],[187,88,163,88,"storageKey"],[187,98,163,98],[187,99,163,99],[187,100,163,100],[187,102,163,102],[188,10,163,104,"jwks"],[188,14,163,108],[188,16,163,110,"value"],[189,8,163,116],[189,9,163,117],[189,10,163,118],[190,6,164,4],[191,4,164,5],[192,6,164,5,"key"],[192,9,164,5],[193,6,164,5,"get"],[193,9,164,5],[193,11,165,4],[193,20,165,4,"get"],[193,24,165,4],[193,26,165,25],[194,8,166,8],[194,12,166,12,"_a"],[194,14,166,14],[194,16,166,16,"_b"],[194,18,166,18],[195,8,167,8],[195,15,167,15],[195,16,167,16,"_b"],[195,18,167,18],[195,21,167,21],[195,22,167,22,"_a"],[195,24,167,24],[195,27,167,27,"GLOBAL_JWKS"],[195,38,167,38],[195,39,167,39],[195,43,167,43],[195,44,167,44,"storageKey"],[195,54,167,54],[195,55,167,55],[195,61,167,61],[195,65,167,65],[195,69,167,69,"_a"],[195,71,167,71],[195,76,167,76],[195,81,167,81],[195,82,167,82],[195,85,167,85],[195,90,167,90],[195,91,167,91],[195,94,167,94,"_a"],[195,96,167,96],[195,97,167,97,"cachedAt"],[195,105,167,105],[195,111,167,111],[195,115,167,115],[195,119,167,119,"_b"],[195,121,167,121],[195,126,167,126],[195,131,167,131],[195,132,167,132],[195,135,167,135,"_b"],[195,137,167,137],[195,140,167,140,"Number"],[195,146,167,146],[195,147,167,147,"MIN_SAFE_INTEGER"],[195,163,167,163],[196,6,168,4],[196,7,168,5],[197,6,168,5,"set"],[197,9,168,5],[197,11,169,4],[197,20,169,4,"set"],[197,24,169,23,"value"],[197,29,169,28],[197,31,169,30],[198,8,170,8,"GLOBAL_JWKS"],[198,19,170,19],[198,20,170,20],[198,24,170,24],[198,25,170,25,"storageKey"],[198,35,170,35],[198,36,170,36],[198,39,170,39,"Object"],[198,45,170,45],[198,46,170,46,"assign"],[198,52,170,52],[198,53,170,53,"Object"],[198,59,170,59],[198,60,170,60,"assign"],[198,66,170,66],[198,67,170,67],[198,68,170,68],[198,69,170,69],[198,71,170,71,"GLOBAL_JWKS"],[198,82,170,82],[198,83,170,83],[198,87,170,87],[198,88,170,88,"storageKey"],[198,98,170,98],[198,99,170,99],[198,100,170,100],[198,102,170,102],[199,10,170,104,"cachedAt"],[199,18,170,112],[199,20,170,114,"value"],[200,8,170,120],[200,9,170,121],[200,10,170,122],[201,6,171,4],[202,4,171,5],[203,6,171,5,"key"],[203,9,171,5],[204,6,171,5,"value"],[204,11,171,5],[204,13,172,4],[204,22,172,4,"_debug"],[204,28,172,10,"_debug"],[204,29,172,10],[204,31,172,20],[205,8,173,8],[205,12,173,12],[205,16,173,16],[205,17,173,17,"logDebugMessages"],[205,33,173,33],[205,35,173,35],[206,10,173,35],[206,19,173,35,"_len"],[206,23,173,35],[206,26,173,35,"arguments"],[206,35,173,35],[206,36,173,35,"length"],[206,42,173,35],[206,44,172,14,"args"],[206,48,172,18],[206,55,172,18,"Array"],[206,60,172,18],[206,61,172,18,"_len"],[206,65,172,18],[206,68,172,18,"_key"],[206,72,172,18],[206,78,172,18,"_key"],[206,82,172,18],[206,85,172,18,"_len"],[206,89,172,18],[206,91,172,18,"_key"],[206,95,172,18],[207,12,172,14,"args"],[207,16,172,18],[207,17,172,18,"_key"],[207,21,172,18],[207,25,172,18,"arguments"],[207,34,172,18],[207,35,172,18,"_key"],[207,39,172,18],[208,10,172,18],[209,10,174,12],[209,14,174,16],[209,15,174,17,"logger"],[209,21,174,23],[209,22,174,23,"apply"],[209,27,174,23],[209,28,174,12],[209,32,174,16],[209,35,174,24],[209,51,174,40],[209,55,174,44],[209,56,174,45,"instanceID"],[209,66,174,55],[209,71,174,60,"version_1"],[209,80,174,69],[209,81,174,70,"version"],[209,88,174,77],[209,93,174,82],[209,97,174,86,"Date"],[209,101,174,90],[209,102,174,91],[209,103,174,92],[209,104,174,93,"toISOString"],[209,115,174,104],[209,116,174,105],[209,117,174,106],[209,119,174,108],[209,121,174,108,"concat"],[209,127,174,108],[209,128,174,113,"args"],[209,132,174,117],[209,134,174,118],[210,8,175,8],[211,8,176,8],[211,15,176,15],[211,19,176,19],[212,6,177,4],[213,6,178,4],[214,0,179,0],[215,0,180,0],[216,0,181,0],[217,0,182,0],[218,4,178,4],[219,6,178,4,"key"],[219,9,178,4],[220,6,178,4,"value"],[220,11,178,4],[221,8,178,4],[221,12,178,4,"_initialize2"],[221,24,178,4],[221,27,178,4,"_asyncToGenerator"],[221,44,178,4],[221,45,183,4],[221,58,183,23],[222,10,183,23],[222,14,183,23,"_this2"],[222,20,183,23],[223,10,184,8],[223,14,184,12],[223,18,184,16],[223,19,184,17,"initializePromise"],[223,36,184,34],[223,38,184,36],[224,12,185,12],[224,25,185,25],[224,29,185,29],[224,30,185,30,"initializePromise"],[224,47,185,47],[225,10,186,8],[226,10,187,8],[226,14,187,12],[226,15,187,13,"initializePromise"],[226,32,187,30],[226,35,187,33,"_asyncToGenerator"],[226,52,187,33],[226,53,187,34],[226,66,187,46],[227,12,188,12],[227,25,188,25,"_this2"],[227,31,188,29],[227,32,188,30,"_acquireLock"],[227,44,188,42],[227,45,188,43],[227,46,188,44],[227,47,188,45],[227,62,188,45,"_asyncToGenerator"],[227,79,188,45],[227,80,188,47],[227,93,188,59],[228,14,189,16],[228,27,189,29,"_this2"],[228,33,189,33],[228,34,189,34,"_initialize"],[228,45,189,45],[228,46,189,46],[228,47,189,47],[229,12,190,12],[229,13,190,13],[229,15,190,14],[230,10,191,8],[230,11,191,9],[230,13,191,11],[230,14,191,12],[231,10,192,8],[231,23,192,21],[231,27,192,25],[231,28,192,26,"initializePromise"],[231,45,192,43],[232,8,193,4],[232,9,193,5],[233,8,193,5],[233,17,183,10,"initialize"],[233,27,183,20,"initialize"],[233,28,183,20],[234,10,183,20],[234,17,183,20,"_initialize2"],[234,29,183,20],[234,30,183,20,"apply"],[234,35,183,20],[234,42,183,20,"arguments"],[234,51,183,20],[235,8,183,20],[236,8,183,20],[236,15,183,10,"initialize"],[236,25,183,20],[237,6,183,20],[238,6,194,4],[239,0,195,0],[240,0,196,0],[241,0,197,0],[242,0,198,0],[243,0,199,0],[244,6,194,4],[245,4,194,4],[246,6,194,4,"key"],[246,9,194,4],[247,6,194,4,"value"],[247,11,194,4],[248,8,194,4],[248,12,194,4,"_initialize3"],[248,24,194,4],[248,27,194,4,"_asyncToGenerator"],[248,44,194,4],[248,45,200,4],[248,58,200,24],[249,10,200,24],[249,14,200,24,"_this3"],[249,20,200,24],[250,10,201,8],[250,14,201,12,"_a"],[250,16,201,14],[251,10,202,8],[251,14,202,12],[252,12,203,12],[252,16,203,18,"params"],[252,22,203,24],[252,25,203,27],[252,26,203,28],[252,27,203,29],[252,29,203,31,"helpers_1"],[252,38,203,40],[252,39,203,41,"parseParametersFromURL"],[252,61,203,63],[252,63,203,65,"window"],[252,69,203,71],[252,70,203,72,"location"],[252,78,203,80],[252,79,203,81,"href"],[252,83,203,85],[252,84,203,86],[253,12,204,12],[253,16,204,16,"callbackUrlType"],[253,31,204,31],[253,34,204,34],[253,40,204,40],[254,12,205,12],[254,16,205,16],[254,20,205,20],[254,21,205,21,"_isImplicitGrantCallback"],[254,45,205,45],[254,46,205,46,"params"],[254,52,205,52],[254,53,205,53],[254,55,205,55],[255,14,206,16,"callbackUrlType"],[255,29,206,31],[255,32,206,34],[255,42,206,44],[256,12,207,12],[256,13,207,13],[256,19,208,17],[256,29,208,27],[256,33,208,31],[256,34,208,32,"_isPKCECallback"],[256,49,208,47],[256,50,208,48,"params"],[256,56,208,54],[256,57,208,55],[256,59,208,57],[257,14,209,16,"callbackUrlType"],[257,29,209,31],[257,32,209,34],[257,38,209,40],[258,12,210,12],[259,12,211,12],[260,0,212,0],[261,0,213,0],[262,0,214,0],[263,0,215,0],[264,0,216,0],[265,12,217,12],[265,16,217,16],[265,17,217,17],[265,18,217,18],[265,20,217,20,"helpers_1"],[265,29,217,29],[265,30,217,30,"isBrowser"],[265,39,217,39],[265,41,217,41],[265,42,217,42],[265,46,217,46],[265,50,217,50],[265,51,217,51,"detectSessionInUrl"],[265,69,217,69],[265,73,217,73,"callbackUrlType"],[265,88,217,88],[265,93,217,93],[265,99,217,99],[265,101,217,101],[266,14,218,16],[266,18,218,16,"_yield$this$_getSessi"],[266,39,218,16],[266,48,218,46],[266,52,218,50],[266,53,218,51,"_getSessionFromURL"],[266,71,218,69],[266,72,218,70,"params"],[266,78,218,76],[266,80,218,78,"callbackUrlType"],[266,95,218,93],[266,96,218,94],[267,16,218,24,"data"],[267,20,218,28],[267,23,218,28,"_yield$this$_getSessi"],[267,44,218,28],[267,45,218,24,"data"],[267,49,218,28],[268,16,218,30,"error"],[268,21,218,35],[268,24,218,35,"_yield$this$_getSessi"],[268,45,218,35],[268,46,218,30,"error"],[268,51,218,35],[269,14,219,16],[269,18,219,20,"error"],[269,23,219,25],[269,25,219,27],[270,16,220,20],[270,20,220,24],[270,21,220,25,"_debug"],[270,27,220,31],[270,28,220,32],[270,44,220,48],[270,46,220,50],[270,80,220,84],[270,82,220,86,"error"],[270,87,220,91],[270,88,220,92],[271,16,221,20],[271,20,221,24],[271,21,221,25],[271,22,221,26],[271,24,221,28,"errors_1"],[271,32,221,36],[271,33,221,37,"isAuthImplicitGrantRedirectError"],[271,65,221,69],[271,67,221,71,"error"],[271,72,221,76],[271,73,221,77],[271,75,221,79],[272,18,222,24],[272,22,222,30,"errorCode"],[272,31,222,39],[272,34,222,42],[272,35,222,43,"_a"],[272,37,222,45],[272,40,222,48,"error"],[272,45,222,53],[272,46,222,54,"details"],[272,53,222,61],[272,59,222,67],[272,63,222,71],[272,67,222,75,"_a"],[272,69,222,77],[272,74,222,82],[272,79,222,87],[272,80,222,88],[272,83,222,91],[272,88,222,96],[272,89,222,97],[272,92,222,100,"_a"],[272,94,222,102],[272,95,222,103,"code"],[272,99,222,107],[273,18,223,24],[273,22,223,28,"errorCode"],[273,31,223,37],[273,36,223,42],[273,61,223,67],[273,65,224,28,"errorCode"],[273,74,224,37],[273,79,224,42],[273,99,224,62],[273,103,225,28,"errorCode"],[273,112,225,37],[273,117,225,42],[273,148,225,73],[273,150,225,75],[274,20,226,28],[274,27,226,35],[275,22,226,37,"error"],[275,27,226,42],[275,29,226,37,"error"],[276,20,226,43],[276,21,226,44],[277,18,227,24],[278,16,228,20],[279,16,229,20],[280,16,230,20],[281,16,231,20],[281,22,231,26],[281,26,231,30],[281,27,231,31,"_removeSession"],[281,41,231,45],[281,42,231,46],[281,43,231,47],[282,16,232,20],[282,23,232,27],[283,18,232,29,"error"],[283,23,232,34],[283,25,232,29,"error"],[284,16,232,35],[284,17,232,36],[285,14,233,16],[286,14,234,16],[286,18,234,24,"session"],[286,25,234,31],[286,28,234,50,"data"],[286,32,234,54],[286,33,234,24,"session"],[286,40,234,31],[287,16,234,33,"redirectType"],[287,28,234,45],[287,31,234,50,"data"],[287,35,234,54],[287,36,234,33,"redirectType"],[287,48,234,45],[288,14,235,16],[288,18,235,20],[288,19,235,21,"_debug"],[288,25,235,27],[288,26,235,28],[288,42,235,44],[288,44,235,46],[288,69,235,71],[288,71,235,73,"session"],[288,78,235,80],[288,80,235,82],[288,95,235,97],[288,97,235,99,"redirectType"],[288,109,235,111],[288,110,235,112],[289,14,236,16],[289,20,236,22],[289,24,236,26],[289,25,236,27,"_saveSession"],[289,37,236,39],[289,38,236,40,"session"],[289,45,236,47],[289,46,236,48],[290,14,237,16,"setTimeout"],[290,24,237,26],[290,38,237,26,"_asyncToGenerator"],[290,55,237,26],[290,56,237,27],[290,69,237,39],[291,16,238,20],[291,20,238,24,"redirectType"],[291,32,238,36],[291,37,238,41],[291,47,238,51],[291,49,238,53],[292,18,239,24],[292,24,239,30,"_this3"],[292,30,239,34],[292,31,239,35,"_notifyAllSubscribers"],[292,52,239,56],[292,53,239,57],[292,72,239,76],[292,74,239,78,"session"],[292,81,239,85],[292,82,239,86],[293,16,240,20],[293,17,240,21],[293,23,241,25],[294,18,242,24],[294,24,242,30,"_this3"],[294,30,242,34],[294,31,242,35,"_notifyAllSubscribers"],[294,52,242,56],[294,53,242,57],[294,64,242,68],[294,66,242,70,"session"],[294,73,242,77],[294,74,242,78],[295,16,243,20],[296,14,244,16],[296,15,244,17],[296,18,244,19],[296,19,244,20],[296,20,244,21],[297,14,245,16],[297,21,245,23],[298,16,245,25,"error"],[298,21,245,30],[298,23,245,32],[299,14,245,37],[299,15,245,38],[300,12,246,12],[301,12,247,12],[302,12,248,12],[302,18,248,18],[302,22,248,22],[302,23,248,23,"_recoverAndRefresh"],[302,41,248,41],[302,42,248,42],[302,43,248,43],[303,12,249,12],[303,19,249,19],[304,14,249,21,"error"],[304,19,249,26],[304,21,249,28],[305,12,249,33],[305,13,249,34],[306,10,250,8],[306,11,250,9],[306,12,251,8],[306,19,251,15,"error"],[306,24,251,20],[306,26,251,22],[307,12,252,12],[307,16,252,16],[307,17,252,17],[307,18,252,18],[307,20,252,20,"errors_1"],[307,28,252,28],[307,29,252,29,"isAuthError"],[307,40,252,40],[307,42,252,42,"error"],[307,47,252,47],[307,48,252,48],[307,50,252,50],[308,14,253,16],[308,21,253,23],[309,16,253,25,"error"],[309,21,253,30],[309,23,253,25,"error"],[310,14,253,31],[310,15,253,32],[311,12,254,12],[312,12,255,12],[312,19,255,19],[313,14,256,16,"error"],[313,19,256,21],[313,21,256,23],[313,25,256,27,"errors_1"],[313,33,256,35],[313,34,256,36,"AuthUnknownError"],[313,50,256,52],[313,51,256,53],[313,91,256,93],[313,93,256,95,"error"],[313,98,256,100],[314,12,257,12],[314,13,257,13],[315,10,258,8],[315,11,258,9],[315,20,259,16],[316,12,260,12],[316,18,260,18],[316,22,260,22],[316,23,260,23,"_handleVisibilityChange"],[316,46,260,46],[316,47,260,47],[316,48,260,48],[317,12,261,12],[317,16,261,16],[317,17,261,17,"_debug"],[317,23,261,23],[317,24,261,24],[317,40,261,40],[317,42,261,42],[317,47,261,47],[317,48,261,48],[318,10,262,8],[319,8,263,4],[319,9,263,5],[320,8,263,5],[320,17,200,10,"_initialize"],[320,28,200,21,"_initialize"],[320,29,200,21],[321,10,200,21],[321,17,200,21,"_initialize3"],[321,29,200,21],[321,30,200,21,"apply"],[321,35,200,21],[321,42,200,21,"arguments"],[321,51,200,21],[322,8,200,21],[323,8,200,21],[323,15,200,10,"_initialize"],[323,26,200,21],[324,6,200,21],[325,6,264,4],[326,0,265,0],[327,0,266,0],[328,0,267,0],[329,0,268,0],[330,6,264,4],[331,4,264,4],[332,6,264,4,"key"],[332,9,264,4],[333,6,264,4,"value"],[333,11,264,4],[334,8,264,4],[334,12,264,4,"_signInAnonymously"],[334,30,264,4],[334,33,264,4,"_asyncToGenerator"],[334,50,264,4],[334,51,269,4],[334,62,269,28,"credentials"],[334,73,269,39],[334,75,269,41],[335,10,270,8],[335,14,270,12,"_a"],[335,16,270,14],[335,18,270,16,"_b"],[335,20,270,18],[335,22,270,20,"_c"],[335,24,270,22],[336,10,271,8],[336,14,271,12],[337,12,272,12],[337,16,272,18,"res"],[337,19,272,21],[337,28,272,30],[337,29,272,31],[337,30,272,32],[337,32,272,34,"fetch_1"],[337,39,272,41],[337,40,272,42,"_request"],[337,48,272,50],[337,50,272,52],[337,54,272,56],[337,55,272,57,"fetch"],[337,60,272,62],[337,62,272,64],[337,68,272,70],[337,70,272,72],[337,73,272,75],[337,77,272,79],[337,78,272,80,"url"],[337,81,272,83],[337,90,272,92],[337,92,272,94],[338,14,273,16,"headers"],[338,21,273,23],[338,23,273,25],[338,27,273,29],[338,28,273,30,"headers"],[338,35,273,37],[339,14,274,16,"body"],[339,18,274,20],[339,20,274,22],[340,16,275,20,"data"],[340,20,275,24],[340,22,275,26],[340,23,275,27,"_b"],[340,25,275,29],[340,28,275,32],[340,29,275,33,"_a"],[340,31,275,35],[340,34,275,38,"credentials"],[340,45,275,49],[340,50,275,54],[340,54,275,58],[340,58,275,62,"credentials"],[340,69,275,73],[340,74,275,78],[340,79,275,83],[340,80,275,84],[340,83,275,87],[340,88,275,92],[340,89,275,93],[340,92,275,96,"credentials"],[340,103,275,107],[340,104,275,108,"options"],[340,111,275,115],[340,117,275,121],[340,121,275,125],[340,125,275,129,"_a"],[340,127,275,131],[340,132,275,136],[340,137,275,141],[340,138,275,142],[340,141,275,145],[340,146,275,150],[340,147,275,151],[340,150,275,154,"_a"],[340,152,275,156],[340,153,275,157,"data"],[340,157,275,161],[340,163,275,167],[340,167,275,171],[340,171,275,175,"_b"],[340,173,275,177],[340,178,275,182],[340,183,275,187],[340,184,275,188],[340,187,275,191,"_b"],[340,189,275,193],[340,192,275,196],[340,193,275,197],[340,194,275,198],[341,16,276,20,"gotrue_meta_security"],[341,36,276,40],[341,38,276,42],[342,18,276,44,"captcha_token"],[342,31,276,57],[342,33,276,59],[342,34,276,60,"_c"],[342,36,276,62],[342,39,276,65,"credentials"],[342,50,276,76],[342,55,276,81],[342,59,276,85],[342,63,276,89,"credentials"],[342,74,276,100],[342,79,276,105],[342,84,276,110],[342,85,276,111],[342,88,276,114],[342,93,276,119],[342,94,276,120],[342,97,276,123,"credentials"],[342,108,276,134],[342,109,276,135,"options"],[342,116,276,142],[342,122,276,148],[342,126,276,152],[342,130,276,156,"_c"],[342,132,276,158],[342,137,276,163],[342,142,276,168],[342,143,276,169],[342,146,276,172],[342,151,276,177],[342,152,276,178],[342,155,276,181,"_c"],[342,157,276,183],[342,158,276,184,"captchaToken"],[343,16,276,197],[344,14,277,16],[344,15,277,17],[345,14,278,16,"xform"],[345,19,278,21],[345,21,278,23,"fetch_1"],[345,28,278,30],[345,29,278,31,"_sessionResponse"],[346,12,279,12],[346,13,279,13],[346,14,279,14],[347,12,280,12],[347,16,280,20,"data"],[347,20,280,24],[347,23,280,36,"res"],[347,26,280,39],[347,27,280,20,"data"],[347,31,280,24],[348,14,280,26,"error"],[348,19,280,31],[348,22,280,36,"res"],[348,25,280,39],[348,26,280,26,"error"],[348,31,280,31],[349,12,281,12],[349,16,281,16,"error"],[349,21,281,21],[349,25,281,25],[349,26,281,26,"data"],[349,30,281,30],[349,32,281,32],[350,14,282,16],[350,21,282,23],[351,16,282,25,"data"],[351,20,282,29],[351,22,282,31],[352,18,282,33,"user"],[352,22,282,37],[352,24,282,39],[352,28,282,43],[353,18,282,45,"session"],[353,25,282,52],[353,27,282,54],[354,16,282,59],[354,17,282,60],[355,16,282,62,"error"],[355,21,282,67],[355,23,282,69,"error"],[356,14,282,75],[356,15,282,76],[357,12,283,12],[358,12,284,12],[358,16,284,18,"session"],[358,23,284,25],[358,26,284,28,"data"],[358,30,284,32],[358,31,284,33,"session"],[358,38,284,40],[359,12,285,12],[359,16,285,18,"user"],[359,20,285,22],[359,23,285,25,"data"],[359,27,285,29],[359,28,285,30,"user"],[359,32,285,34],[360,12,286,12],[360,16,286,16,"data"],[360,20,286,20],[360,21,286,21,"session"],[360,28,286,28],[360,30,286,30],[361,14,287,16],[361,20,287,22],[361,24,287,26],[361,25,287,27,"_saveSession"],[361,37,287,39],[361,38,287,40,"data"],[361,42,287,44],[361,43,287,45,"session"],[361,50,287,52],[361,51,287,53],[362,14,288,16],[362,20,288,22],[362,24,288,26],[362,25,288,27,"_notifyAllSubscribers"],[362,46,288,48],[362,47,288,49],[362,58,288,60],[362,60,288,62,"session"],[362,67,288,69],[362,68,288,70],[363,12,289,12],[364,12,290,12],[364,19,290,19],[365,14,290,21,"data"],[365,18,290,25],[365,20,290,27],[366,16,290,29,"user"],[366,20,290,33],[366,22,290,29,"user"],[366,26,290,33],[367,16,290,35,"session"],[367,23,290,42],[367,25,290,35,"session"],[368,14,290,43],[368,15,290,44],[369,14,290,46,"error"],[369,19,290,51],[369,21,290,53],[370,12,290,58],[370,13,290,59],[371,10,291,8],[371,11,291,9],[371,12,292,8],[371,19,292,15,"error"],[371,24,292,20],[371,26,292,22],[372,12,293,12],[372,16,293,16],[372,17,293,17],[372,18,293,18],[372,20,293,20,"errors_1"],[372,28,293,28],[372,29,293,29,"isAuthError"],[372,40,293,40],[372,42,293,42,"error"],[372,47,293,47],[372,48,293,48],[372,50,293,50],[373,14,294,16],[373,21,294,23],[374,16,294,25,"data"],[374,20,294,29],[374,22,294,31],[375,18,294,33,"user"],[375,22,294,37],[375,24,294,39],[375,28,294,43],[376,18,294,45,"session"],[376,25,294,52],[376,27,294,54],[377,16,294,59],[377,17,294,60],[378,16,294,62,"error"],[378,21,294,67],[378,23,294,62,"error"],[379,14,294,68],[379,15,294,69],[380,12,295,12],[381,12,296,12],[381,18,296,18,"error"],[381,23,296,23],[382,10,297,8],[383,8,298,4],[383,9,298,5],[384,8,298,5],[384,17,269,10,"signInAnonymously"],[384,34,269,27,"signInAnonymously"],[384,35,269,27,"_x5"],[384,38,269,27],[385,10,269,27],[385,17,269,27,"_signInAnonymously"],[385,35,269,27],[385,36,269,27,"apply"],[385,41,269,27],[385,48,269,27,"arguments"],[385,57,269,27],[386,8,269,27],[387,8,269,27],[387,15,269,10,"signInAnonymously"],[387,32,269,27],[388,6,269,27],[389,6,299,4],[390,0,300,0],[391,0,301,0],[392,0,302,0],[393,0,303,0],[394,0,304,0],[395,0,305,0],[396,0,306,0],[397,0,307,0],[398,0,308,0],[399,6,299,4],[400,4,299,4],[401,6,299,4,"key"],[401,9,299,4],[402,6,299,4,"value"],[402,11,299,4],[403,8,299,4],[403,12,299,4,"_signUp"],[403,19,299,4],[403,22,299,4,"_asyncToGenerator"],[403,39,299,4],[403,40,309,4],[403,51,309,17,"credentials"],[403,62,309,28],[403,64,309,30],[404,10,310,8],[404,14,310,12,"_a"],[404,16,310,14],[404,18,310,16,"_b"],[404,20,310,18],[404,22,310,20,"_c"],[404,24,310,22],[405,10,311,8],[405,14,311,12],[406,12,312,12],[406,16,312,16,"res"],[406,19,312,19],[407,12,313,12],[407,16,313,16],[407,23,313,23],[407,27,313,27,"credentials"],[407,38,313,38],[407,40,313,40],[408,14,314,16],[408,18,314,24,"email"],[408,23,314,29],[408,26,314,53,"credentials"],[408,37,314,64],[408,38,314,24,"email"],[408,43,314,29],[409,16,314,31,"password"],[409,24,314,39],[409,27,314,53,"credentials"],[409,38,314,64],[409,39,314,31,"password"],[409,47,314,39],[410,16,314,41,"options"],[410,23,314,48],[410,26,314,53,"credentials"],[410,37,314,64],[410,38,314,41,"options"],[410,45,314,48],[411,14,315,16],[411,18,315,20,"codeChallenge"],[411,31,315,33],[411,34,315,36],[411,38,315,40],[412,14,316,16],[412,18,316,20,"codeChallengeMethod"],[412,37,316,39],[412,40,316,42],[412,44,316,46],[413,14,317,16],[413,18,317,20],[413,22,317,24],[413,23,317,25,"flowType"],[413,31,317,33],[413,36,317,38],[413,42,317,44],[413,44,317,46],[414,16,318,20],[415,16,318,21],[415,20,318,21,"_yield"],[415,26,318,21],[415,35,319,65],[415,36,319,66],[415,37,319,67],[415,39,319,69,"helpers_1"],[415,48,319,78],[415,49,319,79,"getCodeChallengeAndMethod"],[415,74,319,104],[415,76,319,106],[415,80,319,110],[415,81,319,111,"storage"],[415,88,319,118],[415,90,319,120],[415,94,319,124],[415,95,319,125,"storageKey"],[415,105,319,135],[415,106,319,136],[416,16,319,136],[416,20,319,136,"_yield2"],[416,27,319,136],[416,30,319,136,"_slicedToArray"],[416,44,319,136],[416,45,319,136,"_yield"],[416,51,319,136],[417,16,319,21,"codeChallenge"],[417,29,319,34],[417,32,319,34,"_yield2"],[417,39,319,34],[418,16,319,36,"codeChallengeMethod"],[418,35,319,55],[418,38,319,55,"_yield2"],[418,45,319,55],[419,14,320,16],[420,14,321,16,"res"],[420,17,321,19],[420,26,321,28],[420,27,321,29],[420,28,321,30],[420,30,321,32,"fetch_1"],[420,37,321,39],[420,38,321,40,"_request"],[420,46,321,48],[420,48,321,50],[420,52,321,54],[420,53,321,55,"fetch"],[420,58,321,60],[420,60,321,62],[420,66,321,68],[420,68,321,70],[420,71,321,73],[420,75,321,77],[420,76,321,78,"url"],[420,79,321,81],[420,88,321,90],[420,90,321,92],[421,16,322,20,"headers"],[421,23,322,27],[421,25,322,29],[421,29,322,33],[421,30,322,34,"headers"],[421,37,322,41],[422,16,323,20,"redirectTo"],[422,26,323,30],[422,28,323,32,"options"],[422,35,323,39],[422,40,323,44],[422,44,323,48],[422,48,323,52,"options"],[422,55,323,59],[422,60,323,64],[422,65,323,69],[422,66,323,70],[422,69,323,73],[422,74,323,78],[422,75,323,79],[422,78,323,82,"options"],[422,85,323,89],[422,86,323,90,"emailRedirectTo"],[422,101,323,105],[423,16,324,20,"body"],[423,20,324,24],[423,22,324,26],[424,18,325,24,"email"],[424,23,325,29],[424,25,325,24,"email"],[424,30,325,29],[425,18,326,24,"password"],[425,26,326,32],[425,28,326,24,"password"],[425,36,326,32],[426,18,327,24,"data"],[426,22,327,28],[426,24,327,30],[426,25,327,31,"_a"],[426,27,327,33],[426,30,327,36,"options"],[426,37,327,43],[426,42,327,48],[426,46,327,52],[426,50,327,56,"options"],[426,57,327,63],[426,62,327,68],[426,67,327,73],[426,68,327,74],[426,71,327,77],[426,76,327,82],[426,77,327,83],[426,80,327,86,"options"],[426,87,327,93],[426,88,327,94,"data"],[426,92,327,98],[426,98,327,104],[426,102,327,108],[426,106,327,112,"_a"],[426,108,327,114],[426,113,327,119],[426,118,327,124],[426,119,327,125],[426,122,327,128,"_a"],[426,124,327,130],[426,127,327,133],[426,128,327,134],[426,129,327,135],[427,18,328,24,"gotrue_meta_security"],[427,38,328,44],[427,40,328,46],[428,20,328,48,"captcha_token"],[428,33,328,61],[428,35,328,63,"options"],[428,42,328,70],[428,47,328,75],[428,51,328,79],[428,55,328,83,"options"],[428,62,328,90],[428,67,328,95],[428,72,328,100],[428,73,328,101],[428,76,328,104],[428,81,328,109],[428,82,328,110],[428,85,328,113,"options"],[428,92,328,120],[428,93,328,121,"captchaToken"],[429,18,328,134],[429,19,328,135],[430,18,329,24,"code_challenge"],[430,32,329,38],[430,34,329,40,"codeChallenge"],[430,47,329,53],[431,18,330,24,"code_challenge_method"],[431,39,330,45],[431,41,330,47,"codeChallengeMethod"],[432,16,331,20],[432,17,331,21],[433,16,332,20,"xform"],[433,21,332,25],[433,23,332,27,"fetch_1"],[433,30,332,34],[433,31,332,35,"_sessionResponse"],[434,14,333,16],[434,15,333,17],[434,16,333,18],[435,12,334,12],[435,13,334,13],[435,19,335,17],[435,23,335,21],[435,30,335,28],[435,34,335,32,"credentials"],[435,45,335,43],[435,47,335,45],[436,14,336,16],[436,18,336,24,"phone"],[436,23,336,29],[436,26,336,53,"credentials"],[436,37,336,64],[436,38,336,24,"phone"],[436,43,336,29],[437,16,336,31,"password"],[437,25,336,39],[437,28,336,53,"credentials"],[437,39,336,64],[437,40,336,31,"password"],[437,48,336,39],[438,16,336,41,"options"],[438,24,336,48],[438,27,336,53,"credentials"],[438,38,336,64],[438,39,336,41,"options"],[438,46,336,48],[439,14,337,16,"res"],[439,17,337,19],[439,26,337,28],[439,27,337,29],[439,28,337,30],[439,30,337,32,"fetch_1"],[439,37,337,39],[439,38,337,40,"_request"],[439,46,337,48],[439,48,337,50],[439,52,337,54],[439,53,337,55,"fetch"],[439,58,337,60],[439,60,337,62],[439,66,337,68],[439,68,337,70],[439,71,337,73],[439,75,337,77],[439,76,337,78,"url"],[439,79,337,81],[439,88,337,90],[439,90,337,92],[440,16,338,20,"headers"],[440,23,338,27],[440,25,338,29],[440,29,338,33],[440,30,338,34,"headers"],[440,37,338,41],[441,16,339,20,"body"],[441,20,339,24],[441,22,339,26],[442,18,340,24,"phone"],[442,23,340,29],[442,25,340,24,"phone"],[442,30,340,29],[443,18,341,24,"password"],[443,26,341,32],[443,28,341,24,"password"],[443,37,341,32],[444,18,342,24,"data"],[444,22,342,28],[444,24,342,30],[444,25,342,31,"_b"],[444,27,342,33],[444,30,342,36,"options"],[444,38,342,43],[444,43,342,48],[444,47,342,52],[444,51,342,56,"options"],[444,59,342,63],[444,64,342,68],[444,69,342,73],[444,70,342,74],[444,73,342,77],[444,78,342,82],[444,79,342,83],[444,82,342,86,"options"],[444,90,342,93],[444,91,342,94,"data"],[444,95,342,98],[444,101,342,104],[444,105,342,108],[444,109,342,112,"_b"],[444,111,342,114],[444,116,342,119],[444,121,342,124],[444,122,342,125],[444,125,342,128,"_b"],[444,127,342,130],[444,130,342,133],[444,131,342,134],[444,132,342,135],[445,18,343,24,"channel"],[445,25,343,31],[445,27,343,33],[445,28,343,34,"_c"],[445,30,343,36],[445,33,343,39,"options"],[445,41,343,46],[445,46,343,51],[445,50,343,55],[445,54,343,59,"options"],[445,62,343,66],[445,67,343,71],[445,72,343,76],[445,73,343,77],[445,76,343,80],[445,81,343,85],[445,82,343,86],[445,85,343,89,"options"],[445,93,343,96],[445,94,343,97,"channel"],[445,101,343,104],[445,107,343,110],[445,111,343,114],[445,115,343,118,"_c"],[445,117,343,120],[445,122,343,125],[445,127,343,130],[445,128,343,131],[445,131,343,134,"_c"],[445,133,343,136],[445,136,343,139],[445,141,343,144],[446,18,344,24,"gotrue_meta_security"],[446,38,344,44],[446,40,344,46],[447,20,344,48,"captcha_token"],[447,33,344,61],[447,35,344,63,"options"],[447,43,344,70],[447,48,344,75],[447,52,344,79],[447,56,344,83,"options"],[447,64,344,90],[447,69,344,95],[447,74,344,100],[447,75,344,101],[447,78,344,104],[447,83,344,109],[447,84,344,110],[447,87,344,113,"options"],[447,95,344,120],[447,96,344,121,"captchaToken"],[448,18,344,134],[449,16,345,20],[449,17,345,21],[450,16,346,20,"xform"],[450,21,346,25],[450,23,346,27,"fetch_1"],[450,30,346,34],[450,31,346,35,"_sessionResponse"],[451,14,347,16],[451,15,347,17],[451,16,347,18],[452,12,348,12],[452,13,348,13],[452,19,349,17],[453,14,350,16],[453,20,350,22],[453,24,350,26,"errors_1"],[453,32,350,34],[453,33,350,35,"AuthInvalidCredentialsError"],[453,60,350,62],[453,61,350,63],[453,126,350,128],[453,127,350,129],[454,12,351,12],[455,12,352,12],[455,16,352,12,"_res"],[455,20,352,12],[455,23,352,36,"res"],[455,26,352,39],[456,14,352,20,"data"],[456,18,352,24],[456,21,352,24,"_res"],[456,25,352,24],[456,26,352,20,"data"],[456,30,352,24],[457,14,352,26,"error"],[457,19,352,31],[457,22,352,31,"_res"],[457,26,352,31],[457,27,352,26,"error"],[457,32,352,31],[458,12,353,12],[458,16,353,16,"error"],[458,21,353,21],[458,25,353,25],[458,26,353,26,"data"],[458,30,353,30],[458,32,353,32],[459,14,354,16],[459,21,354,23],[460,16,354,25,"data"],[460,20,354,29],[460,22,354,31],[461,18,354,33,"user"],[461,22,354,37],[461,24,354,39],[461,28,354,43],[462,18,354,45,"session"],[462,25,354,52],[462,27,354,54],[463,16,354,59],[463,17,354,60],[464,16,354,62,"error"],[464,21,354,67],[464,23,354,69,"error"],[465,14,354,75],[465,15,354,76],[466,12,355,12],[467,12,356,12],[467,16,356,18,"session"],[467,23,356,25],[467,26,356,28,"data"],[467,30,356,32],[467,31,356,33,"session"],[467,38,356,40],[468,12,357,12],[468,16,357,18,"user"],[468,20,357,22],[468,23,357,25,"data"],[468,27,357,29],[468,28,357,30,"user"],[468,32,357,34],[469,12,358,12],[469,16,358,16,"data"],[469,20,358,20],[469,21,358,21,"session"],[469,28,358,28],[469,30,358,30],[470,14,359,16],[470,20,359,22],[470,24,359,26],[470,25,359,27,"_saveSession"],[470,37,359,39],[470,38,359,40,"data"],[470,42,359,44],[470,43,359,45,"session"],[470,50,359,52],[470,51,359,53],[471,14,360,16],[471,20,360,22],[471,24,360,26],[471,25,360,27,"_notifyAllSubscribers"],[471,46,360,48],[471,47,360,49],[471,58,360,60],[471,60,360,62,"session"],[471,67,360,69],[471,68,360,70],[472,12,361,12],[473,12,362,12],[473,19,362,19],[474,14,362,21,"data"],[474,18,362,25],[474,20,362,27],[475,16,362,29,"user"],[475,20,362,33],[475,22,362,29,"user"],[475,26,362,33],[476,16,362,35,"session"],[476,23,362,42],[476,25,362,35,"session"],[477,14,362,43],[477,15,362,44],[478,14,362,46,"error"],[478,19,362,51],[478,21,362,53],[479,12,362,58],[479,13,362,59],[480,10,363,8],[480,11,363,9],[480,12,364,8],[480,19,364,15,"error"],[480,24,364,20],[480,26,364,22],[481,12,365,12],[481,16,365,16],[481,17,365,17],[481,18,365,18],[481,20,365,20,"errors_1"],[481,28,365,28],[481,29,365,29,"isAuthError"],[481,40,365,40],[481,42,365,42,"error"],[481,47,365,47],[481,48,365,48],[481,50,365,50],[482,14,366,16],[482,21,366,23],[483,16,366,25,"data"],[483,20,366,29],[483,22,366,31],[484,18,366,33,"user"],[484,22,366,37],[484,24,366,39],[484,28,366,43],[485,18,366,45,"session"],[485,25,366,52],[485,27,366,54],[486,16,366,59],[486,17,366,60],[487,16,366,62,"error"],[487,21,366,67],[487,23,366,62,"error"],[488,14,366,68],[488,15,366,69],[489,12,367,12],[490,12,368,12],[490,18,368,18,"error"],[490,23,368,23],[491,10,369,8],[492,8,370,4],[492,9,370,5],[493,8,370,5],[493,17,309,10,"signUp"],[493,23,309,16,"signUp"],[493,24,309,16,"_x6"],[493,27,309,16],[494,10,309,16],[494,17,309,16,"_signUp"],[494,24,309,16],[494,25,309,16,"apply"],[494,30,309,16],[494,37,309,16,"arguments"],[494,46,309,16],[495,8,309,16],[496,8,309,16],[496,15,309,10,"signUp"],[496,21,309,16],[497,6,309,16],[498,6,371,4],[499,0,372,0],[500,0,373,0],[501,0,374,0],[502,0,375,0],[503,0,376,0],[504,0,377,0],[505,0,378,0],[506,6,371,4],[507,4,371,4],[508,6,371,4,"key"],[508,9,371,4],[509,6,371,4,"value"],[509,11,371,4],[510,8,371,4],[510,12,371,4,"_signInWithPassword"],[510,31,371,4],[510,34,371,4,"_asyncToGenerator"],[510,51,371,4],[510,52,379,4],[510,63,379,29,"credentials"],[510,74,379,40],[510,76,379,42],[511,10,380,8],[511,14,380,12],[512,12,381,12],[512,16,381,16,"res"],[512,19,381,19],[513,12,382,12],[513,16,382,16],[513,23,382,23],[513,27,382,27,"credentials"],[513,38,382,38],[513,40,382,40],[514,14,383,16],[514,18,383,24,"email"],[514,23,383,29],[514,26,383,53,"credentials"],[514,37,383,64],[514,38,383,24,"email"],[514,43,383,29],[515,16,383,31,"password"],[515,24,383,39],[515,27,383,53,"credentials"],[515,38,383,64],[515,39,383,31,"password"],[515,47,383,39],[516,16,383,41,"options"],[516,23,383,48],[516,26,383,53,"credentials"],[516,37,383,64],[516,38,383,41,"options"],[516,45,383,48],[517,14,384,16,"res"],[517,17,384,19],[517,26,384,28],[517,27,384,29],[517,28,384,30],[517,30,384,32,"fetch_1"],[517,37,384,39],[517,38,384,40,"_request"],[517,46,384,48],[517,48,384,50],[517,52,384,54],[517,53,384,55,"fetch"],[517,58,384,60],[517,60,384,62],[517,66,384,68],[517,68,384,70],[517,71,384,73],[517,75,384,77],[517,76,384,78,"url"],[517,79,384,81],[517,107,384,109],[517,109,384,111],[518,16,385,20,"headers"],[518,23,385,27],[518,25,385,29],[518,29,385,33],[518,30,385,34,"headers"],[518,37,385,41],[519,16,386,20,"body"],[519,20,386,24],[519,22,386,26],[520,18,387,24,"email"],[520,23,387,29],[520,25,387,24,"email"],[520,30,387,29],[521,18,388,24,"password"],[521,26,388,32],[521,28,388,24,"password"],[521,36,388,32],[522,18,389,24,"gotrue_meta_security"],[522,38,389,44],[522,40,389,46],[523,20,389,48,"captcha_token"],[523,33,389,61],[523,35,389,63,"options"],[523,42,389,70],[523,47,389,75],[523,51,389,79],[523,55,389,83,"options"],[523,62,389,90],[523,67,389,95],[523,72,389,100],[523,73,389,101],[523,76,389,104],[523,81,389,109],[523,82,389,110],[523,85,389,113,"options"],[523,92,389,120],[523,93,389,121,"captchaToken"],[524,18,389,134],[525,16,390,20],[525,17,390,21],[526,16,391,20,"xform"],[526,21,391,25],[526,23,391,27,"fetch_1"],[526,30,391,34],[526,31,391,35,"_sessionResponsePassword"],[527,14,392,16],[527,15,392,17],[527,16,392,18],[528,12,393,12],[528,13,393,13],[528,19,394,17],[528,23,394,21],[528,30,394,28],[528,34,394,32,"credentials"],[528,45,394,43],[528,47,394,45],[529,14,395,16],[529,18,395,24,"phone"],[529,23,395,29],[529,26,395,53,"credentials"],[529,37,395,64],[529,38,395,24,"phone"],[529,43,395,29],[530,16,395,31,"password"],[530,26,395,39],[530,29,395,53,"credentials"],[530,40,395,64],[530,41,395,31,"password"],[530,49,395,39],[531,16,395,41,"options"],[531,25,395,48],[531,28,395,53,"credentials"],[531,39,395,64],[531,40,395,41,"options"],[531,47,395,48],[532,14,396,16,"res"],[532,17,396,19],[532,26,396,28],[532,27,396,29],[532,28,396,30],[532,30,396,32,"fetch_1"],[532,37,396,39],[532,38,396,40,"_request"],[532,46,396,48],[532,48,396,50],[532,52,396,54],[532,53,396,55,"fetch"],[532,58,396,60],[532,60,396,62],[532,66,396,68],[532,68,396,70],[532,71,396,73],[532,75,396,77],[532,76,396,78,"url"],[532,79,396,81],[532,107,396,109],[532,109,396,111],[533,16,397,20,"headers"],[533,23,397,27],[533,25,397,29],[533,29,397,33],[533,30,397,34,"headers"],[533,37,397,41],[534,16,398,20,"body"],[534,20,398,24],[534,22,398,26],[535,18,399,24,"phone"],[535,23,399,29],[535,25,399,24,"phone"],[535,30,399,29],[536,18,400,24,"password"],[536,26,400,32],[536,28,400,24,"password"],[536,38,400,32],[537,18,401,24,"gotrue_meta_security"],[537,38,401,44],[537,40,401,46],[538,20,401,48,"captcha_token"],[538,33,401,61],[538,35,401,63,"options"],[538,44,401,70],[538,49,401,75],[538,53,401,79],[538,57,401,83,"options"],[538,66,401,90],[538,71,401,95],[538,76,401,100],[538,77,401,101],[538,80,401,104],[538,85,401,109],[538,86,401,110],[538,89,401,113,"options"],[538,98,401,120],[538,99,401,121,"captchaToken"],[539,18,401,134],[540,16,402,20],[540,17,402,21],[541,16,403,20,"xform"],[541,21,403,25],[541,23,403,27,"fetch_1"],[541,30,403,34],[541,31,403,35,"_sessionResponsePassword"],[542,14,404,16],[542,15,404,17],[542,16,404,18],[543,12,405,12],[543,13,405,13],[543,19,406,17],[544,14,407,16],[544,20,407,22],[544,24,407,26,"errors_1"],[544,32,407,34],[544,33,407,35,"AuthInvalidCredentialsError"],[544,60,407,62],[544,61,407,63],[544,126,407,128],[544,127,407,129],[545,12,408,12],[546,12,409,12],[546,16,409,12,"_res2"],[546,21,409,12],[546,24,409,36,"res"],[546,27,409,39],[547,14,409,20,"data"],[547,18,409,24],[547,21,409,24,"_res2"],[547,26,409,24],[547,27,409,20,"data"],[547,31,409,24],[548,14,409,26,"error"],[548,19,409,31],[548,22,409,31,"_res2"],[548,27,409,31],[548,28,409,26,"error"],[548,33,409,31],[549,12,410,12],[549,16,410,16,"error"],[549,21,410,21],[549,23,410,23],[550,14,411,16],[550,21,411,23],[551,16,411,25,"data"],[551,20,411,29],[551,22,411,31],[552,18,411,33,"user"],[552,22,411,37],[552,24,411,39],[552,28,411,43],[553,18,411,45,"session"],[553,25,411,52],[553,27,411,54],[554,16,411,59],[554,17,411,60],[555,16,411,62,"error"],[555,21,411,67],[555,23,411,62,"error"],[556,14,411,68],[556,15,411,69],[557,12,412,12],[557,13,412,13],[557,19,413,17],[557,23,413,21],[557,24,413,22,"data"],[557,28,413,26],[557,32,413,30],[557,33,413,31,"data"],[557,37,413,35],[557,38,413,36,"session"],[557,45,413,43],[557,49,413,47],[557,50,413,48,"data"],[557,54,413,52],[557,55,413,53,"user"],[557,59,413,57],[557,61,413,59],[558,14,414,16],[558,21,414,23],[559,16,414,25,"data"],[559,20,414,29],[559,22,414,31],[560,18,414,33,"user"],[560,22,414,37],[560,24,414,39],[560,28,414,43],[561,18,414,45,"session"],[561,25,414,52],[561,27,414,54],[562,16,414,59],[562,17,414,60],[563,16,414,62,"error"],[563,21,414,67],[563,23,414,69],[563,27,414,73,"errors_1"],[563,35,414,81],[563,36,414,82,"AuthInvalidTokenResponseError"],[563,65,414,111],[563,66,414,112],[564,14,414,114],[564,15,414,115],[565,12,415,12],[566,12,416,12],[566,16,416,16,"data"],[566,20,416,20],[566,21,416,21,"session"],[566,28,416,28],[566,30,416,30],[567,14,417,16],[567,20,417,22],[567,24,417,26],[567,25,417,27,"_saveSession"],[567,37,417,39],[567,38,417,40,"data"],[567,42,417,44],[567,43,417,45,"session"],[567,50,417,52],[567,51,417,53],[568,14,418,16],[568,20,418,22],[568,24,418,26],[568,25,418,27,"_notifyAllSubscribers"],[568,46,418,48],[568,47,418,49],[568,58,418,60],[568,60,418,62,"data"],[568,64,418,66],[568,65,418,67,"session"],[568,72,418,74],[568,73,418,75],[569,12,419,12],[570,12,420,12],[570,19,420,19],[571,14,421,16,"data"],[571,18,421,20],[571,20,421,22,"Object"],[571,26,421,28],[571,27,421,29,"assign"],[571,33,421,35],[571,34,421,36],[572,16,421,38,"user"],[572,20,421,42],[572,22,421,44,"data"],[572,26,421,48],[572,27,421,49,"user"],[572,31,421,53],[573,16,421,55,"session"],[573,23,421,62],[573,25,421,64,"data"],[573,29,421,68],[573,30,421,69,"session"],[574,14,421,77],[574,15,421,78],[574,17,421,81,"data"],[574,21,421,85],[574,22,421,86,"weak_password"],[574,35,421,99],[574,38,421,102],[575,16,421,104,"weakPassword"],[575,28,421,116],[575,30,421,118,"data"],[575,34,421,122],[575,35,421,123,"weak_password"],[576,14,421,137],[576,15,421,138],[576,18,421,141],[576,22,421,146],[576,23,421,147],[577,14,422,16,"error"],[577,19,422,21],[577,21,422,16,"error"],[578,12,423,12],[578,13,423,13],[579,10,424,8],[579,11,424,9],[579,12,425,8],[579,19,425,15,"error"],[579,24,425,20],[579,26,425,22],[580,12,426,12],[580,16,426,16],[580,17,426,17],[580,18,426,18],[580,20,426,20,"errors_1"],[580,28,426,28],[580,29,426,29,"isAuthError"],[580,40,426,40],[580,42,426,42,"error"],[580,47,426,47],[580,48,426,48],[580,50,426,50],[581,14,427,16],[581,21,427,23],[582,16,427,25,"data"],[582,20,427,29],[582,22,427,31],[583,18,427,33,"user"],[583,22,427,37],[583,24,427,39],[583,28,427,43],[584,18,427,45,"session"],[584,25,427,52],[584,27,427,54],[585,16,427,59],[585,17,427,60],[586,16,427,62,"error"],[586,21,427,67],[586,23,427,62,"error"],[587,14,427,68],[587,15,427,69],[588,12,428,12],[589,12,429,12],[589,18,429,18,"error"],[589,23,429,23],[590,10,430,8],[591,8,431,4],[591,9,431,5],[592,8,431,5],[592,17,379,10,"signInWithPassword"],[592,35,379,28,"signInWithPassword"],[592,36,379,28,"_x7"],[592,39,379,28],[593,10,379,28],[593,17,379,28,"_signInWithPassword"],[593,36,379,28],[593,37,379,28,"apply"],[593,42,379,28],[593,49,379,28,"arguments"],[593,58,379,28],[594,8,379,28],[595,8,379,28],[595,15,379,10,"signInWithPassword"],[595,33,379,28],[596,6,379,28],[597,6,432,4],[598,0,433,0],[599,0,434,0],[600,0,435,0],[601,6,432,4],[602,4,432,4],[603,6,432,4,"key"],[603,9,432,4],[604,6,432,4,"value"],[604,11,432,4],[605,8,432,4],[605,12,432,4,"_signInWithOAuth"],[605,28,432,4],[605,31,432,4,"_asyncToGenerator"],[605,48,432,4],[605,49,436,4],[605,60,436,26,"credentials"],[605,71,436,37],[605,73,436,39],[606,10,437,8],[606,14,437,12,"_a"],[606,16,437,14],[606,18,437,16,"_b"],[606,20,437,18],[606,22,437,20,"_c"],[606,24,437,22],[606,26,437,24,"_d"],[606,28,437,26],[607,10,438,8],[607,23,438,21],[607,27,438,25],[607,28,438,26,"_handleProviderSignIn"],[607,49,438,47],[607,50,438,48,"credentials"],[607,61,438,59],[607,62,438,60,"provider"],[607,70,438,68],[607,72,438,70],[608,12,439,12,"redirectTo"],[608,22,439,22],[608,24,439,24],[608,25,439,25,"_a"],[608,27,439,27],[608,30,439,30,"credentials"],[608,41,439,41],[608,42,439,42,"options"],[608,49,439,49],[608,55,439,55],[608,59,439,59],[608,63,439,63,"_a"],[608,65,439,65],[608,70,439,70],[608,75,439,75],[608,76,439,76],[608,79,439,79],[608,84,439,84],[608,85,439,85],[608,88,439,88,"_a"],[608,90,439,90],[608,91,439,91,"redirectTo"],[608,101,439,101],[609,12,440,12,"scopes"],[609,18,440,18],[609,20,440,20],[609,21,440,21,"_b"],[609,23,440,23],[609,26,440,26,"credentials"],[609,37,440,37],[609,38,440,38,"options"],[609,45,440,45],[609,51,440,51],[609,55,440,55],[609,59,440,59,"_b"],[609,61,440,61],[609,66,440,66],[609,71,440,71],[609,72,440,72],[609,75,440,75],[609,80,440,80],[609,81,440,81],[609,84,440,84,"_b"],[609,86,440,86],[609,87,440,87,"scopes"],[609,93,440,93],[610,12,441,12,"queryParams"],[610,23,441,23],[610,25,441,25],[610,26,441,26,"_c"],[610,28,441,28],[610,31,441,31,"credentials"],[610,42,441,42],[610,43,441,43,"options"],[610,50,441,50],[610,56,441,56],[610,60,441,60],[610,64,441,64,"_c"],[610,66,441,66],[610,71,441,71],[610,76,441,76],[610,77,441,77],[610,80,441,80],[610,85,441,85],[610,86,441,86],[610,89,441,89,"_c"],[610,91,441,91],[610,92,441,92,"queryParams"],[610,103,441,103],[611,12,442,12,"skipBrowserRedirect"],[611,31,442,31],[611,33,442,33],[611,34,442,34,"_d"],[611,36,442,36],[611,39,442,39,"credentials"],[611,50,442,50],[611,51,442,51,"options"],[611,58,442,58],[611,64,442,64],[611,68,442,68],[611,72,442,72,"_d"],[611,74,442,74],[611,79,442,79],[611,84,442,84],[611,85,442,85],[611,88,442,88],[611,93,442,93],[611,94,442,94],[611,97,442,97,"_d"],[611,99,442,99],[611,100,442,100,"skipBrowserRedirect"],[612,10,443,8],[612,11,443,9],[612,12,443,10],[613,8,444,4],[613,9,444,5],[614,8,444,5],[614,17,436,10,"signInWithOAuth"],[614,32,436,25,"signInWithOAuth"],[614,33,436,25,"_x8"],[614,36,436,25],[615,10,436,25],[615,17,436,25,"_signInWithOAuth"],[615,33,436,25],[615,34,436,25,"apply"],[615,39,436,25],[615,46,436,25,"arguments"],[615,55,436,25],[616,8,436,25],[617,8,436,25],[617,15,436,10,"signInWithOAuth"],[617,30,436,25],[618,6,436,25],[619,6,445,4],[620,0,446,0],[621,0,447,0],[622,6,445,4],[623,4,445,4],[624,6,445,4,"key"],[624,9,445,4],[625,6,445,4,"value"],[625,11,445,4],[626,8,445,4],[626,12,445,4,"_exchangeCodeForSession2"],[626,36,445,4],[626,39,445,4,"_asyncToGenerator"],[626,56,445,4],[626,57,448,4],[626,68,448,33,"authCode"],[626,76,448,41],[626,78,448,43],[627,10,448,43],[627,14,448,43,"_this4"],[627,20,448,43],[628,10,449,8],[628,16,449,14],[628,20,449,18],[628,21,449,19,"initializePromise"],[628,38,449,36],[629,10,450,8],[629,17,450,15],[629,21,450,19],[629,22,450,20,"_acquireLock"],[629,34,450,32],[629,35,450,33],[629,36,450,34],[629,37,450,35],[629,52,450,35,"_asyncToGenerator"],[629,69,450,35],[629,70,450,37],[629,83,450,49],[630,12,451,12],[630,19,451,19,"_this4"],[630,25,451,23],[630,26,451,24,"_exchangeCodeForSession"],[630,49,451,47],[630,50,451,48,"authCode"],[630,58,451,56],[630,59,451,57],[631,10,452,8],[631,11,452,9],[631,13,452,10],[632,8,453,4],[632,9,453,5],[633,8,453,5],[633,17,448,10,"exchangeCodeForSession"],[633,39,448,32,"exchangeCodeForSession"],[633,40,448,32,"_x9"],[633,43,448,32],[634,10,448,32],[634,17,448,32,"_exchangeCodeForSession2"],[634,41,448,32],[634,42,448,32,"apply"],[634,47,448,32],[634,54,448,32,"arguments"],[634,63,448,32],[635,8,448,32],[636,8,448,32],[636,15,448,10,"exchangeCodeForSession"],[636,37,448,32],[637,6,448,32],[638,6,454,4],[639,0,455,0],[640,0,456,0],[641,0,457,0],[642,6,454,4],[643,4,454,4],[644,6,454,4,"key"],[644,9,454,4],[645,6,454,4,"value"],[645,11,454,4],[646,8,454,4],[646,12,454,4,"_signInWithWeb"],[646,26,454,4],[646,29,454,4,"_asyncToGenerator"],[646,46,454,4],[646,47,458,4],[646,58,458,25,"credentials"],[646,69,458,36],[646,71,458,38],[647,10,459,8],[647,14,459,16,"chain"],[647,19,459,21],[647,22,459,26,"credentials"],[647,33,459,37],[647,34,459,16,"chain"],[647,39,459,21],[648,10,460,8],[648,14,460,12,"chain"],[648,19,460,17],[648,24,460,22],[648,32,460,30],[648,34,460,32],[649,12,461,12],[649,25,461,25],[649,29,461,29],[649,30,461,30,"signInWithSolana"],[649,46,461,46],[649,47,461,47,"credentials"],[649,58,461,58],[649,59,461,59],[650,10,462,8],[651,10,463,8],[651,16,463,14],[651,20,463,18,"Error"],[651,25,463,23],[651,26,463,24],[651,67,463,65,"chain"],[651,72,463,70],[651,75,463,73],[651,76,463,74],[652,8,464,4],[652,9,464,5],[653,8,464,5],[653,17,458,10,"signInWithWeb3"],[653,31,458,24,"signInWithWeb3"],[653,32,458,24,"_x0"],[653,35,458,24],[654,10,458,24],[654,17,458,24,"_signInWithWeb"],[654,31,458,24],[654,32,458,24,"apply"],[654,37,458,24],[654,44,458,24,"arguments"],[654,53,458,24],[655,8,458,24],[656,8,458,24],[656,15,458,10,"signInWithWeb3"],[656,29,458,24],[657,6,458,24],[658,4,458,24],[659,6,458,24,"key"],[659,9,458,24],[660,6,458,24,"value"],[660,11,458,24],[661,8,458,24],[661,12,458,24,"_signInWithSolana"],[661,29,458,24],[661,32,458,24,"_asyncToGenerator"],[661,49,458,24],[661,50,465,4],[661,61,465,27,"credentials"],[661,72,465,38],[661,74,465,40],[662,10,466,8],[662,14,466,12,"_a"],[662,16,466,14],[662,18,466,16,"_b"],[662,20,466,18],[662,22,466,20,"_c"],[662,24,466,22],[662,26,466,24,"_d"],[662,28,466,26],[662,30,466,28,"_e"],[662,32,466,30],[662,34,466,32,"_f"],[662,36,466,34],[662,38,466,36,"_g"],[662,40,466,38],[662,42,466,40,"_h"],[662,44,466,42],[662,46,466,44,"_j"],[662,48,466,46],[662,50,466,48,"_k"],[662,52,466,50],[662,54,466,52,"_l"],[662,56,466,54],[662,58,466,56,"_m"],[662,60,466,58],[663,10,467,8],[663,14,467,12,"message"],[663,21,467,19],[664,10,468,8],[664,14,468,12,"signature"],[664,23,468,21],[665,10,469,8],[665,14,469,12],[665,23,469,21],[665,27,469,25,"credentials"],[665,38,469,36],[665,40,469,38],[666,12,470,12,"message"],[666,19,470,19],[666,22,470,22,"credentials"],[666,33,470,33],[666,34,470,34,"message"],[666,41,470,41],[667,12,471,12,"signature"],[667,21,471,21],[667,24,471,24,"credentials"],[667,35,471,35],[667,36,471,36,"signature"],[667,45,471,45],[668,10,472,8],[668,11,472,9],[668,17,473,13],[669,12,474,12],[669,16,474,20,"chain"],[669,21,474,25],[669,24,474,58,"credentials"],[669,35,474,69],[669,36,474,20,"chain"],[669,41,474,25],[670,14,474,27,"wallet"],[670,20,474,33],[670,23,474,58,"credentials"],[670,34,474,69],[670,35,474,27,"wallet"],[670,41,474,33],[671,14,474,35,"statement"],[671,23,474,44],[671,26,474,58,"credentials"],[671,37,474,69],[671,38,474,35,"statement"],[671,47,474,44],[672,14,474,46,"options"],[672,21,474,53],[672,24,474,58,"credentials"],[672,35,474,69],[672,36,474,46,"options"],[672,43,474,53],[673,12,475,12],[673,16,475,16,"resolvedWallet"],[673,30,475,30],[674,12,476,12],[674,16,476,16],[674,17,476,17],[674,18,476,18],[674,19,476,19],[674,21,476,21,"helpers_1"],[674,30,476,30],[674,31,476,31,"isBrowser"],[674,40,476,40],[674,42,476,42],[674,43,476,43],[674,45,476,45],[675,14,477,16],[675,18,477,20],[675,25,477,27,"wallet"],[675,31,477,33],[675,36,477,38],[675,44,477,46],[675,48,477,50],[675,50,477,52,"options"],[675,57,477,59],[675,62,477,64],[675,66,477,68],[675,70,477,72,"options"],[675,77,477,79],[675,82,477,84],[675,87,477,89],[675,88,477,90],[675,91,477,93],[675,96,477,98],[675,97,477,99],[675,100,477,102,"options"],[675,107,477,109],[675,108,477,110,"url"],[675,111,477,113],[675,112,477,114],[675,114,477,116],[676,16,478,20],[676,22,478,26],[676,26,478,30,"Error"],[676,31,478,35],[676,32,478,36],[676,119,478,123],[676,120,478,124],[677,14,479,16],[678,14,480,16,"resolvedWallet"],[678,28,480,30],[678,31,480,33,"wallet"],[678,37,480,39],[679,12,481,12],[679,13,481,13],[679,19,482,17],[679,23,482,21],[679,30,482,28,"wallet"],[679,36,482,34],[679,41,482,39],[679,49,482,47],[679,51,482,49],[680,14,483,16,"resolvedWallet"],[680,28,483,30],[680,31,483,33,"wallet"],[680,37,483,39],[681,12,484,12],[681,13,484,13],[681,19,485,17],[682,14,486,16],[682,18,486,22,"windowAny"],[682,27,486,31],[682,30,486,34,"window"],[682,36,486,40],[683,14,487,16],[683,18,487,20],[683,26,487,28],[683,30,487,32,"windowAny"],[683,39,487,41],[683,43,488,20],[683,50,488,27,"windowAny"],[683,59,488,36],[683,60,488,37,"solana"],[683,66,488,43],[683,71,488,48],[683,79,488,56],[683,84,489,22],[683,92,489,30],[683,96,489,34,"windowAny"],[683,105,489,43],[683,106,489,44,"solana"],[683,112,489,50],[683,116,489,54],[683,123,489,61,"windowAny"],[683,132,489,70],[683,133,489,71,"solana"],[683,139,489,77],[683,140,489,78,"signIn"],[683,146,489,84],[683,151,489,89],[683,161,489,99],[683,165,490,25],[683,178,490,38],[683,182,490,42,"windowAny"],[683,191,490,51],[683,192,490,52,"solana"],[683,198,490,58],[683,202,491,28],[683,209,491,35,"windowAny"],[683,218,491,44],[683,219,491,45,"solana"],[683,225,491,51],[683,226,491,52,"signMessage"],[683,237,491,63],[683,242,491,68],[683,252,491,79],[683,253,491,80],[683,255,491,82],[684,16,492,20,"resolvedWallet"],[684,30,492,34],[684,33,492,37,"windowAny"],[684,42,492,46],[684,43,492,47,"solana"],[684,49,492,53],[685,14,493,16],[685,15,493,17],[685,21,494,21],[686,16,495,20],[686,22,495,26],[686,26,495,30,"Error"],[686,31,495,35],[686,32,495,36],[686,343,495,347],[686,344,495,348],[687,14,496,16],[688,12,497,12],[689,12,498,12],[689,16,498,18,"url"],[689,19,498,21],[689,22,498,24],[689,26,498,28,"URL"],[689,29,498,31],[689,30,498,32],[689,31,498,33,"_a"],[689,33,498,35],[689,36,498,38,"options"],[689,43,498,45],[689,48,498,50],[689,52,498,54],[689,56,498,58,"options"],[689,63,498,65],[689,68,498,70],[689,73,498,75],[689,74,498,76],[689,77,498,79],[689,82,498,84],[689,83,498,85],[689,86,498,88,"options"],[689,93,498,95],[689,94,498,96,"url"],[689,97,498,99],[689,103,498,105],[689,107,498,109],[689,111,498,113,"_a"],[689,113,498,115],[689,118,498,120],[689,123,498,125],[689,124,498,126],[689,127,498,129,"_a"],[689,129,498,131],[689,132,498,134,"window"],[689,138,498,140],[689,139,498,141,"location"],[689,147,498,149],[689,148,498,150,"href"],[689,152,498,154],[689,153,498,155],[690,12,499,12],[690,16,499,16],[690,24,499,24],[690,28,499,28,"resolvedWallet"],[690,42,499,42],[690,46,499,46,"resolvedWallet"],[690,60,499,60],[690,61,499,61,"signIn"],[690,67,499,67],[690,69,499,69],[691,14,500,16],[691,18,500,22,"output"],[691,24,500,28],[691,33,500,37,"resolvedWallet"],[691,47,500,51],[691,48,500,52,"signIn"],[691,54,500,58],[691,55,500,59,"Object"],[691,61,500,65],[691,62,500,66,"assign"],[691,68,500,72],[691,69,500,73,"Object"],[691,75,500,79],[691,76,500,80,"assign"],[691,82,500,86],[691,83,500,87,"Object"],[691,89,500,93],[691,90,500,94,"assign"],[691,96,500,100],[691,97,500,101],[692,16,500,103,"issuedAt"],[692,24,500,111],[692,26,500,113],[692,30,500,117,"Date"],[692,34,500,121],[692,35,500,122],[692,36,500,123],[692,37,500,124,"toISOString"],[692,48,500,135],[692,49,500,136],[693,14,500,138],[693,15,500,139],[693,17,500,141,"options"],[693,24,500,148],[693,29,500,153],[693,33,500,157],[693,37,500,161,"options"],[693,44,500,168],[693,49,500,173],[693,54,500,178],[693,55,500,179],[693,58,500,182],[693,63,500,187],[693,64,500,188],[693,67,500,191,"options"],[693,74,500,198],[693,75,500,199,"signInWithSolana"],[693,91,500,215],[693,92,500,216],[693,94,500,218],[694,16,501,20],[695,16,502,20,"version"],[695,23,502,27],[695,25,502,29],[695,28,502,32],[696,16,502,34,"domain"],[696,22,502,40],[696,24,502,42,"url"],[696,27,502,45],[696,28,502,46,"host"],[696,32,502,50],[697,16,502,52,"uri"],[697,19,502,55],[697,21,502,57,"url"],[697,24,502,60],[697,25,502,61,"href"],[698,14,502,66],[698,15,502,67],[698,16,502,68],[698,18,502,71,"statement"],[698,27,502,80],[698,30,502,83],[699,16,502,85,"statement"],[699,25,502,94],[699,27,502,85,"statement"],[700,14,502,95],[700,15,502,96],[700,18,502,99],[700,22,502,104],[700,23,502,105],[700,24,502,106],[701,14,503,16],[701,18,503,20,"outputToProcess"],[701,33,503,35],[702,14,504,16],[702,18,504,20,"Array"],[702,23,504,25],[702,24,504,26,"isArray"],[702,31,504,33],[702,32,504,34,"output"],[702,38,504,40],[702,39,504,41],[702,43,504,45,"output"],[702,49,504,51],[702,50,504,52],[702,51,504,53],[702,52,504,54],[702,56,504,58],[702,63,504,65,"output"],[702,69,504,71],[702,70,504,72],[702,71,504,73],[702,72,504,74],[702,77,504,79],[702,85,504,87],[702,87,504,89],[703,16,505,20,"outputToProcess"],[703,31,505,35],[703,34,505,38,"output"],[703,40,505,44],[703,41,505,45],[703,42,505,46],[703,43,505,47],[704,14,506,16],[704,15,506,17],[704,21,507,21],[704,25,507,25,"output"],[704,31,507,31],[704,35,508,20],[704,42,508,27,"output"],[704,48,508,33],[704,53,508,38],[704,61,508,46],[704,65,509,20],[704,80,509,35],[704,84,509,39,"output"],[704,90,509,45],[704,94,510,20],[704,105,510,31],[704,109,510,35,"output"],[704,115,510,41],[704,117,510,43],[705,16,511,20,"outputToProcess"],[705,31,511,35],[705,34,511,38,"output"],[705,40,511,44],[706,14,512,16],[706,15,512,17],[706,21,513,21],[707,16,514,20],[707,22,514,26],[707,26,514,30,"Error"],[707,31,514,35],[707,32,514,36],[707,103,514,107],[707,104,514,108],[708,14,515,16],[709,14,516,16],[709,18,516,20],[709,33,516,35],[709,37,516,39,"outputToProcess"],[709,52,516,54],[709,56,517,20],[709,67,517,31],[709,71,517,35,"outputToProcess"],[709,86,517,50],[709,91,518,21],[709,98,518,28,"outputToProcess"],[709,113,518,43],[709,114,518,44,"signedMessage"],[709,127,518,57],[709,132,518,62],[709,140,518,70],[709,144,519,24,"outputToProcess"],[709,159,519,39],[709,160,519,40,"signedMessage"],[709,173,519,53],[709,185,519,65,"Uint8Array"],[709,195,519,75],[709,196,519,76],[709,200,520,20,"outputToProcess"],[709,215,520,35],[709,216,520,36,"signature"],[709,225,520,45],[709,237,520,57,"Uint8Array"],[709,247,520,67],[709,249,520,69],[710,16,521,20,"message"],[710,23,521,27],[710,26,522,24],[710,33,522,31,"outputToProcess"],[710,48,522,46],[710,49,522,47,"signedMessage"],[710,62,522,60],[710,67,522,65],[710,75,522,73],[710,78,523,30,"outputToProcess"],[710,93,523,45],[710,94,523,46,"signedMessage"],[710,107,523,59],[710,110,524,30],[710,114,524,34,"TextDecoder"],[710,125,524,45],[710,126,524,46],[710,127,524,47],[710,128,524,48,"decode"],[710,134,524,54],[710,135,524,55,"outputToProcess"],[710,150,524,70],[710,151,524,71,"signedMessage"],[710,164,524,84],[710,165,524,85],[711,16,525,20,"signature"],[711,25,525,29],[711,28,525,32,"outputToProcess"],[711,43,525,47],[711,44,525,48,"signature"],[711,53,525,57],[712,14,526,16],[712,15,526,17],[712,21,527,21],[713,16,528,20],[713,22,528,26],[713,26,528,30,"Error"],[713,31,528,35],[713,32,528,36],[713,138,528,142],[713,139,528,143],[714,14,529,16],[715,12,530,12],[715,13,530,13],[715,19,531,17],[716,14,532,16],[716,18,532,20],[716,20,532,22],[716,33,532,35],[716,37,532,39,"resolvedWallet"],[716,51,532,53],[716,52,532,54],[716,56,533,20],[716,63,533,27,"resolvedWallet"],[716,77,533,41],[716,78,533,42,"signMessage"],[716,89,533,53],[716,94,533,58],[716,104,533,68],[716,108,534,20],[716,110,534,22],[716,121,534,33],[716,125,534,37,"resolvedWallet"],[716,139,534,51],[716,140,534,52],[716,144,535,20],[716,151,535,27,"resolvedWallet"],[716,165,535,41],[716,170,535,46],[716,178,535,54],[716,182,536,20],[716,183,536,21,"resolvedWallet"],[716,197,536,35],[716,198,536,36,"publicKey"],[716,207,536,45],[716,211,537,20],[716,213,537,22],[716,223,537,32],[716,227,537,36,"resolvedWallet"],[716,241,537,50],[716,242,537,51,"publicKey"],[716,251,537,60],[716,252,537,61],[716,256,538,20],[716,263,538,27,"resolvedWallet"],[716,277,538,41],[716,278,538,42,"publicKey"],[716,287,538,51],[716,288,538,52,"toBase58"],[716,296,538,60],[716,301,538,65],[716,311,538,75],[716,313,538,77],[717,16,539,20],[717,22,539,26],[717,26,539,30,"Error"],[717,31,539,35],[717,32,539,36],[717,129,539,133],[717,130,539,134],[718,14,540,16],[719,14,541,16,"message"],[719,21,541,23],[719,24,541,26],[719,25,542,20],[719,28,542,23,"url"],[719,31,542,26],[719,32,542,27,"host"],[719,36,542,31],[719,85,542,80],[719,87,543,20,"resolvedWallet"],[719,101,543,34],[719,102,543,35,"publicKey"],[719,111,543,44],[719,112,543,45,"toBase58"],[719,120,543,53],[719,121,543,54],[719,122,543,55],[719,124,543,55,"concat"],[719,130,543,55],[719,131,543,55,"_toConsumableArray"],[719,149,543,55],[719,150,544,24,"statement"],[719,159,544,33],[719,162,544,36],[719,163,544,37],[719,165,544,39],[719,167,544,41,"statement"],[719,176,544,50],[719,178,544,52],[719,180,544,54],[719,181,544,55],[719,184,544,58],[719,185,544,59],[719,187,544,61],[719,188,544,62],[719,192,545,20],[719,204,545,32],[719,206,546,20],[719,214,546,28,"url"],[719,217,546,31],[719,218,546,32,"href"],[719,222,546,36],[719,224,546,38],[719,226,547,20],[719,240,547,34],[719,241,547,35,"_c"],[719,243,547,37],[719,246,547,40],[719,247,547,41,"_b"],[719,249,547,43],[719,252,547,46,"options"],[719,259,547,53],[719,264,547,58],[719,268,547,62],[719,272,547,66,"options"],[719,279,547,73],[719,284,547,78],[719,289,547,83],[719,290,547,84],[719,293,547,87],[719,298,547,92],[719,299,547,93],[719,302,547,96,"options"],[719,309,547,103],[719,310,547,104,"signInWithSolana"],[719,326,547,120],[719,332,547,126],[719,336,547,130],[719,340,547,134,"_b"],[719,342,547,136],[719,347,547,141],[719,352,547,146],[719,353,547,147],[719,356,547,150],[719,361,547,155],[719,362,547,156],[719,365,547,159,"_b"],[719,367,547,161],[719,368,547,162,"issuedAt"],[719,376,547,170],[719,382,547,176],[719,386,547,180],[719,390,547,184,"_c"],[719,392,547,186],[719,397,547,191],[719,402,547,196],[719,403,547,197],[719,406,547,200,"_c"],[719,408,547,202],[719,411,547,205],[719,415,547,209,"Date"],[719,419,547,213],[719,420,547,214],[719,421,547,215],[719,422,547,216,"toISOString"],[719,433,547,227],[719,434,547,228],[719,435,547,229],[719,437,547,231],[719,440,547,231,"_toConsumableArray"],[719,458,547,231],[719,459,548,24],[719,460,548,25],[719,461,548,26,"_d"],[719,463,548,28],[719,466,548,31,"options"],[719,473,548,38],[719,478,548,43],[719,482,548,47],[719,486,548,51,"options"],[719,493,548,58],[719,498,548,63],[719,503,548,68],[719,504,548,69],[719,507,548,72],[719,512,548,77],[719,513,548,78],[719,516,548,81,"options"],[719,523,548,88],[719,524,548,89,"signInWithSolana"],[719,540,548,105],[719,546,548,111],[719,550,548,115],[719,554,548,119,"_d"],[719,556,548,121],[719,561,548,126],[719,566,548,131],[719,567,548,132],[719,570,548,135],[719,575,548,140],[719,576,548,141],[719,579,548,144,"_d"],[719,581,548,146],[719,582,548,147,"notBefore"],[719,591,548,156],[719,595,549,26],[719,596,549,27],[719,611,549,42,"options"],[719,618,549,49],[719,619,549,50,"signInWithSolana"],[719,635,549,66],[719,636,549,67,"notBefore"],[719,645,549,76],[719,647,549,78],[719,648,549,79],[719,651,550,26],[719,653,550,28],[719,656,550,28,"_toConsumableArray"],[719,674,550,28],[719,675,551,24],[719,676,551,25],[719,677,551,26,"_e"],[719,679,551,28],[719,682,551,31,"options"],[719,689,551,38],[719,694,551,43],[719,698,551,47],[719,702,551,51,"options"],[719,709,551,58],[719,714,551,63],[719,719,551,68],[719,720,551,69],[719,723,551,72],[719,728,551,77],[719,729,551,78],[719,732,551,81,"options"],[719,739,551,88],[719,740,551,89,"signInWithSolana"],[719,756,551,105],[719,762,551,111],[719,766,551,115],[719,770,551,119,"_e"],[719,772,551,121],[719,777,551,126],[719,782,551,131],[719,783,551,132],[719,786,551,135],[719,791,551,140],[719,792,551,141],[719,795,551,144,"_e"],[719,797,551,146],[719,798,551,147,"expirationTime"],[719,812,551,161],[719,816,552,26],[719,817,552,27],[719,837,552,47,"options"],[719,844,552,54],[719,845,552,55,"signInWithSolana"],[719,861,552,71],[719,862,552,72,"expirationTime"],[719,876,552,86],[719,878,552,88],[719,879,552,89],[719,882,553,26],[719,884,553,28],[719,887,553,28,"_toConsumableArray"],[719,905,553,28],[719,906,554,24],[719,907,554,25],[719,908,554,26,"_f"],[719,910,554,28],[719,913,554,31,"options"],[719,920,554,38],[719,925,554,43],[719,929,554,47],[719,933,554,51,"options"],[719,940,554,58],[719,945,554,63],[719,950,554,68],[719,951,554,69],[719,954,554,72],[719,959,554,77],[719,960,554,78],[719,963,554,81,"options"],[719,970,554,88],[719,971,554,89,"signInWithSolana"],[719,987,554,105],[719,993,554,111],[719,997,554,115],[719,1001,554,119,"_f"],[719,1003,554,121],[719,1008,554,126],[719,1013,554,131],[719,1014,554,132],[719,1017,554,135],[719,1022,554,140],[719,1023,554,141],[719,1026,554,144,"_f"],[719,1028,554,146],[719,1029,554,147,"chainId"],[719,1036,554,154],[719,1040,555,26],[719,1041,555,27],[719,1054,555,40,"options"],[719,1061,555,47],[719,1062,555,48,"signInWithSolana"],[719,1078,555,64],[719,1079,555,65,"chainId"],[719,1086,555,72],[719,1088,555,74],[719,1089,555,75],[719,1092,556,26],[719,1094,556,28],[719,1097,556,28,"_toConsumableArray"],[719,1115,556,28],[719,1116,557,24],[719,1117,557,25],[719,1118,557,26,"_g"],[719,1120,557,28],[719,1123,557,31,"options"],[719,1130,557,38],[719,1135,557,43],[719,1139,557,47],[719,1143,557,51,"options"],[719,1150,557,58],[719,1155,557,63],[719,1160,557,68],[719,1161,557,69],[719,1164,557,72],[719,1169,557,77],[719,1170,557,78],[719,1173,557,81,"options"],[719,1180,557,88],[719,1181,557,89,"signInWithSolana"],[719,1197,557,105],[719,1203,557,111],[719,1207,557,115],[719,1211,557,119,"_g"],[719,1213,557,121],[719,1218,557,126],[719,1223,557,131],[719,1224,557,132],[719,1227,557,135],[719,1232,557,140],[719,1233,557,141],[719,1236,557,144,"_g"],[719,1238,557,146],[719,1239,557,147,"nonce"],[719,1244,557,152],[719,1248,557,156],[719,1249,557,157],[719,1259,557,167,"options"],[719,1266,557,174],[719,1267,557,175,"signInWithSolana"],[719,1283,557,191],[719,1284,557,192,"nonce"],[719,1289,557,197],[719,1291,557,199],[719,1292,557,200],[719,1295,557,203],[719,1297,557,205],[719,1300,557,205,"_toConsumableArray"],[719,1318,557,205],[719,1319,558,24],[719,1320,558,25],[719,1321,558,26,"_h"],[719,1323,558,28],[719,1326,558,31,"options"],[719,1333,558,38],[719,1338,558,43],[719,1342,558,47],[719,1346,558,51,"options"],[719,1353,558,58],[719,1358,558,63],[719,1363,558,68],[719,1364,558,69],[719,1367,558,72],[719,1372,558,77],[719,1373,558,78],[719,1376,558,81,"options"],[719,1383,558,88],[719,1384,558,89,"signInWithSolana"],[719,1400,558,105],[719,1406,558,111],[719,1410,558,115],[719,1414,558,119,"_h"],[719,1416,558,121],[719,1421,558,126],[719,1426,558,131],[719,1427,558,132],[719,1430,558,135],[719,1435,558,140],[719,1436,558,141],[719,1439,558,144,"_h"],[719,1441,558,146],[719,1442,558,147,"requestId"],[719,1451,558,156],[719,1455,559,26],[719,1456,559,27],[719,1471,559,42,"options"],[719,1478,559,49],[719,1479,559,50,"signInWithSolana"],[719,1495,559,66],[719,1496,559,67,"requestId"],[719,1505,559,76],[719,1507,559,78],[719,1508,559,79],[719,1511,560,26],[719,1513,560,28],[719,1516,560,28,"_toConsumableArray"],[719,1534,560,28],[719,1535,561,24],[719,1536,561,25],[719,1537,561,26,"_k"],[719,1539,561,28],[719,1542,561,31],[719,1543,561,32,"_j"],[719,1545,561,34],[719,1548,561,37,"options"],[719,1555,561,44],[719,1560,561,49],[719,1564,561,53],[719,1568,561,57,"options"],[719,1575,561,64],[719,1580,561,69],[719,1585,561,74],[719,1586,561,75],[719,1589,561,78],[719,1594,561,83],[719,1595,561,84],[719,1598,561,87,"options"],[719,1605,561,94],[719,1606,561,95,"signInWithSolana"],[719,1622,561,111],[719,1628,561,117],[719,1632,561,121],[719,1636,561,125,"_j"],[719,1638,561,127],[719,1643,561,132],[719,1648,561,137],[719,1649,561,138],[719,1652,561,141],[719,1657,561,146],[719,1658,561,147],[719,1661,561,150,"_j"],[719,1663,561,152],[719,1664,561,153,"resources"],[719,1673,561,162],[719,1679,561,168],[719,1683,561,172],[719,1687,561,176,"_k"],[719,1689,561,178],[719,1694,561,183],[719,1699,561,188],[719,1700,561,189],[719,1703,561,192],[719,1708,561,197],[719,1709,561,198],[719,1712,561,201,"_k"],[719,1714,561,203],[719,1715,561,204,"length"],[719,1721,561,210],[719,1726,563,28],[719,1737,563,39],[719,1739,563,39,"concat"],[719,1745,563,39],[719,1746,563,39,"_toConsumableArray"],[719,1764,563,39],[719,1765,564,31,"options"],[719,1772,564,38],[719,1773,564,39,"signInWithSolana"],[719,1789,564,55],[719,1790,564,56,"resources"],[719,1799,564,65],[719,1800,564,66,"map"],[719,1803,564,69],[719,1804,564,70],[719,1814,564,71,"resource"],[719,1822,564,79],[720,16,564,79],[720,23,564,84],[720,28,564,89,"resource"],[720,36,564,97],[720,38,564,99],[721,14,564,99],[721,16,564,100],[721,21,566,26],[721,23,566,28],[721,26,567,18,"join"],[721,30,567,22],[721,31,567,23],[721,35,567,27],[721,36,567,28],[722,14,568,16],[722,18,568,22,"maybeSignature"],[722,32,568,36],[722,41,568,45,"resolvedWallet"],[722,55,568,59],[722,56,568,60,"signMessage"],[722,67,568,71],[722,68,568,72],[722,72,568,76,"TextEncoder"],[722,83,568,87],[722,84,568,88],[722,85,568,89],[722,86,568,90,"encode"],[722,92,568,96],[722,93,568,97,"message"],[722,100,568,104],[722,101,568,105],[722,103,568,107],[722,109,568,113],[722,110,568,114],[723,14,569,16],[723,18,569,20],[723,19,569,21,"maybeSignature"],[723,33,569,35],[723,37,569,39],[723,39,569,41,"maybeSignature"],[723,53,569,55],[723,65,569,67,"Uint8Array"],[723,75,569,77],[723,76,569,78],[723,78,569,80],[724,16,570,20],[724,22,570,26],[724,26,570,30,"Error"],[724,31,570,35],[724,32,570,36],[724,106,570,110],[724,107,570,111],[725,14,571,16],[726,14,572,16,"signature"],[726,23,572,25],[726,26,572,28,"maybeSignature"],[726,40,572,42],[727,12,573,12],[728,10,574,8],[729,10,575,8],[729,14,575,12],[730,12,576,12],[730,16,576,12,"_yield3"],[730,23,576,12],[730,32,576,42],[730,33,576,43],[730,34,576,44],[730,36,576,46,"fetch_1"],[730,43,576,53],[730,44,576,54,"_request"],[730,52,576,62],[730,54,576,64],[730,58,576,68],[730,59,576,69,"fetch"],[730,64,576,74],[730,66,576,76],[730,72,576,82],[730,74,576,84],[730,77,576,87],[730,81,576,91],[730,82,576,92,"url"],[730,85,576,95],[730,109,576,119],[730,111,576,121],[731,16,577,16,"headers"],[731,23,577,23],[731,25,577,25],[731,29,577,29],[731,30,577,30,"headers"],[731,37,577,37],[732,16,578,16,"body"],[732,20,578,20],[732,22,578,22,"Object"],[732,28,578,28],[732,29,578,29,"assign"],[732,35,578,35],[732,36,578,36],[733,18,578,38,"chain"],[733,23,578,43],[733,25,578,45],[733,33,578,53],[734,18,578,55,"message"],[734,25,578,62],[734,27,578,55,"message"],[734,34,578,62],[735,18,578,64,"signature"],[735,27,578,73],[735,29,578,75],[735,30,578,76],[735,31,578,77],[735,33,578,79,"base64url_1"],[735,44,578,90],[735,45,578,91,"bytesToBase64URL"],[735,61,578,107],[735,63,578,109,"signature"],[735,72,578,118],[736,16,578,120],[736,17,578,121],[736,19,578,124],[736,20,578,125],[736,21,578,126,"_l"],[736,23,578,128],[736,26,578,131,"credentials"],[736,37,578,142],[736,38,578,143,"options"],[736,45,578,150],[736,51,578,156],[736,55,578,160],[736,59,578,164,"_l"],[736,61,578,166],[736,66,578,171],[736,71,578,176],[736,72,578,177],[736,75,578,180],[736,80,578,185],[736,81,578,186],[736,84,578,189,"_l"],[736,86,578,191],[736,87,578,192,"captchaToken"],[736,99,578,204],[736,103,579,22],[737,18,579,24,"gotrue_meta_security"],[737,38,579,44],[737,40,579,46],[738,20,579,48,"captcha_token"],[738,33,579,61],[738,35,579,63],[738,36,579,64,"_m"],[738,38,579,66],[738,41,579,69,"credentials"],[738,52,579,80],[738,53,579,81,"options"],[738,60,579,88],[738,66,579,94],[738,70,579,98],[738,74,579,102,"_m"],[738,76,579,104],[738,81,579,109],[738,86,579,114],[738,87,579,115],[738,90,579,118],[738,95,579,123],[738,96,579,124],[738,99,579,127,"_m"],[738,101,579,129],[738,102,579,130,"captchaToken"],[739,18,579,143],[740,16,579,145],[740,17,579,146],[740,20,580,22],[740,24,580,27],[740,25,580,28],[741,16,581,16,"xform"],[741,21,581,21],[741,23,581,23,"fetch_1"],[741,30,581,30],[741,31,581,31,"_sessionResponse"],[742,14,582,12],[742,15,582,13],[742,16,582,14],[743,14,576,20,"data"],[743,18,576,24],[743,21,576,24,"_yield3"],[743,28,576,24],[743,29,576,20,"data"],[743,33,576,24],[744,14,576,26,"error"],[744,19,576,31],[744,22,576,31,"_yield3"],[744,29,576,31],[744,30,576,26,"error"],[744,35,576,31],[745,12,583,12],[745,16,583,16,"error"],[745,21,583,21],[745,23,583,23],[746,14,584,16],[746,20,584,22,"error"],[746,25,584,27],[747,12,585,12],[748,12,586,12],[748,16,586,16],[748,17,586,17,"data"],[748,21,586,21],[748,25,586,25],[748,26,586,26,"data"],[748,30,586,30],[748,31,586,31,"session"],[748,38,586,38],[748,42,586,42],[748,43,586,43,"data"],[748,47,586,47],[748,48,586,48,"user"],[748,52,586,52],[748,54,586,54],[749,14,587,16],[749,21,587,23],[750,16,588,20,"data"],[750,20,588,24],[750,22,588,26],[751,18,588,28,"user"],[751,22,588,32],[751,24,588,34],[751,28,588,38],[752,18,588,40,"session"],[752,25,588,47],[752,27,588,49],[753,16,588,54],[753,17,588,55],[754,16,589,20,"error"],[754,21,589,25],[754,23,589,27],[754,27,589,31,"errors_1"],[754,35,589,39],[754,36,589,40,"AuthInvalidTokenResponseError"],[754,65,589,69],[754,66,589,70],[755,14,590,16],[755,15,590,17],[756,12,591,12],[757,12,592,12],[757,16,592,16,"data"],[757,20,592,20],[757,21,592,21,"session"],[757,28,592,28],[757,30,592,30],[758,14,593,16],[758,20,593,22],[758,24,593,26],[758,25,593,27,"_saveSession"],[758,37,593,39],[758,38,593,40,"data"],[758,42,593,44],[758,43,593,45,"session"],[758,50,593,52],[758,51,593,53],[759,14,594,16],[759,20,594,22],[759,24,594,26],[759,25,594,27,"_notifyAllSubscribers"],[759,46,594,48],[759,47,594,49],[759,58,594,60],[759,60,594,62,"data"],[759,64,594,66],[759,65,594,67,"session"],[759,72,594,74],[759,73,594,75],[760,12,595,12],[761,12,596,12],[761,19,596,19],[762,14,596,21,"data"],[762,18,596,25],[762,20,596,27,"Object"],[762,26,596,33],[762,27,596,34,"assign"],[762,33,596,40],[762,34,596,41],[762,35,596,42],[762,36,596,43],[762,38,596,45,"data"],[762,42,596,49],[762,43,596,50],[763,14,596,52,"error"],[763,19,596,57],[763,21,596,52,"error"],[764,12,596,58],[764,13,596,59],[765,10,597,8],[765,11,597,9],[765,12,598,8],[765,19,598,15,"error"],[765,24,598,20],[765,26,598,22],[766,12,599,12],[766,16,599,16],[766,17,599,17],[766,18,599,18],[766,20,599,20,"errors_1"],[766,28,599,28],[766,29,599,29,"isAuthError"],[766,40,599,40],[766,42,599,42,"error"],[766,47,599,47],[766,48,599,48],[766,50,599,50],[767,14,600,16],[767,21,600,23],[768,16,600,25,"data"],[768,20,600,29],[768,22,600,31],[769,18,600,33,"user"],[769,22,600,37],[769,24,600,39],[769,28,600,43],[770,18,600,45,"session"],[770,25,600,52],[770,27,600,54],[771,16,600,59],[771,17,600,60],[772,16,600,62,"error"],[772,21,600,67],[772,23,600,62,"error"],[773,14,600,68],[773,15,600,69],[774,12,601,12],[775,12,602,12],[775,18,602,18,"error"],[775,23,602,23],[776,10,603,8],[777,8,604,4],[777,9,604,5],[778,8,604,5],[778,17,465,10,"signInWithSolana"],[778,33,465,26,"signInWithSolana"],[778,34,465,26,"_x1"],[778,37,465,26],[779,10,465,26],[779,17,465,26,"_signInWithSolana"],[779,34,465,26],[779,35,465,26,"apply"],[779,40,465,26],[779,47,465,26,"arguments"],[779,56,465,26],[780,8,465,26],[781,8,465,26],[781,15,465,10,"signInWithSolana"],[781,31,465,26],[782,6,465,26],[783,4,465,26],[784,6,465,26,"key"],[784,9,465,26],[785,6,465,26,"value"],[785,11,465,26],[786,8,465,26],[786,12,465,26,"_exchangeCodeForSession3"],[786,36,465,26],[786,39,465,26,"_asyncToGenerator"],[786,56,465,26],[786,57,605,4],[786,68,605,34,"authCode"],[786,76,605,42],[786,78,605,44],[787,10,606,8],[787,14,606,14,"storageItem"],[787,25,606,25],[787,34,606,34],[787,35,606,35],[787,36,606,36],[787,38,606,38,"helpers_1"],[787,47,606,47],[787,48,606,48,"getItemAsync"],[787,60,606,60],[787,62,606,62],[787,66,606,66],[787,67,606,67,"storage"],[787,74,606,74],[787,76,606,76],[787,79,606,79],[787,83,606,83],[787,84,606,84,"storageKey"],[787,94,606,94],[787,110,606,110],[787,111,606,111],[788,10,607,8],[788,14,607,8,"_split"],[788,20,607,8],[788,23,607,45],[788,24,607,46,"storageItem"],[788,35,607,57],[788,40,607,62],[788,44,607,66],[788,48,607,70,"storageItem"],[788,59,607,81],[788,64,607,86],[788,69,607,91],[788,70,607,92],[788,73,607,95,"storageItem"],[788,84,607,106],[788,87,607,109],[788,89,607,111],[788,91,607,113,"split"],[788,96,607,118],[788,97,607,119],[788,100,607,122],[788,101,607,123],[789,12,607,123,"_split2"],[789,19,607,123],[789,22,607,123,"_slicedToArray"],[789,36,607,123],[789,37,607,123,"_split"],[789,43,607,123],[790,12,607,15,"codeVerifier"],[790,24,607,27],[790,27,607,27,"_split2"],[790,34,607,27],[791,12,607,29,"redirectType"],[791,24,607,41],[791,27,607,41,"_split2"],[791,34,607,41],[792,10,608,8],[792,14,608,12],[793,12,609,12],[793,16,609,12,"_yield4"],[793,23,609,12],[793,32,609,42],[793,33,609,43],[793,34,609,44],[793,36,609,46,"fetch_1"],[793,43,609,53],[793,44,609,54,"_request"],[793,52,609,62],[793,54,609,64],[793,58,609,68],[793,59,609,69,"fetch"],[793,64,609,74],[793,66,609,76],[793,72,609,82],[793,74,609,84],[793,77,609,87],[793,81,609,91],[793,82,609,92,"url"],[793,85,609,95],[793,109,609,119],[793,111,609,121],[794,16,610,16,"headers"],[794,23,610,23],[794,25,610,25],[794,29,610,29],[794,30,610,30,"headers"],[794,37,610,37],[795,16,611,16,"body"],[795,20,611,20],[795,22,611,22],[796,18,612,20,"auth_code"],[796,27,612,29],[796,29,612,31,"authCode"],[796,37,612,39],[797,18,613,20,"code_verifier"],[797,31,613,33],[797,33,613,35,"codeVerifier"],[798,16,614,16],[798,17,614,17],[799,16,615,16,"xform"],[799,21,615,21],[799,23,615,23,"fetch_1"],[799,30,615,30],[799,31,615,31,"_sessionResponse"],[800,14,616,12],[800,15,616,13],[800,16,616,14],[801,14,609,20,"data"],[801,18,609,24],[801,21,609,24,"_yield4"],[801,28,609,24],[801,29,609,20,"data"],[801,33,609,24],[802,14,609,26,"error"],[802,19,609,31],[802,22,609,31,"_yield4"],[802,29,609,31],[802,30,609,26,"error"],[802,35,609,31],[803,12,617,12],[803,18,617,18],[803,19,617,19],[803,20,617,20],[803,22,617,22,"helpers_1"],[803,31,617,31],[803,32,617,32,"removeItemAsync"],[803,47,617,47],[803,49,617,49],[803,53,617,53],[803,54,617,54,"storage"],[803,61,617,61],[803,63,617,63],[803,66,617,66],[803,70,617,70],[803,71,617,71,"storageKey"],[803,81,617,81],[803,97,617,97],[803,98,617,98],[804,12,618,12],[804,16,618,16,"error"],[804,21,618,21],[804,23,618,23],[805,14,619,16],[805,20,619,22,"error"],[805,25,619,27],[806,12,620,12],[807,12,621,12],[807,16,621,16],[807,17,621,17,"data"],[807,21,621,21],[807,25,621,25],[807,26,621,26,"data"],[807,30,621,30],[807,31,621,31,"session"],[807,38,621,38],[807,42,621,42],[807,43,621,43,"data"],[807,47,621,47],[807,48,621,48,"user"],[807,52,621,52],[807,54,621,54],[808,14,622,16],[808,21,622,23],[809,16,623,20,"data"],[809,20,623,24],[809,22,623,26],[810,18,623,28,"user"],[810,22,623,32],[810,24,623,34],[810,28,623,38],[811,18,623,40,"session"],[811,25,623,47],[811,27,623,49],[811,31,623,53],[812,18,623,55,"redirectType"],[812,30,623,67],[812,32,623,69],[813,16,623,74],[813,17,623,75],[814,16,624,20,"error"],[814,21,624,25],[814,23,624,27],[814,27,624,31,"errors_1"],[814,35,624,39],[814,36,624,40,"AuthInvalidTokenResponseError"],[814,65,624,69],[814,66,624,70],[815,14,625,16],[815,15,625,17],[816,12,626,12],[817,12,627,12],[817,16,627,16,"data"],[817,20,627,20],[817,21,627,21,"session"],[817,28,627,28],[817,30,627,30],[818,14,628,16],[818,20,628,22],[818,24,628,26],[818,25,628,27,"_saveSession"],[818,37,628,39],[818,38,628,40,"data"],[818,42,628,44],[818,43,628,45,"session"],[818,50,628,52],[818,51,628,53],[819,14,629,16],[819,20,629,22],[819,24,629,26],[819,25,629,27,"_notifyAllSubscribers"],[819,46,629,48],[819,47,629,49],[819,58,629,60],[819,60,629,62,"data"],[819,64,629,66],[819,65,629,67,"session"],[819,72,629,74],[819,73,629,75],[820,12,630,12],[821,12,631,12],[821,19,631,19],[822,14,631,21,"data"],[822,18,631,25],[822,20,631,27,"Object"],[822,26,631,33],[822,27,631,34,"assign"],[822,33,631,40],[822,34,631,41,"Object"],[822,40,631,47],[822,41,631,48,"assign"],[822,47,631,54],[822,48,631,55],[822,49,631,56],[822,50,631,57],[822,52,631,59,"data"],[822,56,631,63],[822,57,631,64],[822,59,631,66],[823,16,631,68,"redirectType"],[823,28,631,80],[823,30,631,82,"redirectType"],[823,42,631,94],[823,47,631,99],[823,51,631,103],[823,55,631,107,"redirectType"],[823,67,631,119],[823,72,631,124],[823,77,631,129],[823,78,631,130],[823,81,631,133,"redirectType"],[823,93,631,145],[823,96,631,148],[824,14,631,153],[824,15,631,154],[824,16,631,155],[825,14,631,157,"error"],[825,19,631,162],[825,21,631,157,"error"],[826,12,631,163],[826,13,631,164],[827,10,632,8],[827,11,632,9],[827,12,633,8],[827,19,633,15,"error"],[827,24,633,20],[827,26,633,22],[828,12,634,12],[828,16,634,16],[828,17,634,17],[828,18,634,18],[828,20,634,20,"errors_1"],[828,28,634,28],[828,29,634,29,"isAuthError"],[828,40,634,40],[828,42,634,42,"error"],[828,47,634,47],[828,48,634,48],[828,50,634,50],[829,14,635,16],[829,21,635,23],[830,16,635,25,"data"],[830,20,635,29],[830,22,635,31],[831,18,635,33,"user"],[831,22,635,37],[831,24,635,39],[831,28,635,43],[832,18,635,45,"session"],[832,25,635,52],[832,27,635,54],[832,31,635,58],[833,18,635,60,"redirectType"],[833,30,635,72],[833,32,635,74],[834,16,635,79],[834,17,635,80],[835,16,635,82,"error"],[835,21,635,87],[835,23,635,82,"error"],[836,14,635,88],[836,15,635,89],[837,12,636,12],[838,12,637,12],[838,18,637,18,"error"],[838,23,637,23],[839,10,638,8],[840,8,639,4],[840,9,639,5],[841,8,639,5],[841,17,605,10,"_exchangeCodeForSession"],[841,40,605,33,"_exchangeCodeForSession"],[841,41,605,33,"_x10"],[841,45,605,33],[842,10,605,33],[842,17,605,33,"_exchangeCodeForSession3"],[842,41,605,33],[842,42,605,33,"apply"],[842,47,605,33],[842,54,605,33,"arguments"],[842,63,605,33],[843,8,605,33],[844,8,605,33],[844,15,605,10,"_exchangeCodeForSession"],[844,38,605,33],[845,6,605,33],[846,6,640,4],[847,0,641,0],[848,0,642,0],[849,0,643,0],[850,4,640,4],[851,6,640,4,"key"],[851,9,640,4],[852,6,640,4,"value"],[852,11,640,4],[853,8,640,4],[853,12,640,4,"_signInWithIdToken"],[853,30,640,4],[853,33,640,4,"_asyncToGenerator"],[853,50,640,4],[853,51,644,4],[853,62,644,28,"credentials"],[853,73,644,39],[853,75,644,41],[854,10,645,8],[854,14,645,12],[855,12,646,12],[855,16,646,20,"options"],[855,23,646,27],[855,26,646,70,"credentials"],[855,37,646,81],[855,38,646,20,"options"],[855,45,646,27],[856,14,646,29,"provider"],[856,22,646,37],[856,25,646,70,"credentials"],[856,36,646,81],[856,37,646,29,"provider"],[856,45,646,37],[857,14,646,39,"token"],[857,19,646,44],[857,22,646,70,"credentials"],[857,33,646,81],[857,34,646,39,"token"],[857,39,646,44],[858,14,646,46,"access_token"],[858,26,646,58],[858,29,646,70,"credentials"],[858,40,646,81],[858,41,646,46,"access_token"],[858,53,646,58],[859,14,646,60,"nonce"],[859,19,646,65],[859,22,646,70,"credentials"],[859,33,646,81],[859,34,646,60,"nonce"],[859,39,646,65],[860,12,647,12],[860,16,647,18,"res"],[860,19,647,21],[860,28,647,30],[860,29,647,31],[860,30,647,32],[860,32,647,34,"fetch_1"],[860,39,647,41],[860,40,647,42,"_request"],[860,48,647,50],[860,50,647,52],[860,54,647,56],[860,55,647,57,"fetch"],[860,60,647,62],[860,62,647,64],[860,68,647,70],[860,70,647,72],[860,73,647,75],[860,77,647,79],[860,78,647,80,"url"],[860,81,647,83],[860,109,647,111],[860,111,647,113],[861,14,648,16,"headers"],[861,21,648,23],[861,23,648,25],[861,27,648,29],[861,28,648,30,"headers"],[861,35,648,37],[862,14,649,16,"body"],[862,18,649,20],[862,20,649,22],[863,16,650,20,"provider"],[863,24,650,28],[863,26,650,20,"provider"],[863,34,650,28],[864,16,651,20,"id_token"],[864,24,651,28],[864,26,651,30,"token"],[864,31,651,35],[865,16,652,20,"access_token"],[865,28,652,32],[865,30,652,20,"access_token"],[865,42,652,32],[866,16,653,20,"nonce"],[866,21,653,25],[866,23,653,20,"nonce"],[866,28,653,25],[867,16,654,20,"gotrue_meta_security"],[867,36,654,40],[867,38,654,42],[868,18,654,44,"captcha_token"],[868,31,654,57],[868,33,654,59,"options"],[868,40,654,66],[868,45,654,71],[868,49,654,75],[868,53,654,79,"options"],[868,60,654,86],[868,65,654,91],[868,70,654,96],[868,71,654,97],[868,74,654,100],[868,79,654,105],[868,80,654,106],[868,83,654,109,"options"],[868,90,654,116],[868,91,654,117,"captchaToken"],[869,16,654,130],[870,14,655,16],[870,15,655,17],[871,14,656,16,"xform"],[871,19,656,21],[871,21,656,23,"fetch_1"],[871,28,656,30],[871,29,656,31,"_sessionResponse"],[872,12,657,12],[872,13,657,13],[872,14,657,14],[873,12,658,12],[873,16,658,20,"data"],[873,20,658,24],[873,23,658,36,"res"],[873,26,658,39],[873,27,658,20,"data"],[873,31,658,24],[874,14,658,26,"error"],[874,19,658,31],[874,22,658,36,"res"],[874,25,658,39],[874,26,658,26,"error"],[874,31,658,31],[875,12,659,12],[875,16,659,16,"error"],[875,21,659,21],[875,23,659,23],[876,14,660,16],[876,21,660,23],[877,16,660,25,"data"],[877,20,660,29],[877,22,660,31],[878,18,660,33,"user"],[878,22,660,37],[878,24,660,39],[878,28,660,43],[879,18,660,45,"session"],[879,25,660,52],[879,27,660,54],[880,16,660,59],[880,17,660,60],[881,16,660,62,"error"],[881,21,660,67],[881,23,660,62,"error"],[882,14,660,68],[882,15,660,69],[883,12,661,12],[883,13,661,13],[883,19,662,17],[883,23,662,21],[883,24,662,22,"data"],[883,28,662,26],[883,32,662,30],[883,33,662,31,"data"],[883,37,662,35],[883,38,662,36,"session"],[883,45,662,43],[883,49,662,47],[883,50,662,48,"data"],[883,54,662,52],[883,55,662,53,"user"],[883,59,662,57],[883,61,662,59],[884,14,663,16],[884,21,663,23],[885,16,664,20,"data"],[885,20,664,24],[885,22,664,26],[886,18,664,28,"user"],[886,22,664,32],[886,24,664,34],[886,28,664,38],[887,18,664,40,"session"],[887,25,664,47],[887,27,664,49],[888,16,664,54],[888,17,664,55],[889,16,665,20,"error"],[889,21,665,25],[889,23,665,27],[889,27,665,31,"errors_1"],[889,35,665,39],[889,36,665,40,"AuthInvalidTokenResponseError"],[889,65,665,69],[889,66,665,70],[890,14,666,16],[890,15,666,17],[891,12,667,12],[892,12,668,12],[892,16,668,16,"data"],[892,20,668,20],[892,21,668,21,"session"],[892,28,668,28],[892,30,668,30],[893,14,669,16],[893,20,669,22],[893,24,669,26],[893,25,669,27,"_saveSession"],[893,37,669,39],[893,38,669,40,"data"],[893,42,669,44],[893,43,669,45,"session"],[893,50,669,52],[893,51,669,53],[894,14,670,16],[894,20,670,22],[894,24,670,26],[894,25,670,27,"_notifyAllSubscribers"],[894,46,670,48],[894,47,670,49],[894,58,670,60],[894,60,670,62,"data"],[894,64,670,66],[894,65,670,67,"session"],[894,72,670,74],[894,73,670,75],[895,12,671,12],[896,12,672,12],[896,19,672,19],[897,14,672,21,"data"],[897,18,672,25],[897,20,672,21,"data"],[897,24,672,25],[898,14,672,27,"error"],[898,19,672,32],[898,21,672,27,"error"],[899,12,672,33],[899,13,672,34],[900,10,673,8],[900,11,673,9],[900,12,674,8],[900,19,674,15,"error"],[900,24,674,20],[900,26,674,22],[901,12,675,12],[901,16,675,16],[901,17,675,17],[901,18,675,18],[901,20,675,20,"errors_1"],[901,28,675,28],[901,29,675,29,"isAuthError"],[901,40,675,40],[901,42,675,42,"error"],[901,47,675,47],[901,48,675,48],[901,50,675,50],[902,14,676,16],[902,21,676,23],[903,16,676,25,"data"],[903,20,676,29],[903,22,676,31],[904,18,676,33,"user"],[904,22,676,37],[904,24,676,39],[904,28,676,43],[905,18,676,45,"session"],[905,25,676,52],[905,27,676,54],[906,16,676,59],[906,17,676,60],[907,16,676,62,"error"],[907,21,676,67],[907,23,676,62,"error"],[908,14,676,68],[908,15,676,69],[909,12,677,12],[910,12,678,12],[910,18,678,18,"error"],[910,23,678,23],[911,10,679,8],[912,8,680,4],[912,9,680,5],[913,8,680,5],[913,17,644,10,"signInWithIdToken"],[913,34,644,27,"signInWithIdToken"],[913,35,644,27,"_x11"],[913,39,644,27],[914,10,644,27],[914,17,644,27,"_signInWithIdToken"],[914,35,644,27],[914,36,644,27,"apply"],[914,41,644,27],[914,48,644,27,"arguments"],[914,57,644,27],[915,8,644,27],[916,8,644,27],[916,15,644,10,"signInWithIdToken"],[916,32,644,27],[917,6,644,27],[918,6,681,4],[919,0,682,0],[920,0,683,0],[921,0,684,0],[922,0,685,0],[923,0,686,0],[924,0,687,0],[925,0,688,0],[926,0,689,0],[927,0,690,0],[928,0,691,0],[929,0,692,0],[930,0,693,0],[931,0,694,0],[932,0,695,0],[933,0,696,0],[934,0,697,0],[935,6,681,4],[936,4,681,4],[937,6,681,4,"key"],[937,9,681,4],[938,6,681,4,"value"],[938,11,681,4],[939,8,681,4],[939,12,681,4,"_signInWithOtp"],[939,26,681,4],[939,29,681,4,"_asyncToGenerator"],[939,46,681,4],[939,47,698,4],[939,58,698,24,"credentials"],[939,69,698,35],[939,71,698,37],[940,10,699,8],[940,14,699,12,"_a"],[940,16,699,14],[940,18,699,16,"_b"],[940,20,699,18],[940,22,699,20,"_c"],[940,24,699,22],[940,26,699,24,"_d"],[940,28,699,26],[940,30,699,28,"_e"],[940,32,699,30],[941,10,700,8],[941,14,700,12],[942,12,701,12],[942,16,701,16],[942,23,701,23],[942,27,701,27,"credentials"],[942,38,701,38],[942,40,701,40],[943,14,702,16],[943,18,702,24,"email"],[943,23,702,29],[943,26,702,43,"credentials"],[943,37,702,54],[943,38,702,24,"email"],[943,43,702,29],[944,16,702,31,"options"],[944,23,702,38],[944,26,702,43,"credentials"],[944,37,702,54],[944,38,702,31,"options"],[944,45,702,38],[945,14,703,16],[945,18,703,20,"codeChallenge"],[945,31,703,33],[945,34,703,36],[945,38,703,40],[946,14,704,16],[946,18,704,20,"codeChallengeMethod"],[946,37,704,39],[946,40,704,42],[946,44,704,46],[947,14,705,16],[947,18,705,20],[947,22,705,24],[947,23,705,25,"flowType"],[947,31,705,33],[947,36,705,38],[947,42,705,44],[947,44,705,46],[948,16,706,20],[949,16,706,21],[949,20,706,21,"_yield5"],[949,27,706,21],[949,36,707,65],[949,37,707,66],[949,38,707,67],[949,40,707,69,"helpers_1"],[949,49,707,78],[949,50,707,79,"getCodeChallengeAndMethod"],[949,75,707,104],[949,77,707,106],[949,81,707,110],[949,82,707,111,"storage"],[949,89,707,118],[949,91,707,120],[949,95,707,124],[949,96,707,125,"storageKey"],[949,106,707,135],[949,107,707,136],[950,16,707,136],[950,20,707,136,"_yield6"],[950,27,707,136],[950,30,707,136,"_slicedToArray"],[950,44,707,136],[950,45,707,136,"_yield5"],[950,52,707,136],[951,16,707,21,"codeChallenge"],[951,29,707,34],[951,32,707,34,"_yield6"],[951,39,707,34],[952,16,707,36,"codeChallengeMethod"],[952,35,707,55],[952,38,707,55,"_yield6"],[952,45,707,55],[953,14,708,16],[954,14,709,16],[954,18,709,16,"_yield7"],[954,25,709,16],[954,34,709,40],[954,35,709,41],[954,36,709,42],[954,38,709,44,"fetch_1"],[954,45,709,51],[954,46,709,52,"_request"],[954,54,709,60],[954,56,709,62],[954,60,709,66],[954,61,709,67,"fetch"],[954,66,709,72],[954,68,709,74],[954,74,709,80],[954,76,709,82],[954,79,709,85],[954,83,709,89],[954,84,709,90,"url"],[954,87,709,93],[954,93,709,99],[954,95,709,101],[955,18,710,20,"headers"],[955,25,710,27],[955,27,710,29],[955,31,710,33],[955,32,710,34,"headers"],[955,39,710,41],[956,18,711,20,"body"],[956,22,711,24],[956,24,711,26],[957,20,712,24,"email"],[957,25,712,29],[957,27,712,24,"email"],[957,32,712,29],[958,20,713,24,"data"],[958,24,713,28],[958,26,713,30],[958,27,713,31,"_a"],[958,29,713,33],[958,32,713,36,"options"],[958,39,713,43],[958,44,713,48],[958,48,713,52],[958,52,713,56,"options"],[958,59,713,63],[958,64,713,68],[958,69,713,73],[958,70,713,74],[958,73,713,77],[958,78,713,82],[958,79,713,83],[958,82,713,86,"options"],[958,89,713,93],[958,90,713,94,"data"],[958,94,713,98],[958,100,713,104],[958,104,713,108],[958,108,713,112,"_a"],[958,110,713,114],[958,115,713,119],[958,120,713,124],[958,121,713,125],[958,124,713,128,"_a"],[958,126,713,130],[958,129,713,133],[958,130,713,134],[958,131,713,135],[959,20,714,24,"create_user"],[959,31,714,35],[959,33,714,37],[959,34,714,38,"_b"],[959,36,714,40],[959,39,714,43,"options"],[959,46,714,50],[959,51,714,55],[959,55,714,59],[959,59,714,63,"options"],[959,66,714,70],[959,71,714,75],[959,76,714,80],[959,77,714,81],[959,80,714,84],[959,85,714,89],[959,86,714,90],[959,89,714,93,"options"],[959,96,714,100],[959,97,714,101,"shouldCreateUser"],[959,113,714,117],[959,119,714,123],[959,123,714,127],[959,127,714,131,"_b"],[959,129,714,133],[959,134,714,138],[959,139,714,143],[959,140,714,144],[959,143,714,147,"_b"],[959,145,714,149],[959,148,714,152],[959,152,714,156],[960,20,715,24,"gotrue_meta_security"],[960,40,715,44],[960,42,715,46],[961,22,715,48,"captcha_token"],[961,35,715,61],[961,37,715,63,"options"],[961,44,715,70],[961,49,715,75],[961,53,715,79],[961,57,715,83,"options"],[961,64,715,90],[961,69,715,95],[961,74,715,100],[961,75,715,101],[961,78,715,104],[961,83,715,109],[961,84,715,110],[961,87,715,113,"options"],[961,94,715,120],[961,95,715,121,"captchaToken"],[962,20,715,134],[962,21,715,135],[963,20,716,24,"code_challenge"],[963,34,716,38],[963,36,716,40,"codeChallenge"],[963,49,716,53],[964,20,717,24,"code_challenge_method"],[964,41,717,45],[964,43,717,47,"codeChallengeMethod"],[965,18,718,20],[965,19,718,21],[966,18,719,20,"redirectTo"],[966,28,719,30],[966,30,719,32,"options"],[966,37,719,39],[966,42,719,44],[966,46,719,48],[966,50,719,52,"options"],[966,57,719,59],[966,62,719,64],[966,67,719,69],[966,68,719,70],[966,71,719,73],[966,76,719,78],[966,77,719,79],[966,80,719,82,"options"],[966,87,719,89],[966,88,719,90,"emailRedirectTo"],[967,16,720,16],[967,17,720,17],[967,18,720,18],[968,16,709,24,"error"],[968,21,709,29],[968,24,709,29,"_yield7"],[968,31,709,29],[968,32,709,24,"error"],[968,37,709,29],[969,14,721,16],[969,21,721,23],[970,16,721,25,"data"],[970,20,721,29],[970,22,721,31],[971,18,721,33,"user"],[971,22,721,37],[971,24,721,39],[971,28,721,43],[972,18,721,45,"session"],[972,25,721,52],[972,27,721,54],[973,16,721,59],[973,17,721,60],[974,16,721,62,"error"],[974,21,721,67],[974,23,721,62,"error"],[975,14,721,68],[975,15,721,69],[976,12,722,12],[977,12,723,12],[977,16,723,16],[977,23,723,23],[977,27,723,27,"credentials"],[977,38,723,38],[977,40,723,40],[978,14,724,16],[978,18,724,24,"phone"],[978,23,724,29],[978,26,724,43,"credentials"],[978,37,724,54],[978,38,724,24,"phone"],[978,43,724,29],[979,16,724,31,"options"],[979,25,724,38],[979,28,724,43,"credentials"],[979,39,724,54],[979,40,724,31,"options"],[979,47,724,38],[980,14,725,16],[980,18,725,16,"_yield8"],[980,25,725,16],[980,34,725,46],[980,35,725,47],[980,36,725,48],[980,38,725,50,"fetch_1"],[980,45,725,57],[980,46,725,58,"_request"],[980,54,725,66],[980,56,725,68],[980,60,725,72],[980,61,725,73,"fetch"],[980,66,725,78],[980,68,725,80],[980,74,725,86],[980,76,725,88],[980,79,725,91],[980,83,725,95],[980,84,725,96,"url"],[980,87,725,99],[980,93,725,105],[980,95,725,107],[981,18,726,20,"headers"],[981,25,726,27],[981,27,726,29],[981,31,726,33],[981,32,726,34,"headers"],[981,39,726,41],[982,18,727,20,"body"],[982,22,727,24],[982,24,727,26],[983,20,728,24,"phone"],[983,25,728,29],[983,27,728,24,"phone"],[983,32,728,29],[984,20,729,24,"data"],[984,24,729,28],[984,26,729,30],[984,27,729,31,"_c"],[984,29,729,33],[984,32,729,36,"options"],[984,41,729,43],[984,46,729,48],[984,50,729,52],[984,54,729,56,"options"],[984,63,729,63],[984,68,729,68],[984,73,729,73],[984,74,729,74],[984,77,729,77],[984,82,729,82],[984,83,729,83],[984,86,729,86,"options"],[984,95,729,93],[984,96,729,94,"data"],[984,100,729,98],[984,106,729,104],[984,110,729,108],[984,114,729,112,"_c"],[984,116,729,114],[984,121,729,119],[984,126,729,124],[984,127,729,125],[984,130,729,128,"_c"],[984,132,729,130],[984,135,729,133],[984,136,729,134],[984,137,729,135],[985,20,730,24,"create_user"],[985,31,730,35],[985,33,730,37],[985,34,730,38,"_d"],[985,36,730,40],[985,39,730,43,"options"],[985,48,730,50],[985,53,730,55],[985,57,730,59],[985,61,730,63,"options"],[985,70,730,70],[985,75,730,75],[985,80,730,80],[985,81,730,81],[985,84,730,84],[985,89,730,89],[985,90,730,90],[985,93,730,93,"options"],[985,102,730,100],[985,103,730,101,"shouldCreateUser"],[985,119,730,117],[985,125,730,123],[985,129,730,127],[985,133,730,131,"_d"],[985,135,730,133],[985,140,730,138],[985,145,730,143],[985,146,730,144],[985,149,730,147,"_d"],[985,151,730,149],[985,154,730,152],[985,158,730,156],[986,20,731,24,"gotrue_meta_security"],[986,40,731,44],[986,42,731,46],[987,22,731,48,"captcha_token"],[987,35,731,61],[987,37,731,63,"options"],[987,46,731,70],[987,51,731,75],[987,55,731,79],[987,59,731,83,"options"],[987,68,731,90],[987,73,731,95],[987,78,731,100],[987,79,731,101],[987,82,731,104],[987,87,731,109],[987,88,731,110],[987,91,731,113,"options"],[987,100,731,120],[987,101,731,121,"captchaToken"],[988,20,731,134],[988,21,731,135],[989,20,732,24,"channel"],[989,27,732,31],[989,29,732,33],[989,30,732,34,"_e"],[989,32,732,36],[989,35,732,39,"options"],[989,44,732,46],[989,49,732,51],[989,53,732,55],[989,57,732,59,"options"],[989,66,732,66],[989,71,732,71],[989,76,732,76],[989,77,732,77],[989,80,732,80],[989,85,732,85],[989,86,732,86],[989,89,732,89,"options"],[989,98,732,96],[989,99,732,97,"channel"],[989,106,732,104],[989,112,732,110],[989,116,732,114],[989,120,732,118,"_e"],[989,122,732,120],[989,127,732,125],[989,132,732,130],[989,133,732,131],[989,136,732,134,"_e"],[989,138,732,136],[989,141,732,139],[990,18,733,20],[991,16,734,16],[991,17,734,17],[991,18,734,18],[992,16,725,24,"data"],[992,20,725,28],[992,23,725,28,"_yield8"],[992,30,725,28],[992,31,725,24,"data"],[992,35,725,28],[993,16,725,30,"error"],[993,22,725,35],[993,25,725,35,"_yield8"],[993,32,725,35],[993,33,725,30,"error"],[993,38,725,35],[994,14,735,16],[994,21,735,23],[995,16,735,25,"data"],[995,20,735,29],[995,22,735,31],[996,18,735,33,"user"],[996,22,735,37],[996,24,735,39],[996,28,735,43],[997,18,735,45,"session"],[997,25,735,52],[997,27,735,54],[997,31,735,58],[998,18,735,60,"messageId"],[998,27,735,69],[998,29,735,71,"data"],[998,33,735,75],[998,38,735,80],[998,42,735,84],[998,46,735,88,"data"],[998,50,735,92],[998,55,735,97],[998,60,735,102],[998,61,735,103],[998,64,735,106],[998,69,735,111],[998,70,735,112],[998,73,735,115,"data"],[998,77,735,119],[998,78,735,120,"message_id"],[999,16,735,131],[999,17,735,132],[1000,16,735,134,"error"],[1000,21,735,139],[1000,23,735,134,"error"],[1001,14,735,140],[1001,15,735,141],[1002,12,736,12],[1003,12,737,12],[1003,18,737,18],[1003,22,737,22,"errors_1"],[1003,30,737,30],[1003,31,737,31,"AuthInvalidCredentialsError"],[1003,58,737,58],[1003,59,737,59],[1003,110,737,110],[1003,111,737,111],[1004,10,738,8],[1004,11,738,9],[1004,12,739,8],[1004,19,739,15,"error"],[1004,24,739,20],[1004,26,739,22],[1005,12,740,12],[1005,16,740,16],[1005,17,740,17],[1005,18,740,18],[1005,20,740,20,"errors_1"],[1005,28,740,28],[1005,29,740,29,"isAuthError"],[1005,40,740,40],[1005,42,740,42,"error"],[1005,47,740,47],[1005,48,740,48],[1005,50,740,50],[1006,14,741,16],[1006,21,741,23],[1007,16,741,25,"data"],[1007,20,741,29],[1007,22,741,31],[1008,18,741,33,"user"],[1008,22,741,37],[1008,24,741,39],[1008,28,741,43],[1009,18,741,45,"session"],[1009,25,741,52],[1009,27,741,54],[1010,16,741,59],[1010,17,741,60],[1011,16,741,62,"error"],[1011,21,741,67],[1011,23,741,62,"error"],[1012,14,741,68],[1012,15,741,69],[1013,12,742,12],[1014,12,743,12],[1014,18,743,18,"error"],[1014,23,743,23],[1015,10,744,8],[1016,8,745,4],[1016,9,745,5],[1017,8,745,5],[1017,17,698,10,"signInWithOtp"],[1017,30,698,23,"signInWithOtp"],[1017,31,698,23,"_x12"],[1017,35,698,23],[1018,10,698,23],[1018,17,698,23,"_signInWithOtp"],[1018,31,698,23],[1018,32,698,23,"apply"],[1018,37,698,23],[1018,44,698,23,"arguments"],[1018,53,698,23],[1019,8,698,23],[1020,8,698,23],[1020,15,698,10,"signInWithOtp"],[1020,28,698,23],[1021,6,698,23],[1022,6,746,4],[1023,0,747,0],[1024,0,748,0],[1025,6,746,4],[1026,4,746,4],[1027,6,746,4,"key"],[1027,9,746,4],[1028,6,746,4,"value"],[1028,11,746,4],[1029,8,746,4],[1029,12,746,4,"_verifyOtp"],[1029,22,746,4],[1029,25,746,4,"_asyncToGenerator"],[1029,42,746,4],[1029,43,749,4],[1029,54,749,20,"params"],[1029,60,749,26],[1029,62,749,28],[1030,10,750,8],[1030,14,750,12,"_a"],[1030,16,750,14],[1030,18,750,16,"_b"],[1030,20,750,18],[1031,10,751,8],[1031,14,751,12],[1032,12,752,12],[1032,16,752,16,"redirectTo"],[1032,26,752,26],[1032,29,752,29,"undefined"],[1032,38,752,38],[1033,12,753,12],[1033,16,753,16,"captchaToken"],[1033,28,753,28],[1033,31,753,31,"undefined"],[1033,40,753,40],[1034,12,754,12],[1034,16,754,16],[1034,25,754,25],[1034,29,754,29,"params"],[1034,35,754,35],[1034,37,754,37],[1035,14,755,16,"redirectTo"],[1035,24,755,26],[1035,27,755,29],[1035,28,755,30,"_a"],[1035,30,755,32],[1035,33,755,35,"params"],[1035,39,755,41],[1035,40,755,42,"options"],[1035,47,755,49],[1035,53,755,55],[1035,57,755,59],[1035,61,755,63,"_a"],[1035,63,755,65],[1035,68,755,70],[1035,73,755,75],[1035,74,755,76],[1035,77,755,79],[1035,82,755,84],[1035,83,755,85],[1035,86,755,88,"_a"],[1035,88,755,90],[1035,89,755,91,"redirectTo"],[1035,99,755,101],[1036,14,756,16,"captchaToken"],[1036,26,756,28],[1036,29,756,31],[1036,30,756,32,"_b"],[1036,32,756,34],[1036,35,756,37,"params"],[1036,41,756,43],[1036,42,756,44,"options"],[1036,49,756,51],[1036,55,756,57],[1036,59,756,61],[1036,63,756,65,"_b"],[1036,65,756,67],[1036,70,756,72],[1036,75,756,77],[1036,76,756,78],[1036,79,756,81],[1036,84,756,86],[1036,85,756,87],[1036,88,756,90,"_b"],[1036,90,756,92],[1036,91,756,93,"captchaToken"],[1036,103,756,105],[1037,12,757,12],[1038,12,758,12],[1038,16,758,12,"_yield9"],[1038,23,758,12],[1038,32,758,42],[1038,33,758,43],[1038,34,758,44],[1038,36,758,46,"fetch_1"],[1038,43,758,53],[1038,44,758,54,"_request"],[1038,52,758,62],[1038,54,758,64],[1038,58,758,68],[1038,59,758,69,"fetch"],[1038,64,758,74],[1038,66,758,76],[1038,72,758,82],[1038,74,758,84],[1038,77,758,87],[1038,81,758,91],[1038,82,758,92,"url"],[1038,85,758,95],[1038,94,758,104],[1038,96,758,106],[1039,16,759,16,"headers"],[1039,23,759,23],[1039,25,759,25],[1039,29,759,29],[1039,30,759,30,"headers"],[1039,37,759,37],[1040,16,760,16,"body"],[1040,20,760,20],[1040,22,760,22,"Object"],[1040,28,760,28],[1040,29,760,29,"assign"],[1040,35,760,35],[1040,36,760,36,"Object"],[1040,42,760,42],[1040,43,760,43,"assign"],[1040,49,760,49],[1040,50,760,50],[1040,51,760,51],[1040,52,760,52],[1040,54,760,54,"params"],[1040,60,760,60],[1040,61,760,61],[1040,63,760,63],[1041,18,760,65,"gotrue_meta_security"],[1041,38,760,85],[1041,40,760,87],[1042,20,760,89,"captcha_token"],[1042,33,760,102],[1042,35,760,104,"captchaToken"],[1043,18,760,117],[1044,16,760,119],[1044,17,760,120],[1044,18,760,121],[1045,16,761,16,"redirectTo"],[1045,26,761,26],[1045,28,761,16,"redirectTo"],[1045,38,761,26],[1046,16,762,16,"xform"],[1046,21,762,21],[1046,23,762,23,"fetch_1"],[1046,30,762,30],[1046,31,762,31,"_sessionResponse"],[1047,14,763,12],[1047,15,763,13],[1047,16,763,14],[1048,14,758,20,"data"],[1048,18,758,24],[1048,21,758,24,"_yield9"],[1048,28,758,24],[1048,29,758,20,"data"],[1048,33,758,24],[1049,14,758,26,"error"],[1049,19,758,31],[1049,22,758,31,"_yield9"],[1049,29,758,31],[1049,30,758,26,"error"],[1049,35,758,31],[1050,12,764,12],[1050,16,764,16,"error"],[1050,21,764,21],[1050,23,764,23],[1051,14,765,16],[1051,20,765,22,"error"],[1051,25,765,27],[1052,12,766,12],[1053,12,767,12],[1053,16,767,16],[1053,17,767,17,"data"],[1053,21,767,21],[1053,23,767,23],[1054,14,768,16],[1054,20,768,22],[1054,24,768,26,"Error"],[1054,29,768,31],[1054,30,768,32],[1054,72,768,74],[1054,73,768,75],[1055,12,769,12],[1056,12,770,12],[1056,16,770,18,"session"],[1056,23,770,25],[1056,26,770,28,"data"],[1056,30,770,32],[1056,31,770,33,"session"],[1056,38,770,40],[1057,12,771,12],[1057,16,771,18,"user"],[1057,20,771,22],[1057,23,771,25,"data"],[1057,27,771,29],[1057,28,771,30,"user"],[1057,32,771,34],[1058,12,772,12],[1058,16,772,16,"session"],[1058,23,772,23],[1058,28,772,28],[1058,32,772,32],[1058,36,772,36,"session"],[1058,43,772,43],[1058,48,772,48],[1058,53,772,53],[1058,54,772,54],[1058,57,772,57],[1058,62,772,62],[1058,63,772,63],[1058,66,772,66,"session"],[1058,73,772,73],[1058,74,772,74,"access_token"],[1058,86,772,86],[1058,88,772,88],[1059,14,773,16],[1059,20,773,22],[1059,24,773,26],[1059,25,773,27,"_saveSession"],[1059,37,773,39],[1059,38,773,40,"session"],[1059,45,773,47],[1059,46,773,48],[1060,14,774,16],[1060,20,774,22],[1060,24,774,26],[1060,25,774,27,"_notifyAllSubscribers"],[1060,46,774,48],[1060,47,774,49,"params"],[1060,53,774,55],[1060,54,774,56,"type"],[1060,58,774,60],[1060,62,774,64],[1060,72,774,74],[1060,75,774,77],[1060,94,774,96],[1060,97,774,99],[1060,108,774,110],[1060,110,774,112,"session"],[1060,117,774,119],[1060,118,774,120],[1061,12,775,12],[1062,12,776,12],[1062,19,776,19],[1063,14,776,21,"data"],[1063,18,776,25],[1063,20,776,27],[1064,16,776,29,"user"],[1064,20,776,33],[1064,22,776,29,"user"],[1064,26,776,33],[1065,16,776,35,"session"],[1065,23,776,42],[1065,25,776,35,"session"],[1066,14,776,43],[1066,15,776,44],[1067,14,776,46,"error"],[1067,19,776,51],[1067,21,776,53],[1068,12,776,58],[1068,13,776,59],[1069,10,777,8],[1069,11,777,9],[1069,12,778,8],[1069,19,778,15,"error"],[1069,24,778,20],[1069,26,778,22],[1070,12,779,12],[1070,16,779,16],[1070,17,779,17],[1070,18,779,18],[1070,20,779,20,"errors_1"],[1070,28,779,28],[1070,29,779,29,"isAuthError"],[1070,40,779,40],[1070,42,779,42,"error"],[1070,47,779,47],[1070,48,779,48],[1070,50,779,50],[1071,14,780,16],[1071,21,780,23],[1072,16,780,25,"data"],[1072,20,780,29],[1072,22,780,31],[1073,18,780,33,"user"],[1073,22,780,37],[1073,24,780,39],[1073,28,780,43],[1074,18,780,45,"session"],[1074,25,780,52],[1074,27,780,54],[1075,16,780,59],[1075,17,780,60],[1076,16,780,62,"error"],[1076,21,780,67],[1076,23,780,62,"error"],[1077,14,780,68],[1077,15,780,69],[1078,12,781,12],[1079,12,782,12],[1079,18,782,18,"error"],[1079,23,782,23],[1080,10,783,8],[1081,8,784,4],[1081,9,784,5],[1082,8,784,5],[1082,17,749,10,"verifyOtp"],[1082,26,749,19,"verifyOtp"],[1082,27,749,19,"_x13"],[1082,31,749,19],[1083,10,749,19],[1083,17,749,19,"_verifyOtp"],[1083,27,749,19],[1083,28,749,19,"apply"],[1083,33,749,19],[1083,40,749,19,"arguments"],[1083,49,749,19],[1084,8,749,19],[1085,8,749,19],[1085,15,749,10,"verifyOtp"],[1085,24,749,19],[1086,6,749,19],[1087,6,785,4],[1088,0,786,0],[1089,0,787,0],[1090,0,788,0],[1091,0,789,0],[1092,0,790,0],[1093,0,791,0],[1094,0,792,0],[1095,0,793,0],[1096,0,794,0],[1097,0,795,0],[1098,0,796,0],[1099,0,797,0],[1100,0,798,0],[1101,6,785,4],[1102,4,785,4],[1103,6,785,4,"key"],[1103,9,785,4],[1104,6,785,4,"value"],[1104,11,785,4],[1105,8,785,4],[1105,12,785,4,"_signInWithSSO"],[1105,26,785,4],[1105,29,785,4,"_asyncToGenerator"],[1105,46,785,4],[1105,47,799,4],[1105,58,799,24,"params"],[1105,64,799,30],[1105,66,799,32],[1106,10,800,8],[1106,14,800,12,"_a"],[1106,16,800,14],[1106,18,800,16,"_b"],[1106,20,800,18],[1106,22,800,20,"_c"],[1106,24,800,22],[1107,10,801,8],[1107,14,801,12],[1108,12,802,12],[1108,16,802,16,"codeChallenge"],[1108,29,802,29],[1108,32,802,32],[1108,36,802,36],[1109,12,803,12],[1109,16,803,16,"codeChallengeMethod"],[1109,35,803,35],[1109,38,803,38],[1109,42,803,42],[1110,12,804,12],[1110,16,804,16],[1110,20,804,20],[1110,21,804,21,"flowType"],[1110,29,804,29],[1110,34,804,34],[1110,40,804,40],[1110,42,804,42],[1111,14,805,16],[1112,14,805,17],[1112,18,805,17,"_yield0"],[1112,25,805,17],[1112,34,806,61],[1112,35,806,62],[1112,36,806,63],[1112,38,806,65,"helpers_1"],[1112,47,806,74],[1112,48,806,75,"getCodeChallengeAndMethod"],[1112,73,806,100],[1112,75,806,102],[1112,79,806,106],[1112,80,806,107,"storage"],[1112,87,806,114],[1112,89,806,116],[1112,93,806,120],[1112,94,806,121,"storageKey"],[1112,104,806,131],[1112,105,806,132],[1113,14,806,132],[1113,18,806,132,"_yield1"],[1113,25,806,132],[1113,28,806,132,"_slicedToArray"],[1113,42,806,132],[1113,43,806,132,"_yield0"],[1113,50,806,132],[1114,14,806,17,"codeChallenge"],[1114,27,806,30],[1114,30,806,30,"_yield1"],[1114,37,806,30],[1115,14,806,32,"codeChallengeMethod"],[1115,33,806,51],[1115,36,806,51,"_yield1"],[1115,43,806,51],[1116,12,807,12],[1117,12,808,12],[1117,25,808,25],[1117,26,808,26],[1117,27,808,27],[1117,29,808,29,"fetch_1"],[1117,36,808,36],[1117,37,808,37,"_request"],[1117,45,808,45],[1117,47,808,47],[1117,51,808,51],[1117,52,808,52,"fetch"],[1117,57,808,57],[1117,59,808,59],[1117,65,808,65],[1117,67,808,67],[1117,70,808,70],[1117,74,808,74],[1117,75,808,75,"url"],[1117,78,808,78],[1117,84,808,84],[1117,86,808,86],[1118,14,809,16,"body"],[1118,18,809,20],[1118,20,809,22,"Object"],[1118,26,809,28],[1118,27,809,29,"assign"],[1118,33,809,35],[1118,34,809,36,"Object"],[1118,40,809,42],[1118,41,809,43,"assign"],[1118,47,809,49],[1118,48,809,50,"Object"],[1118,54,809,56],[1118,55,809,57,"assign"],[1118,61,809,63],[1118,62,809,64,"Object"],[1118,68,809,70],[1118,69,809,71,"assign"],[1118,75,809,77],[1118,76,809,78,"Object"],[1118,82,809,84],[1118,83,809,85,"assign"],[1118,89,809,91],[1118,90,809,92],[1118,91,809,93],[1118,92,809,94],[1118,94,809,97],[1118,106,809,109],[1118,110,809,113,"params"],[1118,116,809,119],[1118,119,809,122],[1119,16,809,124,"provider_id"],[1119,27,809,135],[1119,29,809,137,"params"],[1119,35,809,143],[1119,36,809,144,"providerId"],[1120,14,809,155],[1120,15,809,156],[1120,18,809,159],[1120,22,809,164],[1120,23,809,165],[1120,25,809,168],[1120,33,809,176],[1120,37,809,180,"params"],[1120,43,809,186],[1120,46,809,189],[1121,16,809,191,"domain"],[1121,22,809,197],[1121,24,809,199,"params"],[1121,30,809,205],[1121,31,809,206,"domain"],[1122,14,809,213],[1122,15,809,214],[1122,18,809,217],[1122,22,809,222],[1122,23,809,223],[1122,25,809,225],[1123,16,809,227,"redirect_to"],[1123,27,809,238],[1123,29,809,240],[1123,30,809,241,"_b"],[1123,32,809,243],[1123,35,809,246],[1123,36,809,247,"_a"],[1123,38,809,249],[1123,41,809,252,"params"],[1123,47,809,258],[1123,48,809,259,"options"],[1123,55,809,266],[1123,61,809,272],[1123,65,809,276],[1123,69,809,280,"_a"],[1123,71,809,282],[1123,76,809,287],[1123,81,809,292],[1123,82,809,293],[1123,85,809,296],[1123,90,809,301],[1123,91,809,302],[1123,94,809,305,"_a"],[1123,96,809,307],[1123,97,809,308,"redirectTo"],[1123,107,809,318],[1123,113,809,324],[1123,117,809,328],[1123,121,809,332,"_b"],[1123,123,809,334],[1123,128,809,339],[1123,133,809,344],[1123,134,809,345],[1123,137,809,348,"_b"],[1123,139,809,350],[1123,142,809,353,"undefined"],[1124,14,809,363],[1124,15,809,364],[1124,16,809,365],[1124,18,809,368],[1124,19,809,369],[1124,20,809,370,"_c"],[1124,22,809,372],[1124,25,809,375,"params"],[1124,31,809,381],[1124,36,809,386],[1124,40,809,390],[1124,44,809,394,"params"],[1124,50,809,400],[1124,55,809,405],[1124,60,809,410],[1124,61,809,411],[1124,64,809,414],[1124,69,809,419],[1124,70,809,420],[1124,73,809,423,"params"],[1124,79,809,429],[1124,80,809,430,"options"],[1124,87,809,437],[1124,93,809,443],[1124,97,809,447],[1124,101,809,451,"_c"],[1124,103,809,453],[1124,108,809,458],[1124,113,809,463],[1124,114,809,464],[1124,117,809,467],[1124,122,809,472],[1124,123,809,473],[1124,126,809,476,"_c"],[1124,128,809,478],[1124,129,809,479,"captchaToken"],[1124,141,809,491],[1124,145,810,22],[1125,16,810,24,"gotrue_meta_security"],[1125,36,810,44],[1125,38,810,46],[1126,18,810,48,"captcha_token"],[1126,31,810,61],[1126,33,810,63,"params"],[1126,39,810,69],[1126,40,810,70,"options"],[1126,47,810,77],[1126,48,810,78,"captchaToken"],[1127,16,810,91],[1128,14,810,93],[1128,15,810,94],[1128,18,811,22],[1128,22,811,27],[1128,23,811,28],[1128,25,811,30],[1129,16,811,32,"skip_http_redirect"],[1129,34,811,50],[1129,36,811,52],[1129,40,811,56],[1130,16,811,58,"code_challenge"],[1130,30,811,72],[1130,32,811,74,"codeChallenge"],[1130,45,811,87],[1131,16,811,89,"code_challenge_method"],[1131,37,811,110],[1131,39,811,112,"codeChallengeMethod"],[1132,14,811,132],[1132,15,811,133],[1132,16,811,134],[1133,14,812,16,"headers"],[1133,21,812,23],[1133,23,812,25],[1133,27,812,29],[1133,28,812,30,"headers"],[1133,35,812,37],[1134,14,813,16,"xform"],[1134,19,813,21],[1134,21,813,23,"fetch_1"],[1134,28,813,30],[1134,29,813,31,"_ssoResponse"],[1135,12,814,12],[1135,13,814,13],[1135,14,814,14],[1136,10,815,8],[1136,11,815,9],[1136,12,816,8],[1136,19,816,15,"error"],[1136,24,816,20],[1136,26,816,22],[1137,12,817,12],[1137,16,817,16],[1137,17,817,17],[1137,18,817,18],[1137,20,817,20,"errors_1"],[1137,28,817,28],[1137,29,817,29,"isAuthError"],[1137,40,817,40],[1137,42,817,42,"error"],[1137,47,817,47],[1137,48,817,48],[1137,50,817,50],[1138,14,818,16],[1138,21,818,23],[1139,16,818,25,"data"],[1139,20,818,29],[1139,22,818,31],[1139,26,818,35],[1140,16,818,37,"error"],[1140,21,818,42],[1140,23,818,37,"error"],[1141,14,818,43],[1141,15,818,44],[1142,12,819,12],[1143,12,820,12],[1143,18,820,18,"error"],[1143,23,820,23],[1144,10,821,8],[1145,8,822,4],[1145,9,822,5],[1146,8,822,5],[1146,17,799,10,"signInWithSSO"],[1146,30,799,23,"signInWithSSO"],[1146,31,799,23,"_x14"],[1146,35,799,23],[1147,10,799,23],[1147,17,799,23,"_signInWithSSO"],[1147,31,799,23],[1147,32,799,23,"apply"],[1147,37,799,23],[1147,44,799,23,"arguments"],[1147,53,799,23],[1148,8,799,23],[1149,8,799,23],[1149,15,799,10,"signInWithSSO"],[1149,28,799,23],[1150,6,799,23],[1151,6,823,4],[1152,0,824,0],[1153,0,825,0],[1154,0,826,0],[1155,6,823,4],[1156,4,823,4],[1157,6,823,4,"key"],[1157,9,823,4],[1158,6,823,4,"value"],[1158,11,823,4],[1159,8,823,4],[1159,12,823,4,"_reauthenticate2"],[1159,28,823,4],[1159,31,823,4,"_asyncToGenerator"],[1159,48,823,4],[1159,49,827,4],[1159,62,827,27],[1160,10,827,27],[1160,14,827,27,"_this5"],[1160,20,827,27],[1161,10,828,8],[1161,16,828,14],[1161,20,828,18],[1161,21,828,19,"initializePromise"],[1161,38,828,36],[1162,10,829,8],[1162,23,829,21],[1162,27,829,25],[1162,28,829,26,"_acquireLock"],[1162,40,829,38],[1162,41,829,39],[1162,42,829,40],[1162,43,829,41],[1162,58,829,41,"_asyncToGenerator"],[1162,75,829,41],[1162,76,829,43],[1162,89,829,55],[1163,12,830,12],[1163,25,830,25,"_this5"],[1163,31,830,29],[1163,32,830,30,"_reauthenticate"],[1163,47,830,45],[1163,48,830,46],[1163,49,830,47],[1164,10,831,8],[1164,11,831,9],[1164,13,831,10],[1165,8,832,4],[1165,9,832,5],[1166,8,832,5],[1166,17,827,10,"reauthenticate"],[1166,31,827,24,"reauthenticate"],[1166,32,827,24],[1167,10,827,24],[1167,17,827,24,"_reauthenticate2"],[1167,33,827,24],[1167,34,827,24,"apply"],[1167,39,827,24],[1167,46,827,24,"arguments"],[1167,55,827,24],[1168,8,827,24],[1169,8,827,24],[1169,15,827,10,"reauthenticate"],[1169,29,827,24],[1170,6,827,24],[1171,4,827,24],[1172,6,827,24,"key"],[1172,9,827,24],[1173,6,827,24,"value"],[1173,11,827,24],[1174,8,827,24],[1174,12,827,24,"_reauthenticate3"],[1174,28,827,24],[1174,31,827,24,"_asyncToGenerator"],[1174,48,827,24],[1174,49,833,4],[1174,62,833,28],[1175,10,833,28],[1175,14,833,28,"_this6"],[1175,20,833,28],[1176,10,834,8],[1176,14,834,12],[1177,12,835,12],[1177,25,835,25],[1177,29,835,29],[1177,30,835,30,"_useSession"],[1177,41,835,41],[1178,14,835,41],[1178,18,835,41,"_ref7"],[1178,23,835,41],[1178,26,835,41,"_asyncToGenerator"],[1178,43,835,41],[1178,44,835,42],[1178,55,835,49,"result"],[1178,61,835,55],[1178,63,835,60],[1179,16,836,16],[1179,20,836,32,"session"],[1179,27,836,39],[1179,30,836,68,"result"],[1179,36,836,74],[1179,37,836,24,"data"],[1179,41,836,28],[1179,42,836,32,"session"],[1179,49,836,39],[1180,18,836,50,"sessionError"],[1180,30,836,62],[1180,33,836,68,"result"],[1180,39,836,74],[1180,40,836,43,"error"],[1180,45,836,48],[1181,16,837,16],[1181,20,837,20,"sessionError"],[1181,32,837,32],[1181,34,838,20],[1181,40,838,26,"sessionError"],[1181,52,838,38],[1182,16,839,16],[1182,20,839,20],[1182,21,839,21,"session"],[1182,28,839,28],[1182,30,840,20],[1182,36,840,26],[1182,40,840,30,"errors_1"],[1182,48,840,38],[1182,49,840,39,"AuthSessionMissingError"],[1182,72,840,62],[1182,73,840,63],[1182,74,840,64],[1183,16,841,16],[1183,20,841,16,"_yield10"],[1183,28,841,16],[1183,37,841,40],[1183,38,841,41],[1183,39,841,42],[1183,41,841,44,"fetch_1"],[1183,48,841,51],[1183,49,841,52,"_request"],[1183,57,841,60],[1183,59,841,62,"_this6"],[1183,65,841,66],[1183,66,841,67,"fetch"],[1183,71,841,72],[1183,73,841,74],[1183,78,841,79],[1183,80,841,81],[1183,83,841,84,"_this6"],[1183,89,841,88],[1183,90,841,89,"url"],[1183,93,841,92],[1183,110,841,109],[1183,112,841,111],[1184,20,842,20,"headers"],[1184,27,842,27],[1184,29,842,29,"_this6"],[1184,35,842,33],[1184,36,842,34,"headers"],[1184,43,842,41],[1185,20,843,20,"jwt"],[1185,23,843,23],[1185,25,843,25,"session"],[1185,32,843,32],[1185,33,843,33,"access_token"],[1186,18,844,16],[1186,19,844,17],[1186,20,844,18],[1187,18,841,24,"error"],[1187,23,841,29],[1187,26,841,29,"_yield10"],[1187,34,841,29],[1187,35,841,24,"error"],[1187,40,841,29],[1188,16,845,16],[1188,23,845,23],[1189,18,845,25,"data"],[1189,22,845,29],[1189,24,845,31],[1190,20,845,33,"user"],[1190,24,845,37],[1190,26,845,39],[1190,30,845,43],[1191,20,845,45,"session"],[1191,27,845,52],[1191,29,845,54],[1192,18,845,59],[1192,19,845,60],[1193,18,845,62,"error"],[1193,23,845,67],[1193,25,845,62,"error"],[1194,16,845,68],[1194,17,845,69],[1195,14,846,12],[1195,15,846,13],[1196,14,846,13],[1196,31,846,13,"_x15"],[1196,35,846,13],[1197,16,846,13],[1197,23,846,13,"_ref7"],[1197,28,846,13],[1197,29,846,13,"apply"],[1197,34,846,13],[1197,41,846,13,"arguments"],[1197,50,846,13],[1198,14,846,13],[1199,12,846,13],[1199,16,846,14],[1200,10,847,8],[1200,11,847,9],[1200,12,848,8],[1200,19,848,15,"error"],[1200,24,848,20],[1200,26,848,22],[1201,12,849,12],[1201,16,849,16],[1201,17,849,17],[1201,18,849,18],[1201,20,849,20,"errors_1"],[1201,28,849,28],[1201,29,849,29,"isAuthError"],[1201,40,849,40],[1201,42,849,42,"error"],[1201,47,849,47],[1201,48,849,48],[1201,50,849,50],[1202,14,850,16],[1202,21,850,23],[1203,16,850,25,"data"],[1203,20,850,29],[1203,22,850,31],[1204,18,850,33,"user"],[1204,22,850,37],[1204,24,850,39],[1204,28,850,43],[1205,18,850,45,"session"],[1205,25,850,52],[1205,27,850,54],[1206,16,850,59],[1206,17,850,60],[1207,16,850,62,"error"],[1207,21,850,67],[1207,23,850,62,"error"],[1208,14,850,68],[1208,15,850,69],[1209,12,851,12],[1210,12,852,12],[1210,18,852,18,"error"],[1210,23,852,23],[1211,10,853,8],[1212,8,854,4],[1212,9,854,5],[1213,8,854,5],[1213,17,833,10,"_reauthenticate"],[1213,32,833,25,"_reauthenticate"],[1213,33,833,25],[1214,10,833,25],[1214,17,833,25,"_reauthenticate3"],[1214,33,833,25],[1214,34,833,25,"apply"],[1214,39,833,25],[1214,46,833,25,"arguments"],[1214,55,833,25],[1215,8,833,25],[1216,8,833,25],[1216,15,833,10,"_reauthenticate"],[1216,30,833,25],[1217,6,833,25],[1218,6,855,4],[1219,0,856,0],[1220,0,857,0],[1221,4,855,4],[1222,6,855,4,"key"],[1222,9,855,4],[1223,6,855,4,"value"],[1223,11,855,4],[1224,8,855,4],[1224,12,855,4,"_resend"],[1224,19,855,4],[1224,22,855,4,"_asyncToGenerator"],[1224,39,855,4],[1224,40,858,4],[1224,51,858,17,"credentials"],[1224,62,858,28],[1224,64,858,30],[1225,10,859,8],[1225,14,859,12],[1226,12,860,12],[1226,16,860,18,"endpoint"],[1226,24,860,26],[1226,27,860,29],[1226,30,860,32],[1226,34,860,36],[1226,35,860,37,"url"],[1226,38,860,40],[1226,47,860,49],[1227,12,861,12],[1227,16,861,16],[1227,23,861,23],[1227,27,861,27,"credentials"],[1227,38,861,38],[1227,40,861,40],[1228,14,862,16],[1228,18,862,24,"email"],[1228,23,862,29],[1228,26,862,49,"credentials"],[1228,37,862,60],[1228,38,862,24,"email"],[1228,43,862,29],[1229,16,862,31,"type"],[1229,20,862,35],[1229,23,862,49,"credentials"],[1229,34,862,60],[1229,35,862,31,"type"],[1229,39,862,35],[1230,16,862,37,"options"],[1230,23,862,44],[1230,26,862,49,"credentials"],[1230,37,862,60],[1230,38,862,37,"options"],[1230,45,862,44],[1231,14,863,16],[1231,18,863,16,"_yield11"],[1231,26,863,16],[1231,35,863,40],[1231,36,863,41],[1231,37,863,42],[1231,39,863,44,"fetch_1"],[1231,46,863,51],[1231,47,863,52,"_request"],[1231,55,863,60],[1231,57,863,62],[1231,61,863,66],[1231,62,863,67,"fetch"],[1231,67,863,72],[1231,69,863,74],[1231,75,863,80],[1231,77,863,82,"endpoint"],[1231,85,863,90],[1231,87,863,92],[1232,18,864,20,"headers"],[1232,25,864,27],[1232,27,864,29],[1232,31,864,33],[1232,32,864,34,"headers"],[1232,39,864,41],[1233,18,865,20,"body"],[1233,22,865,24],[1233,24,865,26],[1234,20,866,24,"email"],[1234,25,866,29],[1234,27,866,24,"email"],[1234,32,866,29],[1235,20,867,24,"type"],[1235,24,867,28],[1235,26,867,24,"type"],[1235,30,867,28],[1236,20,868,24,"gotrue_meta_security"],[1236,40,868,44],[1236,42,868,46],[1237,22,868,48,"captcha_token"],[1237,35,868,61],[1237,37,868,63,"options"],[1237,44,868,70],[1237,49,868,75],[1237,53,868,79],[1237,57,868,83,"options"],[1237,64,868,90],[1237,69,868,95],[1237,74,868,100],[1237,75,868,101],[1237,78,868,104],[1237,83,868,109],[1237,84,868,110],[1237,87,868,113,"options"],[1237,94,868,120],[1237,95,868,121,"captchaToken"],[1238,20,868,134],[1239,18,869,20],[1239,19,869,21],[1240,18,870,20,"redirectTo"],[1240,28,870,30],[1240,30,870,32,"options"],[1240,37,870,39],[1240,42,870,44],[1240,46,870,48],[1240,50,870,52,"options"],[1240,57,870,59],[1240,62,870,64],[1240,67,870,69],[1240,68,870,70],[1240,71,870,73],[1240,76,870,78],[1240,77,870,79],[1240,80,870,82,"options"],[1240,87,870,89],[1240,88,870,90,"emailRedirectTo"],[1241,16,871,16],[1241,17,871,17],[1241,18,871,18],[1242,16,863,24,"error"],[1242,21,863,29],[1242,24,863,29,"_yield11"],[1242,32,863,29],[1242,33,863,24,"error"],[1242,38,863,29],[1243,14,872,16],[1243,21,872,23],[1244,16,872,25,"data"],[1244,20,872,29],[1244,22,872,31],[1245,18,872,33,"user"],[1245,22,872,37],[1245,24,872,39],[1245,28,872,43],[1246,18,872,45,"session"],[1246,25,872,52],[1246,27,872,54],[1247,16,872,59],[1247,17,872,60],[1248,16,872,62,"error"],[1248,21,872,67],[1248,23,872,62,"error"],[1249,14,872,68],[1249,15,872,69],[1250,12,873,12],[1250,13,873,13],[1250,19,874,17],[1250,23,874,21],[1250,30,874,28],[1250,34,874,32,"credentials"],[1250,45,874,43],[1250,47,874,45],[1251,14,875,16],[1251,18,875,24,"phone"],[1251,23,875,29],[1251,26,875,49,"credentials"],[1251,37,875,60],[1251,38,875,24,"phone"],[1251,43,875,29],[1252,16,875,31,"type"],[1252,21,875,35],[1252,24,875,49,"credentials"],[1252,35,875,60],[1252,36,875,31,"type"],[1252,40,875,35],[1253,16,875,37,"options"],[1253,25,875,44],[1253,28,875,49,"credentials"],[1253,39,875,60],[1253,40,875,37,"options"],[1253,47,875,44],[1254,14,876,16],[1254,18,876,16,"_yield12"],[1254,26,876,16],[1254,35,876,46],[1254,36,876,47],[1254,37,876,48],[1254,39,876,50,"fetch_1"],[1254,46,876,57],[1254,47,876,58,"_request"],[1254,55,876,66],[1254,57,876,68],[1254,61,876,72],[1254,62,876,73,"fetch"],[1254,67,876,78],[1254,69,876,80],[1254,75,876,86],[1254,77,876,88,"endpoint"],[1254,85,876,96],[1254,87,876,98],[1255,18,877,20,"headers"],[1255,25,877,27],[1255,27,877,29],[1255,31,877,33],[1255,32,877,34,"headers"],[1255,39,877,41],[1256,18,878,20,"body"],[1256,22,878,24],[1256,24,878,26],[1257,20,879,24,"phone"],[1257,25,879,29],[1257,27,879,24,"phone"],[1257,32,879,29],[1258,20,880,24,"type"],[1258,24,880,28],[1258,26,880,24,"type"],[1258,31,880,28],[1259,20,881,24,"gotrue_meta_security"],[1259,40,881,44],[1259,42,881,46],[1260,22,881,48,"captcha_token"],[1260,35,881,61],[1260,37,881,63,"options"],[1260,46,881,70],[1260,51,881,75],[1260,55,881,79],[1260,59,881,83,"options"],[1260,68,881,90],[1260,73,881,95],[1260,78,881,100],[1260,79,881,101],[1260,82,881,104],[1260,87,881,109],[1260,88,881,110],[1260,91,881,113,"options"],[1260,100,881,120],[1260,101,881,121,"captchaToken"],[1261,20,881,134],[1262,18,882,20],[1263,16,883,16],[1263,17,883,17],[1263,18,883,18],[1264,16,876,24,"data"],[1264,20,876,28],[1264,23,876,28,"_yield12"],[1264,31,876,28],[1264,32,876,24,"data"],[1264,36,876,28],[1265,16,876,30,"error"],[1265,23,876,35],[1265,26,876,35,"_yield12"],[1265,34,876,35],[1265,35,876,30,"error"],[1265,40,876,35],[1266,14,884,16],[1266,21,884,23],[1267,16,884,25,"data"],[1267,20,884,29],[1267,22,884,31],[1268,18,884,33,"user"],[1268,22,884,37],[1268,24,884,39],[1268,28,884,43],[1269,18,884,45,"session"],[1269,25,884,52],[1269,27,884,54],[1269,31,884,58],[1270,18,884,60,"messageId"],[1270,27,884,69],[1270,29,884,71,"data"],[1270,33,884,75],[1270,38,884,80],[1270,42,884,84],[1270,46,884,88,"data"],[1270,50,884,92],[1270,55,884,97],[1270,60,884,102],[1270,61,884,103],[1270,64,884,106],[1270,69,884,111],[1270,70,884,112],[1270,73,884,115,"data"],[1270,77,884,119],[1270,78,884,120,"message_id"],[1271,16,884,131],[1271,17,884,132],[1272,16,884,134,"error"],[1272,21,884,139],[1272,23,884,134,"error"],[1273,14,884,140],[1273,15,884,141],[1274,12,885,12],[1275,12,886,12],[1275,18,886,18],[1275,22,886,22,"errors_1"],[1275,30,886,30],[1275,31,886,31,"AuthInvalidCredentialsError"],[1275,58,886,58],[1275,59,886,59],[1275,120,886,120],[1275,121,886,121],[1276,10,887,8],[1276,11,887,9],[1276,12,888,8],[1276,19,888,15,"error"],[1276,24,888,20],[1276,26,888,22],[1277,12,889,12],[1277,16,889,16],[1277,17,889,17],[1277,18,889,18],[1277,20,889,20,"errors_1"],[1277,28,889,28],[1277,29,889,29,"isAuthError"],[1277,40,889,40],[1277,42,889,42,"error"],[1277,47,889,47],[1277,48,889,48],[1277,50,889,50],[1278,14,890,16],[1278,21,890,23],[1279,16,890,25,"data"],[1279,20,890,29],[1279,22,890,31],[1280,18,890,33,"user"],[1280,22,890,37],[1280,24,890,39],[1280,28,890,43],[1281,18,890,45,"session"],[1281,25,890,52],[1281,27,890,54],[1282,16,890,59],[1282,17,890,60],[1283,16,890,62,"error"],[1283,21,890,67],[1283,23,890,62,"error"],[1284,14,890,68],[1284,15,890,69],[1285,12,891,12],[1286,12,892,12],[1286,18,892,18,"error"],[1286,23,892,23],[1287,10,893,8],[1288,8,894,4],[1288,9,894,5],[1289,8,894,5],[1289,17,858,10,"resend"],[1289,23,858,16,"resend"],[1289,24,858,16,"_x16"],[1289,28,858,16],[1290,10,858,16],[1290,17,858,16,"_resend"],[1290,24,858,16],[1290,25,858,16,"apply"],[1290,30,858,16],[1290,37,858,16,"arguments"],[1290,46,858,16],[1291,8,858,16],[1292,8,858,16],[1292,15,858,10,"resend"],[1292,21,858,16],[1293,6,858,16],[1294,6,895,4],[1295,0,896,0],[1296,0,897,0],[1297,0,898,0],[1298,0,899,0],[1299,0,900,0],[1300,0,901,0],[1301,0,902,0],[1302,0,903,0],[1303,0,904,0],[1304,0,905,0],[1305,6,895,4],[1306,4,895,4],[1307,6,895,4,"key"],[1307,9,895,4],[1308,6,895,4,"value"],[1308,11,895,4],[1309,8,895,4],[1309,12,895,4,"_getSession"],[1309,23,895,4],[1309,26,895,4,"_asyncToGenerator"],[1309,43,895,4],[1309,44,906,4],[1309,57,906,23],[1310,10,906,23],[1310,14,906,23,"_this7"],[1310,20,906,23],[1311,10,907,8],[1311,16,907,14],[1311,20,907,18],[1311,21,907,19,"initializePromise"],[1311,38,907,36],[1312,10,908,8],[1312,14,908,14,"result"],[1312,20,908,20],[1312,29,908,29],[1312,33,908,33],[1312,34,908,34,"_acquireLock"],[1312,46,908,46],[1312,47,908,47],[1312,48,908,48],[1312,49,908,49],[1312,64,908,49,"_asyncToGenerator"],[1312,81,908,49],[1312,82,908,51],[1312,95,908,63],[1313,12,909,12],[1313,19,909,19,"_this7"],[1313,25,909,23],[1313,26,909,24,"_useSession"],[1313,37,909,35],[1314,14,909,35],[1314,18,909,35,"_ref9"],[1314,23,909,35],[1314,26,909,35,"_asyncToGenerator"],[1314,43,909,35],[1314,44,909,36],[1314,55,909,43,"result"],[1314,61,909,49],[1314,63,909,54],[1315,16,910,16],[1315,23,910,23,"result"],[1315,29,910,29],[1316,14,911,12],[1316,15,911,13],[1317,14,911,13],[1317,31,911,13,"_x17"],[1317,35,911,13],[1318,16,911,13],[1318,23,911,13,"_ref9"],[1318,28,911,13],[1318,29,911,13,"apply"],[1318,34,911,13],[1318,41,911,13,"arguments"],[1318,50,911,13],[1319,14,911,13],[1320,12,911,13],[1320,16,911,14],[1321,10,912,8],[1321,11,912,9],[1321,13,912,10],[1322,10,913,8],[1322,17,913,15,"result"],[1322,23,913,21],[1323,8,914,4],[1323,9,914,5],[1324,8,914,5],[1324,17,906,10,"getSession"],[1324,27,906,20,"getSession"],[1324,28,906,20],[1325,10,906,20],[1325,17,906,20,"_getSession"],[1325,28,906,20],[1325,29,906,20,"apply"],[1325,34,906,20],[1325,41,906,20,"arguments"],[1325,50,906,20],[1326,8,906,20],[1327,8,906,20],[1327,15,906,10,"getSession"],[1327,25,906,20],[1328,6,906,20],[1329,6,915,4],[1330,0,916,0],[1331,0,917,0],[1332,6,915,4],[1333,4,915,4],[1334,6,915,4,"key"],[1334,9,915,4],[1335,6,915,4,"value"],[1335,11,915,4],[1336,8,915,4],[1336,12,915,4,"_acquireLock2"],[1336,25,915,4],[1336,28,915,4,"_asyncToGenerator"],[1336,45,915,4],[1336,46,918,4],[1336,57,918,23,"acquireTimeout"],[1336,71,918,37],[1336,73,918,39,"fn"],[1336,75,918,41],[1336,77,918,43],[1337,10,918,43],[1337,14,918,43,"_this8"],[1337,20,918,43],[1338,10,919,8],[1338,14,919,12],[1338,15,919,13,"_debug"],[1338,21,919,19],[1338,22,919,20],[1338,37,919,35],[1338,39,919,37],[1338,46,919,44],[1338,48,919,46,"acquireTimeout"],[1338,62,919,60],[1338,63,919,61],[1339,10,920,8],[1339,14,920,12],[1340,12,921,12],[1340,16,921,16],[1340,20,921,20],[1340,21,921,21,"lockAcquired"],[1340,33,921,33],[1340,35,921,35],[1341,14,922,16],[1341,18,922,22,"last"],[1341,22,922,26],[1341,25,922,29],[1341,29,922,33],[1341,30,922,34,"pendingInLock"],[1341,43,922,47],[1341,44,922,48,"length"],[1341,50,922,54],[1341,53,923,22],[1341,57,923,26],[1341,58,923,27,"pendingInLock"],[1341,71,923,40],[1341,72,923,41],[1341,76,923,45],[1341,77,923,46,"pendingInLock"],[1341,90,923,59],[1341,91,923,60,"length"],[1341,97,923,66],[1341,100,923,69],[1341,101,923,70],[1341,102,923,71],[1341,105,924,22,"Promise"],[1341,112,924,29],[1341,113,924,30,"resolve"],[1341,120,924,37],[1341,121,924,38],[1341,122,924,39],[1342,14,925,16],[1342,18,925,22,"result"],[1342,24,925,28],[1342,27,925,31,"_asyncToGenerator"],[1342,44,925,31],[1342,45,925,32],[1342,58,925,44],[1343,16,926,20],[1343,22,926,26,"last"],[1343,26,926,30],[1344,16,927,20],[1344,29,927,33,"fn"],[1344,31,927,35],[1344,32,927,36],[1344,33,927,37],[1345,14,928,16],[1345,15,928,17],[1345,17,928,19],[1345,18,928,20],[1346,14,929,16],[1346,18,929,20],[1346,19,929,21,"pendingInLock"],[1346,32,929,34],[1346,33,929,35,"push"],[1346,37,929,39],[1346,38,929,40,"_asyncToGenerator"],[1346,55,929,40],[1346,56,929,41],[1346,69,929,53],[1347,16,930,20],[1347,20,930,24],[1348,18,931,24],[1348,24,931,30,"result"],[1348,30,931,36],[1349,16,932,20],[1349,17,932,21],[1349,18,933,20],[1349,25,933,27,"e"],[1349,26,933,28],[1349,28,933,30],[1350,18,934,24],[1351,16,934,24],[1352,14,936,16],[1352,15,936,17],[1352,17,936,19],[1352,18,936,20],[1352,19,936,21],[1353,14,937,16],[1353,21,937,23,"result"],[1353,27,937,29],[1354,12,938,12],[1355,12,939,12],[1355,25,939,25],[1355,29,939,29],[1355,30,939,30,"lock"],[1355,34,939,34],[1355,35,939,35],[1355,43,939,43],[1355,47,939,47],[1355,48,939,48,"storageKey"],[1355,58,939,58],[1355,60,939,60],[1355,62,939,62,"acquireTimeout"],[1355,76,939,76],[1355,91,939,76,"_asyncToGenerator"],[1355,108,939,76],[1355,109,939,78],[1355,122,939,90],[1356,14,940,16,"_this8"],[1356,20,940,20],[1356,21,940,21,"_debug"],[1356,27,940,27],[1356,28,940,28],[1356,43,940,43],[1356,45,940,45],[1356,76,940,76],[1356,78,940,78,"_this8"],[1356,84,940,82],[1356,85,940,83,"storageKey"],[1356,95,940,93],[1356,96,940,94],[1357,14,941,16],[1357,18,941,20],[1358,16,942,20,"_this8"],[1358,22,942,24],[1358,23,942,25,"lockAcquired"],[1358,35,942,37],[1358,38,942,40],[1358,42,942,44],[1359,16,943,20],[1359,20,943,26,"result"],[1359,27,943,32],[1359,30,943,35,"fn"],[1359,32,943,37],[1359,33,943,38],[1359,34,943,39],[1360,16,944,20,"_this8"],[1360,22,944,24],[1360,23,944,25,"pendingInLock"],[1360,36,944,38],[1360,37,944,39,"push"],[1360,41,944,43],[1360,42,944,44,"_asyncToGenerator"],[1360,59,944,44],[1360,60,944,45],[1360,73,944,57],[1361,18,945,24],[1361,22,945,28],[1362,20,946,28],[1362,26,946,34,"result"],[1362,33,946,40],[1363,18,947,24],[1363,19,947,25],[1363,20,948,24],[1363,27,948,31,"e"],[1363,28,948,32],[1363,30,948,34],[1364,20,949,28],[1365,18,949,28],[1366,16,951,20],[1366,17,951,21],[1366,19,951,23],[1366,20,951,24],[1366,21,951,25],[1367,16,952,20],[1367,22,952,26,"result"],[1367,29,952,32],[1368,16,953,20],[1369,16,954,20],[1369,23,954,27,"_this8"],[1369,29,954,31],[1369,30,954,32,"pendingInLock"],[1369,43,954,45],[1369,44,954,46,"length"],[1369,50,954,52],[1369,52,954,54],[1370,18,955,24],[1370,22,955,30,"waitOn"],[1370,28,955,36],[1370,31,955,36,"_toConsumableArray"],[1370,49,955,36],[1370,50,955,43,"_this8"],[1370,56,955,47],[1370,57,955,48,"pendingInLock"],[1370,70,955,61],[1370,71,955,62],[1371,18,956,24],[1371,24,956,30,"Promise"],[1371,31,956,37],[1371,32,956,38,"all"],[1371,35,956,41],[1371,36,956,42,"waitOn"],[1371,42,956,48],[1371,43,956,49],[1372,18,957,24,"_this8"],[1372,24,957,28],[1372,25,957,29,"pendingInLock"],[1372,38,957,42],[1372,39,957,43,"splice"],[1372,45,957,49],[1372,46,957,50],[1372,47,957,51],[1372,49,957,53,"waitOn"],[1372,55,957,59],[1372,56,957,60,"length"],[1372,62,957,66],[1372,63,957,67],[1373,16,958,20],[1374,16,959,20],[1374,29,959,33,"result"],[1374,36,959,39],[1375,14,960,16],[1375,15,960,17],[1375,24,961,24],[1376,16,962,20,"_this8"],[1376,22,962,24],[1376,23,962,25,"_debug"],[1376,29,962,31],[1376,30,962,32],[1376,45,962,47],[1376,47,962,49],[1376,78,962,80],[1376,80,962,82,"_this8"],[1376,86,962,86],[1376,87,962,87,"storageKey"],[1376,97,962,97],[1376,98,962,98],[1377,16,963,20,"_this8"],[1377,22,963,24],[1377,23,963,25,"lockAcquired"],[1377,35,963,37],[1377,38,963,40],[1377,43,963,45],[1378,14,964,16],[1379,12,965,12],[1379,13,965,13],[1379,15,965,14],[1380,10,966,8],[1380,11,966,9],[1380,20,967,16],[1381,12,968,12],[1381,16,968,16],[1381,17,968,17,"_debug"],[1381,23,968,23],[1381,24,968,24],[1381,39,968,39],[1381,41,968,41],[1381,46,968,46],[1381,47,968,47],[1382,10,969,8],[1383,8,970,4],[1383,9,970,5],[1384,8,970,5],[1384,17,918,10,"_acquireLock"],[1384,29,918,22,"_acquireLock"],[1384,30,918,22,"_x18"],[1384,34,918,22],[1384,36,918,22,"_x19"],[1384,40,918,22],[1385,10,918,22],[1385,17,918,22,"_acquireLock2"],[1385,30,918,22],[1385,31,918,22,"apply"],[1385,36,918,22],[1385,43,918,22,"arguments"],[1385,52,918,22],[1386,8,918,22],[1387,8,918,22],[1387,15,918,10,"_acquireLock"],[1387,27,918,22],[1388,6,918,22],[1389,6,971,4],[1390,0,972,0],[1391,0,973,0],[1392,0,974,0],[1393,0,975,0],[1394,0,976,0],[1395,6,971,4],[1396,4,971,4],[1397,6,971,4,"key"],[1397,9,971,4],[1398,6,971,4,"value"],[1398,11,971,4],[1399,8,971,4],[1399,12,971,4,"_useSession2"],[1399,24,971,4],[1399,27,971,4,"_asyncToGenerator"],[1399,44,971,4],[1399,45,977,4],[1399,56,977,22,"fn"],[1399,58,977,24],[1399,60,977,26],[1400,10,978,8],[1400,14,978,12],[1400,15,978,13,"_debug"],[1400,21,978,19],[1400,22,978,20],[1400,36,978,34],[1400,38,978,36],[1400,45,978,43],[1400,46,978,44],[1401,10,979,8],[1401,14,979,12],[1402,12,980,12],[1403,12,981,12],[1403,16,981,18,"result"],[1403,22,981,24],[1403,31,981,33],[1403,35,981,37],[1403,36,981,38,"__loadSession"],[1403,49,981,51],[1403,50,981,52],[1403,51,981,53],[1404,12,982,12],[1404,25,982,25,"fn"],[1404,27,982,27],[1404,28,982,28,"result"],[1404,34,982,34],[1404,35,982,35],[1405,10,983,8],[1405,11,983,9],[1405,20,984,16],[1406,12,985,12],[1406,16,985,16],[1406,17,985,17,"_debug"],[1406,23,985,23],[1406,24,985,24],[1406,38,985,38],[1406,40,985,40],[1406,45,985,45],[1406,46,985,46],[1407,10,986,8],[1408,8,987,4],[1408,9,987,5],[1409,8,987,5],[1409,17,977,10,"_useSession"],[1409,28,977,21,"_useSession"],[1409,29,977,21,"_x20"],[1409,33,977,21],[1410,10,977,21],[1410,17,977,21,"_useSession2"],[1410,29,977,21],[1410,30,977,21,"apply"],[1410,35,977,21],[1410,42,977,21,"arguments"],[1410,51,977,21],[1411,8,977,21],[1412,8,977,21],[1412,15,977,10,"_useSession"],[1412,26,977,21],[1413,6,977,21],[1414,6,988,4],[1415,0,989,0],[1416,0,990,0],[1417,0,991,0],[1418,0,992,0],[1419,6,988,4],[1420,4,988,4],[1421,6,988,4,"key"],[1421,9,988,4],[1422,6,988,4,"value"],[1422,11,988,4],[1423,8,988,4],[1423,12,988,4,"_loadSession"],[1423,24,988,4],[1423,27,988,4,"_asyncToGenerator"],[1423,44,988,4],[1423,45,993,4],[1423,58,993,26],[1424,10,993,26],[1424,14,993,26,"_this9"],[1424,20,993,26],[1425,10,994,8],[1425,14,994,12],[1425,15,994,13,"_debug"],[1425,21,994,19],[1425,22,994,20],[1425,40,994,38],[1425,42,994,40],[1425,49,994,47],[1425,50,994,48],[1426,10,995,8],[1426,14,995,12],[1426,15,995,13],[1426,19,995,17],[1426,20,995,18,"lockAcquired"],[1426,32,995,30],[1426,34,995,32],[1427,12,996,12],[1427,16,996,16],[1427,17,996,17,"_debug"],[1427,23,996,23],[1427,24,996,24],[1427,42,996,42],[1427,44,996,44],[1427,79,996,79],[1427,81,996,81],[1427,85,996,85,"Error"],[1427,90,996,90],[1427,91,996,91],[1427,92,996,92],[1427,93,996,93,"stack"],[1427,98,996,98],[1427,99,996,99],[1428,10,997,8],[1429,10,998,8],[1429,14,998,12],[1430,12,999,12],[1430,16,999,16,"currentSession"],[1430,30,999,30],[1430,33,999,33],[1430,37,999,37],[1431,12,1000,12],[1431,16,1000,18,"maybeSession"],[1431,28,1000,30],[1431,37,1000,39],[1431,38,1000,40],[1431,39,1000,41],[1431,41,1000,43,"helpers_1"],[1431,50,1000,52],[1431,51,1000,53,"getItemAsync"],[1431,63,1000,65],[1431,65,1000,67],[1431,69,1000,71],[1431,70,1000,72,"storage"],[1431,77,1000,79],[1431,79,1000,81],[1431,83,1000,85],[1431,84,1000,86,"storageKey"],[1431,94,1000,96],[1431,95,1000,97],[1432,12,1001,12],[1432,16,1001,16],[1432,17,1001,17,"_debug"],[1432,23,1001,23],[1432,24,1001,24],[1432,39,1001,39],[1432,41,1001,41],[1432,63,1001,63],[1432,65,1001,65,"maybeSession"],[1432,77,1001,77],[1432,78,1001,78],[1433,12,1002,12],[1433,16,1002,16,"maybeSession"],[1433,28,1002,28],[1433,33,1002,33],[1433,37,1002,37],[1433,39,1002,39],[1434,14,1003,16],[1434,18,1003,20],[1434,22,1003,24],[1434,23,1003,25,"_isValidSession"],[1434,38,1003,40],[1434,39,1003,41,"maybeSession"],[1434,51,1003,53],[1434,52,1003,54],[1434,54,1003,56],[1435,16,1004,20,"currentSession"],[1435,30,1004,34],[1435,33,1004,37,"maybeSession"],[1435,45,1004,49],[1436,14,1005,16],[1436,15,1005,17],[1436,21,1006,21],[1437,16,1007,20],[1437,20,1007,24],[1437,21,1007,25,"_debug"],[1437,27,1007,31],[1437,28,1007,32],[1437,43,1007,47],[1437,45,1007,49],[1437,80,1007,84],[1437,81,1007,85],[1438,16,1008,20],[1438,22,1008,26],[1438,26,1008,30],[1438,27,1008,31,"_removeSession"],[1438,41,1008,45],[1438,42,1008,46],[1438,43,1008,47],[1439,14,1009,16],[1440,12,1010,12],[1441,12,1011,12],[1441,16,1011,16],[1441,17,1011,17,"currentSession"],[1441,31,1011,31],[1441,33,1011,33],[1442,14,1012,16],[1442,21,1012,23],[1443,16,1012,25,"data"],[1443,20,1012,29],[1443,22,1012,31],[1444,18,1012,33,"session"],[1444,25,1012,40],[1444,27,1012,42],[1445,16,1012,47],[1445,17,1012,48],[1446,16,1012,50,"error"],[1446,21,1012,55],[1446,23,1012,57],[1447,14,1012,62],[1447,15,1012,63],[1448,12,1013,12],[1449,12,1014,12],[1450,12,1015,12],[1451,12,1016,12],[1452,12,1017,12],[1453,12,1018,12],[1454,12,1019,12],[1454,16,1019,18,"hasExpired"],[1454,26,1019,28],[1454,29,1019,31,"currentSession"],[1454,43,1019,45],[1454,44,1019,46,"expires_at"],[1454,54,1019,56],[1454,57,1020,18,"currentSession"],[1454,71,1020,32],[1454,72,1020,33,"expires_at"],[1454,82,1020,43],[1454,85,1020,46],[1454,89,1020,50],[1454,92,1020,53,"Date"],[1454,96,1020,57],[1454,97,1020,58,"now"],[1454,100,1020,61],[1454,101,1020,62],[1454,102,1020,63],[1454,105,1020,66,"constants_1"],[1454,116,1020,77],[1454,117,1020,78,"EXPIRY_MARGIN_MS"],[1454,133,1020,94],[1454,136,1021,18],[1454,141,1021,23],[1455,12,1022,12],[1455,16,1022,16],[1455,17,1022,17,"_debug"],[1455,23,1022,23],[1455,24,1022,24],[1455,42,1022,42],[1455,44,1022,44],[1455,58,1022,58,"hasExpired"],[1455,68,1022,68],[1455,71,1022,71],[1455,73,1022,73],[1455,76,1022,76],[1455,82,1022,82],[1455,92,1022,92],[1455,94,1022,94],[1455,106,1022,106],[1455,108,1022,108,"currentSession"],[1455,122,1022,122],[1455,123,1022,123,"expires_at"],[1455,133,1022,133],[1455,134,1022,134],[1456,12,1023,12],[1456,16,1023,16],[1456,17,1023,17,"hasExpired"],[1456,27,1023,27],[1456,29,1023,29],[1457,14,1024,16],[1457,18,1024,20],[1457,22,1024,24],[1457,23,1024,25,"userStorage"],[1457,34,1024,36],[1457,36,1024,38],[1458,16,1025,20],[1458,20,1025,26,"maybeUser"],[1458,29,1025,35],[1458,38,1025,45],[1458,39,1025,46],[1458,40,1025,47],[1458,42,1025,49,"helpers_1"],[1458,51,1025,58],[1458,52,1025,59,"getItemAsync"],[1458,64,1025,71],[1458,66,1025,73],[1458,70,1025,77],[1458,71,1025,78,"userStorage"],[1458,82,1025,89],[1458,84,1025,91],[1458,88,1025,95],[1458,89,1025,96,"storageKey"],[1458,99,1025,106],[1458,102,1025,109],[1458,109,1025,116],[1458,110,1025,118],[1459,16,1026,20],[1459,20,1026,24,"maybeUser"],[1459,29,1026,33],[1459,34,1026,38],[1459,38,1026,42],[1459,42,1026,46,"maybeUser"],[1459,51,1026,55],[1459,56,1026,60],[1459,61,1026,65],[1459,62,1026,66],[1459,65,1026,69],[1459,70,1026,74],[1459,71,1026,75],[1459,74,1026,78,"maybeUser"],[1459,83,1026,87],[1459,84,1026,88,"user"],[1459,88,1026,92],[1459,90,1026,94],[1460,18,1027,24,"currentSession"],[1460,32,1027,38],[1460,33,1027,39,"user"],[1460,37,1027,43],[1460,40,1027,46,"maybeUser"],[1460,49,1027,55],[1460,50,1027,56,"user"],[1460,54,1027,60],[1461,16,1028,20],[1461,17,1028,21],[1461,23,1029,25],[1462,18,1030,24,"currentSession"],[1462,32,1030,38],[1462,33,1030,39,"user"],[1462,37,1030,43],[1462,40,1030,46],[1462,41,1030,47],[1462,42,1030,48],[1462,44,1030,50,"helpers_1"],[1462,53,1030,59],[1462,54,1030,60,"userNotAvailableProxy"],[1462,75,1030,81],[1462,77,1030,83],[1462,78,1030,84],[1463,16,1031,20],[1464,14,1032,16],[1465,14,1033,16],[1465,18,1033,20],[1465,22,1033,24],[1465,23,1033,25,"storage"],[1465,30,1033,32],[1465,31,1033,33,"isServer"],[1465,39,1033,41],[1465,43,1033,45,"currentSession"],[1465,57,1033,59],[1465,58,1033,60,"user"],[1465,62,1033,64],[1465,64,1033,66],[1466,16,1034,20],[1466,20,1034,24,"suppressWarning"],[1466,35,1034,39],[1466,38,1034,42],[1466,42,1034,46],[1466,43,1034,47,"suppressGetSessionWarning"],[1466,68,1034,72],[1467,16,1035,20],[1467,20,1035,26,"proxySession"],[1467,32,1035,38],[1467,35,1035,41],[1467,39,1035,45,"Proxy"],[1467,44,1035,50],[1467,45,1035,51,"currentSession"],[1467,59,1035,65],[1467,61,1035,67],[1468,18,1036,24,"get"],[1468,21,1036,27],[1468,23,1036,29],[1468,32,1036,24,"get"],[1468,35,1036,27,"get"],[1468,36,1036,30,"target"],[1468,42,1036,36],[1468,44,1036,38,"prop"],[1468,48,1036,42],[1468,50,1036,44,"receiver"],[1468,58,1036,52],[1468,60,1036,57],[1469,20,1037,28],[1469,24,1037,32],[1469,25,1037,33,"suppressWarning"],[1469,40,1037,48],[1469,44,1037,52,"prop"],[1469,48,1037,56],[1469,53,1037,61],[1469,59,1037,67],[1469,61,1037,69],[1470,22,1038,32],[1471,22,1039,32,"console"],[1471,29,1039,39],[1471,30,1039,40,"warn"],[1471,34,1039,44],[1471,35,1039,45],[1471,388,1039,398],[1471,389,1039,399],[1472,22,1040,32,"suppressWarning"],[1472,37,1040,47],[1472,40,1040,50],[1472,44,1040,54],[1472,45,1040,55],[1472,46,1040,56],[1473,22,1041,32,"_this9"],[1473,28,1041,36],[1473,29,1041,37,"suppressGetSessionWarning"],[1473,54,1041,62],[1473,57,1041,65],[1473,61,1041,69],[1473,62,1041,70],[1473,63,1041,71],[1474,20,1042,28],[1475,20,1043,28],[1475,27,1043,35,"Reflect"],[1475,34,1043,42],[1475,35,1043,43,"get"],[1475,38,1043,46],[1475,39,1043,47,"target"],[1475,45,1043,53],[1475,47,1043,55,"prop"],[1475,51,1043,59],[1475,53,1043,61,"receiver"],[1475,61,1043,69],[1475,62,1043,70],[1476,18,1044,24],[1477,16,1045,20],[1477,17,1045,21],[1477,18,1045,22],[1478,16,1046,20,"currentSession"],[1478,30,1046,34],[1478,33,1046,37,"proxySession"],[1478,45,1046,49],[1479,14,1047,16],[1480,14,1048,16],[1480,21,1048,23],[1481,16,1048,25,"data"],[1481,20,1048,29],[1481,22,1048,31],[1482,18,1048,33,"session"],[1482,25,1048,40],[1482,27,1048,42,"currentSession"],[1483,16,1048,57],[1483,17,1048,58],[1484,16,1048,60,"error"],[1484,21,1048,65],[1484,23,1048,67],[1485,14,1048,72],[1485,15,1048,73],[1486,12,1049,12],[1487,12,1050,12],[1487,16,1050,12,"_yield$this$_callRefr"],[1487,37,1050,12],[1487,46,1050,45],[1487,50,1050,49],[1487,51,1050,50,"_callRefreshToken"],[1487,68,1050,67],[1487,69,1050,68,"currentSession"],[1487,83,1050,82],[1487,84,1050,83,"refresh_token"],[1487,97,1050,96],[1487,98,1050,97],[1488,14,1050,20,"session"],[1488,21,1050,27],[1488,24,1050,27,"_yield$this$_callRefr"],[1488,45,1050,27],[1488,46,1050,20,"session"],[1488,53,1050,27],[1489,14,1050,29,"error"],[1489,19,1050,34],[1489,22,1050,34,"_yield$this$_callRefr"],[1489,43,1050,34],[1489,44,1050,29,"error"],[1489,49,1050,34],[1490,12,1051,12],[1490,16,1051,16,"error"],[1490,21,1051,21],[1490,23,1051,23],[1491,14,1052,16],[1491,21,1052,23],[1492,16,1052,25,"data"],[1492,20,1052,29],[1492,22,1052,31],[1493,18,1052,33,"session"],[1493,25,1052,40],[1493,27,1052,42],[1494,16,1052,47],[1494,17,1052,48],[1495,16,1052,50,"error"],[1495,21,1052,55],[1495,23,1052,50,"error"],[1496,14,1052,56],[1496,15,1052,57],[1497,12,1053,12],[1498,12,1054,12],[1498,19,1054,19],[1499,14,1054,21,"data"],[1499,18,1054,25],[1499,20,1054,27],[1500,16,1054,29,"session"],[1500,23,1054,36],[1500,25,1054,29,"session"],[1501,14,1054,37],[1501,15,1054,38],[1502,14,1054,40,"error"],[1502,19,1054,45],[1502,21,1054,47],[1503,12,1054,52],[1503,13,1054,53],[1504,10,1055,8],[1504,11,1055,9],[1504,20,1056,16],[1505,12,1057,12],[1505,16,1057,16],[1505,17,1057,17,"_debug"],[1505,23,1057,23],[1505,24,1057,24],[1505,42,1057,42],[1505,44,1057,44],[1505,49,1057,49],[1505,50,1057,50],[1506,10,1058,8],[1507,8,1059,4],[1507,9,1059,5],[1508,8,1059,5],[1508,17,993,10,"__loadSession"],[1508,30,993,23,"__loadSession"],[1508,31,993,23],[1509,10,993,23],[1509,17,993,23,"_loadSession"],[1509,29,993,23],[1509,30,993,23,"apply"],[1509,35,993,23],[1509,42,993,23,"arguments"],[1509,51,993,23],[1510,8,993,23],[1511,8,993,23],[1511,15,993,10,"__loadSession"],[1511,28,993,23],[1512,6,993,23],[1513,6,1060,4],[1514,0,1061,0],[1515,0,1062,0],[1516,0,1063,0],[1517,0,1064,0],[1518,0,1065,0],[1519,0,1066,0],[1520,6,1060,4],[1521,4,1060,4],[1522,6,1060,4,"key"],[1522,9,1060,4],[1523,6,1060,4,"value"],[1523,11,1060,4],[1524,8,1060,4],[1524,12,1060,4,"_getUser2"],[1524,21,1060,4],[1524,24,1060,4,"_asyncToGenerator"],[1524,41,1060,4],[1524,42,1067,4],[1524,53,1067,18,"jwt"],[1524,56,1067,21],[1524,58,1067,23],[1525,10,1067,23],[1525,14,1067,23,"_this0"],[1525,20,1067,23],[1526,10,1068,8],[1526,14,1068,12,"jwt"],[1526,17,1068,15],[1526,19,1068,17],[1527,12,1069,12],[1527,25,1069,25],[1527,29,1069,29],[1527,30,1069,30,"_getUser"],[1527,38,1069,38],[1527,39,1069,39,"jwt"],[1527,42,1069,42],[1527,43,1069,43],[1528,10,1070,8],[1529,10,1071,8],[1529,16,1071,14],[1529,20,1071,18],[1529,21,1071,19,"initializePromise"],[1529,38,1071,36],[1530,10,1072,8],[1530,14,1072,14,"result"],[1530,20,1072,20],[1530,29,1072,29],[1530,33,1072,33],[1530,34,1072,34,"_acquireLock"],[1530,46,1072,46],[1530,47,1072,47],[1530,48,1072,48],[1530,49,1072,49],[1530,64,1072,49,"_asyncToGenerator"],[1530,81,1072,49],[1530,82,1072,51],[1530,95,1072,63],[1531,12,1073,12],[1531,25,1073,25,"_this0"],[1531,31,1073,29],[1531,32,1073,30,"_getUser"],[1531,40,1073,38],[1531,41,1073,39],[1531,42,1073,40],[1532,10,1074,8],[1532,11,1074,9],[1532,13,1074,10],[1533,10,1075,8],[1533,17,1075,15,"result"],[1533,23,1075,21],[1534,8,1076,4],[1534,9,1076,5],[1535,8,1076,5],[1535,17,1067,10,"getUser"],[1535,24,1067,17,"getUser"],[1535,25,1067,17,"_x21"],[1535,29,1067,17],[1536,10,1067,17],[1536,17,1067,17,"_getUser2"],[1536,26,1067,17],[1536,27,1067,17,"apply"],[1536,32,1067,17],[1536,39,1067,17,"arguments"],[1536,48,1067,17],[1537,8,1067,17],[1538,8,1067,17],[1538,15,1067,10,"getUser"],[1538,22,1067,17],[1539,6,1067,17],[1540,4,1067,17],[1541,6,1067,17,"key"],[1541,9,1067,17],[1542,6,1067,17,"value"],[1542,11,1067,17],[1543,8,1067,17],[1543,12,1067,17,"_getUser3"],[1543,21,1067,17],[1543,24,1067,17,"_asyncToGenerator"],[1543,41,1067,17],[1543,42,1077,4],[1543,53,1077,19,"jwt"],[1543,56,1077,22],[1543,58,1077,24],[1544,10,1077,24],[1544,14,1077,24,"_this1"],[1544,20,1077,24],[1545,10,1078,8],[1545,14,1078,12],[1546,12,1079,12],[1546,16,1079,16,"jwt"],[1546,19,1079,19],[1546,21,1079,21],[1547,14,1080,16],[1547,27,1080,29],[1547,28,1080,30],[1547,29,1080,31],[1547,31,1080,33,"fetch_1"],[1547,38,1080,40],[1547,39,1080,41,"_request"],[1547,47,1080,49],[1547,49,1080,51],[1547,53,1080,55],[1547,54,1080,56,"fetch"],[1547,59,1080,61],[1547,61,1080,63],[1547,66,1080,68],[1547,68,1080,70],[1547,71,1080,73],[1547,75,1080,77],[1547,76,1080,78,"url"],[1547,79,1080,81],[1547,86,1080,88],[1547,88,1080,90],[1548,16,1081,20,"headers"],[1548,23,1081,27],[1548,25,1081,29],[1548,29,1081,33],[1548,30,1081,34,"headers"],[1548,37,1081,41],[1549,16,1082,20,"jwt"],[1549,19,1082,23],[1549,21,1082,25,"jwt"],[1549,24,1082,28],[1550,16,1083,20,"xform"],[1550,21,1083,25],[1550,23,1083,27,"fetch_1"],[1550,30,1083,34],[1550,31,1083,35,"_userResponse"],[1551,14,1084,16],[1551,15,1084,17],[1551,16,1084,18],[1552,12,1085,12],[1553,12,1086,12],[1553,25,1086,25],[1553,29,1086,29],[1553,30,1086,30,"_useSession"],[1553,41,1086,41],[1554,14,1086,41],[1554,18,1086,41,"_ref13"],[1554,24,1086,41],[1554,27,1086,41,"_asyncToGenerator"],[1554,44,1086,41],[1554,45,1086,42],[1554,56,1086,49,"result"],[1554,62,1086,55],[1554,64,1086,60],[1555,16,1087,16],[1555,20,1087,20,"_a"],[1555,22,1087,22],[1555,24,1087,24,"_b"],[1555,26,1087,26],[1555,28,1087,28,"_c"],[1555,30,1087,30],[1556,16,1088,16],[1556,20,1088,24,"data"],[1556,24,1088,28],[1556,27,1088,40,"result"],[1556,33,1088,46],[1556,34,1088,24,"data"],[1556,38,1088,28],[1557,18,1088,30,"error"],[1557,23,1088,35],[1557,26,1088,40,"result"],[1557,32,1088,46],[1557,33,1088,30,"error"],[1557,38,1088,35],[1558,16,1089,16],[1558,20,1089,20,"error"],[1558,25,1089,25],[1558,27,1089,27],[1559,18,1090,20],[1559,24,1090,26,"error"],[1559,29,1090,31],[1560,16,1091,16],[1561,16,1092,16],[1562,16,1093,16],[1562,20,1093,20],[1562,22,1093,22],[1562,23,1093,23,"_a"],[1562,25,1093,25],[1562,28,1093,28,"data"],[1562,32,1093,32],[1562,33,1093,33,"session"],[1562,40,1093,40],[1562,46,1093,46],[1562,50,1093,50],[1562,54,1093,54,"_a"],[1562,56,1093,56],[1562,61,1093,61],[1562,66,1093,66],[1562,67,1093,67],[1562,70,1093,70],[1562,75,1093,75],[1562,76,1093,76],[1562,79,1093,79,"_a"],[1562,81,1093,81],[1562,82,1093,82,"access_token"],[1562,94,1093,94],[1562,95,1093,95],[1562,99,1093,99],[1562,100,1093,100,"_this1"],[1562,106,1093,104],[1562,107,1093,105,"hasCustomAuthorizationHeader"],[1562,135,1093,133],[1562,137,1093,135],[1563,18,1094,20],[1563,25,1094,27],[1564,20,1094,29,"data"],[1564,24,1094,33],[1564,26,1094,35],[1565,22,1094,37,"user"],[1565,26,1094,41],[1565,28,1094,43],[1566,20,1094,48],[1566,21,1094,49],[1567,20,1094,51,"error"],[1567,25,1094,56],[1567,27,1094,58],[1567,31,1094,62,"errors_1"],[1567,39,1094,70],[1567,40,1094,71,"AuthSessionMissingError"],[1567,63,1094,94],[1567,64,1094,95],[1568,18,1094,97],[1568,19,1094,98],[1569,16,1095,16],[1570,16,1096,16],[1570,29,1096,29],[1570,30,1096,30],[1570,31,1096,31],[1570,33,1096,33,"fetch_1"],[1570,40,1096,40],[1570,41,1096,41,"_request"],[1570,49,1096,49],[1570,51,1096,51,"_this1"],[1570,57,1096,55],[1570,58,1096,56,"fetch"],[1570,63,1096,61],[1570,65,1096,63],[1570,70,1096,68],[1570,72,1096,70],[1570,75,1096,73,"_this1"],[1570,81,1096,77],[1570,82,1096,78,"url"],[1570,85,1096,81],[1570,92,1096,88],[1570,94,1096,90],[1571,18,1097,20,"headers"],[1571,25,1097,27],[1571,27,1097,29,"_this1"],[1571,33,1097,33],[1571,34,1097,34,"headers"],[1571,41,1097,41],[1572,18,1098,20,"jwt"],[1572,21,1098,23],[1572,23,1098,25],[1572,24,1098,26,"_c"],[1572,26,1098,28],[1572,29,1098,31],[1572,30,1098,32,"_b"],[1572,32,1098,34],[1572,35,1098,37,"data"],[1572,39,1098,41],[1572,40,1098,42,"session"],[1572,47,1098,49],[1572,53,1098,55],[1572,57,1098,59],[1572,61,1098,63,"_b"],[1572,63,1098,65],[1572,68,1098,70],[1572,73,1098,75],[1572,74,1098,76],[1572,77,1098,79],[1572,82,1098,84],[1572,83,1098,85],[1572,86,1098,88,"_b"],[1572,88,1098,90],[1572,89,1098,91,"access_token"],[1572,101,1098,103],[1572,107,1098,109],[1572,111,1098,113],[1572,115,1098,117,"_c"],[1572,117,1098,119],[1572,122,1098,124],[1572,127,1098,129],[1572,128,1098,130],[1572,131,1098,133,"_c"],[1572,133,1098,135],[1572,136,1098,138,"undefined"],[1572,145,1098,147],[1573,18,1099,20,"xform"],[1573,23,1099,25],[1573,25,1099,27,"fetch_1"],[1573,32,1099,34],[1573,33,1099,35,"_userResponse"],[1574,16,1100,16],[1574,17,1100,17],[1574,18,1100,18],[1575,14,1101,12],[1575,15,1101,13],[1576,14,1101,13],[1576,31,1101,13,"_x23"],[1576,35,1101,13],[1577,16,1101,13],[1577,23,1101,13,"_ref13"],[1577,29,1101,13],[1577,30,1101,13,"apply"],[1577,35,1101,13],[1577,42,1101,13,"arguments"],[1577,51,1101,13],[1578,14,1101,13],[1579,12,1101,13],[1579,16,1101,14],[1580,10,1102,8],[1580,11,1102,9],[1580,12,1103,8],[1580,19,1103,15,"error"],[1580,24,1103,20],[1580,26,1103,22],[1581,12,1104,12],[1581,16,1104,16],[1581,17,1104,17],[1581,18,1104,18],[1581,20,1104,20,"errors_1"],[1581,28,1104,28],[1581,29,1104,29,"isAuthError"],[1581,40,1104,40],[1581,42,1104,42,"error"],[1581,47,1104,47],[1581,48,1104,48],[1581,50,1104,50],[1582,14,1105,16],[1582,18,1105,20],[1582,19,1105,21],[1582,20,1105,22],[1582,22,1105,24,"errors_1"],[1582,30,1105,32],[1582,31,1105,33,"isAuthSessionMissingError"],[1582,56,1105,58],[1582,58,1105,60,"error"],[1582,63,1105,65],[1582,64,1105,66],[1582,66,1105,68],[1583,16,1106,20],[1584,16,1107,20],[1585,16,1108,20],[1585,22,1108,26],[1585,26,1108,30],[1585,27,1108,31,"_removeSession"],[1585,41,1108,45],[1585,42,1108,46],[1585,43,1108,47],[1586,16,1109,20],[1586,22,1109,26],[1586,23,1109,27],[1586,24,1109,28],[1586,26,1109,30,"helpers_1"],[1586,35,1109,39],[1586,36,1109,40,"removeItemAsync"],[1586,51,1109,55],[1586,53,1109,57],[1586,57,1109,61],[1586,58,1109,62,"storage"],[1586,65,1109,69],[1586,67,1109,71],[1586,70,1109,74],[1586,74,1109,78],[1586,75,1109,79,"storageKey"],[1586,85,1109,89],[1586,101,1109,105],[1586,102,1109,106],[1587,14,1110,16],[1588,14,1111,16],[1588,21,1111,23],[1589,16,1111,25,"data"],[1589,20,1111,29],[1589,22,1111,31],[1590,18,1111,33,"user"],[1590,22,1111,37],[1590,24,1111,39],[1591,16,1111,44],[1591,17,1111,45],[1592,16,1111,47,"error"],[1592,21,1111,52],[1592,23,1111,47,"error"],[1593,14,1111,53],[1593,15,1111,54],[1594,12,1112,12],[1595,12,1113,12],[1595,18,1113,18,"error"],[1595,23,1113,23],[1596,10,1114,8],[1597,8,1115,4],[1597,9,1115,5],[1598,8,1115,5],[1598,17,1077,10,"_getUser"],[1598,25,1077,18,"_getUser"],[1598,26,1077,18,"_x22"],[1598,30,1077,18],[1599,10,1077,18],[1599,17,1077,18,"_getUser3"],[1599,26,1077,18],[1599,27,1077,18,"apply"],[1599,32,1077,18],[1599,39,1077,18,"arguments"],[1599,48,1077,18],[1600,8,1077,18],[1601,8,1077,18],[1601,15,1077,10,"_getUser"],[1601,23,1077,18],[1602,6,1077,18],[1603,6,1116,4],[1604,0,1117,0],[1605,0,1118,0],[1606,4,1116,4],[1607,6,1116,4,"key"],[1607,9,1116,4],[1608,6,1116,4,"value"],[1608,11,1116,4],[1609,8,1116,4],[1609,12,1116,4,"_updateUser2"],[1609,24,1116,4],[1609,27,1116,4,"_asyncToGenerator"],[1609,44,1116,4],[1609,45,1119,4],[1609,56,1119,21,"attributes"],[1609,66,1119,31],[1609,68,1119,47],[1610,10,1119,47],[1610,14,1119,47,"_this10"],[1610,21,1119,47],[1611,10,1119,47],[1611,14,1119,33,"options"],[1611,21,1119,40],[1611,24,1119,40,"arguments"],[1611,33,1119,40],[1611,34,1119,40,"length"],[1611,40,1119,40],[1611,48,1119,40,"arguments"],[1611,57,1119,40],[1611,65,1119,40,"undefined"],[1611,74,1119,40],[1611,77,1119,40,"arguments"],[1611,86,1119,40],[1611,92,1119,43],[1611,93,1119,44],[1611,94,1119,45],[1612,10,1120,8],[1612,16,1120,14],[1612,20,1120,18],[1612,21,1120,19,"initializePromise"],[1612,38,1120,36],[1613,10,1121,8],[1613,23,1121,21],[1613,27,1121,25],[1613,28,1121,26,"_acquireLock"],[1613,40,1121,38],[1613,41,1121,39],[1613,42,1121,40],[1613,43,1121,41],[1613,58,1121,41,"_asyncToGenerator"],[1613,75,1121,41],[1613,76,1121,43],[1613,89,1121,55],[1614,12,1122,12],[1614,25,1122,25,"_this10"],[1614,32,1122,29],[1614,33,1122,30,"_updateUser"],[1614,44,1122,41],[1614,45,1122,42,"attributes"],[1614,55,1122,52],[1614,57,1122,54,"options"],[1614,64,1122,61],[1614,65,1122,62],[1615,10,1123,8],[1615,11,1123,9],[1615,13,1123,10],[1616,8,1124,4],[1616,9,1124,5],[1617,8,1124,5],[1617,17,1119,10,"updateUser"],[1617,27,1119,20,"updateUser"],[1617,28,1119,20,"_x24"],[1617,32,1119,20],[1618,10,1119,20],[1618,17,1119,20,"_updateUser2"],[1618,29,1119,20],[1618,30,1119,20,"apply"],[1618,35,1119,20],[1618,42,1119,20,"arguments"],[1618,51,1119,20],[1619,8,1119,20],[1620,8,1119,20],[1620,15,1119,10,"updateUser"],[1620,25,1119,20],[1621,6,1119,20],[1622,4,1119,20],[1623,6,1119,20,"key"],[1623,9,1119,20],[1624,6,1119,20,"value"],[1624,11,1119,20],[1625,8,1119,20],[1625,12,1119,20,"_updateUser3"],[1625,24,1119,20],[1625,27,1119,20,"_asyncToGenerator"],[1625,44,1119,20],[1625,45,1125,4],[1625,56,1125,22,"attributes"],[1625,66,1125,32],[1625,68,1125,48],[1626,10,1125,48],[1626,14,1125,48,"_this11"],[1626,21,1125,48],[1627,10,1125,48],[1627,14,1125,34,"options"],[1627,21,1125,41],[1627,24,1125,41,"arguments"],[1627,33,1125,41],[1627,34,1125,41,"length"],[1627,40,1125,41],[1627,48,1125,41,"arguments"],[1627,57,1125,41],[1627,65,1125,41,"undefined"],[1627,74,1125,41],[1627,77,1125,41,"arguments"],[1627,86,1125,41],[1627,92,1125,44],[1627,93,1125,45],[1627,94,1125,46],[1628,10,1126,8],[1628,14,1126,12],[1629,12,1127,12],[1629,25,1127,25],[1629,29,1127,29],[1629,30,1127,30,"_useSession"],[1629,41,1127,41],[1630,14,1127,41],[1630,18,1127,41,"_ref15"],[1630,24,1127,41],[1630,27,1127,41,"_asyncToGenerator"],[1630,44,1127,41],[1630,45,1127,42],[1630,56,1127,49,"result"],[1630,62,1127,55],[1630,64,1127,60],[1631,16,1128,16],[1631,20,1128,30,"sessionData"],[1631,31,1128,41],[1631,34,1128,67,"result"],[1631,40,1128,73],[1631,41,1128,24,"data"],[1631,45,1128,28],[1632,18,1128,50,"sessionError"],[1632,30,1128,62],[1632,33,1128,67,"result"],[1632,39,1128,73],[1632,40,1128,43,"error"],[1632,45,1128,48],[1633,16,1129,16],[1633,20,1129,20,"sessionError"],[1633,32,1129,32],[1633,34,1129,34],[1634,18,1130,20],[1634,24,1130,26,"sessionError"],[1634,36,1130,38],[1635,16,1131,16],[1636,16,1132,16],[1636,20,1132,20],[1636,21,1132,21,"sessionData"],[1636,32,1132,32],[1636,33,1132,33,"session"],[1636,40,1132,40],[1636,42,1132,42],[1637,18,1133,20],[1637,24,1133,26],[1637,28,1133,30,"errors_1"],[1637,36,1133,38],[1637,37,1133,39,"AuthSessionMissingError"],[1637,60,1133,62],[1637,61,1133,63],[1637,62,1133,64],[1638,16,1134,16],[1639,16,1135,16],[1639,20,1135,22,"session"],[1639,27,1135,29],[1639,30,1135,32,"sessionData"],[1639,41,1135,43],[1639,42,1135,44,"session"],[1639,49,1135,51],[1640,16,1136,16],[1640,20,1136,20,"codeChallenge"],[1640,33,1136,33],[1640,36,1136,36],[1640,40,1136,40],[1641,16,1137,16],[1641,20,1137,20,"codeChallengeMethod"],[1641,39,1137,39],[1641,42,1137,42],[1641,46,1137,46],[1642,16,1138,16],[1642,20,1138,20,"_this11"],[1642,27,1138,24],[1642,28,1138,25,"flowType"],[1642,36,1138,33],[1642,41,1138,38],[1642,47,1138,44],[1642,51,1138,48,"attributes"],[1642,61,1138,58],[1642,62,1138,59,"email"],[1642,67,1138,64],[1642,71,1138,68],[1642,75,1138,72],[1642,77,1138,74],[1643,18,1139,20],[1644,18,1139,21],[1644,22,1139,21,"_yield13"],[1644,30,1139,21],[1644,39,1140,65],[1644,40,1140,66],[1644,41,1140,67],[1644,43,1140,69,"helpers_1"],[1644,52,1140,78],[1644,53,1140,79,"getCodeChallengeAndMethod"],[1644,78,1140,104],[1644,80,1140,106,"_this11"],[1644,87,1140,110],[1644,88,1140,111,"storage"],[1644,95,1140,118],[1644,97,1140,120,"_this11"],[1644,104,1140,124],[1644,105,1140,125,"storageKey"],[1644,115,1140,135],[1644,116,1140,136],[1645,18,1140,136],[1645,22,1140,136,"_yield14"],[1645,30,1140,136],[1645,33,1140,136,"_slicedToArray"],[1645,47,1140,136],[1645,48,1140,136,"_yield13"],[1645,56,1140,136],[1646,18,1140,21,"codeChallenge"],[1646,31,1140,34],[1646,34,1140,34,"_yield14"],[1646,42,1140,34],[1647,18,1140,36,"codeChallengeMethod"],[1647,37,1140,55],[1647,40,1140,55,"_yield14"],[1647,48,1140,55],[1648,16,1141,16],[1649,16,1142,16],[1649,20,1142,16,"_yield15"],[1649,28,1142,16],[1649,37,1142,57],[1649,38,1142,58],[1649,39,1142,59],[1649,41,1142,61,"fetch_1"],[1649,48,1142,68],[1649,49,1142,69,"_request"],[1649,57,1142,77],[1649,59,1142,79,"_this11"],[1649,66,1142,83],[1649,67,1142,84,"fetch"],[1649,72,1142,89],[1649,74,1142,91],[1649,79,1142,96],[1649,81,1142,98],[1649,84,1142,101,"_this11"],[1649,91,1142,105],[1649,92,1142,106,"url"],[1649,95,1142,109],[1649,102,1142,116],[1649,104,1142,118],[1650,20,1143,20,"headers"],[1650,27,1143,27],[1650,29,1143,29,"_this11"],[1650,36,1143,33],[1650,37,1143,34,"headers"],[1650,44,1143,41],[1651,20,1144,20,"redirectTo"],[1651,30,1144,30],[1651,32,1144,32,"options"],[1651,39,1144,39],[1651,44,1144,44],[1651,48,1144,48],[1651,52,1144,52,"options"],[1651,59,1144,59],[1651,64,1144,64],[1651,69,1144,69],[1651,70,1144,70],[1651,73,1144,73],[1651,78,1144,78],[1651,79,1144,79],[1651,82,1144,82,"options"],[1651,89,1144,89],[1651,90,1144,90,"emailRedirectTo"],[1651,105,1144,105],[1652,20,1145,20,"body"],[1652,24,1145,24],[1652,26,1145,26,"Object"],[1652,32,1145,32],[1652,33,1145,33,"assign"],[1652,39,1145,39],[1652,40,1145,40,"Object"],[1652,46,1145,46],[1652,47,1145,47,"assign"],[1652,53,1145,53],[1652,54,1145,54],[1652,55,1145,55],[1652,56,1145,56],[1652,58,1145,58,"attributes"],[1652,68,1145,68],[1652,69,1145,69],[1652,71,1145,71],[1653,22,1145,73,"code_challenge"],[1653,36,1145,87],[1653,38,1145,89,"codeChallenge"],[1653,51,1145,102],[1654,22,1145,104,"code_challenge_method"],[1654,43,1145,125],[1654,45,1145,127,"codeChallengeMethod"],[1655,20,1145,147],[1655,21,1145,148],[1655,22,1145,149],[1656,20,1146,20,"jwt"],[1656,23,1146,23],[1656,25,1146,25,"session"],[1656,32,1146,32],[1656,33,1146,33,"access_token"],[1656,45,1146,45],[1657,20,1147,20,"xform"],[1657,25,1147,25],[1657,27,1147,27,"fetch_1"],[1657,34,1147,34],[1657,35,1147,35,"_userResponse"],[1658,18,1148,16],[1658,19,1148,17],[1658,20,1148,18],[1659,18,1142,24,"data"],[1659,22,1142,28],[1659,25,1142,28,"_yield15"],[1659,33,1142,28],[1659,34,1142,24,"data"],[1659,38,1142,28],[1660,18,1142,37,"userError"],[1660,27,1142,46],[1660,30,1142,46,"_yield15"],[1660,38,1142,46],[1660,39,1142,30,"error"],[1660,44,1142,35],[1661,16,1149,16],[1661,20,1149,20,"userError"],[1661,29,1149,29],[1661,31,1150,20],[1661,37,1150,26,"userError"],[1661,46,1150,35],[1662,16,1151,16,"session"],[1662,23,1151,23],[1662,24,1151,24,"user"],[1662,28,1151,28],[1662,31,1151,31,"data"],[1662,35,1151,35],[1662,36,1151,36,"user"],[1662,40,1151,40],[1663,16,1152,16],[1663,22,1152,22,"_this11"],[1663,29,1152,26],[1663,30,1152,27,"_saveSession"],[1663,42,1152,39],[1663,43,1152,40,"session"],[1663,50,1152,47],[1663,51,1152,48],[1664,16,1153,16],[1664,22,1153,22,"_this11"],[1664,29,1153,26],[1664,30,1153,27,"_notifyAllSubscribers"],[1664,51,1153,48],[1664,52,1153,49],[1664,66,1153,63],[1664,68,1153,65,"session"],[1664,75,1153,72],[1664,76,1153,73],[1665,16,1154,16],[1665,23,1154,23],[1666,18,1154,25,"data"],[1666,22,1154,29],[1666,24,1154,31],[1667,20,1154,33,"user"],[1667,24,1154,37],[1667,26,1154,39,"session"],[1667,33,1154,46],[1667,34,1154,47,"user"],[1668,18,1154,52],[1668,19,1154,53],[1669,18,1154,55,"error"],[1669,23,1154,60],[1669,25,1154,62],[1670,16,1154,67],[1670,17,1154,68],[1671,14,1155,12],[1671,15,1155,13],[1672,14,1155,13],[1672,31,1155,13,"_x26"],[1672,35,1155,13],[1673,16,1155,13],[1673,23,1155,13,"_ref15"],[1673,29,1155,13],[1673,30,1155,13,"apply"],[1673,35,1155,13],[1673,42,1155,13,"arguments"],[1673,51,1155,13],[1674,14,1155,13],[1675,12,1155,13],[1675,16,1155,14],[1676,10,1156,8],[1676,11,1156,9],[1676,12,1157,8],[1676,19,1157,15,"error"],[1676,24,1157,20],[1676,26,1157,22],[1677,12,1158,12],[1677,16,1158,16],[1677,17,1158,17],[1677,18,1158,18],[1677,20,1158,20,"errors_1"],[1677,28,1158,28],[1677,29,1158,29,"isAuthError"],[1677,40,1158,40],[1677,42,1158,42,"error"],[1677,47,1158,47],[1677,48,1158,48],[1677,50,1158,50],[1678,14,1159,16],[1678,21,1159,23],[1679,16,1159,25,"data"],[1679,20,1159,29],[1679,22,1159,31],[1680,18,1159,33,"user"],[1680,22,1159,37],[1680,24,1159,39],[1681,16,1159,44],[1681,17,1159,45],[1682,16,1159,47,"error"],[1682,21,1159,52],[1682,23,1159,47,"error"],[1683,14,1159,53],[1683,15,1159,54],[1684,12,1160,12],[1685,12,1161,12],[1685,18,1161,18,"error"],[1685,23,1161,23],[1686,10,1162,8],[1687,8,1163,4],[1687,9,1163,5],[1688,8,1163,5],[1688,17,1125,10,"_updateUser"],[1688,28,1125,21,"_updateUser"],[1688,29,1125,21,"_x25"],[1688,33,1125,21],[1689,10,1125,21],[1689,17,1125,21,"_updateUser3"],[1689,29,1125,21],[1689,30,1125,21,"apply"],[1689,35,1125,21],[1689,42,1125,21,"arguments"],[1689,51,1125,21],[1690,8,1125,21],[1691,8,1125,21],[1691,15,1125,10,"_updateUser"],[1691,26,1125,21],[1692,6,1125,21],[1693,6,1164,4],[1694,0,1165,0],[1695,0,1166,0],[1696,0,1167,0],[1697,0,1168,0],[1698,4,1164,4],[1699,6,1164,4,"key"],[1699,9,1164,4],[1700,6,1164,4,"value"],[1700,11,1164,4],[1701,8,1164,4],[1701,12,1164,4,"_setSession2"],[1701,24,1164,4],[1701,27,1164,4,"_asyncToGenerator"],[1701,44,1164,4],[1701,45,1169,4],[1701,56,1169,21,"currentSession"],[1701,70,1169,35],[1701,72,1169,37],[1702,10,1169,37],[1702,14,1169,37,"_this12"],[1702,21,1169,37],[1703,10,1170,8],[1703,16,1170,14],[1703,20,1170,18],[1703,21,1170,19,"initializePromise"],[1703,38,1170,36],[1704,10,1171,8],[1704,23,1171,21],[1704,27,1171,25],[1704,28,1171,26,"_acquireLock"],[1704,40,1171,38],[1704,41,1171,39],[1704,42,1171,40],[1704,43,1171,41],[1704,58,1171,41,"_asyncToGenerator"],[1704,75,1171,41],[1704,76,1171,43],[1704,89,1171,55],[1705,12,1172,12],[1705,25,1172,25,"_this12"],[1705,32,1172,29],[1705,33,1172,30,"_setSession"],[1705,44,1172,41],[1705,45,1172,42,"currentSession"],[1705,59,1172,56],[1705,60,1172,57],[1706,10,1173,8],[1706,11,1173,9],[1706,13,1173,10],[1707,8,1174,4],[1707,9,1174,5],[1708,8,1174,5],[1708,17,1169,10,"setSession"],[1708,27,1169,20,"setSession"],[1708,28,1169,20,"_x27"],[1708,32,1169,20],[1709,10,1169,20],[1709,17,1169,20,"_setSession2"],[1709,29,1169,20],[1709,30,1169,20,"apply"],[1709,35,1169,20],[1709,42,1169,20,"arguments"],[1709,51,1169,20],[1710,8,1169,20],[1711,8,1169,20],[1711,15,1169,10,"setSession"],[1711,25,1169,20],[1712,6,1169,20],[1713,4,1169,20],[1714,6,1169,20,"key"],[1714,9,1169,20],[1715,6,1169,20,"value"],[1715,11,1169,20],[1716,8,1169,20],[1716,12,1169,20,"_setSession3"],[1716,24,1169,20],[1716,27,1169,20,"_asyncToGenerator"],[1716,44,1169,20],[1716,45,1175,4],[1716,56,1175,22,"currentSession"],[1716,70,1175,36],[1716,72,1175,38],[1717,10,1176,8],[1717,14,1176,12],[1718,12,1177,12],[1718,16,1177,16],[1718,17,1177,17,"currentSession"],[1718,31,1177,31],[1718,32,1177,32,"access_token"],[1718,44,1177,44],[1718,48,1177,48],[1718,49,1177,49,"currentSession"],[1718,63,1177,63],[1718,64,1177,64,"refresh_token"],[1718,77,1177,77],[1718,79,1177,79],[1719,14,1178,16],[1719,20,1178,22],[1719,24,1178,26,"errors_1"],[1719,32,1178,34],[1719,33,1178,35,"AuthSessionMissingError"],[1719,56,1178,58],[1719,57,1178,59],[1719,58,1178,60],[1720,12,1179,12],[1721,12,1180,12],[1721,16,1180,18,"timeNow"],[1721,23,1180,25],[1721,26,1180,28,"Date"],[1721,30,1180,32],[1721,31,1180,33,"now"],[1721,34,1180,36],[1721,35,1180,37],[1721,36,1180,38],[1721,39,1180,41],[1721,43,1180,45],[1722,12,1181,12],[1722,16,1181,16,"expiresAt"],[1722,25,1181,25],[1722,28,1181,28,"timeNow"],[1722,35,1181,35],[1723,12,1182,12],[1723,16,1182,16,"hasExpired"],[1723,26,1182,26],[1723,29,1182,29],[1723,33,1182,33],[1724,12,1183,12],[1724,16,1183,16,"session"],[1724,23,1183,23],[1724,26,1183,26],[1724,30,1183,30],[1725,12,1184,12],[1725,16,1184,12,"_ref17"],[1725,22,1184,12],[1725,25,1184,32],[1725,26,1184,33],[1725,27,1184,34],[1725,29,1184,36,"helpers_1"],[1725,38,1184,45],[1725,39,1184,46,"decodeJWT"],[1725,48,1184,55],[1725,50,1184,57,"currentSession"],[1725,64,1184,71],[1725,65,1184,72,"access_token"],[1725,77,1184,84],[1725,78,1184,85],[1726,14,1184,20,"payload"],[1726,21,1184,27],[1726,24,1184,27,"_ref17"],[1726,30,1184,27],[1726,31,1184,20,"payload"],[1726,38,1184,27],[1727,12,1185,12],[1727,16,1185,16,"payload"],[1727,23,1185,23],[1727,24,1185,24,"exp"],[1727,27,1185,27],[1727,29,1185,29],[1728,14,1186,16,"expiresAt"],[1728,23,1186,25],[1728,26,1186,28,"payload"],[1728,33,1186,35],[1728,34,1186,36,"exp"],[1728,37,1186,39],[1729,14,1187,16,"hasExpired"],[1729,24,1187,26],[1729,27,1187,29,"expiresAt"],[1729,36,1187,38],[1729,40,1187,42,"timeNow"],[1729,47,1187,49],[1730,12,1188,12],[1731,12,1189,12],[1731,16,1189,16,"hasExpired"],[1731,26,1189,26],[1731,28,1189,28],[1732,14,1190,16],[1732,18,1190,16,"_yield$this$_callRefr2"],[1732,40,1190,16],[1732,49,1190,67],[1732,53,1190,71],[1732,54,1190,72,"_callRefreshToken"],[1732,71,1190,89],[1732,72,1190,90,"currentSession"],[1732,86,1190,104],[1732,87,1190,105,"refresh_token"],[1732,100,1190,118],[1732,101,1190,119],[1733,16,1190,33,"refreshedSession"],[1733,32,1190,49],[1733,35,1190,49,"_yield$this$_callRefr2"],[1733,57,1190,49],[1733,58,1190,24,"session"],[1733,65,1190,31],[1734,16,1190,51,"error"],[1734,21,1190,56],[1734,24,1190,56,"_yield$this$_callRefr2"],[1734,46,1190,56],[1734,47,1190,51,"error"],[1734,52,1190,56],[1735,14,1191,16],[1735,18,1191,20,"error"],[1735,23,1191,25],[1735,25,1191,27],[1736,16,1192,20],[1736,23,1192,27],[1737,18,1192,29,"data"],[1737,22,1192,33],[1737,24,1192,35],[1738,20,1192,37,"user"],[1738,24,1192,41],[1738,26,1192,43],[1738,30,1192,47],[1739,20,1192,49,"session"],[1739,27,1192,56],[1739,29,1192,58],[1740,18,1192,63],[1740,19,1192,64],[1741,18,1192,66,"error"],[1741,23,1192,71],[1741,25,1192,73,"error"],[1742,16,1192,79],[1742,17,1192,80],[1743,14,1193,16],[1744,14,1194,16],[1744,18,1194,20],[1744,19,1194,21,"refreshedSession"],[1744,35,1194,37],[1744,37,1194,39],[1745,16,1195,20],[1745,23,1195,27],[1746,18,1195,29,"data"],[1746,22,1195,33],[1746,24,1195,35],[1747,20,1195,37,"user"],[1747,24,1195,41],[1747,26,1195,43],[1747,30,1195,47],[1748,20,1195,49,"session"],[1748,27,1195,56],[1748,29,1195,58],[1749,18,1195,63],[1749,19,1195,64],[1750,18,1195,66,"error"],[1750,23,1195,71],[1750,25,1195,73],[1751,16,1195,78],[1751,17,1195,79],[1752,14,1196,16],[1753,14,1197,16,"session"],[1753,21,1197,23],[1753,24,1197,26,"refreshedSession"],[1753,40,1197,42],[1754,12,1198,12],[1754,13,1198,13],[1754,19,1199,17],[1755,14,1200,16],[1755,18,1200,16,"_yield$this$_getUser"],[1755,38,1200,16],[1755,47,1200,46],[1755,51,1200,50],[1755,52,1200,51,"_getUser"],[1755,60,1200,59],[1755,61,1200,60,"currentSession"],[1755,75,1200,74],[1755,76,1200,75,"access_token"],[1755,88,1200,87],[1755,89,1200,88],[1756,16,1200,24,"data"],[1756,20,1200,28],[1756,23,1200,28,"_yield$this$_getUser"],[1756,43,1200,28],[1756,44,1200,24,"data"],[1756,48,1200,28],[1757,16,1200,30,"error"],[1757,23,1200,35],[1757,26,1200,35,"_yield$this$_getUser"],[1757,46,1200,35],[1757,47,1200,30,"error"],[1757,52,1200,35],[1758,14,1201,16],[1758,18,1201,20,"error"],[1758,25,1201,25],[1758,27,1201,27],[1759,16,1202,20],[1759,22,1202,26,"error"],[1759,29,1202,31],[1760,14,1203,16],[1761,14,1204,16,"session"],[1761,21,1204,23],[1761,24,1204,26],[1762,16,1205,20,"access_token"],[1762,28,1205,32],[1762,30,1205,34,"currentSession"],[1762,44,1205,48],[1762,45,1205,49,"access_token"],[1762,57,1205,61],[1763,16,1206,20,"refresh_token"],[1763,29,1206,33],[1763,31,1206,35,"currentSession"],[1763,45,1206,49],[1763,46,1206,50,"refresh_token"],[1763,59,1206,63],[1764,16,1207,20,"user"],[1764,20,1207,24],[1764,22,1207,26,"data"],[1764,26,1207,30],[1764,27,1207,31,"user"],[1764,31,1207,35],[1765,16,1208,20,"token_type"],[1765,26,1208,30],[1765,28,1208,32],[1765,36,1208,40],[1766,16,1209,20,"expires_in"],[1766,26,1209,30],[1766,28,1209,32,"expiresAt"],[1766,37,1209,41],[1766,40,1209,44,"timeNow"],[1766,47,1209,51],[1767,16,1210,20,"expires_at"],[1767,26,1210,30],[1767,28,1210,32,"expiresAt"],[1768,14,1211,16],[1768,15,1211,17],[1769,14,1212,16],[1769,20,1212,22],[1769,24,1212,26],[1769,25,1212,27,"_saveSession"],[1769,37,1212,39],[1769,38,1212,40,"session"],[1769,45,1212,47],[1769,46,1212,48],[1770,14,1213,16],[1770,20,1213,22],[1770,24,1213,26],[1770,25,1213,27,"_notifyAllSubscribers"],[1770,46,1213,48],[1770,47,1213,49],[1770,58,1213,60],[1770,60,1213,62,"session"],[1770,67,1213,69],[1770,68,1213,70],[1771,12,1214,12],[1772,12,1215,12],[1772,19,1215,19],[1773,14,1215,21,"data"],[1773,18,1215,25],[1773,20,1215,27],[1774,16,1215,29,"user"],[1774,20,1215,33],[1774,22,1215,35,"session"],[1774,29,1215,42],[1774,30,1215,43,"user"],[1774,34,1215,47],[1775,16,1215,49,"session"],[1775,23,1215,56],[1775,25,1215,49,"session"],[1776,14,1215,57],[1776,15,1215,58],[1777,14,1215,60,"error"],[1777,19,1215,65],[1777,21,1215,67],[1778,12,1215,72],[1778,13,1215,73],[1779,10,1216,8],[1779,11,1216,9],[1779,12,1217,8],[1779,19,1217,15,"error"],[1779,24,1217,20],[1779,26,1217,22],[1780,12,1218,12],[1780,16,1218,16],[1780,17,1218,17],[1780,18,1218,18],[1780,20,1218,20,"errors_1"],[1780,28,1218,28],[1780,29,1218,29,"isAuthError"],[1780,40,1218,40],[1780,42,1218,42,"error"],[1780,47,1218,47],[1780,48,1218,48],[1780,50,1218,50],[1781,14,1219,16],[1781,21,1219,23],[1782,16,1219,25,"data"],[1782,20,1219,29],[1782,22,1219,31],[1783,18,1219,33,"session"],[1783,25,1219,40],[1783,27,1219,42],[1783,31,1219,46],[1784,18,1219,48,"user"],[1784,22,1219,52],[1784,24,1219,54],[1785,16,1219,59],[1785,17,1219,60],[1786,16,1219,62,"error"],[1786,21,1219,67],[1786,23,1219,62,"error"],[1787,14,1219,68],[1787,15,1219,69],[1788,12,1220,12],[1789,12,1221,12],[1789,18,1221,18,"error"],[1789,23,1221,23],[1790,10,1222,8],[1791,8,1223,4],[1791,9,1223,5],[1792,8,1223,5],[1792,17,1175,10,"_setSession"],[1792,28,1175,21,"_setSession"],[1792,29,1175,21,"_x28"],[1792,33,1175,21],[1793,10,1175,21],[1793,17,1175,21,"_setSession3"],[1793,29,1175,21],[1793,30,1175,21,"apply"],[1793,35,1175,21],[1793,42,1175,21,"arguments"],[1793,51,1175,21],[1794,8,1175,21],[1795,8,1175,21],[1795,15,1175,10,"_setSession"],[1795,26,1175,21],[1796,6,1175,21],[1797,6,1224,4],[1798,0,1225,0],[1799,0,1226,0],[1800,0,1227,0],[1801,0,1228,0],[1802,0,1229,0],[1803,4,1224,4],[1804,6,1224,4,"key"],[1804,9,1224,4],[1805,6,1224,4,"value"],[1805,11,1224,4],[1806,8,1224,4],[1806,12,1224,4,"_refreshSession2"],[1806,28,1224,4],[1806,31,1224,4,"_asyncToGenerator"],[1806,48,1224,4],[1806,49,1230,4],[1806,60,1230,25,"currentSession"],[1806,74,1230,39],[1806,76,1230,41],[1807,10,1230,41],[1807,14,1230,41,"_this13"],[1807,21,1230,41],[1808,10,1231,8],[1808,16,1231,14],[1808,20,1231,18],[1808,21,1231,19,"initializePromise"],[1808,38,1231,36],[1809,10,1232,8],[1809,23,1232,21],[1809,27,1232,25],[1809,28,1232,26,"_acquireLock"],[1809,40,1232,38],[1809,41,1232,39],[1809,42,1232,40],[1809,43,1232,41],[1809,58,1232,41,"_asyncToGenerator"],[1809,75,1232,41],[1809,76,1232,43],[1809,89,1232,55],[1810,12,1233,12],[1810,25,1233,25,"_this13"],[1810,32,1233,29],[1810,33,1233,30,"_refreshSession"],[1810,48,1233,45],[1810,49,1233,46,"currentSession"],[1810,63,1233,60],[1810,64,1233,61],[1811,10,1234,8],[1811,11,1234,9],[1811,13,1234,10],[1812,8,1235,4],[1812,9,1235,5],[1813,8,1235,5],[1813,17,1230,10,"refreshSession"],[1813,31,1230,24,"refreshSession"],[1813,32,1230,24,"_x29"],[1813,36,1230,24],[1814,10,1230,24],[1814,17,1230,24,"_refreshSession2"],[1814,33,1230,24],[1814,34,1230,24,"apply"],[1814,39,1230,24],[1814,46,1230,24,"arguments"],[1814,55,1230,24],[1815,8,1230,24],[1816,8,1230,24],[1816,15,1230,10,"refreshSession"],[1816,29,1230,24],[1817,6,1230,24],[1818,4,1230,24],[1819,6,1230,24,"key"],[1819,9,1230,24],[1820,6,1230,24,"value"],[1820,11,1230,24],[1821,8,1230,24],[1821,12,1230,24,"_refreshSession3"],[1821,28,1230,24],[1821,31,1230,24,"_asyncToGenerator"],[1821,48,1230,24],[1821,49,1236,4],[1821,60,1236,26,"currentSession"],[1821,74,1236,40],[1821,76,1236,42],[1822,10,1236,42],[1822,14,1236,42,"_this14"],[1822,21,1236,42],[1823,10,1237,8],[1823,14,1237,12],[1824,12,1238,12],[1824,25,1238,25],[1824,29,1238,29],[1824,30,1238,30,"_useSession"],[1824,41,1238,41],[1825,14,1238,41],[1825,18,1238,41,"_ref19"],[1825,24,1238,41],[1825,27,1238,41,"_asyncToGenerator"],[1825,44,1238,41],[1825,45,1238,42],[1825,56,1238,49,"result"],[1825,62,1238,55],[1825,64,1238,60],[1826,16,1239,16],[1826,20,1239,20,"_a"],[1826,22,1239,22],[1827,16,1240,16],[1827,20,1240,20],[1827,21,1240,21,"currentSession"],[1827,35,1240,35],[1827,37,1240,37],[1828,18,1241,20],[1828,22,1241,28,"data"],[1828,26,1241,32],[1828,29,1241,44,"result"],[1828,35,1241,50],[1828,36,1241,28,"data"],[1828,40,1241,32],[1829,20,1241,34,"error"],[1829,27,1241,39],[1829,30,1241,44,"result"],[1829,36,1241,50],[1829,37,1241,34,"error"],[1829,42,1241,39],[1830,18,1242,20],[1830,22,1242,24,"error"],[1830,29,1242,29],[1830,31,1242,31],[1831,20,1243,24],[1831,26,1243,30,"error"],[1831,33,1243,35],[1832,18,1244,20],[1833,18,1245,20,"currentSession"],[1833,32,1245,34],[1833,35,1245,37],[1833,36,1245,38,"_a"],[1833,38,1245,40],[1833,41,1245,43,"data"],[1833,45,1245,47],[1833,46,1245,48,"session"],[1833,53,1245,55],[1833,59,1245,61],[1833,63,1245,65],[1833,67,1245,69,"_a"],[1833,69,1245,71],[1833,74,1245,76],[1833,79,1245,81],[1833,80,1245,82],[1833,83,1245,85,"_a"],[1833,85,1245,87],[1833,88,1245,90,"undefined"],[1833,97,1245,99],[1834,16,1246,16],[1835,16,1247,16],[1835,20,1247,20],[1835,22,1247,22,"currentSession"],[1835,36,1247,36],[1835,41,1247,41],[1835,45,1247,45],[1835,49,1247,49,"currentSession"],[1835,63,1247,63],[1835,68,1247,68],[1835,73,1247,73],[1835,74,1247,74],[1835,77,1247,77],[1835,82,1247,82],[1835,83,1247,83],[1835,86,1247,86,"currentSession"],[1835,100,1247,100],[1835,101,1247,101,"refresh_token"],[1835,114,1247,114],[1835,115,1247,115],[1835,117,1247,117],[1836,18,1248,20],[1836,24,1248,26],[1836,28,1248,30,"errors_1"],[1836,36,1248,38],[1836,37,1248,39,"AuthSessionMissingError"],[1836,60,1248,62],[1836,61,1248,63],[1836,62,1248,64],[1837,16,1249,16],[1838,16,1250,16],[1838,20,1250,16,"_yield$_this14$_callR"],[1838,41,1250,16],[1838,50,1250,49,"_this14"],[1838,57,1250,53],[1838,58,1250,54,"_callRefreshToken"],[1838,75,1250,71],[1838,76,1250,72,"currentSession"],[1838,90,1250,86],[1838,91,1250,87,"refresh_token"],[1838,104,1250,100],[1838,105,1250,101],[1839,18,1250,24,"session"],[1839,25,1250,31],[1839,28,1250,31,"_yield$_this14$_callR"],[1839,49,1250,31],[1839,50,1250,24,"session"],[1839,57,1250,31],[1840,18,1250,33,"error"],[1840,23,1250,38],[1840,26,1250,38,"_yield$_this14$_callR"],[1840,47,1250,38],[1840,48,1250,33,"error"],[1840,53,1250,38],[1841,16,1251,16],[1841,20,1251,20,"error"],[1841,25,1251,25],[1841,27,1251,27],[1842,18,1252,20],[1842,25,1252,27],[1843,20,1252,29,"data"],[1843,24,1252,33],[1843,26,1252,35],[1844,22,1252,37,"user"],[1844,26,1252,41],[1844,28,1252,43],[1844,32,1252,47],[1845,22,1252,49,"session"],[1845,29,1252,56],[1845,31,1252,58],[1846,20,1252,63],[1846,21,1252,64],[1847,20,1252,66,"error"],[1847,25,1252,71],[1847,27,1252,73,"error"],[1848,18,1252,79],[1848,19,1252,80],[1849,16,1253,16],[1850,16,1254,16],[1850,20,1254,20],[1850,21,1254,21,"session"],[1850,28,1254,28],[1850,30,1254,30],[1851,18,1255,20],[1851,25,1255,27],[1852,20,1255,29,"data"],[1852,24,1255,33],[1852,26,1255,35],[1853,22,1255,37,"user"],[1853,26,1255,41],[1853,28,1255,43],[1853,32,1255,47],[1854,22,1255,49,"session"],[1854,29,1255,56],[1854,31,1255,58],[1855,20,1255,63],[1855,21,1255,64],[1856,20,1255,66,"error"],[1856,25,1255,71],[1856,27,1255,73],[1857,18,1255,78],[1857,19,1255,79],[1858,16,1256,16],[1859,16,1257,16],[1859,23,1257,23],[1860,18,1257,25,"data"],[1860,22,1257,29],[1860,24,1257,31],[1861,20,1257,33,"user"],[1861,24,1257,37],[1861,26,1257,39,"session"],[1861,33,1257,46],[1861,34,1257,47,"user"],[1861,38,1257,51],[1862,20,1257,53,"session"],[1862,27,1257,60],[1862,29,1257,53,"session"],[1863,18,1257,61],[1863,19,1257,62],[1864,18,1257,64,"error"],[1864,23,1257,69],[1864,25,1257,71],[1865,16,1257,76],[1865,17,1257,77],[1866,14,1258,12],[1866,15,1258,13],[1867,14,1258,13],[1867,31,1258,13,"_x31"],[1867,35,1258,13],[1868,16,1258,13],[1868,23,1258,13,"_ref19"],[1868,29,1258,13],[1868,30,1258,13,"apply"],[1868,35,1258,13],[1868,42,1258,13,"arguments"],[1868,51,1258,13],[1869,14,1258,13],[1870,12,1258,13],[1870,16,1258,14],[1871,10,1259,8],[1871,11,1259,9],[1871,12,1260,8],[1871,19,1260,15,"error"],[1871,24,1260,20],[1871,26,1260,22],[1872,12,1261,12],[1872,16,1261,16],[1872,17,1261,17],[1872,18,1261,18],[1872,20,1261,20,"errors_1"],[1872,28,1261,28],[1872,29,1261,29,"isAuthError"],[1872,40,1261,40],[1872,42,1261,42,"error"],[1872,47,1261,47],[1872,48,1261,48],[1872,50,1261,50],[1873,14,1262,16],[1873,21,1262,23],[1874,16,1262,25,"data"],[1874,20,1262,29],[1874,22,1262,31],[1875,18,1262,33,"user"],[1875,22,1262,37],[1875,24,1262,39],[1875,28,1262,43],[1876,18,1262,45,"session"],[1876,25,1262,52],[1876,27,1262,54],[1877,16,1262,59],[1877,17,1262,60],[1878,16,1262,62,"error"],[1878,21,1262,67],[1878,23,1262,62,"error"],[1879,14,1262,68],[1879,15,1262,69],[1880,12,1263,12],[1881,12,1264,12],[1881,18,1264,18,"error"],[1881,23,1264,23],[1882,10,1265,8],[1883,8,1266,4],[1883,9,1266,5],[1884,8,1266,5],[1884,17,1236,10,"_refreshSession"],[1884,32,1236,25,"_refreshSession"],[1884,33,1236,25,"_x30"],[1884,37,1236,25],[1885,10,1236,25],[1885,17,1236,25,"_refreshSession3"],[1885,33,1236,25],[1885,34,1236,25,"apply"],[1885,39,1236,25],[1885,46,1236,25,"arguments"],[1885,55,1236,25],[1886,8,1236,25],[1887,8,1236,25],[1887,15,1236,10,"_refreshSession"],[1887,30,1236,25],[1888,6,1236,25],[1889,6,1267,4],[1890,0,1268,0],[1891,0,1269,0],[1892,4,1267,4],[1893,6,1267,4,"key"],[1893,9,1267,4],[1894,6,1267,4,"value"],[1894,11,1267,4],[1895,8,1267,4],[1895,12,1267,4,"_getSessionFromURL2"],[1895,31,1267,4],[1895,34,1267,4,"_asyncToGenerator"],[1895,51,1267,4],[1895,52,1270,4],[1895,63,1270,29,"params"],[1895,69,1270,35],[1895,71,1270,37,"callbackUrlType"],[1895,86,1270,52],[1895,88,1270,54],[1896,10,1271,8],[1896,14,1271,12],[1897,12,1272,12],[1897,16,1272,16],[1897,17,1272,17],[1897,18,1272,18],[1897,19,1272,19],[1897,21,1272,21,"helpers_1"],[1897,30,1272,30],[1897,31,1272,31,"isBrowser"],[1897,40,1272,40],[1897,42,1272,42],[1897,43,1272,43],[1897,45,1273,16],[1897,51,1273,22],[1897,55,1273,26,"errors_1"],[1897,63,1273,34],[1897,64,1273,35,"AuthImplicitGrantRedirectError"],[1897,94,1273,65],[1897,95,1273,66],[1897,117,1273,88],[1897,118,1273,89],[1898,12,1274,12],[1899,12,1275,12],[1899,16,1275,16,"params"],[1899,22,1275,22],[1899,23,1275,23,"error"],[1899,28,1275,28],[1899,32,1275,32,"params"],[1899,38,1275,38],[1899,39,1275,39,"error_description"],[1899,56,1275,56],[1899,60,1275,60,"params"],[1899,66,1275,66],[1899,67,1275,67,"error_code"],[1899,77,1275,77],[1899,79,1275,79],[1900,14,1276,16],[1901,14,1277,16],[1902,14,1278,16],[1902,20,1278,22],[1902,24,1278,26,"errors_1"],[1902,32,1278,34],[1902,33,1278,35,"AuthImplicitGrantRedirectError"],[1902,63,1278,65],[1902,64,1278,66,"params"],[1902,70,1278,72],[1902,71,1278,73,"error_description"],[1902,88,1278,90],[1902,92,1278,94],[1902,141,1278,143],[1902,143,1278,145],[1903,16,1279,20,"error"],[1903,21,1279,25],[1903,23,1279,27,"params"],[1903,29,1279,33],[1903,30,1279,34,"error"],[1903,35,1279,39],[1903,39,1279,43],[1903,58,1279,62],[1904,16,1280,20,"code"],[1904,20,1280,24],[1904,22,1280,26,"params"],[1904,28,1280,32],[1904,29,1280,33,"error_code"],[1904,39,1280,43],[1904,43,1280,47],[1905,14,1281,16],[1905,15,1281,17],[1905,16,1281,18],[1906,12,1282,12],[1907,12,1283,12],[1908,12,1284,12],[1908,20,1284,20,"callbackUrlType"],[1908,35,1284,35],[1909,14,1285,16],[1909,19,1285,21],[1909,29,1285,31],[1910,16,1286,20],[1910,20,1286,24],[1910,24,1286,28],[1910,25,1286,29,"flowType"],[1910,33,1286,37],[1910,38,1286,42],[1910,44,1286,48],[1910,46,1286,50],[1911,18,1287,24],[1911,24,1287,30],[1911,28,1287,34,"errors_1"],[1911,36,1287,42],[1911,37,1287,43,"AuthPKCEGrantCodeExchangeError"],[1911,67,1287,73],[1911,68,1287,74],[1911,96,1287,102],[1911,97,1287,103],[1912,16,1288,20],[1913,16,1289,20],[1914,14,1290,16],[1914,19,1290,21],[1914,25,1290,27],[1915,16,1291,20],[1915,20,1291,24],[1915,24,1291,28],[1915,25,1291,29,"flowType"],[1915,33,1291,37],[1915,38,1291,42],[1915,48,1291,52],[1915,50,1291,54],[1916,18,1292,24],[1916,24,1292,30],[1916,28,1292,34,"errors_1"],[1916,36,1292,42],[1916,37,1292,43,"AuthImplicitGrantRedirectError"],[1916,67,1292,73],[1916,68,1292,74],[1916,106,1292,112],[1916,107,1292,113],[1917,16,1293,20],[1918,16,1294,20],[1919,14,1295,16],[1920,14,1296,16],[1921,12,1297,12],[1922,12,1298,12],[1923,12,1299,12],[1923,16,1299,16,"callbackUrlType"],[1923,31,1299,31],[1923,36,1299,36],[1923,42,1299,42],[1923,44,1299,44],[1924,14,1300,16],[1924,18,1300,20],[1924,19,1300,21,"_debug"],[1924,25,1300,27],[1924,26,1300,28],[1924,42,1300,44],[1924,44,1300,46],[1924,51,1300,53],[1924,53,1300,55],[1924,67,1300,69],[1924,69,1300,71],[1924,73,1300,75],[1924,74,1300,76],[1925,14,1301,16],[1925,18,1301,20],[1925,19,1301,21,"params"],[1925,25,1301,27],[1925,26,1301,28,"code"],[1925,30,1301,32],[1925,32,1302,20],[1925,38,1302,26],[1925,42,1302,30,"errors_1"],[1925,50,1302,38],[1925,51,1302,39,"AuthPKCEGrantCodeExchangeError"],[1925,81,1302,69],[1925,82,1302,70],[1925,101,1302,89],[1925,102,1302,90],[1926,14,1303,16],[1926,18,1303,16,"_yield$this$_exchange"],[1926,39,1303,16],[1926,48,1303,46],[1926,52,1303,50],[1926,53,1303,51,"_exchangeCodeForSession"],[1926,76,1303,74],[1926,77,1303,75,"params"],[1926,83,1303,81],[1926,84,1303,82,"code"],[1926,88,1303,86],[1926,89,1303,87],[1927,16,1303,24,"data"],[1927,21,1303,28],[1927,24,1303,28,"_yield$this$_exchange"],[1927,45,1303,28],[1927,46,1303,24,"data"],[1927,50,1303,28],[1928,16,1303,30,"error"],[1928,23,1303,35],[1928,26,1303,35,"_yield$this$_exchange"],[1928,47,1303,35],[1928,48,1303,30,"error"],[1928,53,1303,35],[1929,14,1304,16],[1929,18,1304,20,"error"],[1929,25,1304,25],[1929,27,1305,20],[1929,33,1305,26,"error"],[1929,40,1305,31],[1930,14,1306,16],[1930,18,1306,22,"url"],[1930,21,1306,25],[1930,24,1306,28],[1930,28,1306,32,"URL"],[1930,31,1306,35],[1930,32,1306,36,"window"],[1930,38,1306,42],[1930,39,1306,43,"location"],[1930,47,1306,51],[1930,48,1306,52,"href"],[1930,52,1306,56],[1930,53,1306,57],[1931,14,1307,16,"url"],[1931,17,1307,19],[1931,18,1307,20,"searchParams"],[1931,30,1307,32],[1931,31,1307,33,"delete"],[1931,37,1307,39],[1931,38,1307,40],[1931,44,1307,46],[1931,45,1307,47],[1932,14,1308,16,"window"],[1932,20,1308,22],[1932,21,1308,23,"history"],[1932,28,1308,30],[1932,29,1308,31,"replaceState"],[1932,41,1308,43],[1932,42,1308,44,"window"],[1932,48,1308,50],[1932,49,1308,51,"history"],[1932,56,1308,58],[1932,57,1308,59,"state"],[1932,62,1308,64],[1932,64,1308,66],[1932,66,1308,68],[1932,68,1308,70,"url"],[1932,71,1308,73],[1932,72,1308,74,"toString"],[1932,80,1308,82],[1932,81,1308,83],[1932,82,1308,84],[1932,83,1308,85],[1933,14,1309,16],[1933,21,1309,23],[1934,16,1309,25,"data"],[1934,20,1309,29],[1934,22,1309,31],[1935,18,1309,33,"session"],[1935,25,1309,40],[1935,27,1309,42,"data"],[1935,32,1309,46],[1935,33,1309,47,"session"],[1935,40,1309,54],[1936,18,1309,56,"redirectType"],[1936,30,1309,68],[1936,32,1309,70],[1937,16,1309,75],[1937,17,1309,76],[1938,16,1309,78,"error"],[1938,21,1309,83],[1938,23,1309,85],[1939,14,1309,90],[1939,15,1309,91],[1940,12,1310,12],[1941,12,1311,12],[1941,16,1311,20,"provider_token"],[1941,30,1311,34],[1941,33,1311,129,"params"],[1941,39,1311,135],[1941,40,1311,20,"provider_token"],[1941,54,1311,34],[1942,14,1311,36,"provider_refresh_token"],[1942,36,1311,58],[1942,39,1311,129,"params"],[1942,45,1311,135],[1942,46,1311,36,"provider_refresh_token"],[1942,68,1311,58],[1943,14,1311,60,"access_token"],[1943,26,1311,72],[1943,29,1311,129,"params"],[1943,35,1311,135],[1943,36,1311,60,"access_token"],[1943,48,1311,72],[1944,14,1311,74,"refresh_token"],[1944,27,1311,87],[1944,30,1311,129,"params"],[1944,36,1311,135],[1944,37,1311,74,"refresh_token"],[1944,50,1311,87],[1945,14,1311,89,"expires_in"],[1945,24,1311,99],[1945,27,1311,129,"params"],[1945,33,1311,135],[1945,34,1311,89,"expires_in"],[1945,44,1311,99],[1946,14,1311,101,"expires_at"],[1946,24,1311,111],[1946,27,1311,129,"params"],[1946,33,1311,135],[1946,34,1311,101,"expires_at"],[1946,44,1311,111],[1947,14,1311,113,"token_type"],[1947,24,1311,123],[1947,27,1311,129,"params"],[1947,33,1311,135],[1947,34,1311,113,"token_type"],[1947,44,1311,123],[1948,12,1312,12],[1948,16,1312,16],[1948,17,1312,17,"access_token"],[1948,29,1312,29],[1948,33,1312,33],[1948,34,1312,34,"expires_in"],[1948,44,1312,44],[1948,48,1312,48],[1948,49,1312,49,"refresh_token"],[1948,62,1312,62],[1948,66,1312,66],[1948,67,1312,67,"token_type"],[1948,77,1312,77],[1948,79,1312,79],[1949,14,1313,16],[1949,20,1313,22],[1949,24,1313,26,"errors_1"],[1949,32,1313,34],[1949,33,1313,35,"AuthImplicitGrantRedirectError"],[1949,63,1313,65],[1949,64,1313,66],[1949,91,1313,93],[1949,92,1313,94],[1950,12,1314,12],[1951,12,1315,12],[1951,16,1315,18,"timeNow"],[1951,23,1315,25],[1951,26,1315,28,"Math"],[1951,30,1315,32],[1951,31,1315,33,"round"],[1951,36,1315,38],[1951,37,1315,39,"Date"],[1951,41,1315,43],[1951,42,1315,44,"now"],[1951,45,1315,47],[1951,46,1315,48],[1951,47,1315,49],[1951,50,1315,52],[1951,54,1315,56],[1951,55,1315,57],[1952,12,1316,12],[1952,16,1316,18,"expiresIn"],[1952,25,1316,27],[1952,28,1316,30,"parseInt"],[1952,36,1316,38],[1952,37,1316,39,"expires_in"],[1952,47,1316,49],[1952,48,1316,50],[1953,12,1317,12],[1953,16,1317,16,"expiresAt"],[1953,25,1317,25],[1953,28,1317,28,"timeNow"],[1953,35,1317,35],[1953,38,1317,38,"expiresIn"],[1953,47,1317,47],[1954,12,1318,12],[1954,16,1318,16,"expires_at"],[1954,26,1318,26],[1954,28,1318,28],[1955,14,1319,16,"expiresAt"],[1955,23,1319,25],[1955,26,1319,28,"parseInt"],[1955,34,1319,36],[1955,35,1319,37,"expires_at"],[1955,45,1319,47],[1955,46,1319,48],[1956,12,1320,12],[1957,12,1321,12],[1957,16,1321,18,"actuallyExpiresIn"],[1957,33,1321,35],[1957,36,1321,38,"expiresAt"],[1957,45,1321,47],[1957,48,1321,50,"timeNow"],[1957,55,1321,57],[1958,12,1322,12],[1958,16,1322,16,"actuallyExpiresIn"],[1958,33,1322,33],[1958,36,1322,36],[1958,40,1322,40],[1958,44,1322,44,"constants_1"],[1958,55,1322,55],[1958,56,1322,56,"AUTO_REFRESH_TICK_DURATION_MS"],[1958,85,1322,85],[1958,87,1322,87],[1959,14,1323,16,"console"],[1959,21,1323,23],[1959,22,1323,24,"warn"],[1959,26,1323,28],[1959,27,1323,29],[1959,92,1323,94,"actuallyExpiresIn"],[1959,109,1323,111],[1959,142,1323,144,"expiresIn"],[1959,151,1323,153],[1959,154,1323,156],[1959,155,1323,157],[1960,12,1324,12],[1961,12,1325,12],[1961,16,1325,18,"issuedAt"],[1961,24,1325,26],[1961,27,1325,29,"expiresAt"],[1961,36,1325,38],[1961,39,1325,41,"expiresIn"],[1961,48,1325,50],[1962,12,1326,12],[1962,16,1326,16,"timeNow"],[1962,23,1326,23],[1962,26,1326,26,"issuedAt"],[1962,34,1326,34],[1962,38,1326,38],[1962,41,1326,41],[1962,43,1326,43],[1963,14,1327,16,"console"],[1963,21,1327,23],[1963,22,1327,24,"warn"],[1963,26,1327,28],[1963,27,1327,29],[1963,124,1327,126],[1963,126,1327,128,"issuedAt"],[1963,134,1327,136],[1963,136,1327,138,"expiresAt"],[1963,145,1327,147],[1963,147,1327,149,"timeNow"],[1963,154,1327,156],[1963,155,1327,157],[1964,12,1328,12],[1964,13,1328,13],[1964,19,1329,17],[1964,23,1329,21,"timeNow"],[1964,30,1329,28],[1964,33,1329,31,"issuedAt"],[1964,41,1329,39],[1964,44,1329,42],[1964,45,1329,43],[1964,47,1329,45],[1965,14,1330,16,"console"],[1965,21,1330,23],[1965,22,1330,24,"warn"],[1965,26,1330,28],[1965,27,1330,29],[1965,137,1330,139],[1965,139,1330,141,"issuedAt"],[1965,147,1330,149],[1965,149,1330,151,"expiresAt"],[1965,158,1330,160],[1965,160,1330,162,"timeNow"],[1965,167,1330,169],[1965,168,1330,170],[1966,12,1331,12],[1967,12,1332,12],[1967,16,1332,12,"_yield$this$_getUser2"],[1967,37,1332,12],[1967,46,1332,42],[1967,50,1332,46],[1967,51,1332,47,"_getUser"],[1967,59,1332,55],[1967,60,1332,56,"access_token"],[1967,72,1332,68],[1967,73,1332,69],[1968,14,1332,20,"data"],[1968,18,1332,24],[1968,21,1332,24,"_yield$this$_getUser2"],[1968,42,1332,24],[1968,43,1332,20,"data"],[1968,47,1332,24],[1969,14,1332,26,"error"],[1969,19,1332,31],[1969,22,1332,31,"_yield$this$_getUser2"],[1969,43,1332,31],[1969,44,1332,26,"error"],[1969,49,1332,31],[1970,12,1333,12],[1970,16,1333,16,"error"],[1970,21,1333,21],[1970,23,1334,16],[1970,29,1334,22,"error"],[1970,34,1334,27],[1971,12,1335,12],[1971,16,1335,18,"session"],[1971,23,1335,25],[1971,26,1335,28],[1972,14,1336,16,"provider_token"],[1972,28,1336,30],[1972,30,1336,16,"provider_token"],[1972,44,1336,30],[1973,14,1337,16,"provider_refresh_token"],[1973,36,1337,38],[1973,38,1337,16,"provider_refresh_token"],[1973,60,1337,38],[1974,14,1338,16,"access_token"],[1974,26,1338,28],[1974,28,1338,16,"access_token"],[1974,40,1338,28],[1975,14,1339,16,"expires_in"],[1975,24,1339,26],[1975,26,1339,28,"expiresIn"],[1975,35,1339,37],[1976,14,1340,16,"expires_at"],[1976,24,1340,26],[1976,26,1340,28,"expiresAt"],[1976,35,1340,37],[1977,14,1341,16,"refresh_token"],[1977,27,1341,29],[1977,29,1341,16,"refresh_token"],[1977,42,1341,29],[1978,14,1342,16,"token_type"],[1978,24,1342,26],[1978,26,1342,16,"token_type"],[1978,36,1342,26],[1979,14,1343,16,"user"],[1979,18,1343,20],[1979,20,1343,22,"data"],[1979,24,1343,26],[1979,25,1343,27,"user"],[1980,12,1344,12],[1980,13,1344,13],[1981,12,1345,12],[1982,12,1346,12,"window"],[1982,18,1346,18],[1982,19,1346,19,"location"],[1982,27,1346,27],[1982,28,1346,28,"hash"],[1982,32,1346,32],[1982,35,1346,35],[1982,37,1346,37],[1983,12,1347,12],[1983,16,1347,16],[1983,17,1347,17,"_debug"],[1983,23,1347,23],[1983,24,1347,24],[1983,47,1347,47],[1983,49,1347,49],[1983,80,1347,80],[1983,81,1347,81],[1984,12,1348,12],[1984,19,1348,19],[1985,14,1348,21,"data"],[1985,18,1348,25],[1985,20,1348,27],[1986,16,1348,29,"session"],[1986,23,1348,36],[1986,25,1348,29,"session"],[1986,32,1348,36],[1987,16,1348,38,"redirectType"],[1987,28,1348,50],[1987,30,1348,52,"params"],[1987,36,1348,58],[1987,37,1348,59,"type"],[1988,14,1348,64],[1988,15,1348,65],[1989,14,1348,67,"error"],[1989,19,1348,72],[1989,21,1348,74],[1990,12,1348,79],[1990,13,1348,80],[1991,10,1349,8],[1991,11,1349,9],[1991,12,1350,8],[1991,19,1350,15,"error"],[1991,24,1350,20],[1991,26,1350,22],[1992,12,1351,12],[1992,16,1351,16],[1992,17,1351,17],[1992,18,1351,18],[1992,20,1351,20,"errors_1"],[1992,28,1351,28],[1992,29,1351,29,"isAuthError"],[1992,40,1351,40],[1992,42,1351,42,"error"],[1992,47,1351,47],[1992,48,1351,48],[1992,50,1351,50],[1993,14,1352,16],[1993,21,1352,23],[1994,16,1352,25,"data"],[1994,20,1352,29],[1994,22,1352,31],[1995,18,1352,33,"session"],[1995,25,1352,40],[1995,27,1352,42],[1995,31,1352,46],[1996,18,1352,48,"redirectType"],[1996,30,1352,60],[1996,32,1352,62],[1997,16,1352,67],[1997,17,1352,68],[1998,16,1352,70,"error"],[1998,21,1352,75],[1998,23,1352,70,"error"],[1999,14,1352,76],[1999,15,1352,77],[2000,12,1353,12],[2001,12,1354,12],[2001,18,1354,18,"error"],[2001,23,1354,23],[2002,10,1355,8],[2003,8,1356,4],[2003,9,1356,5],[2004,8,1356,5],[2004,17,1270,10,"_getSessionFromURL"],[2004,35,1270,28,"_getSessionFromURL"],[2004,36,1270,28,"_x32"],[2004,40,1270,28],[2004,42,1270,28,"_x33"],[2004,46,1270,28],[2005,10,1270,28],[2005,17,1270,28,"_getSessionFromURL2"],[2005,36,1270,28],[2005,37,1270,28,"apply"],[2005,42,1270,28],[2005,49,1270,28,"arguments"],[2005,58,1270,28],[2006,8,1270,28],[2007,8,1270,28],[2007,15,1270,10,"_getSessionFromURL"],[2007,33,1270,28],[2008,6,1270,28],[2009,6,1357,4],[2010,0,1358,0],[2011,0,1359,0],[2012,6,1357,4],[2013,4,1357,4],[2014,6,1357,4,"key"],[2014,9,1357,4],[2015,6,1357,4,"value"],[2015,11,1357,4],[2015,13,1360,4],[2015,22,1360,4,"_isImplicitGrantCallback"],[2015,46,1360,28,"_isImplicitGrantCallback"],[2015,47,1360,29,"params"],[2015,53,1360,35],[2015,55,1360,37],[2016,8,1361,8],[2016,15,1361,15,"Boolean"],[2016,22,1361,22],[2016,23,1361,23,"params"],[2016,29,1361,29],[2016,30,1361,30,"access_token"],[2016,42,1361,42],[2016,46,1361,46,"params"],[2016,52,1361,52],[2016,53,1361,53,"error_description"],[2016,70,1361,70],[2016,71,1361,71],[2017,6,1362,4],[2018,6,1363,4],[2019,0,1364,0],[2020,0,1365,0],[2021,4,1363,4],[2022,6,1363,4,"key"],[2022,9,1363,4],[2023,6,1363,4,"value"],[2023,11,1363,4],[2024,8,1363,4],[2024,12,1363,4,"_isPKCECallback2"],[2024,28,1363,4],[2024,31,1363,4,"_asyncToGenerator"],[2024,48,1363,4],[2024,49,1366,4],[2024,60,1366,26,"params"],[2024,66,1366,32],[2024,68,1366,34],[2025,10,1367,8],[2025,14,1367,14,"currentStorageContent"],[2025,35,1367,35],[2025,44,1367,44],[2025,45,1367,45],[2025,46,1367,46],[2025,48,1367,48,"helpers_1"],[2025,57,1367,57],[2025,58,1367,58,"getItemAsync"],[2025,70,1367,70],[2025,72,1367,72],[2025,76,1367,76],[2025,77,1367,77,"storage"],[2025,84,1367,84],[2025,86,1367,86],[2025,89,1367,89],[2025,93,1367,93],[2025,94,1367,94,"storageKey"],[2025,104,1367,104],[2025,120,1367,120],[2025,121,1367,121],[2026,10,1368,8],[2026,17,1368,15],[2026,18,1368,16],[2026,20,1368,18,"params"],[2026,26,1368,24],[2026,27,1368,25,"code"],[2026,31,1368,29],[2026,35,1368,33,"currentStorageContent"],[2026,56,1368,54],[2026,57,1368,55],[2027,8,1369,4],[2027,9,1369,5],[2028,8,1369,5],[2028,17,1366,10,"_isPKCECallback"],[2028,32,1366,25,"_isPKCECallback"],[2028,33,1366,25,"_x34"],[2028,37,1366,25],[2029,10,1366,25],[2029,17,1366,25,"_isPKCECallback2"],[2029,33,1366,25],[2029,34,1366,25,"apply"],[2029,39,1366,25],[2029,46,1366,25,"arguments"],[2029,55,1366,25],[2030,8,1366,25],[2031,8,1366,25],[2031,15,1366,10,"_isPKCECallback"],[2031,30,1366,25],[2032,6,1366,25],[2033,6,1370,4],[2034,0,1371,0],[2035,0,1372,0],[2036,0,1373,0],[2037,0,1374,0],[2038,0,1375,0],[2039,0,1376,0],[2040,0,1377,0],[2041,6,1370,4],[2042,4,1370,4],[2043,6,1370,4,"key"],[2043,9,1370,4],[2044,6,1370,4,"value"],[2044,11,1370,4],[2045,8,1370,4],[2045,12,1370,4,"_signOut2"],[2045,21,1370,4],[2045,24,1370,4,"_asyncToGenerator"],[2045,41,1370,4],[2045,42,1378,4],[2045,55,1378,49],[2046,10,1378,49],[2046,14,1378,49,"_this15"],[2046,21,1378,49],[2047,10,1378,49],[2047,14,1378,18,"options"],[2047,21,1378,25],[2047,24,1378,25,"arguments"],[2047,33,1378,25],[2047,34,1378,25,"length"],[2047,40,1378,25],[2047,48,1378,25,"arguments"],[2047,57,1378,25],[2047,65,1378,25,"undefined"],[2047,74,1378,25],[2047,77,1378,25,"arguments"],[2047,86,1378,25],[2047,92,1378,28],[2048,12,1378,30,"scope"],[2048,17,1378,35],[2048,19,1378,37],[2049,10,1378,46],[2049,11,1378,47],[2050,10,1379,8],[2050,16,1379,14],[2050,20,1379,18],[2050,21,1379,19,"initializePromise"],[2050,38,1379,36],[2051,10,1380,8],[2051,23,1380,21],[2051,27,1380,25],[2051,28,1380,26,"_acquireLock"],[2051,40,1380,38],[2051,41,1380,39],[2051,42,1380,40],[2051,43,1380,41],[2051,58,1380,41,"_asyncToGenerator"],[2051,75,1380,41],[2051,76,1380,43],[2051,89,1380,55],[2052,12,1381,12],[2052,25,1381,25,"_this15"],[2052,32,1381,29],[2052,33,1381,30,"_signOut"],[2052,41,1381,38],[2052,42,1381,39,"options"],[2052,49,1381,46],[2052,50,1381,47],[2053,10,1382,8],[2053,11,1382,9],[2053,13,1382,10],[2054,8,1383,4],[2054,9,1383,5],[2055,8,1383,5],[2055,17,1378,10,"signOut"],[2055,24,1378,17,"signOut"],[2055,25,1378,17],[2056,10,1378,17],[2056,17,1378,17,"_signOut2"],[2056,26,1378,17],[2056,27,1378,17,"apply"],[2056,32,1378,17],[2056,39,1378,17,"arguments"],[2056,48,1378,17],[2057,8,1378,17],[2058,8,1378,17],[2058,15,1378,10,"signOut"],[2058,22,1378,17],[2059,6,1378,17],[2060,4,1378,17],[2061,6,1378,17,"key"],[2061,9,1378,17],[2062,6,1378,17,"value"],[2062,11,1378,17],[2063,8,1378,17],[2063,12,1378,17,"_signOut3"],[2063,21,1378,17],[2063,24,1378,17,"_asyncToGenerator"],[2063,41,1378,17],[2063,42,1384,4],[2063,55,1384,52],[2064,10,1384,52],[2064,14,1384,52,"_this16"],[2064,21,1384,52],[2065,10,1384,52],[2065,14,1384,52,"_ref21"],[2065,20,1384,52],[2065,23,1384,52,"arguments"],[2065,32,1384,52],[2065,33,1384,52,"length"],[2065,39,1384,52],[2065,47,1384,52,"arguments"],[2065,56,1384,52],[2065,64,1384,52,"undefined"],[2065,73,1384,52],[2065,76,1384,52,"arguments"],[2065,85,1384,52],[2065,91,1384,31],[2066,14,1384,33,"scope"],[2066,19,1384,38],[2066,21,1384,40],[2067,12,1384,49],[2067,13,1384,50],[2068,12,1384,21,"scope"],[2068,17,1384,26],[2068,20,1384,26,"_ref21"],[2068,26,1384,26],[2068,27,1384,21,"scope"],[2068,32,1384,26],[2069,10,1385,8],[2069,23,1385,21],[2069,27,1385,25],[2069,28,1385,26,"_useSession"],[2069,39,1385,37],[2070,12,1385,37],[2070,16,1385,37,"_ref22"],[2070,22,1385,37],[2070,25,1385,37,"_asyncToGenerator"],[2070,42,1385,37],[2070,43,1385,38],[2070,54,1385,45,"result"],[2070,60,1385,51],[2070,62,1385,56],[2071,14,1386,12],[2071,18,1386,16,"_a"],[2071,20,1386,18],[2072,14,1387,12],[2072,18,1387,20,"data"],[2072,22,1387,24],[2072,25,1387,50,"result"],[2072,31,1387,56],[2072,32,1387,20,"data"],[2072,36,1387,24],[2073,16,1387,33,"sessionError"],[2073,28,1387,45],[2073,31,1387,50,"result"],[2073,37,1387,56],[2073,38,1387,26,"error"],[2073,43,1387,31],[2074,14,1388,12],[2074,18,1388,16,"sessionError"],[2074,30,1388,28],[2074,32,1388,30],[2075,16,1389,16],[2075,23,1389,23],[2076,18,1389,25,"error"],[2076,23,1389,30],[2076,25,1389,32,"sessionError"],[2077,16,1389,45],[2077,17,1389,46],[2078,14,1390,12],[2079,14,1391,12],[2079,18,1391,18,"accessToken"],[2079,29,1391,29],[2079,32,1391,32],[2079,33,1391,33,"_a"],[2079,35,1391,35],[2079,38,1391,38,"data"],[2079,42,1391,42],[2079,43,1391,43,"session"],[2079,50,1391,50],[2079,56,1391,56],[2079,60,1391,60],[2079,64,1391,64,"_a"],[2079,66,1391,66],[2079,71,1391,71],[2079,76,1391,76],[2079,77,1391,77],[2079,80,1391,80],[2079,85,1391,85],[2079,86,1391,86],[2079,89,1391,89,"_a"],[2079,91,1391,91],[2079,92,1391,92,"access_token"],[2079,104,1391,104],[2080,14,1392,12],[2080,18,1392,16,"accessToken"],[2080,29,1392,27],[2080,31,1392,29],[2081,16,1393,16],[2081,20,1393,16,"_yield$_this16$admin$"],[2081,41,1393,16],[2081,50,1393,40,"_this16"],[2081,57,1393,44],[2081,58,1393,45,"admin"],[2081,63,1393,50],[2081,64,1393,51,"signOut"],[2081,71,1393,58],[2081,72,1393,59,"accessToken"],[2081,83,1393,70],[2081,85,1393,72,"scope"],[2081,90,1393,77],[2081,91,1393,78],[2082,18,1393,24,"error"],[2082,23,1393,29],[2082,26,1393,29,"_yield$_this16$admin$"],[2082,47,1393,29],[2082,48,1393,24,"error"],[2082,53,1393,29],[2083,16,1394,16],[2083,20,1394,20,"error"],[2083,25,1394,25],[2083,27,1394,27],[2084,18,1395,20],[2085,18,1396,20],[2086,18,1397,20],[2086,22,1397,24],[2086,24,1397,26],[2086,25,1397,27],[2086,26,1397,28],[2086,28,1397,30,"errors_1"],[2086,36,1397,38],[2086,37,1397,39,"isAuthApiError"],[2086,51,1397,53],[2086,53,1397,55,"error"],[2086,58,1397,60],[2086,59,1397,61],[2086,64,1398,25,"error"],[2086,69,1398,30],[2086,70,1398,31,"status"],[2086,76,1398,37],[2086,81,1398,42],[2086,84,1398,45],[2086,88,1398,49,"error"],[2086,93,1398,54],[2086,94,1398,55,"status"],[2086,100,1398,61],[2086,105,1398,66],[2086,108,1398,69],[2086,112,1398,73,"error"],[2086,117,1398,78],[2086,118,1398,79,"status"],[2086,124,1398,85],[2086,129,1398,90],[2086,132,1398,93],[2086,133,1398,94],[2086,134,1398,95],[2086,136,1398,97],[2087,20,1399,24],[2087,27,1399,31],[2088,22,1399,33,"error"],[2088,27,1399,38],[2088,29,1399,33,"error"],[2089,20,1399,39],[2089,21,1399,40],[2090,18,1400,20],[2091,16,1401,16],[2092,14,1402,12],[2093,14,1403,12],[2093,18,1403,16,"scope"],[2093,23,1403,21],[2093,28,1403,26],[2093,36,1403,34],[2093,38,1403,36],[2094,16,1404,16],[2094,22,1404,22,"_this16"],[2094,29,1404,26],[2094,30,1404,27,"_removeSession"],[2094,44,1404,41],[2094,45,1404,42],[2094,46,1404,43],[2095,16,1405,16],[2095,22,1405,22],[2095,23,1405,23],[2095,24,1405,24],[2095,26,1405,26,"helpers_1"],[2095,35,1405,35],[2095,36,1405,36,"removeItemAsync"],[2095,51,1405,51],[2095,53,1405,53,"_this16"],[2095,60,1405,57],[2095,61,1405,58,"storage"],[2095,68,1405,65],[2095,70,1405,67],[2095,73,1405,70,"_this16"],[2095,80,1405,74],[2095,81,1405,75,"storageKey"],[2095,91,1405,85],[2095,107,1405,101],[2095,108,1405,102],[2096,14,1406,12],[2097,14,1407,12],[2097,21,1407,19],[2098,16,1407,21,"error"],[2098,21,1407,26],[2098,23,1407,28],[2099,14,1407,33],[2099,15,1407,34],[2100,12,1408,8],[2100,13,1408,9],[2101,12,1408,9],[2101,29,1408,9,"_x35"],[2101,33,1408,9],[2102,14,1408,9],[2102,21,1408,9,"_ref22"],[2102,27,1408,9],[2102,28,1408,9,"apply"],[2102,33,1408,9],[2102,40,1408,9,"arguments"],[2102,49,1408,9],[2103,12,1408,9],[2104,10,1408,9],[2104,14,1408,10],[2105,8,1409,4],[2105,9,1409,5],[2106,8,1409,5],[2106,17,1384,10,"_signOut"],[2106,25,1384,18,"_signOut"],[2106,26,1384,18],[2107,10,1384,18],[2107,17,1384,18,"_signOut3"],[2107,26,1384,18],[2107,27,1384,18,"apply"],[2107,32,1384,18],[2107,39,1384,18,"arguments"],[2107,48,1384,18],[2108,8,1384,18],[2109,8,1384,18],[2109,15,1384,10,"_signOut"],[2109,23,1384,18],[2110,6,1384,18],[2111,6,1410,4],[2112,0,1411,0],[2113,0,1412,0],[2114,0,1413,0],[2115,4,1410,4],[2116,6,1410,4,"key"],[2116,9,1410,4],[2117,6,1410,4,"value"],[2117,11,1410,4],[2117,13,1414,4],[2117,22,1414,4,"onAuthStateChange"],[2117,39,1414,21,"onAuthStateChange"],[2117,40,1414,22,"callback"],[2117,48,1414,30],[2117,50,1414,32],[2118,8,1414,32],[2118,12,1414,32,"_this17"],[2118,19,1414,32],[2119,8,1415,8],[2119,12,1415,14,"id"],[2119,14,1415,16],[2119,17,1415,19],[2119,18,1415,20],[2119,19,1415,21],[2119,21,1415,23,"helpers_1"],[2119,30,1415,32],[2119,31,1415,33,"uuid"],[2119,35,1415,37],[2119,37,1415,39],[2119,38,1415,40],[2120,8,1416,8],[2120,12,1416,14,"subscription"],[2120,24,1416,26],[2120,27,1416,29],[2121,10,1417,12,"id"],[2121,12,1417,14],[2121,14,1417,12,"id"],[2121,16,1417,14],[2122,10,1418,12,"callback"],[2122,18,1418,20],[2122,20,1418,12,"callback"],[2122,28,1418,20],[2123,10,1419,12,"unsubscribe"],[2123,21,1419,23],[2123,23,1419,25],[2123,32,1419,12,"unsubscribe"],[2123,43,1419,23,"unsubscribe"],[2123,44,1419,23],[2123,46,1419,31],[2124,12,1420,16,"_this17"],[2124,19,1420,20],[2124,20,1420,21,"_debug"],[2124,26,1420,27],[2124,27,1420,28],[2124,43,1420,44],[2124,45,1420,46],[2124,84,1420,85],[2124,86,1420,87,"id"],[2124,88,1420,89],[2124,89,1420,90],[2125,12,1421,16,"_this17"],[2125,19,1421,20],[2125,20,1421,21,"stateChangeEmitters"],[2125,39,1421,40],[2125,40,1421,41,"delete"],[2125,46,1421,47],[2125,47,1421,48,"id"],[2125,49,1421,50],[2125,50,1421,51],[2126,10,1422,12],[2127,8,1423,8],[2127,9,1423,9],[2128,8,1424,8],[2128,12,1424,12],[2128,13,1424,13,"_debug"],[2128,19,1424,19],[2128,20,1424,20],[2128,42,1424,42],[2128,44,1424,44],[2128,73,1424,73],[2128,75,1424,75,"id"],[2128,77,1424,77],[2128,78,1424,78],[2129,8,1425,8],[2129,12,1425,12],[2129,13,1425,13,"stateChangeEmitters"],[2129,32,1425,32],[2129,33,1425,33,"set"],[2129,36,1425,36],[2129,37,1425,37,"id"],[2129,39,1425,39],[2129,41,1425,41,"subscription"],[2129,53,1425,53],[2129,54,1425,54],[2130,8,1426,8,"_asyncToGenerator"],[2130,25,1426,8],[2130,26,1426,9],[2130,39,1426,21],[2131,10,1427,12],[2131,16,1427,18,"_this17"],[2131,23,1427,22],[2131,24,1427,23,"initializePromise"],[2131,41,1427,40],[2132,10,1428,12],[2132,16,1428,18,"_this17"],[2132,23,1428,22],[2132,24,1428,23,"_acquireLock"],[2132,36,1428,35],[2132,37,1428,36],[2132,38,1428,37],[2132,39,1428,38],[2132,54,1428,38,"_asyncToGenerator"],[2132,71,1428,38],[2132,72,1428,40],[2132,85,1428,52],[2133,12,1429,16,"_this17"],[2133,19,1429,20],[2133,20,1429,21,"_emitInitialSession"],[2133,39,1429,40],[2133,40,1429,41,"id"],[2133,42,1429,43],[2133,43,1429,44],[2134,10,1430,12],[2134,11,1430,13],[2134,13,1430,14],[2135,8,1431,8],[2135,9,1431,9],[2135,11,1431,11],[2135,12,1431,12],[2136,8,1432,8],[2136,15,1432,15],[2137,10,1432,17,"data"],[2137,14,1432,21],[2137,16,1432,23],[2138,12,1432,25,"subscription"],[2138,24,1432,37],[2138,26,1432,25,"subscription"],[2139,10,1432,38],[2140,8,1432,40],[2140,9,1432,41],[2141,6,1433,4],[2142,4,1433,5],[2143,6,1433,5,"key"],[2143,9,1433,5],[2144,6,1433,5,"value"],[2144,11,1433,5],[2145,8,1433,5],[2145,12,1433,5,"_emitInitialSession2"],[2145,32,1433,5],[2145,35,1433,5,"_asyncToGenerator"],[2145,52,1433,5],[2145,53,1434,4],[2145,64,1434,30,"id"],[2145,66,1434,32],[2145,68,1434,34],[2146,10,1434,34],[2146,14,1434,34,"_this18"],[2146,21,1434,34],[2147,10,1435,8],[2147,23,1435,21],[2147,27,1435,25],[2147,28,1435,26,"_useSession"],[2147,39,1435,37],[2148,12,1435,37],[2148,16,1435,37,"_ref25"],[2148,22,1435,37],[2148,25,1435,37,"_asyncToGenerator"],[2148,42,1435,37],[2148,43,1435,38],[2148,54,1435,45,"result"],[2148,60,1435,51],[2148,62,1435,56],[2149,14,1436,12],[2149,18,1436,16,"_a"],[2149,20,1436,18],[2149,22,1436,20,"_b"],[2149,24,1436,22],[2150,14,1437,12],[2150,18,1437,16],[2151,16,1438,16],[2151,20,1438,32,"session"],[2151,27,1438,39],[2151,30,1438,54,"result"],[2151,36,1438,60],[2151,37,1438,24,"data"],[2151,41,1438,28],[2151,42,1438,32,"session"],[2151,49,1438,39],[2152,18,1438,43,"error"],[2152,23,1438,48],[2152,26,1438,54,"result"],[2152,32,1438,60],[2152,33,1438,43,"error"],[2152,38,1438,48],[2153,16,1439,16],[2153,20,1439,20,"error"],[2153,25,1439,25],[2153,27,1440,20],[2153,33,1440,26,"error"],[2153,38,1440,31],[2154,16,1441,16],[2154,22,1441,23],[2154,23,1441,24,"_a"],[2154,25,1441,26],[2154,28,1441,29,"_this18"],[2154,35,1441,33],[2154,36,1441,34,"stateChangeEmitters"],[2154,55,1441,53],[2154,56,1441,54,"get"],[2154,59,1441,57],[2154,60,1441,58,"id"],[2154,62,1441,60],[2154,63,1441,61],[2154,69,1441,67],[2154,73,1441,71],[2154,77,1441,75,"_a"],[2154,79,1441,77],[2154,84,1441,82],[2154,89,1441,87],[2154,90,1441,88],[2154,93,1441,91],[2154,98,1441,96],[2154,99,1441,97],[2154,102,1441,100,"_a"],[2154,104,1441,102],[2154,105,1441,103,"callback"],[2154,113,1441,111],[2154,114,1441,112],[2154,131,1441,129],[2154,133,1441,131,"session"],[2154,140,1441,138],[2154,141,1441,139],[2155,16,1442,16,"_this18"],[2155,23,1442,20],[2155,24,1442,21,"_debug"],[2155,30,1442,27],[2155,31,1442,28],[2155,48,1442,45],[2155,50,1442,47],[2155,63,1442,60],[2155,65,1442,62,"id"],[2155,67,1442,64],[2155,69,1442,66],[2155,78,1442,75],[2155,80,1442,77,"session"],[2155,87,1442,84],[2155,88,1442,85],[2156,14,1443,12],[2156,15,1443,13],[2156,16,1444,12],[2156,23,1444,19,"err"],[2156,26,1444,22],[2156,28,1444,24],[2157,16,1445,16],[2157,22,1445,23],[2157,23,1445,24,"_b"],[2157,25,1445,26],[2157,28,1445,29,"_this18"],[2157,35,1445,33],[2157,36,1445,34,"stateChangeEmitters"],[2157,55,1445,53],[2157,56,1445,54,"get"],[2157,59,1445,57],[2157,60,1445,58,"id"],[2157,62,1445,60],[2157,63,1445,61],[2157,69,1445,67],[2157,73,1445,71],[2157,77,1445,75,"_b"],[2157,79,1445,77],[2157,84,1445,82],[2157,89,1445,87],[2157,90,1445,88],[2157,93,1445,91],[2157,98,1445,96],[2157,99,1445,97],[2157,102,1445,100,"_b"],[2157,104,1445,102],[2157,105,1445,103,"callback"],[2157,113,1445,111],[2157,114,1445,112],[2157,131,1445,129],[2157,133,1445,131],[2157,137,1445,135],[2157,138,1445,136],[2158,16,1446,16,"_this18"],[2158,23,1446,20],[2158,24,1446,21,"_debug"],[2158,30,1446,27],[2158,31,1446,28],[2158,48,1446,45],[2158,50,1446,47],[2158,63,1446,60],[2158,65,1446,62,"id"],[2158,67,1446,64],[2158,69,1446,66],[2158,76,1446,73],[2158,78,1446,75,"err"],[2158,81,1446,78],[2158,82,1446,79],[2159,16,1447,16,"console"],[2159,23,1447,23],[2159,24,1447,24,"error"],[2159,29,1447,29],[2159,30,1447,30,"err"],[2159,33,1447,33],[2159,34,1447,34],[2160,14,1448,12],[2161,12,1449,8],[2161,13,1449,9],[2162,12,1449,9],[2162,29,1449,9,"_x37"],[2162,33,1449,9],[2163,14,1449,9],[2163,21,1449,9,"_ref25"],[2163,27,1449,9],[2163,28,1449,9,"apply"],[2163,33,1449,9],[2163,40,1449,9,"arguments"],[2163,49,1449,9],[2164,12,1449,9],[2165,10,1449,9],[2165,14,1449,10],[2166,8,1450,4],[2166,9,1450,5],[2167,8,1450,5],[2167,17,1434,10,"_emitInitialSession"],[2167,36,1434,29,"_emitInitialSession"],[2167,37,1434,29,"_x36"],[2167,41,1434,29],[2168,10,1434,29],[2168,17,1434,29,"_emitInitialSession2"],[2168,37,1434,29],[2168,38,1434,29,"apply"],[2168,43,1434,29],[2168,50,1434,29,"arguments"],[2168,59,1434,29],[2169,8,1434,29],[2170,8,1434,29],[2170,15,1434,10,"_emitInitialSession"],[2170,34,1434,29],[2171,6,1434,29],[2172,6,1451,4],[2173,0,1452,0],[2174,0,1453,0],[2175,0,1454,0],[2176,0,1455,0],[2177,0,1456,0],[2178,0,1457,0],[2179,4,1451,4],[2180,6,1451,4,"key"],[2180,9,1451,4],[2181,6,1451,4,"value"],[2181,11,1451,4],[2182,8,1451,4],[2182,12,1451,4,"_resetPasswordForEmail"],[2182,34,1451,4],[2182,37,1451,4,"_asyncToGenerator"],[2182,54,1451,4],[2182,55,1458,4],[2182,66,1458,32,"email"],[2182,71,1458,37],[2182,73,1458,53],[2183,10,1458,53],[2183,14,1458,39,"options"],[2183,21,1458,46],[2183,24,1458,46,"arguments"],[2183,33,1458,46],[2183,34,1458,46,"length"],[2183,40,1458,46],[2183,48,1458,46,"arguments"],[2183,57,1458,46],[2183,65,1458,46,"undefined"],[2183,74,1458,46],[2183,77,1458,46,"arguments"],[2183,86,1458,46],[2183,92,1458,49],[2183,93,1458,50],[2183,94,1458,51],[2184,10,1459,8],[2184,14,1459,12,"codeChallenge"],[2184,27,1459,25],[2184,30,1459,28],[2184,34,1459,32],[2185,10,1460,8],[2185,14,1460,12,"codeChallengeMethod"],[2185,33,1460,31],[2185,36,1460,34],[2185,40,1460,38],[2186,10,1461,8],[2186,14,1461,12],[2186,18,1461,16],[2186,19,1461,17,"flowType"],[2186,27,1461,25],[2186,32,1461,30],[2186,38,1461,36],[2186,40,1461,38],[2187,12,1462,12],[2188,12,1462,13],[2188,16,1462,13,"_yield16"],[2188,24,1462,13],[2188,33,1463,57],[2188,34,1463,58],[2188,35,1463,59],[2188,37,1463,61,"helpers_1"],[2188,46,1463,70],[2188,47,1463,71,"getCodeChallengeAndMethod"],[2188,72,1463,96],[2188,74,1463,98],[2188,78,1463,102],[2188,79,1463,103,"storage"],[2188,86,1463,110],[2188,88,1463,112],[2188,92,1463,116],[2188,93,1463,117,"storageKey"],[2188,103,1463,127],[2188,105,1463,129],[2188,109,1463,133],[2188,110,1463,134],[2189,12,1464,12],[2189,13,1464,13],[2190,12,1464,13],[2190,16,1464,13,"_yield17"],[2190,24,1464,13],[2190,27,1464,13,"_slicedToArray"],[2190,41,1464,13],[2190,42,1464,13,"_yield16"],[2190,50,1464,13],[2191,12,1463,13,"codeChallenge"],[2191,25,1463,26],[2191,28,1463,26,"_yield17"],[2191,36,1463,26],[2192,12,1463,28,"codeChallengeMethod"],[2192,31,1463,47],[2192,34,1463,47,"_yield17"],[2192,42,1463,47],[2193,10,1465,8],[2194,10,1466,8],[2194,14,1466,12],[2195,12,1467,12],[2195,25,1467,25],[2195,26,1467,26],[2195,27,1467,27],[2195,29,1467,29,"fetch_1"],[2195,36,1467,36],[2195,37,1467,37,"_request"],[2195,45,1467,45],[2195,47,1467,47],[2195,51,1467,51],[2195,52,1467,52,"fetch"],[2195,57,1467,57],[2195,59,1467,59],[2195,65,1467,65],[2195,67,1467,67],[2195,70,1467,70],[2195,74,1467,74],[2195,75,1467,75,"url"],[2195,78,1467,78],[2195,88,1467,88],[2195,90,1467,90],[2196,14,1468,16,"body"],[2196,18,1468,20],[2196,20,1468,22],[2197,16,1469,20,"email"],[2197,21,1469,25],[2197,23,1469,20,"email"],[2197,28,1469,25],[2198,16,1470,20,"code_challenge"],[2198,30,1470,34],[2198,32,1470,36,"codeChallenge"],[2198,45,1470,49],[2199,16,1471,20,"code_challenge_method"],[2199,37,1471,41],[2199,39,1471,43,"codeChallengeMethod"],[2199,58,1471,62],[2200,16,1472,20,"gotrue_meta_security"],[2200,36,1472,40],[2200,38,1472,42],[2201,18,1472,44,"captcha_token"],[2201,31,1472,57],[2201,33,1472,59,"options"],[2201,40,1472,66],[2201,41,1472,67,"captchaToken"],[2202,16,1472,80],[2203,14,1473,16],[2203,15,1473,17],[2204,14,1474,16,"headers"],[2204,21,1474,23],[2204,23,1474,25],[2204,27,1474,29],[2204,28,1474,30,"headers"],[2204,35,1474,37],[2205,14,1475,16,"redirectTo"],[2205,24,1475,26],[2205,26,1475,28,"options"],[2205,33,1475,35],[2205,34,1475,36,"redirectTo"],[2206,12,1476,12],[2206,13,1476,13],[2206,14,1476,14],[2207,10,1477,8],[2207,11,1477,9],[2207,12,1478,8],[2207,19,1478,15,"error"],[2207,24,1478,20],[2207,26,1478,22],[2208,12,1479,12],[2208,16,1479,16],[2208,17,1479,17],[2208,18,1479,18],[2208,20,1479,20,"errors_1"],[2208,28,1479,28],[2208,29,1479,29,"isAuthError"],[2208,40,1479,40],[2208,42,1479,42,"error"],[2208,47,1479,47],[2208,48,1479,48],[2208,50,1479,50],[2209,14,1480,16],[2209,21,1480,23],[2210,16,1480,25,"data"],[2210,20,1480,29],[2210,22,1480,31],[2210,26,1480,35],[2211,16,1480,37,"error"],[2211,21,1480,42],[2211,23,1480,37,"error"],[2212,14,1480,43],[2212,15,1480,44],[2213,12,1481,12],[2214,12,1482,12],[2214,18,1482,18,"error"],[2214,23,1482,23],[2215,10,1483,8],[2216,8,1484,4],[2216,9,1484,5],[2217,8,1484,5],[2217,17,1458,10,"resetPasswordForEmail"],[2217,38,1458,31,"resetPasswordForEmail"],[2217,39,1458,31,"_x38"],[2217,43,1458,31],[2218,10,1458,31],[2218,17,1458,31,"_resetPasswordForEmail"],[2218,39,1458,31],[2218,40,1458,31,"apply"],[2218,45,1458,31],[2218,52,1458,31,"arguments"],[2218,61,1458,31],[2219,8,1458,31],[2220,8,1458,31],[2220,15,1458,10,"resetPasswordForEmail"],[2220,36,1458,31],[2221,6,1458,31],[2222,6,1485,4],[2223,0,1486,0],[2224,0,1487,0],[2225,6,1485,4],[2226,4,1485,4],[2227,6,1485,4,"key"],[2227,9,1485,4],[2228,6,1485,4,"value"],[2228,11,1485,4],[2229,8,1485,4],[2229,12,1485,4,"_getUserIdentities"],[2229,30,1485,4],[2229,33,1485,4,"_asyncToGenerator"],[2229,50,1485,4],[2229,51,1488,4],[2229,64,1488,30],[2230,10,1489,8],[2230,14,1489,12,"_a"],[2230,16,1489,14],[2231,10,1490,8],[2231,14,1490,12],[2232,12,1491,12],[2232,16,1491,12,"_yield$this$getUser"],[2232,35,1491,12],[2232,44,1491,42],[2232,48,1491,46],[2232,49,1491,47,"getUser"],[2232,56,1491,54],[2232,57,1491,55],[2232,58,1491,56],[2233,14,1491,20,"data"],[2233,18,1491,24],[2233,21,1491,24,"_yield$this$getUser"],[2233,40,1491,24],[2233,41,1491,20,"data"],[2233,45,1491,24],[2234,14,1491,26,"error"],[2234,19,1491,31],[2234,22,1491,31,"_yield$this$getUser"],[2234,41,1491,31],[2234,42,1491,26,"error"],[2234,47,1491,31],[2235,12,1492,12],[2235,16,1492,16,"error"],[2235,21,1492,21],[2235,23,1493,16],[2235,29,1493,22,"error"],[2235,34,1493,27],[2236,12,1494,12],[2236,19,1494,19],[2237,14,1494,21,"data"],[2237,18,1494,25],[2237,20,1494,27],[2238,16,1494,29,"identities"],[2238,26,1494,39],[2238,28,1494,41],[2238,29,1494,42,"_a"],[2238,31,1494,44],[2238,34,1494,47,"data"],[2238,38,1494,51],[2238,39,1494,52,"user"],[2238,43,1494,56],[2238,44,1494,57,"identities"],[2238,54,1494,67],[2238,60,1494,73],[2238,64,1494,77],[2238,68,1494,81,"_a"],[2238,70,1494,83],[2238,75,1494,88],[2238,80,1494,93],[2238,81,1494,94],[2238,84,1494,97,"_a"],[2238,86,1494,99],[2238,89,1494,102],[2239,14,1494,105],[2239,15,1494,106],[2240,14,1494,108,"error"],[2240,19,1494,113],[2240,21,1494,115],[2241,12,1494,120],[2241,13,1494,121],[2242,10,1495,8],[2242,11,1495,9],[2242,12,1496,8],[2242,19,1496,15,"error"],[2242,24,1496,20],[2242,26,1496,22],[2243,12,1497,12],[2243,16,1497,16],[2243,17,1497,17],[2243,18,1497,18],[2243,20,1497,20,"errors_1"],[2243,28,1497,28],[2243,29,1497,29,"isAuthError"],[2243,40,1497,40],[2243,42,1497,42,"error"],[2243,47,1497,47],[2243,48,1497,48],[2243,50,1497,50],[2244,14,1498,16],[2244,21,1498,23],[2245,16,1498,25,"data"],[2245,20,1498,29],[2245,22,1498,31],[2245,26,1498,35],[2246,16,1498,37,"error"],[2246,21,1498,42],[2246,23,1498,37,"error"],[2247,14,1498,43],[2247,15,1498,44],[2248,12,1499,12],[2249,12,1500,12],[2249,18,1500,18,"error"],[2249,23,1500,23],[2250,10,1501,8],[2251,8,1502,4],[2251,9,1502,5],[2252,8,1502,5],[2252,17,1488,10,"getUserIdentities"],[2252,34,1488,27,"getUserIdentities"],[2252,35,1488,27],[2253,10,1488,27],[2253,17,1488,27,"_getUserIdentities"],[2253,35,1488,27],[2253,36,1488,27,"apply"],[2253,41,1488,27],[2253,48,1488,27,"arguments"],[2253,57,1488,27],[2254,8,1488,27],[2255,8,1488,27],[2255,15,1488,10,"getUserIdentities"],[2255,32,1488,27],[2256,6,1488,27],[2257,6,1503,4],[2258,0,1504,0],[2259,0,1505,0],[2260,0,1506,0],[2261,6,1503,4],[2262,4,1503,4],[2263,6,1503,4,"key"],[2263,9,1503,4],[2264,6,1503,4,"value"],[2264,11,1503,4],[2265,8,1503,4],[2265,12,1503,4,"_linkIdentity"],[2265,25,1503,4],[2265,28,1503,4,"_asyncToGenerator"],[2265,45,1503,4],[2265,46,1507,4],[2265,57,1507,23,"credentials"],[2265,68,1507,34],[2265,70,1507,36],[2266,10,1507,36],[2266,14,1507,36,"_this19"],[2266,21,1507,36],[2267,10,1508,8],[2267,14,1508,12,"_a"],[2267,16,1508,14],[2268,10,1509,8],[2268,14,1509,12],[2269,12,1510,12],[2269,16,1510,12,"_yield$this$_useSessi"],[2269,37,1510,12],[2269,46,1510,42],[2269,50,1510,46],[2269,51,1510,47,"_useSession"],[2269,62,1510,58],[2270,16,1510,58],[2270,20,1510,58,"_ref26"],[2270,26,1510,58],[2270,29,1510,58,"_asyncToGenerator"],[2270,46,1510,58],[2270,47,1510,59],[2270,58,1510,66,"result"],[2270,64,1510,72],[2270,66,1510,77],[2271,18,1511,16],[2271,22,1511,20,"_a"],[2271,24,1511,22],[2271,26,1511,24,"_b"],[2271,28,1511,26],[2271,30,1511,28,"_c"],[2271,32,1511,30],[2271,34,1511,32,"_d"],[2271,36,1511,34],[2271,38,1511,36,"_e"],[2271,40,1511,38],[2272,18,1512,16],[2272,22,1512,24,"data"],[2272,26,1512,28],[2272,29,1512,40,"result"],[2272,35,1512,46],[2272,36,1512,24,"data"],[2272,40,1512,28],[2273,20,1512,30,"error"],[2273,25,1512,35],[2273,28,1512,40,"result"],[2273,34,1512,46],[2273,35,1512,30,"error"],[2273,40,1512,35],[2274,18,1513,16],[2274,22,1513,20,"error"],[2274,27,1513,25],[2274,29,1514,20],[2274,35,1514,26,"error"],[2274,40,1514,31],[2275,18,1515,16],[2275,22,1515,22,"url"],[2275,25,1515,25],[2275,34,1515,34,"_this19"],[2275,41,1515,38],[2275,42,1515,39,"_getUrlForProvider"],[2275,60,1515,57],[2275,61,1515,58],[2275,64,1515,61,"_this19"],[2275,71,1515,65],[2275,72,1515,66,"url"],[2275,75,1515,69],[2275,103,1515,97],[2275,105,1515,99,"credentials"],[2275,116,1515,110],[2275,117,1515,111,"provider"],[2275,125,1515,119],[2275,127,1515,121],[2276,20,1516,20,"redirectTo"],[2276,30,1516,30],[2276,32,1516,32],[2276,33,1516,33,"_a"],[2276,35,1516,35],[2276,38,1516,38,"credentials"],[2276,49,1516,49],[2276,50,1516,50,"options"],[2276,57,1516,57],[2276,63,1516,63],[2276,67,1516,67],[2276,71,1516,71,"_a"],[2276,73,1516,73],[2276,78,1516,78],[2276,83,1516,83],[2276,84,1516,84],[2276,87,1516,87],[2276,92,1516,92],[2276,93,1516,93],[2276,96,1516,96,"_a"],[2276,98,1516,98],[2276,99,1516,99,"redirectTo"],[2276,109,1516,109],[2277,20,1517,20,"scopes"],[2277,26,1517,26],[2277,28,1517,28],[2277,29,1517,29,"_b"],[2277,31,1517,31],[2277,34,1517,34,"credentials"],[2277,45,1517,45],[2277,46,1517,46,"options"],[2277,53,1517,53],[2277,59,1517,59],[2277,63,1517,63],[2277,67,1517,67,"_b"],[2277,69,1517,69],[2277,74,1517,74],[2277,79,1517,79],[2277,80,1517,80],[2277,83,1517,83],[2277,88,1517,88],[2277,89,1517,89],[2277,92,1517,92,"_b"],[2277,94,1517,94],[2277,95,1517,95,"scopes"],[2277,101,1517,101],[2278,20,1518,20,"queryParams"],[2278,31,1518,31],[2278,33,1518,33],[2278,34,1518,34,"_c"],[2278,36,1518,36],[2278,39,1518,39,"credentials"],[2278,50,1518,50],[2278,51,1518,51,"options"],[2278,58,1518,58],[2278,64,1518,64],[2278,68,1518,68],[2278,72,1518,72,"_c"],[2278,74,1518,74],[2278,79,1518,79],[2278,84,1518,84],[2278,85,1518,85],[2278,88,1518,88],[2278,93,1518,93],[2278,94,1518,94],[2278,97,1518,97,"_c"],[2278,99,1518,99],[2278,100,1518,100,"queryParams"],[2278,111,1518,111],[2279,20,1519,20,"skipBrowserRedirect"],[2279,39,1519,39],[2279,41,1519,41],[2280,18,1520,16],[2280,19,1520,17],[2280,20,1520,18],[2281,18,1521,16],[2281,31,1521,29],[2281,32,1521,30],[2281,33,1521,31],[2281,35,1521,33,"fetch_1"],[2281,42,1521,40],[2281,43,1521,41,"_request"],[2281,51,1521,49],[2281,53,1521,51,"_this19"],[2281,60,1521,55],[2281,61,1521,56,"fetch"],[2281,66,1521,61],[2281,68,1521,63],[2281,73,1521,68],[2281,75,1521,70,"url"],[2281,78,1521,73],[2281,80,1521,75],[2282,20,1522,20,"headers"],[2282,27,1522,27],[2282,29,1522,29,"_this19"],[2282,36,1522,33],[2282,37,1522,34,"headers"],[2282,44,1522,41],[2283,20,1523,20,"jwt"],[2283,23,1523,23],[2283,25,1523,25],[2283,26,1523,26,"_e"],[2283,28,1523,28],[2283,31,1523,31],[2283,32,1523,32,"_d"],[2283,34,1523,34],[2283,37,1523,37,"data"],[2283,41,1523,41],[2283,42,1523,42,"session"],[2283,49,1523,49],[2283,55,1523,55],[2283,59,1523,59],[2283,63,1523,63,"_d"],[2283,65,1523,65],[2283,70,1523,70],[2283,75,1523,75],[2283,76,1523,76],[2283,79,1523,79],[2283,84,1523,84],[2283,85,1523,85],[2283,88,1523,88,"_d"],[2283,90,1523,90],[2283,91,1523,91,"access_token"],[2283,103,1523,103],[2283,109,1523,109],[2283,113,1523,113],[2283,117,1523,117,"_e"],[2283,119,1523,119],[2283,124,1523,124],[2283,129,1523,129],[2283,130,1523,130],[2283,133,1523,133,"_e"],[2283,135,1523,135],[2283,138,1523,138,"undefined"],[2284,18,1524,16],[2284,19,1524,17],[2284,20,1524,18],[2285,16,1525,12],[2285,17,1525,13],[2286,16,1525,13],[2286,33,1525,13,"_x40"],[2286,37,1525,13],[2287,18,1525,13],[2287,25,1525,13,"_ref26"],[2287,31,1525,13],[2287,32,1525,13,"apply"],[2287,37,1525,13],[2287,44,1525,13,"arguments"],[2287,53,1525,13],[2288,16,1525,13],[2289,14,1525,13],[2289,18,1525,14],[2290,14,1510,20,"data"],[2290,18,1510,24],[2290,21,1510,24,"_yield$this$_useSessi"],[2290,42,1510,24],[2290,43,1510,20,"data"],[2290,47,1510,24],[2291,14,1510,26,"error"],[2291,19,1510,31],[2291,22,1510,31,"_yield$this$_useSessi"],[2291,43,1510,31],[2291,44,1510,26,"error"],[2291,49,1510,31],[2292,12,1526,12],[2292,16,1526,16,"error"],[2292,21,1526,21],[2292,23,1527,16],[2292,29,1527,22,"error"],[2292,34,1527,27],[2293,12,1528,12],[2293,16,1528,16],[2293,17,1528,17],[2293,18,1528,18],[2293,20,1528,20,"helpers_1"],[2293,29,1528,29],[2293,30,1528,30,"isBrowser"],[2293,39,1528,39],[2293,41,1528,41],[2293,42,1528,42],[2293,46,1528,46],[2293,48,1528,48],[2293,49,1528,49,"_a"],[2293,51,1528,51],[2293,54,1528,54,"credentials"],[2293,65,1528,65],[2293,66,1528,66,"options"],[2293,73,1528,73],[2293,79,1528,79],[2293,83,1528,83],[2293,87,1528,87,"_a"],[2293,89,1528,89],[2293,94,1528,94],[2293,99,1528,99],[2293,100,1528,100],[2293,103,1528,103],[2293,108,1528,108],[2293,109,1528,109],[2293,112,1528,112,"_a"],[2293,114,1528,114],[2293,115,1528,115,"skipBrowserRedirect"],[2293,134,1528,134],[2293,135,1528,135],[2293,137,1528,137],[2294,14,1529,16,"window"],[2294,20,1529,22],[2294,21,1529,23,"location"],[2294,29,1529,31],[2294,30,1529,32,"assign"],[2294,36,1529,38],[2294,37,1529,39,"data"],[2294,41,1529,43],[2294,46,1529,48],[2294,50,1529,52],[2294,54,1529,56,"data"],[2294,58,1529,60],[2294,63,1529,65],[2294,68,1529,70],[2294,69,1529,71],[2294,72,1529,74],[2294,77,1529,79],[2294,78,1529,80],[2294,81,1529,83,"data"],[2294,85,1529,87],[2294,86,1529,88,"url"],[2294,89,1529,91],[2294,90,1529,92],[2295,12,1530,12],[2296,12,1531,12],[2296,19,1531,19],[2297,14,1531,21,"data"],[2297,18,1531,25],[2297,20,1531,27],[2298,16,1531,29,"provider"],[2298,24,1531,37],[2298,26,1531,39,"credentials"],[2298,37,1531,50],[2298,38,1531,51,"provider"],[2298,46,1531,59],[2299,16,1531,61,"url"],[2299,19,1531,64],[2299,21,1531,66,"data"],[2299,25,1531,70],[2299,30,1531,75],[2299,34,1531,79],[2299,38,1531,83,"data"],[2299,42,1531,87],[2299,47,1531,92],[2299,52,1531,97],[2299,53,1531,98],[2299,56,1531,101],[2299,61,1531,106],[2299,62,1531,107],[2299,65,1531,110,"data"],[2299,69,1531,114],[2299,70,1531,115,"url"],[2300,14,1531,119],[2300,15,1531,120],[2301,14,1531,122,"error"],[2301,19,1531,127],[2301,21,1531,129],[2302,12,1531,134],[2302,13,1531,135],[2303,10,1532,8],[2303,11,1532,9],[2303,12,1533,8],[2303,19,1533,15,"error"],[2303,24,1533,20],[2303,26,1533,22],[2304,12,1534,12],[2304,16,1534,16],[2304,17,1534,17],[2304,18,1534,18],[2304,20,1534,20,"errors_1"],[2304,28,1534,28],[2304,29,1534,29,"isAuthError"],[2304,40,1534,40],[2304,42,1534,42,"error"],[2304,47,1534,47],[2304,48,1534,48],[2304,50,1534,50],[2305,14,1535,16],[2305,21,1535,23],[2306,16,1535,25,"data"],[2306,20,1535,29],[2306,22,1535,31],[2307,18,1535,33,"provider"],[2307,26,1535,41],[2307,28,1535,43,"credentials"],[2307,39,1535,54],[2307,40,1535,55,"provider"],[2307,48,1535,63],[2308,18,1535,65,"url"],[2308,21,1535,68],[2308,23,1535,70],[2309,16,1535,75],[2309,17,1535,76],[2310,16,1535,78,"error"],[2310,21,1535,83],[2310,23,1535,78,"error"],[2311,14,1535,84],[2311,15,1535,85],[2312,12,1536,12],[2313,12,1537,12],[2313,18,1537,18,"error"],[2313,23,1537,23],[2314,10,1538,8],[2315,8,1539,4],[2315,9,1539,5],[2316,8,1539,5],[2316,17,1507,10,"linkIdentity"],[2316,29,1507,22,"linkIdentity"],[2316,30,1507,22,"_x39"],[2316,34,1507,22],[2317,10,1507,22],[2317,17,1507,22,"_linkIdentity"],[2317,30,1507,22],[2317,31,1507,22,"apply"],[2317,36,1507,22],[2317,43,1507,22,"arguments"],[2317,52,1507,22],[2318,8,1507,22],[2319,8,1507,22],[2319,15,1507,10,"linkIdentity"],[2319,27,1507,22],[2320,6,1507,22],[2321,6,1540,4],[2322,0,1541,0],[2323,0,1542,0],[2324,6,1540,4],[2325,4,1540,4],[2326,6,1540,4,"key"],[2326,9,1540,4],[2327,6,1540,4,"value"],[2327,11,1540,4],[2328,8,1540,4],[2328,12,1540,4,"_unlinkIdentity"],[2328,27,1540,4],[2328,30,1540,4,"_asyncToGenerator"],[2328,47,1540,4],[2328,48,1543,4],[2328,59,1543,25,"identity"],[2328,67,1543,33],[2328,69,1543,35],[2329,10,1543,35],[2329,14,1543,35,"_this20"],[2329,21,1543,35],[2330,10,1544,8],[2330,14,1544,12],[2331,12,1545,12],[2331,25,1545,25],[2331,29,1545,29],[2331,30,1545,30,"_useSession"],[2331,41,1545,41],[2332,14,1545,41],[2332,18,1545,41,"_ref27"],[2332,24,1545,41],[2332,27,1545,41,"_asyncToGenerator"],[2332,44,1545,41],[2332,45,1545,42],[2332,56,1545,49,"result"],[2332,62,1545,55],[2332,64,1545,60],[2333,16,1546,16],[2333,20,1546,20,"_a"],[2333,22,1546,22],[2333,24,1546,24,"_b"],[2333,26,1546,26],[2334,16,1547,16],[2334,20,1547,24,"data"],[2334,24,1547,28],[2334,27,1547,40,"result"],[2334,33,1547,46],[2334,34,1547,24,"data"],[2334,38,1547,28],[2335,18,1547,30,"error"],[2335,23,1547,35],[2335,26,1547,40,"result"],[2335,32,1547,46],[2335,33,1547,30,"error"],[2335,38,1547,35],[2336,16,1548,16],[2336,20,1548,20,"error"],[2336,25,1548,25],[2336,27,1548,27],[2337,18,1549,20],[2337,24,1549,26,"error"],[2337,29,1549,31],[2338,16,1550,16],[2339,16,1551,16],[2339,29,1551,29],[2339,30,1551,30],[2339,31,1551,31],[2339,33,1551,33,"fetch_1"],[2339,40,1551,40],[2339,41,1551,41,"_request"],[2339,49,1551,49],[2339,51,1551,51,"_this20"],[2339,58,1551,55],[2339,59,1551,56,"fetch"],[2339,64,1551,61],[2339,66,1551,63],[2339,74,1551,71],[2339,76,1551,73],[2339,79,1551,76,"_this20"],[2339,86,1551,80],[2339,87,1551,81,"url"],[2339,90,1551,84],[2339,110,1551,104,"identity"],[2339,118,1551,112],[2339,119,1551,113,"identity_id"],[2339,130,1551,124],[2339,132,1551,126],[2339,134,1551,128],[2340,18,1552,20,"headers"],[2340,25,1552,27],[2340,27,1552,29,"_this20"],[2340,34,1552,33],[2340,35,1552,34,"headers"],[2340,42,1552,41],[2341,18,1553,20,"jwt"],[2341,21,1553,23],[2341,23,1553,25],[2341,24,1553,26,"_b"],[2341,26,1553,28],[2341,29,1553,31],[2341,30,1553,32,"_a"],[2341,32,1553,34],[2341,35,1553,37,"data"],[2341,39,1553,41],[2341,40,1553,42,"session"],[2341,47,1553,49],[2341,53,1553,55],[2341,57,1553,59],[2341,61,1553,63,"_a"],[2341,63,1553,65],[2341,68,1553,70],[2341,73,1553,75],[2341,74,1553,76],[2341,77,1553,79],[2341,82,1553,84],[2341,83,1553,85],[2341,86,1553,88,"_a"],[2341,88,1553,90],[2341,89,1553,91,"access_token"],[2341,101,1553,103],[2341,107,1553,109],[2341,111,1553,113],[2341,115,1553,117,"_b"],[2341,117,1553,119],[2341,122,1553,124],[2341,127,1553,129],[2341,128,1553,130],[2341,131,1553,133,"_b"],[2341,133,1553,135],[2341,136,1553,138,"undefined"],[2342,16,1554,16],[2342,17,1554,17],[2342,18,1554,18],[2343,14,1555,12],[2343,15,1555,13],[2344,14,1555,13],[2344,31,1555,13,"_x42"],[2344,35,1555,13],[2345,16,1555,13],[2345,23,1555,13,"_ref27"],[2345,29,1555,13],[2345,30,1555,13,"apply"],[2345,35,1555,13],[2345,42,1555,13,"arguments"],[2345,51,1555,13],[2346,14,1555,13],[2347,12,1555,13],[2347,16,1555,14],[2348,10,1556,8],[2348,11,1556,9],[2348,12,1557,8],[2348,19,1557,15,"error"],[2348,24,1557,20],[2348,26,1557,22],[2349,12,1558,12],[2349,16,1558,16],[2349,17,1558,17],[2349,18,1558,18],[2349,20,1558,20,"errors_1"],[2349,28,1558,28],[2349,29,1558,29,"isAuthError"],[2349,40,1558,40],[2349,42,1558,42,"error"],[2349,47,1558,47],[2349,48,1558,48],[2349,50,1558,50],[2350,14,1559,16],[2350,21,1559,23],[2351,16,1559,25,"data"],[2351,20,1559,29],[2351,22,1559,31],[2351,26,1559,35],[2352,16,1559,37,"error"],[2352,21,1559,42],[2352,23,1559,37,"error"],[2353,14,1559,43],[2353,15,1559,44],[2354,12,1560,12],[2355,12,1561,12],[2355,18,1561,18,"error"],[2355,23,1561,23],[2356,10,1562,8],[2357,8,1563,4],[2357,9,1563,5],[2358,8,1563,5],[2358,17,1543,10,"unlinkIdentity"],[2358,31,1543,24,"unlinkIdentity"],[2358,32,1543,24,"_x41"],[2358,36,1543,24],[2359,10,1543,24],[2359,17,1543,24,"_unlinkIdentity"],[2359,32,1543,24],[2359,33,1543,24,"apply"],[2359,38,1543,24],[2359,45,1543,24,"arguments"],[2359,54,1543,24],[2360,8,1543,24],[2361,8,1543,24],[2361,15,1543,10,"unlinkIdentity"],[2361,29,1543,24],[2362,6,1543,24],[2363,6,1564,4],[2364,0,1565,0],[2365,0,1566,0],[2366,0,1567,0],[2367,6,1564,4],[2368,4,1564,4],[2369,6,1564,4,"key"],[2369,9,1564,4],[2370,6,1564,4,"value"],[2370,11,1564,4],[2371,8,1564,4],[2371,12,1564,4,"_refreshAccessToken2"],[2371,32,1564,4],[2371,35,1564,4,"_asyncToGenerator"],[2371,52,1564,4],[2371,53,1568,4],[2371,64,1568,30,"refreshToken"],[2371,76,1568,42],[2371,78,1568,44],[2372,10,1568,44],[2372,14,1568,44,"_this21"],[2372,21,1568,44],[2373,10,1569,8],[2373,14,1569,14,"debugName"],[2373,23,1569,23],[2373,26,1569,26],[2373,50,1569,50,"refreshToken"],[2373,62,1569,62],[2373,63,1569,63,"substring"],[2373,72,1569,72],[2373,73,1569,73],[2373,74,1569,74],[2373,76,1569,76],[2373,77,1569,77],[2373,78,1569,78],[2373,84,1569,84],[2374,10,1570,8],[2374,14,1570,12],[2374,15,1570,13,"_debug"],[2374,21,1570,19],[2374,22,1570,20,"debugName"],[2374,31,1570,29],[2374,33,1570,31],[2374,40,1570,38],[2374,41,1570,39],[2375,10,1571,8],[2375,14,1571,12],[2376,12,1572,12],[2376,16,1572,18,"startedAt"],[2376,25,1572,27],[2376,28,1572,30,"Date"],[2376,32,1572,34],[2376,33,1572,35,"now"],[2376,36,1572,38],[2376,37,1572,39],[2376,38,1572,40],[2377,12,1573,12],[2378,12,1574,12],[2378,25,1574,25],[2378,26,1574,26],[2378,27,1574,27],[2378,29,1574,29,"helpers_1"],[2378,38,1574,38],[2378,39,1574,39,"retryable"],[2378,48,1574,48],[2379,14,1574,48],[2379,18,1574,48,"_ref28"],[2379,24,1574,48],[2379,27,1574,48,"_asyncToGenerator"],[2379,44,1574,48],[2379,45,1574,50],[2379,56,1574,57,"attempt"],[2379,63,1574,64],[2379,65,1574,69],[2380,16,1575,16],[2380,20,1575,20,"attempt"],[2380,27,1575,27],[2380,30,1575,30],[2380,31,1575,31],[2380,33,1575,33],[2381,18,1576,20],[2381,24,1576,26],[2381,25,1576,27],[2381,26,1576,28],[2381,28,1576,30,"helpers_1"],[2381,37,1576,39],[2381,38,1576,40,"sleep"],[2381,43,1576,45],[2381,45,1576,47],[2381,48,1576,50],[2381,51,1576,53,"Math"],[2381,55,1576,57],[2381,56,1576,58,"pow"],[2381,59,1576,61],[2381,60,1576,62],[2381,61,1576,63],[2381,63,1576,65,"attempt"],[2381,70,1576,72],[2381,73,1576,75],[2381,74,1576,76],[2381,75,1576,77],[2381,76,1576,78],[2381,77,1576,79],[2381,78,1576,80],[2382,16,1577,16],[2383,16,1578,16,"_this21"],[2383,23,1578,20],[2383,24,1578,21,"_debug"],[2383,30,1578,27],[2383,31,1578,28,"debugName"],[2383,40,1578,37],[2383,42,1578,39],[2383,62,1578,59],[2383,64,1578,61,"attempt"],[2383,71,1578,68],[2383,72,1578,69],[2384,16,1579,16],[2384,29,1579,29],[2384,30,1579,30],[2384,31,1579,31],[2384,33,1579,33,"fetch_1"],[2384,40,1579,40],[2384,41,1579,41,"_request"],[2384,49,1579,49],[2384,51,1579,51,"_this21"],[2384,58,1579,55],[2384,59,1579,56,"fetch"],[2384,64,1579,61],[2384,66,1579,63],[2384,72,1579,69],[2384,74,1579,71],[2384,77,1579,74,"_this21"],[2384,84,1579,78],[2384,85,1579,79,"url"],[2384,88,1579,82],[2384,121,1579,115],[2384,123,1579,117],[2385,18,1580,20,"body"],[2385,22,1580,24],[2385,24,1580,26],[2386,20,1580,28,"refresh_token"],[2386,33,1580,41],[2386,35,1580,43,"refreshToken"],[2387,18,1580,56],[2387,19,1580,57],[2388,18,1581,20,"headers"],[2388,25,1581,27],[2388,27,1581,29,"_this21"],[2388,34,1581,33],[2388,35,1581,34,"headers"],[2388,42,1581,41],[2389,18,1582,20,"xform"],[2389,23,1582,25],[2389,25,1582,27,"fetch_1"],[2389,32,1582,34],[2389,33,1582,35,"_sessionResponse"],[2390,16,1583,16],[2390,17,1583,17],[2390,18,1583,18],[2391,14,1584,12],[2391,15,1584,13],[2392,14,1584,13],[2392,31,1584,13,"_x44"],[2392,35,1584,13],[2393,16,1584,13],[2393,23,1584,13,"_ref28"],[2393,29,1584,13],[2393,30,1584,13,"apply"],[2393,35,1584,13],[2393,42,1584,13,"arguments"],[2393,51,1584,13],[2394,14,1584,13],[2395,12,1584,13],[2395,17,1584,15],[2395,27,1584,16,"attempt"],[2395,34,1584,23],[2395,36,1584,25,"error"],[2395,41,1584,30],[2395,43,1584,35],[2396,14,1585,16],[2396,18,1585,22,"nextBackOffInterval"],[2396,37,1585,41],[2396,40,1585,44],[2396,43,1585,47],[2396,46,1585,50,"Math"],[2396,50,1585,54],[2396,51,1585,55,"pow"],[2396,54,1585,58],[2396,55,1585,59],[2396,56,1585,60],[2396,58,1585,62,"attempt"],[2396,65,1585,69],[2396,66,1585,70],[2397,14,1586,16],[2397,21,1586,24,"error"],[2397,26,1586,29],[2397,30,1587,20],[2397,31,1587,21],[2397,32,1587,22],[2397,34,1587,24,"errors_1"],[2397,42,1587,32],[2397,43,1587,33,"isAuthRetryableFetchError"],[2397,68,1587,58],[2397,70,1587,60,"error"],[2397,75,1587,65],[2397,76,1587,66],[2398,14,1588,20],[2399,14,1589,20,"Date"],[2399,18,1589,24],[2399,19,1589,25,"now"],[2399,22,1589,28],[2399,23,1589,29],[2399,24,1589,30],[2399,27,1589,33,"nextBackOffInterval"],[2399,46,1589,52],[2399,49,1589,55,"startedAt"],[2399,58,1589,64],[2399,61,1589,67,"constants_1"],[2399,72,1589,78],[2399,73,1589,79,"AUTO_REFRESH_TICK_DURATION_MS"],[2399,102,1589,108],[2400,12,1590,12],[2400,13,1590,13],[2400,14,1590,14],[2401,10,1591,8],[2401,11,1591,9],[2401,12,1592,8],[2401,19,1592,15,"error"],[2401,24,1592,20],[2401,26,1592,22],[2402,12,1593,12],[2402,16,1593,16],[2402,17,1593,17,"_debug"],[2402,23,1593,23],[2402,24,1593,24,"debugName"],[2402,33,1593,33],[2402,35,1593,35],[2402,42,1593,42],[2402,44,1593,44,"error"],[2402,49,1593,49],[2402,50,1593,50],[2403,12,1594,12],[2403,16,1594,16],[2403,17,1594,17],[2403,18,1594,18],[2403,20,1594,20,"errors_1"],[2403,28,1594,28],[2403,29,1594,29,"isAuthError"],[2403,40,1594,40],[2403,42,1594,42,"error"],[2403,47,1594,47],[2403,48,1594,48],[2403,50,1594,50],[2404,14,1595,16],[2404,21,1595,23],[2405,16,1595,25,"data"],[2405,20,1595,29],[2405,22,1595,31],[2406,18,1595,33,"session"],[2406,25,1595,40],[2406,27,1595,42],[2406,31,1595,46],[2407,18,1595,48,"user"],[2407,22,1595,52],[2407,24,1595,54],[2408,16,1595,59],[2408,17,1595,60],[2409,16,1595,62,"error"],[2409,21,1595,67],[2409,23,1595,62,"error"],[2410,14,1595,68],[2410,15,1595,69],[2411,12,1596,12],[2412,12,1597,12],[2412,18,1597,18,"error"],[2412,23,1597,23],[2413,10,1598,8],[2413,11,1598,9],[2413,20,1599,16],[2414,12,1600,12],[2414,16,1600,16],[2414,17,1600,17,"_debug"],[2414,23,1600,23],[2414,24,1600,24,"debugName"],[2414,33,1600,33],[2414,35,1600,35],[2414,40,1600,40],[2414,41,1600,41],[2415,10,1601,8],[2416,8,1602,4],[2416,9,1602,5],[2417,8,1602,5],[2417,17,1568,10,"_refreshAccessToken"],[2417,36,1568,29,"_refreshAccessToken"],[2417,37,1568,29,"_x43"],[2417,41,1568,29],[2418,10,1568,29],[2418,17,1568,29,"_refreshAccessToken2"],[2418,37,1568,29],[2418,38,1568,29,"apply"],[2418,43,1568,29],[2418,50,1568,29,"arguments"],[2418,59,1568,29],[2419,8,1568,29],[2420,8,1568,29],[2420,15,1568,10,"_refreshAccessToken"],[2420,34,1568,29],[2421,6,1568,29],[2422,4,1568,29],[2423,6,1568,29,"key"],[2423,9,1568,29],[2424,6,1568,29,"value"],[2424,11,1568,29],[2424,13,1603,4],[2424,22,1603,4,"_isValidSession"],[2424,37,1603,19,"_isValidSession"],[2424,38,1603,20,"maybeSession"],[2424,50,1603,32],[2424,52,1603,34],[2425,8,1604,8],[2425,12,1604,14,"isValidSession"],[2425,26,1604,28],[2425,29,1604,31],[2425,36,1604,38,"maybeSession"],[2425,48,1604,50],[2425,53,1604,55],[2425,61,1604,63],[2425,65,1605,12,"maybeSession"],[2425,77,1605,24],[2425,82,1605,29],[2425,86,1605,33],[2425,90,1606,12],[2425,104,1606,26],[2425,108,1606,30,"maybeSession"],[2425,120,1606,42],[2425,124,1607,12],[2425,139,1607,27],[2425,143,1607,31,"maybeSession"],[2425,155,1607,43],[2425,159,1608,12],[2425,171,1608,24],[2425,175,1608,28,"maybeSession"],[2425,187,1608,40],[2426,8,1609,8],[2426,15,1609,15,"isValidSession"],[2426,29,1609,29],[2427,6,1610,4],[2428,4,1610,5],[2429,6,1610,5,"key"],[2429,9,1610,5],[2430,6,1610,5,"value"],[2430,11,1610,5],[2431,8,1610,5],[2431,12,1610,5,"_handleProviderSignIn2"],[2431,34,1610,5],[2431,37,1610,5,"_asyncToGenerator"],[2431,54,1610,5],[2431,55,1611,4],[2431,66,1611,32,"provider"],[2431,74,1611,40],[2431,76,1611,42,"options"],[2431,83,1611,49],[2431,85,1611,51],[2432,10,1612,8],[2432,14,1612,14,"url"],[2432,17,1612,17],[2432,26,1612,26],[2432,30,1612,30],[2432,31,1612,31,"_getUrlForProvider"],[2432,49,1612,49],[2432,50,1612,50],[2432,53,1612,53],[2432,57,1612,57],[2432,58,1612,58,"url"],[2432,61,1612,61],[2432,73,1612,73],[2432,75,1612,75,"provider"],[2432,83,1612,83],[2432,85,1612,85],[2433,12,1613,12,"redirectTo"],[2433,22,1613,22],[2433,24,1613,24,"options"],[2433,31,1613,31],[2433,32,1613,32,"redirectTo"],[2433,42,1613,42],[2434,12,1614,12,"scopes"],[2434,18,1614,18],[2434,20,1614,20,"options"],[2434,27,1614,27],[2434,28,1614,28,"scopes"],[2434,34,1614,34],[2435,12,1615,12,"queryParams"],[2435,23,1615,23],[2435,25,1615,25,"options"],[2435,32,1615,32],[2435,33,1615,33,"queryParams"],[2436,10,1616,8],[2436,11,1616,9],[2436,12,1616,10],[2437,10,1617,8],[2437,14,1617,12],[2437,15,1617,13,"_debug"],[2437,21,1617,19],[2437,22,1617,20],[2437,48,1617,46],[2437,50,1617,48],[2437,60,1617,58],[2437,62,1617,60,"provider"],[2437,70,1617,68],[2437,72,1617,70],[2437,81,1617,79],[2437,83,1617,81,"options"],[2437,90,1617,88],[2437,92,1617,90],[2437,97,1617,95],[2437,99,1617,97,"url"],[2437,102,1617,100],[2437,103,1617,101],[2438,10,1618,8],[2439,10,1619,8],[2439,14,1619,12],[2439,15,1619,13],[2439,16,1619,14],[2439,18,1619,16,"helpers_1"],[2439,27,1619,25],[2439,28,1619,26,"isBrowser"],[2439,37,1619,35],[2439,39,1619,37],[2439,40,1619,38],[2439,44,1619,42],[2439,45,1619,43,"options"],[2439,52,1619,50],[2439,53,1619,51,"skipBrowserRedirect"],[2439,72,1619,70],[2439,74,1619,72],[2440,12,1620,12,"window"],[2440,18,1620,18],[2440,19,1620,19,"location"],[2440,27,1620,27],[2440,28,1620,28,"assign"],[2440,34,1620,34],[2440,35,1620,35,"url"],[2440,38,1620,38],[2440,39,1620,39],[2441,10,1621,8],[2442,10,1622,8],[2442,17,1622,15],[2443,12,1622,17,"data"],[2443,16,1622,21],[2443,18,1622,23],[2444,14,1622,25,"provider"],[2444,22,1622,33],[2444,24,1622,25,"provider"],[2444,32,1622,33],[2445,14,1622,35,"url"],[2445,17,1622,38],[2445,19,1622,35,"url"],[2446,12,1622,39],[2446,13,1622,40],[2447,12,1622,42,"error"],[2447,17,1622,47],[2447,19,1622,49],[2448,10,1622,54],[2448,11,1622,55],[2449,8,1623,4],[2449,9,1623,5],[2450,8,1623,5],[2450,17,1611,10,"_handleProviderSignIn"],[2450,38,1611,31,"_handleProviderSignIn"],[2450,39,1611,31,"_x45"],[2450,43,1611,31],[2450,45,1611,31,"_x46"],[2450,49,1611,31],[2451,10,1611,31],[2451,17,1611,31,"_handleProviderSignIn2"],[2451,39,1611,31],[2451,40,1611,31,"apply"],[2451,45,1611,31],[2451,52,1611,31,"arguments"],[2451,61,1611,31],[2452,8,1611,31],[2453,8,1611,31],[2453,15,1611,10,"_handleProviderSignIn"],[2453,36,1611,31],[2454,6,1611,31],[2455,6,1624,4],[2456,0,1625,0],[2457,0,1626,0],[2458,0,1627,0],[2459,4,1624,4],[2460,6,1624,4,"key"],[2460,9,1624,4],[2461,6,1624,4,"value"],[2461,11,1624,4],[2462,8,1624,4],[2462,12,1624,4,"_recoverAndRefresh2"],[2462,31,1624,4],[2462,34,1624,4,"_asyncToGenerator"],[2462,51,1624,4],[2462,52,1628,4],[2462,65,1628,31],[2463,10,1629,8],[2463,14,1629,12,"_a"],[2463,16,1629,14],[2463,18,1629,16,"_b"],[2463,20,1629,18],[2464,10,1630,8],[2464,14,1630,14,"debugName"],[2464,23,1630,23],[2464,26,1630,26],[2464,49,1630,49],[2465,10,1631,8],[2465,14,1631,12],[2465,15,1631,13,"_debug"],[2465,21,1631,19],[2465,22,1631,20,"debugName"],[2465,31,1631,29],[2465,33,1631,31],[2465,40,1631,38],[2465,41,1631,39],[2466,10,1632,8],[2466,14,1632,12],[2467,12,1633,12],[2467,16,1633,18,"currentSession"],[2467,30,1633,32],[2467,39,1633,42],[2467,40,1633,43],[2467,41,1633,44],[2467,43,1633,46,"helpers_1"],[2467,52,1633,55],[2467,53,1633,56,"getItemAsync"],[2467,65,1633,68],[2467,67,1633,70],[2467,71,1633,74],[2467,72,1633,75,"storage"],[2467,79,1633,82],[2467,81,1633,84],[2467,85,1633,88],[2467,86,1633,89,"storageKey"],[2467,96,1633,99],[2467,97,1633,101],[2468,12,1634,12],[2468,16,1634,16,"currentSession"],[2468,30,1634,30],[2468,34,1634,34],[2468,38,1634,38],[2468,39,1634,39,"userStorage"],[2468,50,1634,50],[2468,52,1634,52],[2469,14,1635,16],[2469,18,1635,20,"maybeUser"],[2469,27,1635,29],[2469,36,1635,39],[2469,37,1635,40],[2469,38,1635,41],[2469,40,1635,43,"helpers_1"],[2469,49,1635,52],[2469,50,1635,53,"getItemAsync"],[2469,62,1635,65],[2469,64,1635,67],[2469,68,1635,71],[2469,69,1635,72,"userStorage"],[2469,80,1635,83],[2469,82,1635,85],[2469,86,1635,89],[2469,87,1635,90,"storageKey"],[2469,97,1635,100],[2469,100,1635,103],[2469,107,1635,110],[2469,108,1635,112],[2470,14,1636,16],[2470,18,1636,20],[2470,19,1636,21],[2470,23,1636,25],[2470,24,1636,26,"storage"],[2470,31,1636,33],[2470,32,1636,34,"isServer"],[2470,40,1636,42],[2470,44,1636,46,"Object"],[2470,50,1636,52],[2470,51,1636,53,"is"],[2470,53,1636,55],[2470,54,1636,56],[2470,58,1636,60],[2470,59,1636,61,"storage"],[2470,66,1636,68],[2470,68,1636,70],[2470,72,1636,74],[2470,73,1636,75,"userStorage"],[2470,84,1636,86],[2470,85,1636,87],[2470,89,1636,91],[2470,90,1636,92,"maybeUser"],[2470,99,1636,101],[2470,101,1636,103],[2471,16,1637,20],[2472,16,1638,20],[2473,16,1639,20],[2474,16,1640,20],[2475,16,1641,20,"maybeUser"],[2475,25,1641,29],[2475,28,1641,32],[2476,18,1641,34,"user"],[2476,22,1641,38],[2476,24,1641,40,"currentSession"],[2476,38,1641,54],[2476,39,1641,55,"user"],[2477,16,1641,60],[2477,17,1641,61],[2478,16,1642,20],[2478,22,1642,26],[2478,23,1642,27],[2478,24,1642,28],[2478,26,1642,30,"helpers_1"],[2478,35,1642,39],[2478,36,1642,40,"setItemAsync"],[2478,48,1642,52],[2478,50,1642,54],[2478,54,1642,58],[2478,55,1642,59,"userStorage"],[2478,66,1642,70],[2478,68,1642,72],[2478,72,1642,76],[2478,73,1642,77,"storageKey"],[2478,83,1642,87],[2478,86,1642,90],[2478,93,1642,97],[2478,95,1642,99,"maybeUser"],[2478,104,1642,108],[2478,105,1642,109],[2479,14,1643,16],[2480,14,1644,16,"currentSession"],[2480,28,1644,30],[2480,29,1644,31,"user"],[2480,33,1644,35],[2480,36,1644,38],[2480,37,1644,39,"_a"],[2480,39,1644,41],[2480,42,1644,44,"maybeUser"],[2480,51,1644,53],[2480,56,1644,58],[2480,60,1644,62],[2480,64,1644,66,"maybeUser"],[2480,73,1644,75],[2480,78,1644,80],[2480,83,1644,85],[2480,84,1644,86],[2480,87,1644,89],[2480,92,1644,94],[2480,93,1644,95],[2480,96,1644,98,"maybeUser"],[2480,105,1644,107],[2480,106,1644,108,"user"],[2480,110,1644,112],[2480,116,1644,118],[2480,120,1644,122],[2480,124,1644,126,"_a"],[2480,126,1644,128],[2480,131,1644,133],[2480,136,1644,138],[2480,137,1644,139],[2480,140,1644,142,"_a"],[2480,142,1644,144],[2480,145,1644,147],[2480,146,1644,148],[2480,147,1644,149],[2480,149,1644,151,"helpers_1"],[2480,158,1644,160],[2480,159,1644,161,"userNotAvailableProxy"],[2480,180,1644,182],[2480,182,1644,184],[2480,183,1644,185],[2481,12,1645,12],[2481,13,1645,13],[2481,19,1646,17],[2481,23,1646,21,"currentSession"],[2481,37,1646,35],[2481,41,1646,39],[2481,42,1646,40,"currentSession"],[2481,56,1646,54],[2481,57,1646,55,"user"],[2481,61,1646,59],[2481,63,1646,61],[2482,14,1647,16],[2483,14,1648,16],[2484,14,1649,16],[2484,18,1649,20],[2484,19,1649,21,"currentSession"],[2484,33,1649,35],[2484,34,1649,36,"user"],[2484,38,1649,40],[2484,40,1649,42],[2485,16,1650,20],[2486,16,1651,20],[2486,20,1651,26,"separateUser"],[2486,32,1651,38],[2486,41,1651,48],[2486,42,1651,49],[2486,43,1651,50],[2486,45,1651,52,"helpers_1"],[2486,54,1651,61],[2486,55,1651,62,"getItemAsync"],[2486,67,1651,74],[2486,69,1651,76],[2486,73,1651,80],[2486,74,1651,81,"storage"],[2486,81,1651,88],[2486,83,1651,90],[2486,87,1651,94],[2486,88,1651,95,"storageKey"],[2486,98,1651,105],[2486,101,1651,108],[2486,108,1651,115],[2486,109,1651,117],[2487,16,1652,20],[2487,20,1652,24,"separateUser"],[2487,32,1652,36],[2487,37,1652,41,"separateUser"],[2487,49,1652,53],[2487,54,1652,58],[2487,58,1652,62],[2487,62,1652,66,"separateUser"],[2487,74,1652,78],[2487,79,1652,83],[2487,84,1652,88],[2487,85,1652,89],[2487,88,1652,92],[2487,93,1652,97],[2487,94,1652,98],[2487,97,1652,101,"separateUser"],[2487,109,1652,113],[2487,110,1652,114,"user"],[2487,114,1652,118],[2487,115,1652,119],[2487,117,1652,121],[2488,18,1653,24,"currentSession"],[2488,32,1653,38],[2488,33,1653,39,"user"],[2488,37,1653,43],[2488,40,1653,46,"separateUser"],[2488,52,1653,58],[2488,53,1653,59,"user"],[2488,57,1653,63],[2489,18,1654,24],[2489,24,1654,30],[2489,25,1654,31],[2489,26,1654,32],[2489,28,1654,34,"helpers_1"],[2489,37,1654,43],[2489,38,1654,44,"removeItemAsync"],[2489,53,1654,59],[2489,55,1654,61],[2489,59,1654,65],[2489,60,1654,66,"storage"],[2489,67,1654,73],[2489,69,1654,75],[2489,73,1654,79],[2489,74,1654,80,"storageKey"],[2489,84,1654,90],[2489,87,1654,93],[2489,94,1654,100],[2489,95,1654,101],[2490,18,1655,24],[2490,24,1655,30],[2490,25,1655,31],[2490,26,1655,32],[2490,28,1655,34,"helpers_1"],[2490,37,1655,43],[2490,38,1655,44,"setItemAsync"],[2490,50,1655,56],[2490,52,1655,58],[2490,56,1655,62],[2490,57,1655,63,"storage"],[2490,64,1655,70],[2490,66,1655,72],[2490,70,1655,76],[2490,71,1655,77,"storageKey"],[2490,81,1655,87],[2490,83,1655,89,"currentSession"],[2490,97,1655,103],[2490,98,1655,104],[2491,16,1656,20],[2491,17,1656,21],[2491,23,1657,25],[2492,18,1658,24,"currentSession"],[2492,32,1658,38],[2492,33,1658,39,"user"],[2492,37,1658,43],[2492,40,1658,46],[2492,41,1658,47],[2492,42,1658,48],[2492,44,1658,50,"helpers_1"],[2492,53,1658,59],[2492,54,1658,60,"userNotAvailableProxy"],[2492,75,1658,81],[2492,77,1658,83],[2492,78,1658,84],[2493,16,1659,20],[2494,14,1660,16],[2495,12,1661,12],[2496,12,1662,12],[2496,16,1662,16],[2496,17,1662,17,"_debug"],[2496,23,1662,23],[2496,24,1662,24,"debugName"],[2496,33,1662,33],[2496,35,1662,35],[2496,57,1662,57],[2496,59,1662,59,"currentSession"],[2496,73,1662,73],[2496,74,1662,74],[2497,12,1663,12],[2497,16,1663,16],[2497,17,1663,17],[2497,21,1663,21],[2497,22,1663,22,"_isValidSession"],[2497,37,1663,37],[2497,38,1663,38,"currentSession"],[2497,52,1663,52],[2497,53,1663,53],[2497,55,1663,55],[2498,14,1664,16],[2498,18,1664,20],[2498,19,1664,21,"_debug"],[2498,25,1664,27],[2498,26,1664,28,"debugName"],[2498,35,1664,37],[2498,37,1664,39],[2498,59,1664,61],[2498,60,1664,62],[2499,14,1665,16],[2499,18,1665,20,"currentSession"],[2499,32,1665,34],[2499,37,1665,39],[2499,41,1665,43],[2499,43,1665,45],[2500,16,1666,20],[2500,22,1666,26],[2500,26,1666,30],[2500,27,1666,31,"_removeSession"],[2500,41,1666,45],[2500,42,1666,46],[2500,43,1666,47],[2501,14,1667,16],[2502,14,1668,16],[2503,12,1669,12],[2504,12,1670,12],[2504,16,1670,18,"expiresWithMargin"],[2504,33,1670,35],[2504,36,1670,38],[2504,37,1670,39],[2504,38,1670,40,"_b"],[2504,40,1670,42],[2504,43,1670,45,"currentSession"],[2504,57,1670,59],[2504,58,1670,60,"expires_at"],[2504,68,1670,70],[2504,74,1670,76],[2504,78,1670,80],[2504,82,1670,84,"_b"],[2504,84,1670,86],[2504,89,1670,91],[2504,94,1670,96],[2504,95,1670,97],[2504,98,1670,100,"_b"],[2504,100,1670,102],[2504,103,1670,105,"Infinity"],[2504,111,1670,113],[2504,115,1670,117],[2504,119,1670,121],[2504,122,1670,124,"Date"],[2504,126,1670,128],[2504,127,1670,129,"now"],[2504,130,1670,132],[2504,131,1670,133],[2504,132,1670,134],[2504,135,1670,137,"constants_1"],[2504,146,1670,148],[2504,147,1670,149,"EXPIRY_MARGIN_MS"],[2504,163,1670,165],[2505,12,1671,12],[2505,16,1671,16],[2505,17,1671,17,"_debug"],[2505,23,1671,23],[2505,24,1671,24,"debugName"],[2505,33,1671,33],[2505,35,1671,35],[2505,49,1671,49,"expiresWithMargin"],[2505,66,1671,66],[2505,69,1671,69],[2505,71,1671,71],[2505,74,1671,74],[2505,80,1671,80],[2505,107,1671,107,"constants_1"],[2505,118,1671,118],[2505,119,1671,119,"EXPIRY_MARGIN_MS"],[2505,135,1671,135],[2505,138,1671,138],[2505,139,1671,139],[2506,12,1672,12],[2506,16,1672,16,"expiresWithMargin"],[2506,33,1672,33],[2506,35,1672,35],[2507,14,1673,16],[2507,18,1673,20],[2507,22,1673,24],[2507,23,1673,25,"autoRefreshToken"],[2507,39,1673,41],[2507,43,1673,45,"currentSession"],[2507,57,1673,59],[2507,58,1673,60,"refresh_token"],[2507,71,1673,73],[2507,73,1673,75],[2508,16,1674,20],[2508,20,1674,20,"_yield$this$_callRefr3"],[2508,42,1674,20],[2508,51,1674,44],[2508,55,1674,48],[2508,56,1674,49,"_callRefreshToken"],[2508,73,1674,66],[2508,74,1674,67,"currentSession"],[2508,88,1674,81],[2508,89,1674,82,"refresh_token"],[2508,102,1674,95],[2508,103,1674,96],[2509,18,1674,28,"error"],[2509,23,1674,33],[2509,26,1674,33,"_yield$this$_callRefr3"],[2509,48,1674,33],[2509,49,1674,28,"error"],[2509,54,1674,33],[2510,16,1675,20],[2510,20,1675,24,"error"],[2510,25,1675,29],[2510,27,1675,31],[2511,18,1676,24,"console"],[2511,25,1676,31],[2511,26,1676,32,"error"],[2511,31,1676,37],[2511,32,1676,38,"error"],[2511,37,1676,43],[2511,38,1676,44],[2512,18,1677,24],[2512,22,1677,28],[2512,23,1677,29],[2512,24,1677,30],[2512,25,1677,31],[2512,27,1677,33,"errors_1"],[2512,35,1677,41],[2512,36,1677,42,"isAuthRetryableFetchError"],[2512,61,1677,67],[2512,63,1677,69,"error"],[2512,68,1677,74],[2512,69,1677,75],[2512,71,1677,77],[2513,20,1678,28],[2513,24,1678,32],[2513,25,1678,33,"_debug"],[2513,31,1678,39],[2513,32,1678,40,"debugName"],[2513,41,1678,49],[2513,43,1678,51],[2513,108,1678,116],[2513,110,1678,118,"error"],[2513,115,1678,123],[2513,116,1678,124],[2514,20,1679,28],[2514,26,1679,34],[2514,30,1679,38],[2514,31,1679,39,"_removeSession"],[2514,45,1679,53],[2514,46,1679,54],[2514,47,1679,55],[2515,18,1680,24],[2516,16,1681,20],[2517,14,1682,16],[2518,12,1683,12],[2518,13,1683,13],[2518,19,1684,17],[2518,23,1684,21,"currentSession"],[2518,37,1684,35],[2518,38,1684,36,"user"],[2518,42,1684,40],[2518,46,1685,16,"currentSession"],[2518,60,1685,30],[2518,61,1685,31,"user"],[2518,65,1685,35],[2518,66,1685,36,"__isUserNotAvailableProxy"],[2518,91,1685,61],[2518,96,1685,66],[2518,100,1685,70],[2518,102,1685,72],[2519,14,1686,16],[2520,14,1687,16],[2520,18,1687,20],[2521,16,1688,20],[2521,20,1688,20,"_yield$this$_getUser3"],[2521,41,1688,20],[2521,50,1688,61],[2521,54,1688,65],[2521,55,1688,66,"_getUser"],[2521,63,1688,74],[2521,64,1688,75,"currentSession"],[2521,78,1688,89],[2521,79,1688,90,"access_token"],[2521,91,1688,102],[2521,92,1688,103],[2522,18,1688,28,"data"],[2522,22,1688,32],[2522,25,1688,32,"_yield$this$_getUser3"],[2522,46,1688,32],[2522,47,1688,28,"data"],[2522,51,1688,32],[2523,18,1688,41,"userError"],[2523,27,1688,50],[2523,30,1688,50,"_yield$this$_getUser3"],[2523,51,1688,50],[2523,52,1688,34,"error"],[2523,57,1688,39],[2524,16,1689,20],[2524,20,1689,24],[2524,21,1689,25,"userError"],[2524,30,1689,34],[2524,35,1689,39,"data"],[2524,39,1689,43],[2524,44,1689,48],[2524,48,1689,52],[2524,52,1689,56,"data"],[2524,56,1689,60],[2524,61,1689,65],[2524,66,1689,70],[2524,67,1689,71],[2524,70,1689,74],[2524,75,1689,79],[2524,76,1689,80],[2524,79,1689,83,"data"],[2524,83,1689,87],[2524,84,1689,88,"user"],[2524,88,1689,92],[2524,89,1689,93],[2524,91,1689,95],[2525,18,1690,24,"currentSession"],[2525,32,1690,38],[2525,33,1690,39,"user"],[2525,37,1690,43],[2525,40,1690,46,"data"],[2525,44,1690,50],[2525,45,1690,51,"user"],[2525,49,1690,55],[2526,18,1691,24],[2526,24,1691,30],[2526,28,1691,34],[2526,29,1691,35,"_saveSession"],[2526,41,1691,47],[2526,42,1691,48,"currentSession"],[2526,56,1691,62],[2526,57,1691,63],[2527,18,1692,24],[2527,24,1692,30],[2527,28,1692,34],[2527,29,1692,35,"_notifyAllSubscribers"],[2527,50,1692,56],[2527,51,1692,57],[2527,62,1692,68],[2527,64,1692,70,"currentSession"],[2527,78,1692,84],[2527,79,1692,85],[2528,16,1693,20],[2528,17,1693,21],[2528,23,1694,25],[2529,18,1695,24],[2529,22,1695,28],[2529,23,1695,29,"_debug"],[2529,29,1695,35],[2529,30,1695,36,"debugName"],[2529,39,1695,45],[2529,41,1695,47],[2529,99,1695,105],[2529,100,1695,106],[2530,16,1696,20],[2531,14,1697,16],[2531,15,1697,17],[2531,16,1698,16],[2531,23,1698,23,"getUserError"],[2531,35,1698,35],[2531,37,1698,37],[2532,16,1699,20,"console"],[2532,23,1699,27],[2532,24,1699,28,"error"],[2532,29,1699,33],[2532,30,1699,34],[2532,56,1699,60],[2532,58,1699,62,"getUserError"],[2532,70,1699,74],[2532,71,1699,75],[2533,16,1700,20],[2533,20,1700,24],[2533,21,1700,25,"_debug"],[2533,27,1700,31],[2533,28,1700,32,"debugName"],[2533,37,1700,41],[2533,39,1700,43],[2533,97,1700,101],[2533,99,1700,103,"getUserError"],[2533,111,1700,115],[2533,112,1700,116],[2534,14,1701,16],[2535,12,1702,12],[2535,13,1702,13],[2535,19,1703,17],[2536,14,1704,16],[2537,14,1705,16],[2538,14,1706,16],[2539,14,1707,16],[2539,20,1707,22],[2539,24,1707,26],[2539,25,1707,27,"_notifyAllSubscribers"],[2539,46,1707,48],[2539,47,1707,49],[2539,58,1707,60],[2539,60,1707,62,"currentSession"],[2539,74,1707,76],[2539,75,1707,77],[2540,12,1708,12],[2541,10,1709,8],[2541,11,1709,9],[2541,12,1710,8],[2541,19,1710,15,"err"],[2541,22,1710,18],[2541,24,1710,20],[2542,12,1711,12],[2542,16,1711,16],[2542,17,1711,17,"_debug"],[2542,23,1711,23],[2542,24,1711,24,"debugName"],[2542,33,1711,33],[2542,35,1711,35],[2542,42,1711,42],[2542,44,1711,44,"err"],[2542,47,1711,47],[2542,48,1711,48],[2543,12,1712,12,"console"],[2543,19,1712,19],[2543,20,1712,20,"error"],[2543,25,1712,25],[2543,26,1712,26,"err"],[2543,29,1712,29],[2543,30,1712,30],[2544,12,1713,12],[2545,10,1714,8],[2545,11,1714,9],[2545,20,1715,16],[2546,12,1716,12],[2546,16,1716,16],[2546,17,1716,17,"_debug"],[2546,23,1716,23],[2546,24,1716,24,"debugName"],[2546,33,1716,33],[2546,35,1716,35],[2546,40,1716,40],[2546,41,1716,41],[2547,10,1717,8],[2548,8,1718,4],[2548,9,1718,5],[2549,8,1718,5],[2549,17,1628,10,"_recoverAndRefresh"],[2549,35,1628,28,"_recoverAndRefresh"],[2549,36,1628,28],[2550,10,1628,28],[2550,17,1628,28,"_recoverAndRefresh2"],[2550,36,1628,28],[2550,37,1628,28,"apply"],[2550,42,1628,28],[2550,49,1628,28,"arguments"],[2550,58,1628,28],[2551,8,1628,28],[2552,8,1628,28],[2552,15,1628,10,"_recoverAndRefresh"],[2552,33,1628,28],[2553,6,1628,28],[2554,4,1628,28],[2555,6,1628,28,"key"],[2555,9,1628,28],[2556,6,1628,28,"value"],[2556,11,1628,28],[2557,8,1628,28],[2557,12,1628,28,"_callRefreshToken2"],[2557,30,1628,28],[2557,33,1628,28,"_asyncToGenerator"],[2557,50,1628,28],[2557,51,1719,4],[2557,62,1719,28,"refreshToken"],[2557,74,1719,40],[2557,76,1719,42],[2558,10,1720,8],[2558,14,1720,12,"_a"],[2558,16,1720,14],[2558,18,1720,16,"_b"],[2558,20,1720,18],[2559,10,1721,8],[2559,14,1721,12],[2559,15,1721,13,"refreshToken"],[2559,27,1721,25],[2559,29,1721,27],[2560,12,1722,12],[2560,18,1722,18],[2560,22,1722,22,"errors_1"],[2560,30,1722,30],[2560,31,1722,31,"AuthSessionMissingError"],[2560,54,1722,54],[2560,55,1722,55],[2560,56,1722,56],[2561,10,1723,8],[2562,10,1724,8],[2563,10,1725,8],[2563,14,1725,12],[2563,18,1725,16],[2563,19,1725,17,"refreshingDeferred"],[2563,37,1725,35],[2563,39,1725,37],[2564,12,1726,12],[2564,19,1726,19],[2564,23,1726,23],[2564,24,1726,24,"refreshingDeferred"],[2564,42,1726,42],[2564,43,1726,43,"promise"],[2564,50,1726,50],[2565,10,1727,8],[2566,10,1728,8],[2566,14,1728,14,"debugName"],[2566,23,1728,23],[2566,26,1728,26],[2566,48,1728,48,"refreshToken"],[2566,60,1728,60],[2566,61,1728,61,"substring"],[2566,70,1728,70],[2566,71,1728,71],[2566,72,1728,72],[2566,74,1728,74],[2566,75,1728,75],[2566,76,1728,76],[2566,82,1728,82],[2567,10,1729,8],[2567,14,1729,12],[2567,15,1729,13,"_debug"],[2567,21,1729,19],[2567,22,1729,20,"debugName"],[2567,31,1729,29],[2567,33,1729,31],[2567,40,1729,38],[2567,41,1729,39],[2568,10,1730,8],[2568,14,1730,12],[2569,12,1731,12],[2569,16,1731,16],[2569,17,1731,17,"refreshingDeferred"],[2569,35,1731,35],[2569,38,1731,38],[2569,42,1731,42,"helpers_1"],[2569,51,1731,51],[2569,52,1731,52,"Deferred"],[2569,60,1731,60],[2569,61,1731,61],[2569,62,1731,62],[2570,12,1732,12],[2570,16,1732,12,"_yield$this$_refreshA"],[2570,37,1732,12],[2570,46,1732,42],[2570,50,1732,46],[2570,51,1732,47,"_refreshAccessToken"],[2570,70,1732,66],[2570,71,1732,67,"refreshToken"],[2570,83,1732,79],[2570,84,1732,80],[2571,14,1732,20,"data"],[2571,18,1732,24],[2571,21,1732,24,"_yield$this$_refreshA"],[2571,42,1732,24],[2571,43,1732,20,"data"],[2571,47,1732,24],[2572,14,1732,26,"error"],[2572,19,1732,31],[2572,22,1732,31,"_yield$this$_refreshA"],[2572,43,1732,31],[2572,44,1732,26,"error"],[2572,49,1732,31],[2573,12,1733,12],[2573,16,1733,16,"error"],[2573,21,1733,21],[2573,23,1734,16],[2573,29,1734,22,"error"],[2573,34,1734,27],[2574,12,1735,12],[2574,16,1735,16],[2574,17,1735,17,"data"],[2574,21,1735,21],[2574,22,1735,22,"session"],[2574,29,1735,29],[2574,31,1736,16],[2574,37,1736,22],[2574,41,1736,26,"errors_1"],[2574,49,1736,34],[2574,50,1736,35,"AuthSessionMissingError"],[2574,73,1736,58],[2574,74,1736,59],[2574,75,1736,60],[2575,12,1737,12],[2575,18,1737,18],[2575,22,1737,22],[2575,23,1737,23,"_saveSession"],[2575,35,1737,35],[2575,36,1737,36,"data"],[2575,40,1737,40],[2575,41,1737,41,"session"],[2575,48,1737,48],[2575,49,1737,49],[2576,12,1738,12],[2576,18,1738,18],[2576,22,1738,22],[2576,23,1738,23,"_notifyAllSubscribers"],[2576,44,1738,44],[2576,45,1738,45],[2576,62,1738,62],[2576,64,1738,64,"data"],[2576,68,1738,68],[2576,69,1738,69,"session"],[2576,76,1738,76],[2576,77,1738,77],[2577,12,1739,12],[2577,16,1739,18,"result"],[2577,22,1739,24],[2577,25,1739,27],[2578,14,1739,29,"session"],[2578,21,1739,36],[2578,23,1739,38,"data"],[2578,27,1739,42],[2578,28,1739,43,"session"],[2578,35,1739,50],[2579,14,1739,52,"error"],[2579,19,1739,57],[2579,21,1739,59],[2580,12,1739,64],[2580,13,1739,65],[2581,12,1740,12],[2581,16,1740,16],[2581,17,1740,17,"refreshingDeferred"],[2581,35,1740,35],[2581,36,1740,36,"resolve"],[2581,43,1740,43],[2581,44,1740,44,"result"],[2581,50,1740,50],[2581,51,1740,51],[2582,12,1741,12],[2582,19,1741,19,"result"],[2582,25,1741,25],[2583,10,1742,8],[2583,11,1742,9],[2583,12,1743,8],[2583,19,1743,15,"error"],[2583,24,1743,20],[2583,26,1743,22],[2584,12,1744,12],[2584,16,1744,16],[2584,17,1744,17,"_debug"],[2584,23,1744,23],[2584,24,1744,24,"debugName"],[2584,33,1744,33],[2584,35,1744,35],[2584,42,1744,42],[2584,44,1744,44,"error"],[2584,49,1744,49],[2584,50,1744,50],[2585,12,1745,12],[2585,16,1745,16],[2585,17,1745,17],[2585,18,1745,18],[2585,20,1745,20,"errors_1"],[2585,28,1745,28],[2585,29,1745,29,"isAuthError"],[2585,40,1745,40],[2585,42,1745,42,"error"],[2585,47,1745,47],[2585,48,1745,48],[2585,50,1745,50],[2586,14,1746,16],[2586,18,1746,22,"result"],[2586,26,1746,28],[2586,29,1746,31],[2587,16,1746,33,"session"],[2587,23,1746,40],[2587,25,1746,42],[2587,29,1746,46],[2588,16,1746,48,"error"],[2588,21,1746,53],[2588,23,1746,48,"error"],[2589,14,1746,54],[2589,15,1746,55],[2590,14,1747,16],[2590,18,1747,20],[2590,19,1747,21],[2590,20,1747,22],[2590,21,1747,23],[2590,23,1747,25,"errors_1"],[2590,31,1747,33],[2590,32,1747,34,"isAuthRetryableFetchError"],[2590,57,1747,59],[2590,59,1747,61,"error"],[2590,64,1747,66],[2590,65,1747,67],[2590,67,1747,69],[2591,16,1748,20],[2591,22,1748,26],[2591,26,1748,30],[2591,27,1748,31,"_removeSession"],[2591,41,1748,45],[2591,42,1748,46],[2591,43,1748,47],[2592,14,1749,16],[2593,14,1750,16],[2593,15,1750,17,"_a"],[2593,17,1750,19],[2593,20,1750,22],[2593,24,1750,26],[2593,25,1750,27,"refreshingDeferred"],[2593,43,1750,45],[2593,49,1750,51],[2593,53,1750,55],[2593,57,1750,59,"_a"],[2593,59,1750,61],[2593,64,1750,66],[2593,69,1750,71],[2593,70,1750,72],[2593,73,1750,75],[2593,78,1750,80],[2593,79,1750,81],[2593,82,1750,84,"_a"],[2593,84,1750,86],[2593,85,1750,87,"resolve"],[2593,92,1750,94],[2593,93,1750,95,"result"],[2593,101,1750,101],[2593,102,1750,102],[2594,14,1751,16],[2594,21,1751,23,"result"],[2594,29,1751,29],[2595,12,1752,12],[2596,12,1753,12],[2596,13,1753,13,"_b"],[2596,15,1753,15],[2596,18,1753,18],[2596,22,1753,22],[2596,23,1753,23,"refreshingDeferred"],[2596,41,1753,41],[2596,47,1753,47],[2596,51,1753,51],[2596,55,1753,55,"_b"],[2596,57,1753,57],[2596,62,1753,62],[2596,67,1753,67],[2596,68,1753,68],[2596,71,1753,71],[2596,76,1753,76],[2596,77,1753,77],[2596,80,1753,80,"_b"],[2596,82,1753,82],[2596,83,1753,83,"reject"],[2596,89,1753,89],[2596,90,1753,90,"error"],[2596,95,1753,95],[2596,96,1753,96],[2597,12,1754,12],[2597,18,1754,18,"error"],[2597,23,1754,23],[2598,10,1755,8],[2598,11,1755,9],[2598,20,1756,16],[2599,12,1757,12],[2599,16,1757,16],[2599,17,1757,17,"refreshingDeferred"],[2599,35,1757,35],[2599,38,1757,38],[2599,42,1757,42],[2600,12,1758,12],[2600,16,1758,16],[2600,17,1758,17,"_debug"],[2600,23,1758,23],[2600,24,1758,24,"debugName"],[2600,33,1758,33],[2600,35,1758,35],[2600,40,1758,40],[2600,41,1758,41],[2601,10,1759,8],[2602,8,1760,4],[2602,9,1760,5],[2603,8,1760,5],[2603,17,1719,10,"_callRefreshToken"],[2603,34,1719,27,"_callRefreshToken"],[2603,35,1719,27,"_x47"],[2603,39,1719,27],[2604,10,1719,27],[2604,17,1719,27,"_callRefreshToken2"],[2604,35,1719,27],[2604,36,1719,27,"apply"],[2604,41,1719,27],[2604,48,1719,27,"arguments"],[2604,57,1719,27],[2605,8,1719,27],[2606,8,1719,27],[2606,15,1719,10,"_callRefreshToken"],[2606,32,1719,27],[2607,6,1719,27],[2608,4,1719,27],[2609,6,1719,27,"key"],[2609,9,1719,27],[2610,6,1719,27,"value"],[2610,11,1719,27],[2611,8,1719,27],[2611,12,1719,27,"_notifyAllSubscribers2"],[2611,34,1719,27],[2611,37,1719,27,"_asyncToGenerator"],[2611,54,1719,27],[2611,55,1761,4],[2611,66,1761,32,"event"],[2611,71,1761,37],[2611,73,1761,39,"session"],[2611,80,1761,46],[2611,82,1761,66],[2612,10,1761,66],[2612,14,1761,48,"broadcast"],[2612,23,1761,57],[2612,26,1761,57,"arguments"],[2612,35,1761,57],[2612,36,1761,57,"length"],[2612,42,1761,57],[2612,50,1761,57,"arguments"],[2612,59,1761,57],[2612,67,1761,57,"undefined"],[2612,76,1761,57],[2612,79,1761,57,"arguments"],[2612,88,1761,57],[2612,94,1761,60],[2612,98,1761,64],[2613,10,1762,8],[2613,14,1762,14,"debugName"],[2613,23,1762,23],[2613,26,1762,26],[2613,52,1762,52,"event"],[2613,57,1762,57],[2613,60,1762,60],[2614,10,1763,8],[2614,14,1763,12],[2614,15,1763,13,"_debug"],[2614,21,1763,19],[2614,22,1763,20,"debugName"],[2614,31,1763,29],[2614,33,1763,31],[2614,40,1763,38],[2614,42,1763,40,"session"],[2614,49,1763,47],[2614,51,1763,49],[2614,66,1763,64,"broadcast"],[2614,75,1763,73],[2614,77,1763,75],[2614,78,1763,76],[2615,10,1764,8],[2615,14,1764,12],[2616,12,1765,12],[2616,16,1765,16],[2616,20,1765,20],[2616,21,1765,21,"broadcastChannel"],[2616,37,1765,37],[2616,41,1765,41,"broadcast"],[2616,50,1765,50],[2616,52,1765,52],[2617,14,1766,16],[2617,18,1766,20],[2617,19,1766,21,"broadcastChannel"],[2617,35,1766,37],[2617,36,1766,38,"postMessage"],[2617,47,1766,49],[2617,48,1766,50],[2618,16,1766,52,"event"],[2618,21,1766,57],[2618,23,1766,52,"event"],[2618,28,1766,57],[2619,16,1766,59,"session"],[2619,23,1766,66],[2619,25,1766,59,"session"],[2620,14,1766,67],[2620,15,1766,68],[2620,16,1766,69],[2621,12,1767,12],[2622,12,1768,12],[2622,16,1768,18,"errors"],[2622,22,1768,24],[2622,25,1768,27],[2622,27,1768,29],[2623,12,1769,12],[2623,16,1769,18,"promises"],[2623,24,1769,26],[2623,27,1769,29,"Array"],[2623,32,1769,34],[2623,33,1769,35,"from"],[2623,37,1769,39],[2623,38,1769,40],[2623,42,1769,44],[2623,43,1769,45,"stateChangeEmitters"],[2623,62,1769,64],[2623,63,1769,65,"values"],[2623,69,1769,71],[2623,70,1769,72],[2623,71,1769,73],[2623,72,1769,74],[2623,73,1769,75,"map"],[2623,76,1769,78],[2624,14,1769,78],[2624,18,1769,78,"_ref29"],[2624,24,1769,78],[2624,27,1769,78,"_asyncToGenerator"],[2624,44,1769,78],[2624,45,1769,79],[2624,56,1769,86,"x"],[2624,57,1769,87],[2624,59,1769,92],[2625,16,1770,16],[2625,20,1770,20],[2626,18,1771,20],[2626,24,1771,26,"x"],[2626,25,1771,27],[2626,26,1771,28,"callback"],[2626,34,1771,36],[2626,35,1771,37,"event"],[2626,40,1771,42],[2626,42,1771,44,"session"],[2626,49,1771,51],[2626,50,1771,52],[2627,16,1772,16],[2627,17,1772,17],[2627,18,1773,16],[2627,25,1773,23,"e"],[2627,26,1773,24],[2627,28,1773,26],[2628,18,1774,20,"errors"],[2628,24,1774,26],[2628,25,1774,27,"push"],[2628,29,1774,31],[2628,30,1774,32,"e"],[2628,31,1774,33],[2628,32,1774,34],[2629,16,1775,16],[2630,14,1776,12],[2630,15,1776,13],[2631,14,1776,13],[2631,31,1776,13,"_x50"],[2631,35,1776,13],[2632,16,1776,13],[2632,23,1776,13,"_ref29"],[2632,29,1776,13],[2632,30,1776,13,"apply"],[2632,35,1776,13],[2632,42,1776,13,"arguments"],[2632,51,1776,13],[2633,14,1776,13],[2634,12,1776,13],[2634,16,1776,14],[2635,12,1777,12],[2635,18,1777,18,"Promise"],[2635,25,1777,25],[2635,26,1777,26,"all"],[2635,29,1777,29],[2635,30,1777,30,"promises"],[2635,38,1777,38],[2635,39,1777,39],[2636,12,1778,12],[2636,16,1778,16,"errors"],[2636,22,1778,22],[2636,23,1778,23,"length"],[2636,29,1778,29],[2636,32,1778,32],[2636,33,1778,33],[2636,35,1778,35],[2637,14,1779,16],[2637,19,1779,21],[2637,23,1779,25,"i"],[2637,24,1779,26],[2637,27,1779,29],[2637,28,1779,30],[2637,30,1779,32,"i"],[2637,31,1779,33],[2637,34,1779,36,"errors"],[2637,40,1779,42],[2637,41,1779,43,"length"],[2637,47,1779,49],[2637,49,1779,51,"i"],[2637,50,1779,52],[2637,54,1779,56],[2637,55,1779,57],[2637,57,1779,59],[2638,16,1780,20,"console"],[2638,23,1780,27],[2638,24,1780,28,"error"],[2638,29,1780,33],[2638,30,1780,34,"errors"],[2638,36,1780,40],[2638,37,1780,41,"i"],[2638,38,1780,42],[2638,39,1780,43],[2638,40,1780,44],[2639,14,1781,16],[2640,14,1782,16],[2640,20,1782,22,"errors"],[2640,26,1782,28],[2640,27,1782,29],[2640,28,1782,30],[2640,29,1782,31],[2641,12,1783,12],[2642,10,1784,8],[2642,11,1784,9],[2642,20,1785,16],[2643,12,1786,12],[2643,16,1786,16],[2643,17,1786,17,"_debug"],[2643,23,1786,23],[2643,24,1786,24,"debugName"],[2643,33,1786,33],[2643,35,1786,35],[2643,40,1786,40],[2643,41,1786,41],[2644,10,1787,8],[2645,8,1788,4],[2645,9,1788,5],[2646,8,1788,5],[2646,17,1761,10,"_notifyAllSubscribers"],[2646,38,1761,31,"_notifyAllSubscribers"],[2646,39,1761,31,"_x48"],[2646,43,1761,31],[2646,45,1761,31,"_x49"],[2646,49,1761,31],[2647,10,1761,31],[2647,17,1761,31,"_notifyAllSubscribers2"],[2647,39,1761,31],[2647,40,1761,31,"apply"],[2647,45,1761,31],[2647,52,1761,31,"arguments"],[2647,61,1761,31],[2648,8,1761,31],[2649,8,1761,31],[2649,15,1761,10,"_notifyAllSubscribers"],[2649,36,1761,31],[2650,6,1761,31],[2651,6,1789,4],[2652,0,1790,0],[2653,0,1791,0],[2654,0,1792,0],[2655,4,1789,4],[2656,6,1789,4,"key"],[2656,9,1789,4],[2657,6,1789,4,"value"],[2657,11,1789,4],[2658,8,1789,4],[2658,12,1789,4,"_saveSession2"],[2658,25,1789,4],[2658,28,1789,4,"_asyncToGenerator"],[2658,45,1789,4],[2658,46,1793,4],[2658,57,1793,23,"session"],[2658,64,1793,30],[2658,66,1793,32],[2659,10,1794,8],[2659,14,1794,12],[2659,15,1794,13,"_debug"],[2659,21,1794,19],[2659,22,1794,20],[2659,39,1794,37],[2659,41,1794,39,"session"],[2659,48,1794,46],[2659,49,1794,47],[2660,10,1795,8],[2661,10,1796,8],[2662,10,1797,8],[2662,14,1797,12],[2662,15,1797,13,"suppressGetSessionWarning"],[2662,40,1797,38],[2662,43,1797,41],[2662,47,1797,45],[2663,10,1798,8],[2664,10,1799,8],[2664,14,1799,14,"sessionToProcess"],[2664,30,1799,30],[2664,33,1799,33,"Object"],[2664,39,1799,39],[2664,40,1799,40,"assign"],[2664,46,1799,46],[2664,47,1799,47],[2664,48,1799,48],[2664,49,1799,49],[2664,51,1799,51,"session"],[2664,58,1799,58],[2664,59,1799,59],[2665,10,1800,8],[2665,14,1800,14,"userIsProxy"],[2665,25,1800,25],[2665,28,1800,28,"sessionToProcess"],[2665,44,1800,44],[2665,45,1800,45,"user"],[2665,49,1800,49],[2665,53,1800,53,"sessionToProcess"],[2665,69,1800,69],[2665,70,1800,70,"user"],[2665,74,1800,74],[2665,75,1800,75,"__isUserNotAvailableProxy"],[2665,100,1800,100],[2665,105,1800,105],[2665,109,1800,109],[2666,10,1801,8],[2666,14,1801,12],[2666,18,1801,16],[2666,19,1801,17,"userStorage"],[2666,30,1801,28],[2666,32,1801,30],[2667,12,1802,12],[2667,16,1802,16],[2667,17,1802,17,"userIsProxy"],[2667,28,1802,28],[2667,32,1802,32,"sessionToProcess"],[2667,48,1802,48],[2667,49,1802,49,"user"],[2667,53,1802,53],[2667,55,1802,55],[2668,14,1803,16],[2669,14,1804,16],[2669,20,1804,22],[2669,21,1804,23],[2669,22,1804,24],[2669,24,1804,26,"helpers_1"],[2669,33,1804,35],[2669,34,1804,36,"setItemAsync"],[2669,46,1804,48],[2669,48,1804,50],[2669,52,1804,54],[2669,53,1804,55,"userStorage"],[2669,64,1804,66],[2669,66,1804,68],[2669,70,1804,72],[2669,71,1804,73,"storageKey"],[2669,81,1804,83],[2669,84,1804,86],[2669,91,1804,93],[2669,93,1804,95],[2670,16,1805,20,"user"],[2670,20,1805,24],[2670,22,1805,26,"sessionToProcess"],[2670,38,1805,42],[2670,39,1805,43,"user"],[2671,14,1806,16],[2671,15,1806,17],[2671,16,1806,18],[2672,12,1807,12],[2672,13,1807,13],[2672,19,1808,17],[2672,23,1808,21,"userIsProxy"],[2672,34,1808,32],[2672,36,1808,34],[2673,14,1809,16],[2674,14,1810,16],[2675,14,1811,16],[2676,14,1812,16],[2677,12,1812,16],[2678,12,1814,12],[2679,12,1815,12],[2680,12,1816,12],[2680,16,1816,18,"mainSessionData"],[2680,31,1816,33],[2680,34,1816,36,"Object"],[2680,40,1816,42],[2680,41,1816,43,"assign"],[2680,47,1816,49],[2680,48,1816,50],[2680,49,1816,51],[2680,50,1816,52],[2680,52,1816,54,"sessionToProcess"],[2680,68,1816,70],[2680,69,1816,71],[2681,12,1817,12],[2681,19,1817,19,"mainSessionData"],[2681,34,1817,34],[2681,35,1817,35,"user"],[2681,39,1817,39],[2681,40,1817,40],[2681,41,1817,41],[2682,12,1818,12],[2682,16,1818,18,"clonedMainSessionData"],[2682,37,1818,39],[2682,40,1818,42],[2682,41,1818,43],[2682,42,1818,44],[2682,44,1818,46,"helpers_2"],[2682,53,1818,55],[2682,54,1818,56,"deepClone"],[2682,63,1818,65],[2682,65,1818,67,"mainSessionData"],[2682,80,1818,82],[2682,81,1818,83],[2683,12,1819,12],[2683,18,1819,18],[2683,19,1819,19],[2683,20,1819,20],[2683,22,1819,22,"helpers_1"],[2683,31,1819,31],[2683,32,1819,32,"setItemAsync"],[2683,44,1819,44],[2683,46,1819,46],[2683,50,1819,50],[2683,51,1819,51,"storage"],[2683,58,1819,58],[2683,60,1819,60],[2683,64,1819,64],[2683,65,1819,65,"storageKey"],[2683,75,1819,75],[2683,77,1819,77,"clonedMainSessionData"],[2683,98,1819,98],[2683,99,1819,99],[2684,10,1820,8],[2684,11,1820,9],[2684,17,1821,13],[2685,12,1822,12],[2686,12,1823,12],[2687,12,1824,12],[2688,12,1825,12],[2688,16,1825,18,"clonedSession"],[2688,29,1825,31],[2688,32,1825,34],[2688,33,1825,35],[2688,34,1825,36],[2688,36,1825,38,"helpers_2"],[2688,45,1825,47],[2688,46,1825,48,"deepClone"],[2688,55,1825,57],[2688,57,1825,59,"sessionToProcess"],[2688,73,1825,75],[2688,74,1825,76],[2688,75,1825,77],[2688,76,1825,78],[2689,12,1826,12],[2689,18,1826,18],[2689,19,1826,19],[2689,20,1826,20],[2689,22,1826,22,"helpers_1"],[2689,31,1826,31],[2689,32,1826,32,"setItemAsync"],[2689,44,1826,44],[2689,46,1826,46],[2689,50,1826,50],[2689,51,1826,51,"storage"],[2689,58,1826,58],[2689,60,1826,60],[2689,64,1826,64],[2689,65,1826,65,"storageKey"],[2689,75,1826,75],[2689,77,1826,77,"clonedSession"],[2689,90,1826,90],[2689,91,1826,91],[2690,10,1827,8],[2691,8,1828,4],[2691,9,1828,5],[2692,8,1828,5],[2692,17,1793,10,"_saveSession"],[2692,29,1793,22,"_saveSession"],[2692,30,1793,22,"_x51"],[2692,34,1793,22],[2693,10,1793,22],[2693,17,1793,22,"_saveSession2"],[2693,30,1793,22],[2693,31,1793,22,"apply"],[2693,36,1793,22],[2693,43,1793,22,"arguments"],[2693,52,1793,22],[2694,8,1793,22],[2695,8,1793,22],[2695,15,1793,10,"_saveSession"],[2695,27,1793,22],[2696,6,1793,22],[2697,4,1793,22],[2698,6,1793,22,"key"],[2698,9,1793,22],[2699,6,1793,22,"value"],[2699,11,1793,22],[2700,8,1793,22],[2700,12,1793,22,"_removeSession2"],[2700,27,1793,22],[2700,30,1793,22,"_asyncToGenerator"],[2700,47,1793,22],[2700,48,1829,4],[2700,61,1829,27],[2701,10,1830,8],[2701,14,1830,12],[2701,15,1830,13,"_debug"],[2701,21,1830,19],[2701,22,1830,20],[2701,41,1830,39],[2701,42,1830,40],[2702,10,1831,8],[2702,16,1831,14],[2702,17,1831,15],[2702,18,1831,16],[2702,20,1831,18,"helpers_1"],[2702,29,1831,27],[2702,30,1831,28,"removeItemAsync"],[2702,45,1831,43],[2702,47,1831,45],[2702,51,1831,49],[2702,52,1831,50,"storage"],[2702,59,1831,57],[2702,61,1831,59],[2702,65,1831,63],[2702,66,1831,64,"storageKey"],[2702,76,1831,74],[2702,77,1831,75],[2703,10,1832,8],[2703,16,1832,14],[2703,17,1832,15],[2703,18,1832,16],[2703,20,1832,18,"helpers_1"],[2703,29,1832,27],[2703,30,1832,28,"removeItemAsync"],[2703,45,1832,43],[2703,47,1832,45],[2703,51,1832,49],[2703,52,1832,50,"storage"],[2703,59,1832,57],[2703,61,1832,59],[2703,65,1832,63],[2703,66,1832,64,"storageKey"],[2703,76,1832,74],[2703,79,1832,77],[2703,95,1832,93],[2703,96,1832,94],[2704,10,1833,8],[2704,16,1833,14],[2704,17,1833,15],[2704,18,1833,16],[2704,20,1833,18,"helpers_1"],[2704,29,1833,27],[2704,30,1833,28,"removeItemAsync"],[2704,45,1833,43],[2704,47,1833,45],[2704,51,1833,49],[2704,52,1833,50,"storage"],[2704,59,1833,57],[2704,61,1833,59],[2704,65,1833,63],[2704,66,1833,64,"storageKey"],[2704,76,1833,74],[2704,79,1833,77],[2704,86,1833,84],[2704,87,1833,85],[2705,10,1834,8],[2705,14,1834,12],[2705,18,1834,16],[2705,19,1834,17,"userStorage"],[2705,30,1834,28],[2705,32,1834,30],[2706,12,1835,12],[2706,18,1835,18],[2706,19,1835,19],[2706,20,1835,20],[2706,22,1835,22,"helpers_1"],[2706,31,1835,31],[2706,32,1835,32,"removeItemAsync"],[2706,47,1835,47],[2706,49,1835,49],[2706,53,1835,53],[2706,54,1835,54,"userStorage"],[2706,65,1835,65],[2706,67,1835,67],[2706,71,1835,71],[2706,72,1835,72,"storageKey"],[2706,82,1835,82],[2706,85,1835,85],[2706,92,1835,92],[2706,93,1835,93],[2707,10,1836,8],[2708,10,1837,8],[2708,16,1837,14],[2708,20,1837,18],[2708,21,1837,19,"_notifyAllSubscribers"],[2708,42,1837,40],[2708,43,1837,41],[2708,55,1837,53],[2708,57,1837,55],[2708,61,1837,59],[2708,62,1837,60],[2709,8,1838,4],[2709,9,1838,5],[2710,8,1838,5],[2710,17,1829,10,"_removeSession"],[2710,31,1829,24,"_removeSession"],[2710,32,1829,24],[2711,10,1829,24],[2711,17,1829,24,"_removeSession2"],[2711,32,1829,24],[2711,33,1829,24,"apply"],[2711,38,1829,24],[2711,45,1829,24,"arguments"],[2711,54,1829,24],[2712,8,1829,24],[2713,8,1829,24],[2713,15,1829,10,"_removeSession"],[2713,29,1829,24],[2714,6,1829,24],[2715,6,1839,4],[2716,0,1840,0],[2717,0,1841,0],[2718,0,1842,0],[2719,0,1843,0],[2720,0,1844,0],[2721,4,1839,4],[2722,6,1839,4,"key"],[2722,9,1839,4],[2723,6,1839,4,"value"],[2723,11,1839,4],[2723,13,1845,4],[2723,22,1845,4,"_removeVisibilityChangedCallback"],[2723,54,1845,36,"_removeVisibilityChangedCallback"],[2723,55,1845,36],[2723,57,1845,39],[2724,8,1846,8],[2724,12,1846,12],[2724,13,1846,13,"_debug"],[2724,19,1846,19],[2724,20,1846,20],[2724,57,1846,57],[2724,58,1846,58],[2725,8,1847,8],[2725,12,1847,14,"callback"],[2725,20,1847,22],[2725,23,1847,25],[2725,27,1847,29],[2725,28,1847,30,"visibilityChangedCallback"],[2725,53,1847,55],[2726,8,1848,8],[2726,12,1848,12],[2726,13,1848,13,"visibilityChangedCallback"],[2726,38,1848,38],[2726,41,1848,41],[2726,45,1848,45],[2727,8,1849,8],[2727,12,1849,12],[2728,10,1850,12],[2728,14,1850,16,"callback"],[2728,22,1850,24],[2728,26,1850,28],[2728,27,1850,29],[2728,28,1850,30],[2728,30,1850,32,"helpers_1"],[2728,39,1850,41],[2728,40,1850,42,"isBrowser"],[2728,49,1850,51],[2728,51,1850,53],[2728,52,1850,54],[2728,57,1850,59,"window"],[2728,63,1850,65],[2728,68,1850,70],[2728,72,1850,74],[2728,76,1850,78,"window"],[2728,82,1850,84],[2728,87,1850,89],[2728,92,1850,94],[2728,93,1850,95],[2728,96,1850,98],[2728,101,1850,103],[2728,102,1850,104],[2728,105,1850,107,"window"],[2728,111,1850,113],[2728,112,1850,114,"removeEventListener"],[2728,131,1850,133],[2728,132,1850,134],[2728,134,1850,136],[2729,12,1851,16,"window"],[2729,18,1851,22],[2729,19,1851,23,"removeEventListener"],[2729,38,1851,42],[2729,39,1851,43],[2729,57,1851,61],[2729,59,1851,63,"callback"],[2729,67,1851,71],[2729,68,1851,72],[2730,10,1852,12],[2731,8,1853,8],[2731,9,1853,9],[2731,10,1854,8],[2731,17,1854,15,"e"],[2731,18,1854,16],[2731,20,1854,18],[2732,10,1855,12,"console"],[2732,17,1855,19],[2732,18,1855,20,"error"],[2732,23,1855,25],[2732,24,1855,26],[2732,67,1855,69],[2732,69,1855,71,"e"],[2732,70,1855,72],[2732,71,1855,73],[2733,8,1856,8],[2734,6,1857,4],[2735,6,1858,4],[2736,0,1859,0],[2737,0,1860,0],[2738,0,1861,0],[2739,4,1858,4],[2740,6,1858,4,"key"],[2740,9,1858,4],[2741,6,1858,4,"value"],[2741,11,1858,4],[2742,8,1858,4],[2742,12,1858,4,"_startAutoRefresh2"],[2742,30,1858,4],[2742,33,1858,4,"_asyncToGenerator"],[2742,50,1858,4],[2742,51,1862,4],[2742,64,1862,30],[2743,10,1862,30],[2743,14,1862,30,"_this22"],[2743,21,1862,30],[2744,10,1863,8],[2744,16,1863,14],[2744,20,1863,18],[2744,21,1863,19,"_stopAutoRefresh"],[2744,37,1863,35],[2744,38,1863,36],[2744,39,1863,37],[2745,10,1864,8],[2745,14,1864,12],[2745,15,1864,13,"_debug"],[2745,21,1864,19],[2745,22,1864,20],[2745,44,1864,42],[2745,45,1864,43],[2746,10,1865,8],[2746,14,1865,14,"ticker"],[2746,20,1865,20],[2746,23,1865,23,"setInterval"],[2746,34,1865,34],[2746,35,1865,35],[2747,12,1865,35],[2747,19,1865,41,"_this22"],[2747,26,1865,45],[2747,27,1865,46,"_autoRefreshTokenTick"],[2747,48,1865,67],[2747,49,1865,68],[2747,50,1865,69],[2748,10,1865,69],[2748,13,1865,71,"constants_1"],[2748,24,1865,82],[2748,25,1865,83,"AUTO_REFRESH_TICK_DURATION_MS"],[2748,54,1865,112],[2748,55,1865,113],[2749,10,1866,8],[2749,14,1866,12],[2749,15,1866,13,"autoRefreshTicker"],[2749,32,1866,30],[2749,35,1866,33,"ticker"],[2749,41,1866,39],[2750,10,1867,8],[2750,14,1867,12,"ticker"],[2750,20,1867,18],[2750,24,1867,22],[2750,31,1867,29,"ticker"],[2750,37,1867,35],[2750,42,1867,40],[2750,50,1867,48],[2750,54,1867,52],[2750,61,1867,59,"ticker"],[2750,67,1867,65],[2750,68,1867,66,"unref"],[2750,73,1867,71],[2750,78,1867,76],[2750,88,1867,86],[2750,90,1867,88],[2751,12,1868,12],[2752,12,1869,12],[2753,12,1870,12],[2754,12,1871,12],[2755,12,1872,12],[2756,12,1873,12],[2757,12,1874,12,"ticker"],[2757,18,1874,18],[2757,19,1874,19,"unref"],[2757,24,1874,24],[2757,25,1874,25],[2757,26,1874,26],[2758,12,1875,12],[2759,10,1876,8],[2759,11,1876,9],[2759,17,1877,13],[2759,21,1877,17],[2759,28,1877,24,"Deno"],[2759,32,1877,28],[2759,37,1877,33],[2759,48,1877,44],[2759,52,1877,48],[2759,59,1877,55,"Deno"],[2759,63,1877,59],[2759,64,1877,60,"unrefTimer"],[2759,74,1877,70],[2759,79,1877,75],[2759,89,1877,85],[2759,91,1877,87],[2760,12,1878,12],[2761,12,1879,12],[2762,12,1880,12],[2763,12,1881,12,"Deno"],[2763,16,1881,16],[2763,17,1881,17,"unrefTimer"],[2763,27,1881,27],[2763,28,1881,28,"ticker"],[2763,34,1881,34],[2763,35,1881,35],[2764,10,1882,8],[2765,10,1883,8],[2766,10,1884,8],[2767,10,1885,8],[2768,10,1886,8,"setTimeout"],[2768,20,1886,18],[2768,34,1886,18,"_asyncToGenerator"],[2768,51,1886,18],[2768,52,1886,19],[2768,65,1886,31],[2769,12,1887,12],[2769,18,1887,18,"_this22"],[2769,25,1887,22],[2769,26,1887,23,"initializePromise"],[2769,43,1887,40],[2770,12,1888,12],[2770,18,1888,18,"_this22"],[2770,25,1888,22],[2770,26,1888,23,"_autoRefreshTokenTick"],[2770,47,1888,44],[2770,48,1888,45],[2770,49,1888,46],[2771,10,1889,8],[2771,11,1889,9],[2771,14,1889,11],[2771,15,1889,12],[2771,16,1889,13],[2772,8,1890,4],[2772,9,1890,5],[2773,8,1890,5],[2773,17,1862,10,"_startAutoRefresh"],[2773,34,1862,27,"_startAutoRefresh"],[2773,35,1862,27],[2774,10,1862,27],[2774,17,1862,27,"_startAutoRefresh2"],[2774,35,1862,27],[2774,36,1862,27,"apply"],[2774,41,1862,27],[2774,48,1862,27,"arguments"],[2774,57,1862,27],[2775,8,1862,27],[2776,8,1862,27],[2776,15,1862,10,"_startAutoRefresh"],[2776,32,1862,27],[2777,6,1862,27],[2778,6,1891,4],[2779,0,1892,0],[2780,0,1893,0],[2781,0,1894,0],[2782,6,1891,4],[2783,4,1891,4],[2784,6,1891,4,"key"],[2784,9,1891,4],[2785,6,1891,4,"value"],[2785,11,1891,4],[2786,8,1891,4],[2786,12,1891,4,"_stopAutoRefresh2"],[2786,29,1891,4],[2786,32,1891,4,"_asyncToGenerator"],[2786,49,1891,4],[2786,50,1895,4],[2786,63,1895,29],[2787,10,1896,8],[2787,14,1896,12],[2787,15,1896,13,"_debug"],[2787,21,1896,19],[2787,22,1896,20],[2787,43,1896,41],[2787,44,1896,42],[2788,10,1897,8],[2788,14,1897,14,"ticker"],[2788,20,1897,20],[2788,23,1897,23],[2788,27,1897,27],[2788,28,1897,28,"autoRefreshTicker"],[2788,45,1897,45],[2789,10,1898,8],[2789,14,1898,12],[2789,15,1898,13,"autoRefreshTicker"],[2789,32,1898,30],[2789,35,1898,33],[2789,39,1898,37],[2790,10,1899,8],[2790,14,1899,12,"ticker"],[2790,20,1899,18],[2790,22,1899,20],[2791,12,1900,12,"clearInterval"],[2791,25,1900,25],[2791,26,1900,26,"ticker"],[2791,32,1900,32],[2791,33,1900,33],[2792,10,1901,8],[2793,8,1902,4],[2793,9,1902,5],[2794,8,1902,5],[2794,17,1895,10,"_stopAutoRefresh"],[2794,33,1895,26,"_stopAutoRefresh"],[2794,34,1895,26],[2795,10,1895,26],[2795,17,1895,26,"_stopAutoRefresh2"],[2795,34,1895,26],[2795,35,1895,26,"apply"],[2795,40,1895,26],[2795,47,1895,26,"arguments"],[2795,56,1895,26],[2796,8,1895,26],[2797,8,1895,26],[2797,15,1895,10,"_stopAutoRefresh"],[2797,31,1895,26],[2798,6,1895,26],[2799,6,1903,4],[2800,0,1904,0],[2801,0,1905,0],[2802,0,1906,0],[2803,0,1907,0],[2804,0,1908,0],[2805,0,1909,0],[2806,0,1910,0],[2807,0,1911,0],[2808,0,1912,0],[2809,0,1913,0],[2810,0,1914,0],[2811,0,1915,0],[2812,0,1916,0],[2813,0,1917,0],[2814,0,1918,0],[2815,0,1919,0],[2816,0,1920,0],[2817,0,1921,0],[2818,0,1922,0],[2819,0,1923,0],[2820,0,1924,0],[2821,6,1903,4],[2822,4,1903,4],[2823,6,1903,4,"key"],[2823,9,1903,4],[2824,6,1903,4,"value"],[2824,11,1903,4],[2825,8,1903,4],[2825,12,1903,4,"_startAutoRefresh3"],[2825,30,1903,4],[2825,33,1903,4,"_asyncToGenerator"],[2825,50,1903,4],[2825,51,1925,4],[2825,64,1925,29],[2826,10,1926,8],[2826,14,1926,12],[2826,15,1926,13,"_removeVisibilityChangedCallback"],[2826,47,1926,45],[2826,48,1926,46],[2826,49,1926,47],[2827,10,1927,8],[2827,16,1927,14],[2827,20,1927,18],[2827,21,1927,19,"_startAutoRefresh"],[2827,38,1927,36],[2827,39,1927,37],[2827,40,1927,38],[2828,8,1928,4],[2828,9,1928,5],[2829,8,1928,5],[2829,17,1925,10,"startAutoRefresh"],[2829,33,1925,26,"startAutoRefresh"],[2829,34,1925,26],[2830,10,1925,26],[2830,17,1925,26,"_startAutoRefresh3"],[2830,35,1925,26],[2830,36,1925,26,"apply"],[2830,41,1925,26],[2830,48,1925,26,"arguments"],[2830,57,1925,26],[2831,8,1925,26],[2832,8,1925,26],[2832,15,1925,10,"startAutoRefresh"],[2832,31,1925,26],[2833,6,1925,26],[2834,6,1929,4],[2835,0,1930,0],[2836,0,1931,0],[2837,0,1932,0],[2838,0,1933,0],[2839,0,1934,0],[2840,0,1935,0],[2841,0,1936,0],[2842,6,1929,4],[2843,4,1929,4],[2844,6,1929,4,"key"],[2844,9,1929,4],[2845,6,1929,4,"value"],[2845,11,1929,4],[2846,8,1929,4],[2846,12,1929,4,"_stopAutoRefresh3"],[2846,29,1929,4],[2846,32,1929,4,"_asyncToGenerator"],[2846,49,1929,4],[2846,50,1937,4],[2846,63,1937,28],[2847,10,1938,8],[2847,14,1938,12],[2847,15,1938,13,"_removeVisibilityChangedCallback"],[2847,47,1938,45],[2847,48,1938,46],[2847,49,1938,47],[2848,10,1939,8],[2848,16,1939,14],[2848,20,1939,18],[2848,21,1939,19,"_stopAutoRefresh"],[2848,37,1939,35],[2848,38,1939,36],[2848,39,1939,37],[2849,8,1940,4],[2849,9,1940,5],[2850,8,1940,5],[2850,17,1937,10,"stopAutoRefresh"],[2850,32,1937,25,"stopAutoRefresh"],[2850,33,1937,25],[2851,10,1937,25],[2851,17,1937,25,"_stopAutoRefresh3"],[2851,34,1937,25],[2851,35,1937,25,"apply"],[2851,40,1937,25],[2851,47,1937,25,"arguments"],[2851,56,1937,25],[2852,8,1937,25],[2853,8,1937,25],[2853,15,1937,10,"stopAutoRefresh"],[2853,30,1937,25],[2854,6,1937,25],[2855,6,1941,4],[2856,0,1942,0],[2857,0,1943,0],[2858,6,1941,4],[2859,4,1941,4],[2860,6,1941,4,"key"],[2860,9,1941,4],[2861,6,1941,4,"value"],[2861,11,1941,4],[2862,8,1941,4],[2862,12,1941,4,"_autoRefreshTokenTick2"],[2862,34,1941,4],[2862,37,1941,4,"_asyncToGenerator"],[2862,54,1941,4],[2862,55,1944,4],[2862,68,1944,34],[2863,10,1944,34],[2863,14,1944,34,"_this23"],[2863,21,1944,34],[2864,10,1945,8],[2864,14,1945,12],[2864,15,1945,13,"_debug"],[2864,21,1945,19],[2864,22,1945,20],[2864,48,1945,46],[2864,50,1945,48],[2864,57,1945,55],[2864,58,1945,56],[2865,10,1946,8],[2865,14,1946,12],[2866,12,1947,12],[2866,18,1947,18],[2866,22,1947,22],[2866,23,1947,23,"_acquireLock"],[2866,35,1947,35],[2866,36,1947,36],[2866,37,1947,37],[2866,52,1947,37,"_asyncToGenerator"],[2866,69,1947,37],[2866,70,1947,39],[2866,83,1947,51],[2867,14,1948,16],[2867,18,1948,20],[2868,16,1949,20],[2868,20,1949,26,"now"],[2868,23,1949,29],[2868,26,1949,32,"Date"],[2868,30,1949,36],[2868,31,1949,37,"now"],[2868,34,1949,40],[2868,35,1949,41],[2868,36,1949,42],[2869,16,1950,20],[2869,20,1950,24],[2870,18,1951,24],[2870,31,1951,37,"_this23"],[2870,38,1951,41],[2870,39,1951,42,"_useSession"],[2870,50,1951,53],[2871,20,1951,53],[2871,24,1951,53,"_ref32"],[2871,30,1951,53],[2871,33,1951,53,"_asyncToGenerator"],[2871,50,1951,53],[2871,51,1951,54],[2871,62,1951,61,"result"],[2871,68,1951,67],[2871,70,1951,72],[2872,22,1952,28],[2872,26,1952,44,"session"],[2872,33,1952,51],[2872,36,1952,59,"result"],[2872,42,1952,65],[2872,43,1952,36,"data"],[2872,47,1952,40],[2872,48,1952,44,"session"],[2872,55,1952,51],[2873,22,1953,28],[2873,26,1953,32],[2873,27,1953,33,"session"],[2873,34,1953,40],[2873,38,1953,44],[2873,39,1953,45,"session"],[2873,46,1953,52],[2873,47,1953,53,"refresh_token"],[2873,60,1953,66],[2873,64,1953,70],[2873,65,1953,71,"session"],[2873,72,1953,78],[2873,73,1953,79,"expires_at"],[2873,83,1953,89],[2873,85,1953,91],[2874,24,1954,32,"_this23"],[2874,31,1954,36],[2874,32,1954,37,"_debug"],[2874,38,1954,43],[2874,39,1954,44],[2874,65,1954,70],[2874,67,1954,72],[2874,79,1954,84],[2874,80,1954,85],[2875,24,1955,32],[2876,22,1956,28],[2877,22,1957,28],[2878,22,1958,28],[2878,26,1958,34,"expiresInTicks"],[2878,40,1958,48],[2878,43,1958,51,"Math"],[2878,47,1958,55],[2878,48,1958,56,"floor"],[2878,53,1958,61],[2878,54,1958,62],[2878,55,1958,63,"session"],[2878,62,1958,70],[2878,63,1958,71,"expires_at"],[2878,73,1958,81],[2878,76,1958,84],[2878,80,1958,88],[2878,83,1958,91,"now"],[2878,86,1958,94],[2878,90,1958,98,"constants_1"],[2878,101,1958,109],[2878,102,1958,110,"AUTO_REFRESH_TICK_DURATION_MS"],[2878,131,1958,139],[2878,132,1958,140],[2879,22,1959,28,"_this23"],[2879,29,1959,32],[2879,30,1959,33,"_debug"],[2879,36,1959,39],[2879,37,1959,40],[2879,63,1959,66],[2879,65,1959,68],[2879,92,1959,95,"expiresInTicks"],[2879,106,1959,109],[2879,130,1959,133,"constants_1"],[2879,141,1959,144],[2879,142,1959,145,"AUTO_REFRESH_TICK_DURATION_MS"],[2879,171,1959,174],[2879,199,1959,202,"constants_1"],[2879,210,1959,213],[2879,211,1959,214,"AUTO_REFRESH_TICK_THRESHOLD"],[2879,238,1959,241],[2879,246,1959,249],[2879,247,1959,250],[2880,22,1960,28],[2880,26,1960,32,"expiresInTicks"],[2880,40,1960,46],[2880,44,1960,50,"constants_1"],[2880,55,1960,61],[2880,56,1960,62,"AUTO_REFRESH_TICK_THRESHOLD"],[2880,83,1960,89],[2880,85,1960,91],[2881,24,1961,32],[2881,30,1961,38,"_this23"],[2881,37,1961,42],[2881,38,1961,43,"_callRefreshToken"],[2881,55,1961,60],[2881,56,1961,61,"session"],[2881,63,1961,68],[2881,64,1961,69,"refresh_token"],[2881,77,1961,82],[2881,78,1961,83],[2882,22,1962,28],[2883,20,1963,24],[2883,21,1963,25],[2884,20,1963,25],[2884,37,1963,25,"_x52"],[2884,41,1963,25],[2885,22,1963,25],[2885,29,1963,25,"_ref32"],[2885,35,1963,25],[2885,36,1963,25,"apply"],[2885,41,1963,25],[2885,48,1963,25,"arguments"],[2885,57,1963,25],[2886,20,1963,25],[2887,18,1963,25],[2887,22,1963,26],[2888,16,1964,20],[2888,17,1964,21],[2888,18,1965,20],[2888,25,1965,27,"e"],[2888,26,1965,28],[2888,28,1965,30],[2889,18,1966,24,"console"],[2889,25,1966,31],[2889,26,1966,32,"error"],[2889,31,1966,37],[2889,32,1966,38],[2889,104,1966,110],[2889,106,1966,112,"e"],[2889,107,1966,113],[2889,108,1966,114],[2890,16,1967,20],[2891,14,1968,16],[2891,15,1968,17],[2891,24,1969,24],[2892,16,1970,20,"_this23"],[2892,23,1970,24],[2892,24,1970,25,"_debug"],[2892,30,1970,31],[2892,31,1970,32],[2892,57,1970,58],[2892,59,1970,60],[2892,64,1970,65],[2892,65,1970,66],[2893,14,1971,16],[2894,12,1972,12],[2894,13,1972,13],[2894,15,1972,14],[2895,10,1973,8],[2895,11,1973,9],[2895,12,1974,8],[2895,19,1974,15,"e"],[2895,20,1974,16],[2895,22,1974,18],[2896,12,1975,12],[2896,16,1975,16,"e"],[2896,17,1975,17],[2896,18,1975,18,"isAcquireTimeout"],[2896,34,1975,34],[2896,38,1975,38,"e"],[2896,39,1975,39],[2896,51,1975,51,"locks_1"],[2896,58,1975,58],[2896,59,1975,59,"LockAcquireTimeoutError"],[2896,82,1975,82],[2896,84,1975,84],[2897,14,1976,16],[2897,18,1976,20],[2897,19,1976,21,"_debug"],[2897,25,1976,27],[2897,26,1976,28],[2897,70,1976,72],[2897,71,1976,73],[2898,12,1977,12],[2898,13,1977,13],[2898,19,1978,17],[2899,14,1979,16],[2899,20,1979,22,"e"],[2899,21,1979,23],[2900,12,1980,12],[2901,10,1981,8],[2902,8,1982,4],[2902,9,1982,5],[2903,8,1982,5],[2903,17,1944,10,"_autoRefreshTokenTick"],[2903,38,1944,31,"_autoRefreshTokenTick"],[2903,39,1944,31],[2904,10,1944,31],[2904,17,1944,31,"_autoRefreshTokenTick2"],[2904,39,1944,31],[2904,40,1944,31,"apply"],[2904,45,1944,31],[2904,52,1944,31,"arguments"],[2904,61,1944,31],[2905,8,1944,31],[2906,8,1944,31],[2906,15,1944,10,"_autoRefreshTokenTick"],[2906,36,1944,31],[2907,6,1944,31],[2908,6,1983,4],[2909,0,1984,0],[2910,0,1985,0],[2911,0,1986,0],[2912,0,1987,0],[2913,6,1983,4],[2914,4,1983,4],[2915,6,1983,4,"key"],[2915,9,1983,4],[2916,6,1983,4,"value"],[2916,11,1983,4],[2917,8,1983,4],[2917,12,1983,4,"_handleVisibilityChange2"],[2917,36,1983,4],[2917,39,1983,4,"_asyncToGenerator"],[2917,56,1983,4],[2917,57,1988,4],[2917,70,1988,36],[2918,10,1988,36],[2918,14,1988,36,"_this24"],[2918,21,1988,36],[2919,10,1989,8],[2919,14,1989,12],[2919,15,1989,13,"_debug"],[2919,21,1989,19],[2919,22,1989,20],[2919,50,1989,48],[2919,51,1989,49],[2920,10,1990,8],[2920,14,1990,12],[2920,15,1990,13],[2920,16,1990,14],[2920,17,1990,15],[2920,19,1990,17,"helpers_1"],[2920,28,1990,26],[2920,29,1990,27,"isBrowser"],[2920,38,1990,36],[2920,40,1990,38],[2920,41,1990,39],[2920,45,1990,43],[2920,47,1990,45,"window"],[2920,53,1990,51],[2920,58,1990,56],[2920,62,1990,60],[2920,66,1990,64,"window"],[2920,72,1990,70],[2920,77,1990,75],[2920,82,1990,80],[2920,83,1990,81],[2920,86,1990,84],[2920,91,1990,89],[2920,92,1990,90],[2920,95,1990,93,"window"],[2920,101,1990,99],[2920,102,1990,100,"addEventListener"],[2920,118,1990,116],[2920,119,1990,117],[2920,121,1990,119],[2921,12,1991,12],[2921,16,1991,16],[2921,20,1991,20],[2921,21,1991,21,"autoRefreshToken"],[2921,37,1991,37],[2921,39,1991,39],[2922,14,1992,16],[2923,14,1993,16],[2923,18,1993,20],[2923,19,1993,21,"startAutoRefresh"],[2923,35,1993,37],[2923,36,1993,38],[2923,37,1993,39],[2924,12,1994,12],[2925,12,1995,12],[2925,19,1995,19],[2925,24,1995,24],[2926,10,1996,8],[2927,10,1997,8],[2927,14,1997,12],[2928,12,1998,12],[2928,16,1998,16],[2928,17,1998,17,"visibilityChangedCallback"],[2928,42,1998,42],[2928,58,1998,42,"_asyncToGenerator"],[2928,75,1998,42],[2928,76,1998,45],[2929,14,1998,45],[2929,27,1998,63,"_this24"],[2929,34,1998,67],[2929,35,1998,68,"_onVisibilityChanged"],[2929,55,1998,88],[2929,56,1998,89],[2929,61,1998,94],[2929,62,1998,95],[2930,12,1998,95],[2931,12,1999,12,"window"],[2931,18,1999,18],[2931,23,1999,23],[2931,27,1999,27],[2931,31,1999,31,"window"],[2931,37,1999,37],[2931,42,1999,42],[2931,47,1999,47],[2931,48,1999,48],[2931,51,1999,51],[2931,56,1999,56],[2931,57,1999,57],[2931,60,1999,60,"window"],[2931,66,1999,66],[2931,67,1999,67,"addEventListener"],[2931,83,1999,83],[2931,84,1999,84],[2931,102,1999,102],[2931,104,1999,104],[2931,108,1999,108],[2931,109,1999,109,"visibilityChangedCallback"],[2931,134,1999,134],[2931,135,1999,135],[2932,12,2000,12],[2933,12,2001,12],[2934,12,2002,12],[2934,18,2002,18],[2934,22,2002,22],[2934,23,2002,23,"_onVisibilityChanged"],[2934,43,2002,43],[2934,44,2002,44],[2934,48,2002,48],[2934,49,2002,49],[2934,50,2002,50],[2934,51,2002,51],[2935,10,2003,8],[2935,11,2003,9],[2935,12,2004,8],[2935,19,2004,15,"error"],[2935,24,2004,20],[2935,26,2004,22],[2936,12,2005,12,"console"],[2936,19,2005,19],[2936,20,2005,20,"error"],[2936,25,2005,25],[2936,26,2005,26],[2936,51,2005,51],[2936,53,2005,53,"error"],[2936,58,2005,58],[2936,59,2005,59],[2937,10,2006,8],[2938,8,2007,4],[2938,9,2007,5],[2939,8,2007,5],[2939,17,1988,10,"_handleVisibilityChange"],[2939,40,1988,33,"_handleVisibilityChange"],[2939,41,1988,33],[2940,10,1988,33],[2940,17,1988,33,"_handleVisibilityChange2"],[2940,41,1988,33],[2940,42,1988,33,"apply"],[2940,47,1988,33],[2940,54,1988,33,"arguments"],[2940,63,1988,33],[2941,8,1988,33],[2942,8,1988,33],[2942,15,1988,10,"_handleVisibilityChange"],[2942,38,1988,33],[2943,6,1988,33],[2944,6,2008,4],[2945,0,2009,0],[2946,0,2010,0],[2947,6,2008,4],[2948,4,2008,4],[2949,6,2008,4,"key"],[2949,9,2008,4],[2950,6,2008,4,"value"],[2950,11,2008,4],[2951,8,2008,4],[2951,12,2008,4,"_onVisibilityChanged2"],[2951,33,2008,4],[2951,36,2008,4,"_asyncToGenerator"],[2951,53,2008,4],[2951,54,2011,4],[2951,65,2011,31,"calledFromInitialize"],[2951,85,2011,51],[2951,87,2011,53],[2952,10,2011,53],[2952,14,2011,53,"_this25"],[2952,21,2011,53],[2953,10,2012,8],[2953,14,2012,14,"methodName"],[2953,24,2012,24],[2953,27,2012,27],[2953,52,2012,52,"calledFromInitialize"],[2953,72,2012,72],[2953,75,2012,75],[2954,10,2013,8],[2954,14,2013,12],[2954,15,2013,13,"_debug"],[2954,21,2013,19],[2954,22,2013,20,"methodName"],[2954,32,2013,30],[2954,34,2013,32],[2954,51,2013,49],[2954,53,2013,51,"document"],[2954,61,2013,59],[2954,62,2013,60,"visibilityState"],[2954,77,2013,75],[2954,78,2013,76],[2955,10,2014,8],[2955,14,2014,12,"document"],[2955,22,2014,20],[2955,23,2014,21,"visibilityState"],[2955,38,2014,36],[2955,43,2014,41],[2955,52,2014,50],[2955,54,2014,52],[2956,12,2015,12],[2956,16,2015,16],[2956,20,2015,20],[2956,21,2015,21,"autoRefreshToken"],[2956,37,2015,37],[2956,39,2015,39],[2957,14,2016,16],[2958,14,2017,16],[2959,14,2018,16],[2959,18,2018,20],[2959,19,2018,21,"_startAutoRefresh"],[2959,36,2018,38],[2959,37,2018,39],[2959,38,2018,40],[2960,12,2019,12],[2961,12,2020,12],[2961,16,2020,16],[2961,17,2020,17,"calledFromInitialize"],[2961,37,2020,37],[2961,39,2020,39],[2962,14,2021,16],[2963,14,2022,16],[2964,14,2023,16],[2965,14,2024,16],[2966,14,2025,16],[2966,20,2025,22],[2966,24,2025,26],[2966,25,2025,27,"initializePromise"],[2966,42,2025,44],[2967,14,2026,16],[2967,20,2026,22],[2967,24,2026,26],[2967,25,2026,27,"_acquireLock"],[2967,37,2026,39],[2967,38,2026,40],[2967,39,2026,41],[2967,40,2026,42],[2967,55,2026,42,"_asyncToGenerator"],[2967,72,2026,42],[2967,73,2026,44],[2967,86,2026,56],[2968,16,2027,20],[2968,20,2027,24,"document"],[2968,28,2027,32],[2968,29,2027,33,"visibilityState"],[2968,44,2027,48],[2968,49,2027,53],[2968,58,2027,62],[2968,60,2027,64],[2969,18,2028,24,"_this25"],[2969,25,2028,28],[2969,26,2028,29,"_debug"],[2969,32,2028,35],[2969,33,2028,36,"methodName"],[2969,43,2028,46],[2969,45,2028,48],[2969,151,2028,154],[2969,152,2028,155],[2970,18,2029,24],[2971,18,2030,24],[2972,16,2031,20],[2973,16,2032,20],[2974,16,2033,20],[2974,22,2033,26,"_this25"],[2974,29,2033,30],[2974,30,2033,31,"_recoverAndRefresh"],[2974,48,2033,49],[2974,49,2033,50],[2974,50,2033,51],[2975,14,2034,16],[2975,15,2034,17],[2975,17,2034,18],[2976,12,2035,12],[2977,10,2036,8],[2977,11,2036,9],[2977,17,2037,13],[2977,21,2037,17,"document"],[2977,29,2037,25],[2977,30,2037,26,"visibilityState"],[2977,45,2037,41],[2977,50,2037,46],[2977,58,2037,54],[2977,60,2037,56],[2978,12,2038,12],[2978,16,2038,16],[2978,20,2038,20],[2978,21,2038,21,"autoRefreshToken"],[2978,37,2038,37],[2978,39,2038,39],[2979,14,2039,16],[2979,18,2039,20],[2979,19,2039,21,"_stopAutoRefresh"],[2979,35,2039,37],[2979,36,2039,38],[2979,37,2039,39],[2980,12,2040,12],[2981,10,2041,8],[2982,8,2042,4],[2982,9,2042,5],[2983,8,2042,5],[2983,17,2011,10,"_onVisibilityChanged"],[2983,37,2011,30,"_onVisibilityChanged"],[2983,38,2011,30,"_x53"],[2983,42,2011,30],[2984,10,2011,30],[2984,17,2011,30,"_onVisibilityChanged2"],[2984,38,2011,30],[2984,39,2011,30,"apply"],[2984,44,2011,30],[2984,51,2011,30,"arguments"],[2984,60,2011,30],[2985,8,2011,30],[2986,8,2011,30],[2986,15,2011,10,"_onVisibilityChanged"],[2986,35,2011,30],[2987,6,2011,30],[2988,6,2043,4],[2989,0,2044,0],[2990,0,2045,0],[2991,0,2046,0],[2992,0,2047,0],[2993,0,2048,0],[2994,6,2043,4],[2995,4,2043,4],[2996,6,2043,4,"key"],[2996,9,2043,4],[2997,6,2043,4,"value"],[2997,11,2043,4],[2998,8,2043,4],[2998,12,2043,4,"_getUrlForProvider2"],[2998,31,2043,4],[2998,34,2043,4,"_asyncToGenerator"],[2998,51,2043,4],[2998,52,2049,4],[2998,63,2049,29,"url"],[2998,66,2049,32],[2998,68,2049,34,"provider"],[2998,76,2049,42],[2998,78,2049,44,"options"],[2998,85,2049,51],[2998,87,2049,53],[2999,10,2050,8],[2999,14,2050,14,"urlParams"],[2999,23,2050,23],[2999,26,2050,26],[2999,27,2050,27],[2999,39,2050,39,"encodeURIComponent"],[2999,57,2050,57],[2999,58,2050,58,"provider"],[2999,66,2050,66],[2999,67,2050,67],[2999,69,2050,69],[2999,70,2050,70],[3000,10,2051,8],[3000,14,2051,12,"options"],[3000,21,2051,19],[3000,26,2051,24],[3000,30,2051,28],[3000,34,2051,32,"options"],[3000,41,2051,39],[3000,46,2051,44],[3000,51,2051,49],[3000,52,2051,50],[3000,55,2051,53],[3000,60,2051,58],[3000,61,2051,59],[3000,64,2051,62,"options"],[3000,71,2051,69],[3000,72,2051,70,"redirectTo"],[3000,82,2051,80],[3000,84,2051,82],[3001,12,2052,12,"urlParams"],[3001,21,2052,21],[3001,22,2052,22,"push"],[3001,26,2052,26],[3001,27,2052,27],[3001,42,2052,42,"encodeURIComponent"],[3001,60,2052,60],[3001,61,2052,61,"options"],[3001,68,2052,68],[3001,69,2052,69,"redirectTo"],[3001,79,2052,79],[3001,80,2052,80],[3001,82,2052,82],[3001,83,2052,83],[3002,10,2053,8],[3003,10,2054,8],[3003,14,2054,12,"options"],[3003,21,2054,19],[3003,26,2054,24],[3003,30,2054,28],[3003,34,2054,32,"options"],[3003,41,2054,39],[3003,46,2054,44],[3003,51,2054,49],[3003,52,2054,50],[3003,55,2054,53],[3003,60,2054,58],[3003,61,2054,59],[3003,64,2054,62,"options"],[3003,71,2054,69],[3003,72,2054,70,"scopes"],[3003,78,2054,76],[3003,80,2054,78],[3004,12,2055,12,"urlParams"],[3004,21,2055,21],[3004,22,2055,22,"push"],[3004,26,2055,26],[3004,27,2055,27],[3004,37,2055,37,"encodeURIComponent"],[3004,55,2055,55],[3004,56,2055,56,"options"],[3004,63,2055,63],[3004,64,2055,64,"scopes"],[3004,70,2055,70],[3004,71,2055,71],[3004,73,2055,73],[3004,74,2055,74],[3005,10,2056,8],[3006,10,2057,8],[3006,14,2057,12],[3006,18,2057,16],[3006,19,2057,17,"flowType"],[3006,27,2057,25],[3006,32,2057,30],[3006,38,2057,36],[3006,40,2057,38],[3007,12,2058,12],[3007,16,2058,12,"_yield18"],[3007,24,2058,12],[3007,33,2058,63],[3007,34,2058,64],[3007,35,2058,65],[3007,37,2058,67,"helpers_1"],[3007,46,2058,76],[3007,47,2058,77,"getCodeChallengeAndMethod"],[3007,72,2058,102],[3007,74,2058,104],[3007,78,2058,108],[3007,79,2058,109,"storage"],[3007,86,2058,116],[3007,88,2058,118],[3007,92,2058,122],[3007,93,2058,123,"storageKey"],[3007,103,2058,133],[3007,104,2058,134],[3008,14,2058,134,"_yield19"],[3008,22,2058,134],[3008,25,2058,134,"_slicedToArray"],[3008,39,2058,134],[3008,40,2058,134,"_yield18"],[3008,48,2058,134],[3009,14,2058,19,"codeChallenge"],[3009,27,2058,32],[3009,30,2058,32,"_yield19"],[3009,38,2058,32],[3010,14,2058,34,"codeChallengeMethod"],[3010,33,2058,53],[3010,36,2058,53,"_yield19"],[3010,44,2058,53],[3011,12,2059,12],[3011,16,2059,18,"flowParams"],[3011,26,2059,28],[3011,29,2059,31],[3011,33,2059,35,"URLSearchParams"],[3011,48,2059,50],[3011,49,2059,51],[3012,14,2060,16,"code_challenge"],[3012,28,2060,30],[3012,30,2060,32],[3012,33,2060,35,"encodeURIComponent"],[3012,51,2060,53],[3012,52,2060,54,"codeChallenge"],[3012,65,2060,67],[3012,66,2060,68],[3012,68,2060,70],[3013,14,2061,16,"code_challenge_method"],[3013,35,2061,37],[3013,37,2061,39],[3013,40,2061,42,"encodeURIComponent"],[3013,58,2061,60],[3013,59,2061,61,"codeChallengeMethod"],[3013,78,2061,80],[3013,79,2061,81],[3014,12,2062,12],[3014,13,2062,13],[3014,14,2062,14],[3015,12,2063,12,"urlParams"],[3015,21,2063,21],[3015,22,2063,22,"push"],[3015,26,2063,26],[3015,27,2063,27,"flowParams"],[3015,37,2063,37],[3015,38,2063,38,"toString"],[3015,46,2063,46],[3015,47,2063,47],[3015,48,2063,48],[3015,49,2063,49],[3016,10,2064,8],[3017,10,2065,8],[3017,14,2065,12,"options"],[3017,21,2065,19],[3017,26,2065,24],[3017,30,2065,28],[3017,34,2065,32,"options"],[3017,41,2065,39],[3017,46,2065,44],[3017,51,2065,49],[3017,52,2065,50],[3017,55,2065,53],[3017,60,2065,58],[3017,61,2065,59],[3017,64,2065,62,"options"],[3017,71,2065,69],[3017,72,2065,70,"queryParams"],[3017,83,2065,81],[3017,85,2065,83],[3018,12,2066,12],[3018,16,2066,18,"query"],[3018,21,2066,23],[3018,24,2066,26],[3018,28,2066,30,"URLSearchParams"],[3018,43,2066,45],[3018,44,2066,46,"options"],[3018,51,2066,53],[3018,52,2066,54,"queryParams"],[3018,63,2066,65],[3018,64,2066,66],[3019,12,2067,12,"urlParams"],[3019,21,2067,21],[3019,22,2067,22,"push"],[3019,26,2067,26],[3019,27,2067,27,"query"],[3019,32,2067,32],[3019,33,2067,33,"toString"],[3019,41,2067,41],[3019,42,2067,42],[3019,43,2067,43],[3019,44,2067,44],[3020,10,2068,8],[3021,10,2069,8],[3021,14,2069,12,"options"],[3021,21,2069,19],[3021,26,2069,24],[3021,30,2069,28],[3021,34,2069,32,"options"],[3021,41,2069,39],[3021,46,2069,44],[3021,51,2069,49],[3021,52,2069,50],[3021,55,2069,53],[3021,60,2069,58],[3021,61,2069,59],[3021,64,2069,62,"options"],[3021,71,2069,69],[3021,72,2069,70,"skipBrowserRedirect"],[3021,91,2069,89],[3021,93,2069,91],[3022,12,2070,12,"urlParams"],[3022,21,2070,21],[3022,22,2070,22,"push"],[3022,26,2070,26],[3022,27,2070,27],[3022,49,2070,49,"options"],[3022,56,2070,56],[3022,57,2070,57,"skipBrowserRedirect"],[3022,76,2070,76],[3022,78,2070,78],[3022,79,2070,79],[3023,10,2071,8],[3024,10,2072,8],[3024,17,2072,15],[3024,20,2072,18,"url"],[3024,23,2072,21],[3024,27,2072,25,"urlParams"],[3024,36,2072,34],[3024,37,2072,35,"join"],[3024,41,2072,39],[3024,42,2072,40],[3024,45,2072,43],[3024,46,2072,44],[3024,48,2072,46],[3025,8,2073,4],[3025,9,2073,5],[3026,8,2073,5],[3026,17,2049,10,"_getUrlForProvider"],[3026,35,2049,28,"_getUrlForProvider"],[3026,36,2049,28,"_x54"],[3026,40,2049,28],[3026,42,2049,28,"_x55"],[3026,46,2049,28],[3026,48,2049,28,"_x56"],[3026,52,2049,28],[3027,10,2049,28],[3027,17,2049,28,"_getUrlForProvider2"],[3027,36,2049,28],[3027,37,2049,28,"apply"],[3027,42,2049,28],[3027,49,2049,28,"arguments"],[3027,58,2049,28],[3028,8,2049,28],[3029,8,2049,28],[3029,15,2049,10,"_getUrlForProvider"],[3029,33,2049,28],[3030,6,2049,28],[3031,4,2049,28],[3032,6,2049,28,"key"],[3032,9,2049,28],[3033,6,2049,28,"value"],[3033,11,2049,28],[3034,8,2049,28],[3034,12,2049,28,"_unenroll2"],[3034,22,2049,28],[3034,25,2049,28,"_asyncToGenerator"],[3034,42,2049,28],[3034,43,2074,4],[3034,54,2074,20,"params"],[3034,60,2074,26],[3034,62,2074,28],[3035,10,2074,28],[3035,14,2074,28,"_this26"],[3035,21,2074,28],[3036,10,2075,8],[3036,14,2075,12],[3037,12,2076,12],[3037,25,2076,25],[3037,29,2076,29],[3037,30,2076,30,"_useSession"],[3037,41,2076,41],[3038,14,2076,41],[3038,18,2076,41,"_ref35"],[3038,24,2076,41],[3038,27,2076,41,"_asyncToGenerator"],[3038,44,2076,41],[3038,45,2076,42],[3038,56,2076,49,"result"],[3038,62,2076,55],[3038,64,2076,60],[3039,16,2077,16],[3039,20,2077,20,"_a"],[3039,22,2077,22],[3040,16,2078,16],[3040,20,2078,30,"sessionData"],[3040,31,2078,41],[3040,34,2078,67,"result"],[3040,40,2078,73],[3040,41,2078,24,"data"],[3040,45,2078,28],[3041,18,2078,50,"sessionError"],[3041,30,2078,62],[3041,33,2078,67,"result"],[3041,39,2078,73],[3041,40,2078,43,"error"],[3041,45,2078,48],[3042,16,2079,16],[3042,20,2079,20,"sessionError"],[3042,32,2079,32],[3042,34,2079,34],[3043,18,2080,20],[3043,25,2080,27],[3044,20,2080,29,"data"],[3044,24,2080,33],[3044,26,2080,35],[3044,30,2080,39],[3045,20,2080,41,"error"],[3045,25,2080,46],[3045,27,2080,48,"sessionError"],[3046,18,2080,61],[3046,19,2080,62],[3047,16,2081,16],[3048,16,2082,16],[3048,29,2082,29],[3048,30,2082,30],[3048,31,2082,31],[3048,33,2082,33,"fetch_1"],[3048,40,2082,40],[3048,41,2082,41,"_request"],[3048,49,2082,49],[3048,51,2082,51,"_this26"],[3048,58,2082,55],[3048,59,2082,56,"fetch"],[3048,64,2082,61],[3048,66,2082,63],[3048,74,2082,71],[3048,76,2082,73],[3048,79,2082,76,"_this26"],[3048,86,2082,80],[3048,87,2082,81,"url"],[3048,90,2082,84],[3048,102,2082,96,"params"],[3048,108,2082,102],[3048,109,2082,103,"factorId"],[3048,117,2082,111],[3048,119,2082,113],[3048,121,2082,115],[3049,18,2083,20,"headers"],[3049,25,2083,27],[3049,27,2083,29,"_this26"],[3049,34,2083,33],[3049,35,2083,34,"headers"],[3049,42,2083,41],[3050,18,2084,20,"jwt"],[3050,21,2084,23],[3050,23,2084,25],[3050,24,2084,26,"_a"],[3050,26,2084,28],[3050,29,2084,31,"sessionData"],[3050,40,2084,42],[3050,45,2084,47],[3050,49,2084,51],[3050,53,2084,55,"sessionData"],[3050,64,2084,66],[3050,69,2084,71],[3050,74,2084,76],[3050,75,2084,77],[3050,78,2084,80],[3050,83,2084,85],[3050,84,2084,86],[3050,87,2084,89,"sessionData"],[3050,98,2084,100],[3050,99,2084,101,"session"],[3050,106,2084,108],[3050,112,2084,114],[3050,116,2084,118],[3050,120,2084,122,"_a"],[3050,122,2084,124],[3050,127,2084,129],[3050,132,2084,134],[3050,133,2084,135],[3050,136,2084,138],[3050,141,2084,143],[3050,142,2084,144],[3050,145,2084,147,"_a"],[3050,147,2084,149],[3050,148,2084,150,"access_token"],[3051,16,2085,16],[3051,17,2085,17],[3051,18,2085,18],[3052,14,2086,12],[3052,15,2086,13],[3053,14,2086,13],[3053,31,2086,13,"_x58"],[3053,35,2086,13],[3054,16,2086,13],[3054,23,2086,13,"_ref35"],[3054,29,2086,13],[3054,30,2086,13,"apply"],[3054,35,2086,13],[3054,42,2086,13,"arguments"],[3054,51,2086,13],[3055,14,2086,13],[3056,12,2086,13],[3056,16,2086,14],[3057,10,2087,8],[3057,11,2087,9],[3057,12,2088,8],[3057,19,2088,15,"error"],[3057,24,2088,20],[3057,26,2088,22],[3058,12,2089,12],[3058,16,2089,16],[3058,17,2089,17],[3058,18,2089,18],[3058,20,2089,20,"errors_1"],[3058,28,2089,28],[3058,29,2089,29,"isAuthError"],[3058,40,2089,40],[3058,42,2089,42,"error"],[3058,47,2089,47],[3058,48,2089,48],[3058,50,2089,50],[3059,14,2090,16],[3059,21,2090,23],[3060,16,2090,25,"data"],[3060,20,2090,29],[3060,22,2090,31],[3060,26,2090,35],[3061,16,2090,37,"error"],[3061,21,2090,42],[3061,23,2090,37,"error"],[3062,14,2090,43],[3062,15,2090,44],[3063,12,2091,12],[3064,12,2092,12],[3064,18,2092,18,"error"],[3064,23,2092,23],[3065,10,2093,8],[3066,8,2094,4],[3066,9,2094,5],[3067,8,2094,5],[3067,17,2074,10,"_unenroll"],[3067,26,2074,19,"_unenroll"],[3067,27,2074,19,"_x57"],[3067,31,2074,19],[3068,10,2074,19],[3068,17,2074,19,"_unenroll2"],[3068,27,2074,19],[3068,28,2074,19,"apply"],[3068,33,2074,19],[3068,40,2074,19,"arguments"],[3068,49,2074,19],[3069,8,2074,19],[3070,8,2074,19],[3070,15,2074,10,"_unenroll"],[3070,24,2074,19],[3071,6,2074,19],[3072,4,2074,19],[3073,6,2074,19,"key"],[3073,9,2074,19],[3074,6,2074,19,"value"],[3074,11,2074,19],[3075,8,2074,19],[3075,12,2074,19,"_enroll2"],[3075,20,2074,19],[3075,23,2074,19,"_asyncToGenerator"],[3075,40,2074,19],[3075,41,2095,4],[3075,52,2095,18,"params"],[3075,58,2095,24],[3075,60,2095,26],[3076,10,2095,26],[3076,14,2095,26,"_this27"],[3076,21,2095,26],[3077,10,2096,8],[3077,14,2096,12],[3078,12,2097,12],[3078,25,2097,25],[3078,29,2097,29],[3078,30,2097,30,"_useSession"],[3078,41,2097,41],[3079,14,2097,41],[3079,18,2097,41,"_ref36"],[3079,24,2097,41],[3079,27,2097,41,"_asyncToGenerator"],[3079,44,2097,41],[3079,45,2097,42],[3079,56,2097,49,"result"],[3079,62,2097,55],[3079,64,2097,60],[3080,16,2098,16],[3080,20,2098,20,"_a"],[3080,22,2098,22],[3080,24,2098,24,"_b"],[3080,26,2098,26],[3081,16,2099,16],[3081,20,2099,30,"sessionData"],[3081,31,2099,41],[3081,34,2099,67,"result"],[3081,40,2099,73],[3081,41,2099,24,"data"],[3081,45,2099,28],[3082,18,2099,50,"sessionError"],[3082,30,2099,62],[3082,33,2099,67,"result"],[3082,39,2099,73],[3082,40,2099,43,"error"],[3082,45,2099,48],[3083,16,2100,16],[3083,20,2100,20,"sessionError"],[3083,32,2100,32],[3083,34,2100,34],[3084,18,2101,20],[3084,25,2101,27],[3085,20,2101,29,"data"],[3085,24,2101,33],[3085,26,2101,35],[3085,30,2101,39],[3086,20,2101,41,"error"],[3086,25,2101,46],[3086,27,2101,48,"sessionError"],[3087,18,2101,61],[3087,19,2101,62],[3088,16,2102,16],[3089,16,2103,16],[3089,20,2103,22,"body"],[3089,24,2103,26],[3089,27,2103,29,"Object"],[3089,33,2103,35],[3089,34,2103,36,"assign"],[3089,40,2103,42],[3089,41,2103,43],[3090,18,2103,45,"friendly_name"],[3090,31,2103,58],[3090,33,2103,60,"params"],[3090,39,2103,66],[3090,40,2103,67,"friendlyName"],[3090,52,2103,79],[3091,18,2103,81,"factor_type"],[3091,29,2103,92],[3091,31,2103,94,"params"],[3091,37,2103,100],[3091,38,2103,101,"factorType"],[3092,16,2103,112],[3092,17,2103,113],[3092,19,2103,116,"params"],[3092,25,2103,122],[3092,26,2103,123,"factorType"],[3092,36,2103,133],[3092,41,2103,138],[3092,48,2103,145],[3092,51,2103,148],[3093,18,2103,150,"phone"],[3093,23,2103,155],[3093,25,2103,157,"params"],[3093,31,2103,163],[3093,32,2103,164,"phone"],[3094,16,2103,170],[3094,17,2103,171],[3094,20,2103,174],[3095,18,2103,176,"issuer"],[3095,24,2103,182],[3095,26,2103,184,"params"],[3095,32,2103,190],[3095,33,2103,191,"issuer"],[3096,16,2103,198],[3096,17,2103,200],[3096,18,2103,201],[3097,16,2104,16],[3097,20,2104,16,"_yield20"],[3097,28,2104,16],[3097,37,2104,46],[3097,38,2104,47],[3097,39,2104,48],[3097,41,2104,50,"fetch_1"],[3097,48,2104,57],[3097,49,2104,58,"_request"],[3097,57,2104,66],[3097,59,2104,68,"_this27"],[3097,66,2104,72],[3097,67,2104,73,"fetch"],[3097,72,2104,78],[3097,74,2104,80],[3097,80,2104,86],[3097,82,2104,88],[3097,85,2104,91,"_this27"],[3097,92,2104,95],[3097,93,2104,96,"url"],[3097,96,2104,99],[3097,106,2104,109],[3097,108,2104,111],[3098,20,2105,20,"body"],[3098,24,2105,24],[3098,26,2105,20,"body"],[3098,30,2105,24],[3099,20,2106,20,"headers"],[3099,27,2106,27],[3099,29,2106,29,"_this27"],[3099,36,2106,33],[3099,37,2106,34,"headers"],[3099,44,2106,41],[3100,20,2107,20,"jwt"],[3100,23,2107,23],[3100,25,2107,25],[3100,26,2107,26,"_a"],[3100,28,2107,28],[3100,31,2107,31,"sessionData"],[3100,42,2107,42],[3100,47,2107,47],[3100,51,2107,51],[3100,55,2107,55,"sessionData"],[3100,66,2107,66],[3100,71,2107,71],[3100,76,2107,76],[3100,77,2107,77],[3100,80,2107,80],[3100,85,2107,85],[3100,86,2107,86],[3100,89,2107,89,"sessionData"],[3100,100,2107,100],[3100,101,2107,101,"session"],[3100,108,2107,108],[3100,114,2107,114],[3100,118,2107,118],[3100,122,2107,122,"_a"],[3100,124,2107,124],[3100,129,2107,129],[3100,134,2107,134],[3100,135,2107,135],[3100,138,2107,138],[3100,143,2107,143],[3100,144,2107,144],[3100,147,2107,147,"_a"],[3100,149,2107,149],[3100,150,2107,150,"access_token"],[3101,18,2108,16],[3101,19,2108,17],[3101,20,2108,18],[3102,18,2104,24,"data"],[3102,22,2104,28],[3102,25,2104,28,"_yield20"],[3102,33,2104,28],[3102,34,2104,24,"data"],[3102,38,2104,28],[3103,18,2104,30,"error"],[3103,23,2104,35],[3103,26,2104,35,"_yield20"],[3103,34,2104,35],[3103,35,2104,30,"error"],[3103,40,2104,35],[3104,16,2109,16],[3104,20,2109,20,"error"],[3104,25,2109,25],[3104,27,2109,27],[3105,18,2110,20],[3105,25,2110,27],[3106,20,2110,29,"data"],[3106,24,2110,33],[3106,26,2110,35],[3106,30,2110,39],[3107,20,2110,41,"error"],[3107,25,2110,46],[3107,27,2110,41,"error"],[3108,18,2110,47],[3108,19,2110,48],[3109,16,2111,16],[3110,16,2112,16],[3110,20,2112,20,"params"],[3110,26,2112,26],[3110,27,2112,27,"factorType"],[3110,37,2112,37],[3110,42,2112,42],[3110,48,2112,48],[3110,53,2112,53],[3110,54,2112,54,"_b"],[3110,56,2112,56],[3110,59,2112,59,"data"],[3110,63,2112,63],[3110,68,2112,68],[3110,72,2112,72],[3110,76,2112,76,"data"],[3110,80,2112,80],[3110,85,2112,85],[3110,90,2112,90],[3110,91,2112,91],[3110,94,2112,94],[3110,99,2112,99],[3110,100,2112,100],[3110,103,2112,103,"data"],[3110,107,2112,107],[3110,108,2112,108,"totp"],[3110,112,2112,112],[3110,118,2112,118],[3110,122,2112,122],[3110,126,2112,126,"_b"],[3110,128,2112,128],[3110,133,2112,133],[3110,138,2112,138],[3110,139,2112,139],[3110,142,2112,142],[3110,147,2112,147],[3110,148,2112,148],[3110,151,2112,151,"_b"],[3110,153,2112,153],[3110,154,2112,154,"qr_code"],[3110,161,2112,161],[3110,162,2112,162],[3110,164,2112,164],[3111,18,2113,20,"data"],[3111,22,2113,24],[3111,23,2113,25,"totp"],[3111,27,2113,29],[3111,28,2113,30,"qr_code"],[3111,35,2113,37],[3111,38,2113,40],[3111,66,2113,68,"data"],[3111,70,2113,72],[3111,71,2113,73,"totp"],[3111,75,2113,77],[3111,76,2113,78,"qr_code"],[3111,83,2113,85],[3111,85,2113,87],[3112,16,2114,16],[3113,16,2115,16],[3113,23,2115,23],[3114,18,2115,25,"data"],[3114,22,2115,29],[3114,24,2115,25,"data"],[3114,28,2115,29],[3115,18,2115,31,"error"],[3115,23,2115,36],[3115,25,2115,38],[3116,16,2115,43],[3116,17,2115,44],[3117,14,2116,12],[3117,15,2116,13],[3118,14,2116,13],[3118,31,2116,13,"_x60"],[3118,35,2116,13],[3119,16,2116,13],[3119,23,2116,13,"_ref36"],[3119,29,2116,13],[3119,30,2116,13,"apply"],[3119,35,2116,13],[3119,42,2116,13,"arguments"],[3119,51,2116,13],[3120,14,2116,13],[3121,12,2116,13],[3121,16,2116,14],[3122,10,2117,8],[3122,11,2117,9],[3122,12,2118,8],[3122,19,2118,15,"error"],[3122,24,2118,20],[3122,26,2118,22],[3123,12,2119,12],[3123,16,2119,16],[3123,17,2119,17],[3123,18,2119,18],[3123,20,2119,20,"errors_1"],[3123,28,2119,28],[3123,29,2119,29,"isAuthError"],[3123,40,2119,40],[3123,42,2119,42,"error"],[3123,47,2119,47],[3123,48,2119,48],[3123,50,2119,50],[3124,14,2120,16],[3124,21,2120,23],[3125,16,2120,25,"data"],[3125,20,2120,29],[3125,22,2120,31],[3125,26,2120,35],[3126,16,2120,37,"error"],[3126,21,2120,42],[3126,23,2120,37,"error"],[3127,14,2120,43],[3127,15,2120,44],[3128,12,2121,12],[3129,12,2122,12],[3129,18,2122,18,"error"],[3129,23,2122,23],[3130,10,2123,8],[3131,8,2124,4],[3131,9,2124,5],[3132,8,2124,5],[3132,17,2095,10,"_enroll"],[3132,24,2095,17,"_enroll"],[3132,25,2095,17,"_x59"],[3132,29,2095,17],[3133,10,2095,17],[3133,17,2095,17,"_enroll2"],[3133,25,2095,17],[3133,26,2095,17,"apply"],[3133,31,2095,17],[3133,38,2095,17,"arguments"],[3133,47,2095,17],[3134,8,2095,17],[3135,8,2095,17],[3135,15,2095,10,"_enroll"],[3135,22,2095,17],[3136,6,2095,17],[3137,6,2125,4],[3138,0,2126,0],[3139,0,2127,0],[3140,4,2125,4],[3141,6,2125,4,"key"],[3141,9,2125,4],[3142,6,2125,4,"value"],[3142,11,2125,4],[3143,8,2125,4],[3143,12,2125,4,"_verify2"],[3143,20,2125,4],[3143,23,2125,4,"_asyncToGenerator"],[3143,40,2125,4],[3143,41,2128,4],[3143,52,2128,18,"params"],[3143,58,2128,24],[3143,60,2128,26],[3144,10,2128,26],[3144,14,2128,26,"_this28"],[3144,21,2128,26],[3145,10,2129,8],[3145,17,2129,15],[3145,21,2129,19],[3145,22,2129,20,"_acquireLock"],[3145,34,2129,32],[3145,35,2129,33],[3145,36,2129,34],[3145,37,2129,35],[3145,52,2129,35,"_asyncToGenerator"],[3145,69,2129,35],[3145,70,2129,37],[3145,83,2129,49],[3146,12,2130,12],[3146,16,2130,16],[3147,14,2131,16],[3147,27,2131,29,"_this28"],[3147,34,2131,33],[3147,35,2131,34,"_useSession"],[3147,46,2131,45],[3148,16,2131,45],[3148,20,2131,45,"_ref38"],[3148,26,2131,45],[3148,29,2131,45,"_asyncToGenerator"],[3148,46,2131,45],[3148,47,2131,46],[3148,58,2131,53,"result"],[3148,64,2131,59],[3148,66,2131,64],[3149,18,2132,20],[3149,22,2132,24,"_a"],[3149,24,2132,26],[3150,18,2133,20],[3150,22,2133,34,"sessionData"],[3150,33,2133,45],[3150,36,2133,71,"result"],[3150,42,2133,77],[3150,43,2133,28,"data"],[3150,47,2133,32],[3151,20,2133,54,"sessionError"],[3151,32,2133,66],[3151,35,2133,71,"result"],[3151,41,2133,77],[3151,42,2133,47,"error"],[3151,47,2133,52],[3152,18,2134,20],[3152,22,2134,24,"sessionError"],[3152,34,2134,36],[3152,36,2134,38],[3153,20,2135,24],[3153,27,2135,31],[3154,22,2135,33,"data"],[3154,26,2135,37],[3154,28,2135,39],[3154,32,2135,43],[3155,22,2135,45,"error"],[3155,27,2135,50],[3155,29,2135,52,"sessionError"],[3156,20,2135,65],[3156,21,2135,66],[3157,18,2136,20],[3158,18,2137,20],[3158,22,2137,20,"_yield21"],[3158,30,2137,20],[3158,39,2137,50],[3158,40,2137,51],[3158,41,2137,52],[3158,43,2137,54,"fetch_1"],[3158,50,2137,61],[3158,51,2137,62,"_request"],[3158,59,2137,70],[3158,61,2137,72,"_this28"],[3158,68,2137,76],[3158,69,2137,77,"fetch"],[3158,74,2137,82],[3158,76,2137,84],[3158,82,2137,90],[3158,84,2137,92],[3158,87,2137,95,"_this28"],[3158,94,2137,99],[3158,95,2137,100,"url"],[3158,98,2137,103],[3158,110,2137,115,"params"],[3158,116,2137,121],[3158,117,2137,122,"factorId"],[3158,125,2137,130],[3158,134,2137,139],[3158,136,2137,141],[3159,22,2138,24,"body"],[3159,26,2138,28],[3159,28,2138,30],[3160,24,2138,32,"code"],[3160,28,2138,36],[3160,30,2138,38,"params"],[3160,36,2138,44],[3160,37,2138,45,"code"],[3160,41,2138,49],[3161,24,2138,51,"challenge_id"],[3161,36,2138,63],[3161,38,2138,65,"params"],[3161,44,2138,71],[3161,45,2138,72,"challengeId"],[3162,22,2138,84],[3162,23,2138,85],[3163,22,2139,24,"headers"],[3163,29,2139,31],[3163,31,2139,33,"_this28"],[3163,38,2139,37],[3163,39,2139,38,"headers"],[3163,46,2139,45],[3164,22,2140,24,"jwt"],[3164,25,2140,27],[3164,27,2140,29],[3164,28,2140,30,"_a"],[3164,30,2140,32],[3164,33,2140,35,"sessionData"],[3164,44,2140,46],[3164,49,2140,51],[3164,53,2140,55],[3164,57,2140,59,"sessionData"],[3164,68,2140,70],[3164,73,2140,75],[3164,78,2140,80],[3164,79,2140,81],[3164,82,2140,84],[3164,87,2140,89],[3164,88,2140,90],[3164,91,2140,93,"sessionData"],[3164,102,2140,104],[3164,103,2140,105,"session"],[3164,110,2140,112],[3164,116,2140,118],[3164,120,2140,122],[3164,124,2140,126,"_a"],[3164,126,2140,128],[3164,131,2140,133],[3164,136,2140,138],[3164,137,2140,139],[3164,140,2140,142],[3164,145,2140,147],[3164,146,2140,148],[3164,149,2140,151,"_a"],[3164,151,2140,153],[3164,152,2140,154,"access_token"],[3165,20,2141,20],[3165,21,2141,21],[3165,22,2141,22],[3166,20,2137,28,"data"],[3166,24,2137,32],[3166,27,2137,32,"_yield21"],[3166,35,2137,32],[3166,36,2137,28,"data"],[3166,40,2137,32],[3167,20,2137,34,"error"],[3167,25,2137,39],[3167,28,2137,39,"_yield21"],[3167,36,2137,39],[3167,37,2137,34,"error"],[3167,42,2137,39],[3168,18,2142,20],[3168,22,2142,24,"error"],[3168,27,2142,29],[3168,29,2142,31],[3169,20,2143,24],[3169,27,2143,31],[3170,22,2143,33,"data"],[3170,26,2143,37],[3170,28,2143,39],[3170,32,2143,43],[3171,22,2143,45,"error"],[3171,27,2143,50],[3171,29,2143,45,"error"],[3172,20,2143,51],[3172,21,2143,52],[3173,18,2144,20],[3174,18,2145,20],[3174,24,2145,26,"_this28"],[3174,31,2145,30],[3174,32,2145,31,"_saveSession"],[3174,44,2145,43],[3174,45,2145,44,"Object"],[3174,51,2145,50],[3174,52,2145,51,"assign"],[3174,58,2145,57],[3174,59,2145,58],[3175,20,2145,60,"expires_at"],[3175,30,2145,70],[3175,32,2145,72,"Math"],[3175,36,2145,76],[3175,37,2145,77,"round"],[3175,42,2145,82],[3175,43,2145,83,"Date"],[3175,47,2145,87],[3175,48,2145,88,"now"],[3175,51,2145,91],[3175,52,2145,92],[3175,53,2145,93],[3175,56,2145,96],[3175,60,2145,100],[3175,61,2145,101],[3175,64,2145,104,"data"],[3175,68,2145,108],[3175,69,2145,109,"expires_in"],[3176,18,2145,120],[3176,19,2145,121],[3176,21,2145,123,"data"],[3176,25,2145,127],[3176,26,2145,128],[3176,27,2145,129],[3177,18,2146,20],[3177,24,2146,26,"_this28"],[3177,31,2146,30],[3177,32,2146,31,"_notifyAllSubscribers"],[3177,53,2146,52],[3177,54,2146,53],[3177,78,2146,77],[3177,80,2146,79,"data"],[3177,84,2146,83],[3177,85,2146,84],[3178,18,2147,20],[3178,25,2147,27],[3179,20,2147,29,"data"],[3179,24,2147,33],[3179,26,2147,29,"data"],[3179,30,2147,33],[3180,20,2147,35,"error"],[3180,25,2147,40],[3180,27,2147,35,"error"],[3181,18,2147,41],[3181,19,2147,42],[3182,16,2148,16],[3182,17,2148,17],[3183,16,2148,17],[3183,33,2148,17,"_x62"],[3183,37,2148,17],[3184,18,2148,17],[3184,25,2148,17,"_ref38"],[3184,31,2148,17],[3184,32,2148,17,"apply"],[3184,37,2148,17],[3184,44,2148,17,"arguments"],[3184,53,2148,17],[3185,16,2148,17],[3186,14,2148,17],[3186,18,2148,18],[3187,12,2149,12],[3187,13,2149,13],[3187,14,2150,12],[3187,21,2150,19,"error"],[3187,26,2150,24],[3187,28,2150,26],[3188,14,2151,16],[3188,18,2151,20],[3188,19,2151,21],[3188,20,2151,22],[3188,22,2151,24,"errors_1"],[3188,30,2151,32],[3188,31,2151,33,"isAuthError"],[3188,42,2151,44],[3188,44,2151,46,"error"],[3188,49,2151,51],[3188,50,2151,52],[3188,52,2151,54],[3189,16,2152,20],[3189,23,2152,27],[3190,18,2152,29,"data"],[3190,22,2152,33],[3190,24,2152,35],[3190,28,2152,39],[3191,18,2152,41,"error"],[3191,23,2152,46],[3191,25,2152,41,"error"],[3192,16,2152,47],[3192,17,2152,48],[3193,14,2153,16],[3194,14,2154,16],[3194,20,2154,22,"error"],[3194,25,2154,27],[3195,12,2155,12],[3196,10,2156,8],[3196,11,2156,9],[3196,13,2156,10],[3197,8,2157,4],[3197,9,2157,5],[3198,8,2157,5],[3198,17,2128,10,"_verify"],[3198,24,2128,17,"_verify"],[3198,25,2128,17,"_x61"],[3198,29,2128,17],[3199,10,2128,17],[3199,17,2128,17,"_verify2"],[3199,25,2128,17],[3199,26,2128,17,"apply"],[3199,31,2128,17],[3199,38,2128,17,"arguments"],[3199,47,2128,17],[3200,8,2128,17],[3201,8,2128,17],[3201,15,2128,10,"_verify"],[3201,22,2128,17],[3202,6,2128,17],[3203,6,2158,4],[3204,0,2159,0],[3205,0,2160,0],[3206,6,2158,4],[3207,4,2158,4],[3208,6,2158,4,"key"],[3208,9,2158,4],[3209,6,2158,4,"value"],[3209,11,2158,4],[3210,8,2158,4],[3210,12,2158,4,"_challenge2"],[3210,23,2158,4],[3210,26,2158,4,"_asyncToGenerator"],[3210,43,2158,4],[3210,44,2161,4],[3210,55,2161,21,"params"],[3210,61,2161,27],[3210,63,2161,29],[3211,10,2161,29],[3211,14,2161,29,"_this29"],[3211,21,2161,29],[3212,10,2162,8],[3212,17,2162,15],[3212,21,2162,19],[3212,22,2162,20,"_acquireLock"],[3212,34,2162,32],[3212,35,2162,33],[3212,36,2162,34],[3212,37,2162,35],[3212,52,2162,35,"_asyncToGenerator"],[3212,69,2162,35],[3212,70,2162,37],[3212,83,2162,49],[3213,12,2163,12],[3213,16,2163,16],[3214,14,2164,16],[3214,27,2164,29,"_this29"],[3214,34,2164,33],[3214,35,2164,34,"_useSession"],[3214,46,2164,45],[3215,16,2164,45],[3215,20,2164,45,"_ref40"],[3215,26,2164,45],[3215,29,2164,45,"_asyncToGenerator"],[3215,46,2164,45],[3215,47,2164,46],[3215,58,2164,53,"result"],[3215,64,2164,59],[3215,66,2164,64],[3216,18,2165,20],[3216,22,2165,24,"_a"],[3216,24,2165,26],[3217,18,2166,20],[3217,22,2166,34,"sessionData"],[3217,33,2166,45],[3217,36,2166,71,"result"],[3217,42,2166,77],[3217,43,2166,28,"data"],[3217,47,2166,32],[3218,20,2166,54,"sessionError"],[3218,32,2166,66],[3218,35,2166,71,"result"],[3218,41,2166,77],[3218,42,2166,47,"error"],[3218,47,2166,52],[3219,18,2167,20],[3219,22,2167,24,"sessionError"],[3219,34,2167,36],[3219,36,2167,38],[3220,20,2168,24],[3220,27,2168,31],[3221,22,2168,33,"data"],[3221,26,2168,37],[3221,28,2168,39],[3221,32,2168,43],[3222,22,2168,45,"error"],[3222,27,2168,50],[3222,29,2168,52,"sessionError"],[3223,20,2168,65],[3223,21,2168,66],[3224,18,2169,20],[3225,18,2170,20],[3225,31,2170,33],[3225,32,2170,34],[3225,33,2170,35],[3225,35,2170,37,"fetch_1"],[3225,42,2170,44],[3225,43,2170,45,"_request"],[3225,51,2170,53],[3225,53,2170,55,"_this29"],[3225,60,2170,59],[3225,61,2170,60,"fetch"],[3225,66,2170,65],[3225,68,2170,67],[3225,74,2170,73],[3225,76,2170,75],[3225,79,2170,78,"_this29"],[3225,86,2170,82],[3225,87,2170,83,"url"],[3225,90,2170,86],[3225,102,2170,98,"params"],[3225,108,2170,104],[3225,109,2170,105,"factorId"],[3225,117,2170,113],[3225,129,2170,125],[3225,131,2170,127],[3226,20,2171,24,"body"],[3226,24,2171,28],[3226,26,2171,30],[3227,22,2171,32,"channel"],[3227,29,2171,39],[3227,31,2171,41,"params"],[3227,37,2171,47],[3227,38,2171,48,"channel"],[3228,20,2171,56],[3228,21,2171,57],[3229,20,2172,24,"headers"],[3229,27,2172,31],[3229,29,2172,33,"_this29"],[3229,36,2172,37],[3229,37,2172,38,"headers"],[3229,44,2172,45],[3230,20,2173,24,"jwt"],[3230,23,2173,27],[3230,25,2173,29],[3230,26,2173,30,"_a"],[3230,28,2173,32],[3230,31,2173,35,"sessionData"],[3230,42,2173,46],[3230,47,2173,51],[3230,51,2173,55],[3230,55,2173,59,"sessionData"],[3230,66,2173,70],[3230,71,2173,75],[3230,76,2173,80],[3230,77,2173,81],[3230,80,2173,84],[3230,85,2173,89],[3230,86,2173,90],[3230,89,2173,93,"sessionData"],[3230,100,2173,104],[3230,101,2173,105,"session"],[3230,108,2173,112],[3230,114,2173,118],[3230,118,2173,122],[3230,122,2173,126,"_a"],[3230,124,2173,128],[3230,129,2173,133],[3230,134,2173,138],[3230,135,2173,139],[3230,138,2173,142],[3230,143,2173,147],[3230,144,2173,148],[3230,147,2173,151,"_a"],[3230,149,2173,153],[3230,150,2173,154,"access_token"],[3231,18,2174,20],[3231,19,2174,21],[3231,20,2174,22],[3232,16,2175,16],[3232,17,2175,17],[3233,16,2175,17],[3233,33,2175,17,"_x64"],[3233,37,2175,17],[3234,18,2175,17],[3234,25,2175,17,"_ref40"],[3234,31,2175,17],[3234,32,2175,17,"apply"],[3234,37,2175,17],[3234,44,2175,17,"arguments"],[3234,53,2175,17],[3235,16,2175,17],[3236,14,2175,17],[3236,18,2175,18],[3237,12,2176,12],[3237,13,2176,13],[3237,14,2177,12],[3237,21,2177,19,"error"],[3237,26,2177,24],[3237,28,2177,26],[3238,14,2178,16],[3238,18,2178,20],[3238,19,2178,21],[3238,20,2178,22],[3238,22,2178,24,"errors_1"],[3238,30,2178,32],[3238,31,2178,33,"isAuthError"],[3238,42,2178,44],[3238,44,2178,46,"error"],[3238,49,2178,51],[3238,50,2178,52],[3238,52,2178,54],[3239,16,2179,20],[3239,23,2179,27],[3240,18,2179,29,"data"],[3240,22,2179,33],[3240,24,2179,35],[3240,28,2179,39],[3241,18,2179,41,"error"],[3241,23,2179,46],[3241,25,2179,41,"error"],[3242,16,2179,47],[3242,17,2179,48],[3243,14,2180,16],[3244,14,2181,16],[3244,20,2181,22,"error"],[3244,25,2181,27],[3245,12,2182,12],[3246,10,2183,8],[3246,11,2183,9],[3246,13,2183,10],[3247,8,2184,4],[3247,9,2184,5],[3248,8,2184,5],[3248,17,2161,10,"_challenge"],[3248,27,2161,20,"_challenge"],[3248,28,2161,20,"_x63"],[3248,32,2161,20],[3249,10,2161,20],[3249,17,2161,20,"_challenge2"],[3249,28,2161,20],[3249,29,2161,20,"apply"],[3249,34,2161,20],[3249,41,2161,20,"arguments"],[3249,50,2161,20],[3250,8,2161,20],[3251,8,2161,20],[3251,15,2161,10,"_challenge"],[3251,25,2161,20],[3252,6,2161,20],[3253,6,2185,4],[3254,0,2186,0],[3255,0,2187,0],[3256,6,2185,4],[3257,4,2185,4],[3258,6,2185,4,"key"],[3258,9,2185,4],[3259,6,2185,4,"value"],[3259,11,2185,4],[3260,8,2185,4],[3260,12,2185,4,"_challengeAndVerify2"],[3260,32,2185,4],[3260,35,2185,4,"_asyncToGenerator"],[3260,52,2185,4],[3260,53,2188,4],[3260,64,2188,30,"params"],[3260,70,2188,36],[3260,72,2188,38],[3261,10,2189,8],[3262,10,2190,8],[3263,10,2191,8],[3263,14,2191,8,"_yield$this$_challeng"],[3263,35,2191,8],[3263,44,2191,69],[3263,48,2191,73],[3263,49,2191,74,"_challenge"],[3263,59,2191,84],[3263,60,2191,85],[3264,14,2192,12,"factorId"],[3264,22,2192,20],[3264,24,2192,22,"params"],[3264,30,2192,28],[3264,31,2192,29,"factorId"],[3265,12,2193,8],[3265,13,2193,9],[3265,14,2193,10],[3266,12,2191,22,"challengeData"],[3266,25,2191,35],[3266,28,2191,35,"_yield$this$_challeng"],[3266,49,2191,35],[3266,50,2191,16,"data"],[3266,54,2191,20],[3267,12,2191,44,"challengeError"],[3267,26,2191,58],[3267,29,2191,58,"_yield$this$_challeng"],[3267,50,2191,58],[3267,51,2191,37,"error"],[3267,56,2191,42],[3268,10,2194,8],[3268,14,2194,12,"challengeError"],[3268,28,2194,26],[3268,30,2194,28],[3269,12,2195,12],[3269,19,2195,19],[3270,14,2195,21,"data"],[3270,18,2195,25],[3270,20,2195,27],[3270,24,2195,31],[3271,14,2195,33,"error"],[3271,19,2195,38],[3271,21,2195,40,"challengeError"],[3272,12,2195,55],[3272,13,2195,56],[3273,10,2196,8],[3274,10,2197,8],[3274,23,2197,21],[3274,27,2197,25],[3274,28,2197,26,"_verify"],[3274,35,2197,33],[3274,36,2197,34],[3275,12,2198,12,"factorId"],[3275,20,2198,20],[3275,22,2198,22,"params"],[3275,28,2198,28],[3275,29,2198,29,"factorId"],[3275,37,2198,37],[3276,12,2199,12,"challengeId"],[3276,23,2199,23],[3276,25,2199,25,"challengeData"],[3276,38,2199,38],[3276,39,2199,39,"id"],[3276,41,2199,41],[3277,12,2200,12,"code"],[3277,16,2200,16],[3277,18,2200,18,"params"],[3277,24,2200,24],[3277,25,2200,25,"code"],[3278,10,2201,8],[3278,11,2201,9],[3278,12,2201,10],[3279,8,2202,4],[3279,9,2202,5],[3280,8,2202,5],[3280,17,2188,10,"_challengeAndVerify"],[3280,36,2188,29,"_challengeAndVerify"],[3280,37,2188,29,"_x65"],[3280,41,2188,29],[3281,10,2188,29],[3281,17,2188,29,"_challengeAndVerify2"],[3281,37,2188,29],[3281,38,2188,29,"apply"],[3281,43,2188,29],[3281,50,2188,29,"arguments"],[3281,59,2188,29],[3282,8,2188,29],[3283,8,2188,29],[3283,15,2188,10,"_challengeAndVerify"],[3283,34,2188,29],[3284,6,2188,29],[3285,6,2203,4],[3286,0,2204,0],[3287,0,2205,0],[3288,6,2203,4],[3289,4,2203,4],[3290,6,2203,4,"key"],[3290,9,2203,4],[3291,6,2203,4,"value"],[3291,11,2203,4],[3292,8,2203,4],[3292,12,2203,4,"_listFactors2"],[3292,25,2203,4],[3292,28,2203,4,"_asyncToGenerator"],[3292,45,2203,4],[3292,46,2206,4],[3292,59,2206,25],[3293,10,2207,8],[3294,10,2208,8],[3294,14,2208,8,"_yield$this$getUser2"],[3294,34,2208,8],[3294,43,2208,60],[3294,47,2208,64],[3294,48,2208,65,"getUser"],[3294,55,2208,72],[3294,56,2208,73],[3294,57,2208,74],[3295,12,2208,24,"user"],[3295,16,2208,28],[3295,19,2208,28,"_yield$this$getUser2"],[3295,39,2208,28],[3295,40,2208,16,"data"],[3295,44,2208,20],[3295,45,2208,24,"user"],[3295,49,2208,28],[3296,12,2208,39,"userError"],[3296,21,2208,48],[3296,24,2208,48,"_yield$this$getUser2"],[3296,44,2208,48],[3296,45,2208,32,"error"],[3296,50,2208,37],[3297,10,2209,8],[3297,14,2209,12,"userError"],[3297,23,2209,21],[3297,25,2209,23],[3298,12,2210,12],[3298,19,2210,19],[3299,14,2210,21,"data"],[3299,18,2210,25],[3299,20,2210,27],[3299,24,2210,31],[3300,14,2210,33,"error"],[3300,19,2210,38],[3300,21,2210,40,"userError"],[3301,12,2210,50],[3301,13,2210,51],[3302,10,2211,8],[3303,10,2212,8],[3303,14,2212,14,"factors"],[3303,21,2212,21],[3303,24,2212,24],[3303,25,2212,25,"user"],[3303,29,2212,29],[3303,34,2212,34],[3303,38,2212,38],[3303,42,2212,42,"user"],[3303,46,2212,46],[3303,51,2212,51],[3303,56,2212,56],[3303,57,2212,57],[3303,60,2212,60],[3303,65,2212,65],[3303,66,2212,66],[3303,69,2212,69,"user"],[3303,73,2212,73],[3303,74,2212,74,"factors"],[3303,81,2212,81],[3303,86,2212,86],[3303,88,2212,88],[3304,10,2213,8],[3304,14,2213,14,"totp"],[3304,18,2213,18],[3304,21,2213,21,"factors"],[3304,28,2213,28],[3304,29,2213,29,"filter"],[3304,35,2213,35],[3304,36,2213,36],[3304,46,2213,37,"factor"],[3304,52,2213,43],[3305,12,2213,43],[3305,19,2213,48,"factor"],[3305,25,2213,54],[3305,26,2213,55,"factor_type"],[3305,37,2213,66],[3305,42,2213,71],[3305,48,2213,77],[3305,52,2213,81,"factor"],[3305,58,2213,87],[3305,59,2213,88,"status"],[3305,65,2213,94],[3305,70,2213,99],[3305,80,2213,109],[3306,10,2213,109],[3306,12,2213,110],[3307,10,2214,8],[3307,14,2214,14,"phone"],[3307,19,2214,19],[3307,22,2214,22,"factors"],[3307,29,2214,29],[3307,30,2214,30,"filter"],[3307,36,2214,36],[3307,37,2214,37],[3307,47,2214,38,"factor"],[3307,53,2214,44],[3308,12,2214,44],[3308,19,2214,49,"factor"],[3308,25,2214,55],[3308,26,2214,56,"factor_type"],[3308,37,2214,67],[3308,42,2214,72],[3308,49,2214,79],[3308,53,2214,83,"factor"],[3308,59,2214,89],[3308,60,2214,90,"status"],[3308,66,2214,96],[3308,71,2214,101],[3308,81,2214,111],[3309,10,2214,111],[3309,12,2214,112],[3310,10,2215,8],[3310,17,2215,15],[3311,12,2216,12,"data"],[3311,16,2216,16],[3311,18,2216,18],[3312,14,2217,16,"all"],[3312,17,2217,19],[3312,19,2217,21,"factors"],[3312,26,2217,28],[3313,14,2218,16,"totp"],[3313,18,2218,20],[3313,20,2218,16,"totp"],[3313,24,2218,20],[3314,14,2219,16,"phone"],[3314,19,2219,21],[3314,21,2219,16,"phone"],[3315,12,2220,12],[3315,13,2220,13],[3316,12,2221,12,"error"],[3316,17,2221,17],[3316,19,2221,19],[3317,10,2222,8],[3317,11,2222,9],[3318,8,2223,4],[3318,9,2223,5],[3319,8,2223,5],[3319,17,2206,10,"_listFactors"],[3319,29,2206,22,"_listFactors"],[3319,30,2206,22],[3320,10,2206,22],[3320,17,2206,22,"_listFactors2"],[3320,30,2206,22],[3320,31,2206,22,"apply"],[3320,36,2206,22],[3320,43,2206,22,"arguments"],[3320,52,2206,22],[3321,8,2206,22],[3322,8,2206,22],[3322,15,2206,10,"_listFactors"],[3322,27,2206,22],[3323,6,2206,22],[3324,6,2224,4],[3325,0,2225,0],[3326,0,2226,0],[3327,6,2224,4],[3328,4,2224,4],[3329,6,2224,4,"key"],[3329,9,2224,4],[3330,6,2224,4,"value"],[3330,11,2224,4],[3331,8,2224,4],[3331,12,2224,4,"_getAuthenticatorAssuranceLevel2"],[3331,44,2224,4],[3331,47,2224,4,"_asyncToGenerator"],[3331,64,2224,4],[3331,65,2227,4],[3331,78,2227,44],[3332,10,2227,44],[3332,14,2227,44,"_this30"],[3332,21,2227,44],[3333,10,2228,8],[3333,17,2228,15],[3333,21,2228,19],[3333,22,2228,20,"_acquireLock"],[3333,34,2228,32],[3333,35,2228,33],[3333,36,2228,34],[3333,37,2228,35],[3333,52,2228,35,"_asyncToGenerator"],[3333,69,2228,35],[3333,70,2228,37],[3333,83,2228,49],[3334,12,2229,12],[3334,25,2229,25,"_this30"],[3334,32,2229,29],[3334,33,2229,30,"_useSession"],[3334,44,2229,41],[3335,14,2229,41],[3335,18,2229,41,"_ref42"],[3335,24,2229,41],[3335,27,2229,41,"_asyncToGenerator"],[3335,44,2229,41],[3335,45,2229,42],[3335,56,2229,49,"result"],[3335,62,2229,55],[3335,64,2229,60],[3336,16,2230,16],[3336,20,2230,20,"_a"],[3336,22,2230,22],[3336,24,2230,24,"_b"],[3336,26,2230,26],[3337,16,2231,16],[3337,20,2231,32,"session"],[3337,27,2231,39],[3337,30,2231,68,"result"],[3337,36,2231,74],[3337,37,2231,24,"data"],[3337,41,2231,28],[3337,42,2231,32,"session"],[3337,49,2231,39],[3338,18,2231,50,"sessionError"],[3338,30,2231,62],[3338,33,2231,68,"result"],[3338,39,2231,74],[3338,40,2231,43,"error"],[3338,45,2231,48],[3339,16,2232,16],[3339,20,2232,20,"sessionError"],[3339,32,2232,32],[3339,34,2232,34],[3340,18,2233,20],[3340,25,2233,27],[3341,20,2233,29,"data"],[3341,24,2233,33],[3341,26,2233,35],[3341,30,2233,39],[3342,20,2233,41,"error"],[3342,25,2233,46],[3342,27,2233,48,"sessionError"],[3343,18,2233,61],[3343,19,2233,62],[3344,16,2234,16],[3345,16,2235,16],[3345,20,2235,20],[3345,21,2235,21,"session"],[3345,28,2235,28],[3345,30,2235,30],[3346,18,2236,20],[3346,25,2236,27],[3347,20,2237,24,"data"],[3347,24,2237,28],[3347,26,2237,30],[3348,22,2237,32,"currentLevel"],[3348,34,2237,44],[3348,36,2237,46],[3348,40,2237,50],[3349,22,2237,52,"nextLevel"],[3349,31,2237,61],[3349,33,2237,63],[3349,37,2237,67],[3350,22,2237,69,"currentAuthenticationMethods"],[3350,50,2237,97],[3350,52,2237,99],[3351,20,2237,102],[3351,21,2237,103],[3352,20,2238,24,"error"],[3352,25,2238,29],[3352,27,2238,31],[3353,18,2239,20],[3353,19,2239,21],[3354,16,2240,16],[3355,16,2241,16],[3355,20,2241,16,"_ref43"],[3355,26,2241,16],[3355,29,2241,36],[3355,30,2241,37],[3355,31,2241,38],[3355,33,2241,40,"helpers_1"],[3355,42,2241,49],[3355,43,2241,50,"decodeJWT"],[3355,52,2241,59],[3355,54,2241,61,"session"],[3355,61,2241,68],[3355,62,2241,69,"access_token"],[3355,74,2241,81],[3355,75,2241,82],[3356,18,2241,24,"payload"],[3356,25,2241,31],[3356,28,2241,31,"_ref43"],[3356,34,2241,31],[3356,35,2241,24,"payload"],[3356,42,2241,31],[3357,16,2242,16],[3357,20,2242,20,"currentLevel"],[3357,32,2242,32],[3357,35,2242,35],[3357,39,2242,39],[3358,16,2243,16],[3358,20,2243,20,"payload"],[3358,27,2243,27],[3358,28,2243,28,"aal"],[3358,31,2243,31],[3358,33,2243,33],[3359,18,2244,20,"currentLevel"],[3359,30,2244,32],[3359,33,2244,35,"payload"],[3359,40,2244,42],[3359,41,2244,43,"aal"],[3359,44,2244,46],[3360,16,2245,16],[3361,16,2246,16],[3361,20,2246,20,"nextLevel"],[3361,29,2246,29],[3361,32,2246,32,"currentLevel"],[3361,44,2246,44],[3362,16,2247,16],[3362,20,2247,22,"verifiedFactors"],[3362,35,2247,37],[3362,38,2247,40],[3362,39,2247,41,"_b"],[3362,41,2247,43],[3362,44,2247,46],[3362,45,2247,47,"_a"],[3362,47,2247,49],[3362,50,2247,52,"session"],[3362,57,2247,59],[3362,58,2247,60,"user"],[3362,62,2247,64],[3362,63,2247,65,"factors"],[3362,70,2247,72],[3362,76,2247,78],[3362,80,2247,82],[3362,84,2247,86,"_a"],[3362,86,2247,88],[3362,91,2247,93],[3362,96,2247,98],[3362,97,2247,99],[3362,100,2247,102],[3362,105,2247,107],[3362,106,2247,108],[3362,109,2247,111,"_a"],[3362,111,2247,113],[3362,112,2247,114,"filter"],[3362,118,2247,120],[3362,119,2247,121],[3362,129,2247,122,"factor"],[3362,135,2247,128],[3363,18,2247,128],[3363,25,2247,133,"factor"],[3363,31,2247,139],[3363,32,2247,140,"status"],[3363,38,2247,146],[3363,43,2247,151],[3363,53,2247,161],[3364,16,2247,161],[3364,18,2247,162],[3364,24,2247,168],[3364,28,2247,172],[3364,32,2247,176,"_b"],[3364,34,2247,178],[3364,39,2247,183],[3364,44,2247,188],[3364,45,2247,189],[3364,48,2247,192,"_b"],[3364,50,2247,194],[3364,53,2247,197],[3364,55,2247,199],[3365,16,2248,16],[3365,20,2248,20,"verifiedFactors"],[3365,35,2248,35],[3365,36,2248,36,"length"],[3365,42,2248,42],[3365,45,2248,45],[3365,46,2248,46],[3365,48,2248,48],[3366,18,2249,20,"nextLevel"],[3366,27,2249,29],[3366,30,2249,32],[3366,36,2249,38],[3367,16,2250,16],[3368,16,2251,16],[3368,20,2251,22,"currentAuthenticationMethods"],[3368,48,2251,50],[3368,51,2251,53,"payload"],[3368,58,2251,60],[3368,59,2251,61,"amr"],[3368,62,2251,64],[3368,66,2251,68],[3368,68,2251,70],[3369,16,2252,16],[3369,23,2252,23],[3370,18,2252,25,"data"],[3370,22,2252,29],[3370,24,2252,31],[3371,20,2252,33,"currentLevel"],[3371,32,2252,45],[3371,34,2252,33,"currentLevel"],[3371,46,2252,45],[3372,20,2252,47,"nextLevel"],[3372,29,2252,56],[3372,31,2252,47,"nextLevel"],[3372,40,2252,56],[3373,20,2252,58,"currentAuthenticationMethods"],[3373,48,2252,86],[3373,50,2252,58,"currentAuthenticationMethods"],[3374,18,2252,87],[3374,19,2252,88],[3375,18,2252,90,"error"],[3375,23,2252,95],[3375,25,2252,97],[3376,16,2252,102],[3376,17,2252,103],[3377,14,2253,12],[3377,15,2253,13],[3378,14,2253,13],[3378,31,2253,13,"_x66"],[3378,35,2253,13],[3379,16,2253,13],[3379,23,2253,13,"_ref42"],[3379,29,2253,13],[3379,30,2253,13,"apply"],[3379,35,2253,13],[3379,42,2253,13,"arguments"],[3379,51,2253,13],[3380,14,2253,13],[3381,12,2253,13],[3381,16,2253,14],[3382,10,2254,8],[3382,11,2254,9],[3382,13,2254,10],[3383,8,2255,4],[3383,9,2255,5],[3384,8,2255,5],[3384,17,2227,10,"_getAuthenticatorAssuranceLevel"],[3384,48,2227,41,"_getAuthenticatorAssuranceLevel"],[3384,49,2227,41],[3385,10,2227,41],[3385,17,2227,41,"_getAuthenticatorAssuranceLevel2"],[3385,49,2227,41],[3385,50,2227,41,"apply"],[3385,55,2227,41],[3385,62,2227,41,"arguments"],[3385,71,2227,41],[3386,8,2227,41],[3387,8,2227,41],[3387,15,2227,10,"_getAuthenticatorAssuranceLevel"],[3387,46,2227,41],[3388,6,2227,41],[3389,4,2227,41],[3390,6,2227,41,"key"],[3390,9,2227,41],[3391,6,2227,41,"value"],[3391,11,2227,41],[3392,8,2227,41],[3392,12,2227,41,"_fetchJwk"],[3392,21,2227,41],[3392,24,2227,41,"_asyncToGenerator"],[3392,41,2227,41],[3392,42,2256,4],[3392,53,2256,19,"kid"],[3392,56,2256,22],[3392,58,2256,45],[3393,10,2256,45],[3393,14,2256,24,"jwks"],[3393,18,2256,28],[3393,21,2256,28,"arguments"],[3393,30,2256,28],[3393,31,2256,28,"length"],[3393,37,2256,28],[3393,45,2256,28,"arguments"],[3393,54,2256,28],[3393,62,2256,28,"undefined"],[3393,71,2256,28],[3393,74,2256,28,"arguments"],[3393,83,2256,28],[3393,89,2256,31],[3394,12,2256,33,"keys"],[3394,16,2256,37],[3394,18,2256,39],[3395,10,2256,42],[3395,11,2256,43],[3396,10,2257,8],[3397,10,2258,8],[3397,14,2258,12,"jwk"],[3397,17,2258,15],[3397,20,2258,18,"jwks"],[3397,24,2258,22],[3397,25,2258,23,"keys"],[3397,29,2258,27],[3397,30,2258,28,"find"],[3397,34,2258,32],[3397,35,2258,33],[3397,45,2258,34,"key"],[3397,48,2258,37],[3398,12,2258,37],[3398,19,2258,42,"key"],[3398,22,2258,45],[3398,23,2258,46,"kid"],[3398,26,2258,49],[3398,31,2258,54,"kid"],[3398,34,2258,57],[3399,10,2258,57],[3399,12,2258,58],[3400,10,2259,8],[3400,14,2259,12,"jwk"],[3400,17,2259,15],[3400,19,2259,17],[3401,12,2260,12],[3401,19,2260,19,"jwk"],[3401,22,2260,22],[3402,10,2261,8],[3403,10,2262,8],[3403,14,2262,14,"now"],[3403,17,2262,17],[3403,20,2262,20,"Date"],[3403,24,2262,24],[3403,25,2262,25,"now"],[3403,28,2262,28],[3403,29,2262,29],[3403,30,2262,30],[3404,10,2263,8],[3405,10,2264,8,"jwk"],[3405,13,2264,11],[3405,16,2264,14],[3405,20,2264,18],[3405,21,2264,19,"jwks"],[3405,25,2264,23],[3405,26,2264,24,"keys"],[3405,30,2264,28],[3405,31,2264,29,"find"],[3405,35,2264,33],[3405,36,2264,34],[3405,46,2264,35,"key"],[3405,49,2264,38],[3406,12,2264,38],[3406,19,2264,43,"key"],[3406,22,2264,46],[3406,23,2264,47,"kid"],[3406,26,2264,50],[3406,31,2264,55,"kid"],[3406,34,2264,58],[3407,10,2264,58],[3407,12,2264,59],[3408,10,2265,8],[3409,10,2266,8],[3409,14,2266,12,"jwk"],[3409,17,2266,15],[3409,21,2266,19],[3409,25,2266,23],[3409,26,2266,24,"jwks_cached_at"],[3409,40,2266,38],[3409,43,2266,41,"constants_1"],[3409,54,2266,52],[3409,55,2266,53,"JWKS_TTL"],[3409,63,2266,61],[3409,66,2266,64,"now"],[3409,69,2266,67],[3409,71,2266,69],[3410,12,2267,12],[3410,19,2267,19,"jwk"],[3410,22,2267,22],[3411,10,2268,8],[3412,10,2269,8],[3413,10,2270,8],[3413,14,2270,8,"_yield22"],[3413,22,2270,8],[3413,31,2270,38],[3413,32,2270,39],[3413,33,2270,40],[3413,35,2270,42,"fetch_1"],[3413,42,2270,49],[3413,43,2270,50,"_request"],[3413,51,2270,58],[3413,53,2270,60],[3413,57,2270,64],[3413,58,2270,65,"fetch"],[3413,63,2270,70],[3413,65,2270,72],[3413,70,2270,77],[3413,72,2270,79],[3413,75,2270,82],[3413,79,2270,86],[3413,80,2270,87,"url"],[3413,83,2270,90],[3413,107,2270,114],[3413,109,2270,116],[3414,14,2271,12,"headers"],[3414,21,2271,19],[3414,23,2271,21],[3414,27,2271,25],[3414,28,2271,26,"headers"],[3415,12,2272,8],[3415,13,2272,9],[3415,14,2272,10],[3416,12,2270,16,"data"],[3416,16,2270,20],[3416,19,2270,20,"_yield22"],[3416,27,2270,20],[3416,28,2270,16,"data"],[3416,32,2270,20],[3417,12,2270,22,"error"],[3417,17,2270,27],[3417,20,2270,27,"_yield22"],[3417,28,2270,27],[3417,29,2270,22,"error"],[3417,34,2270,27],[3418,10,2273,8],[3418,14,2273,12,"error"],[3418,19,2273,17],[3418,21,2273,19],[3419,12,2274,12],[3419,18,2274,18,"error"],[3419,23,2274,23],[3420,10,2275,8],[3421,10,2276,8],[3421,14,2276,12],[3421,15,2276,13,"data"],[3421,19,2276,17],[3421,20,2276,18,"keys"],[3421,24,2276,22],[3421,28,2276,26,"data"],[3421,32,2276,30],[3421,33,2276,31,"keys"],[3421,37,2276,35],[3421,38,2276,36,"length"],[3421,44,2276,42],[3421,49,2276,47],[3421,50,2276,48],[3421,52,2276,50],[3422,12,2277,12],[3422,19,2277,19],[3422,23,2277,23],[3423,10,2278,8],[3424,10,2279,8],[3424,14,2279,12],[3424,15,2279,13,"jwks"],[3424,19,2279,17],[3424,22,2279,20,"data"],[3424,26,2279,24],[3425,10,2280,8],[3425,14,2280,12],[3425,15,2280,13,"jwks_cached_at"],[3425,29,2280,27],[3425,32,2280,30,"now"],[3425,35,2280,33],[3426,10,2281,8],[3427,10,2282,8,"jwk"],[3427,13,2282,11],[3427,16,2282,14,"data"],[3427,20,2282,18],[3427,21,2282,19,"keys"],[3427,25,2282,23],[3427,26,2282,24,"find"],[3427,30,2282,28],[3427,31,2282,29],[3427,41,2282,30,"key"],[3427,44,2282,33],[3428,12,2282,33],[3428,19,2282,38,"key"],[3428,22,2282,41],[3428,23,2282,42,"kid"],[3428,26,2282,45],[3428,31,2282,50,"kid"],[3428,34,2282,53],[3429,10,2282,53],[3429,12,2282,54],[3430,10,2283,8],[3430,14,2283,12],[3430,15,2283,13,"jwk"],[3430,18,2283,16],[3430,20,2283,18],[3431,12,2284,12],[3431,19,2284,19],[3431,23,2284,23],[3432,10,2285,8],[3433,10,2286,8],[3433,17,2286,15,"jwk"],[3433,20,2286,18],[3434,8,2287,4],[3434,9,2287,5],[3435,8,2287,5],[3435,17,2256,10,"fetchJwk"],[3435,25,2256,18,"fetchJwk"],[3435,26,2256,18,"_x67"],[3435,30,2256,18],[3436,10,2256,18],[3436,17,2256,18,"_fetchJwk"],[3436,26,2256,18],[3436,27,2256,18,"apply"],[3436,32,2256,18],[3436,39,2256,18,"arguments"],[3436,48,2256,18],[3437,8,2256,18],[3438,8,2256,18],[3438,15,2256,10,"fetchJwk"],[3438,23,2256,18],[3439,6,2256,18],[3440,6,2288,4],[3441,0,2289,0],[3442,0,2290,0],[3443,0,2291,0],[3444,0,2292,0],[3445,0,2293,0],[3446,0,2294,0],[3447,0,2295,0],[3448,0,2296,0],[3449,0,2297,0],[3450,0,2298,0],[3451,0,2299,0],[3452,0,2300,0],[3453,0,2301,0],[3454,0,2302,0],[3455,0,2303,0],[3456,4,2288,4],[3457,6,2288,4,"key"],[3457,9,2288,4],[3458,6,2288,4,"value"],[3458,11,2288,4],[3459,8,2288,4],[3459,12,2288,4,"_getClaims"],[3459,22,2288,4],[3459,25,2288,4,"_asyncToGenerator"],[3459,42,2288,4],[3459,43,2304,4],[3459,54,2304,20,"jwt"],[3459,57,2304,23],[3459,59,2304,39],[3460,10,2304,39],[3460,14,2304,25,"options"],[3460,21,2304,32],[3460,24,2304,32,"arguments"],[3460,33,2304,32],[3460,34,2304,32,"length"],[3460,40,2304,32],[3460,48,2304,32,"arguments"],[3460,57,2304,32],[3460,65,2304,32,"undefined"],[3460,74,2304,32],[3460,77,2304,32,"arguments"],[3460,86,2304,32],[3460,92,2304,35],[3460,93,2304,36],[3460,94,2304,37],[3461,10,2305,8],[3461,14,2305,12],[3462,12,2306,12],[3462,16,2306,16,"token"],[3462,21,2306,21],[3462,24,2306,24,"jwt"],[3462,27,2306,27],[3463,12,2307,12],[3463,16,2307,16],[3463,17,2307,17,"token"],[3463,22,2307,22],[3463,24,2307,24],[3464,14,2308,16],[3464,18,2308,16,"_yield$this$getSessio"],[3464,39,2308,16],[3464,48,2308,46],[3464,52,2308,50],[3464,53,2308,51,"getSession"],[3464,63,2308,61],[3464,64,2308,62],[3464,65,2308,63],[3465,16,2308,24,"data"],[3465,20,2308,28],[3465,23,2308,28,"_yield$this$getSessio"],[3465,44,2308,28],[3465,45,2308,24,"data"],[3465,49,2308,28],[3466,16,2308,30,"error"],[3466,21,2308,35],[3466,24,2308,35,"_yield$this$getSessio"],[3466,45,2308,35],[3466,46,2308,30,"error"],[3466,51,2308,35],[3467,14,2309,16],[3467,18,2309,20,"error"],[3467,23,2309,25],[3467,27,2309,29],[3467,28,2309,30,"data"],[3467,32,2309,34],[3467,33,2309,35,"session"],[3467,40,2309,42],[3467,42,2309,44],[3468,16,2310,20],[3468,23,2310,27],[3469,18,2310,29,"data"],[3469,22,2310,33],[3469,24,2310,35],[3469,28,2310,39],[3470,18,2310,41,"error"],[3470,23,2310,46],[3470,25,2310,41,"error"],[3471,16,2310,47],[3471,17,2310,48],[3472,14,2311,16],[3473,14,2312,16,"token"],[3473,19,2312,21],[3473,22,2312,24,"data"],[3473,26,2312,28],[3473,27,2312,29,"session"],[3473,34,2312,36],[3473,35,2312,37,"access_token"],[3473,47,2312,49],[3474,12,2313,12],[3475,12,2314,12],[3475,16,2314,12,"_ref44"],[3475,22,2314,12],[3475,25,2314,101],[3475,26,2314,102],[3475,27,2314,103],[3475,29,2314,105,"helpers_1"],[3475,38,2314,114],[3475,39,2314,115,"decodeJWT"],[3475,48,2314,124],[3475,50,2314,126,"token"],[3475,55,2314,131],[3475,56,2314,132],[3476,14,2314,20,"header"],[3476,20,2314,26],[3476,23,2314,26,"_ref44"],[3476,29,2314,26],[3476,30,2314,20,"header"],[3476,36,2314,26],[3477,14,2314,28,"payload"],[3477,21,2314,35],[3477,24,2314,35,"_ref44"],[3477,30,2314,35],[3477,31,2314,28,"payload"],[3477,38,2314,35],[3478,14,2314,37,"signature"],[3478,23,2314,46],[3478,26,2314,46,"_ref44"],[3478,32,2314,46],[3478,33,2314,37,"signature"],[3478,42,2314,46],[3479,14,2314,46,"_ref44$raw"],[3479,24,2314,46],[3479,27,2314,46,"_ref44"],[3479,33,2314,46],[3479,34,2314,48,"raw"],[3479,37,2314,51],[3480,14,2314,63,"rawHeader"],[3480,23,2314,72],[3480,26,2314,72,"_ref44$raw"],[3480,36,2314,72],[3480,37,2314,55,"header"],[3480,43,2314,61],[3481,14,2314,83,"rawPayload"],[3481,24,2314,93],[3481,27,2314,93,"_ref44$raw"],[3481,37,2314,93],[3481,38,2314,74,"payload"],[3481,45,2314,81],[3482,12,2315,12],[3482,16,2315,16],[3482,18,2315,18,"options"],[3482,25,2315,25],[3482,30,2315,30],[3482,34,2315,34],[3482,38,2315,38,"options"],[3482,45,2315,45],[3482,50,2315,50],[3482,55,2315,55],[3482,56,2315,56],[3482,59,2315,59],[3482,64,2315,64],[3482,65,2315,65],[3482,68,2315,68,"options"],[3482,75,2315,75],[3482,76,2315,76,"allowExpired"],[3482,88,2315,88],[3482,89,2315,89],[3482,91,2315,91],[3483,14,2316,16],[3484,14,2317,16],[3484,15,2317,17],[3484,16,2317,18],[3484,18,2317,20,"helpers_1"],[3484,27,2317,29],[3484,28,2317,30,"validateExp"],[3484,39,2317,41],[3484,41,2317,43,"payload"],[3484,48,2317,50],[3484,49,2317,51,"exp"],[3484,52,2317,54],[3484,53,2317,55],[3485,12,2318,12],[3486,12,2319,12],[3486,16,2319,18,"signingKey"],[3486,26,2319,28],[3486,29,2319,31],[3486,30,2319,32,"header"],[3486,36,2319,38],[3486,37,2319,39,"alg"],[3486,40,2319,42],[3486,44,2320,16,"header"],[3486,50,2320,22],[3486,51,2320,23,"alg"],[3486,54,2320,26],[3486,55,2320,27,"startsWith"],[3486,65,2320,37],[3486,66,2320,38],[3486,70,2320,42],[3486,71,2320,43],[3486,75,2321,16],[3486,76,2321,17,"header"],[3486,82,2321,23],[3486,83,2321,24,"kid"],[3486,86,2321,27],[3486,90,2322,16],[3486,92,2322,18],[3486,100,2322,26],[3486,104,2322,30,"globalThis"],[3486,114,2322,40],[3486,118,2322,44],[3486,126,2322,52],[3486,130,2322,56,"globalThis"],[3486,140,2322,66],[3486,141,2322,67,"crypto"],[3486,147,2322,73],[3486,148,2322,74],[3486,151,2323,18],[3486,155,2323,22],[3486,164,2324,24],[3486,168,2324,28],[3486,169,2324,29,"fetchJwk"],[3486,177,2324,37],[3486,178,2324,38,"header"],[3486,184,2324,44],[3486,185,2324,45,"kid"],[3486,188,2324,48],[3486,190,2324,50],[3486,191,2324,51,"options"],[3486,198,2324,58],[3486,203,2324,63],[3486,207,2324,67],[3486,211,2324,71,"options"],[3486,218,2324,78],[3486,223,2324,83],[3486,228,2324,88],[3486,229,2324,89],[3486,232,2324,92],[3486,237,2324,97],[3486,238,2324,98],[3486,241,2324,101,"options"],[3486,248,2324,108],[3486,249,2324,109,"keys"],[3486,253,2324,113],[3486,257,2324,117],[3487,14,2324,119,"keys"],[3487,18,2324,123],[3487,20,2324,125,"options"],[3487,27,2324,132],[3487,28,2324,133,"keys"],[3488,12,2324,138],[3488,13,2324,139],[3488,16,2324,142,"options"],[3488,23,2324,149],[3488,28,2324,154],[3488,32,2324,158],[3488,36,2324,162,"options"],[3488,43,2324,169],[3488,48,2324,174],[3488,53,2324,179],[3488,54,2324,180],[3488,57,2324,183],[3488,62,2324,188],[3488,63,2324,189],[3488,66,2324,192,"options"],[3488,73,2324,199],[3488,74,2324,200,"jwks"],[3488,78,2324,204],[3488,79,2324,205],[3489,12,2325,12],[3490,12,2326,12],[3490,16,2326,16],[3490,17,2326,17,"signingKey"],[3490,27,2326,27],[3490,29,2326,29],[3491,14,2327,16],[3491,18,2327,16,"_yield$this$getUser3"],[3491,38,2327,16],[3491,47,2327,40],[3491,51,2327,44],[3491,52,2327,45,"getUser"],[3491,59,2327,52],[3491,60,2327,53,"token"],[3491,65,2327,58],[3491,66,2327,59],[3492,16,2327,24,"error"],[3492,23,2327,29],[3492,26,2327,29,"_yield$this$getUser3"],[3492,46,2327,29],[3492,47,2327,24,"error"],[3492,52,2327,29],[3493,14,2328,16],[3493,18,2328,20,"error"],[3493,25,2328,25],[3493,27,2328,27],[3494,16,2329,20],[3494,22,2329,26,"error"],[3494,29,2329,31],[3495,14,2330,16],[3496,14,2331,16],[3497,14,2332,16],[3497,21,2332,23],[3498,16,2333,20,"data"],[3498,20,2333,24],[3498,22,2333,26],[3499,18,2334,24,"claims"],[3499,24,2334,30],[3499,26,2334,32,"payload"],[3499,33,2334,39],[3500,18,2335,24,"header"],[3500,24,2335,30],[3500,26,2335,24,"header"],[3500,32,2335,30],[3501,18,2336,24,"signature"],[3501,27,2336,33],[3501,29,2336,24,"signature"],[3502,16,2337,20],[3502,17,2337,21],[3503,16,2338,20,"error"],[3503,21,2338,25],[3503,23,2338,27],[3504,14,2339,16],[3504,15,2339,17],[3505,12,2340,12],[3506,12,2341,12],[3506,16,2341,18,"algorithm"],[3506,25,2341,27],[3506,28,2341,30],[3506,29,2341,31],[3506,30,2341,32],[3506,32,2341,34,"helpers_1"],[3506,41,2341,43],[3506,42,2341,44,"getAlgorithm"],[3506,54,2341,56],[3506,56,2341,58,"header"],[3506,62,2341,64],[3506,63,2341,65,"alg"],[3506,66,2341,68],[3506,67,2341,69],[3507,12,2342,12],[3508,12,2343,12],[3508,16,2343,18,"publicKey"],[3508,25,2343,27],[3508,34,2343,36,"crypto"],[3508,40,2343,42],[3508,41,2343,43,"subtle"],[3508,47,2343,49],[3508,48,2343,50,"importKey"],[3508,57,2343,59],[3508,58,2343,60],[3508,63,2343,65],[3508,65,2343,67,"signingKey"],[3508,75,2343,77],[3508,77,2343,79,"algorithm"],[3508,86,2343,88],[3508,88,2343,90],[3508,92,2343,94],[3508,94,2343,96],[3508,95,2344,16],[3508,103,2344,24],[3508,104,2345,13],[3508,105,2345,14],[3509,12,2346,12],[3510,12,2347,12],[3510,16,2347,18,"isValid"],[3510,23,2347,25],[3510,32,2347,34,"crypto"],[3510,38,2347,40],[3510,39,2347,41,"subtle"],[3510,45,2347,47],[3510,46,2347,48,"verify"],[3510,52,2347,54],[3510,53,2347,55,"algorithm"],[3510,62,2347,64],[3510,64,2347,66,"publicKey"],[3510,73,2347,75],[3510,75,2347,77,"signature"],[3510,84,2347,86],[3510,86,2347,88],[3510,87,2347,89],[3510,88,2347,90],[3510,90,2347,92,"base64url_1"],[3510,101,2347,103],[3510,102,2347,104,"stringToUint8Array"],[3510,120,2347,122],[3510,122,2347,124],[3510,125,2347,127,"rawHeader"],[3510,134,2347,136],[3510,138,2347,140,"rawPayload"],[3510,148,2347,150],[3510,150,2347,152],[3510,151,2347,153],[3510,152,2347,154],[3511,12,2348,12],[3511,16,2348,16],[3511,17,2348,17,"isValid"],[3511,24,2348,24],[3511,26,2348,26],[3512,14,2349,16],[3512,20,2349,22],[3512,24,2349,26,"errors_1"],[3512,32,2349,34],[3512,33,2349,35,"AuthInvalidJwtError"],[3512,52,2349,54],[3512,53,2349,55],[3512,76,2349,78],[3512,77,2349,79],[3513,12,2350,12],[3514,12,2351,12],[3515,12,2352,12],[3515,19,2352,19],[3516,14,2353,16,"data"],[3516,18,2353,20],[3516,20,2353,22],[3517,16,2354,20,"claims"],[3517,22,2354,26],[3517,24,2354,28,"payload"],[3517,31,2354,35],[3518,16,2355,20,"header"],[3518,22,2355,26],[3518,24,2355,20,"header"],[3518,30,2355,26],[3519,16,2356,20,"signature"],[3519,25,2356,29],[3519,27,2356,20,"signature"],[3520,14,2357,16],[3520,15,2357,17],[3521,14,2358,16,"error"],[3521,19,2358,21],[3521,21,2358,23],[3522,12,2359,12],[3522,13,2359,13],[3523,10,2360,8],[3523,11,2360,9],[3523,12,2361,8],[3523,19,2361,15,"error"],[3523,24,2361,20],[3523,26,2361,22],[3524,12,2362,12],[3524,16,2362,16],[3524,17,2362,17],[3524,18,2362,18],[3524,20,2362,20,"errors_1"],[3524,28,2362,28],[3524,29,2362,29,"isAuthError"],[3524,40,2362,40],[3524,42,2362,42,"error"],[3524,47,2362,47],[3524,48,2362,48],[3524,50,2362,50],[3525,14,2363,16],[3525,21,2363,23],[3526,16,2363,25,"data"],[3526,20,2363,29],[3526,22,2363,31],[3526,26,2363,35],[3527,16,2363,37,"error"],[3527,21,2363,42],[3527,23,2363,37,"error"],[3528,14,2363,43],[3528,15,2363,44],[3529,12,2364,12],[3530,12,2365,12],[3530,18,2365,18,"error"],[3530,23,2365,23],[3531,10,2366,8],[3532,8,2367,4],[3532,9,2367,5],[3533,8,2367,5],[3533,17,2304,10,"getClaims"],[3533,26,2304,19,"getClaims"],[3533,27,2304,19,"_x68"],[3533,31,2304,19],[3534,10,2304,19],[3534,17,2304,19,"_getClaims"],[3534,27,2304,19],[3534,28,2304,19,"apply"],[3534,33,2304,19],[3534,40,2304,19,"arguments"],[3534,49,2304,19],[3535,8,2304,19],[3536,8,2304,19],[3536,15,2304,10,"getClaims"],[3536,24,2304,19],[3537,6,2304,19],[3538,4,2304,19],[3539,2,2304,19],[3540,2,2369,0,"exports"],[3540,9,2369,7],[3540,10,2369,8,"default"],[3540,17,2369,15],[3540,20,2369,18,"GoTrueClient"],[3540,32,2369,30],[3541,2,2370,0,"GoTrueClient"],[3541,14,2370,12],[3541,15,2370,13,"nextInstanceID"],[3541,29,2370,27],[3541,32,2370,30],[3541,33,2370,31],[3542,0,2370,32],[3542,3]],"functionMap":{"names":["<global>","<anonymous>","lockNoOp","GoTrueClient","constructor","_b.addEventListener$argument_1","get__jwks","set__jwks","get__jwks_cached_at","set__jwks_cached_at","_debug","initialize","_acquireLock$argument_1","_initialize","setTimeout$argument_0","signInAnonymously","signUp","signInWithPassword","signInWithOAuth","exchangeCodeForSession","signInWithWeb3","signInWithSolana","options.signInWithSolana.resources.map$argument_0","_exchangeCodeForSession","signInWithIdToken","signInWithOtp","verifyOtp","signInWithSSO","reauthenticate","_reauthenticate","_useSession$argument_0","resend","getSession","_acquireLock","lock$argument_2","_useSession","__loadSession","Proxy$argument_1.get","getUser","_getUser","updateUser","_updateUser","setSession","_setSession","refreshSession","_refreshSession","_getSessionFromURL","_isImplicitGrantCallback","_isPKCECallback","signOut","_signOut","onAuthStateChange","subscription.unsubscribe","_emitInitialSession","resetPasswordForEmail","getUserIdentities","linkIdentity","unlinkIdentity","_refreshAccessToken","_isValidSession","_handleProviderSignIn","_recoverAndRefresh","_callRefreshToken","_notifyAllSubscribers","Array.from.map$argument_0","_saveSession","_removeSession","_removeVisibilityChangedCallback","_startAutoRefresh","setInterval$argument_0","_stopAutoRefresh","startAutoRefresh","stopAutoRefresh","_autoRefreshTokenTick","_handleVisibilityChange","visibilityChangedCallback","_onVisibilityChanged","_getUrlForProvider","_unenroll","_enroll","_verify","_challenge","_challengeAndVerify","_listFactors","factors.filter$argument_0","_getAuthenticatorAssuranceLevel","_a.filter$argument_0","fetchJwk","jwks.keys.find$argument_0","data.keys.find$argument_0","getClaims"],"mappings":"AAA;wDCC;CDE;AEyB;CFE;AGU;ICI;6GCuG;aDG;KDG;IGI;KHG;IIC;KJE;IKC;KLG;IMC;KNE;IOC;KPK;IQM;kCVI;+CWC;aXE;SUC;KRE;IUO;2BCqC;iBDO;KVmB;IYM;KZ6B;IaW;Kb6D;IcS;KdoD;IeK;KfQ;IgBI;qCPE;SOE;KhBC;IiBK;KjBM;IkBC;sECmG,6BD;KlBwC;IoBC;KpBkC;IqBK;KrBoC;IsBkB;KtB+C;IuBI;KvBmC;IwBe;KxBuB;IyBK;2ChBE;SgBE;KzBC;I0BC;0CCE;aDW;K1BQ;I4BI;K5BoC;I6BY;mDpBE;oCkBC;alBE;SoBC;K7BE;I8BI;gChCO;iBgCG;yChCC;iBgCO;8ECG;6CjCK;qBiCO;aDc;K9BK;IgCO;KhCU;IiCM;6BC2C;yBDQ;KjCe;ImCQ;mD1BK;S0BE;KnCE;IoCC;0CTS;aSe;KpCc;IqCI;2C5BE;S4BE;KrCC;IsCC;0CXE;aW4B;KtCQ;IuCM;2C9BE;S8BE;KvCC;IwCC;KxCgD;IyCO;2ChCE;SgCE;KzCC;I0CC;0CfE;aeoB;K1CQ;I2CI;K3CsF;I4CI;K5CE;I6CI;K7CG;I8CS;2CrCE;SqCE;K9CC;I+CC;sCpBC;SoBuB;K/CC;IgDK;yBCK;aDG;SlDI;wCWE;aXE;SkDC;KhDE;IkDC;sCvBC;SuBc;KlDC;ImDQ;KnD0B;IoDI;KpDc;IqDK;2D1BG;a0Be;KrDc;IsDI;0C3BE;a2BU;KtDQ;IuDK;kDzDM;ayDU,EzD;ayDM;KvDY;IwDC;KxDO;IyDC;KzDY;I0DK;K1D0F;I2DC;K3DyC;I4DC;+ECQ;aDO;K5DY;I8DK;K9DmC;I+DC;K/DS;IgEO;KhEY;IiEK;mCCG,kCD;mBtDqB;SsDG;KjEC;ImEK;KnEO;IoEuB;KpEG;IqES;KrEG;IsEI;uC7DG;sDkBI;yBlBY;a6DS;KtEU;IuEM;6CCU,kDD;KvES;IyEI;4ChEe;iBgEQ;KzEQ;I0EO;K1EwB;I2EC;0ChDE;agDU;K3EQ;I4EC;0CjDE;aiDmB;K5EQ;I6EI;qCpEC;8CkBE;iBlBiB;SoEQ;K7EC;I8EI;qCrEC;8CkBE;iBlBW;SqEQ;K9EC;I+EI;K/Ec;IgFI;oCCO,yED;qCCC,0ED;KhFS;IkFI;qCzEC;0CkBC;yHwDkB,wCxD;alBM;SyEC;KlFC;IoFC;iCCE,wBD;kCCM,wBD;6BEkB,wBF;KpFK;IuFiB;KvF+D;CHC"}},"type":"js/module"}]}