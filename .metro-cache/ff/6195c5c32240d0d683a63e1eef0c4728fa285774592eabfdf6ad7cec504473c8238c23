{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo-application","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":48,"index":48}}],"key":"aOo/Wkh64aldyNvnMGu1GTRT2ZA=","exportNames":["*"]}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":49},"end":{"line":2,"column":39,"index":88}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":89},"end":{"line":3,"column":78,"index":167}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./DevicePushTokenAutoRegistration.fx","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":168},"end":{"line":4,"column":93,"index":261}}],"key":"ZH5Mz79TLJE/dTuAobGrlWmVWRo=","exportNames":["*"]}},{"name":"./ServerRegistrationModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":262},"end":{"line":5,"column":66,"index":328}}],"key":"OTliNP9lxRDJOLdh5XsGIjq12GA=","exportNames":["*"]}},{"name":"./getDevicePushTokenAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":329},"end":{"line":6,"column":64,"index":393}}],"key":"XdMNnezmMyUe2eZLOsw/aE7Mhfk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getExpoPushTokenAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var Application = _interopRequireWildcard(require(_dependencyMap[2], \"expo-application\"));\n  var _expoConstants = _interopRequireDefault(require(_dependencyMap[3], \"expo-constants\"));\n  var _expoModulesCore = require(_dependencyMap[4], \"expo-modules-core\");\n  var _DevicePushTokenAutoRegistration = require(_dependencyMap[5], \"./DevicePushTokenAutoRegistration.fx\");\n  var _ServerRegistrationModule = _interopRequireDefault(require(_dependencyMap[6], \"./ServerRegistrationModule\"));\n  var _getDevicePushTokenAsync = _interopRequireDefault(require(_dependencyMap[7], \"./getDevicePushTokenAsync\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  var productionBaseUrl = 'https://exp.host/--/api/v2/';\n  /**\n   * Returns an Expo token that can be used to send a push notification to the device using Expo's push notifications service.\n   *\n   * This method makes requests to the Expo's servers. It can get rejected in cases where the request itself fails\n   * (for example, due to the device being offline, experiencing a network timeout, or other HTTPS request failures).\n   * To provide offline support to your users, you should `try/catch` this method and implement retry logic to attempt\n   * to get the push token later, once the device is back online.\n   *\n   * > For Expo's backend to be able to send notifications to your app, you will need to provide it with push notification keys.\n   * For more information, see [credentials](/push-notifications/push-notifications-setup/#get-credentials-for-development-builds) in the push notifications setup.\n   *\n   * @param options Object allowing you to pass in push notification configuration.\n   * @return Returns a `Promise` that resolves to an object representing acquired push token.\n   * @header fetch\n   *\n   * @example\n   * ```ts\n   * import * as Notifications from 'expo-notifications';\n   *\n   * export async function registerForPushNotificationsAsync(userId: string) {\n   *   const expoPushToken = await Notifications.getExpoPushTokenAsync({\n   *    projectId: 'your-project-id',\n   *   });\n   *\n   *   await fetch('https://example.com/', {\n   *     method: 'POST',\n   *     headers: {\n   *       'Content-Type': 'application/json',\n   *     },\n   *     body: JSON.stringify({\n   *       userId,\n   *       expoPushToken,\n   *     }),\n   *   });\n   * }\n   * ```\n   */\n  function getExpoPushTokenAsync() {\n    return _getExpoPushTokenAsync.apply(this, arguments);\n  }\n  function _getExpoPushTokenAsync() {\n    _getExpoPushTokenAsync = (0, _asyncToGenerator2.default)(function* () {\n      var _Constants$easConfig, _Constants$expoConfig, _options$baseUrl, _options$url;\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var devicePushToken = options.devicePushToken || (yield (0, _getDevicePushTokenAsync.default)());\n      var deviceId = options.deviceId || (yield getDeviceIdAsync());\n      // Depending on the runtime environment, the default may be located in various places.\n      var projectId = options.projectId || ((_Constants$easConfig = _expoConstants.default.easConfig) == null ? void 0 : _Constants$easConfig.projectId) || ((_Constants$expoConfig = _expoConstants.default.expoConfig) == null || (_Constants$expoConfig = _Constants$expoConfig.extra) == null || (_Constants$expoConfig = _Constants$expoConfig.eas) == null ? void 0 : _Constants$expoConfig.projectId);\n      if (!projectId) {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_NO_EXPERIENCE_ID', `No \"projectId\" found. If \"projectId\" can't be inferred from the manifest (for instance, in bare workflow), you have to pass it in yourself.`);\n      }\n      var applicationId = options.applicationId || Application.applicationId;\n      if (!applicationId) {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_NO_APPLICATION_ID', `No \"applicationId\" found. If it can't be inferred from native configuration by expo-application, you have to pass it in yourself.`);\n      }\n      var type = options.type || getTypeOfToken(devicePushToken);\n      var development = options.development || (yield shouldUseDevelopmentNotificationService());\n      var baseUrl = (_options$baseUrl = options.baseUrl) != null ? _options$baseUrl : productionBaseUrl;\n      var url = (_options$url = options.url) != null ? _options$url : `${baseUrl}push/getExpoPushToken`;\n      var body = {\n        type: type,\n        deviceId: deviceId.toLowerCase(),\n        development: development,\n        appId: applicationId,\n        deviceToken: getDeviceToken(devicePushToken),\n        projectId: projectId\n      };\n      var response = yield fetch(url, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      }).catch(function (error) {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_NETWORK_ERROR', `Error encountered while fetching Expo token: ${error}.`);\n      });\n      if (!response.ok) {\n        var statusInfo = response.statusText || response.status;\n        var _body = undefined;\n        try {\n          _body = yield response.text();\n        } catch (_unused) {\n          // do nothing\n        }\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Error encountered while fetching Expo token, expected an OK response, received: ${statusInfo} (body: \"${_body}\").`);\n      }\n      var expoPushToken = getExpoPushToken(yield parseResponse(response));\n      try {\n        if (options.url || options.baseUrl) {\n          console.debug(`[expo-notifications] Since the URL endpoint to register in has been customized in the options, expo-notifications won't try to auto-update the device push token on the server.`);\n        } else {\n          yield (0, _DevicePushTokenAutoRegistration.setAutoServerRegistrationEnabledAsync)(true);\n        }\n      } catch (e) {\n        console.warn('[expo-notifications] Could not enable automatically registering new device tokens with the Expo notification service', e);\n      }\n      return {\n        type: 'expo',\n        data: expoPushToken\n      };\n    });\n    return _getExpoPushTokenAsync.apply(this, arguments);\n  }\n  function parseResponse(_x) {\n    return _parseResponse.apply(this, arguments);\n  }\n  function _parseResponse() {\n    _parseResponse = (0, _asyncToGenerator2.default)(function* (response) {\n      try {\n        return yield response.json();\n      } catch (_unused2) {\n        try {\n          throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Expected a JSON response from server when fetching Expo token, received body: ${JSON.stringify(yield response.text())}.`);\n        } catch (_unused3) {\n          throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Expected a JSON response from server when fetching Expo token, received response: ${JSON.stringify(response)}.`);\n        }\n      }\n    });\n    return _parseResponse.apply(this, arguments);\n  }\n  function getExpoPushToken(data) {\n    if (!data || !(typeof data === 'object') || !data.data || !(typeof data.data === 'object') || !data.data.expoPushToken || !(typeof data.data.expoPushToken === 'string')) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Malformed response from server, expected \"{ data: { expoPushToken: string } }\", received: ${JSON.stringify(data, null, 2)}.`);\n    }\n    return data.data.expoPushToken;\n  }\n  // Same as in DevicePushTokenAutoRegistration\n  function getDeviceIdAsync() {\n    return _getDeviceIdAsync.apply(this, arguments);\n  }\n  function _getDeviceIdAsync() {\n    _getDeviceIdAsync = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        if (!_ServerRegistrationModule.default.getInstallationIdAsync) {\n          throw new _expoModulesCore.UnavailabilityError('ExpoServerRegistrationModule', 'getInstallationIdAsync');\n        }\n        return yield _ServerRegistrationModule.default.getInstallationIdAsync();\n      } catch (e) {\n        throw new _expoModulesCore.CodedError('ERR_NOTIF_DEVICE_ID', `Could not have fetched installation ID of the application: ${e}.`);\n      }\n    });\n    return _getDeviceIdAsync.apply(this, arguments);\n  }\n  function getDeviceToken(devicePushToken) {\n    if (typeof devicePushToken.data === 'string') {\n      return devicePushToken.data;\n    }\n    return JSON.stringify(devicePushToken.data);\n  }\n  // Same as in DevicePushTokenAutoRegistration\n  function shouldUseDevelopmentNotificationService() {\n    return _shouldUseDevelopmentNotificationService.apply(this, arguments);\n  } // Same as in DevicePushTokenAutoRegistration\n  function _shouldUseDevelopmentNotificationService() {\n    _shouldUseDevelopmentNotificationService = (0, _asyncToGenerator2.default)(function* () {\n      if (_expoModulesCore.Platform.OS === 'ios') {\n        try {\n          var notificationServiceEnvironment = yield Application.getIosPushNotificationServiceEnvironmentAsync();\n          if (notificationServiceEnvironment === 'development') {\n            return true;\n          }\n        } catch (_unused4) {\n          // We can't do anything here, we'll fallback to false then.\n        }\n      }\n      return false;\n    });\n    return _shouldUseDevelopmentNotificationService.apply(this, arguments);\n  }\n  function getTypeOfToken(devicePushToken) {\n    switch (devicePushToken.type) {\n      case 'ios':\n        return 'apns';\n      case 'android':\n        return 'fcm';\n      // This probably will error on server, but let's make this function future-safe.\n      default:\n        return devicePushToken.type;\n    }\n  }\n});","lineCount":196,"map":[[8,2,1,0],[8,6,1,0,"Application"],[8,17,1,0],[8,20,1,0,"_interopRequireWildcard"],[8,43,1,0],[8,44,1,0,"require"],[8,51,1,0],[8,52,1,0,"_dependencyMap"],[8,66,1,0],[9,2,2,0],[9,6,2,0,"_expoConstants"],[9,20,2,0],[9,23,2,0,"_interopRequireDefault"],[9,45,2,0],[9,46,2,0,"require"],[9,53,2,0],[9,54,2,0,"_dependencyMap"],[9,68,2,0],[10,2,3,0],[10,6,3,0,"_expoModulesCore"],[10,22,3,0],[10,25,3,0,"require"],[10,32,3,0],[10,33,3,0,"_dependencyMap"],[10,47,3,0],[11,2,4,0],[11,6,4,0,"_DevicePushTokenAutoRegistration"],[11,38,4,0],[11,41,4,0,"require"],[11,48,4,0],[11,49,4,0,"_dependencyMap"],[11,63,4,0],[12,2,5,0],[12,6,5,0,"_ServerRegistrationModule"],[12,31,5,0],[12,34,5,0,"_interopRequireDefault"],[12,56,5,0],[12,57,5,0,"require"],[12,64,5,0],[12,65,5,0,"_dependencyMap"],[12,79,5,0],[13,2,6,0],[13,6,6,0,"_getDevicePushTokenAsync"],[13,30,6,0],[13,33,6,0,"_interopRequireDefault"],[13,55,6,0],[13,56,6,0,"require"],[13,63,6,0],[13,64,6,0,"_dependencyMap"],[13,78,6,0],[14,2,6,64],[14,11,6,64,"_interopRequireWildcard"],[14,35,6,64,"e"],[14,36,6,64],[14,38,6,64,"t"],[14,39,6,64],[14,68,6,64,"WeakMap"],[14,75,6,64],[14,81,6,64,"r"],[14,82,6,64],[14,89,6,64,"WeakMap"],[14,96,6,64],[14,100,6,64,"n"],[14,101,6,64],[14,108,6,64,"WeakMap"],[14,115,6,64],[14,127,6,64,"_interopRequireWildcard"],[14,150,6,64],[14,162,6,64,"_interopRequireWildcard"],[14,186,6,64,"e"],[14,187,6,64],[14,189,6,64,"t"],[14,190,6,64],[14,199,6,64,"t"],[14,200,6,64],[14,204,6,64,"e"],[14,205,6,64],[14,209,6,64,"e"],[14,210,6,64],[14,211,6,64,"__esModule"],[14,221,6,64],[14,230,6,64,"e"],[14,231,6,64],[14,237,6,64,"o"],[14,238,6,64],[14,240,6,64,"i"],[14,241,6,64],[14,243,6,64,"f"],[14,244,6,64],[14,249,6,64,"__proto__"],[14,258,6,64],[14,266,6,64,"default"],[14,273,6,64],[14,275,6,64,"e"],[14,276,6,64],[14,293,6,64,"e"],[14,294,6,64],[14,317,6,64,"e"],[14,318,6,64],[14,343,6,64,"e"],[14,344,6,64],[14,353,6,64,"f"],[14,354,6,64],[14,360,6,64,"o"],[14,361,6,64],[14,364,6,64,"t"],[14,365,6,64],[14,368,6,64,"n"],[14,369,6,64],[14,372,6,64,"r"],[14,373,6,64],[14,381,6,64,"o"],[14,382,6,64],[14,383,6,64,"has"],[14,386,6,64],[14,387,6,64,"e"],[14,388,6,64],[14,398,6,64,"o"],[14,399,6,64],[14,400,6,64,"get"],[14,403,6,64],[14,404,6,64,"e"],[14,405,6,64],[14,408,6,64,"o"],[14,409,6,64],[14,410,6,64,"set"],[14,413,6,64],[14,414,6,64,"e"],[14,415,6,64],[14,417,6,64,"f"],[14,418,6,64],[14,432,6,64,"_t"],[14,434,6,64],[14,438,6,64,"e"],[14,439,6,64],[14,455,6,64,"_t"],[14,457,6,64],[14,464,6,64,"hasOwnProperty"],[14,478,6,64],[14,479,6,64,"call"],[14,483,6,64],[14,484,6,64,"e"],[14,485,6,64],[14,487,6,64,"_t"],[14,489,6,64],[14,496,6,64,"i"],[14,497,6,64],[14,501,6,64,"o"],[14,502,6,64],[14,505,6,64,"Object"],[14,511,6,64],[14,512,6,64,"defineProperty"],[14,526,6,64],[14,531,6,64,"Object"],[14,537,6,64],[14,538,6,64,"getOwnPropertyDescriptor"],[14,562,6,64],[14,563,6,64,"e"],[14,564,6,64],[14,566,6,64,"_t"],[14,568,6,64],[14,575,6,64,"i"],[14,576,6,64],[14,577,6,64,"get"],[14,580,6,64],[14,584,6,64,"i"],[14,585,6,64],[14,586,6,64,"set"],[14,589,6,64],[14,593,6,64,"o"],[14,594,6,64],[14,595,6,64,"f"],[14,596,6,64],[14,598,6,64,"_t"],[14,600,6,64],[14,602,6,64,"i"],[14,603,6,64],[14,607,6,64,"f"],[14,608,6,64],[14,609,6,64,"_t"],[14,611,6,64],[14,615,6,64,"e"],[14,616,6,64],[14,617,6,64,"_t"],[14,619,6,64],[14,630,6,64,"f"],[14,631,6,64],[14,636,6,64,"e"],[14,637,6,64],[14,639,6,64,"t"],[14,640,6,64],[15,2,7,0],[15,6,7,6,"productionBaseUrl"],[15,23,7,23],[15,26,7,26],[15,55,7,55],[16,2,8,0],[17,0,9,0],[18,0,10,0],[19,0,11,0],[20,0,12,0],[21,0,13,0],[22,0,14,0],[23,0,15,0],[24,0,16,0],[25,0,17,0],[26,0,18,0],[27,0,19,0],[28,0,20,0],[29,0,21,0],[30,0,22,0],[31,0,23,0],[32,0,24,0],[33,0,25,0],[34,0,26,0],[35,0,27,0],[36,0,28,0],[37,0,29,0],[38,0,30,0],[39,0,31,0],[40,0,32,0],[41,0,33,0],[42,0,34,0],[43,0,35,0],[44,0,36,0],[45,0,37,0],[46,0,38,0],[47,0,39,0],[48,0,40,0],[49,0,41,0],[50,0,42,0],[51,0,43,0],[52,0,44,0],[53,2,8,0],[53,11,45,30,"getExpoPushTokenAsync"],[53,32,45,51,"getExpoPushTokenAsync"],[53,33,45,51],[54,4,45,51],[54,11,45,51,"_getExpoPushTokenAsync"],[54,33,45,51],[54,34,45,51,"apply"],[54,39,45,51],[54,46,45,51,"arguments"],[54,55,45,51],[55,2,45,51],[56,2,45,51],[56,11,45,51,"_getExpoPushTokenAsync"],[56,34,45,51],[57,4,45,51,"_getExpoPushTokenAsync"],[57,26,45,51],[57,33,45,51,"_asyncToGenerator2"],[57,51,45,51],[57,52,45,51,"default"],[57,59,45,51],[57,61,45,15],[57,74,45,66],[58,6,45,66],[58,10,45,66,"_Constants$easConfig"],[58,30,45,66],[58,32,45,66,"_Constants$expoConfig"],[58,53,45,66],[58,55,45,66,"_options$baseUrl"],[58,71,45,66],[58,73,45,66,"_options$url"],[58,85,45,66],[59,6,45,66],[59,10,45,52,"options"],[59,17,45,59],[59,20,45,59,"arguments"],[59,29,45,59],[59,30,45,59,"length"],[59,36,45,59],[59,44,45,59,"arguments"],[59,53,45,59],[59,61,45,59,"undefined"],[59,70,45,59],[59,73,45,59,"arguments"],[59,82,45,59],[59,88,45,62],[59,89,45,63],[59,90,45,64],[60,6,46,4],[60,10,46,10,"devicePushToken"],[60,25,46,25],[60,28,46,28,"options"],[60,35,46,35],[60,36,46,36,"devicePushToken"],[60,51,46,51],[60,62,46,62],[60,66,46,62,"getDevicePushTokenAsync"],[60,98,46,85],[60,100,46,86],[60,101,46,87],[60,102,46,88],[61,6,47,4],[61,10,47,10,"deviceId"],[61,18,47,18],[61,21,47,21,"options"],[61,28,47,28],[61,29,47,29,"deviceId"],[61,37,47,37],[61,48,47,48,"getDeviceIdAsync"],[61,64,47,64],[61,65,47,65],[61,66,47,66],[61,67,47,67],[62,6,48,4],[63,6,49,4],[63,10,49,10,"projectId"],[63,19,49,19],[63,22,49,22,"options"],[63,29,49,29],[63,30,49,30,"projectId"],[63,39,49,39],[63,45,49,39,"_Constants$easConfig"],[63,65,49,39],[63,68,50,8,"Constants"],[63,90,50,17],[63,91,50,18,"easConfig"],[63,100,50,27],[63,121,50,8,"_Constants$easConfig"],[63,141,50,8],[63,142,50,29,"projectId"],[63,151,50,38],[63,158,50,38,"_Constants$expoConfig"],[63,179,50,38],[63,182,51,8,"Constants"],[63,204,51,17],[63,205,51,18,"expoConfig"],[63,215,51,28],[63,229,51,28,"_Constants$expoConfig"],[63,250,51,28],[63,253,51,8,"_Constants$expoConfig"],[63,274,51,8],[63,275,51,30,"extra"],[63,280,51,35],[63,294,51,35,"_Constants$expoConfig"],[63,315,51,35],[63,318,51,8,"_Constants$expoConfig"],[63,339,51,8],[63,340,51,37,"eas"],[63,343,51,40],[63,364,51,8,"_Constants$expoConfig"],[63,385,51,8],[63,386,51,42,"projectId"],[63,395,51,51],[64,6,52,4],[64,10,52,8],[64,11,52,9,"projectId"],[64,20,52,18],[64,22,52,20],[65,8,53,8],[65,14,53,14],[65,18,53,18,"CodedError"],[65,45,53,28],[65,46,53,29],[65,82,53,65],[65,84,53,67],[65,225,53,208],[65,226,53,209],[66,6,54,4],[67,6,55,4],[67,10,55,10,"applicationId"],[67,23,55,23],[67,26,55,26,"options"],[67,33,55,33],[67,34,55,34,"applicationId"],[67,47,55,47],[67,51,55,51,"Application"],[67,62,55,62],[67,63,55,63,"applicationId"],[67,76,55,76],[68,6,56,4],[68,10,56,8],[68,11,56,9,"applicationId"],[68,24,56,22],[68,26,56,24],[69,8,57,8],[69,14,57,14],[69,18,57,18,"CodedError"],[69,45,57,28],[69,46,57,29],[69,83,57,66],[69,85,57,68],[69,216,57,199],[69,217,57,200],[70,6,58,4],[71,6,59,4],[71,10,59,10,"type"],[71,14,59,14],[71,17,59,17,"options"],[71,24,59,24],[71,25,59,25,"type"],[71,29,59,29],[71,33,59,33,"getTypeOfToken"],[71,47,59,47],[71,48,59,48,"devicePushToken"],[71,63,59,63],[71,64,59,64],[72,6,60,4],[72,10,60,10,"development"],[72,21,60,21],[72,24,60,24,"options"],[72,31,60,31],[72,32,60,32,"development"],[72,43,60,43],[72,54,60,54,"shouldUseDevelopmentNotificationService"],[72,93,60,93],[72,94,60,94],[72,95,60,95],[72,96,60,96],[73,6,61,4],[73,10,61,10,"baseUrl"],[73,17,61,17],[73,21,61,17,"_options$baseUrl"],[73,37,61,17],[73,40,61,20,"options"],[73,47,61,27],[73,48,61,28,"baseUrl"],[73,55,61,35],[73,67,61,35,"_options$baseUrl"],[73,83,61,35],[73,86,61,39,"productionBaseUrl"],[73,103,61,56],[74,6,62,4],[74,10,62,10,"url"],[74,13,62,13],[74,17,62,13,"_options$url"],[74,29,62,13],[74,32,62,16,"options"],[74,39,62,23],[74,40,62,24,"url"],[74,43,62,27],[74,55,62,27,"_options$url"],[74,67,62,27],[74,70,62,31],[74,73,62,34,"baseUrl"],[74,80,62,41],[74,103,62,64],[75,6,63,4],[75,10,63,10,"body"],[75,14,63,14],[75,17,63,17],[76,8,64,8,"type"],[76,12,64,12],[76,14,64,8,"type"],[76,18,64,12],[77,8,65,8,"deviceId"],[77,16,65,16],[77,18,65,18,"deviceId"],[77,26,65,26],[77,27,65,27,"toLowerCase"],[77,38,65,38],[77,39,65,39],[77,40,65,40],[78,8,66,8,"development"],[78,19,66,19],[78,21,66,8,"development"],[78,32,66,19],[79,8,67,8,"appId"],[79,13,67,13],[79,15,67,15,"applicationId"],[79,28,67,28],[80,8,68,8,"deviceToken"],[80,19,68,19],[80,21,68,21,"getDeviceToken"],[80,35,68,35],[80,36,68,36,"devicePushToken"],[80,51,68,51],[80,52,68,52],[81,8,69,8,"projectId"],[81,17,69,17],[81,19,69,8,"projectId"],[82,6,70,4],[82,7,70,5],[83,6,71,4],[83,10,71,10,"response"],[83,18,71,18],[83,27,71,27,"fetch"],[83,32,71,32],[83,33,71,33,"url"],[83,36,71,36],[83,38,71,38],[84,8,72,8,"method"],[84,14,72,14],[84,16,72,16],[84,22,72,22],[85,8,73,8,"headers"],[85,15,73,15],[85,17,73,17],[86,10,74,12],[86,24,74,26],[86,26,74,28],[87,8,75,8],[87,9,75,9],[88,8,76,8,"body"],[88,12,76,12],[88,14,76,14,"JSON"],[88,18,76,18],[88,19,76,19,"stringify"],[88,28,76,28],[88,29,76,29,"body"],[88,33,76,33],[89,6,77,4],[89,7,77,5],[89,8,77,6],[89,9,77,7,"catch"],[89,14,77,12],[89,15,77,13],[89,25,77,14,"error"],[89,30,77,19],[89,32,77,24],[90,8,78,8],[90,14,78,14],[90,18,78,18,"CodedError"],[90,45,78,28],[90,46,78,29],[90,79,78,62],[90,81,78,64],[90,129,78,112,"error"],[90,134,78,117],[90,137,78,120],[90,138,78,121],[91,6,79,4],[91,7,79,5],[91,8,79,6],[92,6,80,4],[92,10,80,8],[92,11,80,9,"response"],[92,19,80,17],[92,20,80,18,"ok"],[92,22,80,20],[92,24,80,22],[93,8,81,8],[93,12,81,14,"statusInfo"],[93,22,81,24],[93,25,81,27,"response"],[93,33,81,35],[93,34,81,36,"statusText"],[93,44,81,46],[93,48,81,50,"response"],[93,56,81,58],[93,57,81,59,"status"],[93,63,81,65],[94,8,82,8],[94,12,82,12,"body"],[94,17,82,16],[94,20,82,19,"undefined"],[94,29,82,28],[95,8,83,8],[95,12,83,12],[96,10,84,12,"body"],[96,15,84,16],[96,24,84,25,"response"],[96,32,84,33],[96,33,84,34,"text"],[96,37,84,38],[96,38,84,39],[96,39,84,40],[97,8,85,8],[97,9,85,9],[97,10,86,8],[97,17,86,8,"_unused"],[97,24,86,8],[97,26,86,14],[98,10,87,12],[99,8,87,12],[100,8,89,8],[100,14,89,14],[100,18,89,18,"CodedError"],[100,45,89,28],[100,46,89,29],[100,78,89,61],[100,80,89,63],[100,163,89,146,"statusInfo"],[100,173,89,156],[100,185,89,168,"body"],[100,190,89,172],[100,195,89,177],[100,196,89,178],[101,6,90,4],[102,6,91,4],[102,10,91,10,"expoPushToken"],[102,23,91,23],[102,26,91,26,"getExpoPushToken"],[102,42,91,42],[102,49,91,49,"parseResponse"],[102,62,91,62],[102,63,91,63,"response"],[102,71,91,71],[102,72,91,72],[102,73,91,73],[103,6,92,4],[103,10,92,8],[104,8,93,8],[104,12,93,12,"options"],[104,19,93,19],[104,20,93,20,"url"],[104,23,93,23],[104,27,93,27,"options"],[104,34,93,34],[104,35,93,35,"baseUrl"],[104,42,93,42],[104,44,93,44],[105,10,94,12,"console"],[105,17,94,19],[105,18,94,20,"debug"],[105,23,94,25],[105,24,94,26],[105,201,94,203],[105,202,94,204],[106,8,95,8],[106,9,95,9],[106,15,96,13],[107,10,97,12],[107,16,97,18],[107,20,97,18,"setAutoServerRegistrationEnabledAsync"],[107,90,97,55],[107,92,97,56],[107,96,97,60],[107,97,97,61],[108,8,98,8],[109,6,99,4],[109,7,99,5],[109,8,100,4],[109,15,100,11,"e"],[109,16,100,12],[109,18,100,14],[110,8,101,8,"console"],[110,15,101,15],[110,16,101,16,"warn"],[110,20,101,20],[110,21,101,21],[110,139,101,139],[110,141,101,141,"e"],[110,142,101,142],[110,143,101,143],[111,6,102,4],[112,6,103,4],[112,13,103,11],[113,8,104,8,"type"],[113,12,104,12],[113,14,104,14],[113,20,104,20],[114,8,105,8,"data"],[114,12,105,12],[114,14,105,14,"expoPushToken"],[115,6,106,4],[115,7,106,5],[116,4,107,0],[116,5,107,1],[117,4,107,1],[117,11,107,1,"_getExpoPushTokenAsync"],[117,33,107,1],[117,34,107,1,"apply"],[117,39,107,1],[117,46,107,1,"arguments"],[117,55,107,1],[118,2,107,1],[119,2,107,1],[119,11,108,15,"parseResponse"],[119,24,108,28,"parseResponse"],[119,25,108,28,"_x"],[119,27,108,28],[120,4,108,28],[120,11,108,28,"_parseResponse"],[120,25,108,28],[120,26,108,28,"apply"],[120,31,108,28],[120,38,108,28,"arguments"],[120,47,108,28],[121,2,108,28],[122,2,108,28],[122,11,108,28,"_parseResponse"],[122,26,108,28],[123,4,108,28,"_parseResponse"],[123,18,108,28],[123,25,108,28,"_asyncToGenerator2"],[123,43,108,28],[123,44,108,28,"default"],[123,51,108,28],[123,53,108,0],[123,64,108,29,"response"],[123,72,108,37],[123,74,108,39],[124,6,109,4],[124,10,109,8],[125,8,110,8],[125,21,110,21,"response"],[125,29,110,29],[125,30,110,30,"json"],[125,34,110,34],[125,35,110,35],[125,36,110,36],[126,6,111,4],[126,7,111,5],[126,8,112,4],[126,15,112,4,"_unused2"],[126,23,112,4],[126,25,112,10],[127,8,113,8],[127,12,113,12],[128,10,114,12],[128,16,114,18],[128,20,114,22,"CodedError"],[128,47,114,32],[128,48,114,33],[128,80,114,65],[128,82,114,67],[128,163,114,148,"JSON"],[128,167,114,152],[128,168,114,153,"stringify"],[128,177,114,162],[128,184,114,169,"response"],[128,192,114,177],[128,193,114,178,"text"],[128,197,114,182],[128,198,114,183],[128,199,114,184],[128,200,114,185],[128,203,114,188],[128,204,114,189],[129,8,115,8],[129,9,115,9],[129,10,116,8],[129,17,116,8,"_unused3"],[129,25,116,8],[129,27,116,14],[130,10,117,12],[130,16,117,18],[130,20,117,22,"CodedError"],[130,47,117,32],[130,48,117,33],[130,80,117,65],[130,82,117,67],[130,167,117,152,"JSON"],[130,171,117,156],[130,172,117,157,"stringify"],[130,181,117,166],[130,182,117,167,"response"],[130,190,117,175],[130,191,117,176],[130,194,117,179],[130,195,117,180],[131,8,118,8],[132,6,119,4],[133,4,120,0],[133,5,120,1],[134,4,120,1],[134,11,120,1,"_parseResponse"],[134,25,120,1],[134,26,120,1,"apply"],[134,31,120,1],[134,38,120,1,"arguments"],[134,47,120,1],[135,2,120,1],[136,2,121,0],[136,11,121,9,"getExpoPushToken"],[136,27,121,25,"getExpoPushToken"],[136,28,121,26,"data"],[136,32,121,30],[136,34,121,32],[137,4,122,4],[137,8,122,8],[137,9,122,9,"data"],[137,13,122,13],[137,17,123,8],[137,19,123,10],[137,26,123,17,"data"],[137,30,123,21],[137,35,123,26],[137,43,123,34],[137,44,123,35],[137,48,124,8],[137,49,124,9,"data"],[137,53,124,13],[137,54,124,14,"data"],[137,58,124,18],[137,62,125,8],[137,64,125,10],[137,71,125,17,"data"],[137,75,125,21],[137,76,125,22,"data"],[137,80,125,26],[137,85,125,31],[137,93,125,39],[137,94,125,40],[137,98,126,8],[137,99,126,9,"data"],[137,103,126,13],[137,104,126,14,"data"],[137,108,126,18],[137,109,126,19,"expoPushToken"],[137,122,126,32],[137,126,127,8],[137,128,127,10],[137,135,127,17,"data"],[137,139,127,21],[137,140,127,22,"data"],[137,144,127,26],[137,145,127,27,"expoPushToken"],[137,158,127,40],[137,163,127,45],[137,171,127,53],[137,172,127,54],[137,174,127,56],[138,6,128,8],[138,12,128,14],[138,16,128,18,"CodedError"],[138,43,128,28],[138,44,128,29],[138,76,128,61],[138,78,128,63],[138,171,128,156,"JSON"],[138,175,128,160],[138,176,128,161,"stringify"],[138,185,128,170],[138,186,128,171,"data"],[138,190,128,175],[138,192,128,177],[138,196,128,181],[138,198,128,183],[138,199,128,184],[138,200,128,185],[138,203,128,188],[138,204,128,189],[139,4,129,4],[140,4,130,4],[140,11,130,11,"data"],[140,15,130,15],[140,16,130,16,"data"],[140,20,130,20],[140,21,130,21,"expoPushToken"],[140,34,130,34],[141,2,131,0],[142,2,132,0],[143,2,132,0],[143,11,133,15,"getDeviceIdAsync"],[143,27,133,31,"getDeviceIdAsync"],[143,28,133,31],[144,4,133,31],[144,11,133,31,"_getDeviceIdAsync"],[144,28,133,31],[144,29,133,31,"apply"],[144,34,133,31],[144,41,133,31,"arguments"],[144,50,133,31],[145,2,133,31],[146,2,133,31],[146,11,133,31,"_getDeviceIdAsync"],[146,29,133,31],[147,4,133,31,"_getDeviceIdAsync"],[147,21,133,31],[147,28,133,31,"_asyncToGenerator2"],[147,46,133,31],[147,47,133,31,"default"],[147,54,133,31],[147,56,133,0],[147,69,133,34],[148,6,134,4],[148,10,134,8],[149,8,135,8],[149,12,135,12],[149,13,135,13,"ServerRegistrationModule"],[149,46,135,37],[149,47,135,38,"getInstallationIdAsync"],[149,69,135,60],[149,71,135,62],[150,10,136,12],[150,16,136,18],[150,20,136,22,"UnavailabilityError"],[150,56,136,41],[150,57,136,42],[150,87,136,72],[150,89,136,74],[150,113,136,98],[150,114,136,99],[151,8,137,8],[152,8,138,8],[152,21,138,21,"ServerRegistrationModule"],[152,54,138,45],[152,55,138,46,"getInstallationIdAsync"],[152,77,138,68],[152,78,138,69],[152,79,138,70],[153,6,139,4],[153,7,139,5],[153,8,140,4],[153,15,140,11,"e"],[153,16,140,12],[153,18,140,14],[154,8,141,8],[154,14,141,14],[154,18,141,18,"CodedError"],[154,45,141,28],[154,46,141,29],[154,67,141,50],[154,69,141,52],[154,131,141,114,"e"],[154,132,141,115],[154,135,141,118],[154,136,141,119],[155,6,142,4],[156,4,143,0],[156,5,143,1],[157,4,143,1],[157,11,143,1,"_getDeviceIdAsync"],[157,28,143,1],[157,29,143,1,"apply"],[157,34,143,1],[157,41,143,1,"arguments"],[157,50,143,1],[158,2,143,1],[159,2,144,0],[159,11,144,9,"getDeviceToken"],[159,25,144,23,"getDeviceToken"],[159,26,144,24,"devicePushToken"],[159,41,144,39],[159,43,144,41],[160,4,145,4],[160,8,145,8],[160,15,145,15,"devicePushToken"],[160,30,145,30],[160,31,145,31,"data"],[160,35,145,35],[160,40,145,40],[160,48,145,48],[160,50,145,50],[161,6,146,8],[161,13,146,15,"devicePushToken"],[161,28,146,30],[161,29,146,31,"data"],[161,33,146,35],[162,4,147,4],[163,4,148,4],[163,11,148,11,"JSON"],[163,15,148,15],[163,16,148,16,"stringify"],[163,25,148,25],[163,26,148,26,"devicePushToken"],[163,41,148,41],[163,42,148,42,"data"],[163,46,148,46],[163,47,148,47],[164,2,149,0],[165,2,150,0],[166,2,150,0],[166,11,151,15,"shouldUseDevelopmentNotificationService"],[166,50,151,54,"shouldUseDevelopmentNotificationService"],[166,51,151,54],[167,4,151,54],[167,11,151,54,"_shouldUseDevelopmentNotificationService"],[167,51,151,54],[167,52,151,54,"apply"],[167,57,151,54],[167,64,151,54,"arguments"],[167,73,151,54],[168,2,151,54],[168,4,165,0],[169,2,165,0],[169,11,165,0,"_shouldUseDevelopmentNotificationService"],[169,52,165,0],[170,4,165,0,"_shouldUseDevelopmentNotificationService"],[170,44,165,0],[170,51,165,0,"_asyncToGenerator2"],[170,69,165,0],[170,70,165,0,"default"],[170,77,165,0],[170,79,151,0],[170,92,151,57],[171,6,152,4],[171,10,152,8,"Platform"],[171,35,152,16],[171,36,152,17,"OS"],[171,38,152,19],[171,43,152,24],[171,48,152,29],[171,50,152,31],[172,8,153,8],[172,12,153,12],[173,10,154,12],[173,14,154,18,"notificationServiceEnvironment"],[173,44,154,48],[173,53,154,57,"Application"],[173,64,154,68],[173,65,154,69,"getIosPushNotificationServiceEnvironmentAsync"],[173,110,154,114],[173,111,154,115],[173,112,154,116],[174,10,155,12],[174,14,155,16,"notificationServiceEnvironment"],[174,44,155,46],[174,49,155,51],[174,62,155,64],[174,64,155,66],[175,12,156,16],[175,19,156,23],[175,23,156,27],[176,10,157,12],[177,8,158,8],[177,9,158,9],[177,10,159,8],[177,17,159,8,"_unused4"],[177,25,159,8],[177,27,159,14],[178,10,160,12],[179,8,160,12],[180,6,162,4],[181,6,163,4],[181,13,163,11],[181,18,163,16],[182,4,164,0],[182,5,164,1],[183,4,164,1],[183,11,164,1,"_shouldUseDevelopmentNotificationService"],[183,51,164,1],[183,52,164,1,"apply"],[183,57,164,1],[183,64,164,1,"arguments"],[183,73,164,1],[184,2,164,1],[185,2,166,0],[185,11,166,9,"getTypeOfToken"],[185,25,166,23,"getTypeOfToken"],[185,26,166,24,"devicePushToken"],[185,41,166,39],[185,43,166,41],[186,4,167,4],[186,12,167,12,"devicePushToken"],[186,27,167,27],[186,28,167,28,"type"],[186,32,167,32],[187,6,168,8],[187,11,168,13],[187,16,168,18],[188,8,169,12],[188,15,169,19],[188,21,169,25],[189,6,170,8],[189,11,170,13],[189,20,170,22],[190,8,171,12],[190,15,171,19],[190,20,171,24],[191,6,172,8],[192,6,173,8],[193,8,174,12],[193,15,174,19,"devicePushToken"],[193,30,174,34],[193,31,174,35,"type"],[193,35,174,39],[194,4,175,4],[195,2,176,0],[196,0,176,1],[196,3]],"functionMap":{"names":["<global>","getExpoPushTokenAsync","fetch._catch$argument_0","parseResponse","getExpoPushToken","getDeviceIdAsync","getDeviceToken","shouldUseDevelopmentNotificationService","getTypeOfToken"],"mappings":"AAA;eC4C;aCgC;KDE;CD4B;AGC;CHY;AIC;CJU;AKE;CLU;AMC;CNK;AOE;CPa;AQE;CRU"}},"type":"js/module"}]}