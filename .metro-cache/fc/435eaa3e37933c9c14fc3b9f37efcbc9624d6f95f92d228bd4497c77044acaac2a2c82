{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-is","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":46,"index":93}}],"key":"nMRUu046PLZz3vjxw7Fgw3UH3xY=","exportNames":["*"]}},{"name":"./useRoute.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":94},"end":{"line":5,"column":41,"index":135}}],"key":"099N+Zv4K9pUFNBPk2MtNNMStD8=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":808},"end":{"line":30,"column":48,"index":856}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createComponentForStaticNavigation = createComponentForStaticNavigation;\n  exports.createPathConfigForStaticNavigation = createPathConfigForStaticNavigation;\n  var _toConsumableArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _objectWithoutProperties2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n  var React = _interopRequireWildcard(require(_dependencyMap[4], \"react\"));\n  var _reactIs = require(_dependencyMap[5], \"react-is\");\n  var _useRoute = require(_dependencyMap[6], \"./useRoute.js\");\n  var _jsxRuntime = require(_dependencyMap[7], \"react/jsx-runtime\");\n  var _excluded = [\"screen\", \"if\"],\n    _excluded2 = [\"screens\", \"groups\"],\n    _excluded3 = [\"if\"];\n  /**\n   * Flatten a type to remove all type alias names, unions etc.\n   * This will show a plain object when hovering over the type.\n   */\n  /**\n   * keyof T doesn't work for union types. We can use distributive conditional types instead.\n   * https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types\n   */\n  /**\n   * We get a union type when using keyof, but we want an intersection instead.\n   * https://stackoverflow.com/a/50375286/1665026\n   */\n  /**\n   * Props for a screen component which is rendered by a static navigator.\n   * Takes the route params as a generic argument.\n   */\n  /**\n   * Infer the param list from the static navigation config.\n   */\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  var MemoizedScreen = /*#__PURE__*/React.memo(function (_ref) {\n    var component = _ref.component;\n    var route = (0, _useRoute.useRoute)();\n    var children = /*#__PURE__*/React.createElement(component, {\n      route: route\n    });\n    return children;\n  });\n  MemoizedScreen.displayName = 'Memo(Screen)';\n  var getItemsFromScreens = function getItemsFromScreens(Screen, screens) {\n    return Object.entries(screens).map(function (_ref2) {\n      var _ref3 = (0, _slicedToArray2.default)(_ref2, 2),\n        name = _ref3[0],\n        item = _ref3[1];\n      var component;\n      var props = {};\n      var useIf;\n      var isNavigator = false;\n      if ('screen' in item) {\n        var screen = item.screen,\n          _if = item.if,\n          rest = (0, _objectWithoutProperties2.default)(item, _excluded);\n        useIf = _if;\n        props = rest;\n        if ((0, _reactIs.isValidElementType)(screen)) {\n          component = screen;\n        } else if ('config' in screen) {\n          isNavigator = true;\n          component = createComponentForStaticNavigation(screen, `${name}Navigator`);\n        }\n      } else if ((0, _reactIs.isValidElementType)(item)) {\n        component = item;\n      } else if ('config' in item) {\n        isNavigator = true;\n        component = createComponentForStaticNavigation(item, `${name}Navigator`);\n      }\n      if (component == null) {\n        throw new Error(`Couldn't find a 'screen' property for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n      }\n      var element = isNavigator ? (/*#__PURE__*/React.createElement(component, {})) : /*#__PURE__*/(0, _jsxRuntime.jsx)(MemoizedScreen, {\n        component: component\n      });\n      return function () {\n        var shouldRender = useIf == null || useIf();\n        if (!shouldRender) {\n          return null;\n        }\n        return /*#__PURE__*/(0, _jsxRuntime.jsx)(Screen, Object.assign({\n          name: name\n        }, props, {\n          children: function children() {\n            return element;\n          }\n        }), name);\n      };\n    });\n  };\n\n  /**\n   * Create a component that renders a navigator based on the static configuration.\n   *\n   * @param tree Static navigation config.\n   * @param displayName Name of the component to be displayed in React DevTools.\n   * @returns A component which renders the navigator.\n   */\n  function createComponentForStaticNavigation(tree, displayName) {\n    var Navigator = tree.Navigator,\n      Group = tree.Group,\n      Screen = tree.Screen,\n      config = tree.config;\n    var screens = config.screens,\n      groups = config.groups,\n      rest = (0, _objectWithoutProperties2.default)(config, _excluded2);\n    if (screens == null && groups == null) {\n      throw new Error(\"Couldn't find a 'screens' or 'groups' property. Make sure to define your screens under a 'screens' property in the configuration.\");\n    }\n    var items = [];\n\n    // Loop through the config to find screens and groups\n    // So we add the screens and groups in the same order as they are defined\n    for (var key in config) {\n      if (key === 'screens' && screens) {\n        items.push.apply(items, (0, _toConsumableArray2.default)(getItemsFromScreens(Screen, screens)));\n      }\n      if (key === 'groups' && groups) {\n        items.push.apply(items, (0, _toConsumableArray2.default)(Object.entries(groups).map(function (_ref5) {\n          var _ref6 = (0, _slicedToArray2.default)(_ref5, 2),\n            key = _ref6[0],\n            _ref4 = _ref6[1];\n          var useIf = _ref4.if,\n            group = (0, _objectWithoutProperties2.default)(_ref4, _excluded3);\n          var groupItems = getItemsFromScreens(Screen, group.screens);\n          return function () {\n            // Call unconditionally since screen configs may contain `useIf` hooks\n            var children = groupItems.map(function (item) {\n              return item();\n            });\n            var shouldRender = useIf == null || useIf();\n            if (!shouldRender) {\n              return null;\n            }\n            return /*#__PURE__*/(0, _jsxRuntime.jsx)(Group, Object.assign({\n              navigationKey: key\n            }, group, {\n              children: children\n            }), key);\n          };\n        })));\n      }\n    }\n    var NavigatorComponent = function NavigatorComponent() {\n      var children = items.map(function (item) {\n        return item();\n      });\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(Navigator, Object.assign({}, rest, {\n        children: children\n      }));\n    };\n    NavigatorComponent.displayName = displayName;\n    return NavigatorComponent;\n  }\n  /**\n   * Create a path config object from a static navigation config for deep linking.\n   *\n   * @param tree Static navigation config.\n   * @param options Additional options from `linking.config`.\n   * @param auto Whether to automatically generate paths for leaf screens.\n   * @returns Path config object to use in linking config.\n   *\n   * @example\n   * ```js\n   * const config = {\n   *   screens: {\n   *     Home: {\n   *       screens: createPathConfigForStaticNavigation(HomeTabs),\n   *     },\n   *   },\n   * };\n   * ```\n   */\n  function createPathConfigForStaticNavigation(tree, options, auto) {\n    var initialScreenHasPath = false;\n    var initialScreenConfig;\n    var _createPathConfigForTree = function createPathConfigForTree(t, o, skipInitialDetection) {\n      var createPathConfigForScreens = function createPathConfigForScreens(screens, initialRouteName) {\n        return Object.fromEntries(Object.entries(screens)\n        // Re-order to move the initial route to the front\n        // This way we can detect the initial route correctly\n        .sort(function (_ref7, _ref8) {\n          var _ref9 = (0, _slicedToArray2.default)(_ref7, 1),\n            a = _ref9[0];\n          var _ref0 = (0, _slicedToArray2.default)(_ref8, 1),\n            b = _ref0[0];\n          if (a === initialRouteName) {\n            return -1;\n          }\n          if (b === initialRouteName) {\n            return 1;\n          }\n          return 0;\n        }).map(function (_ref1) {\n          var _ref10 = (0, _slicedToArray2.default)(_ref1, 2),\n            key = _ref10[0],\n            item = _ref10[1];\n          var screenConfig = {};\n          if ('linking' in item) {\n            if (typeof item.linking === 'string') {\n              screenConfig.path = item.linking;\n            } else {\n              Object.assign(screenConfig, item.linking);\n            }\n            if (typeof screenConfig.path === 'string') {\n              screenConfig.path = screenConfig.path.replace(/^\\//, '') // Remove extra leading slash\n              .replace(/\\/$/, ''); // Remove extra trailing slash\n            }\n          }\n          var screens;\n          var skipInitialDetectionInChild = skipInitialDetection || screenConfig.path != null && screenConfig.path !== '';\n          if ('config' in item) {\n            screens = _createPathConfigForTree(item, undefined, skipInitialDetectionInChild);\n          } else if ('screen' in item && 'config' in item.screen && (item.screen.config.screens || item.screen.config.groups)) {\n            screens = _createPathConfigForTree(item.screen, undefined, skipInitialDetectionInChild);\n          }\n          if (screens) {\n            screenConfig.screens = screens;\n          }\n          if (auto && !screenConfig.screens &&\n          // Skip generating path for screens that specify linking config as `undefined` or `null` explicitly\n          !('linking' in item && item.linking == null)) {\n            if (screenConfig.path != null) {\n              if (!skipInitialDetection) {\n                if (key === initialRouteName && screenConfig.path != null) {\n                  initialScreenHasPath = true;\n                } else if (screenConfig.path === '') {\n                  // We encounter a leaf screen with empty path,\n                  // Clear the initial screen config as it's not needed anymore\n                  initialScreenConfig = undefined;\n                }\n              }\n            } else {\n              if (!skipInitialDetection && initialScreenConfig == null) {\n                initialScreenConfig = screenConfig;\n              }\n              screenConfig.path = key.replace(/([A-Z]+)/g, '-$1').replace(/^-/, '').toLowerCase();\n            }\n          }\n          return [key, screenConfig];\n        }).filter(function (_ref11) {\n          var _ref12 = (0, _slicedToArray2.default)(_ref11, 2),\n            screen = _ref12[1];\n          return Object.keys(screen).length > 0;\n        }));\n      };\n      var screens = {};\n\n      // Loop through the config to find screens and groups\n      // So we add the screens and groups in the same order as they are defined\n      for (var key in t.config) {\n        if (key === 'screens' && t.config.screens) {\n          var _o$initialRouteName;\n          Object.assign(screens, createPathConfigForScreens(t.config.screens, (_o$initialRouteName = o == null ? void 0 : o.initialRouteName) != null ? _o$initialRouteName : t.config.initialRouteName));\n        }\n        if (key === 'groups' && t.config.groups) {\n          Object.entries(t.config.groups).forEach(function (_ref13) {\n            var _o$initialRouteName2;\n            var _ref14 = (0, _slicedToArray2.default)(_ref13, 2),\n              group = _ref14[1];\n            Object.assign(screens, createPathConfigForScreens(group.screens, (_o$initialRouteName2 = o == null ? void 0 : o.initialRouteName) != null ? _o$initialRouteName2 : t.config.initialRouteName));\n          });\n        }\n      }\n      if (Object.keys(screens).length === 0) {\n        return undefined;\n      }\n      return screens;\n    };\n    var screens = _createPathConfigForTree(tree, options, false);\n    if (auto && initialScreenConfig && !initialScreenHasPath) {\n      initialScreenConfig.path = '';\n    }\n    return screens;\n  }\n});","lineCount":282,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"createComponentForStaticNavigation"],[8,44,1,13],[8,47,1,13,"createComponentForStaticNavigation"],[8,81,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"createPathConfigForStaticNavigation"],[9,45,1,13],[9,48,1,13,"createPathConfigForStaticNavigation"],[9,83,1,13],[10,2,1,13],[10,6,1,13,"_toConsumableArray2"],[10,25,1,13],[10,28,1,13,"_interopRequireDefault"],[10,50,1,13],[10,51,1,13,"require"],[10,58,1,13],[10,59,1,13,"_dependencyMap"],[10,73,1,13],[11,2,1,13],[11,6,1,13,"_objectWithoutProperties2"],[11,31,1,13],[11,34,1,13,"_interopRequireDefault"],[11,56,1,13],[11,57,1,13,"require"],[11,64,1,13],[11,65,1,13,"_dependencyMap"],[11,79,1,13],[12,2,1,13],[12,6,1,13,"_slicedToArray2"],[12,21,1,13],[12,24,1,13,"_interopRequireDefault"],[12,46,1,13],[12,47,1,13,"require"],[12,54,1,13],[12,55,1,13,"_dependencyMap"],[12,69,1,13],[13,2,3,0],[13,6,3,0,"React"],[13,11,3,0],[13,14,3,0,"_interopRequireWildcard"],[13,37,3,0],[13,38,3,0,"require"],[13,45,3,0],[13,46,3,0,"_dependencyMap"],[13,60,3,0],[14,2,4,0],[14,6,4,0,"_reactIs"],[14,14,4,0],[14,17,4,0,"require"],[14,24,4,0],[14,25,4,0,"_dependencyMap"],[14,39,4,0],[15,2,5,0],[15,6,5,0,"_useRoute"],[15,15,5,0],[15,18,5,0,"require"],[15,25,5,0],[15,26,5,0,"_dependencyMap"],[15,40,5,0],[16,2,30,0],[16,6,30,0,"_jsxRuntime"],[16,17,30,0],[16,20,30,0,"require"],[16,27,30,0],[16,28,30,0,"_dependencyMap"],[16,42,30,0],[17,2,30,48],[17,6,30,48,"_excluded"],[17,15,30,48],[18,4,30,48,"_excluded2"],[18,14,30,48],[19,4,30,48,"_excluded3"],[19,14,30,48],[20,2,7,0],[21,0,8,0],[22,0,9,0],[23,0,10,0],[24,2,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,2,17,0],[29,0,18,0],[30,0,19,0],[31,0,20,0],[32,2,22,0],[33,0,23,0],[34,0,24,0],[35,0,25,0],[36,2,27,0],[37,0,28,0],[38,0,29,0],[39,2,27,0],[39,11,27,0,"_interopRequireWildcard"],[39,35,27,0,"e"],[39,36,27,0],[39,38,27,0,"t"],[39,39,27,0],[39,68,27,0,"WeakMap"],[39,75,27,0],[39,81,27,0,"r"],[39,82,27,0],[39,89,27,0,"WeakMap"],[39,96,27,0],[39,100,27,0,"n"],[39,101,27,0],[39,108,27,0,"WeakMap"],[39,115,27,0],[39,127,27,0,"_interopRequireWildcard"],[39,150,27,0],[39,162,27,0,"_interopRequireWildcard"],[39,186,27,0,"e"],[39,187,27,0],[39,189,27,0,"t"],[39,190,27,0],[39,199,27,0,"t"],[39,200,27,0],[39,204,27,0,"e"],[39,205,27,0],[39,209,27,0,"e"],[39,210,27,0],[39,211,27,0,"__esModule"],[39,221,27,0],[39,230,27,0,"e"],[39,231,27,0],[39,237,27,0,"o"],[39,238,27,0],[39,240,27,0,"i"],[39,241,27,0],[39,243,27,0,"f"],[39,244,27,0],[39,249,27,0,"__proto__"],[39,258,27,0],[39,266,27,0,"default"],[39,273,27,0],[39,275,27,0,"e"],[39,276,27,0],[39,293,27,0,"e"],[39,294,27,0],[39,317,27,0,"e"],[39,318,27,0],[39,343,27,0,"e"],[39,344,27,0],[39,353,27,0,"f"],[39,354,27,0],[39,360,27,0,"o"],[39,361,27,0],[39,364,27,0,"t"],[39,365,27,0],[39,368,27,0,"n"],[39,369,27,0],[39,372,27,0,"r"],[39,373,27,0],[39,381,27,0,"o"],[39,382,27,0],[39,383,27,0,"has"],[39,386,27,0],[39,387,27,0,"e"],[39,388,27,0],[39,398,27,0,"o"],[39,399,27,0],[39,400,27,0,"get"],[39,403,27,0],[39,404,27,0,"e"],[39,405,27,0],[39,408,27,0,"o"],[39,409,27,0],[39,410,27,0,"set"],[39,413,27,0],[39,414,27,0,"e"],[39,415,27,0],[39,417,27,0,"f"],[39,418,27,0],[39,432,27,0,"_t"],[39,434,27,0],[39,438,27,0,"e"],[39,439,27,0],[39,455,27,0,"_t"],[39,457,27,0],[39,464,27,0,"hasOwnProperty"],[39,478,27,0],[39,479,27,0,"call"],[39,483,27,0],[39,484,27,0,"e"],[39,485,27,0],[39,487,27,0,"_t"],[39,489,27,0],[39,496,27,0,"i"],[39,497,27,0],[39,501,27,0,"o"],[39,502,27,0],[39,505,27,0,"Object"],[39,511,27,0],[39,512,27,0,"defineProperty"],[39,526,27,0],[39,531,27,0,"Object"],[39,537,27,0],[39,538,27,0,"getOwnPropertyDescriptor"],[39,562,27,0],[39,563,27,0,"e"],[39,564,27,0],[39,566,27,0,"_t"],[39,568,27,0],[39,575,27,0,"i"],[39,576,27,0],[39,577,27,0,"get"],[39,580,27,0],[39,584,27,0,"i"],[39,585,27,0],[39,586,27,0,"set"],[39,589,27,0],[39,593,27,0,"o"],[39,594,27,0],[39,595,27,0,"f"],[39,596,27,0],[39,598,27,0,"_t"],[39,600,27,0],[39,602,27,0,"i"],[39,603,27,0],[39,607,27,0,"f"],[39,608,27,0],[39,609,27,0,"_t"],[39,611,27,0],[39,615,27,0,"e"],[39,616,27,0],[39,617,27,0,"_t"],[39,619,27,0],[39,630,27,0,"f"],[39,631,27,0],[39,636,27,0,"e"],[39,637,27,0],[39,639,27,0,"t"],[39,640,27,0],[40,2,31,0],[40,6,31,6,"MemoizedScreen"],[40,20,31,20],[40,23,31,23],[40,36,31,36,"React"],[40,41,31,41],[40,42,31,42,"memo"],[40,46,31,46],[40,47,31,47],[40,57,31,47,"_ref"],[40,61,31,47],[40,63,33,6],[41,4,33,6],[41,8,32,2,"component"],[41,17,32,11],[41,20,32,11,"_ref"],[41,24,32,11],[41,25,32,2,"component"],[41,34,32,11],[42,4,34,2],[42,8,34,8,"route"],[42,13,34,13],[42,16,34,16],[42,20,34,16,"useRoute"],[42,38,34,24],[42,40,34,25],[42,41,34,26],[43,4,35,2],[43,8,35,8,"children"],[43,16,35,16],[43,19,35,19],[43,32,35,32,"React"],[43,37,35,37],[43,38,35,38,"createElement"],[43,51,35,51],[43,52,35,52,"component"],[43,61,35,61],[43,63,35,63],[44,6,36,4,"route"],[44,11,36,9],[44,13,36,4,"route"],[45,4,37,2],[45,5,37,3],[45,6,37,4],[46,4,38,2],[46,11,38,9,"children"],[46,19,38,17],[47,2,39,0],[47,3,39,1],[47,4,39,2],[48,2,40,0,"MemoizedScreen"],[48,16,40,14],[48,17,40,15,"displayName"],[48,28,40,26],[48,31,40,29],[48,45,40,43],[49,2,41,0],[49,6,41,6,"getItemsFromScreens"],[49,25,41,25],[49,28,41,28],[49,37,41,6,"getItemsFromScreens"],[49,56,41,25,"getItemsFromScreens"],[49,57,41,29,"Screen"],[49,63,41,35],[49,65,41,37,"screens"],[49,72,41,44],[49,74,41,49],[50,4,42,2],[50,11,42,9,"Object"],[50,17,42,15],[50,18,42,16,"entries"],[50,25,42,23],[50,26,42,24,"screens"],[50,33,42,31],[50,34,42,32],[50,35,42,33,"map"],[50,38,42,36],[50,39,42,37],[50,49,42,37,"_ref2"],[50,54,42,37],[50,56,42,55],[51,6,42,55],[51,10,42,55,"_ref3"],[51,15,42,55],[51,22,42,55,"_slicedToArray2"],[51,37,42,55],[51,38,42,55,"default"],[51,45,42,55],[51,47,42,55,"_ref2"],[51,52,42,55],[52,8,42,39,"name"],[52,12,42,43],[52,15,42,43,"_ref3"],[52,20,42,43],[53,8,42,45,"item"],[53,12,42,49],[53,15,42,49,"_ref3"],[53,20,42,49],[54,6,43,4],[54,10,43,8,"component"],[54,19,43,17],[55,6,44,4],[55,10,44,8,"props"],[55,15,44,13],[55,18,44,16],[55,19,44,17],[55,20,44,18],[56,6,45,4],[56,10,45,8,"useIf"],[56,15,45,13],[57,6,46,4],[57,10,46,8,"isNavigator"],[57,21,46,19],[57,24,46,22],[57,29,46,27],[58,6,47,4],[58,10,47,8],[58,18,47,16],[58,22,47,20,"item"],[58,26,47,24],[58,28,47,26],[59,8,48,6],[59,12,49,8,"screen"],[59,18,49,14],[59,21,52,10,"item"],[59,25,52,14],[59,26,49,8,"screen"],[59,32,49,14],[60,10,50,12,"_if"],[60,13,50,15],[60,16,52,10,"item"],[60,20,52,14],[60,21,50,8,"if"],[60,23,50,10],[61,10,51,11,"rest"],[61,14,51,15],[61,21,51,15,"_objectWithoutProperties2"],[61,46,51,15],[61,47,51,15,"default"],[61,54,51,15],[61,56,52,10,"item"],[61,60,52,14],[61,62,52,14,"_excluded"],[61,71,52,14],[62,8,53,6,"useIf"],[62,13,53,11],[62,16,53,14,"_if"],[62,19,53,17],[63,8,54,6,"props"],[63,13,54,11],[63,16,54,14,"rest"],[63,20,54,18],[64,8,55,6],[64,12,55,10],[64,16,55,10,"isValidElementType"],[64,43,55,28],[64,45,55,29,"screen"],[64,51,55,35],[64,52,55,36],[64,54,55,38],[65,10,56,8,"component"],[65,19,56,17],[65,22,56,20,"screen"],[65,28,56,26],[66,8,57,6],[66,9,57,7],[66,15,57,13],[66,19,57,17],[66,27,57,25],[66,31,57,29,"screen"],[66,37,57,35],[66,39,57,37],[67,10,58,8,"isNavigator"],[67,21,58,19],[67,24,58,22],[67,28,58,26],[68,10,59,8,"component"],[68,19,59,17],[68,22,59,20,"createComponentForStaticNavigation"],[68,56,59,54],[68,57,59,55,"screen"],[68,63,59,61],[68,65,59,63],[68,68,59,66,"name"],[68,72,59,70],[68,83,59,81],[68,84,59,82],[69,8,60,6],[70,6,61,4],[70,7,61,5],[70,13,61,11],[70,17,61,15],[70,21,61,15,"isValidElementType"],[70,48,61,33],[70,50,61,34,"item"],[70,54,61,38],[70,55,61,39],[70,57,61,41],[71,8,62,6,"component"],[71,17,62,15],[71,20,62,18,"item"],[71,24,62,22],[72,6,63,4],[72,7,63,5],[72,13,63,11],[72,17,63,15],[72,25,63,23],[72,29,63,27,"item"],[72,33,63,31],[72,35,63,33],[73,8,64,6,"isNavigator"],[73,19,64,17],[73,22,64,20],[73,26,64,24],[74,8,65,6,"component"],[74,17,65,15],[74,20,65,18,"createComponentForStaticNavigation"],[74,54,65,52],[74,55,65,53,"item"],[74,59,65,57],[74,61,65,59],[74,64,65,62,"name"],[74,68,65,66],[74,79,65,77],[74,80,65,78],[75,6,66,4],[76,6,67,4],[76,10,67,8,"component"],[76,19,67,17],[76,23,67,21],[76,27,67,25],[76,29,67,27],[77,8,68,6],[77,14,68,12],[77,18,68,16,"Error"],[77,23,68,21],[77,24,68,22],[77,77,68,75,"name"],[77,81,68,79],[77,262,68,260],[77,263,68,261],[78,6,69,4],[79,6,70,4],[79,10,70,10,"element"],[79,17,70,17],[79,20,70,20,"isNavigator"],[79,31,70,31],[79,35,70,35],[79,48,70,48,"React"],[79,53,70,53],[79,54,70,54,"createElement"],[79,67,70,67],[79,68,70,68,"component"],[79,77,70,77],[79,79,70,79],[79,80,70,80],[79,81,70,81],[79,82,70,82],[79,86,70,86],[79,99,70,99],[79,103,70,99,"_jsx"],[79,118,70,103],[79,120,70,104,"MemoizedScreen"],[79,134,70,118],[79,136,70,120],[80,8,71,6,"component"],[80,17,71,15],[80,19,71,17,"component"],[81,6,72,4],[81,7,72,5],[81,8,72,6],[82,6,73,4],[82,13,73,11],[82,25,73,17],[83,8,74,6],[83,12,74,12,"shouldRender"],[83,24,74,24],[83,27,74,27,"useIf"],[83,32,74,32],[83,36,74,36],[83,40,74,40],[83,44,74,44,"useIf"],[83,49,74,49],[83,50,74,50],[83,51,74,51],[84,8,75,6],[84,12,75,10],[84,13,75,11,"shouldRender"],[84,25,75,23],[84,27,75,25],[85,10,76,8],[85,17,76,15],[85,21,76,19],[86,8,77,6],[87,8,78,6],[87,15,78,13],[87,28,78,26],[87,32,78,26,"_jsx"],[87,47,78,30],[87,49,78,31,"Screen"],[87,55,78,37],[87,57,78,37,"Object"],[87,63,78,37],[87,64,78,37,"assign"],[87,70,78,37],[88,10,79,8,"name"],[88,14,79,12],[88,16,79,14,"name"],[89,8,79,18],[89,11,80,11,"props"],[89,16,80,16],[90,10,81,8,"children"],[90,18,81,16],[90,20,81,18],[90,29,81,8,"children"],[90,37,81,16,"children"],[90,38,81,16],[91,12,81,16],[91,19,81,24,"element"],[91,26,81,31],[92,10,81,31],[93,8,81,31],[93,12,82,9,"name"],[93,16,82,13],[93,17,82,14],[94,6,83,4],[94,7,83,5],[95,4,84,2],[95,5,84,3],[95,6,84,4],[96,2,85,0],[96,3,85,1],[98,2,87,0],[99,0,88,0],[100,0,89,0],[101,0,90,0],[102,0,91,0],[103,0,92,0],[104,0,93,0],[105,2,94,7],[105,11,94,16,"createComponentForStaticNavigation"],[105,45,94,50,"createComponentForStaticNavigation"],[105,46,94,51,"tree"],[105,50,94,55],[105,52,94,57,"displayName"],[105,63,94,68],[105,65,94,70],[106,4,95,2],[106,8,96,4,"Navigator"],[106,17,96,13],[106,20,100,6,"tree"],[106,24,100,10],[106,25,96,4,"Navigator"],[106,34,96,13],[107,6,97,4,"Group"],[107,11,97,9],[107,14,100,6,"tree"],[107,18,100,10],[107,19,97,4,"Group"],[107,24,97,9],[108,6,98,4,"Screen"],[108,12,98,10],[108,15,100,6,"tree"],[108,19,100,10],[108,20,98,4,"Screen"],[108,26,98,10],[109,6,99,4,"config"],[109,12,99,10],[109,15,100,6,"tree"],[109,19,100,10],[109,20,99,4,"config"],[109,26,99,10],[110,4,101,2],[110,8,102,4,"screens"],[110,15,102,11],[110,18,105,6,"config"],[110,24,105,12],[110,25,102,4,"screens"],[110,32,102,11],[111,6,103,4,"groups"],[111,12,103,10],[111,15,105,6,"config"],[111,21,105,12],[111,22,103,4,"groups"],[111,28,103,10],[112,6,104,7,"rest"],[112,10,104,11],[112,17,104,11,"_objectWithoutProperties2"],[112,42,104,11],[112,43,104,11,"default"],[112,50,104,11],[112,52,105,6,"config"],[112,58,105,12],[112,60,105,12,"_excluded2"],[112,70,105,12],[113,4,106,2],[113,8,106,6,"screens"],[113,15,106,13],[113,19,106,17],[113,23,106,21],[113,27,106,25,"groups"],[113,33,106,31],[113,37,106,35],[113,41,106,39],[113,43,106,41],[114,6,107,4],[114,12,107,10],[114,16,107,14,"Error"],[114,21,107,19],[114,22,107,20],[114,153,107,151],[114,154,107,152],[115,4,108,2],[116,4,109,2],[116,8,109,8,"items"],[116,13,109,13],[116,16,109,16],[116,18,109,18],[118,4,111,2],[119,4,112,2],[120,4,113,2],[120,9,113,7],[120,13,113,13,"key"],[120,16,113,16],[120,20,113,20,"config"],[120,26,113,26],[120,28,113,28],[121,6,114,4],[121,10,114,8,"key"],[121,13,114,11],[121,18,114,16],[121,27,114,25],[121,31,114,29,"screens"],[121,38,114,36],[121,40,114,38],[122,8,115,6,"items"],[122,13,115,11],[122,14,115,12,"push"],[122,18,115,16],[122,19,115,16,"apply"],[122,24,115,16],[122,25,115,6,"items"],[122,30,115,11],[122,36,115,11,"_toConsumableArray2"],[122,55,115,11],[122,56,115,11,"default"],[122,63,115,11],[122,65,115,20,"getItemsFromScreens"],[122,84,115,39],[122,85,115,40,"Screen"],[122,91,115,46],[122,93,115,48,"screens"],[122,100,115,55],[122,101,115,56],[122,103,115,57],[123,6,116,4],[124,6,117,4],[124,10,117,8,"key"],[124,13,117,11],[124,18,117,16],[124,26,117,24],[124,30,117,28,"groups"],[124,36,117,34],[124,38,117,36],[125,8,118,6,"items"],[125,13,118,11],[125,14,118,12,"push"],[125,18,118,16],[125,19,118,16,"apply"],[125,24,118,16],[125,25,118,6,"items"],[125,30,118,11],[125,36,118,11,"_toConsumableArray2"],[125,55,118,11],[125,56,118,11,"default"],[125,63,118,11],[125,65,118,20,"Object"],[125,71,118,26],[125,72,118,27,"entries"],[125,79,118,34],[125,80,118,35,"groups"],[125,86,118,41],[125,87,118,42],[125,88,118,43,"map"],[125,91,118,46],[125,92,118,47],[125,102,118,47,"_ref5"],[125,107,118,47],[125,109,121,13],[126,10,121,13],[126,14,121,13,"_ref6"],[126,19,121,13],[126,26,121,13,"_slicedToArray2"],[126,41,121,13],[126,42,121,13,"default"],[126,49,121,13],[126,51,121,13,"_ref5"],[126,56,121,13],[127,12,118,49,"key"],[127,15,118,52],[127,18,118,52,"_ref6"],[127,23,118,52],[128,12,118,52,"_ref4"],[128,17,118,52],[128,20,118,52,"_ref6"],[128,25,118,52],[129,10,118,52],[129,14,119,12,"useIf"],[129,19,119,17],[129,22,119,17,"_ref4"],[129,27,119,17],[129,28,119,8,"if"],[129,30,119,10],[130,12,120,11,"group"],[130,17,120,16],[130,24,120,16,"_objectWithoutProperties2"],[130,49,120,16],[130,50,120,16,"default"],[130,57,120,16],[130,59,120,16,"_ref4"],[130,64,120,16],[130,66,120,16,"_excluded3"],[130,76,120,16],[131,10,122,8],[131,14,122,14,"groupItems"],[131,24,122,24],[131,27,122,27,"getItemsFromScreens"],[131,46,122,46],[131,47,122,47,"Screen"],[131,53,122,53],[131,55,122,55,"group"],[131,60,122,60],[131,61,122,61,"screens"],[131,68,122,68],[131,69,122,69],[132,10,123,8],[132,17,123,15],[132,29,123,21],[133,12,124,10],[134,12,125,10],[134,16,125,16,"children"],[134,24,125,24],[134,27,125,27,"groupItems"],[134,37,125,37],[134,38,125,38,"map"],[134,41,125,41],[134,42,125,42],[134,52,125,42,"item"],[134,56,125,46],[135,14,125,46],[135,21,125,50,"item"],[135,25,125,54],[135,26,125,55],[135,27,125,56],[136,12,125,56],[136,14,125,57],[137,12,126,10],[137,16,126,16,"shouldRender"],[137,28,126,28],[137,31,126,31,"useIf"],[137,36,126,36],[137,40,126,40],[137,44,126,44],[137,48,126,48,"useIf"],[137,53,126,53],[137,54,126,54],[137,55,126,55],[138,12,127,10],[138,16,127,14],[138,17,127,15,"shouldRender"],[138,29,127,27],[138,31,127,29],[139,14,128,12],[139,21,128,19],[139,25,128,23],[140,12,129,10],[141,12,130,10],[141,19,130,17],[141,32,130,30],[141,36,130,30,"_jsx"],[141,51,130,34],[141,53,130,35,"Group"],[141,58,130,40],[141,60,130,40,"Object"],[141,66,130,40],[141,67,130,40,"assign"],[141,73,130,40],[142,14,131,12,"navigationKey"],[142,27,131,25],[142,29,131,27,"key"],[143,12,131,30],[143,15,132,15,"group"],[143,20,132,20],[144,14,133,12,"children"],[144,22,133,20],[144,24,133,22,"children"],[145,12,133,30],[145,16,134,13,"key"],[145,19,134,16],[145,20,134,17],[146,10,135,8],[146,11,135,9],[147,8,136,6],[147,9,136,7],[147,10,136,8],[147,12,136,9],[148,6,137,4],[149,4,138,2],[150,4,139,2],[150,8,139,8,"NavigatorComponent"],[150,26,139,26],[150,29,139,29],[150,38,139,8,"NavigatorComponent"],[150,56,139,26,"NavigatorComponent"],[150,57,139,26],[150,59,139,35],[151,6,140,4],[151,10,140,10,"children"],[151,18,140,18],[151,21,140,21,"items"],[151,26,140,26],[151,27,140,27,"map"],[151,30,140,30],[151,31,140,31],[151,41,140,31,"item"],[151,45,140,35],[152,8,140,35],[152,15,140,39,"item"],[152,19,140,43],[152,20,140,44],[152,21,140,45],[153,6,140,45],[153,8,140,46],[154,6,141,4],[154,13,141,11],[154,26,141,24],[154,30,141,24,"_jsx"],[154,45,141,28],[154,47,141,29,"Navigator"],[154,56,141,38],[154,58,141,38,"Object"],[154,64,141,38],[154,65,141,38,"assign"],[154,71,141,38],[154,76,142,9,"rest"],[154,80,142,13],[155,8,143,6,"children"],[155,16,143,14],[155,18,143,16,"children"],[156,6,143,24],[156,8,144,5],[156,9,144,6],[157,4,145,2],[157,5,145,3],[158,4,146,2,"NavigatorComponent"],[158,22,146,20],[158,23,146,21,"displayName"],[158,34,146,32],[158,37,146,35,"displayName"],[158,48,146,46],[159,4,147,2],[159,11,147,9,"NavigatorComponent"],[159,29,147,27],[160,2,148,0],[161,2,149,0],[162,0,150,0],[163,0,151,0],[164,0,152,0],[165,0,153,0],[166,0,154,0],[167,0,155,0],[168,0,156,0],[169,0,157,0],[170,0,158,0],[171,0,159,0],[172,0,160,0],[173,0,161,0],[174,0,162,0],[175,0,163,0],[176,0,164,0],[177,0,165,0],[178,0,166,0],[179,0,167,0],[180,2,168,7],[180,11,168,16,"createPathConfigForStaticNavigation"],[180,46,168,51,"createPathConfigForStaticNavigation"],[180,47,168,52,"tree"],[180,51,168,56],[180,53,168,58,"options"],[180,60,168,65],[180,62,168,67,"auto"],[180,66,168,71],[180,68,168,73],[181,4,169,2],[181,8,169,6,"initialScreenHasPath"],[181,28,169,26],[181,31,169,29],[181,36,169,34],[182,4,170,2],[182,8,170,6,"initialScreenConfig"],[182,27,170,25],[183,4,171,2],[183,8,171,8,"createPathConfigForTree"],[183,32,171,31],[183,35,171,34],[183,44,171,8,"createPathConfigForTree"],[183,67,171,31,"createPathConfigForTree"],[183,68,171,35,"t"],[183,69,171,36],[183,71,171,38,"o"],[183,72,171,39],[183,74,171,41,"skipInitialDetection"],[183,94,171,61],[183,96,171,66],[184,6,172,4],[184,10,172,10,"createPathConfigForScreens"],[184,36,172,36],[184,39,172,39],[184,48,172,10,"createPathConfigForScreens"],[184,74,172,36,"createPathConfigForScreens"],[184,75,172,40,"screens"],[184,82,172,47],[184,84,172,49,"initialRouteName"],[184,100,172,65],[184,102,172,70],[185,8,173,6],[185,15,173,13,"Object"],[185,21,173,19],[185,22,173,20,"fromEntries"],[185,33,173,31],[185,34,173,32,"Object"],[185,40,173,38],[185,41,173,39,"entries"],[185,48,173,46],[185,49,173,47,"screens"],[185,56,173,54],[186,8,174,6],[187,8,175,6],[188,8,175,6],[188,9,176,7,"sort"],[188,13,176,11],[188,14,176,12],[188,24,176,12,"_ref7"],[188,29,176,12],[188,31,176,12,"_ref8"],[188,36,176,12],[188,38,176,26],[189,10,176,26],[189,14,176,26,"_ref9"],[189,19,176,26],[189,26,176,26,"_slicedToArray2"],[189,41,176,26],[189,42,176,26,"default"],[189,49,176,26],[189,51,176,26,"_ref7"],[189,56,176,26],[190,12,176,14,"a"],[190,13,176,15],[190,16,176,15,"_ref9"],[190,21,176,15],[191,10,176,15],[191,14,176,15,"_ref0"],[191,19,176,15],[191,26,176,15,"_slicedToArray2"],[191,41,176,15],[191,42,176,15,"default"],[191,49,176,15],[191,51,176,15,"_ref8"],[191,56,176,15],[192,12,176,19,"b"],[192,13,176,20],[192,16,176,20,"_ref0"],[192,21,176,20],[193,10,177,8],[193,14,177,12,"a"],[193,15,177,13],[193,20,177,18,"initialRouteName"],[193,36,177,34],[193,38,177,36],[194,12,178,10],[194,19,178,17],[194,20,178,18],[194,21,178,19],[195,10,179,8],[196,10,180,8],[196,14,180,12,"b"],[196,15,180,13],[196,20,180,18,"initialRouteName"],[196,36,180,34],[196,38,180,36],[197,12,181,10],[197,19,181,17],[197,20,181,18],[198,10,182,8],[199,10,183,8],[199,17,183,15],[199,18,183,16],[200,8,184,6],[200,9,184,7],[200,10,184,8],[200,11,184,9,"map"],[200,14,184,12],[200,15,184,13],[200,25,184,13,"_ref1"],[200,30,184,13],[200,32,184,30],[201,10,184,30],[201,14,184,30,"_ref10"],[201,20,184,30],[201,27,184,30,"_slicedToArray2"],[201,42,184,30],[201,43,184,30,"default"],[201,50,184,30],[201,52,184,30,"_ref1"],[201,57,184,30],[202,12,184,15,"key"],[202,15,184,18],[202,18,184,18,"_ref10"],[202,24,184,18],[203,12,184,20,"item"],[203,16,184,24],[203,19,184,24,"_ref10"],[203,25,184,24],[204,10,185,8],[204,14,185,14,"screenConfig"],[204,26,185,26],[204,29,185,29],[204,30,185,30],[204,31,185,31],[205,10,186,8],[205,14,186,12],[205,23,186,21],[205,27,186,25,"item"],[205,31,186,29],[205,33,186,31],[206,12,187,10],[206,16,187,14],[206,23,187,21,"item"],[206,27,187,25],[206,28,187,26,"linking"],[206,35,187,33],[206,40,187,38],[206,48,187,46],[206,50,187,48],[207,14,188,12,"screenConfig"],[207,26,188,24],[207,27,188,25,"path"],[207,31,188,29],[207,34,188,32,"item"],[207,38,188,36],[207,39,188,37,"linking"],[207,46,188,44],[208,12,189,10],[208,13,189,11],[208,19,189,17],[209,14,190,12,"Object"],[209,20,190,18],[209,21,190,19,"assign"],[209,27,190,25],[209,28,190,26,"screenConfig"],[209,40,190,38],[209,42,190,40,"item"],[209,46,190,44],[209,47,190,45,"linking"],[209,54,190,52],[209,55,190,53],[210,12,191,10],[211,12,192,10],[211,16,192,14],[211,23,192,21,"screenConfig"],[211,35,192,33],[211,36,192,34,"path"],[211,40,192,38],[211,45,192,43],[211,53,192,51],[211,55,192,53],[212,14,193,12,"screenConfig"],[212,26,193,24],[212,27,193,25,"path"],[212,31,193,29],[212,34,193,32,"screenConfig"],[212,46,193,44],[212,47,193,45,"path"],[212,51,193,49],[212,52,193,50,"replace"],[212,59,193,57],[212,60,193,58],[212,65,193,63],[212,67,193,65],[212,69,193,67],[212,70,193,68],[212,71,193,69],[213,14,193,69],[213,15,194,13,"replace"],[213,22,194,20],[213,23,194,21],[213,28,194,26],[213,30,194,28],[213,32,194,30],[213,33,194,31],[213,34,194,32],[213,35,194,33],[214,12,195,10],[215,10,196,8],[216,10,197,8],[216,14,197,12,"screens"],[216,21,197,19],[217,10,198,8],[217,14,198,14,"skipInitialDetectionInChild"],[217,41,198,41],[217,44,198,44,"skipInitialDetection"],[217,64,198,64],[217,68,198,68,"screenConfig"],[217,80,198,80],[217,81,198,81,"path"],[217,85,198,85],[217,89,198,89],[217,93,198,93],[217,97,198,97,"screenConfig"],[217,109,198,109],[217,110,198,110,"path"],[217,114,198,114],[217,119,198,119],[217,121,198,121],[218,10,199,8],[218,14,199,12],[218,22,199,20],[218,26,199,24,"item"],[218,30,199,28],[218,32,199,30],[219,12,200,10,"screens"],[219,19,200,17],[219,22,200,20,"createPathConfigForTree"],[219,46,200,43],[219,47,200,44,"item"],[219,51,200,48],[219,53,200,50,"undefined"],[219,62,200,59],[219,64,200,61,"skipInitialDetectionInChild"],[219,91,200,88],[219,92,200,89],[220,10,201,8],[220,11,201,9],[220,17,201,15],[220,21,201,19],[220,29,201,27],[220,33,201,31,"item"],[220,37,201,35],[220,41,201,39],[220,49,201,47],[220,53,201,51,"item"],[220,57,201,55],[220,58,201,56,"screen"],[220,64,201,62],[220,69,201,67,"item"],[220,73,201,71],[220,74,201,72,"screen"],[220,80,201,78],[220,81,201,79,"config"],[220,87,201,85],[220,88,201,86,"screens"],[220,95,201,93],[220,99,201,97,"item"],[220,103,201,101],[220,104,201,102,"screen"],[220,110,201,108],[220,111,201,109,"config"],[220,117,201,115],[220,118,201,116,"groups"],[220,124,201,122],[220,125,201,123],[220,127,201,125],[221,12,202,10,"screens"],[221,19,202,17],[221,22,202,20,"createPathConfigForTree"],[221,46,202,43],[221,47,202,44,"item"],[221,51,202,48],[221,52,202,49,"screen"],[221,58,202,55],[221,60,202,57,"undefined"],[221,69,202,66],[221,71,202,68,"skipInitialDetectionInChild"],[221,98,202,95],[221,99,202,96],[222,10,203,8],[223,10,204,8],[223,14,204,12,"screens"],[223,21,204,19],[223,23,204,21],[224,12,205,10,"screenConfig"],[224,24,205,22],[224,25,205,23,"screens"],[224,32,205,30],[224,35,205,33,"screens"],[224,42,205,40],[225,10,206,8],[226,10,207,8],[226,14,207,12,"auto"],[226,18,207,16],[226,22,207,20],[226,23,207,21,"screenConfig"],[226,35,207,33],[226,36,207,34,"screens"],[226,43,207,41],[227,10,208,8],[228,10,209,8],[228,12,209,10],[228,21,209,19],[228,25,209,23,"item"],[228,29,209,27],[228,33,209,31,"item"],[228,37,209,35],[228,38,209,36,"linking"],[228,45,209,43],[228,49,209,47],[228,53,209,51],[228,54,209,52],[228,56,209,54],[229,12,210,10],[229,16,210,14,"screenConfig"],[229,28,210,26],[229,29,210,27,"path"],[229,33,210,31],[229,37,210,35],[229,41,210,39],[229,43,210,41],[230,14,211,12],[230,18,211,16],[230,19,211,17,"skipInitialDetection"],[230,39,211,37],[230,41,211,39],[231,16,212,14],[231,20,212,18,"key"],[231,23,212,21],[231,28,212,26,"initialRouteName"],[231,44,212,42],[231,48,212,46,"screenConfig"],[231,60,212,58],[231,61,212,59,"path"],[231,65,212,63],[231,69,212,67],[231,73,212,71],[231,75,212,73],[232,18,213,16,"initialScreenHasPath"],[232,38,213,36],[232,41,213,39],[232,45,213,43],[233,16,214,14],[233,17,214,15],[233,23,214,21],[233,27,214,25,"screenConfig"],[233,39,214,37],[233,40,214,38,"path"],[233,44,214,42],[233,49,214,47],[233,51,214,49],[233,53,214,51],[234,18,215,16],[235,18,216,16],[236,18,217,16,"initialScreenConfig"],[236,37,217,35],[236,40,217,38,"undefined"],[236,49,217,47],[237,16,218,14],[238,14,219,12],[239,12,220,10],[239,13,220,11],[239,19,220,17],[240,14,221,12],[240,18,221,16],[240,19,221,17,"skipInitialDetection"],[240,39,221,37],[240,43,221,41,"initialScreenConfig"],[240,62,221,60],[240,66,221,64],[240,70,221,68],[240,72,221,70],[241,16,222,14,"initialScreenConfig"],[241,35,222,33],[241,38,222,36,"screenConfig"],[241,50,222,48],[242,14,223,12],[243,14,224,12,"screenConfig"],[243,26,224,24],[243,27,224,25,"path"],[243,31,224,29],[243,34,224,32,"key"],[243,37,224,35],[243,38,224,36,"replace"],[243,45,224,43],[243,46,224,44],[243,57,224,55],[243,59,224,57],[243,64,224,62],[243,65,224,63],[243,66,224,64,"replace"],[243,73,224,71],[243,74,224,72],[243,78,224,76],[243,80,224,78],[243,82,224,80],[243,83,224,81],[243,84,224,82,"toLowerCase"],[243,95,224,93],[243,96,224,94],[243,97,224,95],[244,12,225,10],[245,10,226,8],[246,10,227,8],[246,17,227,15],[246,18,227,16,"key"],[246,21,227,19],[246,23,227,21,"screenConfig"],[246,35,227,33],[246,36,227,34],[247,8,228,6],[247,9,228,7],[247,10,228,8],[247,11,228,9,"filter"],[247,17,228,15],[247,18,228,16],[247,28,228,16,"_ref11"],[247,34,228,16],[248,10,228,16],[248,14,228,16,"_ref12"],[248,20,228,16],[248,27,228,16,"_slicedToArray2"],[248,42,228,16],[248,43,228,16,"default"],[248,50,228,16],[248,52,228,16,"_ref11"],[248,58,228,16],[249,12,228,20,"screen"],[249,18,228,26],[249,21,228,26,"_ref12"],[249,27,228,26],[250,10,228,26],[250,17,228,32,"Object"],[250,23,228,38],[250,24,228,39,"keys"],[250,28,228,43],[250,29,228,44,"screen"],[250,35,228,50],[250,36,228,51],[250,37,228,52,"length"],[250,43,228,58],[250,46,228,61],[250,47,228,62],[251,8,228,62],[251,10,228,63],[251,11,228,64],[252,6,229,4],[252,7,229,5],[253,6,230,4],[253,10,230,10,"screens"],[253,17,230,17],[253,20,230,20],[253,21,230,21],[253,22,230,22],[255,6,232,4],[256,6,233,4],[257,6,234,4],[257,11,234,9],[257,15,234,15,"key"],[257,18,234,18],[257,22,234,22,"t"],[257,23,234,23],[257,24,234,24,"config"],[257,30,234,30],[257,32,234,32],[258,8,235,6],[258,12,235,10,"key"],[258,15,235,13],[258,20,235,18],[258,29,235,27],[258,33,235,31,"t"],[258,34,235,32],[258,35,235,33,"config"],[258,41,235,39],[258,42,235,40,"screens"],[258,49,235,47],[258,51,235,49],[259,10,235,49],[259,14,235,49,"_o$initialRouteName"],[259,33,235,49],[260,10,236,8,"Object"],[260,16,236,14],[260,17,236,15,"assign"],[260,23,236,21],[260,24,236,22,"screens"],[260,31,236,29],[260,33,236,31,"createPathConfigForScreens"],[260,59,236,57],[260,60,236,58,"t"],[260,61,236,59],[260,62,236,60,"config"],[260,68,236,66],[260,69,236,67,"screens"],[260,76,236,74],[260,79,236,74,"_o$initialRouteName"],[260,98,236,74],[260,101,236,76,"o"],[260,102,236,77],[260,122,236,76,"o"],[260,123,236,77],[260,124,236,79,"initialRouteName"],[260,140,236,95],[260,152,236,95,"_o$initialRouteName"],[260,171,236,95],[260,174,236,99,"t"],[260,175,236,100],[260,176,236,101,"config"],[260,182,236,107],[260,183,236,108,"initialRouteName"],[260,199,236,124],[260,200,236,125],[260,201,236,126],[261,8,237,6],[262,8,238,6],[262,12,238,10,"key"],[262,15,238,13],[262,20,238,18],[262,28,238,26],[262,32,238,30,"t"],[262,33,238,31],[262,34,238,32,"config"],[262,40,238,38],[262,41,238,39,"groups"],[262,47,238,45],[262,49,238,47],[263,10,239,8,"Object"],[263,16,239,14],[263,17,239,15,"entries"],[263,24,239,22],[263,25,239,23,"t"],[263,26,239,24],[263,27,239,25,"config"],[263,33,239,31],[263,34,239,32,"groups"],[263,40,239,38],[263,41,239,39],[263,42,239,40,"forEach"],[263,49,239,47],[263,50,239,48],[263,60,239,48,"_ref13"],[263,66,239,48],[263,68,239,63],[264,12,239,63],[264,16,239,63,"_o$initialRouteName2"],[264,36,239,63],[265,12,239,63],[265,16,239,63,"_ref14"],[265,22,239,63],[265,29,239,63,"_slicedToArray2"],[265,44,239,63],[265,45,239,63,"default"],[265,52,239,63],[265,54,239,63,"_ref13"],[265,60,239,63],[266,14,239,52,"group"],[266,19,239,57],[266,22,239,57,"_ref14"],[266,28,239,57],[267,12,240,10,"Object"],[267,18,240,16],[267,19,240,17,"assign"],[267,25,240,23],[267,26,240,24,"screens"],[267,33,240,31],[267,35,240,33,"createPathConfigForScreens"],[267,61,240,59],[267,62,240,60,"group"],[267,67,240,65],[267,68,240,66,"screens"],[267,75,240,73],[267,78,240,73,"_o$initialRouteName2"],[267,98,240,73],[267,101,240,75,"o"],[267,102,240,76],[267,122,240,75,"o"],[267,123,240,76],[267,124,240,78,"initialRouteName"],[267,140,240,94],[267,152,240,94,"_o$initialRouteName2"],[267,172,240,94],[267,175,240,98,"t"],[267,176,240,99],[267,177,240,100,"config"],[267,183,240,106],[267,184,240,107,"initialRouteName"],[267,200,240,123],[267,201,240,124],[267,202,240,125],[268,10,241,8],[268,11,241,9],[268,12,241,10],[269,8,242,6],[270,6,243,4],[271,6,244,4],[271,10,244,8,"Object"],[271,16,244,14],[271,17,244,15,"keys"],[271,21,244,19],[271,22,244,20,"screens"],[271,29,244,27],[271,30,244,28],[271,31,244,29,"length"],[271,37,244,35],[271,42,244,40],[271,43,244,41],[271,45,244,43],[272,8,245,6],[272,15,245,13,"undefined"],[272,24,245,22],[273,6,246,4],[274,6,247,4],[274,13,247,11,"screens"],[274,20,247,18],[275,4,248,2],[275,5,248,3],[276,4,249,2],[276,8,249,8,"screens"],[276,15,249,15],[276,18,249,18,"createPathConfigForTree"],[276,42,249,41],[276,43,249,42,"tree"],[276,47,249,46],[276,49,249,48,"options"],[276,56,249,55],[276,58,249,57],[276,63,249,62],[276,64,249,63],[277,4,250,2],[277,8,250,6,"auto"],[277,12,250,10],[277,16,250,14,"initialScreenConfig"],[277,35,250,33],[277,39,250,37],[277,40,250,38,"initialScreenHasPath"],[277,60,250,58],[277,62,250,60],[278,6,251,4,"initialScreenConfig"],[278,25,251,23],[278,26,251,24,"path"],[278,30,251,28],[278,33,251,31],[278,35,251,33],[279,4,252,2],[280,4,253,2],[280,11,253,9,"screens"],[280,18,253,16],[281,2,254,0],[282,0,254,1],[282,3]],"functionMap":{"names":["<global>","React.memo$argument_0","getItemsFromScreens","Object.entries.map$argument_0","<anonymous>","_jsx$argument_1.children","createComponentForStaticNavigation","groupItems.map$argument_0","NavigatorComponent","items.map$argument_0","createPathConfigForStaticNavigation","createPathConfigForTree","createPathConfigForScreens","Object.entries.sort$argument_0","Object.entries.sort.map$argument_0","Object.entries.sort.map.filter$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA;+CC8B;CDQ;4BEE;qCCC;WC+B;kBCQ,aD;KDE;GDC;CFC;OMS;+CHwB;eCK;0CGE,cH;SDU;OGC;6BEG;+BCC,cD;GFK;CNG;OUoB;kCCG;uCCC;YCI;ODQ,ME;OF4C,SG,8CH;KDC;gDKU;SLE;GDO;CVM"}},"type":"js/module"}]}