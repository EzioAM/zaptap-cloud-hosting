{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n    This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n    License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n  */\n  var _toConsumableArray = require(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.REALTIME_PRESENCE_LISTEN_EVENTS = void 0;\n  var REALTIME_PRESENCE_LISTEN_EVENTS;\n  (function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n  })(REALTIME_PRESENCE_LISTEN_EVENTS || (exports.REALTIME_PRESENCE_LISTEN_EVENTS = REALTIME_PRESENCE_LISTEN_EVENTS = {}));\n  var RealtimePresence = /*#__PURE__*/function () {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    function RealtimePresence(channel, opts) {\n      var _this = this;\n      _classCallCheck(this, RealtimePresence);\n      this.channel = channel;\n      this.state = {};\n      this.pendingDiffs = [];\n      this.joinRef = null;\n      this.caller = {\n        onJoin: function onJoin() {},\n        onLeave: function onLeave() {},\n        onSync: function onSync() {}\n      };\n      var events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n        state: 'presence_state',\n        diff: 'presence_diff'\n      };\n      this.channel._on(events.state, {}, function (newState) {\n        var _this$caller = _this.caller,\n          onJoin = _this$caller.onJoin,\n          onLeave = _this$caller.onLeave,\n          onSync = _this$caller.onSync;\n        _this.joinRef = _this.channel._joinRef();\n        _this.state = RealtimePresence.syncState(_this.state, newState, onJoin, onLeave);\n        _this.pendingDiffs.forEach(function (diff) {\n          _this.state = RealtimePresence.syncDiff(_this.state, diff, onJoin, onLeave);\n        });\n        _this.pendingDiffs = [];\n        onSync();\n      });\n      this.channel._on(events.diff, {}, function (diff) {\n        var _this$caller2 = _this.caller,\n          onJoin = _this$caller2.onJoin,\n          onLeave = _this$caller2.onLeave,\n          onSync = _this$caller2.onSync;\n        if (_this.inPendingSyncState()) {\n          _this.pendingDiffs.push(diff);\n        } else {\n          _this.state = RealtimePresence.syncDiff(_this.state, diff, onJoin, onLeave);\n          onSync();\n        }\n      });\n      this.onJoin(function (key, currentPresences, newPresences) {\n        _this.channel._trigger('presence', {\n          event: 'join',\n          key: key,\n          currentPresences: currentPresences,\n          newPresences: newPresences\n        });\n      });\n      this.onLeave(function (key, currentPresences, leftPresences) {\n        _this.channel._trigger('presence', {\n          event: 'leave',\n          key: key,\n          currentPresences: currentPresences,\n          leftPresences: leftPresences\n        });\n      });\n      this.onSync(function () {\n        _this.channel._trigger('presence', {\n          event: 'sync'\n        });\n      });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    return _createClass(RealtimePresence, [{\n      key: \"onJoin\",\n      value: /** @internal */\n      function onJoin(callback) {\n        this.caller.onJoin = callback;\n      }\n      /** @internal */\n    }, {\n      key: \"onLeave\",\n      value: function onLeave(callback) {\n        this.caller.onLeave = callback;\n      }\n      /** @internal */\n    }, {\n      key: \"onSync\",\n      value: function onSync(callback) {\n        this.caller.onSync = callback;\n      }\n      /** @internal */\n    }, {\n      key: \"inPendingSyncState\",\n      value: function inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n      }\n    }], [{\n      key: \"syncState\",\n      value: function syncState(currentState, newState, onJoin, onLeave) {\n        var state = this.cloneDeep(currentState);\n        var transformedState = this.transformState(newState);\n        var joins = {};\n        var leaves = {};\n        this.map(state, function (key, presences) {\n          if (!transformedState[key]) {\n            leaves[key] = presences;\n          }\n        });\n        this.map(transformedState, function (key, newPresences) {\n          var currentPresences = state[key];\n          if (currentPresences) {\n            var newPresenceRefs = newPresences.map(function (m) {\n              return m.presence_ref;\n            });\n            var curPresenceRefs = currentPresences.map(function (m) {\n              return m.presence_ref;\n            });\n            var joinedPresences = newPresences.filter(function (m) {\n              return curPresenceRefs.indexOf(m.presence_ref) < 0;\n            });\n            var leftPresences = currentPresences.filter(function (m) {\n              return newPresenceRefs.indexOf(m.presence_ref) < 0;\n            });\n            if (joinedPresences.length > 0) {\n              joins[key] = joinedPresences;\n            }\n            if (leftPresences.length > 0) {\n              leaves[key] = leftPresences;\n            }\n          } else {\n            joins[key] = newPresences;\n          }\n        });\n        return this.syncDiff(state, {\n          joins: joins,\n          leaves: leaves\n        }, onJoin, onLeave);\n      }\n      /**\n       * Used to sync a diff of presence join and leave events from the\n       * server, as they happen.\n       *\n       * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n       * `onLeave` callbacks to react to a user joining or leaving from a\n       * device.\n       *\n       * @internal\n       */\n    }, {\n      key: \"syncDiff\",\n      value: function syncDiff(state, diff, onJoin, onLeave) {\n        var _this2 = this;\n        var _joins$leaves = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves)\n          },\n          joins = _joins$leaves.joins,\n          leaves = _joins$leaves.leaves;\n        if (!onJoin) {\n          onJoin = function onJoin() {};\n        }\n        if (!onLeave) {\n          onLeave = function onLeave() {};\n        }\n        this.map(joins, function (key, newPresences) {\n          var _a;\n          var currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n          state[key] = _this2.cloneDeep(newPresences);\n          if (currentPresences.length > 0) {\n            var _state$key;\n            var joinedPresenceRefs = state[key].map(function (m) {\n              return m.presence_ref;\n            });\n            var curPresences = currentPresences.filter(function (m) {\n              return joinedPresenceRefs.indexOf(m.presence_ref) < 0;\n            });\n            (_state$key = state[key]).unshift.apply(_state$key, _toConsumableArray(curPresences));\n          }\n          onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, function (key, leftPresences) {\n          var currentPresences = state[key];\n          if (!currentPresences) return;\n          var presenceRefsToRemove = leftPresences.map(function (m) {\n            return m.presence_ref;\n          });\n          currentPresences = currentPresences.filter(function (m) {\n            return presenceRefsToRemove.indexOf(m.presence_ref) < 0;\n          });\n          state[key] = currentPresences;\n          onLeave(key, currentPresences, leftPresences);\n          if (currentPresences.length === 0) delete state[key];\n        });\n        return state;\n      }\n      /** @internal */\n    }, {\n      key: \"map\",\n      value: function map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map(function (key) {\n          return func(key, obj[key]);\n        });\n      }\n      /**\n       * Remove 'metas' key\n       * Change 'phx_ref' to 'presence_ref'\n       * Remove 'phx_ref' and 'phx_ref_prev'\n       *\n       * @example\n       * // returns {\n       *  abc123: [\n       *    { presence_ref: '2', user_id: 1 },\n       *    { presence_ref: '3', user_id: 2 }\n       *  ]\n       * }\n       * RealtimePresence.transformState({\n       *  abc123: {\n       *    metas: [\n       *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n       *      { phx_ref: '3', user_id: 2 }\n       *    ]\n       *  }\n       * })\n       *\n       * @internal\n       */\n    }, {\n      key: \"transformState\",\n      value: function transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce(function (newState, key) {\n          var presences = state[key];\n          if ('metas' in presences) {\n            newState[key] = presences.metas.map(function (presence) {\n              presence['presence_ref'] = presence['phx_ref'];\n              delete presence['phx_ref'];\n              delete presence['phx_ref_prev'];\n              return presence;\n            });\n          } else {\n            newState[key] = presences;\n          }\n          return newState;\n        }, {});\n      }\n      /** @internal */\n    }, {\n      key: \"cloneDeep\",\n      value: function cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n      }\n    }]);\n  }();\n  exports.default = RealtimePresence;\n});","lineCount":284,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,2,2,0],[8,6,2,0,"_toConsumableArray"],[8,24,2,0],[8,27,2,0,"require"],[8,34,2,0],[8,35,2,0,"_dependencyMap"],[8,49,2,0],[9,2,2,0],[9,6,2,0,"_classCallCheck"],[9,21,2,0],[9,24,2,0,"require"],[9,31,2,0],[9,32,2,0,"_dependencyMap"],[9,46,2,0],[10,2,2,0],[10,6,2,0,"_createClass"],[10,18,2,0],[10,21,2,0,"require"],[10,28,2,0],[10,29,2,0,"_dependencyMap"],[10,43,2,0],[11,2,6,0,"Object"],[11,8,6,6],[11,9,6,7,"defineProperty"],[11,23,6,21],[11,24,6,22,"exports"],[11,31,6,29],[11,33,6,31],[11,45,6,43],[11,47,6,45],[12,4,6,47,"value"],[12,9,6,52],[12,11,6,54],[13,2,6,59],[13,3,6,60],[13,4,6,61],[14,2,7,0,"exports"],[14,9,7,7],[14,10,7,8,"REALTIME_PRESENCE_LISTEN_EVENTS"],[14,41,7,39],[14,44,7,42],[14,49,7,47],[14,50,7,48],[15,2,8,0],[15,6,8,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[15,37,8,35],[16,2,9,0],[16,3,9,1],[16,13,9,11,"REALTIME_PRESENCE_LISTEN_EVENTS"],[16,44,9,42],[16,46,9,44],[17,4,10,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[17,35,10,35],[17,36,10,36],[17,42,10,42],[17,43,10,43],[17,46,10,46],[17,52,10,52],[18,4,11,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[18,35,11,35],[18,36,11,36],[18,42,11,42],[18,43,11,43],[18,46,11,46],[18,52,11,52],[19,4,12,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[19,35,12,35],[19,36,12,36],[19,43,12,43],[19,44,12,44],[19,47,12,47],[19,54,12,54],[20,2,13,0],[20,3,13,1],[20,5,13,3,"REALTIME_PRESENCE_LISTEN_EVENTS"],[20,36,13,34],[20,41,13,39,"exports"],[20,48,13,46],[20,49,13,47,"REALTIME_PRESENCE_LISTEN_EVENTS"],[20,80,13,78],[20,83,13,81,"REALTIME_PRESENCE_LISTEN_EVENTS"],[20,114,13,112],[20,117,13,115],[20,118,13,116],[20,119,13,117],[20,120,13,118],[20,121,13,119],[21,2,13,120],[21,6,14,6,"RealtimePresence"],[21,22,14,22],[22,4,15,4],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,4,22,4],[29,13,22,4,"RealtimePresence"],[29,30,22,16,"channel"],[29,37,22,23],[29,39,22,25,"opts"],[29,43,22,29],[29,45,22,31],[30,6,22,31],[30,10,22,31,"_this"],[30,15,22,31],[31,6,22,31,"_classCallCheck"],[31,21,22,31],[31,28,22,31,"RealtimePresence"],[31,44,22,31],[32,6,23,8],[32,10,23,12],[32,11,23,13,"channel"],[32,18,23,20],[32,21,23,23,"channel"],[32,28,23,30],[33,6,24,8],[33,10,24,12],[33,11,24,13,"state"],[33,16,24,18],[33,19,24,21],[33,20,24,22],[33,21,24,23],[34,6,25,8],[34,10,25,12],[34,11,25,13,"pendingDiffs"],[34,23,25,25],[34,26,25,28],[34,28,25,30],[35,6,26,8],[35,10,26,12],[35,11,26,13,"joinRef"],[35,18,26,20],[35,21,26,23],[35,25,26,27],[36,6,27,8],[36,10,27,12],[36,11,27,13,"caller"],[36,17,27,19],[36,20,27,22],[37,8,28,12,"onJoin"],[37,14,28,18],[37,16,28,20],[37,25,28,12,"onJoin"],[37,31,28,18,"onJoin"],[37,32,28,18],[37,34,28,26],[37,35,28,28],[37,36,28,29],[38,8,29,12,"onLeave"],[38,15,29,19],[38,17,29,21],[38,26,29,12,"onLeave"],[38,33,29,19,"onLeave"],[38,34,29,19],[38,36,29,27],[38,37,29,29],[38,38,29,30],[39,8,30,12,"onSync"],[39,14,30,18],[39,16,30,20],[39,25,30,12,"onSync"],[39,31,30,18,"onSync"],[39,32,30,18],[39,34,30,26],[39,35,30,28],[40,6,31,8],[40,7,31,9],[41,6,32,8],[41,10,32,14,"events"],[41,16,32,20],[41,19,32,23],[41,20,32,24,"opts"],[41,24,32,28],[41,29,32,33],[41,33,32,37],[41,37,32,41,"opts"],[41,41,32,45],[41,46,32,50],[41,51,32,55],[41,52,32,56],[41,55,32,59],[41,60,32,64],[41,61,32,65],[41,64,32,68,"opts"],[41,68,32,72],[41,69,32,73,"events"],[41,75,32,79],[41,80,32,84],[42,8,33,12,"state"],[42,13,33,17],[42,15,33,19],[42,31,33,35],[43,8,34,12,"diff"],[43,12,34,16],[43,14,34,18],[44,6,35,8],[44,7,35,9],[45,6,36,8],[45,10,36,12],[45,11,36,13,"channel"],[45,18,36,20],[45,19,36,21,"_on"],[45,22,36,24],[45,23,36,25,"events"],[45,29,36,31],[45,30,36,32,"state"],[45,35,36,37],[45,37,36,39],[45,38,36,40],[45,39,36,41],[45,41,36,43],[45,51,36,44,"newState"],[45,59,36,52],[45,61,36,57],[46,8,37,12],[46,12,37,12,"_this$caller"],[46,24,37,12],[46,27,37,48,"_this"],[46,32,37,52],[46,33,37,53,"caller"],[46,39,37,59],[47,10,37,20,"onJoin"],[47,16,37,26],[47,19,37,26,"_this$caller"],[47,31,37,26],[47,32,37,20,"onJoin"],[47,38,37,26],[48,10,37,28,"onLeave"],[48,17,37,35],[48,20,37,35,"_this$caller"],[48,32,37,35],[48,33,37,28,"onLeave"],[48,40,37,35],[49,10,37,37,"onSync"],[49,16,37,43],[49,19,37,43,"_this$caller"],[49,31,37,43],[49,32,37,37,"onSync"],[49,38,37,43],[50,8,38,12,"_this"],[50,13,38,16],[50,14,38,17,"joinRef"],[50,21,38,24],[50,24,38,27,"_this"],[50,29,38,31],[50,30,38,32,"channel"],[50,37,38,39],[50,38,38,40,"_joinRef"],[50,46,38,48],[50,47,38,49],[50,48,38,50],[51,8,39,12,"_this"],[51,13,39,16],[51,14,39,17,"state"],[51,19,39,22],[51,22,39,25,"RealtimePresence"],[51,38,39,41],[51,39,39,42,"syncState"],[51,48,39,51],[51,49,39,52,"_this"],[51,54,39,56],[51,55,39,57,"state"],[51,60,39,62],[51,62,39,64,"newState"],[51,70,39,72],[51,72,39,74,"onJoin"],[51,78,39,80],[51,80,39,82,"onLeave"],[51,87,39,89],[51,88,39,90],[52,8,40,12,"_this"],[52,13,40,16],[52,14,40,17,"pendingDiffs"],[52,26,40,29],[52,27,40,30,"forEach"],[52,34,40,37],[52,35,40,38],[52,45,40,39,"diff"],[52,49,40,43],[52,51,40,48],[53,10,41,16,"_this"],[53,15,41,20],[53,16,41,21,"state"],[53,21,41,26],[53,24,41,29,"RealtimePresence"],[53,40,41,45],[53,41,41,46,"syncDiff"],[53,49,41,54],[53,50,41,55,"_this"],[53,55,41,59],[53,56,41,60,"state"],[53,61,41,65],[53,63,41,67,"diff"],[53,67,41,71],[53,69,41,73,"onJoin"],[53,75,41,79],[53,77,41,81,"onLeave"],[53,84,41,88],[53,85,41,89],[54,8,42,12],[54,9,42,13],[54,10,42,14],[55,8,43,12,"_this"],[55,13,43,16],[55,14,43,17,"pendingDiffs"],[55,26,43,29],[55,29,43,32],[55,31,43,34],[56,8,44,12,"onSync"],[56,14,44,18],[56,15,44,19],[56,16,44,20],[57,6,45,8],[57,7,45,9],[57,8,45,10],[58,6,46,8],[58,10,46,12],[58,11,46,13,"channel"],[58,18,46,20],[58,19,46,21,"_on"],[58,22,46,24],[58,23,46,25,"events"],[58,29,46,31],[58,30,46,32,"diff"],[58,34,46,36],[58,36,46,38],[58,37,46,39],[58,38,46,40],[58,40,46,42],[58,50,46,43,"diff"],[58,54,46,47],[58,56,46,52],[59,8,47,12],[59,12,47,12,"_this$caller2"],[59,25,47,12],[59,28,47,48,"_this"],[59,33,47,52],[59,34,47,53,"caller"],[59,40,47,59],[60,10,47,20,"onJoin"],[60,16,47,26],[60,19,47,26,"_this$caller2"],[60,32,47,26],[60,33,47,20,"onJoin"],[60,39,47,26],[61,10,47,28,"onLeave"],[61,17,47,35],[61,20,47,35,"_this$caller2"],[61,33,47,35],[61,34,47,28,"onLeave"],[61,41,47,35],[62,10,47,37,"onSync"],[62,16,47,43],[62,19,47,43,"_this$caller2"],[62,32,47,43],[62,33,47,37,"onSync"],[62,39,47,43],[63,8,48,12],[63,12,48,16,"_this"],[63,17,48,20],[63,18,48,21,"inPendingSyncState"],[63,36,48,39],[63,37,48,40],[63,38,48,41],[63,40,48,43],[64,10,49,16,"_this"],[64,15,49,20],[64,16,49,21,"pendingDiffs"],[64,28,49,33],[64,29,49,34,"push"],[64,33,49,38],[64,34,49,39,"diff"],[64,38,49,43],[64,39,49,44],[65,8,50,12],[65,9,50,13],[65,15,51,17],[66,10,52,16,"_this"],[66,15,52,20],[66,16,52,21,"state"],[66,21,52,26],[66,24,52,29,"RealtimePresence"],[66,40,52,45],[66,41,52,46,"syncDiff"],[66,49,52,54],[66,50,52,55,"_this"],[66,55,52,59],[66,56,52,60,"state"],[66,61,52,65],[66,63,52,67,"diff"],[66,67,52,71],[66,69,52,73,"onJoin"],[66,75,52,79],[66,77,52,81,"onLeave"],[66,84,52,88],[66,85,52,89],[67,10,53,16,"onSync"],[67,16,53,22],[67,17,53,23],[67,18,53,24],[68,8,54,12],[69,6,55,8],[69,7,55,9],[69,8,55,10],[70,6,56,8],[70,10,56,12],[70,11,56,13,"onJoin"],[70,17,56,19],[70,18,56,20],[70,28,56,21,"key"],[70,31,56,24],[70,33,56,26,"currentPresences"],[70,49,56,42],[70,51,56,44,"newPresences"],[70,63,56,56],[70,65,56,61],[71,8,57,12,"_this"],[71,13,57,16],[71,14,57,17,"channel"],[71,21,57,24],[71,22,57,25,"_trigger"],[71,30,57,33],[71,31,57,34],[71,41,57,44],[71,43,57,46],[72,10,58,16,"event"],[72,15,58,21],[72,17,58,23],[72,23,58,29],[73,10,59,16,"key"],[73,13,59,19],[73,15,59,16,"key"],[73,18,59,19],[74,10,60,16,"currentPresences"],[74,26,60,32],[74,28,60,16,"currentPresences"],[74,44,60,32],[75,10,61,16,"newPresences"],[75,22,61,28],[75,24,61,16,"newPresences"],[76,8,62,12],[76,9,62,13],[76,10,62,14],[77,6,63,8],[77,7,63,9],[77,8,63,10],[78,6,64,8],[78,10,64,12],[78,11,64,13,"onLeave"],[78,18,64,20],[78,19,64,21],[78,29,64,22,"key"],[78,32,64,25],[78,34,64,27,"currentPresences"],[78,50,64,43],[78,52,64,45,"leftPresences"],[78,65,64,58],[78,67,64,63],[79,8,65,12,"_this"],[79,13,65,16],[79,14,65,17,"channel"],[79,21,65,24],[79,22,65,25,"_trigger"],[79,30,65,33],[79,31,65,34],[79,41,65,44],[79,43,65,46],[80,10,66,16,"event"],[80,15,66,21],[80,17,66,23],[80,24,66,30],[81,10,67,16,"key"],[81,13,67,19],[81,15,67,16,"key"],[81,18,67,19],[82,10,68,16,"currentPresences"],[82,26,68,32],[82,28,68,16,"currentPresences"],[82,44,68,32],[83,10,69,16,"leftPresences"],[83,23,69,29],[83,25,69,16,"leftPresences"],[84,8,70,12],[84,9,70,13],[84,10,70,14],[85,6,71,8],[85,7,71,9],[85,8,71,10],[86,6,72,8],[86,10,72,12],[86,11,72,13,"onSync"],[86,17,72,19],[86,18,72,20],[86,30,72,26],[87,8,73,12,"_this"],[87,13,73,16],[87,14,73,17,"channel"],[87,21,73,24],[87,22,73,25,"_trigger"],[87,30,73,33],[87,31,73,34],[87,41,73,44],[87,43,73,46],[88,10,73,48,"event"],[88,15,73,53],[88,17,73,55],[89,8,73,62],[89,9,73,63],[89,10,73,64],[90,6,74,8],[90,7,74,9],[90,8,74,10],[91,4,75,4],[92,4,76,4],[93,0,77,0],[94,0,78,0],[95,0,79,0],[96,0,80,0],[97,0,81,0],[98,0,82,0],[99,0,83,0],[100,0,84,0],[101,0,85,0],[102,4,76,4],[102,11,76,4,"_createClass"],[102,23,76,4],[102,24,76,4,"RealtimePresence"],[102,40,76,4],[103,6,76,4,"key"],[103,9,76,4],[104,6,76,4,"value"],[104,11,76,4],[104,13,210,4],[105,6,211,4],[105,15,211,4,"onJoin"],[105,21,211,10,"onJoin"],[105,22,211,11,"callback"],[105,30,211,19],[105,32,211,21],[106,8,212,8],[106,12,212,12],[106,13,212,13,"caller"],[106,19,212,19],[106,20,212,20,"onJoin"],[106,26,212,26],[106,29,212,29,"callback"],[106,37,212,37],[107,6,213,4],[108,6,214,4],[109,4,214,4],[110,6,214,4,"key"],[110,9,214,4],[111,6,214,4,"value"],[111,11,214,4],[111,13,215,4],[111,22,215,4,"onLeave"],[111,29,215,11,"onLeave"],[111,30,215,12,"callback"],[111,38,215,20],[111,40,215,22],[112,8,216,8],[112,12,216,12],[112,13,216,13,"caller"],[112,19,216,19],[112,20,216,20,"onLeave"],[112,27,216,27],[112,30,216,30,"callback"],[112,38,216,38],[113,6,217,4],[114,6,218,4],[115,4,218,4],[116,6,218,4,"key"],[116,9,218,4],[117,6,218,4,"value"],[117,11,218,4],[117,13,219,4],[117,22,219,4,"onSync"],[117,28,219,10,"onSync"],[117,29,219,11,"callback"],[117,37,219,19],[117,39,219,21],[118,8,220,8],[118,12,220,12],[118,13,220,13,"caller"],[118,19,220,19],[118,20,220,20,"onSync"],[118,26,220,26],[118,29,220,29,"callback"],[118,37,220,37],[119,6,221,4],[120,6,222,4],[121,4,222,4],[122,6,222,4,"key"],[122,9,222,4],[123,6,222,4,"value"],[123,11,222,4],[123,13,223,4],[123,22,223,4,"inPendingSyncState"],[123,40,223,22,"inPendingSyncState"],[123,41,223,22],[123,43,223,25],[124,8,224,8],[124,15,224,15],[124,16,224,16],[124,20,224,20],[124,21,224,21,"joinRef"],[124,28,224,28],[124,32,224,32],[124,36,224,36],[124,37,224,37,"joinRef"],[124,44,224,44],[124,49,224,49],[124,53,224,53],[124,54,224,54,"channel"],[124,61,224,61],[124,62,224,62,"_joinRef"],[124,70,224,70],[124,71,224,71],[124,72,224,72],[125,6,225,4],[126,4,225,5],[127,6,225,5,"key"],[127,9,225,5],[128,6,225,5,"value"],[128,11,225,5],[128,13,86,4],[128,22,86,11,"syncState"],[128,31,86,20,"syncState"],[128,32,86,21,"currentState"],[128,44,86,33],[128,46,86,35,"newState"],[128,54,86,43],[128,56,86,45,"onJoin"],[128,62,86,51],[128,64,86,53,"onLeave"],[128,71,86,60],[128,73,86,62],[129,8,87,8],[129,12,87,14,"state"],[129,17,87,19],[129,20,87,22],[129,24,87,26],[129,25,87,27,"cloneDeep"],[129,34,87,36],[129,35,87,37,"currentState"],[129,47,87,49],[129,48,87,50],[130,8,88,8],[130,12,88,14,"transformedState"],[130,28,88,30],[130,31,88,33],[130,35,88,37],[130,36,88,38,"transformState"],[130,50,88,52],[130,51,88,53,"newState"],[130,59,88,61],[130,60,88,62],[131,8,89,8],[131,12,89,14,"joins"],[131,17,89,19],[131,20,89,22],[131,21,89,23],[131,22,89,24],[132,8,90,8],[132,12,90,14,"leaves"],[132,18,90,20],[132,21,90,23],[132,22,90,24],[132,23,90,25],[133,8,91,8],[133,12,91,12],[133,13,91,13,"map"],[133,16,91,16],[133,17,91,17,"state"],[133,22,91,22],[133,24,91,24],[133,34,91,25,"key"],[133,37,91,28],[133,39,91,30,"presences"],[133,48,91,39],[133,50,91,44],[134,10,92,12],[134,14,92,16],[134,15,92,17,"transformedState"],[134,31,92,33],[134,32,92,34,"key"],[134,35,92,37],[134,36,92,38],[134,38,92,40],[135,12,93,16,"leaves"],[135,18,93,22],[135,19,93,23,"key"],[135,22,93,26],[135,23,93,27],[135,26,93,30,"presences"],[135,35,93,39],[136,10,94,12],[137,8,95,8],[137,9,95,9],[137,10,95,10],[138,8,96,8],[138,12,96,12],[138,13,96,13,"map"],[138,16,96,16],[138,17,96,17,"transformedState"],[138,33,96,33],[138,35,96,35],[138,45,96,36,"key"],[138,48,96,39],[138,50,96,41,"newPresences"],[138,62,96,53],[138,64,96,58],[139,10,97,12],[139,14,97,18,"currentPresences"],[139,30,97,34],[139,33,97,37,"state"],[139,38,97,42],[139,39,97,43,"key"],[139,42,97,46],[139,43,97,47],[140,10,98,12],[140,14,98,16,"currentPresences"],[140,30,98,32],[140,32,98,34],[141,12,99,16],[141,16,99,22,"newPresenceRefs"],[141,31,99,37],[141,34,99,40,"newPresences"],[141,46,99,52],[141,47,99,53,"map"],[141,50,99,56],[141,51,99,57],[141,61,99,58,"m"],[141,62,99,59],[142,14,99,59],[142,21,99,64,"m"],[142,22,99,65],[142,23,99,66,"presence_ref"],[142,35,99,78],[143,12,99,78],[143,14,99,79],[144,12,100,16],[144,16,100,22,"curPresenceRefs"],[144,31,100,37],[144,34,100,40,"currentPresences"],[144,50,100,56],[144,51,100,57,"map"],[144,54,100,60],[144,55,100,61],[144,65,100,62,"m"],[144,66,100,63],[145,14,100,63],[145,21,100,68,"m"],[145,22,100,69],[145,23,100,70,"presence_ref"],[145,35,100,82],[146,12,100,82],[146,14,100,83],[147,12,101,16],[147,16,101,22,"joinedPresences"],[147,31,101,37],[147,34,101,40,"newPresences"],[147,46,101,52],[147,47,101,53,"filter"],[147,53,101,59],[147,54,101,60],[147,64,101,61,"m"],[147,65,101,62],[148,14,101,62],[148,21,101,67,"curPresenceRefs"],[148,36,101,82],[148,37,101,83,"indexOf"],[148,44,101,90],[148,45,101,91,"m"],[148,46,101,92],[148,47,101,93,"presence_ref"],[148,59,101,105],[148,60,101,106],[148,63,101,109],[148,64,101,110],[149,12,101,110],[149,14,101,111],[150,12,102,16],[150,16,102,22,"leftPresences"],[150,29,102,35],[150,32,102,38,"currentPresences"],[150,48,102,54],[150,49,102,55,"filter"],[150,55,102,61],[150,56,102,62],[150,66,102,63,"m"],[150,67,102,64],[151,14,102,64],[151,21,102,69,"newPresenceRefs"],[151,36,102,84],[151,37,102,85,"indexOf"],[151,44,102,92],[151,45,102,93,"m"],[151,46,102,94],[151,47,102,95,"presence_ref"],[151,59,102,107],[151,60,102,108],[151,63,102,111],[151,64,102,112],[152,12,102,112],[152,14,102,113],[153,12,103,16],[153,16,103,20,"joinedPresences"],[153,31,103,35],[153,32,103,36,"length"],[153,38,103,42],[153,41,103,45],[153,42,103,46],[153,44,103,48],[154,14,104,20,"joins"],[154,19,104,25],[154,20,104,26,"key"],[154,23,104,29],[154,24,104,30],[154,27,104,33,"joinedPresences"],[154,42,104,48],[155,12,105,16],[156,12,106,16],[156,16,106,20,"leftPresences"],[156,29,106,33],[156,30,106,34,"length"],[156,36,106,40],[156,39,106,43],[156,40,106,44],[156,42,106,46],[157,14,107,20,"leaves"],[157,20,107,26],[157,21,107,27,"key"],[157,24,107,30],[157,25,107,31],[157,28,107,34,"leftPresences"],[157,41,107,47],[158,12,108,16],[159,10,109,12],[159,11,109,13],[159,17,110,17],[160,12,111,16,"joins"],[160,17,111,21],[160,18,111,22,"key"],[160,21,111,25],[160,22,111,26],[160,25,111,29,"newPresences"],[160,37,111,41],[161,10,112,12],[162,8,113,8],[162,9,113,9],[162,10,113,10],[163,8,114,8],[163,15,114,15],[163,19,114,19],[163,20,114,20,"syncDiff"],[163,28,114,28],[163,29,114,29,"state"],[163,34,114,34],[163,36,114,36],[164,10,114,38,"joins"],[164,15,114,43],[164,17,114,38,"joins"],[164,22,114,43],[165,10,114,45,"leaves"],[165,16,114,51],[165,18,114,45,"leaves"],[166,8,114,52],[166,9,114,53],[166,11,114,55,"onJoin"],[166,17,114,61],[166,19,114,63,"onLeave"],[166,26,114,70],[166,27,114,71],[167,6,115,4],[168,6,116,4],[169,0,117,0],[170,0,118,0],[171,0,119,0],[172,0,120,0],[173,0,121,0],[174,0,122,0],[175,0,123,0],[176,0,124,0],[177,0,125,0],[178,4,116,4],[179,6,116,4,"key"],[179,9,116,4],[180,6,116,4,"value"],[180,11,116,4],[180,13,126,4],[180,22,126,11,"syncDiff"],[180,30,126,19,"syncDiff"],[180,31,126,20,"state"],[180,36,126,25],[180,38,126,27,"diff"],[180,42,126,31],[180,44,126,33,"onJoin"],[180,50,126,39],[180,52,126,41,"onLeave"],[180,59,126,48],[180,61,126,50],[181,8,126,50],[181,12,126,50,"_this2"],[181,18,126,50],[182,8,127,8],[182,12,127,8,"_joins$leaves"],[182,25,127,8],[182,28,127,34],[183,12,128,12,"joins"],[183,17,128,17],[183,19,128,19],[183,23,128,23],[183,24,128,24,"transformState"],[183,38,128,38],[183,39,128,39,"diff"],[183,43,128,43],[183,44,128,44,"joins"],[183,49,128,49],[183,50,128,50],[184,12,129,12,"leaves"],[184,18,129,18],[184,20,129,20],[184,24,129,24],[184,25,129,25,"transformState"],[184,39,129,39],[184,40,129,40,"diff"],[184,44,129,44],[184,45,129,45,"leaves"],[184,51,129,51],[185,10,130,8],[185,11,130,9],[186,10,127,16,"joins"],[186,15,127,21],[186,18,127,21,"_joins$leaves"],[186,31,127,21],[186,32,127,16,"joins"],[186,37,127,21],[187,10,127,23,"leaves"],[187,16,127,29],[187,19,127,29,"_joins$leaves"],[187,32,127,29],[187,33,127,23,"leaves"],[187,39,127,29],[188,8,131,8],[188,12,131,12],[188,13,131,13,"onJoin"],[188,19,131,19],[188,21,131,21],[189,10,132,12,"onJoin"],[189,16,132,18],[189,19,132,21],[189,28,132,12,"onJoin"],[189,34,132,18,"onJoin"],[189,35,132,18],[189,37,132,27],[189,38,132,29],[189,39,132,30],[190,8,133,8],[191,8,134,8],[191,12,134,12],[191,13,134,13,"onLeave"],[191,20,134,20],[191,22,134,22],[192,10,135,12,"onLeave"],[192,17,135,19],[192,20,135,22],[192,29,135,12,"onLeave"],[192,36,135,19,"onLeave"],[192,37,135,19],[192,39,135,28],[192,40,135,30],[192,41,135,31],[193,8,136,8],[194,8,137,8],[194,12,137,12],[194,13,137,13,"map"],[194,16,137,16],[194,17,137,17,"joins"],[194,22,137,22],[194,24,137,24],[194,34,137,25,"key"],[194,37,137,28],[194,39,137,30,"newPresences"],[194,51,137,42],[194,53,137,47],[195,10,138,12],[195,14,138,16,"_a"],[195,16,138,18],[196,10,139,12],[196,14,139,18,"currentPresences"],[196,30,139,34],[196,33,139,37],[196,34,139,38,"_a"],[196,36,139,40],[196,39,139,43,"state"],[196,44,139,48],[196,45,139,49,"key"],[196,48,139,52],[196,49,139,53],[196,55,139,59],[196,59,139,63],[196,63,139,67,"_a"],[196,65,139,69],[196,70,139,74],[196,75,139,79],[196,76,139,80],[196,79,139,83,"_a"],[196,81,139,85],[196,84,139,88],[196,86,139,90],[197,10,140,12,"state"],[197,15,140,17],[197,16,140,18,"key"],[197,19,140,21],[197,20,140,22],[197,23,140,25,"_this2"],[197,29,140,29],[197,30,140,30,"cloneDeep"],[197,39,140,39],[197,40,140,40,"newPresences"],[197,52,140,52],[197,53,140,53],[198,10,141,12],[198,14,141,16,"currentPresences"],[198,30,141,32],[198,31,141,33,"length"],[198,37,141,39],[198,40,141,42],[198,41,141,43],[198,43,141,45],[199,12,141,45],[199,16,141,45,"_state$key"],[199,26,141,45],[200,12,142,16],[200,16,142,22,"joinedPresenceRefs"],[200,34,142,40],[200,37,142,43,"state"],[200,42,142,48],[200,43,142,49,"key"],[200,46,142,52],[200,47,142,53],[200,48,142,54,"map"],[200,51,142,57],[200,52,142,58],[200,62,142,59,"m"],[200,63,142,60],[201,14,142,60],[201,21,142,65,"m"],[201,22,142,66],[201,23,142,67,"presence_ref"],[201,35,142,79],[202,12,142,79],[202,14,142,80],[203,12,143,16],[203,16,143,22,"curPresences"],[203,28,143,34],[203,31,143,37,"currentPresences"],[203,47,143,53],[203,48,143,54,"filter"],[203,54,143,60],[203,55,143,61],[203,65,143,62,"m"],[203,66,143,63],[204,14,143,63],[204,21,143,68,"joinedPresenceRefs"],[204,39,143,86],[204,40,143,87,"indexOf"],[204,47,143,94],[204,48,143,95,"m"],[204,49,143,96],[204,50,143,97,"presence_ref"],[204,62,143,109],[204,63,143,110],[204,66,143,113],[204,67,143,114],[205,12,143,114],[205,14,143,115],[206,12,144,16],[206,13,144,16,"_state$key"],[206,23,144,16],[206,26,144,16,"state"],[206,31,144,21],[206,32,144,22,"key"],[206,35,144,25],[206,36,144,26],[206,38,144,27,"unshift"],[206,45,144,34],[206,46,144,34,"apply"],[206,51,144,34],[206,52,144,34,"_state$key"],[206,62,144,34],[206,64,144,34,"_toConsumableArray"],[206,82,144,34],[206,83,144,38,"curPresences"],[206,95,144,50],[206,97,144,51],[207,10,145,12],[208,10,146,12,"onJoin"],[208,16,146,18],[208,17,146,19,"key"],[208,20,146,22],[208,22,146,24,"currentPresences"],[208,38,146,40],[208,40,146,42,"newPresences"],[208,52,146,54],[208,53,146,55],[209,8,147,8],[209,9,147,9],[209,10,147,10],[210,8,148,8],[210,12,148,12],[210,13,148,13,"map"],[210,16,148,16],[210,17,148,17,"leaves"],[210,23,148,23],[210,25,148,25],[210,35,148,26,"key"],[210,38,148,29],[210,40,148,31,"leftPresences"],[210,53,148,44],[210,55,148,49],[211,10,149,12],[211,14,149,16,"currentPresences"],[211,30,149,32],[211,33,149,35,"state"],[211,38,149,40],[211,39,149,41,"key"],[211,42,149,44],[211,43,149,45],[212,10,150,12],[212,14,150,16],[212,15,150,17,"currentPresences"],[212,31,150,33],[212,33,151,16],[213,10,152,12],[213,14,152,18,"presenceRefsToRemove"],[213,34,152,38],[213,37,152,41,"leftPresences"],[213,50,152,54],[213,51,152,55,"map"],[213,54,152,58],[213,55,152,59],[213,65,152,60,"m"],[213,66,152,61],[214,12,152,61],[214,19,152,66,"m"],[214,20,152,67],[214,21,152,68,"presence_ref"],[214,33,152,80],[215,10,152,80],[215,12,152,81],[216,10,153,12,"currentPresences"],[216,26,153,28],[216,29,153,31,"currentPresences"],[216,45,153,47],[216,46,153,48,"filter"],[216,52,153,54],[216,53,153,55],[216,63,153,56,"m"],[216,64,153,57],[217,12,153,57],[217,19,153,62,"presenceRefsToRemove"],[217,39,153,82],[217,40,153,83,"indexOf"],[217,47,153,90],[217,48,153,91,"m"],[217,49,153,92],[217,50,153,93,"presence_ref"],[217,62,153,105],[217,63,153,106],[217,66,153,109],[217,67,153,110],[218,10,153,110],[218,12,153,111],[219,10,154,12,"state"],[219,15,154,17],[219,16,154,18,"key"],[219,19,154,21],[219,20,154,22],[219,23,154,25,"currentPresences"],[219,39,154,41],[220,10,155,12,"onLeave"],[220,17,155,19],[220,18,155,20,"key"],[220,21,155,23],[220,23,155,25,"currentPresences"],[220,39,155,41],[220,41,155,43,"leftPresences"],[220,54,155,56],[220,55,155,57],[221,10,156,12],[221,14,156,16,"currentPresences"],[221,30,156,32],[221,31,156,33,"length"],[221,37,156,39],[221,42,156,44],[221,43,156,45],[221,45,157,16],[221,52,157,23,"state"],[221,57,157,28],[221,58,157,29,"key"],[221,61,157,32],[221,62,157,33],[222,8,158,8],[222,9,158,9],[222,10,158,10],[223,8,159,8],[223,15,159,15,"state"],[223,20,159,20],[224,6,160,4],[225,6,161,4],[226,4,161,4],[227,6,161,4,"key"],[227,9,161,4],[228,6,161,4,"value"],[228,11,161,4],[228,13,162,4],[228,22,162,11,"map"],[228,25,162,14,"map"],[228,26,162,15,"obj"],[228,29,162,18],[228,31,162,20,"func"],[228,35,162,24],[228,37,162,26],[229,8,163,8],[229,15,163,15,"Object"],[229,21,163,21],[229,22,163,22,"getOwnPropertyNames"],[229,41,163,41],[229,42,163,42,"obj"],[229,45,163,45],[229,46,163,46],[229,47,163,47,"map"],[229,50,163,50],[229,51,163,51],[229,61,163,52,"key"],[229,64,163,55],[230,10,163,55],[230,17,163,60,"func"],[230,21,163,64],[230,22,163,65,"key"],[230,25,163,68],[230,27,163,70,"obj"],[230,30,163,73],[230,31,163,74,"key"],[230,34,163,77],[230,35,163,78],[230,36,163,79],[231,8,163,79],[231,10,163,80],[232,6,164,4],[233,6,165,4],[234,0,166,0],[235,0,167,0],[236,0,168,0],[237,0,169,0],[238,0,170,0],[239,0,171,0],[240,0,172,0],[241,0,173,0],[242,0,174,0],[243,0,175,0],[244,0,176,0],[245,0,177,0],[246,0,178,0],[247,0,179,0],[248,0,180,0],[249,0,181,0],[250,0,182,0],[251,0,183,0],[252,0,184,0],[253,0,185,0],[254,0,186,0],[255,0,187,0],[256,4,165,4],[257,6,165,4,"key"],[257,9,165,4],[258,6,165,4,"value"],[258,11,165,4],[258,13,188,4],[258,22,188,11,"transformState"],[258,36,188,25,"transformState"],[258,37,188,26,"state"],[258,42,188,31],[258,44,188,33],[259,8,189,8,"state"],[259,13,189,13],[259,16,189,16],[259,20,189,20],[259,21,189,21,"cloneDeep"],[259,30,189,30],[259,31,189,31,"state"],[259,36,189,36],[259,37,189,37],[260,8,190,8],[260,15,190,15,"Object"],[260,21,190,21],[260,22,190,22,"getOwnPropertyNames"],[260,41,190,41],[260,42,190,42,"state"],[260,47,190,47],[260,48,190,48],[260,49,190,49,"reduce"],[260,55,190,55],[260,56,190,56],[260,66,190,57,"newState"],[260,74,190,65],[260,76,190,67,"key"],[260,79,190,70],[260,81,190,75],[261,10,191,12],[261,14,191,18,"presences"],[261,23,191,27],[261,26,191,30,"state"],[261,31,191,35],[261,32,191,36,"key"],[261,35,191,39],[261,36,191,40],[262,10,192,12],[262,14,192,16],[262,21,192,23],[262,25,192,27,"presences"],[262,34,192,36],[262,36,192,38],[263,12,193,16,"newState"],[263,20,193,24],[263,21,193,25,"key"],[263,24,193,28],[263,25,193,29],[263,28,193,32,"presences"],[263,37,193,41],[263,38,193,42,"metas"],[263,43,193,47],[263,44,193,48,"map"],[263,47,193,51],[263,48,193,52],[263,58,193,53,"presence"],[263,66,193,61],[263,68,193,66],[264,14,194,20,"presence"],[264,22,194,28],[264,23,194,29],[264,37,194,43],[264,38,194,44],[264,41,194,47,"presence"],[264,49,194,55],[264,50,194,56],[264,59,194,65],[264,60,194,66],[265,14,195,20],[265,21,195,27,"presence"],[265,29,195,35],[265,30,195,36],[265,39,195,45],[265,40,195,46],[266,14,196,20],[266,21,196,27,"presence"],[266,29,196,35],[266,30,196,36],[266,44,196,50],[266,45,196,51],[267,14,197,20],[267,21,197,27,"presence"],[267,29,197,35],[268,12,198,16],[268,13,198,17],[268,14,198,18],[269,10,199,12],[269,11,199,13],[269,17,200,17],[270,12,201,16,"newState"],[270,20,201,24],[270,21,201,25,"key"],[270,24,201,28],[270,25,201,29],[270,28,201,32,"presences"],[270,37,201,41],[271,10,202,12],[272,10,203,12],[272,17,203,19,"newState"],[272,25,203,27],[273,8,204,8],[273,9,204,9],[273,11,204,11],[273,12,204,12],[273,13,204,13],[273,14,204,14],[274,6,205,4],[275,6,206,4],[276,4,206,4],[277,6,206,4,"key"],[277,9,206,4],[278,6,206,4,"value"],[278,11,206,4],[278,13,207,4],[278,22,207,11,"cloneDeep"],[278,31,207,20,"cloneDeep"],[278,32,207,21,"obj"],[278,35,207,24],[278,37,207,26],[279,8,208,8],[279,15,208,15,"JSON"],[279,19,208,19],[279,20,208,20,"parse"],[279,25,208,25],[279,26,208,26,"JSON"],[279,30,208,30],[279,31,208,31,"stringify"],[279,40,208,40],[279,41,208,41,"obj"],[279,44,208,44],[279,45,208,45],[279,46,208,46],[280,6,209,4],[281,4,209,5],[282,2,209,5],[283,2,227,0,"exports"],[283,9,227,7],[283,10,227,8,"default"],[283,17,227,15],[283,20,227,18,"RealtimePresence"],[283,36,227,34],[284,0,227,35],[284,3]],"functionMap":{"names":["<global>","<anonymous>","RealtimePresence","constructor","caller.onJoin","caller.onLeave","caller.onSync","channel._on$argument_2","pendingDiffs.forEach$argument_0","onJoin$argument_0","onLeave$argument_0","onSync$argument_0","syncState","map$argument_1","newPresences.map$argument_0","currentPresences.map$argument_0","newPresences.filter$argument_0","currentPresences.filter$argument_0","syncDiff","onJoin","onLeave","state.key.map$argument_0","leftPresences.map$argument_0","map","Object.getOwnPropertyNames.map$argument_0","transformState","Object.getOwnPropertyNames.reduce$argument_0","presences.metas.map$argument_0","cloneDeep","onSync","inPendingSyncState"],"mappings":"AAA;CCQ;CDI;AEC;ICQ;oBCM,SD;qBEC,SF;oBGC,SH;2CIM;sCCI;aDE;SJG;0CIC;SJS;oBMC;SNO;qBOC;SPO;oBQC;SRE;KDC;IUW;wBCK;SDI;mCCC;yDCG,qBD;6DEC,qBF;4DGC,kDH;8DIC,kDJ;SDW;KVE;IgBW;qBCM,SD;sBEG,SF;wBLE;0DQK,qBR;6DIC,qDJ;SKI;yBLC;2DSI,qBT;uDIC,uDJ;SKK;KhBE;IqBE;mDCC,4BD;KrBC;IuBwB;wDCE;oDCG;iBDK;SDM;KvBC;I0BE;K1BE;IiBE;KjBE;IkBE;KlBE;I2BE;K3BE;I4BE;K5BE;CFC"}},"type":"js/module"}]}