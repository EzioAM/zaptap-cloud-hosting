{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":2,"column":76,"index":108}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":109},"end":{"line":3,"column":52,"index":161}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":162},"end":{"line":4,"column":35,"index":197}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"]}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":198},"end":{"line":5,"column":63,"index":261}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"]}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":262},"end":{"line":6,"column":55,"index":317}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.filterConfig = filterConfig;\n  exports.findNodeHandle = findNodeHandle;\n  exports.scheduleFlushOperations = scheduleFlushOperations;\n  exports.transformIntoHandlerTags = transformIntoHandlerTags;\n  var _reactNative = require(_dependencyMap[1], \"react-native\");\n  var _handlersRegistry = require(_dependencyMap[2], \"./handlersRegistry\");\n  var _utils = require(_dependencyMap[3], \"../utils\");\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[4], \"../RNGestureHandlerModule\"));\n  var _ghQueueMicrotask = require(_dependencyMap[5], \"../ghQueueMicrotask\");\n  function isConfigParam(param, name) {\n    // param !== Object(param) returns false if `param` is a function\n    // or an object and returns true if `param` is null\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var filteredConfig = Object.assign({}, defaults);\n    for (var key of validProps) {\n      var value = props[key];\n      if (isConfigParam(value, key)) {\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop' && typeof value !== 'object') {\n          value = {\n            top: value,\n            left: value,\n            bottom: value,\n            right: value\n          };\n        }\n        filteredConfig[key] = value;\n      }\n    }\n    return filteredConfig;\n  }\n  function transformIntoHandlerTags(handlerIDs) {\n    handlerIDs = (0, _utils.toArray)(handlerIDs);\n    if (_reactNative.Platform.OS === 'web') {\n      return handlerIDs.map(function (_ref) {\n        var current = _ref.current;\n        return current;\n      }).filter(function (handle) {\n        return handle;\n      });\n    }\n    // converts handler string IDs into their numeric tags\n    return handlerIDs.map(function (handlerID) {\n      var _handlerID$current;\n      return _handlersRegistry.handlerIDToTag[handlerID] || ((_handlerID$current = handlerID.current) == null ? void 0 : _handlerID$current.handlerTag) || -1;\n    }).filter(function (handlerTag) {\n      return handlerTag > 0;\n    });\n  }\n  function findNodeHandle(node) {\n    if (_reactNative.Platform.OS === 'web') {\n      return node;\n    }\n    return (0, _reactNative.findNodeHandle)(node);\n  }\n  var flushOperationsScheduled = false;\n  function scheduleFlushOperations() {\n    if (!flushOperationsScheduled) {\n      flushOperationsScheduled = true;\n      (0, _ghQueueMicrotask.ghQueueMicrotask)(function () {\n        _RNGestureHandlerModule.default.flushOperations();\n        flushOperationsScheduled = false;\n      });\n    }\n  }\n});","lineCount":75,"map":[[10,2,2,0],[10,6,2,0,"_reactNative"],[10,18,2,0],[10,21,2,0,"require"],[10,28,2,0],[10,29,2,0,"_dependencyMap"],[10,43,2,0],[11,2,3,0],[11,6,3,0,"_handlersRegistry"],[11,23,3,0],[11,26,3,0,"require"],[11,33,3,0],[11,34,3,0,"_dependencyMap"],[11,48,3,0],[12,2,4,0],[12,6,4,0,"_utils"],[12,12,4,0],[12,15,4,0,"require"],[12,22,4,0],[12,23,4,0,"_dependencyMap"],[12,37,4,0],[13,2,5,0],[13,6,5,0,"_RNGestureHandlerModule"],[13,29,5,0],[13,32,5,0,"_interopRequireDefault"],[13,54,5,0],[13,55,5,0,"require"],[13,62,5,0],[13,63,5,0,"_dependencyMap"],[13,77,5,0],[14,2,6,0],[14,6,6,0,"_ghQueueMicrotask"],[14,23,6,0],[14,26,6,0,"require"],[14,33,6,0],[14,34,6,0,"_dependencyMap"],[14,48,6,0],[15,2,8,0],[15,11,8,9,"isConfigParam"],[15,24,8,22,"isConfigParam"],[15,25,8,23,"param"],[15,30,8,37],[15,32,8,39,"name"],[15,36,8,51],[15,38,8,53],[16,4,9,2],[17,4,10,2],[18,4,11,2],[18,11,12,4,"param"],[18,16,12,9],[18,21,12,14,"undefined"],[18,30,12,23],[18,35,13,5,"param"],[18,40,13,10],[18,45,13,15,"Object"],[18,51,13,21],[18,52,13,22,"param"],[18,57,13,27],[18,58,13,28],[18,62,14,6],[18,64,14,8],[18,76,14,20],[18,80,14,25,"param"],[18,85,14,58],[18,86,14,59],[18,87,14,60],[18,91,15,4,"name"],[18,95,15,8],[18,100,15,13],[18,122,15,35],[18,126,16,4,"name"],[18,130,16,8],[18,135,16,13],[18,151,16,29],[19,2,18,0],[20,2,20,7],[20,11,20,16,"filterConfig"],[20,23,20,28,"filterConfig"],[20,24,21,2,"props"],[20,29,21,32],[20,31,22,2,"validProps"],[20,41,22,22],[20,43,24,2],[21,4,24,2],[21,8,23,2,"defaults"],[21,16,23,35],[21,19,23,35,"arguments"],[21,28,23,35],[21,29,23,35,"length"],[21,35,23,35],[21,43,23,35,"arguments"],[21,52,23,35],[21,60,23,35,"undefined"],[21,69,23,35],[21,72,23,35,"arguments"],[21,81,23,35],[21,87,23,38],[21,88,23,39],[21,89,23,40],[22,4,25,2],[22,8,25,8,"filteredConfig"],[22,22,25,22],[22,25,25,22,"Object"],[22,31,25,22],[22,32,25,22,"assign"],[22,38,25,22],[22,43,25,30,"defaults"],[22,51,25,38],[22,52,25,40],[23,4,26,2],[23,9,26,7],[23,13,26,13,"key"],[23,16,26,16],[23,20,26,20,"validProps"],[23,30,26,30],[23,32,26,32],[24,6,27,4],[24,10,27,8,"value"],[24,15,27,13],[24,18,27,16,"props"],[24,23,27,21],[24,24,27,22,"key"],[24,27,27,25],[24,28,27,26],[25,6,28,4],[25,10,28,8,"isConfigParam"],[25,23,28,21],[25,24,28,22,"value"],[25,29,28,27],[25,31,28,29,"key"],[25,34,28,32],[25,35,28,33],[25,37,28,35],[26,8,29,6],[26,12,29,10,"key"],[26,15,29,13],[26,20,29,18],[26,42,29,40],[26,46,29,44,"key"],[26,49,29,47],[26,54,29,52],[26,63,29,61],[26,65,29,63],[27,10,30,8,"value"],[27,15,30,13],[27,18,30,16,"transformIntoHandlerTags"],[27,42,30,40],[27,43,30,41,"props"],[27,48,30,46],[27,49,30,47,"key"],[27,52,30,50],[27,53,30,51],[27,54,30,52],[28,8,31,6],[28,9,31,7],[28,15,31,13],[28,19,31,17,"key"],[28,22,31,20],[28,27,31,25],[28,36,31,34],[28,40,31,38],[28,47,31,45,"value"],[28,52,31,50],[28,57,31,55],[28,65,31,63],[28,67,31,65],[29,10,32,8,"value"],[29,15,32,13],[29,18,32,16],[30,12,32,18,"top"],[30,15,32,21],[30,17,32,23,"value"],[30,22,32,28],[31,12,32,30,"left"],[31,16,32,34],[31,18,32,36,"value"],[31,23,32,41],[32,12,32,43,"bottom"],[32,18,32,49],[32,20,32,51,"value"],[32,25,32,56],[33,12,32,58,"right"],[33,17,32,63],[33,19,32,65,"value"],[34,10,32,71],[34,11,32,72],[35,8,33,6],[36,8,34,6,"filteredConfig"],[36,22,34,20],[36,23,34,21,"key"],[36,26,34,24],[36,27,34,25],[36,30,34,28,"value"],[36,35,34,33],[37,6,35,4],[38,4,36,2],[39,4,37,2],[39,11,37,9,"filteredConfig"],[39,25,37,23],[40,2,38,0],[41,2,40,7],[41,11,40,16,"transformIntoHandlerTags"],[41,35,40,40,"transformIntoHandlerTags"],[41,36,40,41,"handlerIDs"],[41,46,40,56],[41,48,40,58],[42,4,41,2,"handlerIDs"],[42,14,41,12],[42,17,41,15],[42,21,41,15,"toArray"],[42,35,41,22],[42,37,41,23,"handlerIDs"],[42,47,41,33],[42,48,41,34],[43,4,43,2],[43,8,43,6,"Platform"],[43,29,43,14],[43,30,43,15,"OS"],[43,32,43,17],[43,37,43,22],[43,42,43,27],[43,44,43,29],[44,6,44,4],[44,13,44,11,"handlerIDs"],[44,23,44,21],[44,24,45,7,"map"],[44,27,45,10],[44,28,45,11],[44,38,45,11,"_ref"],[44,42,45,11],[45,8,45,11],[45,12,45,14,"current"],[45,19,45,21],[45,22,45,21,"_ref"],[45,26,45,21],[45,27,45,14,"current"],[45,34,45,21],[46,8,45,21],[46,15,45,46,"current"],[46,22,45,53],[47,6,45,53],[47,8,45,54],[47,9,46,7,"filter"],[47,15,46,13],[47,16,46,14],[47,26,46,15,"handle"],[47,32,46,26],[48,8,46,26],[48,15,46,31,"handle"],[48,21,46,37],[49,6,46,37],[49,8,46,38],[50,4,47,2],[51,4,48,2],[52,4,49,2],[52,11,49,9,"handlerIDs"],[52,21,49,19],[52,22,50,5,"map"],[52,25,50,8],[52,26,51,6],[52,36,51,7,"handlerID"],[52,45,51,21],[53,6,51,21],[53,10,51,21,"_handlerID$current"],[53,28,51,21],[54,6,51,21],[54,13,52,8,"handlerIDToTag"],[54,45,52,22],[54,46,52,23,"handlerID"],[54,55,52,32],[54,56,52,33],[54,62,52,33,"_handlerID$current"],[54,80,52,33],[54,83,52,37,"handlerID"],[54,92,52,46],[54,93,52,47,"current"],[54,100,52,54],[54,121,52,37,"_handlerID$current"],[54,139,52,37],[54,140,52,56,"handlerTag"],[54,150,52,66],[54,155,52,70],[54,156,52,71],[54,157,52,72],[55,4,52,72],[55,5,53,4],[55,6,53,5],[55,7,54,5,"filter"],[55,13,54,11],[55,14,54,12],[55,24,54,13,"handlerTag"],[55,34,54,31],[56,6,54,31],[56,13,54,36,"handlerTag"],[56,23,54,46],[56,26,54,49],[56,27,54,50],[57,4,54,50],[57,6,54,51],[58,2,55,0],[59,2,57,7],[59,11,57,16,"findNodeHandle"],[59,25,57,30,"findNodeHandle"],[59,26,58,2,"node"],[59,30,58,77],[59,32,59,73],[60,4,60,2],[60,8,60,6,"Platform"],[60,29,60,14],[60,30,60,15,"OS"],[60,32,60,17],[60,37,60,22],[60,42,60,27],[60,44,60,29],[61,6,61,4],[61,13,61,11,"node"],[61,17,61,15],[62,4,62,2],[63,4,63,2],[63,11,63,9],[63,15,63,9,"findNodeHandleRN"],[63,42,63,25],[63,44,63,26,"node"],[63,48,63,30],[63,49,63,31],[64,2,64,0],[65,2,65,0],[65,6,65,4,"flushOperationsScheduled"],[65,30,65,28],[65,33,65,31],[65,38,65,36],[66,2,67,7],[66,11,67,16,"scheduleFlushOperations"],[66,34,67,39,"scheduleFlushOperations"],[66,35,67,39],[66,37,67,42],[67,4,68,2],[67,8,68,6],[67,9,68,7,"flushOperationsScheduled"],[67,33,68,31],[67,35,68,33],[68,6,69,4,"flushOperationsScheduled"],[68,30,69,28],[68,33,69,31],[68,37,69,35],[69,6,70,4],[69,10,70,4,"ghQueueMicrotask"],[69,44,70,20],[69,46,70,21],[69,58,70,27],[70,8,71,6,"RNGestureHandlerModule"],[70,39,71,28],[70,40,71,29,"flushOperations"],[70,55,71,44],[70,56,71,45],[70,57,71,46],[71,8,73,6,"flushOperationsScheduled"],[71,32,73,30],[71,35,73,33],[71,40,73,38],[72,6,74,4],[72,7,74,5],[72,8,74,6],[73,4,75,2],[74,2,76,0],[75,0,76,1],[75,3]],"functionMap":{"names":["<global>","isConfigParam","filterConfig","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","findNodeHandle","scheduleFlushOperations","ghQueueMicrotask$argument_0"],"mappings":"AAA;ACO;CDU;OEE;CFkB;OGE;WCK,0CD;cEC,uBF;MCK;wEDC;YEE,sCF;CHC;OME;CNO;OOG;qBCG;KDI;CPE"}},"type":"js/module"}]}