{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":69,"index":69}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":70},"end":{"line":2,"column":40,"index":110}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"../supabase/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":46,"index":157}}],"key":"q3G/dBcB/lyqe2ZqsudXc9dkd4E=","exportNames":["*"]}},{"name":"../../config/analytics","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":158},"end":{"line":12,"column":32,"index":354}}],"key":"4gjS6BEK9IQgu06QXmlywlo09Ys=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":355},"end":{"line":13,"column":54,"index":409}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.AnalyticsService = undefined;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[3]));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[4]));\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[5]));\n  var _reactNative = require(_dependencyMap[6]);\n  var _client = require(_dependencyMap[7]);\n  var _analytics = require(_dependencyMap[8]);\n  var _EventLogger = require(_dependencyMap[9]);\n  // Legacy interface for backward compatibility\n  // Enhanced event interface\n  var AnalyticsService = exports.AnalyticsService = /*#__PURE__*/function () {\n    function AnalyticsService() {\n      (0, _classCallCheck2.default)(this, AnalyticsService);\n      this.eventQueue = [];\n      this.isInitialized = false;\n      this.isFlushing = false;\n      this.sessionStartTime = Date.now();\n      this.lastActivityTime = Date.now();\n      this.config = {\n        enabled: (0, _analytics.getAnalyticsConfig)().enabled,\n        hasConsent: false\n      };\n    }\n\n    /**\n     * Get singleton instance\n     */\n    return (0, _createClass2.default)(AnalyticsService, [{\n      key: \"initialize\",\n      value: (\n      /**\n       * Initialize analytics service\n       */\n      function () {\n        var _initialize = (0, _asyncToGenerator2.default)(function* () {\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          try {\n            _EventLogger.EventLogger.info('Analytics', 'Initializing analytics service', options);\n\n            // Load persisted settings in background to avoid blocking\n            this.loadPersistedData().catch(error => {\n              _EventLogger.EventLogger.warn('Analytics', 'Failed to load persisted data, continuing with defaults', error);\n            });\n\n            // Generate session ID if needed\n            if (!this.config.sessionId) {\n              this.config.sessionId = this.generateSessionId();\n              yield _asyncStorage.default.setItem(AnalyticsService.SESSION_ID_KEY, this.config.sessionId);\n            }\n\n            // Generate anonymous ID if needed\n            if (!this.config.anonymousId) {\n              this.config.anonymousId = this.generateAnonymousId();\n              yield _asyncStorage.default.setItem(AnalyticsService.ANONYMOUS_ID_KEY, this.config.anonymousId);\n            }\n\n            // Set up periodic flush\n            this.setupPeriodicFlush();\n\n            // Set up session management\n            this.setupSessionManagement();\n\n            // Load offline events\n            yield this.loadOfflineEvents();\n            this.isInitialized = true;\n            _EventLogger.EventLogger.info('Analytics', 'Analytics service initialized successfully');\n\n            // Track app opened event\n            this.track(_analytics.ANALYTICS_EVENTS.APP_OPENED, {\n              session_id: this.config.sessionId,\n              is_first_launch: !this.config.userId\n            });\n          } catch (error) {\n            _EventLogger.EventLogger.error('Analytics', 'Failed to initialize analytics', error);\n          }\n        });\n        function initialize() {\n          return _initialize.apply(this, arguments);\n        }\n        return initialize;\n      }()\n      /**\n       * Set user consent for analytics tracking\n       */\n      )\n    }, {\n      key: \"setConsent\",\n      value: (function () {\n        var _setConsent = (0, _asyncToGenerator2.default)(function* (consent) {\n          this.consentSettings = {\n            analytics: consent.analytics ?? false,\n            performance: consent.performance ?? false,\n            marketing: consent.marketing ?? false,\n            functional: consent.functional ?? true,\n            // Functional cookies are usually required\n            timestamp: new Date().toISOString()\n          };\n          this.config.hasConsent = this.consentSettings.analytics;\n          yield _asyncStorage.default.setItem(AnalyticsService.CONSENT_KEY, JSON.stringify(this.consentSettings));\n          _EventLogger.EventLogger.info('Analytics', 'User consent updated', this.consentSettings);\n\n          // Track consent event\n          if (this.consentSettings.analytics) {\n            this.track('consent_given', {\n              consent_types: Object.keys(consent)\n            });\n          }\n        });\n        function setConsent(_x) {\n          return _setConsent.apply(this, arguments);\n        }\n        return setConsent;\n      }()\n      /**\n       * Identify a user\n       */\n      )\n    }, {\n      key: \"identify\",\n      value: (function () {\n        var _identify = (0, _asyncToGenerator2.default)(function* (userId, properties) {\n          if (!this.hasConsent()) return;\n          this.config.userId = userId;\n          this.config.userProperties = {\n            ...this.config.userProperties,\n            ...properties,\n            user_id: userId\n          };\n          yield _asyncStorage.default.setItem(AnalyticsService.USER_ID_KEY, userId);\n          yield _asyncStorage.default.setItem(AnalyticsService.USER_PROPERTIES_KEY, JSON.stringify(this.config.userProperties));\n          _EventLogger.EventLogger.info('Analytics', 'User identified', {\n            userId,\n            properties\n          });\n\n          // Track user login if this is a new identification\n          this.track(_analytics.ANALYTICS_EVENTS.USER_LOGGED_IN, {\n            user_id: userId,\n            ...properties\n          });\n        });\n        function identify(_x2, _x3) {\n          return _identify.apply(this, arguments);\n        }\n        return identify;\n      }()\n      /**\n       * Clear user identification (logout)\n       */\n      )\n    }, {\n      key: \"reset\",\n      value: (function () {\n        var _reset = (0, _asyncToGenerator2.default)(function* () {\n          var oldUserId = this.config.userId;\n          this.config.userId = undefined;\n          this.config.userProperties = {};\n          this.config.sessionId = this.generateSessionId();\n          yield _asyncStorage.default.multiRemove([AnalyticsService.USER_ID_KEY, AnalyticsService.USER_PROPERTIES_KEY, AnalyticsService.SESSION_ID_KEY]);\n          yield _asyncStorage.default.setItem(AnalyticsService.SESSION_ID_KEY, this.config.sessionId);\n          _EventLogger.EventLogger.info('Analytics', 'User context reset', {\n            oldUserId\n          });\n          if (oldUserId && this.hasConsent()) {\n            this.track(_analytics.ANALYTICS_EVENTS.USER_LOGGED_OUT, {\n              previous_user_id: oldUserId\n            });\n          }\n        });\n        function reset() {\n          return _reset.apply(this, arguments);\n        }\n        return reset;\n      }()\n      /**\n       * Update user properties\n       */\n      )\n    }, {\n      key: \"setUserProperties\",\n      value: (function () {\n        var _setUserProperties = (0, _asyncToGenerator2.default)(function* (properties) {\n          if (!this.hasConsent()) return;\n          this.config.userProperties = {\n            ...this.config.userProperties,\n            ...properties\n          };\n          yield _asyncStorage.default.setItem(AnalyticsService.USER_PROPERTIES_KEY, JSON.stringify(this.config.userProperties));\n          _EventLogger.EventLogger.info('Analytics', 'User properties updated', properties);\n        });\n        function setUserProperties(_x4) {\n          return _setUserProperties.apply(this, arguments);\n        }\n        return setUserProperties;\n      }()\n      /**\n       * Track an event\n       */\n      )\n    }, {\n      key: \"track\",\n      value: function track(eventName, properties) {\n        if (!this.shouldTrackEvent(eventName)) {\n          return;\n        }\n        try {\n          var event = {\n            event_name: eventName,\n            properties: this.enrichProperties(properties),\n            user_properties: this.config.userProperties,\n            timestamp: new Date().toISOString(),\n            session_id: this.config.sessionId,\n            user_id: this.config.userId,\n            anonymous_id: this.config.anonymousId,\n            context: this.buildContext()\n          };\n          this.eventQueue.push(event);\n          this.lastActivityTime = Date.now();\n          _EventLogger.EventLogger.analyticsEvent(eventName, properties);\n\n          // Auto-flush if queue is full\n          if (this.eventQueue.length >= (0, _analytics.getAnalyticsConfig)().batchSize) {\n            this.flush();\n          }\n        } catch (error) {\n          _EventLogger.EventLogger.error('Analytics', 'Failed to track event', error, {\n            eventName,\n            properties\n          });\n        }\n      }\n\n      /**\n       * Track screen view\n       */\n    }, {\n      key: \"trackScreen\",\n      value: function trackScreen(screenName, properties) {\n        this.track(_analytics.ANALYTICS_EVENTS.SCREEN_VIEWED, {\n          screen_name: screenName,\n          ...properties\n        });\n      }\n\n      /**\n       * Time an operation\n       */\n    }, {\n      key: \"time\",\n      value: function time(operation, fn) {\n        var startTime = Date.now();\n        return fn().finally(() => {\n          var duration = Date.now() - startTime;\n          this.track('operation_timed', {\n            operation,\n            duration\n          });\n        });\n      }\n\n      /**\n       * Track revenue event (for future premium features)\n       */\n    }, {\n      key: \"trackRevenue\",\n      value: function trackRevenue(amount) {\n        var currency = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'USD';\n        var properties = arguments.length > 2 ? arguments[2] : undefined;\n        this.track('revenue', {\n          amount,\n          currency,\n          ...properties\n        });\n      }\n\n      /**\n       * Flush events to backend\n       */\n    }, {\n      key: \"flush\",\n      value: (function () {\n        var _flush = (0, _asyncToGenerator2.default)(function* () {\n          if (!this.hasConsent() || this.isFlushing || this.eventQueue.length === 0) {\n            return;\n          }\n          this.isFlushing = true;\n          var events = [...this.eventQueue];\n          this.eventQueue = [];\n          try {\n            var batch = {\n              events,\n              timestamp: new Date().toISOString(),\n              batch_id: this.generateBatchId()\n            };\n\n            // Store offline if network is unavailable\n            var isOnline = yield this.checkNetworkStatus();\n            if (!isOnline) {\n              yield this.storeOfflineEvents(events);\n              _EventLogger.EventLogger.info('Analytics', 'Events stored offline', {\n                count: events.length\n              });\n              return;\n            }\n\n            // Send to backend (using existing Supabase integration)\n            yield this.sendEventBatch(batch);\n            _EventLogger.EventLogger.info('Analytics', 'Events flushed successfully', {\n              count: events.length\n            });\n          } catch (error) {\n            // Put events back in queue on failure\n            this.eventQueue.unshift(...events);\n            yield this.storeOfflineEvents(events);\n            _EventLogger.EventLogger.error('Analytics', 'Failed to flush events', error);\n          } finally {\n            this.isFlushing = false;\n          }\n        });\n        function flush() {\n          return _flush.apply(this, arguments);\n        }\n        return flush;\n      }()\n      /**\n       * Legacy method for backward compatibility\n       */\n      )\n    }, {\n      key: \"hasConsent\",\n      value:\n      /**\n       * Check if we have user consent to track\n       */\n      function hasConsent() {\n        return this.config.hasConsent === true;\n      }\n\n      /**\n       * Check if we should track a specific event\n       */\n    }, {\n      key: \"shouldTrackEvent\",\n      value: function shouldTrackEvent(eventName) {\n        if (!this.isInitialized) {\n          _EventLogger.EventLogger.warn('Analytics', 'Attempted to track event before initialization', {\n            eventName\n          });\n          return false;\n        }\n        if (!this.config.enabled) {\n          return false;\n        }\n        if (!this.hasConsent()) {\n          return false;\n        }\n\n        // Apply sampling\n        var config = (0, _analytics.getAnalyticsConfig)();\n        var sampleRate = config.sampling.screenViews; // Default sampling rate\n\n        if (Math.random() > sampleRate) {\n          return false;\n        }\n        return true;\n      }\n\n      /**\n       * Enrich properties with default values and context\n       */\n    }, {\n      key: \"enrichProperties\",\n      value: function enrichProperties(properties) {\n        return {\n          ..._analytics.DEFAULT_EVENT_PROPERTIES,\n          session_duration: Date.now() - this.sessionStartTime,\n          time_since_last_activity: Date.now() - this.lastActivityTime,\n          platform: \"android\",\n          ...(0, _analytics.sanitizeEventProperties)(properties || {})\n        };\n      }\n\n      /**\n       * Build context object\n       */\n    }, {\n      key: \"buildContext\",\n      value: function buildContext() {\n        return {\n          app: {\n            name: 'ZapTap',\n            version: '1.0.0',\n            // TODO: Get from package.json or Constants\n            build: 'production'\n          },\n          device: {\n            type: 'android',\n            model: \"android\",\n            // Would need react-native-device-info for actual model\n            manufacturer: 'Android'\n          },\n          os: {\n            name: \"android\",\n            version: _reactNative.Platform.Version.toString()\n          }\n        };\n      }\n\n      /**\n       * Load persisted data from storage\n       */\n    }, {\n      key: \"loadPersistedData\",\n      value: (function () {\n        var _loadPersistedData = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var _yield$AsyncStorage$m = yield _asyncStorage.default.multiGet([AnalyticsService.CONSENT_KEY, AnalyticsService.USER_ID_KEY, AnalyticsService.ANONYMOUS_ID_KEY, AnalyticsService.SESSION_ID_KEY, AnalyticsService.USER_PROPERTIES_KEY]),\n              _yield$AsyncStorage$m2 = (0, _slicedToArray2.default)(_yield$AsyncStorage$m, 5),\n              consent = _yield$AsyncStorage$m2[0],\n              userId = _yield$AsyncStorage$m2[1],\n              anonymousId = _yield$AsyncStorage$m2[2],\n              sessionId = _yield$AsyncStorage$m2[3],\n              userProperties = _yield$AsyncStorage$m2[4];\n            if (consent[1]) {\n              this.consentSettings = JSON.parse(consent[1]);\n              this.config.hasConsent = this.consentSettings?.analytics ?? false;\n            }\n            if (userId[1]) {\n              this.config.userId = userId[1];\n            }\n            if (anonymousId[1]) {\n              this.config.anonymousId = anonymousId[1];\n            }\n            if (sessionId[1]) {\n              this.config.sessionId = sessionId[1];\n            }\n            if (userProperties[1]) {\n              this.config.userProperties = JSON.parse(userProperties[1]);\n            }\n          } catch (error) {\n            _EventLogger.EventLogger.error('Analytics', 'Failed to load persisted data', error);\n          }\n        });\n        function loadPersistedData() {\n          return _loadPersistedData.apply(this, arguments);\n        }\n        return loadPersistedData;\n      }()\n      /**\n       * Setup periodic event flushing\n       */\n      )\n    }, {\n      key: \"setupPeriodicFlush\",\n      value: function setupPeriodicFlush() {\n        setInterval(() => {\n          if (this.eventQueue.length > 0) {\n            this.flush();\n          }\n        }, (0, _analytics.getAnalyticsConfig)().flushInterval);\n      }\n\n      /**\n       * Setup session management\n       */\n    }, {\n      key: \"setupSessionManagement\",\n      value: function setupSessionManagement() {\n        // Reset session after timeout\n        setInterval(() => {\n          var timeSinceLastActivity = Date.now() - this.lastActivityTime;\n          if (timeSinceLastActivity > (0, _analytics.getAnalyticsConfig)().sessionTimeout) {\n            this.startNewSession();\n          }\n        }, 60000); // Check every minute\n      }\n\n      /**\n       * Start a new session\n       */\n    }, {\n      key: \"startNewSession\",\n      value: (function () {\n        var _startNewSession = (0, _asyncToGenerator2.default)(function* () {\n          var oldSessionId = this.config.sessionId;\n          this.config.sessionId = this.generateSessionId();\n          this.sessionStartTime = Date.now();\n          this.lastActivityTime = Date.now();\n          yield _asyncStorage.default.setItem(AnalyticsService.SESSION_ID_KEY, this.config.sessionId);\n          if (this.hasConsent()) {\n            this.track('session_started', {\n              previous_session_id: oldSessionId\n            });\n          }\n        });\n        function startNewSession() {\n          return _startNewSession.apply(this, arguments);\n        }\n        return startNewSession;\n      }()\n      /**\n       * Load offline events\n       */\n      )\n    }, {\n      key: \"loadOfflineEvents\",\n      value: (function () {\n        var _loadOfflineEvents = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var offlineEvents = yield _asyncStorage.default.getItem(AnalyticsService.OFFLINE_EVENTS_KEY);\n            if (offlineEvents) {\n              var events = JSON.parse(offlineEvents);\n              this.eventQueue.unshift(...events);\n              yield _asyncStorage.default.removeItem(AnalyticsService.OFFLINE_EVENTS_KEY);\n              _EventLogger.EventLogger.info('Analytics', 'Loaded offline events', {\n                count: events.length\n              });\n            }\n          } catch (error) {\n            _EventLogger.EventLogger.error('Analytics', 'Failed to load offline events', error);\n          }\n        });\n        function loadOfflineEvents() {\n          return _loadOfflineEvents.apply(this, arguments);\n        }\n        return loadOfflineEvents;\n      }()\n      /**\n       * Store events offline\n       */\n      )\n    }, {\n      key: \"storeOfflineEvents\",\n      value: (function () {\n        var _storeOfflineEvents = (0, _asyncToGenerator2.default)(function* (events) {\n          try {\n            var existingEvents = yield _asyncStorage.default.getItem(AnalyticsService.OFFLINE_EVENTS_KEY);\n            var allEvents = existingEvents ? JSON.parse(existingEvents) : [];\n            allEvents.push(...events);\n\n            // Limit offline storage\n            var maxOfflineEvents = (0, _analytics.getAnalyticsConfig)().maxOfflineEvents;\n            if (allEvents.length > maxOfflineEvents) {\n              allEvents.splice(0, allEvents.length - maxOfflineEvents);\n            }\n            yield _asyncStorage.default.setItem(AnalyticsService.OFFLINE_EVENTS_KEY, JSON.stringify(allEvents));\n          } catch (error) {\n            _EventLogger.EventLogger.error('Analytics', 'Failed to store offline events', error);\n          }\n        });\n        function storeOfflineEvents(_x5) {\n          return _storeOfflineEvents.apply(this, arguments);\n        }\n        return storeOfflineEvents;\n      }()\n      /**\n       * Send event batch to backend\n       */\n      )\n    }, {\n      key: \"sendEventBatch\",\n      value: (function () {\n        var _sendEventBatch = (0, _asyncToGenerator2.default)(function* (batch) {\n          try {\n            // For now, we'll send each event individually to the existing automation_analytics table\n            // In a real implementation, you'd want a dedicated analytics endpoint\n\n            var promises = batch.events.map(/*#__PURE__*/function () {\n              var _ref = (0, _asyncToGenerator2.default)(function* (event) {\n                var _yield$supabase$from$ = yield _client.supabase.from('app_analytics').insert({\n                    event_name: event.event_name,\n                    properties: event.properties,\n                    user_properties: event.user_properties,\n                    timestamp: event.timestamp,\n                    session_id: event.session_id,\n                    user_id: event.user_id,\n                    anonymous_id: event.anonymous_id,\n                    context: event.context,\n                    batch_id: batch.batch_id\n                  }),\n                  error = _yield$supabase$from$.error;\n                if (error) {\n                  throw error;\n                }\n              });\n              return function (_x7) {\n                return _ref.apply(this, arguments);\n              };\n            }());\n            yield Promise.all(promises);\n          } catch (error) {\n            // Fallback to console logging if backend is unavailable\n            _EventLogger.EventLogger.info('Analytics', 'Batch send failed, events logged locally', {\n              batch_id: batch.batch_id,\n              event_count: batch.events.length,\n              error: error\n            });\n            throw error;\n          }\n        });\n        function sendEventBatch(_x6) {\n          return _sendEventBatch.apply(this, arguments);\n        }\n        return sendEventBatch;\n      }()\n      /**\n       * Check network status\n       */\n      )\n    }, {\n      key: \"checkNetworkStatus\",\n      value: (function () {\n        var _checkNetworkStatus = (0, _asyncToGenerator2.default)(function* () {\n          // In a real implementation, use @react-native-community/netinfo\n          // For now, assume online\n          return true;\n        });\n        function checkNetworkStatus() {\n          return _checkNetworkStatus.apply(this, arguments);\n        }\n        return checkNetworkStatus;\n      }()\n      /**\n       * Generate a session ID\n       */\n      )\n    }, {\n      key: \"generateSessionId\",\n      value: function generateSessionId() {\n        return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n      }\n\n      /**\n       * Generate anonymous ID\n       */\n    }, {\n      key: \"generateAnonymousId\",\n      value: function generateAnonymousId() {\n        return `anon-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n      }\n\n      /**\n       * Generate batch ID\n       */\n    }, {\n      key: \"generateBatchId\",\n      value: function generateBatchId() {\n        return `batch-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n      }\n\n      /**\n       * Legacy method for backward compatibility - Generate a simple session ID\n       */\n    }], [{\n      key: \"getInstance\",\n      value: function getInstance() {\n        if (!AnalyticsService.instance) {\n          AnalyticsService.instance = new AnalyticsService();\n        }\n        return AnalyticsService.instance;\n      }\n    }, {\n      key: \"trackEvent\",\n      value: (function () {\n        var _trackEvent = (0, _asyncToGenerator2.default)(function* (event) {\n          try {\n            var analytics = AnalyticsService.getInstance();\n\n            // Convert legacy event to new format\n            var eventName = `automation_${event.event_type}`;\n            var properties = {\n              automation_id: event.automation_id,\n              event_type: event.event_type,\n              ...event.event_data\n            };\n            analytics.track(eventName, properties);\n\n            // Also maintain legacy database tracking for backward compatibility\n            var _yield$supabase$auth$ = yield _client.supabase.auth.getUser(),\n              user = _yield$supabase$auth$.data.user;\n            var eventData = {\n              automation_id: event.automation_id,\n              event_type: event.event_type,\n              event_data: event.event_data || {},\n              user_id: user?.id || event.user_id,\n              session_id: event.session_id || analytics.generateSessionId(),\n              user_agent: event.user_agent || (typeof navigator !== 'undefined' ? navigator.userAgent : 'Mobile App'),\n              created_at: new Date().toISOString()\n            };\n            var _yield$supabase$from$2 = yield _client.supabase.from('automation_analytics').insert(eventData),\n              error = _yield$supabase$from$2.error;\n            if (error) {\n              _EventLogger.EventLogger.error('Analytics', 'Failed to track legacy analytics event', error);\n              return false;\n            }\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Analytics', 'Legacy analytics tracking error', error);\n            return false;\n          }\n        });\n        function trackEvent(_x8) {\n          return _trackEvent.apply(this, arguments);\n        }\n        return trackEvent;\n      }()\n      /**\n       * Get analytics stats for an automation\n       */\n      )\n    }, {\n      key: \"getAutomationStats\",\n      value: (function () {\n        var _getAutomationStats = (0, _asyncToGenerator2.default)(function* (automationId) {\n          try {\n            // Get basic stats\n            var _yield$supabase$from$3 = yield _client.supabase.from('automation_analytics').select('event_type, user_id, created_at, location_data').eq('automation_id', automationId),\n              analytics = _yield$supabase$from$3.data,\n              error = _yield$supabase$from$3.error;\n            if (error) throw error;\n\n            // Process the data\n            var stats = {\n              views: analytics?.filter(a => a.event_type === 'view').length || 0,\n              executions: analytics?.filter(a => a.event_type === 'execution').length || 0,\n              shares: analytics?.filter(a => a.event_type === 'share').length || 0,\n              downloads: analytics?.filter(a => a.event_type === 'download').length || 0,\n              likes: analytics?.filter(a => a.event_type === 'like').length || 0,\n              comments: analytics?.filter(a => a.event_type === 'comment').length || 0,\n              unique_users: new Set(analytics?.map(a => a.user_id).filter(Boolean)).size || 0,\n              last_activity: analytics?.length ? analytics[analytics.length - 1].created_at : null,\n              daily_stats: this.generateDailyStats(analytics || []),\n              top_countries: this.generateCountryStats(analytics || [])\n            };\n            return stats;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Analytics', 'Failed to get analytics stats:', error);\n            return {\n              views: 0,\n              executions: 0,\n              shares: 0,\n              downloads: 0,\n              likes: 0,\n              comments: 0,\n              unique_users: 0,\n              last_activity: null,\n              daily_stats: [],\n              top_countries: []\n            };\n          }\n        });\n        function getAutomationStats(_x9) {\n          return _getAutomationStats.apply(this, arguments);\n        }\n        return getAutomationStats;\n      }()\n      /**\n       * Track automation view\n       */\n      )\n    }, {\n      key: \"trackView\",\n      value: (function () {\n        var _trackView = (0, _asyncToGenerator2.default)(function* (automationId, metadata) {\n          yield this.trackEvent({\n            automation_id: automationId,\n            event_type: 'view',\n            event_data: metadata\n          });\n        });\n        function trackView(_x0, _x1) {\n          return _trackView.apply(this, arguments);\n        }\n        return trackView;\n      }()\n      /**\n       * Track automation execution\n       */\n      )\n    }, {\n      key: \"trackExecution\",\n      value: (function () {\n        var _trackExecution = (0, _asyncToGenerator2.default)(function* (automationId, result) {\n          yield this.trackEvent({\n            automation_id: automationId,\n            event_type: 'execution',\n            event_data: {\n              success: result.success,\n              execution_time: result.executionTime,\n              steps_completed: result.stepsCompleted,\n              total_steps: result.totalSteps\n            }\n          });\n        });\n        function trackExecution(_x10, _x11) {\n          return _trackExecution.apply(this, arguments);\n        }\n        return trackExecution;\n      }()\n      /**\n       * Track automation share\n       */\n      )\n    }, {\n      key: \"trackShare\",\n      value: (function () {\n        var _trackShare = (0, _asyncToGenerator2.default)(function* (automationId, shareMethod) {\n          yield this.trackEvent({\n            automation_id: automationId,\n            event_type: 'share',\n            event_data: {\n              method: shareMethod\n            }\n          });\n        });\n        function trackShare(_x12, _x13) {\n          return _trackShare.apply(this, arguments);\n        }\n        return trackShare;\n      }())\n    }, {\n      key: \"generateSessionId\",\n      value: function generateSessionId() {\n        return Date.now().toString(36) + Math.random().toString(36).substr(2);\n      }\n\n      /**\n       * Generate daily stats from analytics data\n       */\n    }, {\n      key: \"generateDailyStats\",\n      value: function generateDailyStats(analytics) {\n        var daily = {};\n        analytics.forEach(event => {\n          var date = new Date(event.created_at).toISOString().split('T')[0];\n          if (!daily[date]) {\n            daily[date] = {\n              views: 0,\n              executions: 0,\n              shares: 0\n            };\n          }\n          if (event.event_type === 'view') daily[date].views++;\n          if (event.event_type === 'execution') daily[date].executions++;\n          if (event.event_type === 'share') daily[date].shares++;\n        });\n        return Object.entries(daily).map(_ref2 => {\n          var _ref3 = (0, _slicedToArray2.default)(_ref2, 2),\n            date = _ref3[0],\n            stats = _ref3[1];\n          return {\n            date,\n            ...stats\n          };\n        }).sort((a, b) => a.date.localeCompare(b.date)).slice(-30); // Last 30 days\n      }\n\n      /**\n       * Generate country stats from location data\n       */\n    }, {\n      key: \"generateCountryStats\",\n      value: function generateCountryStats(analytics) {\n        var countries = {};\n        analytics.forEach(event => {\n          var country = event.location_data?.country || 'Unknown';\n          countries[country] = (countries[country] || 0) + 1;\n        });\n        return Object.entries(countries).map(_ref4 => {\n          var _ref5 = (0, _slicedToArray2.default)(_ref4, 2),\n            country = _ref5[0],\n            count = _ref5[1];\n          return {\n            country,\n            count\n          };\n        }).sort((a, b) => b.count - a.count).slice(0, 10); // Top 10 countries\n      }\n\n      /**\n       * Get popular automations based on analytics\n       */\n    }, {\n      key: \"getPopularAutomations\",\n      value: (function () {\n        var _getPopularAutomations = (0, _asyncToGenerator2.default)(function* () {\n          var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n          try {\n            var _yield$supabase$from$4 = yield _client.supabase.from('automation_stats_detailed').select('*').order('view_count', {\n                ascending: false\n              }).limit(limit),\n              data = _yield$supabase$from$4.data,\n              error = _yield$supabase$from$4.error;\n            if (error) throw error;\n            return data || [];\n          } catch (error) {\n            _EventLogger.EventLogger.error('Analytics', 'Failed to get popular automations:', error);\n            return [];\n          }\n        });\n        function getPopularAutomations() {\n          return _getPopularAutomations.apply(this, arguments);\n        }\n        return getPopularAutomations;\n      }())\n    }]);\n  }();\n  // Storage keys\n  AnalyticsService.CONSENT_KEY = 'analytics_consent';\n  AnalyticsService.USER_ID_KEY = 'analytics_user_id';\n  AnalyticsService.ANONYMOUS_ID_KEY = 'analytics_anonymous_id';\n  AnalyticsService.SESSION_ID_KEY = 'analytics_session_id';\n  AnalyticsService.USER_PROPERTIES_KEY = 'analytics_user_properties';\n  AnalyticsService.OFFLINE_EVENTS_KEY = 'analytics_offline_events';\n});","lineCount":922,"map":[[11,2,1,0],[11,6,1,0,"_asyncStorage"],[11,19,1,0],[11,22,1,0,"_interopRequireDefault"],[11,44,1,0],[11,45,1,0,"require"],[11,52,1,0],[11,53,1,0,"_dependencyMap"],[11,67,1,0],[12,2,2,0],[12,6,2,0,"_reactNative"],[12,18,2,0],[12,21,2,0,"require"],[12,28,2,0],[12,29,2,0,"_dependencyMap"],[12,43,2,0],[13,2,3,0],[13,6,3,0,"_client"],[13,13,3,0],[13,16,3,0,"require"],[13,23,3,0],[13,24,3,0,"_dependencyMap"],[13,38,3,0],[14,2,4,0],[14,6,4,0,"_analytics"],[14,16,4,0],[14,19,4,0,"require"],[14,26,4,0],[14,27,4,0,"_dependencyMap"],[14,41,4,0],[15,2,13,0],[15,6,13,0,"_EventLogger"],[15,18,13,0],[15,21,13,0,"require"],[15,28,13,0],[15,29,13,0,"_dependencyMap"],[15,43,13,0],[16,2,15,0],[17,2,27,0],[18,2,27,0],[18,6,123,13,"AnalyticsService"],[18,22,123,29],[18,25,123,29,"exports"],[18,32,123,29],[18,33,123,29,"AnalyticsService"],[18,49,123,29],[19,4,141,2],[19,13,141,2,"AnalyticsService"],[19,30,141,2],[19,32,141,24],[20,6,141,24],[20,10,141,24,"_classCallCheck2"],[20,26,141,24],[20,27,141,24,"default"],[20,34,141,24],[20,42,141,24,"AnalyticsService"],[20,58,141,24],[21,6,141,24],[21,11,126,10,"eventQueue"],[21,21,126,20],[21,24,126,49],[21,26,126,51],[22,6,126,51],[22,11,127,10,"isInitialized"],[22,24,127,23],[22,27,127,26],[22,32,127,31],[23,6,127,31],[23,11,128,10,"isFlushing"],[23,21,128,20],[23,24,128,23],[23,29,128,28],[24,6,128,28],[24,11,129,10,"sessionStartTime"],[24,27,129,26],[24,30,129,29,"Date"],[24,34,129,33],[24,35,129,34,"now"],[24,38,129,37],[24,39,129,38],[24,40,129,39],[25,6,129,39],[25,11,130,10,"lastActivityTime"],[25,27,130,26],[25,30,130,29,"Date"],[25,34,130,33],[25,35,130,34,"now"],[25,38,130,37],[25,39,130,38],[25,40,130,39],[26,6,142,4],[26,10,142,8],[26,11,142,9,"config"],[26,17,142,15],[26,20,142,18],[27,8,143,6,"enabled"],[27,15,143,13],[27,17,143,15],[27,21,143,15,"getAnalyticsConfig"],[27,50,143,33],[27,52,143,34],[27,53,143,35],[27,54,143,36,"enabled"],[27,61,143,43],[28,8,144,6,"hasConsent"],[28,18,144,16],[28,20,144,18],[29,6,145,4],[29,7,145,5],[30,4,146,2],[32,4,148,2],[33,0,149,0],[34,0,150,0],[35,4,148,2],[35,15,148,2,"_createClass2"],[35,28,148,2],[35,29,148,2,"default"],[35,36,148,2],[35,38,148,2,"AnalyticsService"],[35,54,148,2],[36,6,148,2,"key"],[36,9,148,2],[37,6,148,2,"value"],[37,11,148,2],[38,6,158,2],[39,0,159,0],[40,0,160,0],[41,6,158,2],[42,8,158,2],[42,12,158,2,"_initialize"],[42,23,158,2],[42,30,158,2,"_asyncToGenerator2"],[42,48,158,2],[42,49,158,2,"default"],[42,56,158,2],[42,58,161,2],[42,71,166,25],[43,10,166,25],[43,14,161,26,"options"],[43,21,166,3],[43,24,166,3,"arguments"],[43,33,166,3],[43,34,166,3,"length"],[43,40,166,3],[43,48,166,3,"arguments"],[43,57,166,3],[43,65,166,3,"undefined"],[43,74,166,3],[43,77,166,3,"arguments"],[43,86,166,3],[43,92,166,6],[43,93,166,7],[43,94,166,8],[44,10,167,4],[44,14,167,8],[45,12,168,6,"EventLogger"],[45,36,168,17],[45,37,168,18,"info"],[45,41,168,22],[45,42,168,23],[45,53,168,34],[45,55,168,36],[45,87,168,68],[45,89,168,70,"options"],[45,96,168,77],[45,97,168,78],[47,12,170,6],[48,12,171,6],[48,16,171,10],[48,17,171,11,"loadPersistedData"],[48,34,171,28],[48,35,171,29],[48,36,171,30],[48,37,171,31,"catch"],[48,42,171,36],[48,43,171,37,"error"],[48,48,171,42],[48,52,171,46],[49,14,172,8,"EventLogger"],[49,38,172,19],[49,39,172,20,"warn"],[49,43,172,24],[49,44,172,25],[49,55,172,36],[49,57,172,38],[49,114,172,95],[49,116,172,97,"error"],[49,121,172,102],[49,122,172,103],[50,12,173,6],[50,13,173,7],[50,14,173,8],[52,12,175,6],[53,12,176,6],[53,16,176,10],[53,17,176,11],[53,21,176,15],[53,22,176,16,"config"],[53,28,176,22],[53,29,176,23,"sessionId"],[53,38,176,32],[53,40,176,34],[54,14,177,8],[54,18,177,12],[54,19,177,13,"config"],[54,25,177,19],[54,26,177,20,"sessionId"],[54,35,177,29],[54,38,177,32],[54,42,177,36],[54,43,177,37,"generateSessionId"],[54,60,177,54],[54,61,177,55],[54,62,177,56],[55,14,178,8],[55,20,178,14,"AsyncStorage"],[55,41,178,26],[55,42,178,27,"setItem"],[55,49,178,34],[55,50,178,35,"AnalyticsService"],[55,66,178,51],[55,67,178,52,"SESSION_ID_KEY"],[55,81,178,66],[55,83,178,68],[55,87,178,72],[55,88,178,73,"config"],[55,94,178,79],[55,95,178,80,"sessionId"],[55,104,178,89],[55,105,178,90],[56,12,179,6],[58,12,181,6],[59,12,182,6],[59,16,182,10],[59,17,182,11],[59,21,182,15],[59,22,182,16,"config"],[59,28,182,22],[59,29,182,23,"anonymousId"],[59,40,182,34],[59,42,182,36],[60,14,183,8],[60,18,183,12],[60,19,183,13,"config"],[60,25,183,19],[60,26,183,20,"anonymousId"],[60,37,183,31],[60,40,183,34],[60,44,183,38],[60,45,183,39,"generateAnonymousId"],[60,64,183,58],[60,65,183,59],[60,66,183,60],[61,14,184,8],[61,20,184,14,"AsyncStorage"],[61,41,184,26],[61,42,184,27,"setItem"],[61,49,184,34],[61,50,184,35,"AnalyticsService"],[61,66,184,51],[61,67,184,52,"ANONYMOUS_ID_KEY"],[61,83,184,68],[61,85,184,70],[61,89,184,74],[61,90,184,75,"config"],[61,96,184,81],[61,97,184,82,"anonymousId"],[61,108,184,93],[61,109,184,94],[62,12,185,6],[64,12,187,6],[65,12,188,6],[65,16,188,10],[65,17,188,11,"setupPeriodicFlush"],[65,35,188,29],[65,36,188,30],[65,37,188,31],[67,12,190,6],[68,12,191,6],[68,16,191,10],[68,17,191,11,"setupSessionManagement"],[68,39,191,33],[68,40,191,34],[68,41,191,35],[70,12,193,6],[71,12,194,6],[71,18,194,12],[71,22,194,16],[71,23,194,17,"loadOfflineEvents"],[71,40,194,34],[71,41,194,35],[71,42,194,36],[72,12,196,6],[72,16,196,10],[72,17,196,11,"isInitialized"],[72,30,196,24],[72,33,196,27],[72,37,196,31],[73,12,197,6,"EventLogger"],[73,36,197,17],[73,37,197,18,"info"],[73,41,197,22],[73,42,197,23],[73,53,197,34],[73,55,197,36],[73,99,197,80],[73,100,197,81],[75,12,199,6],[76,12,200,6],[76,16,200,10],[76,17,200,11,"track"],[76,22,200,16],[76,23,200,17,"ANALYTICS_EVENTS"],[76,50,200,33],[76,51,200,34,"APP_OPENED"],[76,61,200,44],[76,63,200,46],[77,14,201,8,"session_id"],[77,24,201,18],[77,26,201,20],[77,30,201,24],[77,31,201,25,"config"],[77,37,201,31],[77,38,201,32,"sessionId"],[77,47,201,41],[78,14,202,8,"is_first_launch"],[78,29,202,23],[78,31,202,25],[78,32,202,26],[78,36,202,30],[78,37,202,31,"config"],[78,43,202,37],[78,44,202,38,"userId"],[79,12,203,6],[79,13,203,7],[79,14,203,8],[80,10,205,4],[80,11,205,5],[80,12,205,6],[80,19,205,13,"error"],[80,24,205,18],[80,26,205,20],[81,12,206,6,"EventLogger"],[81,36,206,17],[81,37,206,18,"error"],[81,42,206,23],[81,43,206,24],[81,54,206,35],[81,56,206,37],[81,88,206,69],[81,90,206,71,"error"],[81,95,206,85],[81,96,206,86],[82,10,207,4],[83,8,208,2],[83,9,208,3],[84,8,208,3],[84,17,161,15,"initialize"],[84,27,161,25,"initialize"],[84,28,161,25],[85,10,161,25],[85,17,161,25,"_initialize"],[85,28,161,25],[85,29,161,25,"apply"],[85,34,161,25],[85,41,161,25,"arguments"],[85,50,161,25],[86,8,161,25],[87,8,161,25],[87,15,161,15,"initialize"],[87,25,161,25],[88,6,161,25],[89,6,210,2],[90,0,211,0],[91,0,212,0],[92,6,210,2],[93,4,210,2],[94,6,210,2,"key"],[94,9,210,2],[95,6,210,2,"value"],[95,11,210,2],[96,8,210,2],[96,12,210,2,"_setConsent"],[96,23,210,2],[96,30,210,2,"_asyncToGenerator2"],[96,48,210,2],[96,49,210,2,"default"],[96,56,210,2],[96,58,213,2],[96,69,213,26,"consent"],[96,76,213,59],[96,78,213,76],[97,10,214,4],[97,14,214,8],[97,15,214,9,"consentSettings"],[97,30,214,24],[97,33,214,27],[98,12,215,6,"analytics"],[98,21,215,15],[98,23,215,17,"consent"],[98,30,215,24],[98,31,215,25,"analytics"],[98,40,215,34],[98,44,215,38],[98,49,215,43],[99,12,216,6,"performance"],[99,23,216,17],[99,25,216,19,"consent"],[99,32,216,26],[99,33,216,27,"performance"],[99,44,216,38],[99,48,216,42],[99,53,216,47],[100,12,217,6,"marketing"],[100,21,217,15],[100,23,217,17,"consent"],[100,30,217,24],[100,31,217,25,"marketing"],[100,40,217,34],[100,44,217,38],[100,49,217,43],[101,12,218,6,"functional"],[101,22,218,16],[101,24,218,18,"consent"],[101,31,218,25],[101,32,218,26,"functional"],[101,42,218,36],[101,46,218,40],[101,50,218,44],[102,12,218,46],[103,12,219,6,"timestamp"],[103,21,219,15],[103,23,219,17],[103,27,219,21,"Date"],[103,31,219,25],[103,32,219,26],[103,33,219,27],[103,34,219,28,"toISOString"],[103,45,219,39],[103,46,219,40],[104,10,220,4],[104,11,220,5],[105,10,222,4],[105,14,222,8],[105,15,222,9,"config"],[105,21,222,15],[105,22,222,16,"hasConsent"],[105,32,222,26],[105,35,222,29],[105,39,222,33],[105,40,222,34,"consentSettings"],[105,55,222,49],[105,56,222,50,"analytics"],[105,65,222,59],[106,10,224,4],[106,16,224,10,"AsyncStorage"],[106,37,224,22],[106,38,224,23,"setItem"],[106,45,224,30],[106,46,225,6,"AnalyticsService"],[106,62,225,22],[106,63,225,23,"CONSENT_KEY"],[106,74,225,34],[106,76,226,6,"JSON"],[106,80,226,10],[106,81,226,11,"stringify"],[106,90,226,20],[106,91,226,21],[106,95,226,25],[106,96,226,26,"consentSettings"],[106,111,226,41],[106,112,227,4],[106,113,227,5],[107,10,229,4,"EventLogger"],[107,34,229,15],[107,35,229,16,"info"],[107,39,229,20],[107,40,229,21],[107,51,229,32],[107,53,229,34],[107,75,229,56],[107,77,229,58],[107,81,229,62],[107,82,229,63,"consentSettings"],[107,97,229,78],[107,98,229,79],[109,10,231,4],[110,10,232,4],[110,14,232,8],[110,18,232,12],[110,19,232,13,"consentSettings"],[110,34,232,28],[110,35,232,29,"analytics"],[110,44,232,38],[110,46,232,40],[111,12,233,6],[111,16,233,10],[111,17,233,11,"track"],[111,22,233,16],[111,23,233,17],[111,38,233,32],[111,40,233,34],[112,14,234,8,"consent_types"],[112,27,234,21],[112,29,234,23,"Object"],[112,35,234,29],[112,36,234,30,"keys"],[112,40,234,34],[112,41,234,35,"consent"],[112,48,234,42],[113,12,235,6],[113,13,235,7],[113,14,235,8],[114,10,236,4],[115,8,237,2],[115,9,237,3],[116,8,237,3],[116,17,213,15,"setConsent"],[116,27,213,25,"setConsent"],[116,28,213,25,"_x"],[116,30,213,25],[117,10,213,25],[117,17,213,25,"_setConsent"],[117,28,213,25],[117,29,213,25,"apply"],[117,34,213,25],[117,41,213,25,"arguments"],[117,50,213,25],[118,8,213,25],[119,8,213,25],[119,15,213,15,"setConsent"],[119,25,213,25],[120,6,213,25],[121,6,239,2],[122,0,240,0],[123,0,241,0],[124,6,239,2],[125,4,239,2],[126,6,239,2,"key"],[126,9,239,2],[127,6,239,2,"value"],[127,11,239,2],[128,8,239,2],[128,12,239,2,"_identify"],[128,21,239,2],[128,28,239,2,"_asyncToGenerator2"],[128,46,239,2],[128,47,239,2,"default"],[128,54,239,2],[128,56,242,2],[128,67,242,24,"userId"],[128,73,242,38],[128,75,242,40,"properties"],[128,85,242,67],[128,87,242,84],[129,10,243,4],[129,14,243,8],[129,15,243,9],[129,19,243,13],[129,20,243,14,"hasConsent"],[129,30,243,24],[129,31,243,25],[129,32,243,26],[129,34,243,28],[130,10,245,4],[130,14,245,8],[130,15,245,9,"config"],[130,21,245,15],[130,22,245,16,"userId"],[130,28,245,22],[130,31,245,25,"userId"],[130,37,245,31],[131,10,246,4],[131,14,246,8],[131,15,246,9,"config"],[131,21,246,15],[131,22,246,16,"userProperties"],[131,36,246,30],[131,39,246,33],[132,12,246,35],[132,15,246,38],[132,19,246,42],[132,20,246,43,"config"],[132,26,246,49],[132,27,246,50,"userProperties"],[132,41,246,64],[133,12,246,66],[133,15,246,69,"properties"],[133,25,246,79],[134,12,246,81,"user_id"],[134,19,246,88],[134,21,246,90,"userId"],[135,10,246,97],[135,11,246,98],[136,10,248,4],[136,16,248,10,"AsyncStorage"],[136,37,248,22],[136,38,248,23,"setItem"],[136,45,248,30],[136,46,248,31,"AnalyticsService"],[136,62,248,47],[136,63,248,48,"USER_ID_KEY"],[136,74,248,59],[136,76,248,61,"userId"],[136,82,248,67],[136,83,248,68],[137,10,249,4],[137,16,249,10,"AsyncStorage"],[137,37,249,22],[137,38,249,23,"setItem"],[137,45,249,30],[137,46,250,6,"AnalyticsService"],[137,62,250,22],[137,63,250,23,"USER_PROPERTIES_KEY"],[137,82,250,42],[137,84,251,6,"JSON"],[137,88,251,10],[137,89,251,11,"stringify"],[137,98,251,20],[137,99,251,21],[137,103,251,25],[137,104,251,26,"config"],[137,110,251,32],[137,111,251,33,"userProperties"],[137,125,251,47],[137,126,252,4],[137,127,252,5],[138,10,254,4,"EventLogger"],[138,34,254,15],[138,35,254,16,"info"],[138,39,254,20],[138,40,254,21],[138,51,254,32],[138,53,254,34],[138,70,254,51],[138,72,254,53],[139,12,254,55,"userId"],[139,18,254,61],[140,12,254,63,"properties"],[141,10,254,74],[141,11,254,75],[141,12,254,76],[143,10,256,4],[144,10,257,4],[144,14,257,8],[144,15,257,9,"track"],[144,20,257,14],[144,21,257,15,"ANALYTICS_EVENTS"],[144,48,257,31],[144,49,257,32,"USER_LOGGED_IN"],[144,63,257,46],[144,65,257,48],[145,12,258,6,"user_id"],[145,19,258,13],[145,21,258,15,"userId"],[145,27,258,21],[146,12,259,6],[146,15,259,9,"properties"],[147,10,260,4],[147,11,260,5],[147,12,260,6],[148,8,261,2],[148,9,261,3],[149,8,261,3],[149,17,242,15,"identify"],[149,25,242,23,"identify"],[149,26,242,23,"_x2"],[149,29,242,23],[149,31,242,23,"_x3"],[149,34,242,23],[150,10,242,23],[150,17,242,23,"_identify"],[150,26,242,23],[150,27,242,23,"apply"],[150,32,242,23],[150,39,242,23,"arguments"],[150,48,242,23],[151,8,242,23],[152,8,242,23],[152,15,242,15,"identify"],[152,23,242,23],[153,6,242,23],[154,6,263,2],[155,0,264,0],[156,0,265,0],[157,6,263,2],[158,4,263,2],[159,6,263,2,"key"],[159,9,263,2],[160,6,263,2,"value"],[160,11,263,2],[161,8,263,2],[161,12,263,2,"_reset"],[161,18,263,2],[161,25,263,2,"_asyncToGenerator2"],[161,43,263,2],[161,44,263,2,"default"],[161,51,263,2],[161,53,266,2],[161,66,266,38],[162,10,267,4],[162,14,267,10,"oldUserId"],[162,23,267,19],[162,26,267,22],[162,30,267,26],[162,31,267,27,"config"],[162,37,267,33],[162,38,267,34,"userId"],[162,44,267,40],[163,10,269,4],[163,14,269,8],[163,15,269,9,"config"],[163,21,269,15],[163,22,269,16,"userId"],[163,28,269,22],[163,31,269,25,"undefined"],[163,40,269,34],[164,10,270,4],[164,14,270,8],[164,15,270,9,"config"],[164,21,270,15],[164,22,270,16,"userProperties"],[164,36,270,30],[164,39,270,33],[164,40,270,34],[164,41,270,35],[165,10,271,4],[165,14,271,8],[165,15,271,9,"config"],[165,21,271,15],[165,22,271,16,"sessionId"],[165,31,271,25],[165,34,271,28],[165,38,271,32],[165,39,271,33,"generateSessionId"],[165,56,271,50],[165,57,271,51],[165,58,271,52],[166,10,273,4],[166,16,273,10,"AsyncStorage"],[166,37,273,22],[166,38,273,23,"multiRemove"],[166,49,273,34],[166,50,273,35],[166,51,274,6,"AnalyticsService"],[166,67,274,22],[166,68,274,23,"USER_ID_KEY"],[166,79,274,34],[166,81,275,6,"AnalyticsService"],[166,97,275,22],[166,98,275,23,"USER_PROPERTIES_KEY"],[166,117,275,42],[166,119,276,6,"AnalyticsService"],[166,135,276,22],[166,136,276,23,"SESSION_ID_KEY"],[166,150,276,37],[166,151,277,5],[166,152,277,6],[167,10,278,4],[167,16,278,10,"AsyncStorage"],[167,37,278,22],[167,38,278,23,"setItem"],[167,45,278,30],[167,46,278,31,"AnalyticsService"],[167,62,278,47],[167,63,278,48,"SESSION_ID_KEY"],[167,77,278,62],[167,79,278,64],[167,83,278,68],[167,84,278,69,"config"],[167,90,278,75],[167,91,278,76,"sessionId"],[167,100,278,85],[167,101,278,86],[168,10,280,4,"EventLogger"],[168,34,280,15],[168,35,280,16,"info"],[168,39,280,20],[168,40,280,21],[168,51,280,32],[168,53,280,34],[168,73,280,54],[168,75,280,56],[169,12,280,58,"oldUserId"],[170,10,280,68],[170,11,280,69],[170,12,280,70],[171,10,282,4],[171,14,282,8,"oldUserId"],[171,23,282,17],[171,27,282,21],[171,31,282,25],[171,32,282,26,"hasConsent"],[171,42,282,36],[171,43,282,37],[171,44,282,38],[171,46,282,40],[172,12,283,6],[172,16,283,10],[172,17,283,11,"track"],[172,22,283,16],[172,23,283,17,"ANALYTICS_EVENTS"],[172,50,283,33],[172,51,283,34,"USER_LOGGED_OUT"],[172,66,283,49],[172,68,283,51],[173,14,284,8,"previous_user_id"],[173,30,284,24],[173,32,284,26,"oldUserId"],[174,12,285,6],[174,13,285,7],[174,14,285,8],[175,10,286,4],[176,8,287,2],[176,9,287,3],[177,8,287,3],[177,17,266,15,"reset"],[177,22,266,20,"reset"],[177,23,266,20],[178,10,266,20],[178,17,266,20,"_reset"],[178,23,266,20],[178,24,266,20,"apply"],[178,29,266,20],[178,36,266,20,"arguments"],[178,45,266,20],[179,8,266,20],[180,8,266,20],[180,15,266,15,"reset"],[180,20,266,20],[181,6,266,20],[182,6,289,2],[183,0,290,0],[184,0,291,0],[185,6,289,2],[186,4,289,2],[187,6,289,2,"key"],[187,9,289,2],[188,6,289,2,"value"],[188,11,289,2],[189,8,289,2],[189,12,289,2,"_setUserProperties"],[189,30,289,2],[189,37,289,2,"_asyncToGenerator2"],[189,55,289,2],[189,56,289,2,"default"],[189,63,289,2],[189,65,292,2],[189,76,292,33,"properties"],[189,86,292,59],[189,88,292,76],[190,10,293,4],[190,14,293,8],[190,15,293,9],[190,19,293,13],[190,20,293,14,"hasConsent"],[190,30,293,24],[190,31,293,25],[190,32,293,26],[190,34,293,28],[191,10,295,4],[191,14,295,8],[191,15,295,9,"config"],[191,21,295,15],[191,22,295,16,"userProperties"],[191,36,295,30],[191,39,295,33],[192,12,295,35],[192,15,295,38],[192,19,295,42],[192,20,295,43,"config"],[192,26,295,49],[192,27,295,50,"userProperties"],[192,41,295,64],[193,12,295,66],[193,15,295,69,"properties"],[194,10,295,80],[194,11,295,81],[195,10,297,4],[195,16,297,10,"AsyncStorage"],[195,37,297,22],[195,38,297,23,"setItem"],[195,45,297,30],[195,46,298,6,"AnalyticsService"],[195,62,298,22],[195,63,298,23,"USER_PROPERTIES_KEY"],[195,82,298,42],[195,84,299,6,"JSON"],[195,88,299,10],[195,89,299,11,"stringify"],[195,98,299,20],[195,99,299,21],[195,103,299,25],[195,104,299,26,"config"],[195,110,299,32],[195,111,299,33,"userProperties"],[195,125,299,47],[195,126,300,4],[195,127,300,5],[196,10,302,4,"EventLogger"],[196,34,302,15],[196,35,302,16,"info"],[196,39,302,20],[196,40,302,21],[196,51,302,32],[196,53,302,34],[196,78,302,59],[196,80,302,61,"properties"],[196,90,302,71],[196,91,302,72],[197,8,303,2],[197,9,303,3],[198,8,303,3],[198,17,292,15,"setUserProperties"],[198,34,292,32,"setUserProperties"],[198,35,292,32,"_x4"],[198,38,292,32],[199,10,292,32],[199,17,292,32,"_setUserProperties"],[199,35,292,32],[199,36,292,32,"apply"],[199,41,292,32],[199,48,292,32,"arguments"],[199,57,292,32],[200,8,292,32],[201,8,292,32],[201,15,292,15,"setUserProperties"],[201,32,292,32],[202,6,292,32],[203,6,305,2],[204,0,306,0],[205,0,307,0],[206,6,305,2],[207,4,305,2],[208,6,305,2,"key"],[208,9,305,2],[209,6,305,2,"value"],[209,11,305,2],[209,13,308,2],[209,22,308,9,"track"],[209,27,308,14,"track"],[209,28,308,15,"eventName"],[209,37,308,32],[209,39,308,34,"properties"],[209,49,308,66],[209,51,308,74],[210,8,309,4],[210,12,309,8],[210,13,309,9],[210,17,309,13],[210,18,309,14,"shouldTrackEvent"],[210,34,309,30],[210,35,309,31,"eventName"],[210,44,309,40],[210,45,309,41],[210,47,309,43],[211,10,310,6],[212,8,311,4],[213,8,313,4],[213,12,313,8],[214,10,314,6],[214,14,314,12,"event"],[214,19,314,41],[214,22,314,44],[215,12,315,8,"event_name"],[215,22,315,18],[215,24,315,20,"eventName"],[215,33,315,29],[216,12,316,8,"properties"],[216,22,316,18],[216,24,316,20],[216,28,316,24],[216,29,316,25,"enrichProperties"],[216,45,316,41],[216,46,316,42,"properties"],[216,56,316,52],[216,57,316,53],[217,12,317,8,"user_properties"],[217,27,317,23],[217,29,317,25],[217,33,317,29],[217,34,317,30,"config"],[217,40,317,36],[217,41,317,37,"userProperties"],[217,55,317,51],[218,12,318,8,"timestamp"],[218,21,318,17],[218,23,318,19],[218,27,318,23,"Date"],[218,31,318,27],[218,32,318,28],[218,33,318,29],[218,34,318,30,"toISOString"],[218,45,318,41],[218,46,318,42],[218,47,318,43],[219,12,319,8,"session_id"],[219,22,319,18],[219,24,319,20],[219,28,319,24],[219,29,319,25,"config"],[219,35,319,31],[219,36,319,32,"sessionId"],[219,45,319,41],[220,12,320,8,"user_id"],[220,19,320,15],[220,21,320,17],[220,25,320,21],[220,26,320,22,"config"],[220,32,320,28],[220,33,320,29,"userId"],[220,39,320,35],[221,12,321,8,"anonymous_id"],[221,24,321,20],[221,26,321,22],[221,30,321,26],[221,31,321,27,"config"],[221,37,321,33],[221,38,321,34,"anonymousId"],[221,49,321,45],[222,12,322,8,"context"],[222,19,322,15],[222,21,322,17],[222,25,322,21],[222,26,322,22,"buildContext"],[222,38,322,34],[222,39,322,35],[223,10,323,6],[223,11,323,7],[224,10,325,6],[224,14,325,10],[224,15,325,11,"eventQueue"],[224,25,325,21],[224,26,325,22,"push"],[224,30,325,26],[224,31,325,27,"event"],[224,36,325,32],[224,37,325,33],[225,10,326,6],[225,14,326,10],[225,15,326,11,"lastActivityTime"],[225,31,326,27],[225,34,326,30,"Date"],[225,38,326,34],[225,39,326,35,"now"],[225,42,326,38],[225,43,326,39],[225,44,326,40],[226,10,328,6,"EventLogger"],[226,34,328,17],[226,35,328,18,"analyticsEvent"],[226,49,328,32],[226,50,328,33,"eventName"],[226,59,328,42],[226,61,328,44,"properties"],[226,71,328,54],[226,72,328,55],[228,10,330,6],[229,10,331,6],[229,14,331,10],[229,18,331,14],[229,19,331,15,"eventQueue"],[229,29,331,25],[229,30,331,26,"length"],[229,36,331,32],[229,40,331,36],[229,44,331,36,"getAnalyticsConfig"],[229,73,331,54],[229,75,331,55],[229,76,331,56],[229,77,331,57,"batchSize"],[229,86,331,66],[229,88,331,68],[230,12,332,8],[230,16,332,12],[230,17,332,13,"flush"],[230,22,332,18],[230,23,332,19],[230,24,332,20],[231,10,333,6],[232,8,334,4],[232,9,334,5],[232,10,334,6],[232,17,334,13,"error"],[232,22,334,18],[232,24,334,20],[233,10,335,6,"EventLogger"],[233,34,335,17],[233,35,335,18,"error"],[233,40,335,23],[233,41,335,24],[233,52,335,35],[233,54,335,37],[233,77,335,60],[233,79,335,62,"error"],[233,84,335,67],[233,86,335,78],[234,12,335,80,"eventName"],[234,21,335,89],[235,12,335,91,"properties"],[236,10,335,102],[236,11,335,103],[236,12,335,104],[237,8,336,4],[238,6,337,2],[240,6,339,2],[241,0,340,0],[242,0,341,0],[243,4,339,2],[244,6,339,2,"key"],[244,9,339,2],[245,6,339,2,"value"],[245,11,339,2],[245,13,342,2],[245,22,342,9,"trackScreen"],[245,33,342,20,"trackScreen"],[245,34,342,21,"screenName"],[245,44,342,39],[245,46,342,41,"properties"],[245,56,342,73],[245,58,342,81],[246,8,343,4],[246,12,343,8],[246,13,343,9,"track"],[246,18,343,14],[246,19,343,15,"ANALYTICS_EVENTS"],[246,46,343,31],[246,47,343,32,"SCREEN_VIEWED"],[246,60,343,45],[246,62,343,47],[247,10,344,6,"screen_name"],[247,21,344,17],[247,23,344,19,"screenName"],[247,33,344,29],[248,10,345,6],[248,13,345,9,"properties"],[249,8,346,4],[249,9,346,5],[249,10,346,6],[250,6,347,2],[252,6,349,2],[253,0,350,0],[254,0,351,0],[255,4,349,2],[256,6,349,2,"key"],[256,9,349,2],[257,6,349,2,"value"],[257,11,349,2],[257,13,352,2],[257,22,352,9,"time"],[257,26,352,13,"time"],[257,27,352,17,"operation"],[257,36,352,34],[257,38,352,36,"fn"],[257,40,352,56],[257,42,352,70],[258,8,353,4],[258,12,353,10,"startTime"],[258,21,353,19],[258,24,353,22,"Date"],[258,28,353,26],[258,29,353,27,"now"],[258,32,353,30],[258,33,353,31],[258,34,353,32],[259,8,355,4],[259,15,355,11,"fn"],[259,17,355,13],[259,18,355,14],[259,19,355,15],[259,20,355,16,"finally"],[259,27,355,23],[259,28,355,24],[259,34,355,30],[260,10,356,6],[260,14,356,12,"duration"],[260,22,356,20],[260,25,356,23,"Date"],[260,29,356,27],[260,30,356,28,"now"],[260,33,356,31],[260,34,356,32],[260,35,356,33],[260,38,356,36,"startTime"],[260,47,356,45],[261,10,357,6],[261,14,357,10],[261,15,357,11,"track"],[261,20,357,16],[261,21,357,17],[261,38,357,34],[261,40,357,36],[262,12,358,8,"operation"],[262,21,358,17],[263,12,359,8,"duration"],[264,10,360,6],[264,11,360,7],[264,12,360,8],[265,8,361,4],[265,9,361,5],[265,10,361,6],[266,6,362,2],[268,6,364,2],[269,0,365,0],[270,0,366,0],[271,4,364,2],[272,6,364,2,"key"],[272,9,364,2],[273,6,364,2,"value"],[273,11,364,2],[273,13,367,2],[273,22,367,9,"trackRevenue"],[273,34,367,21,"trackRevenue"],[273,35,367,22,"amount"],[273,41,367,36],[273,43,367,104],[274,8,367,104],[274,12,367,38,"currency"],[274,20,367,54],[274,23,367,54,"arguments"],[274,32,367,54],[274,33,367,54,"length"],[274,39,367,54],[274,47,367,54,"arguments"],[274,56,367,54],[274,64,367,54,"undefined"],[274,73,367,54],[274,76,367,54,"arguments"],[274,85,367,54],[274,91,367,57],[274,96,367,62],[275,8,367,62],[275,12,367,64,"properties"],[275,22,367,96],[275,25,367,96,"arguments"],[275,34,367,96],[275,35,367,96,"length"],[275,41,367,96],[275,48,367,96,"arguments"],[275,57,367,96],[275,63,367,96,"undefined"],[275,72,367,96],[276,8,368,4],[276,12,368,8],[276,13,368,9,"track"],[276,18,368,14],[276,19,368,15],[276,28,368,24],[276,30,368,26],[277,10,369,6,"amount"],[277,16,369,12],[278,10,370,6,"currency"],[278,18,370,14],[279,10,371,6],[279,13,371,9,"properties"],[280,8,372,4],[280,9,372,5],[280,10,372,6],[281,6,373,2],[283,6,375,2],[284,0,376,0],[285,0,377,0],[286,4,375,2],[287,6,375,2,"key"],[287,9,375,2],[288,6,375,2,"value"],[288,11,375,2],[289,8,375,2],[289,12,375,2,"_flush"],[289,18,375,2],[289,25,375,2,"_asyncToGenerator2"],[289,43,375,2],[289,44,375,2,"default"],[289,51,375,2],[289,53,378,2],[289,66,378,38],[290,10,379,4],[290,14,379,8],[290,15,379,9],[290,19,379,13],[290,20,379,14,"hasConsent"],[290,30,379,24],[290,31,379,25],[290,32,379,26],[290,36,379,30],[290,40,379,34],[290,41,379,35,"isFlushing"],[290,51,379,45],[290,55,379,49],[290,59,379,53],[290,60,379,54,"eventQueue"],[290,70,379,64],[290,71,379,65,"length"],[290,77,379,71],[290,82,379,76],[290,83,379,77],[290,85,379,79],[291,12,380,6],[292,10,381,4],[293,10,383,4],[293,14,383,8],[293,15,383,9,"isFlushing"],[293,25,383,19],[293,28,383,22],[293,32,383,26],[294,10,384,4],[294,14,384,10,"events"],[294,20,384,16],[294,23,384,19],[294,24,384,20],[294,27,384,23],[294,31,384,27],[294,32,384,28,"eventQueue"],[294,42,384,38],[294,43,384,39],[295,10,385,4],[295,14,385,8],[295,15,385,9,"eventQueue"],[295,25,385,19],[295,28,385,22],[295,30,385,24],[296,10,387,4],[296,14,387,8],[297,12,388,6],[297,16,388,12,"batch"],[297,21,388,29],[297,24,388,32],[298,14,389,8,"events"],[298,20,389,14],[299,14,390,8,"timestamp"],[299,23,390,17],[299,25,390,19],[299,29,390,23,"Date"],[299,33,390,27],[299,34,390,28],[299,35,390,29],[299,36,390,30,"toISOString"],[299,47,390,41],[299,48,390,42],[299,49,390,43],[300,14,391,8,"batch_id"],[300,22,391,16],[300,24,391,18],[300,28,391,22],[300,29,391,23,"generateBatchId"],[300,44,391,38],[300,45,391,39],[301,12,392,6],[301,13,392,7],[303,12,394,6],[304,12,395,6],[304,16,395,12,"isOnline"],[304,24,395,20],[304,33,395,29],[304,37,395,33],[304,38,395,34,"checkNetworkStatus"],[304,56,395,52],[304,57,395,53],[304,58,395,54],[305,12,396,6],[305,16,396,10],[305,17,396,11,"isOnline"],[305,25,396,19],[305,27,396,21],[306,14,397,8],[306,20,397,14],[306,24,397,18],[306,25,397,19,"storeOfflineEvents"],[306,43,397,37],[306,44,397,38,"events"],[306,50,397,44],[306,51,397,45],[307,14,398,8,"EventLogger"],[307,38,398,19],[307,39,398,20,"info"],[307,43,398,24],[307,44,398,25],[307,55,398,36],[307,57,398,38],[307,80,398,61],[307,82,398,63],[308,16,398,65,"count"],[308,21,398,70],[308,23,398,72,"events"],[308,29,398,78],[308,30,398,79,"length"],[309,14,398,86],[309,15,398,87],[309,16,398,88],[310,14,399,8],[311,12,400,6],[313,12,402,6],[314,12,403,6],[314,18,403,12],[314,22,403,16],[314,23,403,17,"sendEventBatch"],[314,37,403,31],[314,38,403,32,"batch"],[314,43,403,37],[314,44,403,38],[315,12,404,6,"EventLogger"],[315,36,404,17],[315,37,404,18,"info"],[315,41,404,22],[315,42,404,23],[315,53,404,34],[315,55,404,36],[315,84,404,65],[315,86,404,67],[316,14,404,69,"count"],[316,19,404,74],[316,21,404,76,"events"],[316,27,404,82],[316,28,404,83,"length"],[317,12,404,90],[317,13,404,91],[317,14,404,92],[318,10,406,4],[318,11,406,5],[318,12,406,6],[318,19,406,13,"error"],[318,24,406,18],[318,26,406,20],[319,12,407,6],[320,12,408,6],[320,16,408,10],[320,17,408,11,"eventQueue"],[320,27,408,21],[320,28,408,22,"unshift"],[320,35,408,29],[320,36,408,30],[320,39,408,33,"events"],[320,45,408,39],[320,46,408,40],[321,12,409,6],[321,18,409,12],[321,22,409,16],[321,23,409,17,"storeOfflineEvents"],[321,41,409,35],[321,42,409,36,"events"],[321,48,409,42],[321,49,409,43],[322,12,410,6,"EventLogger"],[322,36,410,17],[322,37,410,18,"error"],[322,42,410,23],[322,43,410,24],[322,54,410,35],[322,56,410,37],[322,80,410,61],[322,82,410,63,"error"],[322,87,410,77],[322,88,410,78],[323,10,411,4],[323,11,411,5],[323,20,411,14],[324,12,412,6],[324,16,412,10],[324,17,412,11,"isFlushing"],[324,27,412,21],[324,30,412,24],[324,35,412,29],[325,10,413,4],[326,8,414,2],[326,9,414,3],[327,8,414,3],[327,17,378,15,"flush"],[327,22,378,20,"flush"],[327,23,378,20],[328,10,378,20],[328,17,378,20,"_flush"],[328,23,378,20],[328,24,378,20,"apply"],[328,29,378,20],[328,36,378,20,"arguments"],[328,45,378,20],[329,8,378,20],[330,8,378,20],[330,15,378,15,"flush"],[330,20,378,20],[331,6,378,20],[332,6,416,2],[333,0,417,0],[334,0,418,0],[335,6,416,2],[336,4,416,2],[337,6,416,2,"key"],[337,9,416,2],[338,6,416,2,"value"],[338,11,416,2],[339,6,545,2],[340,0,546,0],[341,0,547,0],[342,6,548,2],[342,15,548,10,"hasConsent"],[342,25,548,20,"hasConsent"],[342,26,548,20],[342,28,548,32],[343,8,549,4],[343,15,549,11],[343,19,549,15],[343,20,549,16,"config"],[343,26,549,22],[343,27,549,23,"hasConsent"],[343,37,549,33],[343,42,549,38],[343,46,549,42],[344,6,550,2],[346,6,552,2],[347,0,553,0],[348,0,554,0],[349,4,552,2],[350,6,552,2,"key"],[350,9,552,2],[351,6,552,2,"value"],[351,11,552,2],[351,13,555,2],[351,22,555,10,"shouldTrackEvent"],[351,38,555,26,"shouldTrackEvent"],[351,39,555,27,"eventName"],[351,48,555,44],[351,50,555,55],[352,8,556,4],[352,12,556,8],[352,13,556,9],[352,17,556,13],[352,18,556,14,"isInitialized"],[352,31,556,27],[352,33,556,29],[353,10,557,6,"EventLogger"],[353,34,557,17],[353,35,557,18,"warn"],[353,39,557,22],[353,40,557,23],[353,51,557,34],[353,53,557,36],[353,101,557,84],[353,103,557,86],[354,12,557,88,"eventName"],[355,10,557,98],[355,11,557,99],[355,12,557,100],[356,10,558,6],[356,17,558,13],[356,22,558,18],[357,8,559,4],[358,8,561,4],[358,12,561,8],[358,13,561,9],[358,17,561,13],[358,18,561,14,"config"],[358,24,561,20],[358,25,561,21,"enabled"],[358,32,561,28],[358,34,561,30],[359,10,562,6],[359,17,562,13],[359,22,562,18],[360,8,563,4],[361,8,565,4],[361,12,565,8],[361,13,565,9],[361,17,565,13],[361,18,565,14,"hasConsent"],[361,28,565,24],[361,29,565,25],[361,30,565,26],[361,32,565,28],[362,10,566,6],[362,17,566,13],[362,22,566,18],[363,8,567,4],[365,8,569,4],[366,8,570,4],[366,12,570,10,"config"],[366,18,570,16],[366,21,570,19],[366,25,570,19,"getAnalyticsConfig"],[366,54,570,37],[366,56,570,38],[366,57,570,39],[367,8,571,4],[367,12,571,10,"sampleRate"],[367,22,571,20],[367,25,571,23,"config"],[367,31,571,29],[367,32,571,30,"sampling"],[367,40,571,38],[367,41,571,39,"screenViews"],[367,52,571,50],[367,53,571,51],[367,54,571,52],[369,8,573,4],[369,12,573,8,"Math"],[369,16,573,12],[369,17,573,13,"random"],[369,23,573,19],[369,24,573,20],[369,25,573,21],[369,28,573,24,"sampleRate"],[369,38,573,34],[369,40,573,36],[370,10,574,6],[370,17,574,13],[370,22,574,18],[371,8,575,4],[372,8,577,4],[372,15,577,11],[372,19,577,15],[373,6,578,2],[375,6,580,2],[376,0,581,0],[377,0,582,0],[378,4,580,2],[379,6,580,2,"key"],[379,9,580,2],[380,6,580,2,"value"],[380,11,580,2],[380,13,583,2],[380,22,583,10,"enrichProperties"],[380,38,583,26,"enrichProperties"],[380,39,583,27,"properties"],[380,49,583,59],[380,51,583,82],[381,8,584,4],[381,15,584,11],[382,10,585,6],[382,13,585,9,"DEFAULT_EVENT_PROPERTIES"],[382,48,585,33],[383,10,586,6,"session_duration"],[383,26,586,22],[383,28,586,24,"Date"],[383,32,586,28],[383,33,586,29,"now"],[383,36,586,32],[383,37,586,33],[383,38,586,34],[383,41,586,37],[383,45,586,41],[383,46,586,42,"sessionStartTime"],[383,62,586,58],[384,10,587,6,"time_since_last_activity"],[384,34,587,30],[384,36,587,32,"Date"],[384,40,587,36],[384,41,587,37,"now"],[384,44,587,40],[384,45,587,41],[384,46,587,42],[384,49,587,45],[384,53,587,49],[384,54,587,50,"lastActivityTime"],[384,70,587,66],[385,10,588,6,"platform"],[385,18,588,14],[385,29,588,27],[386,10,589,6],[386,13,589,9],[386,17,589,9,"sanitizeEventProperties"],[386,51,589,32],[386,53,589,33,"properties"],[386,63,589,43],[386,67,589,47],[386,68,589,48],[386,69,589,49],[387,8,590,4],[387,9,590,5],[388,6,591,2],[390,6,593,2],[391,0,594,0],[392,0,595,0],[393,4,593,2],[394,6,593,2,"key"],[394,9,593,2],[395,6,593,2,"value"],[395,11,593,2],[395,13,596,2],[395,22,596,10,"buildContext"],[395,34,596,22,"buildContext"],[395,35,596,22],[395,37,596,25],[396,8,597,4],[396,15,597,11],[397,10,598,6,"app"],[397,13,598,9],[397,15,598,11],[398,12,599,8,"name"],[398,16,599,12],[398,18,599,14],[398,26,599,22],[399,12,600,8,"version"],[399,19,600,15],[399,21,600,17],[399,28,600,24],[400,12,600,26],[401,12,601,8,"build"],[401,17,601,13],[401,19,601,41],[402,10,602,6],[402,11,602,7],[403,10,603,6,"device"],[403,16,603,12],[403,18,603,14],[404,12,604,8,"type"],[404,16,604,12],[404,18,604,46],[404,27,604,55],[405,12,605,8,"model"],[405,17,605,13],[405,28,605,26],[406,12,605,28],[407,12,606,8,"manufacturer"],[407,24,606,20],[407,26,606,56],[408,10,607,6],[408,11,607,7],[409,10,608,6,"os"],[409,12,608,8],[409,14,608,10],[410,12,609,8,"name"],[410,16,609,12],[410,27,609,25],[411,12,610,8,"version"],[411,19,610,15],[411,21,610,17,"Platform"],[411,42,610,25],[411,43,610,26,"Version"],[411,50,610,33],[411,51,610,34,"toString"],[411,59,610,42],[411,60,610,43],[412,10,611,6],[413,8,612,4],[413,9,612,5],[414,6,613,2],[416,6,615,2],[417,0,616,0],[418,0,617,0],[419,4,615,2],[420,6,615,2,"key"],[420,9,615,2],[421,6,615,2,"value"],[421,11,615,2],[422,8,615,2],[422,12,615,2,"_loadPersistedData"],[422,30,615,2],[422,37,615,2,"_asyncToGenerator2"],[422,55,615,2],[422,56,615,2,"default"],[422,63,615,2],[422,65,618,2],[422,78,618,51],[423,10,619,4],[423,14,619,8],[424,12,620,6],[424,16,620,6,"_yield$AsyncStorage$m"],[424,37,620,6],[424,46,626,16,"AsyncStorage"],[424,67,626,28],[424,68,626,29,"multiGet"],[424,76,626,37],[424,77,626,38],[424,78,627,8,"AnalyticsService"],[424,94,627,24],[424,95,627,25,"CONSENT_KEY"],[424,106,627,36],[424,108,628,8,"AnalyticsService"],[424,124,628,24],[424,125,628,25,"USER_ID_KEY"],[424,136,628,36],[424,138,629,8,"AnalyticsService"],[424,154,629,24],[424,155,629,25,"ANONYMOUS_ID_KEY"],[424,171,629,41],[424,173,630,8,"AnalyticsService"],[424,189,630,24],[424,190,630,25,"SESSION_ID_KEY"],[424,204,630,39],[424,206,631,8,"AnalyticsService"],[424,222,631,24],[424,223,631,25,"USER_PROPERTIES_KEY"],[424,242,631,44],[424,243,632,7],[424,244,632,8],[425,14,632,8,"_yield$AsyncStorage$m2"],[425,36,632,8],[425,43,632,8,"_slicedToArray2"],[425,58,632,8],[425,59,632,8,"default"],[425,66,632,8],[425,68,632,8,"_yield$AsyncStorage$m"],[425,89,632,8],[426,14,621,8,"consent"],[426,21,621,15],[426,24,621,15,"_yield$AsyncStorage$m2"],[426,46,621,15],[427,14,622,8,"userId"],[427,20,622,14],[427,23,622,14,"_yield$AsyncStorage$m2"],[427,45,622,14],[428,14,623,8,"anonymousId"],[428,25,623,19],[428,28,623,19,"_yield$AsyncStorage$m2"],[428,50,623,19],[429,14,624,8,"sessionId"],[429,23,624,17],[429,26,624,17,"_yield$AsyncStorage$m2"],[429,48,624,17],[430,14,625,8,"userProperties"],[430,28,625,22],[430,31,625,22,"_yield$AsyncStorage$m2"],[430,53,625,22],[431,12,634,6],[431,16,634,10,"consent"],[431,23,634,17],[431,24,634,18],[431,25,634,19],[431,26,634,20],[431,28,634,22],[432,14,635,8],[432,18,635,12],[432,19,635,13,"consentSettings"],[432,34,635,28],[432,37,635,31,"JSON"],[432,41,635,35],[432,42,635,36,"parse"],[432,47,635,41],[432,48,635,42,"consent"],[432,55,635,49],[432,56,635,50],[432,57,635,51],[432,58,635,52],[432,59,635,53],[433,14,636,8],[433,18,636,12],[433,19,636,13,"config"],[433,25,636,19],[433,26,636,20,"hasConsent"],[433,36,636,30],[433,39,636,33],[433,43,636,37],[433,44,636,38,"consentSettings"],[433,59,636,53],[433,61,636,55,"analytics"],[433,70,636,64],[433,74,636,68],[433,79,636,73],[434,12,637,6],[435,12,639,6],[435,16,639,10,"userId"],[435,22,639,16],[435,23,639,17],[435,24,639,18],[435,25,639,19],[435,27,639,21],[436,14,640,8],[436,18,640,12],[436,19,640,13,"config"],[436,25,640,19],[436,26,640,20,"userId"],[436,32,640,26],[436,35,640,29,"userId"],[436,41,640,35],[436,42,640,36],[436,43,640,37],[436,44,640,38],[437,12,641,6],[438,12,643,6],[438,16,643,10,"anonymousId"],[438,27,643,21],[438,28,643,22],[438,29,643,23],[438,30,643,24],[438,32,643,26],[439,14,644,8],[439,18,644,12],[439,19,644,13,"config"],[439,25,644,19],[439,26,644,20,"anonymousId"],[439,37,644,31],[439,40,644,34,"anonymousId"],[439,51,644,45],[439,52,644,46],[439,53,644,47],[439,54,644,48],[440,12,645,6],[441,12,647,6],[441,16,647,10,"sessionId"],[441,25,647,19],[441,26,647,20],[441,27,647,21],[441,28,647,22],[441,30,647,24],[442,14,648,8],[442,18,648,12],[442,19,648,13,"config"],[442,25,648,19],[442,26,648,20,"sessionId"],[442,35,648,29],[442,38,648,32,"sessionId"],[442,47,648,41],[442,48,648,42],[442,49,648,43],[442,50,648,44],[443,12,649,6],[444,12,651,6],[444,16,651,10,"userProperties"],[444,30,651,24],[444,31,651,25],[444,32,651,26],[444,33,651,27],[444,35,651,29],[445,14,652,8],[445,18,652,12],[445,19,652,13,"config"],[445,25,652,19],[445,26,652,20,"userProperties"],[445,40,652,34],[445,43,652,37,"JSON"],[445,47,652,41],[445,48,652,42,"parse"],[445,53,652,47],[445,54,652,48,"userProperties"],[445,68,652,62],[445,69,652,63],[445,70,652,64],[445,71,652,65],[445,72,652,66],[446,12,653,6],[447,10,654,4],[447,11,654,5],[447,12,654,6],[447,19,654,13,"error"],[447,24,654,18],[447,26,654,20],[448,12,655,6,"EventLogger"],[448,36,655,17],[448,37,655,18,"error"],[448,42,655,23],[448,43,655,24],[448,54,655,35],[448,56,655,37],[448,87,655,68],[448,89,655,70,"error"],[448,94,655,84],[448,95,655,85],[449,10,656,4],[450,8,657,2],[450,9,657,3],[451,8,657,3],[451,17,618,16,"loadPersistedData"],[451,34,618,33,"loadPersistedData"],[451,35,618,33],[452,10,618,33],[452,17,618,33,"_loadPersistedData"],[452,35,618,33],[452,36,618,33,"apply"],[452,41,618,33],[452,48,618,33,"arguments"],[452,57,618,33],[453,8,618,33],[454,8,618,33],[454,15,618,16,"loadPersistedData"],[454,32,618,33],[455,6,618,33],[456,6,659,2],[457,0,660,0],[458,0,661,0],[459,6,659,2],[460,4,659,2],[461,6,659,2,"key"],[461,9,659,2],[462,6,659,2,"value"],[462,11,659,2],[462,13,662,2],[462,22,662,10,"setupPeriodicFlush"],[462,40,662,28,"setupPeriodicFlush"],[462,41,662,28],[462,43,662,37],[463,8,663,4,"setInterval"],[463,19,663,15],[463,20,663,16],[463,26,663,22],[464,10,664,6],[464,14,664,10],[464,18,664,14],[464,19,664,15,"eventQueue"],[464,29,664,25],[464,30,664,26,"length"],[464,36,664,32],[464,39,664,35],[464,40,664,36],[464,42,664,38],[465,12,665,8],[465,16,665,12],[465,17,665,13,"flush"],[465,22,665,18],[465,23,665,19],[465,24,665,20],[466,10,666,6],[467,8,667,4],[467,9,667,5],[467,11,667,7],[467,15,667,7,"getAnalyticsConfig"],[467,44,667,25],[467,46,667,26],[467,47,667,27],[467,48,667,28,"flushInterval"],[467,61,667,41],[467,62,667,42],[468,6,668,2],[470,6,670,2],[471,0,671,0],[472,0,672,0],[473,4,670,2],[474,6,670,2,"key"],[474,9,670,2],[475,6,670,2,"value"],[475,11,670,2],[475,13,673,2],[475,22,673,10,"setupSessionManagement"],[475,44,673,32,"setupSessionManagement"],[475,45,673,32],[475,47,673,41],[476,8,674,4],[477,8,675,4,"setInterval"],[477,19,675,15],[477,20,675,16],[477,26,675,22],[478,10,676,6],[478,14,676,12,"timeSinceLastActivity"],[478,35,676,33],[478,38,676,36,"Date"],[478,42,676,40],[478,43,676,41,"now"],[478,46,676,44],[478,47,676,45],[478,48,676,46],[478,51,676,49],[478,55,676,53],[478,56,676,54,"lastActivityTime"],[478,72,676,70],[479,10,677,6],[479,14,677,10,"timeSinceLastActivity"],[479,35,677,31],[479,38,677,34],[479,42,677,34,"getAnalyticsConfig"],[479,71,677,52],[479,73,677,53],[479,74,677,54],[479,75,677,55,"sessionTimeout"],[479,89,677,69],[479,91,677,71],[480,12,678,8],[480,16,678,12],[480,17,678,13,"startNewSession"],[480,32,678,28],[480,33,678,29],[480,34,678,30],[481,10,679,6],[482,8,680,4],[482,9,680,5],[482,11,680,7],[482,16,680,12],[482,17,680,13],[482,18,680,14],[482,19,680,15],[483,6,681,2],[485,6,683,2],[486,0,684,0],[487,0,685,0],[488,4,683,2],[489,6,683,2,"key"],[489,9,683,2],[490,6,683,2,"value"],[490,11,683,2],[491,8,683,2],[491,12,683,2,"_startNewSession"],[491,28,683,2],[491,35,683,2,"_asyncToGenerator2"],[491,53,683,2],[491,54,683,2,"default"],[491,61,683,2],[491,63,686,2],[491,76,686,49],[492,10,687,4],[492,14,687,10,"oldSessionId"],[492,26,687,22],[492,29,687,25],[492,33,687,29],[492,34,687,30,"config"],[492,40,687,36],[492,41,687,37,"sessionId"],[492,50,687,46],[493,10,688,4],[493,14,688,8],[493,15,688,9,"config"],[493,21,688,15],[493,22,688,16,"sessionId"],[493,31,688,25],[493,34,688,28],[493,38,688,32],[493,39,688,33,"generateSessionId"],[493,56,688,50],[493,57,688,51],[493,58,688,52],[494,10,689,4],[494,14,689,8],[494,15,689,9,"sessionStartTime"],[494,31,689,25],[494,34,689,28,"Date"],[494,38,689,32],[494,39,689,33,"now"],[494,42,689,36],[494,43,689,37],[494,44,689,38],[495,10,690,4],[495,14,690,8],[495,15,690,9,"lastActivityTime"],[495,31,690,25],[495,34,690,28,"Date"],[495,38,690,32],[495,39,690,33,"now"],[495,42,690,36],[495,43,690,37],[495,44,690,38],[496,10,692,4],[496,16,692,10,"AsyncStorage"],[496,37,692,22],[496,38,692,23,"setItem"],[496,45,692,30],[496,46,692,31,"AnalyticsService"],[496,62,692,47],[496,63,692,48,"SESSION_ID_KEY"],[496,77,692,62],[496,79,692,64],[496,83,692,68],[496,84,692,69,"config"],[496,90,692,75],[496,91,692,76,"sessionId"],[496,100,692,85],[496,101,692,86],[497,10,694,4],[497,14,694,8],[497,18,694,12],[497,19,694,13,"hasConsent"],[497,29,694,23],[497,30,694,24],[497,31,694,25],[497,33,694,27],[498,12,695,6],[498,16,695,10],[498,17,695,11,"track"],[498,22,695,16],[498,23,695,17],[498,40,695,34],[498,42,695,36],[499,14,696,8,"previous_session_id"],[499,33,696,27],[499,35,696,29,"oldSessionId"],[500,12,697,6],[500,13,697,7],[500,14,697,8],[501,10,698,4],[502,8,699,2],[502,9,699,3],[503,8,699,3],[503,17,686,16,"startNewSession"],[503,32,686,31,"startNewSession"],[503,33,686,31],[504,10,686,31],[504,17,686,31,"_startNewSession"],[504,33,686,31],[504,34,686,31,"apply"],[504,39,686,31],[504,46,686,31,"arguments"],[504,55,686,31],[505,8,686,31],[506,8,686,31],[506,15,686,16,"startNewSession"],[506,30,686,31],[507,6,686,31],[508,6,701,2],[509,0,702,0],[510,0,703,0],[511,6,701,2],[512,4,701,2],[513,6,701,2,"key"],[513,9,701,2],[514,6,701,2,"value"],[514,11,701,2],[515,8,701,2],[515,12,701,2,"_loadOfflineEvents"],[515,30,701,2],[515,37,701,2,"_asyncToGenerator2"],[515,55,701,2],[515,56,701,2,"default"],[515,63,701,2],[515,65,704,2],[515,78,704,51],[516,10,705,4],[516,14,705,8],[517,12,706,6],[517,16,706,12,"offlineEvents"],[517,29,706,25],[517,38,706,34,"AsyncStorage"],[517,59,706,46],[517,60,706,47,"getItem"],[517,67,706,54],[517,68,706,55,"AnalyticsService"],[517,84,706,71],[517,85,706,72,"OFFLINE_EVENTS_KEY"],[517,103,706,90],[517,104,706,91],[518,12,707,6],[518,16,707,10,"offlineEvents"],[518,29,707,23],[518,31,707,25],[519,14,708,8],[519,18,708,14,"events"],[519,24,708,46],[519,27,708,49,"JSON"],[519,31,708,53],[519,32,708,54,"parse"],[519,37,708,59],[519,38,708,60,"offlineEvents"],[519,51,708,73],[519,52,708,74],[520,14,709,8],[520,18,709,12],[520,19,709,13,"eventQueue"],[520,29,709,23],[520,30,709,24,"unshift"],[520,37,709,31],[520,38,709,32],[520,41,709,35,"events"],[520,47,709,41],[520,48,709,42],[521,14,710,8],[521,20,710,14,"AsyncStorage"],[521,41,710,26],[521,42,710,27,"removeItem"],[521,52,710,37],[521,53,710,38,"AnalyticsService"],[521,69,710,54],[521,70,710,55,"OFFLINE_EVENTS_KEY"],[521,88,710,73],[521,89,710,74],[522,14,711,8,"EventLogger"],[522,38,711,19],[522,39,711,20,"info"],[522,43,711,24],[522,44,711,25],[522,55,711,36],[522,57,711,38],[522,80,711,61],[522,82,711,63],[523,16,711,65,"count"],[523,21,711,70],[523,23,711,72,"events"],[523,29,711,78],[523,30,711,79,"length"],[524,14,711,86],[524,15,711,87],[524,16,711,88],[525,12,712,6],[526,10,713,4],[526,11,713,5],[526,12,713,6],[526,19,713,13,"error"],[526,24,713,18],[526,26,713,20],[527,12,714,6,"EventLogger"],[527,36,714,17],[527,37,714,18,"error"],[527,42,714,23],[527,43,714,24],[527,54,714,35],[527,56,714,37],[527,87,714,68],[527,89,714,70,"error"],[527,94,714,84],[527,95,714,85],[528,10,715,4],[529,8,716,2],[529,9,716,3],[530,8,716,3],[530,17,704,16,"loadOfflineEvents"],[530,34,704,33,"loadOfflineEvents"],[530,35,704,33],[531,10,704,33],[531,17,704,33,"_loadOfflineEvents"],[531,35,704,33],[531,36,704,33,"apply"],[531,41,704,33],[531,48,704,33,"arguments"],[531,57,704,33],[532,8,704,33],[533,8,704,33],[533,15,704,16,"loadOfflineEvents"],[533,32,704,33],[534,6,704,33],[535,6,718,2],[536,0,719,0],[537,0,720,0],[538,6,718,2],[539,4,718,2],[540,6,718,2,"key"],[540,9,718,2],[541,6,718,2,"value"],[541,11,718,2],[542,8,718,2],[542,12,718,2,"_storeOfflineEvents"],[542,31,718,2],[542,38,718,2,"_asyncToGenerator2"],[542,56,718,2],[542,57,718,2,"default"],[542,64,718,2],[542,66,721,2],[542,77,721,35,"events"],[542,83,721,67],[542,85,721,84],[543,10,722,4],[543,14,722,8],[544,12,723,6],[544,16,723,12,"existingEvents"],[544,30,723,26],[544,39,723,35,"AsyncStorage"],[544,60,723,47],[544,61,723,48,"getItem"],[544,68,723,55],[544,69,723,56,"AnalyticsService"],[544,85,723,72],[544,86,723,73,"OFFLINE_EVENTS_KEY"],[544,104,723,91],[544,105,723,92],[545,12,724,6],[545,16,724,12,"allEvents"],[545,25,724,21],[545,28,724,24,"existingEvents"],[545,42,724,38],[545,45,724,41,"JSON"],[545,49,724,45],[545,50,724,46,"parse"],[545,55,724,51],[545,56,724,52,"existingEvents"],[545,70,724,66],[545,71,724,67],[545,74,724,70],[545,76,724,72],[546,12,726,6,"allEvents"],[546,21,726,15],[546,22,726,16,"push"],[546,26,726,20],[546,27,726,21],[546,30,726,24,"events"],[546,36,726,30],[546,37,726,31],[548,12,728,6],[549,12,729,6],[549,16,729,12,"maxOfflineEvents"],[549,32,729,28],[549,35,729,31],[549,39,729,31,"getAnalyticsConfig"],[549,68,729,49],[549,70,729,50],[549,71,729,51],[549,72,729,52,"maxOfflineEvents"],[549,88,729,68],[550,12,730,6],[550,16,730,10,"allEvents"],[550,25,730,19],[550,26,730,20,"length"],[550,32,730,26],[550,35,730,29,"maxOfflineEvents"],[550,51,730,45],[550,53,730,47],[551,14,731,8,"allEvents"],[551,23,731,17],[551,24,731,18,"splice"],[551,30,731,24],[551,31,731,25],[551,32,731,26],[551,34,731,28,"allEvents"],[551,43,731,37],[551,44,731,38,"length"],[551,50,731,44],[551,53,731,47,"maxOfflineEvents"],[551,69,731,63],[551,70,731,64],[552,12,732,6],[553,12,734,6],[553,18,734,12,"AsyncStorage"],[553,39,734,24],[553,40,734,25,"setItem"],[553,47,734,32],[553,48,734,33,"AnalyticsService"],[553,64,734,49],[553,65,734,50,"OFFLINE_EVENTS_KEY"],[553,83,734,68],[553,85,734,70,"JSON"],[553,89,734,74],[553,90,734,75,"stringify"],[553,99,734,84],[553,100,734,85,"allEvents"],[553,109,734,94],[553,110,734,95],[553,111,734,96],[554,10,735,4],[554,11,735,5],[554,12,735,6],[554,19,735,13,"error"],[554,24,735,18],[554,26,735,20],[555,12,736,6,"EventLogger"],[555,36,736,17],[555,37,736,18,"error"],[555,42,736,23],[555,43,736,24],[555,54,736,35],[555,56,736,37],[555,88,736,69],[555,90,736,71,"error"],[555,95,736,85],[555,96,736,86],[556,10,737,4],[557,8,738,2],[557,9,738,3],[558,8,738,3],[558,17,721,16,"storeOfflineEvents"],[558,35,721,34,"storeOfflineEvents"],[558,36,721,34,"_x5"],[558,39,721,34],[559,10,721,34],[559,17,721,34,"_storeOfflineEvents"],[559,36,721,34],[559,37,721,34,"apply"],[559,42,721,34],[559,49,721,34,"arguments"],[559,58,721,34],[560,8,721,34],[561,8,721,34],[561,15,721,16,"storeOfflineEvents"],[561,33,721,34],[562,6,721,34],[563,6,740,2],[564,0,741,0],[565,0,742,0],[566,6,740,2],[567,4,740,2],[568,6,740,2,"key"],[568,9,740,2],[569,6,740,2,"value"],[569,11,740,2],[570,8,740,2],[570,12,740,2,"_sendEventBatch"],[570,27,740,2],[570,34,740,2,"_asyncToGenerator2"],[570,52,740,2],[570,53,740,2,"default"],[570,60,740,2],[570,62,743,2],[570,73,743,31,"batch"],[570,78,743,48],[570,80,743,65],[571,10,744,4],[571,14,744,8],[572,12,745,6],[573,12,746,6],[575,12,748,6],[575,16,748,12,"promises"],[575,24,748,20],[575,27,748,23,"batch"],[575,32,748,28],[575,33,748,29,"events"],[575,39,748,35],[575,40,748,36,"map"],[575,43,748,39],[576,14,748,39],[576,18,748,39,"_ref"],[576,22,748,39],[576,29,748,39,"_asyncToGenerator2"],[576,47,748,39],[576,48,748,39,"default"],[576,55,748,39],[576,57,748,40],[576,68,748,47,"event"],[576,73,748,52],[576,75,748,57],[577,16,749,8],[577,20,749,8,"_yield$supabase$from$"],[577,41,749,8],[577,50,749,32,"supabase"],[577,66,749,40],[577,67,750,11,"from"],[577,71,750,15],[577,72,750,16],[577,87,750,31],[577,88,750,32],[577,89,751,11,"insert"],[577,95,751,17],[577,96,751,18],[578,20,752,12,"event_name"],[578,30,752,22],[578,32,752,24,"event"],[578,37,752,29],[578,38,752,30,"event_name"],[578,48,752,40],[579,20,753,12,"properties"],[579,30,753,22],[579,32,753,24,"event"],[579,37,753,29],[579,38,753,30,"properties"],[579,48,753,40],[580,20,754,12,"user_properties"],[580,35,754,27],[580,37,754,29,"event"],[580,42,754,34],[580,43,754,35,"user_properties"],[580,58,754,50],[581,20,755,12,"timestamp"],[581,29,755,21],[581,31,755,23,"event"],[581,36,755,28],[581,37,755,29,"timestamp"],[581,46,755,38],[582,20,756,12,"session_id"],[582,30,756,22],[582,32,756,24,"event"],[582,37,756,29],[582,38,756,30,"session_id"],[582,48,756,40],[583,20,757,12,"user_id"],[583,27,757,19],[583,29,757,21,"event"],[583,34,757,26],[583,35,757,27,"user_id"],[583,42,757,34],[584,20,758,12,"anonymous_id"],[584,32,758,24],[584,34,758,26,"event"],[584,39,758,31],[584,40,758,32,"anonymous_id"],[584,52,758,44],[585,20,759,12,"context"],[585,27,759,19],[585,29,759,21,"event"],[585,34,759,26],[585,35,759,27,"context"],[585,42,759,34],[586,20,760,12,"batch_id"],[586,28,760,20],[586,30,760,22,"batch"],[586,35,760,27],[586,36,760,28,"batch_id"],[587,18,761,10],[587,19,761,11],[587,20,761,12],[588,18,749,16,"error"],[588,23,749,21],[588,26,749,21,"_yield$supabase$from$"],[588,47,749,21],[588,48,749,16,"error"],[588,53,749,21],[589,16,763,8],[589,20,763,12,"error"],[589,25,763,17],[589,27,763,19],[590,18,764,10],[590,24,764,16,"error"],[590,29,764,21],[591,16,765,8],[592,14,766,6],[592,15,766,7],[593,14,766,7],[593,31,766,7,"_x7"],[593,34,766,7],[594,16,766,7],[594,23,766,7,"_ref"],[594,27,766,7],[594,28,766,7,"apply"],[594,33,766,7],[594,40,766,7,"arguments"],[594,49,766,7],[595,14,766,7],[596,12,766,7],[596,16,766,8],[597,12,768,6],[597,18,768,12,"Promise"],[597,25,768,19],[597,26,768,20,"all"],[597,29,768,23],[597,30,768,24,"promises"],[597,38,768,32],[597,39,768,33],[598,10,769,4],[598,11,769,5],[598,12,769,6],[598,19,769,13,"error"],[598,24,769,18],[598,26,769,20],[599,12,770,6],[600,12,771,6,"EventLogger"],[600,36,771,17],[600,37,771,18,"info"],[600,41,771,22],[600,42,771,23],[600,53,771,34],[600,55,771,36],[600,97,771,78],[600,99,771,80],[601,14,772,8,"batch_id"],[601,22,772,16],[601,24,772,18,"batch"],[601,29,772,23],[601,30,772,24,"batch_id"],[601,38,772,32],[602,14,773,8,"event_count"],[602,25,773,19],[602,27,773,21,"batch"],[602,32,773,26],[602,33,773,27,"events"],[602,39,773,33],[602,40,773,34,"length"],[602,46,773,40],[603,14,774,8,"error"],[603,19,774,13],[603,21,774,15,"error"],[604,12,775,6],[604,13,775,7],[604,14,775,8],[605,12,776,6],[605,18,776,12,"error"],[605,23,776,17],[606,10,777,4],[607,8,778,2],[607,9,778,3],[608,8,778,3],[608,17,743,16,"sendEventBatch"],[608,31,743,30,"sendEventBatch"],[608,32,743,30,"_x6"],[608,35,743,30],[609,10,743,30],[609,17,743,30,"_sendEventBatch"],[609,32,743,30],[609,33,743,30,"apply"],[609,38,743,30],[609,45,743,30,"arguments"],[609,54,743,30],[610,8,743,30],[611,8,743,30],[611,15,743,16,"sendEventBatch"],[611,29,743,30],[612,6,743,30],[613,6,780,2],[614,0,781,0],[615,0,782,0],[616,6,780,2],[617,4,780,2],[618,6,780,2,"key"],[618,9,780,2],[619,6,780,2,"value"],[619,11,780,2],[620,8,780,2],[620,12,780,2,"_checkNetworkStatus"],[620,31,780,2],[620,38,780,2,"_asyncToGenerator2"],[620,56,780,2],[620,57,780,2,"default"],[620,64,780,2],[620,66,783,2],[620,79,783,55],[621,10,784,4],[622,10,785,4],[623,10,786,4],[623,17,786,11],[623,21,786,15],[624,8,787,2],[624,9,787,3],[625,8,787,3],[625,17,783,16,"checkNetworkStatus"],[625,35,783,34,"checkNetworkStatus"],[625,36,783,34],[626,10,783,34],[626,17,783,34,"_checkNetworkStatus"],[626,36,783,34],[626,37,783,34,"apply"],[626,42,783,34],[626,49,783,34,"arguments"],[626,58,783,34],[627,8,783,34],[628,8,783,34],[628,15,783,16,"checkNetworkStatus"],[628,33,783,34],[629,6,783,34],[630,6,789,2],[631,0,790,0],[632,0,791,0],[633,6,789,2],[634,4,789,2],[635,6,789,2,"key"],[635,9,789,2],[636,6,789,2,"value"],[636,11,789,2],[636,13,792,2],[636,22,792,10,"generateSessionId"],[636,39,792,27,"generateSessionId"],[636,40,792,27],[636,42,792,38],[637,8,793,4],[637,15,793,11],[637,18,793,14,"Date"],[637,22,793,18],[637,23,793,19,"now"],[637,26,793,22],[637,27,793,23],[637,28,793,24],[637,32,793,28,"Math"],[637,36,793,32],[637,37,793,33,"random"],[637,43,793,39],[637,44,793,40],[637,45,793,41],[637,46,793,42,"toString"],[637,54,793,50],[637,55,793,51],[637,57,793,53],[637,58,793,54],[637,59,793,55,"substr"],[637,65,793,61],[637,66,793,62],[637,67,793,63],[637,69,793,65],[637,70,793,66],[637,71,793,67],[637,73,793,69],[638,6,794,2],[640,6,796,2],[641,0,797,0],[642,0,798,0],[643,4,796,2],[644,6,796,2,"key"],[644,9,796,2],[645,6,796,2,"value"],[645,11,796,2],[645,13,799,2],[645,22,799,10,"generateAnonymousId"],[645,41,799,29,"generateAnonymousId"],[645,42,799,29],[645,44,799,40],[646,8,800,4],[646,15,800,11],[646,23,800,19,"Date"],[646,27,800,23],[646,28,800,24,"now"],[646,31,800,27],[646,32,800,28],[646,33,800,29],[646,37,800,33,"Math"],[646,41,800,37],[646,42,800,38,"random"],[646,48,800,44],[646,49,800,45],[646,50,800,46],[646,51,800,47,"toString"],[646,59,800,55],[646,60,800,56],[646,62,800,58],[646,63,800,59],[646,64,800,60,"substr"],[646,70,800,66],[646,71,800,67],[646,72,800,68],[646,74,800,70],[646,75,800,71],[646,76,800,72],[646,78,800,74],[647,6,801,2],[649,6,803,2],[650,0,804,0],[651,0,805,0],[652,4,803,2],[653,6,803,2,"key"],[653,9,803,2],[654,6,803,2,"value"],[654,11,803,2],[654,13,806,2],[654,22,806,10,"generateBatchId"],[654,37,806,25,"generateBatchId"],[654,38,806,25],[654,40,806,36],[655,8,807,4],[655,15,807,11],[655,24,807,20,"Date"],[655,28,807,24],[655,29,807,25,"now"],[655,32,807,28],[655,33,807,29],[655,34,807,30],[655,38,807,34,"Math"],[655,42,807,38],[655,43,807,39,"random"],[655,49,807,45],[655,50,807,46],[655,51,807,47],[655,52,807,48,"toString"],[655,60,807,56],[655,61,807,57],[655,63,807,59],[655,64,807,60],[655,65,807,61,"substr"],[655,71,807,67],[655,72,807,68],[655,73,807,69],[655,75,807,71],[655,76,807,72],[655,77,807,73],[655,79,807,75],[656,6,808,2],[658,6,810,2],[659,0,811,0],[660,0,812,0],[661,4,810,2],[662,6,810,2,"key"],[662,9,810,2],[663,6,810,2,"value"],[663,11,810,2],[663,13,151,2],[663,22,151,16,"getInstance"],[663,33,151,27,"getInstance"],[663,34,151,27],[663,36,151,48],[664,8,152,4],[664,12,152,8],[664,13,152,9,"AnalyticsService"],[664,29,152,25],[664,30,152,26,"instance"],[664,38,152,34],[664,40,152,36],[665,10,153,6,"AnalyticsService"],[665,26,153,22],[665,27,153,23,"instance"],[665,35,153,31],[665,38,153,34],[665,42,153,38,"AnalyticsService"],[665,58,153,54],[665,59,153,55],[665,60,153,56],[666,8,154,4],[667,8,155,4],[667,15,155,11,"AnalyticsService"],[667,31,155,27],[667,32,155,28,"instance"],[667,40,155,36],[668,6,156,2],[669,4,156,3],[670,6,156,3,"key"],[670,9,156,3],[671,6,156,3,"value"],[671,11,156,3],[672,8,156,3],[672,12,156,3,"_trackEvent"],[672,23,156,3],[672,30,156,3,"_asyncToGenerator2"],[672,48,156,3],[672,49,156,3,"default"],[672,56,156,3],[672,58,419,2],[672,69,419,26,"event"],[672,74,419,47],[672,76,419,67],[673,10,420,4],[673,14,420,8],[674,12,421,6],[674,16,421,12,"analytics"],[674,25,421,21],[674,28,421,24,"AnalyticsService"],[674,44,421,40],[674,45,421,41,"getInstance"],[674,56,421,52],[674,57,421,53],[674,58,421,54],[676,12,423,6],[677,12,424,6],[677,16,424,12,"eventName"],[677,25,424,21],[677,28,424,24],[677,42,424,38,"event"],[677,47,424,43],[677,48,424,44,"event_type"],[677,58,424,54],[677,60,424,56],[678,12,425,6],[678,16,425,12,"properties"],[678,26,425,22],[678,29,425,25],[679,14,426,8,"automation_id"],[679,27,426,21],[679,29,426,23,"event"],[679,34,426,28],[679,35,426,29,"automation_id"],[679,48,426,42],[680,14,427,8,"event_type"],[680,24,427,18],[680,26,427,20,"event"],[680,31,427,25],[680,32,427,26,"event_type"],[680,42,427,36],[681,14,428,8],[681,17,428,11,"event"],[681,22,428,16],[681,23,428,17,"event_data"],[682,12,429,6],[682,13,429,7],[683,12,431,6,"analytics"],[683,21,431,15],[683,22,431,16,"track"],[683,27,431,21],[683,28,431,22,"eventName"],[683,37,431,31],[683,39,431,33,"properties"],[683,49,431,43],[683,50,431,44],[685,12,433,6],[686,12,434,6],[686,16,434,6,"_yield$supabase$auth$"],[686,37,434,6],[686,46,434,39,"supabase"],[686,62,434,47],[686,63,434,48,"auth"],[686,67,434,52],[686,68,434,53,"getUser"],[686,75,434,60],[686,76,434,61],[686,77,434,62],[687,14,434,22,"user"],[687,18,434,26],[687,21,434,26,"_yield$supabase$auth$"],[687,42,434,26],[687,43,434,14,"data"],[687,47,434,18],[687,48,434,22,"user"],[687,52,434,26],[688,12,436,6],[688,16,436,12,"eventData"],[688,25,436,21],[688,28,436,24],[689,14,437,8,"automation_id"],[689,27,437,21],[689,29,437,23,"event"],[689,34,437,28],[689,35,437,29,"automation_id"],[689,48,437,42],[690,14,438,8,"event_type"],[690,24,438,18],[690,26,438,20,"event"],[690,31,438,25],[690,32,438,26,"event_type"],[690,42,438,36],[691,14,439,8,"event_data"],[691,24,439,18],[691,26,439,20,"event"],[691,31,439,25],[691,32,439,26,"event_data"],[691,42,439,36],[691,46,439,40],[691,47,439,41],[691,48,439,42],[692,14,440,8,"user_id"],[692,21,440,15],[692,23,440,17,"user"],[692,27,440,21],[692,29,440,23,"id"],[692,31,440,25],[692,35,440,29,"event"],[692,40,440,34],[692,41,440,35,"user_id"],[692,48,440,42],[693,14,441,8,"session_id"],[693,24,441,18],[693,26,441,20,"event"],[693,31,441,25],[693,32,441,26,"session_id"],[693,42,441,36],[693,46,441,40,"analytics"],[693,55,441,49],[693,56,441,50,"generateSessionId"],[693,73,441,67],[693,74,441,68],[693,75,441,69],[694,14,442,8,"user_agent"],[694,24,442,18],[694,26,442,20,"event"],[694,31,442,25],[694,32,442,26,"user_agent"],[694,42,442,36],[694,47,442,41],[694,54,442,48,"navigator"],[694,63,442,57],[694,68,442,62],[694,79,442,73],[694,82,442,76,"navigator"],[694,91,442,85],[694,92,442,86,"userAgent"],[694,101,442,95],[694,104,442,98],[694,116,442,110],[694,117,442,111],[695,14,443,8,"created_at"],[695,24,443,18],[695,26,443,20],[695,30,443,24,"Date"],[695,34,443,28],[695,35,443,29],[695,36,443,30],[695,37,443,31,"toISOString"],[695,48,443,42],[695,49,443,43],[696,12,444,6],[696,13,444,7],[697,12,446,6],[697,16,446,6,"_yield$supabase$from$2"],[697,38,446,6],[697,47,446,30,"supabase"],[697,63,446,38],[697,64,447,9,"from"],[697,68,447,13],[697,69,447,14],[697,91,447,36],[697,92,447,37],[697,93,448,9,"insert"],[697,99,448,15],[697,100,448,16,"eventData"],[697,109,448,25],[697,110,448,26],[698,14,446,14,"error"],[698,19,446,19],[698,22,446,19,"_yield$supabase$from$2"],[698,44,446,19],[698,45,446,14,"error"],[698,50,446,19],[699,12,450,6],[699,16,450,10,"error"],[699,21,450,15],[699,23,450,17],[700,14,451,8,"EventLogger"],[700,38,451,19],[700,39,451,20,"error"],[700,44,451,25],[700,45,451,26],[700,56,451,37],[700,58,451,39],[700,98,451,79],[700,100,451,81,"error"],[700,105,451,95],[700,106,451,96],[701,14,452,8],[701,21,452,15],[701,26,452,20],[702,12,453,6],[703,12,455,6],[703,19,455,13],[703,23,455,17],[704,10,456,4],[704,11,456,5],[704,12,456,6],[704,19,456,13,"error"],[704,24,456,18],[704,26,456,20],[705,12,457,6,"EventLogger"],[705,36,457,17],[705,37,457,18,"error"],[705,42,457,23],[705,43,457,24],[705,54,457,35],[705,56,457,37],[705,89,457,70],[705,91,457,72,"error"],[705,96,457,86],[705,97,457,87],[706,12,458,6],[706,19,458,13],[706,24,458,18],[707,10,459,4],[708,8,460,2],[708,9,460,3],[709,8,460,3],[709,17,419,15,"trackEvent"],[709,27,419,25,"trackEvent"],[709,28,419,25,"_x8"],[709,31,419,25],[710,10,419,25],[710,17,419,25,"_trackEvent"],[710,28,419,25],[710,29,419,25,"apply"],[710,34,419,25],[710,41,419,25,"arguments"],[710,50,419,25],[711,8,419,25],[712,8,419,25],[712,15,419,15,"trackEvent"],[712,25,419,25],[713,6,419,25],[714,6,462,2],[715,0,463,0],[716,0,464,0],[717,6,462,2],[718,4,462,2],[719,6,462,2,"key"],[719,9,462,2],[720,6,462,2,"value"],[720,11,462,2],[721,8,462,2],[721,12,462,2,"_getAutomationStats"],[721,31,462,2],[721,38,462,2,"_asyncToGenerator2"],[721,56,462,2],[721,57,462,2,"default"],[721,64,462,2],[721,66,465,2],[721,77,465,34,"automationId"],[721,89,465,54],[721,91,465,81],[722,10,466,4],[722,14,466,8],[723,12,467,6],[724,12,468,6],[724,16,468,6,"_yield$supabase$from$3"],[724,38,468,6],[724,47,468,47,"supabase"],[724,63,468,55],[724,64,469,9,"from"],[724,68,469,13],[724,69,469,14],[724,91,469,36],[724,92,469,37],[724,93,470,9,"select"],[724,99,470,15],[724,100,470,16],[724,148,470,64],[724,149,470,65],[724,150,471,9,"eq"],[724,152,471,11],[724,153,471,12],[724,168,471,27],[724,170,471,29,"automationId"],[724,182,471,41],[724,183,471,42],[725,14,468,20,"analytics"],[725,23,468,29],[725,26,468,29,"_yield$supabase$from$3"],[725,48,468,29],[725,49,468,14,"data"],[725,53,468,18],[726,14,468,31,"error"],[726,19,468,36],[726,22,468,36,"_yield$supabase$from$3"],[726,44,468,36],[726,45,468,31,"error"],[726,50,468,36],[727,12,473,6],[727,16,473,10,"error"],[727,21,473,15],[727,23,473,17],[727,29,473,23,"error"],[727,34,473,28],[729,12,475,6],[730,12,476,6],[730,16,476,12,"stats"],[730,21,476,33],[730,24,476,36],[731,14,477,8,"views"],[731,19,477,13],[731,21,477,15,"analytics"],[731,30,477,24],[731,32,477,26,"filter"],[731,38,477,32],[731,39,477,33,"a"],[731,40,477,34],[731,44,477,38,"a"],[731,45,477,39],[731,46,477,40,"event_type"],[731,56,477,50],[731,61,477,55],[731,67,477,61],[731,68,477,62],[731,69,477,63,"length"],[731,75,477,69],[731,79,477,73],[731,80,477,74],[732,14,478,8,"executions"],[732,24,478,18],[732,26,478,20,"analytics"],[732,35,478,29],[732,37,478,31,"filter"],[732,43,478,37],[732,44,478,38,"a"],[732,45,478,39],[732,49,478,43,"a"],[732,50,478,44],[732,51,478,45,"event_type"],[732,61,478,55],[732,66,478,60],[732,77,478,71],[732,78,478,72],[732,79,478,73,"length"],[732,85,478,79],[732,89,478,83],[732,90,478,84],[733,14,479,8,"shares"],[733,20,479,14],[733,22,479,16,"analytics"],[733,31,479,25],[733,33,479,27,"filter"],[733,39,479,33],[733,40,479,34,"a"],[733,41,479,35],[733,45,479,39,"a"],[733,46,479,40],[733,47,479,41,"event_type"],[733,57,479,51],[733,62,479,56],[733,69,479,63],[733,70,479,64],[733,71,479,65,"length"],[733,77,479,71],[733,81,479,75],[733,82,479,76],[734,14,480,8,"downloads"],[734,23,480,17],[734,25,480,19,"analytics"],[734,34,480,28],[734,36,480,30,"filter"],[734,42,480,36],[734,43,480,37,"a"],[734,44,480,38],[734,48,480,42,"a"],[734,49,480,43],[734,50,480,44,"event_type"],[734,60,480,54],[734,65,480,59],[734,75,480,69],[734,76,480,70],[734,77,480,71,"length"],[734,83,480,77],[734,87,480,81],[734,88,480,82],[735,14,481,8,"likes"],[735,19,481,13],[735,21,481,15,"analytics"],[735,30,481,24],[735,32,481,26,"filter"],[735,38,481,32],[735,39,481,33,"a"],[735,40,481,34],[735,44,481,38,"a"],[735,45,481,39],[735,46,481,40,"event_type"],[735,56,481,50],[735,61,481,55],[735,67,481,61],[735,68,481,62],[735,69,481,63,"length"],[735,75,481,69],[735,79,481,73],[735,80,481,74],[736,14,482,8,"comments"],[736,22,482,16],[736,24,482,18,"analytics"],[736,33,482,27],[736,35,482,29,"filter"],[736,41,482,35],[736,42,482,36,"a"],[736,43,482,37],[736,47,482,41,"a"],[736,48,482,42],[736,49,482,43,"event_type"],[736,59,482,53],[736,64,482,58],[736,73,482,67],[736,74,482,68],[736,75,482,69,"length"],[736,81,482,75],[736,85,482,79],[736,86,482,80],[737,14,483,8,"unique_users"],[737,26,483,20],[737,28,483,22],[737,32,483,26,"Set"],[737,35,483,29],[737,36,483,30,"analytics"],[737,45,483,39],[737,47,483,41,"map"],[737,50,483,44],[737,51,483,45,"a"],[737,52,483,46],[737,56,483,50,"a"],[737,57,483,51],[737,58,483,52,"user_id"],[737,65,483,59],[737,66,483,60],[737,67,483,61,"filter"],[737,73,483,67],[737,74,483,68,"Boolean"],[737,81,483,75],[737,82,483,76],[737,83,483,77],[737,84,483,78,"size"],[737,88,483,82],[737,92,483,86],[737,93,483,87],[738,14,484,8,"last_activity"],[738,27,484,21],[738,29,484,23,"analytics"],[738,38,484,32],[738,40,484,34,"length"],[738,46,484,40],[738,49,484,43,"analytics"],[738,58,484,52],[738,59,484,53,"analytics"],[738,68,484,62],[738,69,484,63,"length"],[738,75,484,69],[738,78,484,72],[738,79,484,73],[738,80,484,74],[738,81,484,75,"created_at"],[738,91,484,85],[738,94,484,88],[738,98,484,92],[739,14,485,8,"daily_stats"],[739,25,485,19],[739,27,485,21],[739,31,485,25],[739,32,485,26,"generateDailyStats"],[739,50,485,44],[739,51,485,45,"analytics"],[739,60,485,54],[739,64,485,58],[739,66,485,60],[739,67,485,61],[740,14,486,8,"top_countries"],[740,27,486,21],[740,29,486,23],[740,33,486,27],[740,34,486,28,"generateCountryStats"],[740,54,486,48],[740,55,486,49,"analytics"],[740,64,486,58],[740,68,486,62],[740,70,486,64],[741,12,487,6],[741,13,487,7],[742,12,489,6],[742,19,489,13,"stats"],[742,24,489,18],[743,10,490,4],[743,11,490,5],[743,12,490,6],[743,19,490,13,"error"],[743,24,490,18],[743,26,490,20],[744,12,491,6,"EventLogger"],[744,36,491,17],[744,37,491,18,"error"],[744,42,491,23],[744,43,491,24],[744,54,491,35],[744,56,491,37],[744,88,491,69],[744,90,491,71,"error"],[744,95,491,85],[744,96,491,86],[745,12,492,6],[745,19,492,13],[746,14,493,8,"views"],[746,19,493,13],[746,21,493,15],[746,22,493,16],[747,14,494,8,"executions"],[747,24,494,18],[747,26,494,20],[747,27,494,21],[748,14,495,8,"shares"],[748,20,495,14],[748,22,495,16],[748,23,495,17],[749,14,496,8,"downloads"],[749,23,496,17],[749,25,496,19],[749,26,496,20],[750,14,497,8,"likes"],[750,19,497,13],[750,21,497,15],[750,22,497,16],[751,14,498,8,"comments"],[751,22,498,16],[751,24,498,18],[751,25,498,19],[752,14,499,8,"unique_users"],[752,26,499,20],[752,28,499,22],[752,29,499,23],[753,14,500,8,"last_activity"],[753,27,500,21],[753,29,500,23],[753,33,500,27],[754,14,501,8,"daily_stats"],[754,25,501,19],[754,27,501,21],[754,29,501,23],[755,14,502,8,"top_countries"],[755,27,502,21],[755,29,502,23],[756,12,503,6],[756,13,503,7],[757,10,504,4],[758,8,505,2],[758,9,505,3],[759,8,505,3],[759,17,465,15,"getAutomationStats"],[759,35,465,33,"getAutomationStats"],[759,36,465,33,"_x9"],[759,39,465,33],[760,10,465,33],[760,17,465,33,"_getAutomationStats"],[760,36,465,33],[760,37,465,33,"apply"],[760,42,465,33],[760,49,465,33,"arguments"],[760,58,465,33],[761,8,465,33],[762,8,465,33],[762,15,465,15,"getAutomationStats"],[762,33,465,33],[763,6,465,33],[764,6,507,2],[765,0,508,0],[766,0,509,0],[767,6,507,2],[768,4,507,2],[769,6,507,2,"key"],[769,9,507,2],[770,6,507,2,"value"],[770,11,507,2],[771,8,507,2],[771,12,507,2,"_trackView"],[771,22,507,2],[771,29,507,2,"_asyncToGenerator2"],[771,47,507,2],[771,48,507,2,"default"],[771,55,507,2],[771,57,510,2],[771,68,510,25,"automationId"],[771,80,510,45],[771,82,510,47,"metadata"],[771,90,510,77],[771,92,510,94],[772,10,511,4],[772,16,511,10],[772,20,511,14],[772,21,511,15,"trackEvent"],[772,31,511,25],[772,32,511,26],[773,12,512,6,"automation_id"],[773,25,512,19],[773,27,512,21,"automationId"],[773,39,512,33],[774,12,513,6,"event_type"],[774,22,513,16],[774,24,513,18],[774,30,513,24],[775,12,514,6,"event_data"],[775,22,514,16],[775,24,514,18,"metadata"],[776,10,515,4],[776,11,515,5],[776,12,515,6],[777,8,516,2],[777,9,516,3],[778,8,516,3],[778,17,510,15,"trackView"],[778,26,510,24,"trackView"],[778,27,510,24,"_x0"],[778,30,510,24],[778,32,510,24,"_x1"],[778,35,510,24],[779,10,510,24],[779,17,510,24,"_trackView"],[779,27,510,24],[779,28,510,24,"apply"],[779,33,510,24],[779,40,510,24,"arguments"],[779,49,510,24],[780,8,510,24],[781,8,510,24],[781,15,510,15,"trackView"],[781,24,510,24],[782,6,510,24],[783,6,518,2],[784,0,519,0],[785,0,520,0],[786,6,518,2],[787,4,518,2],[788,6,518,2,"key"],[788,9,518,2],[789,6,518,2,"value"],[789,11,518,2],[790,8,518,2],[790,12,518,2,"_trackExecution"],[790,27,518,2],[790,34,518,2,"_asyncToGenerator2"],[790,52,518,2],[790,53,518,2,"default"],[790,60,518,2],[790,62,521,2],[790,73,521,30,"automationId"],[790,85,521,50],[790,87,521,52,"result"],[790,93,521,79],[790,95,521,96],[791,10,522,4],[791,16,522,10],[791,20,522,14],[791,21,522,15,"trackEvent"],[791,31,522,25],[791,32,522,26],[792,12,523,6,"automation_id"],[792,25,523,19],[792,27,523,21,"automationId"],[792,39,523,33],[793,12,524,6,"event_type"],[793,22,524,16],[793,24,524,18],[793,35,524,29],[794,12,525,6,"event_data"],[794,22,525,16],[794,24,525,18],[795,14,526,8,"success"],[795,21,526,15],[795,23,526,17,"result"],[795,29,526,23],[795,30,526,24,"success"],[795,37,526,31],[796,14,527,8,"execution_time"],[796,28,527,22],[796,30,527,24,"result"],[796,36,527,30],[796,37,527,31,"executionTime"],[796,50,527,44],[797,14,528,8,"steps_completed"],[797,29,528,23],[797,31,528,25,"result"],[797,37,528,31],[797,38,528,32,"stepsCompleted"],[797,52,528,46],[798,14,529,8,"total_steps"],[798,25,529,19],[798,27,529,21,"result"],[798,33,529,27],[798,34,529,28,"totalSteps"],[799,12,530,6],[800,10,531,4],[800,11,531,5],[800,12,531,6],[801,8,532,2],[801,9,532,3],[802,8,532,3],[802,17,521,15,"trackExecution"],[802,31,521,29,"trackExecution"],[802,32,521,29,"_x10"],[802,36,521,29],[802,38,521,29,"_x11"],[802,42,521,29],[803,10,521,29],[803,17,521,29,"_trackExecution"],[803,32,521,29],[803,33,521,29,"apply"],[803,38,521,29],[803,45,521,29,"arguments"],[803,54,521,29],[804,8,521,29],[805,8,521,29],[805,15,521,15,"trackExecution"],[805,29,521,29],[806,6,521,29],[807,6,534,2],[808,0,535,0],[809,0,536,0],[810,6,534,2],[811,4,534,2],[812,6,534,2,"key"],[812,9,534,2],[813,6,534,2,"value"],[813,11,534,2],[814,8,534,2],[814,12,534,2,"_trackShare"],[814,23,534,2],[814,30,534,2,"_asyncToGenerator2"],[814,48,534,2],[814,49,534,2,"default"],[814,56,534,2],[814,58,537,2],[814,69,537,26,"automationId"],[814,81,537,46],[814,83,537,48,"shareMethod"],[814,94,537,67],[814,96,537,84],[815,10,538,4],[815,16,538,10],[815,20,538,14],[815,21,538,15,"trackEvent"],[815,31,538,25],[815,32,538,26],[816,12,539,6,"automation_id"],[816,25,539,19],[816,27,539,21,"automationId"],[816,39,539,33],[817,12,540,6,"event_type"],[817,22,540,16],[817,24,540,18],[817,31,540,25],[818,12,541,6,"event_data"],[818,22,541,16],[818,24,541,18],[819,14,541,20,"method"],[819,20,541,26],[819,22,541,28,"shareMethod"],[820,12,541,40],[821,10,542,4],[821,11,542,5],[821,12,542,6],[822,8,543,2],[822,9,543,3],[823,8,543,3],[823,17,537,15,"trackShare"],[823,27,537,25,"trackShare"],[823,28,537,25,"_x12"],[823,32,537,25],[823,34,537,25,"_x13"],[823,38,537,25],[824,10,537,25],[824,17,537,25,"_trackShare"],[824,28,537,25],[824,29,537,25,"apply"],[824,34,537,25],[824,41,537,25,"arguments"],[824,50,537,25],[825,8,537,25],[826,8,537,25],[826,15,537,15,"trackShare"],[826,25,537,25],[827,6,537,25],[828,4,537,25],[829,6,537,25,"key"],[829,9,537,25],[830,6,537,25,"value"],[830,11,537,25],[830,13,813,2],[830,22,813,17,"generateSessionId"],[830,39,813,34,"generateSessionId"],[830,40,813,34],[830,42,813,45],[831,8,814,4],[831,15,814,11,"Date"],[831,19,814,15],[831,20,814,16,"now"],[831,23,814,19],[831,24,814,20],[831,25,814,21],[831,26,814,22,"toString"],[831,34,814,30],[831,35,814,31],[831,37,814,33],[831,38,814,34],[831,41,814,37,"Math"],[831,45,814,41],[831,46,814,42,"random"],[831,52,814,48],[831,53,814,49],[831,54,814,50],[831,55,814,51,"toString"],[831,63,814,59],[831,64,814,60],[831,66,814,62],[831,67,814,63],[831,68,814,64,"substr"],[831,74,814,70],[831,75,814,71],[831,76,814,72],[831,77,814,73],[832,6,815,2],[834,6,817,2],[835,0,818,0],[836,0,819,0],[837,4,817,2],[838,6,817,2,"key"],[838,9,817,2],[839,6,817,2,"value"],[839,11,817,2],[839,13,820,2],[839,22,820,17,"generateDailyStats"],[839,40,820,35,"generateDailyStats"],[839,41,820,36,"analytics"],[839,50,820,52],[839,52,820,130],[840,8,821,4],[840,12,821,10,"daily"],[840,17,821,86],[840,20,821,89],[840,21,821,90],[840,22,821,91],[841,8,823,4,"analytics"],[841,17,823,13],[841,18,823,14,"forEach"],[841,25,823,21],[841,26,823,22,"event"],[841,31,823,27],[841,35,823,31],[842,10,824,6],[842,14,824,12,"date"],[842,18,824,16],[842,21,824,19],[842,25,824,23,"Date"],[842,29,824,27],[842,30,824,28,"event"],[842,35,824,33],[842,36,824,34,"created_at"],[842,46,824,44],[842,47,824,45],[842,48,824,46,"toISOString"],[842,59,824,57],[842,60,824,58],[842,61,824,59],[842,62,824,60,"split"],[842,67,824,65],[842,68,824,66],[842,71,824,69],[842,72,824,70],[842,73,824,71],[842,74,824,72],[842,75,824,73],[843,10,825,6],[843,14,825,10],[843,15,825,11,"daily"],[843,20,825,16],[843,21,825,17,"date"],[843,25,825,21],[843,26,825,22],[843,28,825,24],[844,12,826,8,"daily"],[844,17,826,13],[844,18,826,14,"date"],[844,22,826,18],[844,23,826,19],[844,26,826,22],[845,14,826,24,"views"],[845,19,826,29],[845,21,826,31],[845,22,826,32],[846,14,826,34,"executions"],[846,24,826,44],[846,26,826,46],[846,27,826,47],[847,14,826,49,"shares"],[847,20,826,55],[847,22,826,57],[848,12,826,59],[848,13,826,60],[849,10,827,6],[850,10,829,6],[850,14,829,10,"event"],[850,19,829,15],[850,20,829,16,"event_type"],[850,30,829,26],[850,35,829,31],[850,41,829,37],[850,43,829,39,"daily"],[850,48,829,44],[850,49,829,45,"date"],[850,53,829,49],[850,54,829,50],[850,55,829,51,"views"],[850,60,829,56],[850,62,829,58],[851,10,830,6],[851,14,830,10,"event"],[851,19,830,15],[851,20,830,16,"event_type"],[851,30,830,26],[851,35,830,31],[851,46,830,42],[851,48,830,44,"daily"],[851,53,830,49],[851,54,830,50,"date"],[851,58,830,54],[851,59,830,55],[851,60,830,56,"executions"],[851,70,830,66],[851,72,830,68],[852,10,831,6],[852,14,831,10,"event"],[852,19,831,15],[852,20,831,16,"event_type"],[852,30,831,26],[852,35,831,31],[852,42,831,38],[852,44,831,40,"daily"],[852,49,831,45],[852,50,831,46,"date"],[852,54,831,50],[852,55,831,51],[852,56,831,52,"shares"],[852,62,831,58],[852,64,831,60],[853,8,832,4],[853,9,832,5],[853,10,832,6],[854,8,834,4],[854,15,834,11,"Object"],[854,21,834,17],[854,22,834,18,"entries"],[854,29,834,25],[854,30,834,26,"daily"],[854,35,834,31],[854,36,834,32],[854,37,835,7,"map"],[854,40,835,10],[854,41,835,11,"_ref2"],[854,46,835,11],[855,10,835,11],[855,14,835,11,"_ref3"],[855,19,835,11],[855,26,835,11,"_slicedToArray2"],[855,41,835,11],[855,42,835,11,"default"],[855,49,835,11],[855,51,835,11,"_ref2"],[855,56,835,11],[856,12,835,13,"date"],[856,16,835,17],[856,19,835,17,"_ref3"],[856,24,835,17],[857,12,835,19,"stats"],[857,17,835,24],[857,20,835,24,"_ref3"],[857,25,835,24],[858,10,835,24],[858,17,835,31],[859,12,835,33,"date"],[859,16,835,37],[860,12,835,39],[860,15,835,42,"stats"],[861,10,835,48],[861,11,835,49],[862,8,835,49],[862,9,835,50],[862,10,835,51],[862,11,836,7,"sort"],[862,15,836,11],[862,16,836,12],[862,17,836,13,"a"],[862,18,836,14],[862,20,836,16,"b"],[862,21,836,17],[862,26,836,22,"a"],[862,27,836,23],[862,28,836,24,"date"],[862,32,836,28],[862,33,836,29,"localeCompare"],[862,46,836,42],[862,47,836,43,"b"],[862,48,836,44],[862,49,836,45,"date"],[862,53,836,49],[862,54,836,50],[862,55,836,51],[862,56,837,7,"slice"],[862,61,837,12],[862,65,837,16],[862,66,837,17],[862,67,837,18],[862,68,837,19],[863,6,838,2],[865,6,840,2],[866,0,841,0],[867,0,842,0],[868,4,840,2],[869,6,840,2,"key"],[869,9,840,2],[870,6,840,2,"value"],[870,11,840,2],[870,13,843,2],[870,22,843,17,"generateCountryStats"],[870,42,843,37,"generateCountryStats"],[870,43,843,38,"analytics"],[870,52,843,54],[870,54,843,99],[871,8,844,4],[871,12,844,10,"countries"],[871,21,844,43],[871,24,844,46],[871,25,844,47],[871,26,844,48],[872,8,846,4,"analytics"],[872,17,846,13],[872,18,846,14,"forEach"],[872,25,846,21],[872,26,846,22,"event"],[872,31,846,27],[872,35,846,31],[873,10,847,6],[873,14,847,12,"country"],[873,21,847,19],[873,24,847,22,"event"],[873,29,847,27],[873,30,847,28,"location_data"],[873,43,847,41],[873,45,847,43,"country"],[873,52,847,50],[873,56,847,54],[873,65,847,63],[874,10,848,6,"countries"],[874,19,848,15],[874,20,848,16,"country"],[874,27,848,23],[874,28,848,24],[874,31,848,27],[874,32,848,28,"countries"],[874,41,848,37],[874,42,848,38,"country"],[874,49,848,45],[874,50,848,46],[874,54,848,50],[874,55,848,51],[874,59,848,55],[874,60,848,56],[875,8,849,4],[875,9,849,5],[875,10,849,6],[876,8,851,4],[876,15,851,11,"Object"],[876,21,851,17],[876,22,851,18,"entries"],[876,29,851,25],[876,30,851,26,"countries"],[876,39,851,35],[876,40,851,36],[876,41,852,7,"map"],[876,44,852,10],[876,45,852,11,"_ref4"],[876,50,852,11],[877,10,852,11],[877,14,852,11,"_ref5"],[877,19,852,11],[877,26,852,11,"_slicedToArray2"],[877,41,852,11],[877,42,852,11,"default"],[877,49,852,11],[877,51,852,11,"_ref4"],[877,56,852,11],[878,12,852,13,"country"],[878,19,852,20],[878,22,852,20,"_ref5"],[878,27,852,20],[879,12,852,22,"count"],[879,17,852,27],[879,20,852,27,"_ref5"],[879,25,852,27],[880,10,852,27],[880,17,852,34],[881,12,852,36,"country"],[881,19,852,43],[882,12,852,45,"count"],[883,10,852,51],[883,11,852,52],[884,8,852,52],[884,9,852,53],[884,10,852,54],[884,11,853,7,"sort"],[884,15,853,11],[884,16,853,12],[884,17,853,13,"a"],[884,18,853,14],[884,20,853,16,"b"],[884,21,853,17],[884,26,853,22,"b"],[884,27,853,23],[884,28,853,24,"count"],[884,33,853,29],[884,36,853,32,"a"],[884,37,853,33],[884,38,853,34,"count"],[884,43,853,39],[884,44,853,40],[884,45,854,7,"slice"],[884,50,854,12],[884,51,854,13],[884,52,854,14],[884,54,854,16],[884,56,854,18],[884,57,854,19],[884,58,854,20],[884,59,854,21],[885,6,855,2],[887,6,857,2],[888,0,858,0],[889,0,859,0],[890,4,857,2],[891,6,857,2,"key"],[891,9,857,2],[892,6,857,2,"value"],[892,11,857,2],[893,8,857,2],[893,12,857,2,"_getPopularAutomations"],[893,34,857,2],[893,41,857,2,"_asyncToGenerator2"],[893,59,857,2],[893,60,857,2,"default"],[893,67,857,2],[893,69,860,2],[893,82,860,73],[894,10,860,73],[894,14,860,37,"limit"],[894,19,860,50],[894,22,860,50,"arguments"],[894,31,860,50],[894,32,860,50,"length"],[894,38,860,50],[894,46,860,50,"arguments"],[894,55,860,50],[894,63,860,50,"undefined"],[894,72,860,50],[894,75,860,50,"arguments"],[894,84,860,50],[894,90,860,53],[894,92,860,55],[895,10,861,4],[895,14,861,8],[896,12,862,6],[896,16,862,6,"_yield$supabase$from$4"],[896,38,862,6],[896,47,862,36,"supabase"],[896,63,862,44],[896,64,863,9,"from"],[896,68,863,13],[896,69,863,14],[896,96,863,41],[896,97,863,42],[896,98,864,9,"select"],[896,104,864,15],[896,105,864,16],[896,108,864,19],[896,109,864,20],[896,110,865,9,"order"],[896,115,865,14],[896,116,865,15],[896,128,865,27],[896,130,865,29],[897,16,865,31,"ascending"],[897,25,865,40],[897,27,865,42],[898,14,865,48],[898,15,865,49],[898,16,865,50],[898,17,866,9,"limit"],[898,22,866,14],[898,23,866,15,"limit"],[898,28,866,20],[898,29,866,21],[899,14,862,14,"data"],[899,18,862,18],[899,21,862,18,"_yield$supabase$from$4"],[899,43,862,18],[899,44,862,14,"data"],[899,48,862,18],[900,14,862,20,"error"],[900,19,862,25],[900,22,862,25,"_yield$supabase$from$4"],[900,44,862,25],[900,45,862,20,"error"],[900,50,862,25],[901,12,868,6],[901,16,868,10,"error"],[901,21,868,15],[901,23,868,17],[901,29,868,23,"error"],[901,34,868,28],[902,12,869,6],[902,19,869,13,"data"],[902,23,869,17],[902,27,869,21],[902,29,869,23],[903,10,870,4],[903,11,870,5],[903,12,870,6],[903,19,870,13,"error"],[903,24,870,18],[903,26,870,20],[904,12,871,6,"EventLogger"],[904,36,871,17],[904,37,871,18,"error"],[904,42,871,23],[904,43,871,24],[904,54,871,35],[904,56,871,37],[904,92,871,73],[904,94,871,75,"error"],[904,99,871,89],[904,100,871,90],[905,12,872,6],[905,19,872,13],[905,21,872,15],[906,10,873,4],[907,8,874,2],[907,9,874,3],[908,8,874,3],[908,17,860,15,"getPopularAutomations"],[908,38,860,36,"getPopularAutomations"],[908,39,860,36],[909,10,860,36],[909,17,860,36,"_getPopularAutomations"],[909,39,860,36],[909,40,860,36,"apply"],[909,45,860,36],[909,52,860,36,"arguments"],[909,61,860,36],[910,8,860,36],[911,8,860,36],[911,15,860,15,"getPopularAutomations"],[911,36,860,36],[912,6,860,36],[913,4,860,36],[914,2,860,36],[915,2,133,2],[916,2,123,13,"AnalyticsService"],[916,18,123,29],[916,19,134,26,"CONSENT_KEY"],[916,30,134,37],[916,33,134,40],[916,52,134,59],[917,2,123,13,"AnalyticsService"],[917,18,123,29],[917,19,135,26,"USER_ID_KEY"],[917,30,135,37],[917,33,135,40],[917,52,135,59],[918,2,123,13,"AnalyticsService"],[918,18,123,29],[918,19,136,26,"ANONYMOUS_ID_KEY"],[918,35,136,42],[918,38,136,45],[918,62,136,69],[919,2,123,13,"AnalyticsService"],[919,18,123,29],[919,19,137,26,"SESSION_ID_KEY"],[919,33,137,40],[919,36,137,43],[919,58,137,65],[920,2,123,13,"AnalyticsService"],[920,18,123,29],[920,19,138,26,"USER_PROPERTIES_KEY"],[920,38,138,45],[920,41,138,48],[920,68,138,75],[921,2,123,13,"AnalyticsService"],[921,18,123,29],[921,19,139,26,"OFFLINE_EVENTS_KEY"],[921,37,139,44],[921,40,139,47],[921,66,139,73],[922,0,139,73],[922,3]],"functionMap":{"names":["<global>","AnalyticsService","constructor","getInstance","initialize","loadPersistedData._catch$argument_0","setConsent","identify","reset","setUserProperties","track","trackScreen","time","fn._finally$argument_0","trackRevenue","flush","trackEvent","getAutomationStats","analytics.filter$argument_0","analytics.map$argument_0","trackView","trackExecution","trackShare","hasConsent","shouldTrackEvent","enrichProperties","buildContext","loadPersistedData","setupPeriodicFlush","setInterval$argument_0","setupSessionManagement","startNewSession","loadOfflineEvents","storeOfflineEvents","sendEventBatch","batch.events.map$argument_0","checkNetworkStatus","generateSessionId","generateAnonymousId","generateBatchId","generateDailyStats","analytics.forEach$argument_0","Object.entries.map$argument_0","Object.entries.map.sort$argument_0","generateCountryStats","getPopularAutomations"],"mappings":"AAA;OC0H;ECkB;GDK;EEK;GFK;EGK;qCCU;ODE;GHmC;EKK;GLwB;EMK;GNmB;EOK;GPqB;EQK;GRW;ESK;GT6B;EUK;GVK;EWK;wBCG;KDM;GXC;EaK;GbM;EcK;GdoC;EeK;GfyC;EgBK;iCCY,4BD;sCCC,iCD;kCCC,6BD;qCCC,gCD;iCCC,4BD;oCCC,+BD;6CEC,cF;GhBsB;EmBK;GnBM;EoBK;GpBW;EqBK;GrBM;EsBK;GtBE;EuBK;GvBuB;EwBK;GxBQ;EyBK;GzBiB;E0BK;G1BuC;E2BK;gBCC;KDI;G3BC;E6BK;gBDE;KCK;G7BC;E8BK;G9Ba;E+BK;G/BY;EgCK;GhCiB;EiCK;wCCK;ODkB;GjCY;EmCK;GnCI;EoCK;GpCE;EqCK;GrCE;EsCK;GtCE;EoCK;GpCE;EuCK;sBCG;KDS;WEG,uCF;YGC,sCH;GvCE;E2CK;sBHG;KGG;WFG,0CE;YDC,2BC;G3CE;E4CK;G5Cc"}},"type":"js/module"}]}