{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./Colors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":14},"end":{"line":11,"column":18,"index":131}}],"key":"zR6Hzer+l+w/2Wpfyy2UztSb1Pk=","exportNames":["*"]}},{"name":"./core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":182},"end":{"line":13,"column":37,"index":219}}],"key":"0ONCEUiDM4TuRiJMnypk4k7v4nE=","exportNames":["*"]}},{"name":"./culori","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":220},"end":{"line":14,"column":30,"index":250}}],"key":"4qS0vmAbB8g1HsXN+jyiAPHnocA=","exportNames":["*"]}},{"name":"./errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":251},"end":{"line":15,"column":43,"index":294}}],"key":"rEld05quROH+iA6QLT6kkvqJ/qc=","exportNames":["*"]}},{"name":"./hook/useSharedValue","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":295},"end":{"line":16,"column":55,"index":350}}],"key":"i4Ic8zb0vc+XX5SmwW/ZGhEhmb4=","exportNames":["*"]}},{"name":"./interpolation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":351},"end":{"line":17,"column":61,"index":412}}],"key":"Sh+s0sg7+1xEfnYiVkwzHVXvd5Q=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.interpolateColor = exports.Extrapolate = exports.ColorSpace = void 0;\n  exports.useInterpolateConfig = useInterpolateConfig;\n  var _Colors = require(_dependencyMap[1], \"./Colors\");\n  var _core = require(_dependencyMap[2], \"./core\");\n  var _culori = _interopRequireDefault(require(_dependencyMap[3], \"./culori\"));\n  var _errors = require(_dependencyMap[4], \"./errors\");\n  var _useSharedValue = require(_dependencyMap[5], \"./hook/useSharedValue\");\n  var _interpolation = require(_dependencyMap[6], \"./interpolation\");\n  /** @deprecated Please use Extrapolation instead */\n  var Extrapolate = exports.Extrapolate = _interpolation.Extrapolation;\n\n  /**\n   * Options for color interpolation.\n   *\n   * @param gamma - Gamma value used in gamma correction. Defaults to `2.2`.\n   * @param useCorrectedHSVInterpolation - Whether to reduce the number of colors\n   *   the interpolation has to go through. Defaults to `true`.\n   */\n  var _worklet_8351409175469_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs1(value,inputRange,colors,options){const{interpolate,Extrapolation,hsvToColor}=this.__closure;let h=0;const{useCorrectedHSVInterpolation=true}=options;if(useCorrectedHSVInterpolation){const correctedInputRange=[inputRange[0]];const originalH=colors.h;const correctedH=[originalH[0]];for(let i=1;i<originalH.length;++i){const d=originalH[i]-originalH[i-1];if(originalH[i]>originalH[i-1]&&d>0.5){correctedInputRange.push(inputRange[i]);correctedInputRange.push(inputRange[i]+0.00001);correctedH.push(originalH[i]-1);correctedH.push(originalH[i]);}else if(originalH[i]<originalH[i-1]&&d<-0.5){correctedInputRange.push(inputRange[i]);correctedInputRange.push(inputRange[i]+0.00001);correctedH.push(originalH[i]+1);correctedH.push(originalH[i]);}else{correctedInputRange.push(inputRange[i]);correctedH.push(originalH[i]);}}h=(interpolate(value,correctedInputRange,correctedH,Extrapolation.CLAMP)+1)%1;}else{h=interpolate(value,inputRange,colors.h,Extrapolation.CLAMP);}const s=interpolate(value,inputRange,colors.s,Extrapolation.CLAMP);const v=interpolate(value,inputRange,colors.v,Extrapolation.CLAMP);const a=interpolate(value,inputRange,colors.a,Extrapolation.CLAMP);return hsvToColor(h,s,v,a);}\",\n    location: \"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_interpolateColorTs1\\\",\\\"value\\\",\\\"inputRange\\\",\\\"colors\\\",\\\"options\\\",\\\"interpolate\\\",\\\"Extrapolation\\\",\\\"hsvToColor\\\",\\\"__closure\\\",\\\"h\\\",\\\"useCorrectedHSVInterpolation\\\",\\\"correctedInputRange\\\",\\\"originalH\\\",\\\"correctedH\\\",\\\"i\\\",\\\"length\\\",\\\"d\\\",\\\"push\\\",\\\"CLAMP\\\",\\\"s\\\",\\\"v\\\",\\\"a\\\"],\\\"sources\\\":[\\\"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\\\"],\\\"mappings\\\":\\\"AAiC6B,QAC3B,CAAAA,yCAIGA,CAAAC,KAAA,CAAAC,UAAA,CAAAC,MAAA,CAAAC,OAAA,QAAAC,WAAA,CAAAC,aAAA,CAAAC,UAAA,OAAAC,SAAA,CAEH,GAAI,CAAAC,CAAC,CAAG,CAAC,CACT,KAAM,CAAEC,4BAA4B,CAAG,IAAK,CAAC,CAAGN,OAAO,CACvD,GAAIM,4BAA4B,CAAE,CAKhC,KAAM,CAAAC,mBAAmB,CAAG,CAACT,UAAU,CAAC,CAAC,CAAC,CAAC,CAC3C,KAAM,CAAAU,SAAS,CAAGT,MAAM,CAACM,CAAC,CAC1B,KAAM,CAAAI,UAAU,CAAG,CAACD,SAAS,CAAC,CAAC,CAAC,CAAC,CAEjC,IAAK,GAAI,CAAAE,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,SAAS,CAACG,MAAM,CAAE,EAAED,CAAC,CAAE,CACzC,KAAM,CAAAE,CAAC,CAAGJ,SAAS,CAACE,CAAC,CAAC,CAAGF,SAAS,CAACE,CAAC,CAAG,CAAC,CAAC,CACzC,GAAIF,SAAS,CAACE,CAAC,CAAC,CAAGF,SAAS,CAACE,CAAC,CAAG,CAAC,CAAC,EAAIE,CAAC,CAAG,GAAG,CAAE,CAC9CL,mBAAmB,CAACM,IAAI,CAACf,UAAU,CAACY,CAAC,CAAC,CAAC,CACvCH,mBAAmB,CAACM,IAAI,CAACf,UAAU,CAACY,CAAC,CAAC,CAAG,OAAO,CAAC,CACjDD,UAAU,CAACI,IAAI,CAACL,SAAS,CAACE,CAAC,CAAC,CAAG,CAAC,CAAC,CACjCD,UAAU,CAACI,IAAI,CAACL,SAAS,CAACE,CAAC,CAAC,CAAC,CAC/B,CAAC,IAAM,IAAIF,SAAS,CAACE,CAAC,CAAC,CAAGF,SAAS,CAACE,CAAC,CAAG,CAAC,CAAC,EAAIE,CAAC,CAAG,CAAC,GAAG,CAAE,CACtDL,mBAAmB,CAACM,IAAI,CAACf,UAAU,CAACY,CAAC,CAAC,CAAC,CACvCH,mBAAmB,CAACM,IAAI,CAACf,UAAU,CAACY,CAAC,CAAC,CAAG,OAAO,CAAC,CACjDD,UAAU,CAACI,IAAI,CAACL,SAAS,CAACE,CAAC,CAAC,CAAG,CAAC,CAAC,CACjCD,UAAU,CAACI,IAAI,CAACL,SAAS,CAACE,CAAC,CAAC,CAAC,CAC/B,CAAC,IAAM,CACLH,mBAAmB,CAACM,IAAI,CAACf,UAAU,CAACY,CAAC,CAAC,CAAC,CACvCD,UAAU,CAACI,IAAI,CAACL,SAAS,CAACE,CAAC,CAAC,CAAC,CAC/B,CACF,CACAL,CAAC,CACC,CAACJ,WAAW,CACVJ,KAAK,CACLU,mBAAmB,CACnBE,UAAU,CACVP,aAAa,CAACY,KAChB,CAAC,CACC,CAAC,EACH,CAAC,CACL,CAAC,IAAM,CACLT,CAAC,CAAGJ,WAAW,CAACJ,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAACM,CAAC,CAAEH,aAAa,CAACY,KAAK,CAAC,CACnE,CACA,KAAM,CAAAC,CAAC,CAAGd,WAAW,CAACJ,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAACgB,CAAC,CAAEb,aAAa,CAACY,KAAK,CAAC,CACvE,KAAM,CAAAE,CAAC,CAAGf,WAAW,CAACJ,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAACiB,CAAC,CAAEd,aAAa,CAACY,KAAK,CAAC,CACvE,KAAM,CAAAG,CAAC,CAAGhB,WAAW,CAACJ,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAACkB,CAAC,CAAEf,aAAa,CAACY,KAAK,CAAC,CACvE,MAAO,CAAAX,UAAU,CAACE,CAAC,CAAEU,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAC,CAC/B\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var interpolateColorsHSV = function () {\n    var _e = [new global.Error(), -4, -27];\n    var reactNativeReanimated_interpolateColorTs1 = function reactNativeReanimated_interpolateColorTs1(value, inputRange, colors, options) {\n      var h = 0;\n      var _options$useCorrected = options.useCorrectedHSVInterpolation,\n        useCorrectedHSVInterpolation = _options$useCorrected === void 0 ? true : _options$useCorrected;\n      if (useCorrectedHSVInterpolation) {\n        // if the difference between hues in a range is > 180 deg\n        // then move the hue at the right end of the range +/- 360 deg\n        // and add the next point in the original place + 0.00001 with original hue\n        // to not break the next range\n        var correctedInputRange = [inputRange[0]];\n        var originalH = colors.h;\n        var correctedH = [originalH[0]];\n        for (var i = 1; i < originalH.length; ++i) {\n          var d = originalH[i] - originalH[i - 1];\n          if (originalH[i] > originalH[i - 1] && d > 0.5) {\n            correctedInputRange.push(inputRange[i]);\n            correctedInputRange.push(inputRange[i] + 0.00001);\n            correctedH.push(originalH[i] - 1);\n            correctedH.push(originalH[i]);\n          } else if (originalH[i] < originalH[i - 1] && d < -0.5) {\n            correctedInputRange.push(inputRange[i]);\n            correctedInputRange.push(inputRange[i] + 0.00001);\n            correctedH.push(originalH[i] + 1);\n            correctedH.push(originalH[i]);\n          } else {\n            correctedInputRange.push(inputRange[i]);\n            correctedH.push(originalH[i]);\n          }\n        }\n        h = ((0, _interpolation.interpolate)(value, correctedInputRange, correctedH, _interpolation.Extrapolation.CLAMP) + 1) % 1;\n      } else {\n        h = (0, _interpolation.interpolate)(value, inputRange, colors.h, _interpolation.Extrapolation.CLAMP);\n      }\n      var s = (0, _interpolation.interpolate)(value, inputRange, colors.s, _interpolation.Extrapolation.CLAMP);\n      var v = (0, _interpolation.interpolate)(value, inputRange, colors.v, _interpolation.Extrapolation.CLAMP);\n      var a = (0, _interpolation.interpolate)(value, inputRange, colors.a, _interpolation.Extrapolation.CLAMP);\n      return (0, _Colors.hsvToColor)(h, s, v, a);\n    };\n    reactNativeReanimated_interpolateColorTs1.__closure = {\n      interpolate: _interpolation.interpolate,\n      Extrapolation: _interpolation.Extrapolation,\n      hsvToColor: _Colors.hsvToColor\n    };\n    reactNativeReanimated_interpolateColorTs1.__workletHash = 8351409175469;\n    reactNativeReanimated_interpolateColorTs1.__initData = _worklet_8351409175469_init_data;\n    reactNativeReanimated_interpolateColorTs1.__stackDetails = _e;\n    return reactNativeReanimated_interpolateColorTs1;\n  }();\n  var _worklet_4368433701766_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs2(x,gamma){return x.map(function(v){return Math.pow(v/255,gamma);});}\",\n    location: \"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_interpolateColorTs2\\\",\\\"x\\\",\\\"gamma\\\",\\\"map\\\",\\\"v\\\",\\\"Math\\\",\\\"pow\\\"],\\\"sources\\\":[\\\"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\\\"],\\\"mappings\\\":\\\"AAsFsB,QAAC,CAAAA,yCAAyCA,CAAAC,CAAA,CAAAC,KAAA,EAE9D,MAAO,CAAAD,CAAC,CAACE,GAAG,CAAE,SAAAC,CAAC,QAAK,CAAAC,IAAI,CAACC,GAAG,CAACF,CAAC,CAAG,GAAG,CAAEF,KAAK,CAAC,GAAC,CAC/C\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var toLinearSpace = function () {\n    var _e = [new global.Error(), 1, -27];\n    var reactNativeReanimated_interpolateColorTs2 = function reactNativeReanimated_interpolateColorTs2(x, gamma) {\n      return x.map(function (v) {\n        return Math.pow(v / 255, gamma);\n      });\n    };\n    reactNativeReanimated_interpolateColorTs2.__closure = {};\n    reactNativeReanimated_interpolateColorTs2.__workletHash = 4368433701766;\n    reactNativeReanimated_interpolateColorTs2.__initData = _worklet_4368433701766_init_data;\n    reactNativeReanimated_interpolateColorTs2.__stackDetails = _e;\n    return reactNativeReanimated_interpolateColorTs2;\n  }();\n  var _worklet_6610343372134_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs3(x,gamma){return Math.round(Math.pow(x,1/gamma)*255);}\",\n    location: \"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_interpolateColorTs3\\\",\\\"x\\\",\\\"gamma\\\",\\\"Math\\\",\\\"round\\\",\\\"pow\\\"],\\\"sources\\\":[\\\"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\\\"],\\\"mappings\\\":\\\"AA2FqB,QAAC,CAAAA,yCAAqCA,CAAAC,CAAA,CAAAC,KAAA,EAEzD,MAAO,CAAAC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACJ,CAAC,CAAE,CAAC,CAAGC,KAAK,CAAC,CAAG,GAAG,CAAC,CACjD\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var toGammaSpace = function () {\n    var _e = [new global.Error(), 1, -27];\n    var reactNativeReanimated_interpolateColorTs3 = function reactNativeReanimated_interpolateColorTs3(x, gamma) {\n      return Math.round(Math.pow(x, 1 / gamma) * 255);\n    };\n    reactNativeReanimated_interpolateColorTs3.__closure = {};\n    reactNativeReanimated_interpolateColorTs3.__workletHash = 6610343372134;\n    reactNativeReanimated_interpolateColorTs3.__initData = _worklet_6610343372134_init_data;\n    reactNativeReanimated_interpolateColorTs3.__stackDetails = _e;\n    return reactNativeReanimated_interpolateColorTs3;\n  }();\n  var _worklet_4309093770970_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs4(value,inputRange,colors,options){const{toLinearSpace,interpolate,Extrapolation,rgbaColor,toGammaSpace}=this.__closure;const{gamma=2.2}=options;let{r:outputR,g:outputG,b:outputB}=colors;if(gamma!==1){outputR=toLinearSpace(outputR,gamma);outputG=toLinearSpace(outputG,gamma);outputB=toLinearSpace(outputB,gamma);}const r=interpolate(value,inputRange,outputR,Extrapolation.CLAMP);const g=interpolate(value,inputRange,outputG,Extrapolation.CLAMP);const b=interpolate(value,inputRange,outputB,Extrapolation.CLAMP);const a=interpolate(value,inputRange,colors.a,Extrapolation.CLAMP);if(gamma===1){return rgbaColor(r,g,b,a);}return rgbaColor(toGammaSpace(r,gamma),toGammaSpace(g,gamma),toGammaSpace(b,gamma),a);}\",\n    location: \"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_interpolateColorTs4\\\",\\\"value\\\",\\\"inputRange\\\",\\\"colors\\\",\\\"options\\\",\\\"toLinearSpace\\\",\\\"interpolate\\\",\\\"Extrapolation\\\",\\\"rgbaColor\\\",\\\"toGammaSpace\\\",\\\"__closure\\\",\\\"gamma\\\",\\\"r\\\",\\\"outputR\\\",\\\"g\\\",\\\"outputG\\\",\\\"b\\\",\\\"outputB\\\",\\\"CLAMP\\\",\\\"a\\\"],\\\"sources\\\":[\\\"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\\\"],\\\"mappings\\\":\\\"AAgG6B,QAC3B,CAAAA,yCAIGA,CAAAC,KAAA,CAAAC,UAAA,CAAAC,MAAA,CAAAC,OAAA,QAAAC,aAAA,CAAAC,WAAA,CAAAC,aAAA,CAAAC,SAAA,CAAAC,YAAA,OAAAC,SAAA,CAEH,KAAM,CAAEC,KAAK,CAAG,GAAI,CAAC,CAAGP,OAAO,CAC/B,GAAI,CAAEQ,CAAC,CAAEC,OAAO,CAAEC,CAAC,CAAEC,OAAO,CAAEC,CAAC,CAAEC,OAAQ,CAAC,CAAGd,MAAM,CACnD,GAAIQ,KAAK,GAAK,CAAC,CAAE,CACfE,OAAO,CAAGR,aAAa,CAACQ,OAAO,CAAEF,KAAK,CAAC,CACvCI,OAAO,CAAGV,aAAa,CAACU,OAAO,CAAEJ,KAAK,CAAC,CACvCM,OAAO,CAAGZ,aAAa,CAACY,OAAO,CAAEN,KAAK,CAAC,CACzC,CACA,KAAM,CAAAC,CAAC,CAAGN,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEW,OAAO,CAAEN,aAAa,CAACW,KAAK,CAAC,CACtE,KAAM,CAAAJ,CAAC,CAAGR,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEa,OAAO,CAAER,aAAa,CAACW,KAAK,CAAC,CACtE,KAAM,CAAAF,CAAC,CAAGV,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEe,OAAO,CAAEV,aAAa,CAACW,KAAK,CAAC,CACtE,KAAM,CAAAC,CAAC,CAAGb,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAACgB,CAAC,CAAEZ,aAAa,CAACW,KAAK,CAAC,CACvE,GAAIP,KAAK,GAAK,CAAC,CAAE,CACf,MAAO,CAAAH,SAAS,CAACI,CAAC,CAAEE,CAAC,CAAEE,CAAC,CAAEG,CAAC,CAAC,CAC9B,CACA,MAAO,CAAAX,SAAS,CACdC,YAAY,CAACG,CAAC,CAAED,KAAK,CAAC,CACtBF,YAAY,CAACK,CAAC,CAAEH,KAAK,CAAC,CACtBF,YAAY,CAACO,CAAC,CAAEL,KAAK,CAAC,CACtBQ,CACF,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var interpolateColorsRGB = function () {\n    var _e = [new global.Error(), -6, -27];\n    var reactNativeReanimated_interpolateColorTs4 = function reactNativeReanimated_interpolateColorTs4(value, inputRange, colors, options) {\n      var _options$gamma = options.gamma,\n        gamma = _options$gamma === void 0 ? 2.2 : _options$gamma;\n      var outputR = colors.r,\n        outputG = colors.g,\n        outputB = colors.b;\n      if (gamma !== 1) {\n        outputR = toLinearSpace(outputR, gamma);\n        outputG = toLinearSpace(outputG, gamma);\n        outputB = toLinearSpace(outputB, gamma);\n      }\n      var r = (0, _interpolation.interpolate)(value, inputRange, outputR, _interpolation.Extrapolation.CLAMP);\n      var g = (0, _interpolation.interpolate)(value, inputRange, outputG, _interpolation.Extrapolation.CLAMP);\n      var b = (0, _interpolation.interpolate)(value, inputRange, outputB, _interpolation.Extrapolation.CLAMP);\n      var a = (0, _interpolation.interpolate)(value, inputRange, colors.a, _interpolation.Extrapolation.CLAMP);\n      if (gamma === 1) {\n        return (0, _Colors.rgbaColor)(r, g, b, a);\n      }\n      return (0, _Colors.rgbaColor)(toGammaSpace(r, gamma), toGammaSpace(g, gamma), toGammaSpace(b, gamma), a);\n    };\n    reactNativeReanimated_interpolateColorTs4.__closure = {\n      toLinearSpace: toLinearSpace,\n      interpolate: _interpolation.interpolate,\n      Extrapolation: _interpolation.Extrapolation,\n      rgbaColor: _Colors.rgbaColor,\n      toGammaSpace: toGammaSpace\n    };\n    reactNativeReanimated_interpolateColorTs4.__workletHash = 4309093770970;\n    reactNativeReanimated_interpolateColorTs4.__initData = _worklet_4309093770970_init_data;\n    reactNativeReanimated_interpolateColorTs4.__stackDetails = _e;\n    return reactNativeReanimated_interpolateColorTs4;\n  }();\n  var _worklet_12431767338194_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs5(value,inputRange,colors,_options){const{interpolate,Extrapolation,culori,rgbaColor}=this.__closure;const l=interpolate(value,inputRange,colors.l,Extrapolation.CLAMP);const a=interpolate(value,inputRange,colors.a,Extrapolation.CLAMP);const b=interpolate(value,inputRange,colors.b,Extrapolation.CLAMP);const alpha=interpolate(value,inputRange,colors.alpha,Extrapolation.CLAMP);const{r:_r,g:_g,b:_b,alpha:_alpha}=culori.oklab.convert.toRgb({l:l,a:a,b:b,alpha:alpha});return rgbaColor(_r,_g,_b,_alpha);}\",\n    location: \"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_interpolateColorTs5\\\",\\\"value\\\",\\\"inputRange\\\",\\\"colors\\\",\\\"_options\\\",\\\"interpolate\\\",\\\"Extrapolation\\\",\\\"culori\\\",\\\"rgbaColor\\\",\\\"__closure\\\",\\\"l\\\",\\\"CLAMP\\\",\\\"a\\\",\\\"b\\\",\\\"alpha\\\",\\\"r\\\",\\\"_r\\\",\\\"g\\\",\\\"_g\\\",\\\"_b\\\",\\\"_alpha\\\",\\\"oklab\\\",\\\"convert\\\",\\\"toRgb\\\"],\\\"sources\\\":[\\\"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\\\"],\\\"mappings\\\":\\\"AA6H6B,QAC3B,CAAAA,yCAIGA,CAAAC,KAAA,CAAAC,UAAA,CAAAC,MAAA,CAAAC,QAAA,QAAAC,WAAA,CAAAC,aAAA,CAAAC,MAAA,CAAAC,SAAA,OAAAC,SAAA,CAEH,KAAM,CAAAC,CAAC,CAAGL,WAAW,CAACJ,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAACO,CAAC,CAAEJ,aAAa,CAACK,KAAK,CAAC,CACvE,KAAM,CAAAC,CAAC,CAAGP,WAAW,CAACJ,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAACS,CAAC,CAAEN,aAAa,CAACK,KAAK,CAAC,CACvE,KAAM,CAAAE,CAAC,CAAGR,WAAW,CAACJ,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAACU,CAAC,CAAEP,aAAa,CAACK,KAAK,CAAC,CACvE,KAAM,CAAAG,KAAK,CAAGT,WAAW,CACvBJ,KAAK,CACLC,UAAU,CACVC,MAAM,CAACW,KAAK,CACZR,aAAa,CAACK,KAChB,CAAC,CACD,KAAM,CACJI,CAAC,CAAEC,EAAE,CACLC,CAAC,CAAEC,EAAE,CACLL,CAAC,CAAEM,EAAE,CACLL,KAAK,CAAEM,MACT,CAAC,CAAGb,MAAM,CAACc,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,CAAEb,CAAC,CAADA,CAAC,CAAEE,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,CAAEC,KAAA,CAAAA,KAAM,CAAC,CAAC,CAClD,MAAO,CAAAN,SAAS,CAACQ,EAAE,CAAEE,EAAE,CAAEC,EAAE,CAAEC,MAAM,CAAC,CACtC\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var interpolateColorsLAB = function () {\n    var _e = [new global.Error(), -5, -27];\n    var reactNativeReanimated_interpolateColorTs5 = function reactNativeReanimated_interpolateColorTs5(value, inputRange, colors, _options) {\n      var l = (0, _interpolation.interpolate)(value, inputRange, colors.l, _interpolation.Extrapolation.CLAMP);\n      var a = (0, _interpolation.interpolate)(value, inputRange, colors.a, _interpolation.Extrapolation.CLAMP);\n      var b = (0, _interpolation.interpolate)(value, inputRange, colors.b, _interpolation.Extrapolation.CLAMP);\n      var alpha = (0, _interpolation.interpolate)(value, inputRange, colors.alpha, _interpolation.Extrapolation.CLAMP);\n      var _culori$oklab$convert = _culori.default.oklab.convert.toRgb({\n          l: l,\n          a: a,\n          b: b,\n          alpha: alpha\n        }),\n        _r = _culori$oklab$convert.r,\n        _g = _culori$oklab$convert.g,\n        _b = _culori$oklab$convert.b,\n        _alpha = _culori$oklab$convert.alpha;\n      return (0, _Colors.rgbaColor)(_r, _g, _b, _alpha);\n    };\n    reactNativeReanimated_interpolateColorTs5.__closure = {\n      interpolate: _interpolation.interpolate,\n      Extrapolation: _interpolation.Extrapolation,\n      culori: _culori.default,\n      rgbaColor: _Colors.rgbaColor\n    };\n    reactNativeReanimated_interpolateColorTs5.__workletHash = 12431767338194;\n    reactNativeReanimated_interpolateColorTs5.__initData = _worklet_12431767338194_init_data;\n    reactNativeReanimated_interpolateColorTs5.__stackDetails = _e;\n    return reactNativeReanimated_interpolateColorTs5;\n  }();\n  var _worklet_14521513267525_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs6(colors,convFromRgb){const{processColor,red,green,blue,opacity}=this.__closure;const ch1=[];const ch2=[];const ch3=[];const alpha=[];for(let i=0;i<colors.length;i++){const color=colors[i];const processedColor=processColor(color);if(typeof processedColor==='number'){const convertedColor=convFromRgb({r:red(processedColor),g:green(processedColor),b:blue(processedColor)});ch1.push(convertedColor.ch1);ch2.push(convertedColor.ch2);ch3.push(convertedColor.ch3);alpha.push(opacity(processedColor));}}return{ch1:ch1,ch2:ch2,ch3:ch3,alpha:alpha};}\",\n    location: \"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_interpolateColorTs6\\\",\\\"colors\\\",\\\"convFromRgb\\\",\\\"processColor\\\",\\\"red\\\",\\\"green\\\",\\\"blue\\\",\\\"opacity\\\",\\\"__closure\\\",\\\"ch1\\\",\\\"ch2\\\",\\\"ch3\\\",\\\"alpha\\\",\\\"i\\\",\\\"length\\\",\\\"color\\\",\\\"processedColor\\\",\\\"convertedColor\\\",\\\"r\\\",\\\"g\\\",\\\"b\\\",\\\"push\\\"],\\\"sources\\\":[\\\"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\\\"],\\\"mappings\\\":\\\"AAsJiC,QAC/B,CAAAA,yCAWGA,CAAAC,MAAA,CAAAC,WAAA,QAAAC,YAAA,CAAAC,GAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAC,OAAA,OAAAC,SAAA,CAEH,KAAM,CAAAC,GAAa,CAAG,EAAE,CACxB,KAAM,CAAAC,GAAa,CAAG,EAAE,CACxB,KAAM,CAAAC,GAAa,CAAG,EAAE,CACxB,KAAM,CAAAC,KAAe,CAAG,EAAE,CAE1B,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGZ,MAAM,CAACa,MAAM,CAAED,CAAC,EAAE,CAAE,CACtC,KAAM,CAAAE,KAAK,CAAGd,MAAM,CAACY,CAAC,CAAC,CACvB,KAAM,CAAAG,cAAc,CAAGb,YAAY,CAACY,KAAK,CAAC,CAC1C,GAAI,MAAO,CAAAC,cAAc,GAAK,QAAQ,CAAE,CACtC,KAAM,CAAAC,cAAc,CAAGf,WAAW,CAAC,CACjCgB,CAAC,CAAEd,GAAG,CAACY,cAAc,CAAC,CACtBG,CAAC,CAAEd,KAAK,CAACW,cAAc,CAAC,CACxBI,CAAC,CAAEd,IAAI,CAACU,cAAc,CACxB,CAAC,CAAC,CAEFP,GAAG,CAACY,IAAI,CAACJ,cAAc,CAACR,GAAG,CAAC,CAC5BC,GAAG,CAACW,IAAI,CAACJ,cAAc,CAACP,GAAG,CAAC,CAC5BC,GAAG,CAACU,IAAI,CAACJ,cAAc,CAACN,GAAG,CAAC,CAC5BC,KAAK,CAACS,IAAI,CAACd,OAAO,CAACS,cAAc,CAAC,CAAC,CACrC,CACF,CAEA,MAAO,CACLP,GAAG,CAAHA,GAAG,CACHC,GAAG,CAAHA,GAAG,CACHC,GAAG,CAAHA,GAAG,CACHC,KAAA,CAAAA,KACF,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var _splitColorsIntoChannels = function () {\n    var _e = [new global.Error(), -6, -27];\n    var reactNativeReanimated_interpolateColorTs6 = function reactNativeReanimated_interpolateColorTs6(colors, convFromRgb) {\n      var ch1 = [];\n      var ch2 = [];\n      var ch3 = [];\n      var alpha = [];\n      for (var i = 0; i < colors.length; i++) {\n        var color = colors[i];\n        var processedColor = (0, _Colors.processColor)(color);\n        if (typeof processedColor === 'number') {\n          var convertedColor = convFromRgb({\n            r: (0, _Colors.red)(processedColor),\n            g: (0, _Colors.green)(processedColor),\n            b: (0, _Colors.blue)(processedColor)\n          });\n          ch1.push(convertedColor.ch1);\n          ch2.push(convertedColor.ch2);\n          ch3.push(convertedColor.ch3);\n          alpha.push((0, _Colors.opacity)(processedColor));\n        }\n      }\n      return {\n        ch1: ch1,\n        ch2: ch2,\n        ch3: ch3,\n        alpha: alpha\n      };\n    };\n    reactNativeReanimated_interpolateColorTs6.__closure = {\n      processColor: _Colors.processColor,\n      red: _Colors.red,\n      green: _Colors.green,\n      blue: _Colors.blue,\n      opacity: _Colors.opacity\n    };\n    reactNativeReanimated_interpolateColorTs6.__workletHash = 14521513267525;\n    reactNativeReanimated_interpolateColorTs6.__initData = _worklet_14521513267525_init_data;\n    reactNativeReanimated_interpolateColorTs6.__stackDetails = _e;\n    return reactNativeReanimated_interpolateColorTs6;\n  }();\n  var _worklet_8624448141679_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs7(colors){const{_splitColorsIntoChannels}=this.__closure;const{ch1:ch1,ch2:ch2,ch3:ch3,alpha:alpha}=_splitColorsIntoChannels(colors,function(color){return{ch1:color.r,ch2:color.g,ch3:color.b};});return{r:ch1,g:ch2,b:ch3,a:alpha};}\",\n    location: \"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_interpolateColorTs7\\\",\\\"colors\\\",\\\"_splitColorsIntoChannels\\\",\\\"__closure\\\",\\\"ch1\\\",\\\"ch2\\\",\\\"ch3\\\",\\\"alpha\\\",\\\"color\\\",\\\"r\\\",\\\"g\\\",\\\"b\\\",\\\"a\\\"],\\\"sources\\\":[\\\"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\\\"],\\\"mappings\\\":\\\"AAyM0B,QACxB,CAAAA,yCACmBA,CAAAC,MAAA,QAAAC,wBAAA,OAAAC,SAAA,CAEnB,KAAM,CAAEC,GAAG,CAAHA,GAAG,CAAEC,GAAG,CAAHA,GAAG,CAAEC,GAAG,CAAHA,GAAG,CAAEC,KAAA,CAAAA,KAAM,CAAC,CAAGL,wBAAwB,CACvDD,MAAM,CACL,SAAAO,KAAK,QAAM,CACVJ,GAAG,CAAEI,KAAK,CAACC,CAAC,CACZJ,GAAG,CAAEG,KAAK,CAACE,CAAC,CACZJ,GAAG,CAAEE,KAAK,CAACG,CACb,CAAC,EACH,CAAC,CAED,MAAO,CACLF,CAAC,CAAEL,GAAG,CACNM,CAAC,CAAEL,GAAG,CACNM,CAAC,CAAEL,GAAG,CACNM,CAAC,CAAEL,KACL,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var getInterpolateRGB = function () {\n    var _e = [new global.Error(), -2, -27];\n    var reactNativeReanimated_interpolateColorTs7 = function reactNativeReanimated_interpolateColorTs7(colors) {\n      var _splitColorsIntoChann = _splitColorsIntoChannels(colors, function (color) {\n          return {\n            ch1: color.r,\n            ch2: color.g,\n            ch3: color.b\n          };\n        }),\n        ch1 = _splitColorsIntoChann.ch1,\n        ch2 = _splitColorsIntoChann.ch2,\n        ch3 = _splitColorsIntoChann.ch3,\n        alpha = _splitColorsIntoChann.alpha;\n      return {\n        r: ch1,\n        g: ch2,\n        b: ch3,\n        a: alpha\n      };\n    };\n    reactNativeReanimated_interpolateColorTs7.__closure = {\n      _splitColorsIntoChannels: _splitColorsIntoChannels\n    };\n    reactNativeReanimated_interpolateColorTs7.__workletHash = 8624448141679;\n    reactNativeReanimated_interpolateColorTs7.__initData = _worklet_8624448141679_init_data;\n    reactNativeReanimated_interpolateColorTs7.__stackDetails = _e;\n    return reactNativeReanimated_interpolateColorTs7;\n  }();\n  var _worklet_16817866662391_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs8(colors){const{_splitColorsIntoChannels,RGBtoHSV}=this.__closure;const{ch1:ch1,ch2:ch2,ch3:ch3,alpha:alpha}=_splitColorsIntoChannels(colors,function(color){const hsvColor=RGBtoHSV(color.r,color.g,color.b);return{ch1:hsvColor.h,ch2:hsvColor.s,ch3:hsvColor.v};});return{h:ch1,s:ch2,v:ch3,a:alpha};}\",\n    location: \"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_interpolateColorTs8\\\",\\\"colors\\\",\\\"_splitColorsIntoChannels\\\",\\\"RGBtoHSV\\\",\\\"__closure\\\",\\\"ch1\\\",\\\"ch2\\\",\\\"ch3\\\",\\\"alpha\\\",\\\"color\\\",\\\"hsvColor\\\",\\\"r\\\",\\\"g\\\",\\\"b\\\",\\\"h\\\",\\\"s\\\",\\\"v\\\",\\\"a\\\"],\\\"sources\\\":[\\\"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\\\"],\\\"mappings\\\":\\\"AAqO0B,QACxB,CAAAA,yCACmBA,CAAAC,MAAA,QAAAC,wBAAA,CAAAC,QAAA,OAAAC,SAAA,CAEnB,KAAM,CAAEC,GAAG,CAAHA,GAAG,CAAEC,GAAG,CAAHA,GAAG,CAAEC,GAAG,CAAHA,GAAG,CAAEC,KAAA,CAAAA,KAAM,CAAC,CAAGN,wBAAwB,CAACD,MAAM,CAAG,SAAAQ,KAAK,CAAK,CAC3E,KAAM,CAAAC,QAAQ,CAAGP,QAAQ,CAACM,KAAK,CAACE,CAAC,CAAEF,KAAK,CAACG,CAAC,CAAEH,KAAK,CAACI,CAAC,CAAC,CACpD,MAAO,CACLR,GAAG,CAAEK,QAAQ,CAACI,CAAC,CACfR,GAAG,CAAEI,QAAQ,CAACK,CAAC,CACfR,GAAG,CAAEG,QAAQ,CAACM,CAChB,CAAC,CACH,CAAC,CAAC,CAEF,MAAO,CACLF,CAAC,CAAET,GAAG,CACNU,CAAC,CAAET,GAAG,CACNU,CAAC,CAAET,GAAG,CACNU,CAAC,CAAET,KACL,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var getInterpolateHSV = function () {\n    var _e = [new global.Error(), -3, -27];\n    var reactNativeReanimated_interpolateColorTs8 = function reactNativeReanimated_interpolateColorTs8(colors) {\n      var _splitColorsIntoChann2 = _splitColorsIntoChannels(colors, function (color) {\n          var hsvColor = (0, _Colors.RGBtoHSV)(color.r, color.g, color.b);\n          return {\n            ch1: hsvColor.h,\n            ch2: hsvColor.s,\n            ch3: hsvColor.v\n          };\n        }),\n        ch1 = _splitColorsIntoChann2.ch1,\n        ch2 = _splitColorsIntoChann2.ch2,\n        ch3 = _splitColorsIntoChann2.ch3,\n        alpha = _splitColorsIntoChann2.alpha;\n      return {\n        h: ch1,\n        s: ch2,\n        v: ch3,\n        a: alpha\n      };\n    };\n    reactNativeReanimated_interpolateColorTs8.__closure = {\n      _splitColorsIntoChannels: _splitColorsIntoChannels,\n      RGBtoHSV: _Colors.RGBtoHSV\n    };\n    reactNativeReanimated_interpolateColorTs8.__workletHash = 16817866662391;\n    reactNativeReanimated_interpolateColorTs8.__initData = _worklet_16817866662391_init_data;\n    reactNativeReanimated_interpolateColorTs8.__stackDetails = _e;\n    return reactNativeReanimated_interpolateColorTs8;\n  }();\n  var _worklet_4292020092329_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs9(colors){const{_splitColorsIntoChannels,culori}=this.__closure;const{ch1:ch1,ch2:ch2,ch3:ch3,alpha:alpha}=_splitColorsIntoChannels(colors,function(color){const labColor=culori.oklab.convert.fromRgb(color);return{ch1:labColor.l,ch2:labColor.a,ch3:labColor.b};});return{l:ch1,a:ch2,b:ch3,alpha:alpha};}\",\n    location: \"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_interpolateColorTs9\\\",\\\"colors\\\",\\\"_splitColorsIntoChannels\\\",\\\"culori\\\",\\\"__closure\\\",\\\"ch1\\\",\\\"ch2\\\",\\\"ch3\\\",\\\"alpha\\\",\\\"color\\\",\\\"labColor\\\",\\\"oklab\\\",\\\"convert\\\",\\\"fromRgb\\\",\\\"l\\\",\\\"a\\\",\\\"b\\\"],\\\"sources\\\":[\\\"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\\\"],\\\"mappings\\\":\\\"AAiQ0B,QACxB,CAAAA,yCACmBA,CAAAC,MAAA,QAAAC,wBAAA,CAAAC,MAAA,OAAAC,SAAA,CAGnB,KAAM,CAAEC,GAAG,CAAHA,GAAG,CAAEC,GAAG,CAAHA,GAAG,CAAEC,GAAG,CAAHA,GAAG,CAAEC,KAAA,CAAAA,KAAM,CAAC,CAAGN,wBAAwB,CAACD,MAAM,CAAG,SAAAQ,KAAK,CAAK,CAC3E,KAAM,CAAAC,QAAQ,CAAGP,MAAM,CAACQ,KAAK,CAACC,OAAO,CAACC,OAAO,CAACJ,KAAK,CAAC,CACpD,MAAO,CACLJ,GAAG,CAAEK,QAAQ,CAACI,CAAC,CACfR,GAAG,CAAEI,QAAQ,CAACK,CAAC,CACfR,GAAG,CAAEG,QAAQ,CAACM,CAChB,CAAC,CACH,CAAC,CAAC,CAEF,MAAO,CACLF,CAAC,CAAET,GAAG,CACNU,CAAC,CAAET,GAAG,CACNU,CAAC,CAAET,GAAG,CACNC,KAAA,CAAAA,KACF,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var getInterpolateLAB = function () {\n    var _e = [new global.Error(), -3, -27];\n    var reactNativeReanimated_interpolateColorTs9 = function reactNativeReanimated_interpolateColorTs9(colors) {\n      var _splitColorsIntoChann3 = _splitColorsIntoChannels(colors, function (color) {\n          var labColor = _culori.default.oklab.convert.fromRgb(color);\n          return {\n            ch1: labColor.l,\n            ch2: labColor.a,\n            ch3: labColor.b\n          };\n        }),\n        ch1 = _splitColorsIntoChann3.ch1,\n        ch2 = _splitColorsIntoChann3.ch2,\n        ch3 = _splitColorsIntoChann3.ch3,\n        alpha = _splitColorsIntoChann3.alpha;\n      return {\n        l: ch1,\n        a: ch2,\n        b: ch3,\n        alpha: alpha\n      };\n    };\n    reactNativeReanimated_interpolateColorTs9.__closure = {\n      _splitColorsIntoChannels: _splitColorsIntoChannels,\n      culori: _culori.default\n    };\n    reactNativeReanimated_interpolateColorTs9.__workletHash = 4292020092329;\n    reactNativeReanimated_interpolateColorTs9.__initData = _worklet_4292020092329_init_data;\n    reactNativeReanimated_interpolateColorTs9.__stackDetails = _e;\n    return reactNativeReanimated_interpolateColorTs9;\n  }();\n\n  /**\n   * Lets you map a value from a range of numbers to a range of colors using\n   * linear interpolation.\n   *\n   * @param value - A number from the `input` range that is going to be mapped to\n   *   the color in the `output` range.\n   * @param inputRange - An array of numbers specifying the input range of the\n   *   interpolation.\n   * @param outputRange - An array of output colors values (eg. \"red\", \"#00FFCC\",\n   *   \"rgba(255, 0, 0, 0.5)\").\n   * @param colorSpace - The color space to use for interpolation. Defaults to\n   *   'RGB'.\n   * @param options - Additional options for interpolation -\n   *   {@link InterpolationOptions}.\n   * @returns The color after interpolation from within the output range in\n   *   rgba(r, g, b, a) format.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/utilities/interpolateColor\n   */\n  var _worklet_7877560832453_init_data = {\n    code: \"function interpolateColor_reactNativeReanimated_interpolateColorTs10(value,inputRange,outputRange,colorSpace='RGB',options={}){const{interpolateColorsHSV,getInterpolateHSV,interpolateColorsRGB,getInterpolateRGB,interpolateColorsLAB,getInterpolateLAB}=this.__closure;if(colorSpace==='HSV'){return interpolateColorsHSV(value,inputRange,getInterpolateHSV(outputRange),options);}else if(colorSpace==='RGB'){return interpolateColorsRGB(value,inputRange,getInterpolateRGB(outputRange),options);}else if(colorSpace==='LAB'){return interpolateColorsLAB(value,inputRange,getInterpolateLAB(outputRange),options);}throw new ReanimatedError(\\\"Invalid color space provided: \\\"+colorSpace+\\\". Supported values are: ['RGB', 'HSV', 'LAB'].\\\");}\",\n    location: \"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"interpolateColor_reactNativeReanimated_interpolateColorTs10\\\",\\\"value\\\",\\\"inputRange\\\",\\\"outputRange\\\",\\\"colorSpace\\\",\\\"options\\\",\\\"interpolateColorsHSV\\\",\\\"getInterpolateHSV\\\",\\\"interpolateColorsRGB\\\",\\\"getInterpolateRGB\\\",\\\"interpolateColorsLAB\\\",\\\"getInterpolateLAB\\\",\\\"__closure\\\",\\\"ReanimatedError\\\"],\\\"sources\\\":[\\\"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/react-native-reanimated/src/interpolateColor.ts\\\"],\\\"mappings\\\":\\\"AAyTO,SAAAA,2DAILA,CAAiCC,KAAG,CAAAC,UACP,CAAAC,WACZ,CAAAC,UAAA,OAAAC,OAAA,WAAAC,oBAAA,CAAAC,iBAAA,CAAAC,oBAAA,CAAAC,iBAAA,CAAAC,oBAAA,CAAAC,iBAAA,OAAAC,SAAA,CAEjB,GAAIR,UAAU,GAAK,KAAK,CAAE,CACxB,MAAO,CAAAE,oBAAoB,CACzBL,KAAK,CACLC,UAAU,CACVK,iBAAiB,CAACJ,WAAW,CAAC,CAC9BE,OACF,CAAC,CACH,CAAC,IAAM,IAAID,UAAU,GAAK,KAAK,CAAE,CAC/B,MAAO,CAAAI,oBAAoB,CACzBP,KAAK,CACLC,UAAU,CACVO,iBAAiB,CAACN,WAAW,CAAC,CAC9BE,OACF,CAAC,CACH,CAAC,IAAM,IAAID,UAAU,GAAK,KAAK,CAAE,CAC/B,MAAO,CAAAM,oBAAoB,CACzBT,KAAK,CACLC,UAAU,CACVS,iBAAiB,CAACR,WAAW,CAAC,CAC9BE,OACF,CAAC,CACH,CAEA,KAAM,IAAI,CAAAQ,eAAe,kCAErBT,UAAU,iDAEd,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var interpolateColor = exports.interpolateColor = function () {\n    var _e = [new global.Error(), -7, -27];\n    var interpolateColor = function interpolateColor(value, inputRange, outputRange) {\n      var colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'RGB';\n      var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n      if (colorSpace === 'HSV') {\n        return interpolateColorsHSV(value, inputRange, getInterpolateHSV(outputRange), options);\n      } else if (colorSpace === 'RGB') {\n        return interpolateColorsRGB(value, inputRange, getInterpolateRGB(outputRange), options);\n      } else if (colorSpace === 'LAB') {\n        return interpolateColorsLAB(value, inputRange, getInterpolateLAB(outputRange), options);\n      }\n      throw new _errors.ReanimatedError(`Invalid color space provided: ${colorSpace}. Supported values are: ['RGB', 'HSV', 'LAB'].`);\n    };\n    interpolateColor.__closure = {\n      interpolateColorsHSV: interpolateColorsHSV,\n      getInterpolateHSV: getInterpolateHSV,\n      interpolateColorsRGB: interpolateColorsRGB,\n      getInterpolateRGB: getInterpolateRGB,\n      interpolateColorsLAB: interpolateColorsLAB,\n      getInterpolateLAB: getInterpolateLAB\n    };\n    interpolateColor.__workletHash = 7877560832453;\n    interpolateColor.__initData = _worklet_7877560832453_init_data;\n    interpolateColor.__stackDetails = _e;\n    return interpolateColor;\n  }();\n  var ColorSpace = exports.ColorSpace = /*#__PURE__*/function (ColorSpace) {\n    ColorSpace[ColorSpace[\"RGB\"] = 0] = \"RGB\";\n    ColorSpace[ColorSpace[\"HSV\"] = 1] = \"HSV\";\n    ColorSpace[ColorSpace[\"LAB\"] = 2] = \"LAB\";\n    return ColorSpace;\n  }({});\n  function useInterpolateConfig(inputRange, outputRange) {\n    var colorSpace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ColorSpace.RGB;\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    return (0, _useSharedValue.useSharedValue)({\n      inputRange: inputRange,\n      outputRange: outputRange,\n      colorSpace: colorSpace,\n      cache: (0, _core.makeMutable)(null),\n      options: options\n    });\n  }\n});","lineCount":419,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"interpolateColor"],[8,26,1,13],[8,29,1,13,"exports"],[8,36,1,13],[8,37,1,13,"Extrapolate"],[8,48,1,13],[8,51,1,13,"exports"],[8,58,1,13],[8,59,1,13,"ColorSpace"],[8,69,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"useInterpolateConfig"],[9,30,1,13],[9,33,1,13,"useInterpolateConfig"],[9,53,1,13],[10,2,2,0],[10,6,2,0,"_Colors"],[10,13,2,0],[10,16,2,0,"require"],[10,23,2,0],[10,24,2,0,"_dependencyMap"],[10,38,2,0],[11,2,13,0],[11,6,13,0,"_core"],[11,11,13,0],[11,14,13,0,"require"],[11,21,13,0],[11,22,13,0,"_dependencyMap"],[11,36,13,0],[12,2,14,0],[12,6,14,0,"_culori"],[12,13,14,0],[12,16,14,0,"_interopRequireDefault"],[12,38,14,0],[12,39,14,0,"require"],[12,46,14,0],[12,47,14,0,"_dependencyMap"],[12,61,14,0],[13,2,15,0],[13,6,15,0,"_errors"],[13,13,15,0],[13,16,15,0,"require"],[13,23,15,0],[13,24,15,0,"_dependencyMap"],[13,38,15,0],[14,2,16,0],[14,6,16,0,"_useSharedValue"],[14,21,16,0],[14,24,16,0,"require"],[14,31,16,0],[14,32,16,0,"_dependencyMap"],[14,46,16,0],[15,2,17,0],[15,6,17,0,"_interpolation"],[15,20,17,0],[15,23,17,0,"require"],[15,30,17,0],[15,31,17,0,"_dependencyMap"],[15,45,17,0],[16,2,19,0],[17,2,20,7],[17,6,20,13,"Extrapolate"],[17,17,20,24],[17,20,20,24,"exports"],[17,27,20,24],[17,28,20,24,"Extrapolate"],[17,39,20,24],[17,42,20,27,"Extrapolation"],[17,70,20,40],[19,2,22,0],[20,0,23,0],[21,0,24,0],[22,0,25,0],[23,0,26,0],[24,0,27,0],[25,0,28,0],[26,2,22,0],[26,6,22,0,"_worklet_8351409175469_init_data"],[26,38,22,0],[27,4,22,0,"code"],[27,8,22,0],[28,4,22,0,"location"],[28,12,22,0],[29,4,22,0,"sourceMap"],[29,13,22,0],[30,4,22,0,"version"],[30,11,22,0],[31,2,22,0],[32,2,34,0],[32,6,34,6,"interpolateColorsHSV"],[32,26,34,26],[32,29,34,29],[33,4,34,29],[33,8,34,29,"_e"],[33,10,34,29],[33,18,34,29,"global"],[33,24,34,29],[33,25,34,29,"Error"],[33,30,34,29],[34,4,34,29],[34,8,34,29,"reactNativeReanimated_interpolateColorTs1"],[34,49,34,29],[34,61,34,29,"reactNativeReanimated_interpolateColorTs1"],[34,103,35,2,"value"],[34,108,35,15],[34,110,36,2,"inputRange"],[34,120,36,31],[34,122,37,2,"colors"],[34,128,37,24],[34,130,38,2,"options"],[34,137,38,31],[34,139,39,5],[35,6,41,2],[35,10,41,6,"h"],[35,11,41,7],[35,14,41,10],[35,15,41,11],[36,6,42,2],[36,10,42,2,"_options$useCorrected"],[36,31,42,2],[36,34,42,50,"options"],[36,41,42,57],[36,42,42,10,"useCorrectedHSVInterpolation"],[36,70,42,38],[37,8,42,10,"useCorrectedHSVInterpolation"],[37,36,42,38],[37,39,42,38,"_options$useCorrected"],[37,60,42,38],[37,74,42,41],[37,78,42,45],[37,81,42,45,"_options$useCorrected"],[37,102,42,45],[38,6,43,2],[38,10,43,6,"useCorrectedHSVInterpolation"],[38,38,43,34],[38,40,43,36],[39,8,44,4],[40,8,45,4],[41,8,46,4],[42,8,47,4],[43,8,48,4],[43,12,48,10,"correctedInputRange"],[43,31,48,29],[43,34,48,32],[43,35,48,33,"inputRange"],[43,45,48,43],[43,46,48,44],[43,47,48,45],[43,48,48,46],[43,49,48,47],[44,8,49,4],[44,12,49,10,"originalH"],[44,21,49,19],[44,24,49,22,"colors"],[44,30,49,28],[44,31,49,29,"h"],[44,32,49,30],[45,8,50,4],[45,12,50,10,"correctedH"],[45,22,50,20],[45,25,50,23],[45,26,50,24,"originalH"],[45,35,50,33],[45,36,50,34],[45,37,50,35],[45,38,50,36],[45,39,50,37],[46,8,52,4],[46,13,52,9],[46,17,52,13,"i"],[46,18,52,14],[46,21,52,17],[46,22,52,18],[46,24,52,20,"i"],[46,25,52,21],[46,28,52,24,"originalH"],[46,37,52,33],[46,38,52,34,"length"],[46,44,52,40],[46,46,52,42],[46,48,52,44,"i"],[46,49,52,45],[46,51,52,47],[47,10,53,6],[47,14,53,12,"d"],[47,15,53,13],[47,18,53,16,"originalH"],[47,27,53,25],[47,28,53,26,"i"],[47,29,53,27],[47,30,53,28],[47,33,53,31,"originalH"],[47,42,53,40],[47,43,53,41,"i"],[47,44,53,42],[47,47,53,45],[47,48,53,46],[47,49,53,47],[48,10,54,6],[48,14,54,10,"originalH"],[48,23,54,19],[48,24,54,20,"i"],[48,25,54,21],[48,26,54,22],[48,29,54,25,"originalH"],[48,38,54,34],[48,39,54,35,"i"],[48,40,54,36],[48,43,54,39],[48,44,54,40],[48,45,54,41],[48,49,54,45,"d"],[48,50,54,46],[48,53,54,49],[48,56,54,52],[48,58,54,54],[49,12,55,8,"correctedInputRange"],[49,31,55,27],[49,32,55,28,"push"],[49,36,55,32],[49,37,55,33,"inputRange"],[49,47,55,43],[49,48,55,44,"i"],[49,49,55,45],[49,50,55,46],[49,51,55,47],[50,12,56,8,"correctedInputRange"],[50,31,56,27],[50,32,56,28,"push"],[50,36,56,32],[50,37,56,33,"inputRange"],[50,47,56,43],[50,48,56,44,"i"],[50,49,56,45],[50,50,56,46],[50,53,56,49],[50,60,56,56],[50,61,56,57],[51,12,57,8,"correctedH"],[51,22,57,18],[51,23,57,19,"push"],[51,27,57,23],[51,28,57,24,"originalH"],[51,37,57,33],[51,38,57,34,"i"],[51,39,57,35],[51,40,57,36],[51,43,57,39],[51,44,57,40],[51,45,57,41],[52,12,58,8,"correctedH"],[52,22,58,18],[52,23,58,19,"push"],[52,27,58,23],[52,28,58,24,"originalH"],[52,37,58,33],[52,38,58,34,"i"],[52,39,58,35],[52,40,58,36],[52,41,58,37],[53,10,59,6],[53,11,59,7],[53,17,59,13],[53,21,59,17,"originalH"],[53,30,59,26],[53,31,59,27,"i"],[53,32,59,28],[53,33,59,29],[53,36,59,32,"originalH"],[53,45,59,41],[53,46,59,42,"i"],[53,47,59,43],[53,50,59,46],[53,51,59,47],[53,52,59,48],[53,56,59,52,"d"],[53,57,59,53],[53,60,59,56],[53,61,59,57],[53,64,59,60],[53,66,59,62],[54,12,60,8,"correctedInputRange"],[54,31,60,27],[54,32,60,28,"push"],[54,36,60,32],[54,37,60,33,"inputRange"],[54,47,60,43],[54,48,60,44,"i"],[54,49,60,45],[54,50,60,46],[54,51,60,47],[55,12,61,8,"correctedInputRange"],[55,31,61,27],[55,32,61,28,"push"],[55,36,61,32],[55,37,61,33,"inputRange"],[55,47,61,43],[55,48,61,44,"i"],[55,49,61,45],[55,50,61,46],[55,53,61,49],[55,60,61,56],[55,61,61,57],[56,12,62,8,"correctedH"],[56,22,62,18],[56,23,62,19,"push"],[56,27,62,23],[56,28,62,24,"originalH"],[56,37,62,33],[56,38,62,34,"i"],[56,39,62,35],[56,40,62,36],[56,43,62,39],[56,44,62,40],[56,45,62,41],[57,12,63,8,"correctedH"],[57,22,63,18],[57,23,63,19,"push"],[57,27,63,23],[57,28,63,24,"originalH"],[57,37,63,33],[57,38,63,34,"i"],[57,39,63,35],[57,40,63,36],[57,41,63,37],[58,10,64,6],[58,11,64,7],[58,17,64,13],[59,12,65,8,"correctedInputRange"],[59,31,65,27],[59,32,65,28,"push"],[59,36,65,32],[59,37,65,33,"inputRange"],[59,47,65,43],[59,48,65,44,"i"],[59,49,65,45],[59,50,65,46],[59,51,65,47],[60,12,66,8,"correctedH"],[60,22,66,18],[60,23,66,19,"push"],[60,27,66,23],[60,28,66,24,"originalH"],[60,37,66,33],[60,38,66,34,"i"],[60,39,66,35],[60,40,66,36],[60,41,66,37],[61,10,67,6],[62,8,68,4],[63,8,69,4,"h"],[63,9,69,5],[63,12,70,6],[63,13,70,7],[63,17,70,7,"interpolate"],[63,43,70,18],[63,45,71,8,"value"],[63,50,71,13],[63,52,72,8,"correctedInputRange"],[63,71,72,27],[63,73,73,8,"correctedH"],[63,83,73,18],[63,85,74,8,"Extrapolation"],[63,113,74,21],[63,114,74,22,"CLAMP"],[63,119,75,6],[63,120,75,7],[63,123,76,8],[63,124,76,9],[63,128,77,6],[63,129,77,7],[64,6,78,2],[64,7,78,3],[64,13,78,9],[65,8,79,4,"h"],[65,9,79,5],[65,12,79,8],[65,16,79,8,"interpolate"],[65,42,79,19],[65,44,79,20,"value"],[65,49,79,25],[65,51,79,27,"inputRange"],[65,61,79,37],[65,63,79,39,"colors"],[65,69,79,45],[65,70,79,46,"h"],[65,71,79,47],[65,73,79,49,"Extrapolation"],[65,101,79,62],[65,102,79,63,"CLAMP"],[65,107,79,68],[65,108,79,69],[66,6,80,2],[67,6,81,2],[67,10,81,8,"s"],[67,11,81,9],[67,14,81,12],[67,18,81,12,"interpolate"],[67,44,81,23],[67,46,81,24,"value"],[67,51,81,29],[67,53,81,31,"inputRange"],[67,63,81,41],[67,65,81,43,"colors"],[67,71,81,49],[67,72,81,50,"s"],[67,73,81,51],[67,75,81,53,"Extrapolation"],[67,103,81,66],[67,104,81,67,"CLAMP"],[67,109,81,72],[67,110,81,73],[68,6,82,2],[68,10,82,8,"v"],[68,11,82,9],[68,14,82,12],[68,18,82,12,"interpolate"],[68,44,82,23],[68,46,82,24,"value"],[68,51,82,29],[68,53,82,31,"inputRange"],[68,63,82,41],[68,65,82,43,"colors"],[68,71,82,49],[68,72,82,50,"v"],[68,73,82,51],[68,75,82,53,"Extrapolation"],[68,103,82,66],[68,104,82,67,"CLAMP"],[68,109,82,72],[68,110,82,73],[69,6,83,2],[69,10,83,8,"a"],[69,11,83,9],[69,14,83,12],[69,18,83,12,"interpolate"],[69,44,83,23],[69,46,83,24,"value"],[69,51,83,29],[69,53,83,31,"inputRange"],[69,63,83,41],[69,65,83,43,"colors"],[69,71,83,49],[69,72,83,50,"a"],[69,73,83,51],[69,75,83,53,"Extrapolation"],[69,103,83,66],[69,104,83,67,"CLAMP"],[69,109,83,72],[69,110,83,73],[70,6,84,2],[70,13,84,9],[70,17,84,9,"hsvToColor"],[70,35,84,19],[70,37,84,20,"h"],[70,38,84,21],[70,40,84,23,"s"],[70,41,84,24],[70,43,84,26,"v"],[70,44,84,27],[70,46,84,29,"a"],[70,47,84,30],[70,48,84,31],[71,4,85,0],[71,5,85,1],[72,4,85,1,"reactNativeReanimated_interpolateColorTs1"],[72,45,85,1],[72,46,85,1,"__closure"],[72,55,85,1],[73,6,85,1,"interpolate"],[73,17,85,1],[73,19,70,7,"interpolate"],[73,45,70,18],[74,6,70,18,"Extrapolation"],[74,19,70,18],[74,21,74,8,"Extrapolation"],[74,49,74,21],[75,6,74,21,"hsvToColor"],[75,16,74,21],[75,18,84,9,"hsvToColor"],[76,4,84,19],[77,4,84,19,"reactNativeReanimated_interpolateColorTs1"],[77,45,84,19],[77,46,84,19,"__workletHash"],[77,59,84,19],[78,4,84,19,"reactNativeReanimated_interpolateColorTs1"],[78,45,84,19],[78,46,84,19,"__initData"],[78,56,84,19],[78,59,84,19,"_worklet_8351409175469_init_data"],[78,91,84,19],[79,4,84,19,"reactNativeReanimated_interpolateColorTs1"],[79,45,84,19],[79,46,84,19,"__stackDetails"],[79,60,84,19],[79,63,84,19,"_e"],[79,65,84,19],[80,4,84,19],[80,11,84,19,"reactNativeReanimated_interpolateColorTs1"],[80,52,84,19],[81,2,84,19],[81,3,34,29],[81,5,85,1],[82,2,85,2],[82,6,85,2,"_worklet_4368433701766_init_data"],[82,38,85,2],[83,4,85,2,"code"],[83,8,85,2],[84,4,85,2,"location"],[84,12,85,2],[85,4,85,2,"sourceMap"],[85,13,85,2],[86,4,85,2,"version"],[86,11,85,2],[87,2,85,2],[88,2,87,0],[88,6,87,6,"toLinearSpace"],[88,19,87,19],[88,22,87,22],[89,4,87,22],[89,8,87,22,"_e"],[89,10,87,22],[89,18,87,22,"global"],[89,24,87,22],[89,25,87,22,"Error"],[89,30,87,22],[90,4,87,22],[90,8,87,22,"reactNativeReanimated_interpolateColorTs2"],[90,49,87,22],[90,61,87,22,"reactNativeReanimated_interpolateColorTs2"],[90,103,87,23,"x"],[90,104,87,34],[90,106,87,36,"gamma"],[90,111,87,49],[90,113,87,64],[91,6,89,2],[91,13,89,9,"x"],[91,14,89,10],[91,15,89,11,"map"],[91,18,89,14],[91,19,89,15],[91,29,89,16,"v"],[91,30,89,17],[92,8,89,17],[92,15,89,22,"Math"],[92,19,89,26],[92,20,89,27,"pow"],[92,23,89,30],[92,24,89,31,"v"],[92,25,89,32],[92,28,89,35],[92,31,89,38],[92,33,89,40,"gamma"],[92,38,89,45],[92,39,89,46],[93,6,89,46],[93,8,89,47],[94,4,90,0],[94,5,90,1],[95,4,90,1,"reactNativeReanimated_interpolateColorTs2"],[95,45,90,1],[95,46,90,1,"__closure"],[95,55,90,1],[96,4,90,1,"reactNativeReanimated_interpolateColorTs2"],[96,45,90,1],[96,46,90,1,"__workletHash"],[96,59,90,1],[97,4,90,1,"reactNativeReanimated_interpolateColorTs2"],[97,45,90,1],[97,46,90,1,"__initData"],[97,56,90,1],[97,59,90,1,"_worklet_4368433701766_init_data"],[97,91,90,1],[98,4,90,1,"reactNativeReanimated_interpolateColorTs2"],[98,45,90,1],[98,46,90,1,"__stackDetails"],[98,60,90,1],[98,63,90,1,"_e"],[98,65,90,1],[99,4,90,1],[99,11,90,1,"reactNativeReanimated_interpolateColorTs2"],[99,52,90,1],[100,2,90,1],[100,3,87,22],[100,5,90,1],[101,2,90,2],[101,6,90,2,"_worklet_6610343372134_init_data"],[101,38,90,2],[102,4,90,2,"code"],[102,8,90,2],[103,4,90,2,"location"],[103,12,90,2],[104,4,90,2,"sourceMap"],[104,13,90,2],[105,4,90,2,"version"],[105,11,90,2],[106,2,90,2],[107,2,92,0],[107,6,92,6,"toGammaSpace"],[107,18,92,18],[107,21,92,21],[108,4,92,21],[108,8,92,21,"_e"],[108,10,92,21],[108,18,92,21,"global"],[108,24,92,21],[108,25,92,21,"Error"],[108,30,92,21],[109,4,92,21],[109,8,92,21,"reactNativeReanimated_interpolateColorTs3"],[109,49,92,21],[109,61,92,21,"reactNativeReanimated_interpolateColorTs3"],[109,103,92,22,"x"],[109,104,92,31],[109,106,92,33,"gamma"],[109,111,92,46],[109,113,92,59],[110,6,94,2],[110,13,94,9,"Math"],[110,17,94,13],[110,18,94,14,"round"],[110,23,94,19],[110,24,94,20,"Math"],[110,28,94,24],[110,29,94,25,"pow"],[110,32,94,28],[110,33,94,29,"x"],[110,34,94,30],[110,36,94,32],[110,37,94,33],[110,40,94,36,"gamma"],[110,45,94,41],[110,46,94,42],[110,49,94,45],[110,52,94,48],[110,53,94,49],[111,4,95,0],[111,5,95,1],[112,4,95,1,"reactNativeReanimated_interpolateColorTs3"],[112,45,95,1],[112,46,95,1,"__closure"],[112,55,95,1],[113,4,95,1,"reactNativeReanimated_interpolateColorTs3"],[113,45,95,1],[113,46,95,1,"__workletHash"],[113,59,95,1],[114,4,95,1,"reactNativeReanimated_interpolateColorTs3"],[114,45,95,1],[114,46,95,1,"__initData"],[114,56,95,1],[114,59,95,1,"_worklet_6610343372134_init_data"],[114,91,95,1],[115,4,95,1,"reactNativeReanimated_interpolateColorTs3"],[115,45,95,1],[115,46,95,1,"__stackDetails"],[115,60,95,1],[115,63,95,1,"_e"],[115,65,95,1],[116,4,95,1],[116,11,95,1,"reactNativeReanimated_interpolateColorTs3"],[116,52,95,1],[117,2,95,1],[117,3,92,21],[117,5,95,1],[118,2,95,2],[118,6,95,2,"_worklet_4309093770970_init_data"],[118,38,95,2],[119,4,95,2,"code"],[119,8,95,2],[120,4,95,2,"location"],[120,12,95,2],[121,4,95,2,"sourceMap"],[121,13,95,2],[122,4,95,2,"version"],[122,11,95,2],[123,2,95,2],[124,2,97,0],[124,6,97,6,"interpolateColorsRGB"],[124,26,97,26],[124,29,97,29],[125,4,97,29],[125,8,97,29,"_e"],[125,10,97,29],[125,18,97,29,"global"],[125,24,97,29],[125,25,97,29,"Error"],[125,30,97,29],[126,4,97,29],[126,8,97,29,"reactNativeReanimated_interpolateColorTs4"],[126,49,97,29],[126,61,97,29,"reactNativeReanimated_interpolateColorTs4"],[126,103,98,2,"value"],[126,108,98,15],[126,110,99,2,"inputRange"],[126,120,99,31],[126,122,100,2,"colors"],[126,128,100,24],[126,130,101,2,"options"],[126,137,101,31],[126,139,102,5],[127,6,104,2],[127,10,104,2,"_options$gamma"],[127,24,104,2],[127,27,104,26,"options"],[127,34,104,33],[127,35,104,10,"gamma"],[127,40,104,15],[128,8,104,10,"gamma"],[128,13,104,15],[128,16,104,15,"_options$gamma"],[128,30,104,15],[128,44,104,18],[128,47,104,21],[128,50,104,21,"_options$gamma"],[128,64,104,21],[129,6,105,2],[129,10,105,11,"outputR"],[129,17,105,18],[129,20,105,47,"colors"],[129,26,105,53],[129,27,105,8,"r"],[129,28,105,9],[130,8,105,23,"outputG"],[130,15,105,30],[130,18,105,47,"colors"],[130,24,105,53],[130,25,105,20,"g"],[130,26,105,21],[131,8,105,35,"outputB"],[131,15,105,42],[131,18,105,47,"colors"],[131,24,105,53],[131,25,105,32,"b"],[131,26,105,33],[132,6,106,2],[132,10,106,6,"gamma"],[132,15,106,11],[132,20,106,16],[132,21,106,17],[132,23,106,19],[133,8,107,4,"outputR"],[133,15,107,11],[133,18,107,14,"toLinearSpace"],[133,31,107,27],[133,32,107,28,"outputR"],[133,39,107,35],[133,41,107,37,"gamma"],[133,46,107,42],[133,47,107,43],[134,8,108,4,"outputG"],[134,15,108,11],[134,18,108,14,"toLinearSpace"],[134,31,108,27],[134,32,108,28,"outputG"],[134,39,108,35],[134,41,108,37,"gamma"],[134,46,108,42],[134,47,108,43],[135,8,109,4,"outputB"],[135,15,109,11],[135,18,109,14,"toLinearSpace"],[135,31,109,27],[135,32,109,28,"outputB"],[135,39,109,35],[135,41,109,37,"gamma"],[135,46,109,42],[135,47,109,43],[136,6,110,2],[137,6,111,2],[137,10,111,8,"r"],[137,11,111,9],[137,14,111,12],[137,18,111,12,"interpolate"],[137,44,111,23],[137,46,111,24,"value"],[137,51,111,29],[137,53,111,31,"inputRange"],[137,63,111,41],[137,65,111,43,"outputR"],[137,72,111,50],[137,74,111,52,"Extrapolation"],[137,102,111,65],[137,103,111,66,"CLAMP"],[137,108,111,71],[137,109,111,72],[138,6,112,2],[138,10,112,8,"g"],[138,11,112,9],[138,14,112,12],[138,18,112,12,"interpolate"],[138,44,112,23],[138,46,112,24,"value"],[138,51,112,29],[138,53,112,31,"inputRange"],[138,63,112,41],[138,65,112,43,"outputG"],[138,72,112,50],[138,74,112,52,"Extrapolation"],[138,102,112,65],[138,103,112,66,"CLAMP"],[138,108,112,71],[138,109,112,72],[139,6,113,2],[139,10,113,8,"b"],[139,11,113,9],[139,14,113,12],[139,18,113,12,"interpolate"],[139,44,113,23],[139,46,113,24,"value"],[139,51,113,29],[139,53,113,31,"inputRange"],[139,63,113,41],[139,65,113,43,"outputB"],[139,72,113,50],[139,74,113,52,"Extrapolation"],[139,102,113,65],[139,103,113,66,"CLAMP"],[139,108,113,71],[139,109,113,72],[140,6,114,2],[140,10,114,8,"a"],[140,11,114,9],[140,14,114,12],[140,18,114,12,"interpolate"],[140,44,114,23],[140,46,114,24,"value"],[140,51,114,29],[140,53,114,31,"inputRange"],[140,63,114,41],[140,65,114,43,"colors"],[140,71,114,49],[140,72,114,50,"a"],[140,73,114,51],[140,75,114,53,"Extrapolation"],[140,103,114,66],[140,104,114,67,"CLAMP"],[140,109,114,72],[140,110,114,73],[141,6,115,2],[141,10,115,6,"gamma"],[141,15,115,11],[141,20,115,16],[141,21,115,17],[141,23,115,19],[142,8,116,4],[142,15,116,11],[142,19,116,11,"rgbaColor"],[142,36,116,20],[142,38,116,21,"r"],[142,39,116,22],[142,41,116,24,"g"],[142,42,116,25],[142,44,116,27,"b"],[142,45,116,28],[142,47,116,30,"a"],[142,48,116,31],[142,49,116,32],[143,6,117,2],[144,6,118,2],[144,13,118,9],[144,17,118,9,"rgbaColor"],[144,34,118,18],[144,36,119,4,"toGammaSpace"],[144,48,119,16],[144,49,119,17,"r"],[144,50,119,18],[144,52,119,20,"gamma"],[144,57,119,25],[144,58,119,26],[144,60,120,4,"toGammaSpace"],[144,72,120,16],[144,73,120,17,"g"],[144,74,120,18],[144,76,120,20,"gamma"],[144,81,120,25],[144,82,120,26],[144,84,121,4,"toGammaSpace"],[144,96,121,16],[144,97,121,17,"b"],[144,98,121,18],[144,100,121,20,"gamma"],[144,105,121,25],[144,106,121,26],[144,108,122,4,"a"],[144,109,123,2],[144,110,123,3],[145,4,124,0],[145,5,124,1],[146,4,124,1,"reactNativeReanimated_interpolateColorTs4"],[146,45,124,1],[146,46,124,1,"__closure"],[146,55,124,1],[147,6,124,1,"toLinearSpace"],[147,19,124,1],[147,21,107,14,"toLinearSpace"],[147,34,107,27],[148,6,107,27,"interpolate"],[148,17,107,27],[148,19,111,12,"interpolate"],[148,45,111,23],[149,6,111,23,"Extrapolation"],[149,19,111,23],[149,21,111,52,"Extrapolation"],[149,49,111,65],[150,6,111,65,"rgbaColor"],[150,15,111,65],[150,17,116,11,"rgbaColor"],[150,34,116,20],[151,6,116,20,"toGammaSpace"],[151,18,116,20],[151,20,119,4,"toGammaSpace"],[152,4,119,16],[153,4,119,16,"reactNativeReanimated_interpolateColorTs4"],[153,45,119,16],[153,46,119,16,"__workletHash"],[153,59,119,16],[154,4,119,16,"reactNativeReanimated_interpolateColorTs4"],[154,45,119,16],[154,46,119,16,"__initData"],[154,56,119,16],[154,59,119,16,"_worklet_4309093770970_init_data"],[154,91,119,16],[155,4,119,16,"reactNativeReanimated_interpolateColorTs4"],[155,45,119,16],[155,46,119,16,"__stackDetails"],[155,60,119,16],[155,63,119,16,"_e"],[155,65,119,16],[156,4,119,16],[156,11,119,16,"reactNativeReanimated_interpolateColorTs4"],[156,52,119,16],[157,2,119,16],[157,3,97,29],[157,5,124,1],[158,2,124,2],[158,6,124,2,"_worklet_12431767338194_init_data"],[158,39,124,2],[159,4,124,2,"code"],[159,8,124,2],[160,4,124,2,"location"],[160,12,124,2],[161,4,124,2,"sourceMap"],[161,13,124,2],[162,4,124,2,"version"],[162,11,124,2],[163,2,124,2],[164,2,126,0],[164,6,126,6,"interpolateColorsLAB"],[164,26,126,26],[164,29,126,29],[165,4,126,29],[165,8,126,29,"_e"],[165,10,126,29],[165,18,126,29,"global"],[165,24,126,29],[165,25,126,29,"Error"],[165,30,126,29],[166,4,126,29],[166,8,126,29,"reactNativeReanimated_interpolateColorTs5"],[166,49,126,29],[166,61,126,29,"reactNativeReanimated_interpolateColorTs5"],[166,103,127,2,"value"],[166,108,127,15],[166,110,128,2,"inputRange"],[166,120,128,31],[166,122,129,2,"colors"],[166,128,129,24],[166,130,130,2,"_options"],[166,138,130,32],[166,140,131,5],[167,6,133,2],[167,10,133,8,"l"],[167,11,133,9],[167,14,133,12],[167,18,133,12,"interpolate"],[167,44,133,23],[167,46,133,24,"value"],[167,51,133,29],[167,53,133,31,"inputRange"],[167,63,133,41],[167,65,133,43,"colors"],[167,71,133,49],[167,72,133,50,"l"],[167,73,133,51],[167,75,133,53,"Extrapolation"],[167,103,133,66],[167,104,133,67,"CLAMP"],[167,109,133,72],[167,110,133,73],[168,6,134,2],[168,10,134,8,"a"],[168,11,134,9],[168,14,134,12],[168,18,134,12,"interpolate"],[168,44,134,23],[168,46,134,24,"value"],[168,51,134,29],[168,53,134,31,"inputRange"],[168,63,134,41],[168,65,134,43,"colors"],[168,71,134,49],[168,72,134,50,"a"],[168,73,134,51],[168,75,134,53,"Extrapolation"],[168,103,134,66],[168,104,134,67,"CLAMP"],[168,109,134,72],[168,110,134,73],[169,6,135,2],[169,10,135,8,"b"],[169,11,135,9],[169,14,135,12],[169,18,135,12,"interpolate"],[169,44,135,23],[169,46,135,24,"value"],[169,51,135,29],[169,53,135,31,"inputRange"],[169,63,135,41],[169,65,135,43,"colors"],[169,71,135,49],[169,72,135,50,"b"],[169,73,135,51],[169,75,135,53,"Extrapolation"],[169,103,135,66],[169,104,135,67,"CLAMP"],[169,109,135,72],[169,110,135,73],[170,6,136,2],[170,10,136,8,"alpha"],[170,15,136,13],[170,18,136,16],[170,22,136,16,"interpolate"],[170,48,136,27],[170,50,137,4,"value"],[170,55,137,9],[170,57,138,4,"inputRange"],[170,67,138,14],[170,69,139,4,"colors"],[170,75,139,10],[170,76,139,11,"alpha"],[170,81,139,16],[170,83,140,4,"Extrapolation"],[170,111,140,17],[170,112,140,18,"CLAMP"],[170,117,141,2],[170,118,141,3],[171,6,142,2],[171,10,142,2,"_culori$oklab$convert"],[171,31,142,2],[171,34,147,6,"culori"],[171,49,147,12],[171,50,147,13,"oklab"],[171,55,147,18],[171,56,147,19,"convert"],[171,63,147,26],[171,64,147,27,"toRgb"],[171,69,147,32],[171,70,147,33],[172,10,147,35,"l"],[172,11,147,36],[172,13,147,35,"l"],[172,14,147,36],[173,10,147,38,"a"],[173,11,147,39],[173,13,147,38,"a"],[173,14,147,39],[174,10,147,41,"b"],[174,11,147,42],[174,13,147,41,"b"],[174,14,147,42],[175,10,147,44,"alpha"],[175,15,147,49],[175,17,147,44,"alpha"],[176,8,147,50],[176,9,147,51],[176,10,147,52],[177,8,143,7,"_r"],[177,10,143,9],[177,13,143,9,"_culori$oklab$convert"],[177,34,143,9],[177,35,143,4,"r"],[177,36,143,5],[178,8,144,7,"_g"],[178,10,144,9],[178,13,144,9,"_culori$oklab$convert"],[178,34,144,9],[178,35,144,4,"g"],[178,36,144,5],[179,8,145,7,"_b"],[179,10,145,9],[179,13,145,9,"_culori$oklab$convert"],[179,34,145,9],[179,35,145,4,"b"],[179,36,145,5],[180,8,146,11,"_alpha"],[180,14,146,17],[180,17,146,17,"_culori$oklab$convert"],[180,38,146,17],[180,39,146,4,"alpha"],[180,44,146,9],[181,6,148,2],[181,13,148,9],[181,17,148,9,"rgbaColor"],[181,34,148,18],[181,36,148,19,"_r"],[181,38,148,21],[181,40,148,23,"_g"],[181,42,148,25],[181,44,148,27,"_b"],[181,46,148,29],[181,48,148,31,"_alpha"],[181,54,148,37],[181,55,148,38],[182,4,149,0],[182,5,149,1],[183,4,149,1,"reactNativeReanimated_interpolateColorTs5"],[183,45,149,1],[183,46,149,1,"__closure"],[183,55,149,1],[184,6,149,1,"interpolate"],[184,17,149,1],[184,19,133,12,"interpolate"],[184,45,133,23],[185,6,133,23,"Extrapolation"],[185,19,133,23],[185,21,133,53,"Extrapolation"],[185,49,133,66],[186,6,133,66,"culori"],[186,12,133,66],[186,14,147,6,"culori"],[186,29,147,12],[187,6,147,12,"rgbaColor"],[187,15,147,12],[187,17,148,9,"rgbaColor"],[188,4,148,18],[189,4,148,18,"reactNativeReanimated_interpolateColorTs5"],[189,45,148,18],[189,46,148,18,"__workletHash"],[189,59,148,18],[190,4,148,18,"reactNativeReanimated_interpolateColorTs5"],[190,45,148,18],[190,46,148,18,"__initData"],[190,56,148,18],[190,59,148,18,"_worklet_12431767338194_init_data"],[190,92,148,18],[191,4,148,18,"reactNativeReanimated_interpolateColorTs5"],[191,45,148,18],[191,46,148,18,"__stackDetails"],[191,60,148,18],[191,63,148,18,"_e"],[191,65,148,18],[192,4,148,18],[192,11,148,18,"reactNativeReanimated_interpolateColorTs5"],[192,52,148,18],[193,2,148,18],[193,3,126,29],[193,5,149,1],[194,2,149,2],[194,6,149,2,"_worklet_14521513267525_init_data"],[194,39,149,2],[195,4,149,2,"code"],[195,8,149,2],[196,4,149,2,"location"],[196,12,149,2],[197,4,149,2,"sourceMap"],[197,13,149,2],[198,4,149,2,"version"],[198,11,149,2],[199,2,149,2],[200,2,151,0],[200,6,151,6,"_splitColorsIntoChannels"],[200,30,151,30],[200,33,151,33],[201,4,151,33],[201,8,151,33,"_e"],[201,10,151,33],[201,18,151,33,"global"],[201,24,151,33],[201,25,151,33,"Error"],[201,30,151,33],[202,4,151,33],[202,8,151,33,"reactNativeReanimated_interpolateColorTs6"],[202,49,151,33],[202,61,151,33,"reactNativeReanimated_interpolateColorTs6"],[202,103,152,2,"colors"],[202,109,152,38],[202,111,153,2,"convFromRgb"],[202,122,157,3],[202,124,163,5],[203,6,165,2],[203,10,165,8,"ch1"],[203,13,165,21],[203,16,165,24],[203,18,165,26],[204,6,166,2],[204,10,166,8,"ch2"],[204,13,166,21],[204,16,166,24],[204,18,166,26],[205,6,167,2],[205,10,167,8,"ch3"],[205,13,167,21],[205,16,167,24],[205,18,167,26],[206,6,168,2],[206,10,168,8,"alpha"],[206,15,168,23],[206,18,168,26],[206,20,168,28],[207,6,170,2],[207,11,170,7],[207,15,170,11,"i"],[207,16,170,12],[207,19,170,15],[207,20,170,16],[207,22,170,18,"i"],[207,23,170,19],[207,26,170,22,"colors"],[207,32,170,28],[207,33,170,29,"length"],[207,39,170,35],[207,41,170,37,"i"],[207,42,170,38],[207,44,170,40],[207,46,170,42],[208,8,171,4],[208,12,171,10,"color"],[208,17,171,15],[208,20,171,18,"colors"],[208,26,171,24],[208,27,171,25,"i"],[208,28,171,26],[208,29,171,27],[209,8,172,4],[209,12,172,10,"processedColor"],[209,26,172,24],[209,29,172,27],[209,33,172,27,"processColor"],[209,53,172,39],[209,55,172,40,"color"],[209,60,172,45],[209,61,172,46],[210,8,173,4],[210,12,173,8],[210,19,173,15,"processedColor"],[210,33,173,29],[210,38,173,34],[210,46,173,42],[210,48,173,44],[211,10,174,6],[211,14,174,12,"convertedColor"],[211,28,174,26],[211,31,174,29,"convFromRgb"],[211,42,174,40],[211,43,174,41],[212,12,175,8,"r"],[212,13,175,9],[212,15,175,11],[212,19,175,11,"red"],[212,30,175,14],[212,32,175,15,"processedColor"],[212,46,175,29],[212,47,175,30],[213,12,176,8,"g"],[213,13,176,9],[213,15,176,11],[213,19,176,11,"green"],[213,32,176,16],[213,34,176,17,"processedColor"],[213,48,176,31],[213,49,176,32],[214,12,177,8,"b"],[214,13,177,9],[214,15,177,11],[214,19,177,11,"blue"],[214,31,177,15],[214,33,177,16,"processedColor"],[214,47,177,30],[215,10,178,6],[215,11,178,7],[215,12,178,8],[216,10,180,6,"ch1"],[216,13,180,9],[216,14,180,10,"push"],[216,18,180,14],[216,19,180,15,"convertedColor"],[216,33,180,29],[216,34,180,30,"ch1"],[216,37,180,33],[216,38,180,34],[217,10,181,6,"ch2"],[217,13,181,9],[217,14,181,10,"push"],[217,18,181,14],[217,19,181,15,"convertedColor"],[217,33,181,29],[217,34,181,30,"ch2"],[217,37,181,33],[217,38,181,34],[218,10,182,6,"ch3"],[218,13,182,9],[218,14,182,10,"push"],[218,18,182,14],[218,19,182,15,"convertedColor"],[218,33,182,29],[218,34,182,30,"ch3"],[218,37,182,33],[218,38,182,34],[219,10,183,6,"alpha"],[219,15,183,11],[219,16,183,12,"push"],[219,20,183,16],[219,21,183,17],[219,25,183,17,"opacity"],[219,40,183,24],[219,42,183,25,"processedColor"],[219,56,183,39],[219,57,183,40],[219,58,183,41],[220,8,184,4],[221,6,185,2],[222,6,187,2],[222,13,187,9],[223,8,188,4,"ch1"],[223,11,188,7],[223,13,188,4,"ch1"],[223,16,188,7],[224,8,189,4,"ch2"],[224,11,189,7],[224,13,189,4,"ch2"],[224,16,189,7],[225,8,190,4,"ch3"],[225,11,190,7],[225,13,190,4,"ch3"],[225,16,190,7],[226,8,191,4,"alpha"],[226,13,191,9],[226,15,191,4,"alpha"],[227,6,192,2],[227,7,192,3],[228,4,193,0],[228,5,193,1],[229,4,193,1,"reactNativeReanimated_interpolateColorTs6"],[229,45,193,1],[229,46,193,1,"__closure"],[229,55,193,1],[230,6,193,1,"processColor"],[230,18,193,1],[230,20,172,27,"processColor"],[230,40,172,39],[231,6,172,39,"red"],[231,9,172,39],[231,11,175,11,"red"],[231,22,175,14],[232,6,175,14,"green"],[232,11,175,14],[232,13,176,11,"green"],[232,26,176,16],[233,6,176,16,"blue"],[233,10,176,16],[233,12,177,11,"blue"],[233,24,177,15],[234,6,177,15,"opacity"],[234,13,177,15],[234,15,183,17,"opacity"],[235,4,183,24],[236,4,183,24,"reactNativeReanimated_interpolateColorTs6"],[236,45,183,24],[236,46,183,24,"__workletHash"],[236,59,183,24],[237,4,183,24,"reactNativeReanimated_interpolateColorTs6"],[237,45,183,24],[237,46,183,24,"__initData"],[237,56,183,24],[237,59,183,24,"_worklet_14521513267525_init_data"],[237,92,183,24],[238,4,183,24,"reactNativeReanimated_interpolateColorTs6"],[238,45,183,24],[238,46,183,24,"__stackDetails"],[238,60,183,24],[238,63,183,24,"_e"],[238,65,183,24],[239,4,183,24],[239,11,183,24,"reactNativeReanimated_interpolateColorTs6"],[239,52,183,24],[240,2,183,24],[240,3,151,33],[240,5,193,1],[241,2,193,2],[241,6,193,2,"_worklet_8624448141679_init_data"],[241,38,193,2],[242,4,193,2,"code"],[242,8,193,2],[243,4,193,2,"location"],[243,12,193,2],[244,4,193,2,"sourceMap"],[244,13,193,2],[245,4,193,2,"version"],[245,11,193,2],[246,2,193,2],[247,2,202,0],[247,6,202,6,"getInterpolateRGB"],[247,23,202,23],[247,26,202,26],[248,4,202,26],[248,8,202,26,"_e"],[248,10,202,26],[248,18,202,26,"global"],[248,24,202,26],[248,25,202,26,"Error"],[248,30,202,26],[249,4,202,26],[249,8,202,26,"reactNativeReanimated_interpolateColorTs7"],[249,49,202,26],[249,61,202,26,"reactNativeReanimated_interpolateColorTs7"],[249,103,203,2,"colors"],[249,109,203,38],[249,111,204,21],[250,6,206,2],[250,10,206,2,"_splitColorsIntoChann"],[250,31,206,2],[250,34,206,35,"_splitColorsIntoChannels"],[250,58,206,59],[250,59,207,4,"colors"],[250,65,207,10],[250,67,208,4],[250,77,208,5,"color"],[250,82,208,10],[251,10,208,10],[251,17,208,16],[252,12,209,6,"ch1"],[252,15,209,9],[252,17,209,11,"color"],[252,22,209,16],[252,23,209,17,"r"],[252,24,209,18],[253,12,210,6,"ch2"],[253,15,210,9],[253,17,210,11,"color"],[253,22,210,16],[253,23,210,17,"g"],[253,24,210,18],[254,12,211,6,"ch3"],[254,15,211,9],[254,17,211,11,"color"],[254,22,211,16],[254,23,211,17,"b"],[255,10,212,4],[255,11,212,5],[256,8,212,5],[256,9,213,2],[256,10,213,3],[257,8,206,10,"ch1"],[257,11,206,13],[257,14,206,13,"_splitColorsIntoChann"],[257,35,206,13],[257,36,206,10,"ch1"],[257,39,206,13],[258,8,206,15,"ch2"],[258,11,206,18],[258,14,206,18,"_splitColorsIntoChann"],[258,35,206,18],[258,36,206,15,"ch2"],[258,39,206,18],[259,8,206,20,"ch3"],[259,11,206,23],[259,14,206,23,"_splitColorsIntoChann"],[259,35,206,23],[259,36,206,20,"ch3"],[259,39,206,23],[260,8,206,25,"alpha"],[260,13,206,30],[260,16,206,30,"_splitColorsIntoChann"],[260,37,206,30],[260,38,206,25,"alpha"],[260,43,206,30],[261,6,215,2],[261,13,215,9],[262,8,216,4,"r"],[262,9,216,5],[262,11,216,7,"ch1"],[262,14,216,10],[263,8,217,4,"g"],[263,9,217,5],[263,11,217,7,"ch2"],[263,14,217,10],[264,8,218,4,"b"],[264,9,218,5],[264,11,218,7,"ch3"],[264,14,218,10],[265,8,219,4,"a"],[265,9,219,5],[265,11,219,7,"alpha"],[266,6,220,2],[266,7,220,3],[267,4,221,0],[267,5,221,1],[268,4,221,1,"reactNativeReanimated_interpolateColorTs7"],[268,45,221,1],[268,46,221,1,"__closure"],[268,55,221,1],[269,6,221,1,"_splitColorsIntoChannels"],[269,30,221,1],[269,32,206,35,"_splitColorsIntoChannels"],[270,4,206,59],[271,4,206,59,"reactNativeReanimated_interpolateColorTs7"],[271,45,206,59],[271,46,206,59,"__workletHash"],[271,59,206,59],[272,4,206,59,"reactNativeReanimated_interpolateColorTs7"],[272,45,206,59],[272,46,206,59,"__initData"],[272,56,206,59],[272,59,206,59,"_worklet_8624448141679_init_data"],[272,91,206,59],[273,4,206,59,"reactNativeReanimated_interpolateColorTs7"],[273,45,206,59],[273,46,206,59,"__stackDetails"],[273,60,206,59],[273,63,206,59,"_e"],[273,65,206,59],[274,4,206,59],[274,11,206,59,"reactNativeReanimated_interpolateColorTs7"],[274,52,206,59],[275,2,206,59],[275,3,202,26],[275,5,221,1],[276,2,221,2],[276,6,221,2,"_worklet_16817866662391_init_data"],[276,39,221,2],[277,4,221,2,"code"],[277,8,221,2],[278,4,221,2,"location"],[278,12,221,2],[279,4,221,2,"sourceMap"],[279,13,221,2],[280,4,221,2,"version"],[280,11,221,2],[281,2,221,2],[282,2,230,0],[282,6,230,6,"getInterpolateHSV"],[282,23,230,23],[282,26,230,26],[283,4,230,26],[283,8,230,26,"_e"],[283,10,230,26],[283,18,230,26,"global"],[283,24,230,26],[283,25,230,26,"Error"],[283,30,230,26],[284,4,230,26],[284,8,230,26,"reactNativeReanimated_interpolateColorTs8"],[284,49,230,26],[284,61,230,26,"reactNativeReanimated_interpolateColorTs8"],[284,103,231,2,"colors"],[284,109,231,38],[284,111,232,21],[285,6,234,2],[285,10,234,2,"_splitColorsIntoChann2"],[285,32,234,2],[285,35,234,35,"_splitColorsIntoChannels"],[285,59,234,59],[285,60,234,60,"colors"],[285,66,234,66],[285,68,234,68],[285,78,234,69,"color"],[285,83,234,74],[285,85,234,79],[286,10,235,4],[286,14,235,10,"hsvColor"],[286,22,235,18],[286,25,235,21],[286,29,235,21,"RGBtoHSV"],[286,45,235,29],[286,47,235,30,"color"],[286,52,235,35],[286,53,235,36,"r"],[286,54,235,37],[286,56,235,39,"color"],[286,61,235,44],[286,62,235,45,"g"],[286,63,235,46],[286,65,235,48,"color"],[286,70,235,53],[286,71,235,54,"b"],[286,72,235,55],[286,73,235,56],[287,10,236,4],[287,17,236,11],[288,12,237,6,"ch1"],[288,15,237,9],[288,17,237,11,"hsvColor"],[288,25,237,19],[288,26,237,20,"h"],[288,27,237,21],[289,12,238,6,"ch2"],[289,15,238,9],[289,17,238,11,"hsvColor"],[289,25,238,19],[289,26,238,20,"s"],[289,27,238,21],[290,12,239,6,"ch3"],[290,15,239,9],[290,17,239,11,"hsvColor"],[290,25,239,19],[290,26,239,20,"v"],[291,10,240,4],[291,11,240,5],[292,8,241,2],[292,9,241,3],[292,10,241,4],[293,8,234,10,"ch1"],[293,11,234,13],[293,14,234,13,"_splitColorsIntoChann2"],[293,36,234,13],[293,37,234,10,"ch1"],[293,40,234,13],[294,8,234,15,"ch2"],[294,11,234,18],[294,14,234,18,"_splitColorsIntoChann2"],[294,36,234,18],[294,37,234,15,"ch2"],[294,40,234,18],[295,8,234,20,"ch3"],[295,11,234,23],[295,14,234,23,"_splitColorsIntoChann2"],[295,36,234,23],[295,37,234,20,"ch3"],[295,40,234,23],[296,8,234,25,"alpha"],[296,13,234,30],[296,16,234,30,"_splitColorsIntoChann2"],[296,38,234,30],[296,39,234,25,"alpha"],[296,44,234,30],[297,6,243,2],[297,13,243,9],[298,8,244,4,"h"],[298,9,244,5],[298,11,244,7,"ch1"],[298,14,244,10],[299,8,245,4,"s"],[299,9,245,5],[299,11,245,7,"ch2"],[299,14,245,10],[300,8,246,4,"v"],[300,9,246,5],[300,11,246,7,"ch3"],[300,14,246,10],[301,8,247,4,"a"],[301,9,247,5],[301,11,247,7,"alpha"],[302,6,248,2],[302,7,248,3],[303,4,249,0],[303,5,249,1],[304,4,249,1,"reactNativeReanimated_interpolateColorTs8"],[304,45,249,1],[304,46,249,1,"__closure"],[304,55,249,1],[305,6,249,1,"_splitColorsIntoChannels"],[305,30,249,1],[305,32,234,35,"_splitColorsIntoChannels"],[305,56,234,59],[306,6,234,59,"RGBtoHSV"],[306,14,234,59],[306,16,235,21,"RGBtoHSV"],[307,4,235,29],[308,4,235,29,"reactNativeReanimated_interpolateColorTs8"],[308,45,235,29],[308,46,235,29,"__workletHash"],[308,59,235,29],[309,4,235,29,"reactNativeReanimated_interpolateColorTs8"],[309,45,235,29],[309,46,235,29,"__initData"],[309,56,235,29],[309,59,235,29,"_worklet_16817866662391_init_data"],[309,92,235,29],[310,4,235,29,"reactNativeReanimated_interpolateColorTs8"],[310,45,235,29],[310,46,235,29,"__stackDetails"],[310,60,235,29],[310,63,235,29,"_e"],[310,65,235,29],[311,4,235,29],[311,11,235,29,"reactNativeReanimated_interpolateColorTs8"],[311,52,235,29],[312,2,235,29],[312,3,230,26],[312,5,249,1],[313,2,249,2],[313,6,249,2,"_worklet_4292020092329_init_data"],[313,38,249,2],[314,4,249,2,"code"],[314,8,249,2],[315,4,249,2,"location"],[315,12,249,2],[316,4,249,2,"sourceMap"],[316,13,249,2],[317,4,249,2,"version"],[317,11,249,2],[318,2,249,2],[319,2,258,0],[319,6,258,6,"getInterpolateLAB"],[319,23,258,23],[319,26,258,26],[320,4,258,26],[320,8,258,26,"_e"],[320,10,258,26],[320,18,258,26,"global"],[320,24,258,26],[320,25,258,26,"Error"],[320,30,258,26],[321,4,258,26],[321,8,258,26,"reactNativeReanimated_interpolateColorTs9"],[321,49,258,26],[321,61,258,26,"reactNativeReanimated_interpolateColorTs9"],[321,103,259,2,"colors"],[321,109,259,38],[321,111,260,21],[322,6,263,2],[322,10,263,2,"_splitColorsIntoChann3"],[322,32,263,2],[322,35,263,35,"_splitColorsIntoChannels"],[322,59,263,59],[322,60,263,60,"colors"],[322,66,263,66],[322,68,263,68],[322,78,263,69,"color"],[322,83,263,74],[322,85,263,79],[323,10,264,4],[323,14,264,10,"labColor"],[323,22,264,18],[323,25,264,21,"culori"],[323,40,264,27],[323,41,264,28,"oklab"],[323,46,264,33],[323,47,264,34,"convert"],[323,54,264,41],[323,55,264,42,"fromRgb"],[323,62,264,49],[323,63,264,50,"color"],[323,68,264,55],[323,69,264,56],[324,10,265,4],[324,17,265,11],[325,12,266,6,"ch1"],[325,15,266,9],[325,17,266,11,"labColor"],[325,25,266,19],[325,26,266,20,"l"],[325,27,266,21],[326,12,267,6,"ch2"],[326,15,267,9],[326,17,267,11,"labColor"],[326,25,267,19],[326,26,267,20,"a"],[326,27,267,21],[327,12,268,6,"ch3"],[327,15,268,9],[327,17,268,11,"labColor"],[327,25,268,19],[327,26,268,20,"b"],[328,10,269,4],[328,11,269,5],[329,8,270,2],[329,9,270,3],[329,10,270,4],[330,8,263,10,"ch1"],[330,11,263,13],[330,14,263,13,"_splitColorsIntoChann3"],[330,36,263,13],[330,37,263,10,"ch1"],[330,40,263,13],[331,8,263,15,"ch2"],[331,11,263,18],[331,14,263,18,"_splitColorsIntoChann3"],[331,36,263,18],[331,37,263,15,"ch2"],[331,40,263,18],[332,8,263,20,"ch3"],[332,11,263,23],[332,14,263,23,"_splitColorsIntoChann3"],[332,36,263,23],[332,37,263,20,"ch3"],[332,40,263,23],[333,8,263,25,"alpha"],[333,13,263,30],[333,16,263,30,"_splitColorsIntoChann3"],[333,38,263,30],[333,39,263,25,"alpha"],[333,44,263,30],[334,6,272,2],[334,13,272,9],[335,8,273,4,"l"],[335,9,273,5],[335,11,273,7,"ch1"],[335,14,273,10],[336,8,274,4,"a"],[336,9,274,5],[336,11,274,7,"ch2"],[336,14,274,10],[337,8,275,4,"b"],[337,9,275,5],[337,11,275,7,"ch3"],[337,14,275,10],[338,8,276,4,"alpha"],[338,13,276,9],[338,15,276,4,"alpha"],[339,6,277,2],[339,7,277,3],[340,4,278,0],[340,5,278,1],[341,4,278,1,"reactNativeReanimated_interpolateColorTs9"],[341,45,278,1],[341,46,278,1,"__closure"],[341,55,278,1],[342,6,278,1,"_splitColorsIntoChannels"],[342,30,278,1],[342,32,263,35,"_splitColorsIntoChannels"],[342,56,263,59],[343,6,263,59,"culori"],[343,12,263,59],[343,14,264,21,"culori"],[344,4,264,27],[345,4,264,27,"reactNativeReanimated_interpolateColorTs9"],[345,45,264,27],[345,46,264,27,"__workletHash"],[345,59,264,27],[346,4,264,27,"reactNativeReanimated_interpolateColorTs9"],[346,45,264,27],[346,46,264,27,"__initData"],[346,56,264,27],[346,59,264,27,"_worklet_4292020092329_init_data"],[346,91,264,27],[347,4,264,27,"reactNativeReanimated_interpolateColorTs9"],[347,45,264,27],[347,46,264,27,"__stackDetails"],[347,60,264,27],[347,63,264,27,"_e"],[347,65,264,27],[348,4,264,27],[348,11,264,27,"reactNativeReanimated_interpolateColorTs9"],[348,52,264,27],[349,2,264,27],[349,3,258,26],[349,5,278,1],[351,2,280,0],[352,0,281,0],[353,0,282,0],[354,0,283,0],[355,0,284,0],[356,0,285,0],[357,0,286,0],[358,0,287,0],[359,0,288,0],[360,0,289,0],[361,0,290,0],[362,0,291,0],[363,0,292,0],[364,0,293,0],[365,0,294,0],[366,0,295,0],[367,0,296,0],[368,0,297,0],[369,2,280,0],[369,6,280,0,"_worklet_7877560832453_init_data"],[369,38,280,0],[370,4,280,0,"code"],[370,8,280,0],[371,4,280,0,"location"],[371,12,280,0],[372,4,280,0,"sourceMap"],[372,13,280,0],[373,4,280,0,"version"],[373,11,280,0],[374,2,280,0],[375,2,280,0],[375,6,280,0,"interpolateColor"],[375,22,280,0],[375,25,280,0,"exports"],[375,32,280,0],[375,33,280,0,"interpolateColor"],[375,49,280,0],[375,52,314,7],[376,4,314,7],[376,8,314,7,"_e"],[376,10,314,7],[376,18,314,7,"global"],[376,24,314,7],[376,25,314,7,"Error"],[376,30,314,7],[377,4,314,7],[377,8,314,7,"interpolateColor"],[377,24,314,7],[377,36,314,7,"interpolateColor"],[377,53,315,2,"value"],[377,58,315,15],[377,60,316,2,"inputRange"],[377,70,316,31],[377,72,317,2,"outputRange"],[377,83,317,43],[377,85,320,19],[378,6,320,19],[378,10,318,2,"colorSpace"],[378,20,318,35],[378,23,318,35,"arguments"],[378,32,318,35],[378,33,318,35,"length"],[378,39,318,35],[378,47,318,35,"arguments"],[378,56,318,35],[378,64,318,35,"undefined"],[378,73,318,35],[378,76,318,35,"arguments"],[378,85,318,35],[378,91,318,38],[378,96,318,43],[379,6,318,43],[379,10,319,2,"options"],[379,17,319,31],[379,20,319,31,"arguments"],[379,29,319,31],[379,30,319,31,"length"],[379,36,319,31],[379,44,319,31,"arguments"],[379,53,319,31],[379,61,319,31,"undefined"],[379,70,319,31],[379,73,319,31,"arguments"],[379,82,319,31],[379,88,319,34],[379,89,319,35],[379,90,319,36],[380,6,322,2],[380,10,322,6,"colorSpace"],[380,20,322,16],[380,25,322,21],[380,30,322,26],[380,32,322,28],[381,8,323,4],[381,15,323,11,"interpolateColorsHSV"],[381,35,323,31],[381,36,324,6,"value"],[381,41,324,11],[381,43,325,6,"inputRange"],[381,53,325,16],[381,55,326,6,"getInterpolateHSV"],[381,72,326,23],[381,73,326,24,"outputRange"],[381,84,326,35],[381,85,326,36],[381,87,327,6,"options"],[381,94,328,4],[381,95,328,5],[382,6,329,2],[382,7,329,3],[382,13,329,9],[382,17,329,13,"colorSpace"],[382,27,329,23],[382,32,329,28],[382,37,329,33],[382,39,329,35],[383,8,330,4],[383,15,330,11,"interpolateColorsRGB"],[383,35,330,31],[383,36,331,6,"value"],[383,41,331,11],[383,43,332,6,"inputRange"],[383,53,332,16],[383,55,333,6,"getInterpolateRGB"],[383,72,333,23],[383,73,333,24,"outputRange"],[383,84,333,35],[383,85,333,36],[383,87,334,6,"options"],[383,94,335,4],[383,95,335,5],[384,6,336,2],[384,7,336,3],[384,13,336,9],[384,17,336,13,"colorSpace"],[384,27,336,23],[384,32,336,28],[384,37,336,33],[384,39,336,35],[385,8,337,4],[385,15,337,11,"interpolateColorsLAB"],[385,35,337,31],[385,36,338,6,"value"],[385,41,338,11],[385,43,339,6,"inputRange"],[385,53,339,16],[385,55,340,6,"getInterpolateLAB"],[385,72,340,23],[385,73,340,24,"outputRange"],[385,84,340,35],[385,85,340,36],[385,87,341,6,"options"],[385,94,342,4],[385,95,342,5],[386,6,343,2],[387,6,345,2],[387,12,345,8],[387,16,345,12,"ReanimatedError"],[387,39,345,27],[387,40,346,4],[387,73,347,6,"colorSpace"],[387,83,347,16],[387,131,349,2],[387,132,349,3],[388,4,350,0],[388,5,350,1],[389,4,350,1,"interpolateColor"],[389,20,350,1],[389,21,350,1,"__closure"],[389,30,350,1],[390,6,350,1,"interpolateColorsHSV"],[390,26,350,1],[390,28,323,11,"interpolateColorsHSV"],[390,48,323,31],[391,6,323,31,"getInterpolateHSV"],[391,23,323,31],[391,25,326,6,"getInterpolateHSV"],[391,42,326,23],[392,6,326,23,"interpolateColorsRGB"],[392,26,326,23],[392,28,330,11,"interpolateColorsRGB"],[392,48,330,31],[393,6,330,31,"getInterpolateRGB"],[393,23,330,31],[393,25,333,6,"getInterpolateRGB"],[393,42,333,23],[394,6,333,23,"interpolateColorsLAB"],[394,26,333,23],[394,28,337,11,"interpolateColorsLAB"],[394,48,337,31],[395,6,337,31,"getInterpolateLAB"],[395,23,337,31],[395,25,340,6,"getInterpolateLAB"],[396,4,340,23],[397,4,340,23,"interpolateColor"],[397,20,340,23],[397,21,340,23,"__workletHash"],[397,34,340,23],[398,4,340,23,"interpolateColor"],[398,20,340,23],[398,21,340,23,"__initData"],[398,31,340,23],[398,34,340,23,"_worklet_7877560832453_init_data"],[398,66,340,23],[399,4,340,23,"interpolateColor"],[399,20,340,23],[399,21,340,23,"__stackDetails"],[399,35,340,23],[399,38,340,23,"_e"],[399,40,340,23],[400,4,340,23],[400,11,340,23,"interpolateColor"],[400,27,340,23],[401,2,340,23],[401,3,314,7],[402,2,314,7],[402,6,352,12,"ColorSpace"],[402,16,352,22],[402,19,352,22,"exports"],[402,26,352,22],[402,27,352,22,"ColorSpace"],[402,37,352,22],[402,63,352,12,"ColorSpace"],[402,73,352,22],[403,4,352,12,"ColorSpace"],[403,14,352,22],[403,15,352,12,"ColorSpace"],[403,25,352,22],[404,4,352,12,"ColorSpace"],[404,14,352,22],[404,15,352,12,"ColorSpace"],[404,25,352,22],[405,4,352,12,"ColorSpace"],[405,14,352,22],[405,15,352,12,"ColorSpace"],[405,25,352,22],[406,4,352,22],[406,11,352,12,"ColorSpace"],[406,21,352,22],[407,2,352,22],[408,2,366,7],[408,11,366,16,"useInterpolateConfig"],[408,31,366,36,"useInterpolateConfig"],[408,32,367,2,"inputRange"],[408,42,367,31],[408,44,368,2,"outputRange"],[408,55,368,43],[408,57,371,34],[409,4,371,34],[409,8,369,2,"colorSpace"],[409,18,369,12],[409,21,369,12,"arguments"],[409,30,369,12],[409,31,369,12,"length"],[409,37,369,12],[409,45,369,12,"arguments"],[409,54,369,12],[409,62,369,12,"undefined"],[409,71,369,12],[409,74,369,12,"arguments"],[409,83,369,12],[409,89,369,15,"ColorSpace"],[409,99,369,25],[409,100,369,26,"RGB"],[409,103,369,29],[410,4,369,29],[410,8,370,2,"options"],[410,15,370,31],[410,18,370,31,"arguments"],[410,27,370,31],[410,28,370,31,"length"],[410,34,370,31],[410,42,370,31,"arguments"],[410,51,370,31],[410,59,370,31,"undefined"],[410,68,370,31],[410,71,370,31,"arguments"],[410,80,370,31],[410,86,370,34],[410,87,370,35],[410,88,370,36],[411,4,372,2],[411,11,372,9],[411,15,372,9,"useSharedValue"],[411,45,372,23],[411,47,372,43],[412,6,373,4,"inputRange"],[412,16,373,14],[412,18,373,4,"inputRange"],[412,28,373,14],[413,6,374,4,"outputRange"],[413,17,374,15],[413,19,374,4,"outputRange"],[413,30,374,15],[414,6,375,4,"colorSpace"],[414,16,375,14],[414,18,375,4,"colorSpace"],[414,28,375,14],[415,6,376,4,"cache"],[415,11,376,9],[415,13,376,11],[415,17,376,11,"makeMutable"],[415,34,376,22],[415,36,376,63],[415,40,376,67],[415,41,376,68],[416,6,377,4,"options"],[416,13,377,11],[416,15,377,4,"options"],[417,4,378,2],[417,5,378,3],[417,6,378,4],[418,2,379,0],[419,0,379,1],[419,3]],"functionMap":{"names":["<global>","interpolateColorsHSV","toLinearSpace","x.map$argument_0","toGammaSpace","interpolateColorsRGB","interpolateColorsLAB","_splitColorsIntoChannels","getInterpolateRGB","_splitColorsIntoChannels$argument_1","getInterpolateHSV","getInterpolateLAB","interpolateColor","useInterpolateConfig"],"mappings":"AAA;6BCiC;CDmD;sBEE;eCE,+BD;CFC;qBIE;CJG;6BKE;CL2B;6BME;CNuB;iCOE;CP0C;0BQS;ICM;MDI;CRS;0BUS;oEDI;GCO;CVQ;0BWS;oEFK;GEO;CXQ;OYoC;CZoC;OagB;Cba"}},"type":"js/module"}]}