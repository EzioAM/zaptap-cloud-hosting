{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"react-native-url-polyfill/auto","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"FjDCbK7LcT49IdUkzoo8Fm4C4ig=","exportNames":["*"]}},{"name":"@supabase/supabase-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":42},"end":{"line":2,"column":69,"index":111}}],"key":"bIfLatK31tbWgCp34BhPDdikyTA=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":113},"end":{"line":3,"column":69,"index":182}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":184},"end":{"line":4,"column":39,"index":223}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"]}},{"name":"@react-native-community/netinfo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":225},"end":{"line":5,"column":54,"index":279}}],"key":"PqZcYTlMIVnzFjdViPzMiGUu7Hg=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":281},"end":{"line":6,"column":54,"index":335}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.testConnection = exports.supabaseWithRetry = exports.supabase = exports.refreshSession = exports.handleAuthError = exports.ensureValidSession = undefined;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[3]));\n  require(_dependencyMap[4]);\n  var _supabaseJs = require(_dependencyMap[5]);\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[6]));\n  var _expoConstants = _interopRequireDefault(require(_dependencyMap[7]));\n  var _netinfo = _interopRequireDefault(require(_dependencyMap[8]));\n  var _EventLogger = require(_dependencyMap[9]);\n  var supabaseUrl = _expoConstants.default.expoConfig?.extra?.supabaseUrl || 'https://gfkdclzgdlcvhfiujkwz.supabase.co';\n  var supabaseAnonKey = _expoConstants.default.expoConfig?.extra?.supabaseAnonKey || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imdma2RjbHpnZGxjdmhmaXVqa3d6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM0OTI2NTcsImV4cCI6MjA2OTA2ODY1N30.lJpGLp14e_9ku8n3WN8i61jYPohfx7htTEmTrnje-uE';\n\n  // Create a custom storage implementation with error handling\n  var customStorage = {\n    getItem: function () {\n      var _ref = (0, _asyncToGenerator2.default)(function* (key) {\n        try {\n          return yield _asyncStorage.default.getItem(key);\n        } catch (error) {\n          _EventLogger.EventLogger.error('client', 'Storage getItem error:', error);\n          return null;\n        }\n      });\n      return function getItem(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    setItem: function () {\n      var _ref2 = (0, _asyncToGenerator2.default)(function* (key, value) {\n        try {\n          yield _asyncStorage.default.setItem(key, value);\n        } catch (error) {\n          _EventLogger.EventLogger.error('client', 'Storage setItem error:', error);\n        }\n      });\n      return function setItem(_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    removeItem: function () {\n      var _ref3 = (0, _asyncToGenerator2.default)(function* (key) {\n        try {\n          yield _asyncStorage.default.removeItem(key);\n        } catch (error) {\n          _EventLogger.EventLogger.error('client', 'Storage removeItem error:', error);\n        }\n      });\n      return function removeItem(_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  };\n\n  // Enhanced Supabase client with retry logic\n  var SupabaseClientWithRetry = /*#__PURE__*/function () {\n    function SupabaseClientWithRetry() {\n      (0, _classCallCheck2.default)(this, SupabaseClientWithRetry);\n      this.isOnline = true;\n      this.retryCount = 3;\n      this.retryDelay = 1000;\n      this.client = (0, _supabaseJs.createClient)(supabaseUrl, supabaseAnonKey, {\n        auth: {\n          storage: customStorage,\n          autoRefreshToken: true,\n          persistSession: true,\n          detectSessionInUrl: false,\n          flowType: 'pkce',\n          storageKey: 'supabase.auth.token'\n        },\n        global: {\n          headers: {\n            'X-Client-Info': 'zaptap-mobile'\n          }\n        },\n        db: {\n          schema: 'public'\n        },\n        realtime: {\n          params: {\n            eventsPerSecond: 10\n          }\n        }\n      });\n\n      // Monitor network connectivity\n      _netinfo.default.addEventListener(state => {\n        this.isOnline = state.isConnected ?? true;\n        _EventLogger.EventLogger.debug('client', 'Network status:', this.isOnline ? 'Online' : 'Offline');\n      });\n    }\n\n    // Get the underlying Supabase client\n    return (0, _createClass2.default)(SupabaseClientWithRetry, [{\n      key: \"supabase\",\n      get: function () {\n        return this.client;\n      }\n\n      // Retry wrapper for database operations\n    }, {\n      key: \"withRetry\",\n      value: function () {\n        var _withRetry = (0, _asyncToGenerator2.default)(function* (operation) {\n          var _this = this;\n          var lastError;\n          var _loop = function* (attempt) {\n              try {\n                // Check network status before attempting\n                if (!_this.isOnline) {\n                  throw new Error('No network connection');\n                }\n                return {\n                  v: yield operation()\n                };\n              } catch (error) {\n                lastError = error;\n                _EventLogger.EventLogger.error('client', 'Attempt ${attempt + 1} failed:', error.message);\n\n                // Don't retry on auth errors or validation errors\n                if (error.code === '42501' ||\n                // permission denied\n                error.code === '23503' ||\n                // foreign key violation\n                error.code === '23505' ||\n                // unique violation\n                error.code === '23514' ||\n                // check violation\n                error.code === 'PGRST301' ||\n                // JWT expired\n                error.message?.includes('JWT')) {\n                  throw error;\n                }\n\n                // Wait before retrying\n                if (attempt < _this.retryCount - 1) {\n                  yield new Promise(resolve => setTimeout(resolve, _this.retryDelay * (attempt + 1)));\n                }\n              }\n            },\n            _ret;\n          for (var attempt = 0; attempt < this.retryCount; attempt++) {\n            _ret = yield* _loop(attempt);\n            if (_ret) return _ret.v;\n          }\n          throw lastError;\n        });\n        function withRetry(_x5) {\n          return _withRetry.apply(this, arguments);\n        }\n        return withRetry;\n      }()\n    }]);\n  }(); // Create singleton instance\n  var supabaseClientWithRetry = new SupabaseClientWithRetry();\n  var supabase = exports.supabase = supabaseClientWithRetry.supabase;\n  var supabaseWithRetry = exports.supabaseWithRetry = supabaseClientWithRetry;\n\n  // Enhanced test connection function\n  var testConnection = exports.testConnection = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        // Check network connectivity first\n        var netInfo = yield _netinfo.default.fetch();\n        if (!netInfo.isConnected) {\n          return {\n            connected: false,\n            authenticated: false,\n            error: 'No network connection',\n            details: 'network_offline',\n            networkStatus: false\n          };\n        }\n\n        // Test database connection with retry\n        var _yield$supabaseWithRe = yield supabaseWithRetry.withRetry(/*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {\n            var result = yield supabase.from('automations').select('count', {\n              count: 'exact',\n              head: true\n            }).limit(1);\n            if (result.error) throw result.error;\n            return result;\n          })),\n          healthError = _yield$supabaseWithRe.error;\n        if (healthError) {\n          _EventLogger.EventLogger.error('client', '❌ Database connection failed:', healthError);\n          return {\n            connected: false,\n            authenticated: false,\n            error: healthError.message,\n            details: 'database',\n            networkStatus: true\n          };\n        }\n\n        // Test authentication status\n        var _yield$supabase$auth$ = yield supabase.auth.getSession(),\n          session = _yield$supabase$auth$.data.session,\n          sessionError = _yield$supabase$auth$.error;\n        if (sessionError) {\n          _EventLogger.EventLogger.error('client', '❌ Auth service error:', sessionError);\n          return {\n            connected: false,\n            authenticated: false,\n            error: sessionError.message,\n            details: 'auth',\n            networkStatus: true\n          };\n        }\n        _EventLogger.EventLogger.debug('client', '✅ Supabase connected successfully');\n        _EventLogger.EventLogger.debug('client', '✅ Session status:', session ? 'Authenticated' : 'Not authenticated');\n        return {\n          connected: true,\n          authenticated: !!session,\n          user: session?.user?.email,\n          details: 'all_services_operational',\n          networkStatus: true\n        };\n      } catch (error) {\n        // Don't log network errors as errors\n        if (error?.message?.includes('Network request failed') || error?.name === 'NetworkError') {\n          _EventLogger.EventLogger.debug('client', '📴 Network unavailable for connection test');\n        } else {\n          _EventLogger.EventLogger.error('client', '❌ Supabase connection failed:', error);\n        }\n        return {\n          connected: false,\n          authenticated: false,\n          error: error.message || 'Unknown error',\n          details: 'network_or_config',\n          networkStatus: false\n        };\n      }\n    });\n    return function testConnection() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  // Helper to refresh session if needed\n  var refreshSession = exports.refreshSession = /*#__PURE__*/function () {\n    var _ref6 = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var _yield$supabase$auth$2 = yield supabase.auth.refreshSession(),\n          session = _yield$supabase$auth$2.data.session,\n          error = _yield$supabase$auth$2.error;\n        if (error) {\n          // Don't log network errors as errors\n          if (error?.message?.includes('Network request failed') || error?.name === 'NetworkError' || error?.name === 'AuthRetryableFetchError') {\n            _EventLogger.EventLogger.debug('client', '📴 Network unavailable - cannot refresh session');\n            return null;\n          }\n          _EventLogger.EventLogger.error('client', 'Failed to refresh session:', error);\n\n          // If refresh fails, try to get the current session\n          var _yield$supabase$auth$3 = yield supabase.auth.getSession(),\n            currentSession = _yield$supabase$auth$3.data.session;\n          return currentSession;\n        }\n        return session;\n      } catch (error) {\n        // Handle network errors gracefully\n        if (error?.message?.includes('Network request failed') || error?.name === 'NetworkError' || error?.name === 'AuthRetryableFetchError') {\n          _EventLogger.EventLogger.debug('client', '📴 Network unavailable - cannot refresh session');\n          return null;\n        }\n        _EventLogger.EventLogger.error('client', 'Failed to refresh session:', error);\n        return null;\n      }\n    });\n    return function refreshSession() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  // Helper to ensure session is valid\n  var ensureValidSession = exports.ensureValidSession = /*#__PURE__*/function () {\n    var _ref7 = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var _yield$supabase$auth$4 = yield supabase.auth.getSession(),\n          session = _yield$supabase$auth$4.data.session;\n        if (!session) {\n          return null;\n        }\n\n        // Check if token is expired\n        var expiresAt = session.expires_at;\n        if (expiresAt && expiresAt * 1000 < Date.now()) {\n          // Token expired, try to refresh\n          return yield refreshSession();\n        }\n        return session;\n      } catch (error) {\n        // Handle network errors gracefully\n        if (error?.message?.includes('Network request failed') || error?.name === 'NetworkError' || error?.name === 'AuthRetryableFetchError') {\n          _EventLogger.EventLogger.debug('client', '📴 Network unavailable - cannot validate session');\n          return null;\n        }\n\n        // Re-throw non-network errors\n        throw error;\n      }\n    });\n    return function ensureValidSession() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  // Helper to handle auth errors globally\n  var handleAuthError = exports.handleAuthError = /*#__PURE__*/function () {\n    var _ref8 = (0, _asyncToGenerator2.default)(function* (error) {\n      if (error.message?.includes('JWT') || error.code === 'PGRST301') {\n        // JWT error, try to refresh session\n        var newSession = yield refreshSession();\n        if (newSession) {\n          _EventLogger.EventLogger.debug('client', '✅ Session refreshed successfully');\n          return true;\n        } else {\n          _EventLogger.EventLogger.error('client', '❌ Failed to refresh session, user needs to login again');\n          return false;\n        }\n      }\n      return false;\n    });\n    return function handleAuthError(_x6) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n});","lineCount":334,"map":[[10,2,1,0,"require"],[10,9,1,0],[10,10,1,0,"_dependencyMap"],[10,24,1,0],[11,2,2,0],[11,6,2,0,"_supabaseJs"],[11,17,2,0],[11,20,2,0,"require"],[11,27,2,0],[11,28,2,0,"_dependencyMap"],[11,42,2,0],[12,2,3,0],[12,6,3,0,"_asyncStorage"],[12,19,3,0],[12,22,3,0,"_interopRequireDefault"],[12,44,3,0],[12,45,3,0,"require"],[12,52,3,0],[12,53,3,0,"_dependencyMap"],[12,67,3,0],[13,2,4,0],[13,6,4,0,"_expoConstants"],[13,20,4,0],[13,23,4,0,"_interopRequireDefault"],[13,45,4,0],[13,46,4,0,"require"],[13,53,4,0],[13,54,4,0,"_dependencyMap"],[13,68,4,0],[14,2,5,0],[14,6,5,0,"_netinfo"],[14,14,5,0],[14,17,5,0,"_interopRequireDefault"],[14,39,5,0],[14,40,5,0,"require"],[14,47,5,0],[14,48,5,0,"_dependencyMap"],[14,62,5,0],[15,2,6,0],[15,6,6,0,"_EventLogger"],[15,18,6,0],[15,21,6,0,"require"],[15,28,6,0],[15,29,6,0,"_dependencyMap"],[15,43,6,0],[16,2,8,0],[16,6,8,6,"supabaseUrl"],[16,17,8,17],[16,20,8,20,"Constants"],[16,42,8,29],[16,43,8,30,"expoConfig"],[16,53,8,40],[16,55,8,42,"extra"],[16,60,8,47],[16,62,8,49,"supabaseUrl"],[16,73,8,60],[16,77,8,64],[16,119,8,106],[17,2,9,0],[17,6,9,6,"supabaseAnonKey"],[17,21,9,21],[17,24,9,24,"Constants"],[17,46,9,33],[17,47,9,34,"expoConfig"],[17,57,9,44],[17,59,9,46,"extra"],[17,64,9,51],[17,66,9,53,"supabaseAnonKey"],[17,81,9,68],[17,85,9,72],[17,295,9,282],[19,2,11,0],[20,2,12,0],[20,6,12,6,"customStorage"],[20,19,12,19],[20,22,12,22],[21,4,13,2,"getItem"],[21,11,13,9],[22,6,13,9],[22,10,13,9,"_ref"],[22,14,13,9],[22,21,13,9,"_asyncToGenerator2"],[22,39,13,9],[22,40,13,9,"default"],[22,47,13,9],[22,49,13,11],[22,60,13,18,"key"],[22,63,13,29],[22,65,13,34],[23,8,14,4],[23,12,14,8],[24,10,15,6],[24,23,15,19,"AsyncStorage"],[24,44,15,31],[24,45,15,32,"getItem"],[24,52,15,39],[24,53,15,40,"key"],[24,56,15,43],[24,57,15,44],[25,8,16,4],[25,9,16,5],[25,10,16,6],[25,17,16,13,"error"],[25,22,16,18],[25,24,16,20],[26,10,17,6,"EventLogger"],[26,34,17,17],[26,35,17,18,"error"],[26,40,17,23],[26,41,17,24],[26,49,17,32],[26,51,17,34],[26,75,17,58],[26,77,17,60,"error"],[26,82,17,74],[26,83,17,75],[27,10,18,6],[27,17,18,13],[27,21,18,17],[28,8,19,4],[29,6,20,2],[29,7,20,3],[30,6,20,3],[30,22,13,2,"getItem"],[30,29,13,9,"getItem"],[30,30,13,9,"_x"],[30,32,13,9],[31,8,13,9],[31,15,13,9,"_ref"],[31,19,13,9],[31,20,13,9,"apply"],[31,25,13,9],[31,32,13,9,"arguments"],[31,41,13,9],[32,6,13,9],[33,4,13,9],[33,7,20,3],[34,4,21,2,"setItem"],[34,11,21,9],[35,6,21,9],[35,10,21,9,"_ref2"],[35,15,21,9],[35,22,21,9,"_asyncToGenerator2"],[35,40,21,9],[35,41,21,9,"default"],[35,48,21,9],[35,50,21,11],[35,61,21,18,"key"],[35,64,21,29],[35,66,21,31,"value"],[35,71,21,44],[35,73,21,49],[36,8,22,4],[36,12,22,8],[37,10,23,6],[37,16,23,12,"AsyncStorage"],[37,37,23,24],[37,38,23,25,"setItem"],[37,45,23,32],[37,46,23,33,"key"],[37,49,23,36],[37,51,23,38,"value"],[37,56,23,43],[37,57,23,44],[38,8,24,4],[38,9,24,5],[38,10,24,6],[38,17,24,13,"error"],[38,22,24,18],[38,24,24,20],[39,10,25,6,"EventLogger"],[39,34,25,17],[39,35,25,18,"error"],[39,40,25,23],[39,41,25,24],[39,49,25,32],[39,51,25,34],[39,75,25,58],[39,77,25,60,"error"],[39,82,25,74],[39,83,25,75],[40,8,26,4],[41,6,27,2],[41,7,27,3],[42,6,27,3],[42,22,21,2,"setItem"],[42,29,21,9,"setItem"],[42,30,21,9,"_x2"],[42,33,21,9],[42,35,21,9,"_x3"],[42,38,21,9],[43,8,21,9],[43,15,21,9,"_ref2"],[43,20,21,9],[43,21,21,9,"apply"],[43,26,21,9],[43,33,21,9,"arguments"],[43,42,21,9],[44,6,21,9],[45,4,21,9],[45,7,27,3],[46,4,28,2,"removeItem"],[46,14,28,12],[47,6,28,12],[47,10,28,12,"_ref3"],[47,15,28,12],[47,22,28,12,"_asyncToGenerator2"],[47,40,28,12],[47,41,28,12,"default"],[47,48,28,12],[47,50,28,14],[47,61,28,21,"key"],[47,64,28,32],[47,66,28,37],[48,8,29,4],[48,12,29,8],[49,10,30,6],[49,16,30,12,"AsyncStorage"],[49,37,30,24],[49,38,30,25,"removeItem"],[49,48,30,35],[49,49,30,36,"key"],[49,52,30,39],[49,53,30,40],[50,8,31,4],[50,9,31,5],[50,10,31,6],[50,17,31,13,"error"],[50,22,31,18],[50,24,31,20],[51,10,32,6,"EventLogger"],[51,34,32,17],[51,35,32,18,"error"],[51,40,32,23],[51,41,32,24],[51,49,32,32],[51,51,32,34],[51,78,32,61],[51,80,32,63,"error"],[51,85,32,77],[51,86,32,78],[52,8,33,4],[53,6,34,2],[53,7,34,3],[54,6,34,3],[54,22,28,2,"removeItem"],[54,32,28,12,"removeItem"],[54,33,28,12,"_x4"],[54,36,28,12],[55,8,28,12],[55,15,28,12,"_ref3"],[55,20,28,12],[55,21,28,12,"apply"],[55,26,28,12],[55,33,28,12,"arguments"],[55,42,28,12],[56,6,28,12],[57,4,28,12],[58,2,35,0],[58,3,35,1],[60,2,37,0],[61,2,37,0],[61,6,38,6,"SupabaseClientWithRetry"],[61,29,38,29],[62,4,44,2],[62,13,44,2,"SupabaseClientWithRetry"],[62,37,44,2],[62,39,44,16],[63,6,44,16],[63,10,44,16,"_classCallCheck2"],[63,26,44,16],[63,27,44,16,"default"],[63,34,44,16],[63,42,44,16,"SupabaseClientWithRetry"],[63,65,44,16],[64,6,44,16],[64,11,40,10,"isOnline"],[64,19,40,18],[64,22,40,30],[64,26,40,34],[65,6,40,34],[65,11,41,10,"retryCount"],[65,21,41,20],[65,24,41,31],[65,25,41,32],[66,6,41,32],[66,11,42,10,"retryDelay"],[66,21,42,20],[66,24,42,31],[66,28,42,35],[67,6,45,4],[67,10,45,8],[67,11,45,9,"client"],[67,17,45,15],[67,20,45,18],[67,24,45,18,"createClient"],[67,48,45,30],[67,50,45,31,"supabaseUrl"],[67,61,45,42],[67,63,45,44,"supabaseAnonKey"],[67,78,45,59],[67,80,45,61],[68,8,46,6,"auth"],[68,12,46,10],[68,14,46,12],[69,10,47,8,"storage"],[69,17,47,15],[69,19,47,17,"customStorage"],[69,32,47,30],[70,10,48,8,"autoRefreshToken"],[70,26,48,24],[70,28,48,26],[70,32,48,30],[71,10,49,8,"persistSession"],[71,24,49,22],[71,26,49,24],[71,30,49,28],[72,10,50,8,"detectSessionInUrl"],[72,28,50,26],[72,30,50,28],[72,35,50,33],[73,10,51,8,"flowType"],[73,18,51,16],[73,20,51,18],[73,26,51,24],[74,10,52,8,"storageKey"],[74,20,52,18],[74,22,52,20],[75,8,53,6],[75,9,53,7],[76,8,54,6,"global"],[76,14,54,12],[76,16,54,14],[77,10,55,8,"headers"],[77,17,55,15],[77,19,55,17],[78,12,56,10],[78,27,56,25],[78,29,56,27],[79,10,57,8],[80,8,58,6],[80,9,58,7],[81,8,59,6,"db"],[81,10,59,8],[81,12,59,10],[82,10,60,8,"schema"],[82,16,60,14],[82,18,60,16],[83,8,61,6],[83,9,61,7],[84,8,62,6,"realtime"],[84,16,62,14],[84,18,62,16],[85,10,63,8,"params"],[85,16,63,14],[85,18,63,16],[86,12,64,10,"eventsPerSecond"],[86,27,64,25],[86,29,64,27],[87,10,65,8],[88,8,66,6],[89,6,67,4],[89,7,67,5],[89,8,67,6],[91,6,69,4],[92,6,70,4,"NetInfo"],[92,22,70,11],[92,23,70,12,"addEventListener"],[92,39,70,28],[92,40,70,29,"state"],[92,45,70,34],[92,49,70,38],[93,8,71,6],[93,12,71,10],[93,13,71,11,"isOnline"],[93,21,71,19],[93,24,71,22,"state"],[93,29,71,27],[93,30,71,28,"isConnected"],[93,41,71,39],[93,45,71,43],[93,49,71,47],[94,8,72,6,"EventLogger"],[94,32,72,17],[94,33,72,18,"debug"],[94,38,72,23],[94,39,72,24],[94,47,72,32],[94,49,72,34],[94,66,72,51],[94,68,72,53],[94,72,72,57],[94,73,72,58,"isOnline"],[94,81,72,66],[94,84,72,69],[94,92,72,77],[94,95,72,80],[94,104,72,89],[94,105,72,90],[95,6,73,4],[95,7,73,5],[95,8,73,6],[96,4,74,2],[98,4,76,2],[99,4,76,2],[99,15,76,2,"_createClass2"],[99,28,76,2],[99,29,76,2,"default"],[99,36,76,2],[99,38,76,2,"SupabaseClientWithRetry"],[99,61,76,2],[100,6,76,2,"key"],[100,9,76,2],[101,6,76,2,"get"],[101,9,76,2],[101,11,77,2],[101,20,77,2,"get"],[101,21,77,2],[101,23,77,17],[102,8,78,4],[102,15,78,11],[102,19,78,15],[102,20,78,16,"client"],[102,26,78,22],[103,6,79,2],[105,6,81,2],[106,4,81,2],[107,6,81,2,"key"],[107,9,81,2],[108,6,81,2,"value"],[108,11,81,2],[109,8,81,2],[109,12,81,2,"_withRetry"],[109,22,81,2],[109,29,81,2,"_asyncToGenerator2"],[109,47,81,2],[109,48,81,2,"default"],[109,55,81,2],[109,57,82,2],[109,68,82,21,"operation"],[109,77,82,48],[109,79,82,62],[110,10,82,62],[110,14,82,62,"_this"],[110,19,82,62],[111,10,83,4],[111,14,83,8,"lastError"],[111,23,83,22],[112,10,83,23],[112,14,83,23,"_loop"],[112,19,83,23],[112,32,83,23,"_loop"],[112,33,83,23,"attempt"],[112,40,83,23],[112,42,85,64],[113,14,86,6],[113,18,86,10],[114,16,87,8],[115,16,88,8],[115,20,88,12],[115,21,88,13,"_this"],[115,26,88,17],[115,27,88,18,"isOnline"],[115,35,88,26],[115,37,88,28],[116,18,89,10],[116,24,89,16],[116,28,89,20,"Error"],[116,33,89,25],[116,34,89,26],[116,57,89,49],[116,58,89,50],[117,16,90,8],[118,16,90,9],[119,18,90,9,"v"],[119,19,90,9],[119,27,92,21,"operation"],[119,36,92,30],[119,37,92,31],[120,16,92,32],[121,14,93,6],[121,15,93,7],[121,16,93,8],[121,23,93,15,"error"],[121,28,93,25],[121,30,93,27],[122,16,94,8,"lastError"],[122,25,94,17],[122,28,94,20,"error"],[122,33,94,25],[123,16,95,8,"EventLogger"],[123,40,95,19],[123,41,95,20,"error"],[123,46,95,25],[123,47,95,26],[123,55,95,34],[123,57,95,36],[123,89,95,68],[123,91,95,70,"error"],[123,96,95,75],[123,97,95,76,"message"],[123,104,95,92],[123,105,95,93],[125,16,97,8],[126,16,98,8],[126,20,98,12,"error"],[126,25,98,17],[126,26,98,18,"code"],[126,30,98,22],[126,35,98,27],[126,42,98,34],[127,16,98,38],[128,16,99,12,"error"],[128,21,99,17],[128,22,99,18,"code"],[128,26,99,22],[128,31,99,27],[128,38,99,34],[129,16,99,38],[130,16,100,12,"error"],[130,21,100,17],[130,22,100,18,"code"],[130,26,100,22],[130,31,100,27],[130,38,100,34],[131,16,100,38],[132,16,101,12,"error"],[132,21,101,17],[132,22,101,18,"code"],[132,26,101,22],[132,31,101,27],[132,38,101,34],[133,16,101,38],[134,16,102,12,"error"],[134,21,102,17],[134,22,102,18,"code"],[134,26,102,22],[134,31,102,27],[134,41,102,37],[135,16,102,41],[136,16,103,12,"error"],[136,21,103,17],[136,22,103,18,"message"],[136,29,103,25],[136,31,103,27,"includes"],[136,39,103,35],[136,40,103,36],[136,45,103,41],[136,46,103,42],[136,48,103,44],[137,18,104,10],[137,24,104,16,"error"],[137,29,104,21],[138,16,105,8],[140,16,107,8],[141,16,108,8],[141,20,108,12,"attempt"],[141,27,108,19],[141,30,108,22,"_this"],[141,35,108,26],[141,36,108,27,"retryCount"],[141,46,108,37],[141,49,108,40],[141,50,108,41],[141,52,108,43],[142,18,109,10],[142,24,109,16],[142,28,109,20,"Promise"],[142,35,109,27],[142,36,109,28,"resolve"],[142,43,109,35],[142,47,109,39,"setTimeout"],[142,57,109,49],[142,58,109,50,"resolve"],[142,65,109,57],[142,67,109,59,"_this"],[142,72,109,63],[142,73,109,64,"retryDelay"],[142,83,109,74],[142,87,109,78,"attempt"],[142,94,109,85],[142,97,109,88],[142,98,109,89],[142,99,109,90],[142,100,109,91],[142,101,109,92],[143,16,110,8],[144,14,111,6],[145,12,112,4],[145,13,112,5],[146,12,112,5,"_ret"],[146,16,112,5],[147,10,85,4],[147,15,85,9],[147,19,85,13,"attempt"],[147,26,85,20],[147,29,85,23],[147,30,85,24],[147,32,85,26,"attempt"],[147,39,85,33],[147,42,85,36],[147,46,85,40],[147,47,85,41,"retryCount"],[147,57,85,51],[147,59,85,53,"attempt"],[147,66,85,60],[147,68,85,62],[148,12,85,62,"_ret"],[148,16,85,62],[148,26,85,62,"_loop"],[148,31,85,62],[148,32,85,62,"attempt"],[148,39,85,62],[149,12,85,62],[149,16,85,62,"_ret"],[149,20,85,62],[149,29,85,62,"_ret"],[149,33,85,62],[149,34,85,62,"v"],[149,35,85,62],[150,10,85,62],[151,10,114,4],[151,16,114,10,"lastError"],[151,25,114,19],[152,8,115,2],[152,9,115,3],[153,8,115,3],[153,17,82,8,"withRetry"],[153,26,82,17,"withRetry"],[153,27,82,17,"_x5"],[153,30,82,17],[154,10,82,17],[154,17,82,17,"_withRetry"],[154,27,82,17],[154,28,82,17,"apply"],[154,33,82,17],[154,40,82,17,"arguments"],[154,49,82,17],[155,8,82,17],[156,8,82,17],[156,15,82,8,"withRetry"],[156,24,82,17],[157,6,82,17],[158,4,82,17],[159,2,82,17],[159,7,118,0],[160,2,119,0],[160,6,119,6,"supabaseClientWithRetry"],[160,29,119,29],[160,32,119,32],[160,36,119,36,"SupabaseClientWithRetry"],[160,59,119,59],[160,60,119,60],[160,61,119,61],[161,2,120,7],[161,6,120,13,"supabase"],[161,14,120,21],[161,17,120,21,"exports"],[161,24,120,21],[161,25,120,21,"supabase"],[161,33,120,21],[161,36,120,24,"supabaseClientWithRetry"],[161,59,120,47],[161,60,120,48,"supabase"],[161,68,120,56],[162,2,121,7],[162,6,121,13,"supabaseWithRetry"],[162,23,121,30],[162,26,121,30,"exports"],[162,33,121,30],[162,34,121,30,"supabaseWithRetry"],[162,51,121,30],[162,54,121,33,"supabaseClientWithRetry"],[162,77,121,56],[164,2,123,0],[165,2,124,7],[165,6,124,13,"testConnection"],[165,20,124,27],[165,23,124,27,"exports"],[165,30,124,27],[165,31,124,27,"testConnection"],[165,45,124,27],[166,4,124,27],[166,8,124,27,"_ref4"],[166,13,124,27],[166,20,124,27,"_asyncToGenerator2"],[166,38,124,27],[166,39,124,27,"default"],[166,46,124,27],[166,48,124,30],[166,61,131,6],[167,6,132,2],[167,10,132,6],[168,8,133,4],[169,8,134,4],[169,12,134,10,"netInfo"],[169,19,134,17],[169,28,134,26,"NetInfo"],[169,44,134,33],[169,45,134,34,"fetch"],[169,50,134,39],[169,51,134,40],[169,52,134,41],[170,8,135,4],[170,12,135,8],[170,13,135,9,"netInfo"],[170,20,135,16],[170,21,135,17,"isConnected"],[170,32,135,28],[170,34,135,30],[171,10,136,6],[171,17,136,13],[172,12,137,8,"connected"],[172,21,137,17],[172,23,137,19],[172,28,137,24],[173,12,138,8,"authenticated"],[173,25,138,21],[173,27,138,23],[173,32,138,28],[174,12,139,8,"error"],[174,17,139,13],[174,19,139,15],[174,42,139,38],[175,12,140,8,"details"],[175,19,140,15],[175,21,140,17],[175,38,140,34],[176,12,141,8,"networkStatus"],[176,25,141,21],[176,27,141,23],[177,10,142,6],[177,11,142,7],[178,8,143,4],[180,8,145,4],[181,8,146,4],[181,12,146,4,"_yield$supabaseWithRe"],[181,33,146,4],[181,42,146,41,"supabaseWithRetry"],[181,59,146,58],[181,60,146,59,"withRetry"],[181,69,146,68],[181,87,146,68,"_asyncToGenerator2"],[181,105,146,68],[181,106,146,68,"default"],[181,113,146,68],[181,115,146,69],[181,128,146,81],[182,12,147,6],[182,16,147,12,"result"],[182,22,147,18],[182,31,147,27,"supabase"],[182,39,147,35],[182,40,148,9,"from"],[182,44,148,13],[182,45,148,14],[182,58,148,27],[182,59,148,28],[182,60,149,9,"select"],[182,66,149,15],[182,67,149,16],[182,74,149,23],[182,76,149,25],[183,14,149,27,"count"],[183,19,149,32],[183,21,149,34],[183,28,149,41],[184,14,149,43,"head"],[184,18,149,47],[184,20,149,49],[185,12,149,54],[185,13,149,55],[185,14,149,56],[185,15,150,9,"limit"],[185,20,150,14],[185,21,150,15],[185,22,150,16],[185,23,150,17],[186,12,152,6],[186,16,152,10,"result"],[186,22,152,16],[186,23,152,17,"error"],[186,28,152,22],[186,30,152,24],[186,36,152,30,"result"],[186,42,152,36],[186,43,152,37,"error"],[186,48,152,42],[187,12,153,6],[187,19,153,13,"result"],[187,25,153,19],[188,10,154,4],[188,11,154,5],[188,13,154,6],[189,10,146,19,"healthError"],[189,21,146,30],[189,24,146,30,"_yield$supabaseWithRe"],[189,45,146,30],[189,46,146,12,"error"],[189,51,146,17],[190,8,156,4],[190,12,156,8,"healthError"],[190,23,156,19],[190,25,156,21],[191,10,157,6,"EventLogger"],[191,34,157,17],[191,35,157,18,"error"],[191,40,157,23],[191,41,157,24],[191,49,157,32],[191,51,157,34],[191,82,157,65],[191,84,157,67,"healthError"],[191,95,157,87],[191,96,157,88],[192,10,158,6],[192,17,158,13],[193,12,159,8,"connected"],[193,21,159,17],[193,23,159,19],[193,28,159,24],[194,12,160,8,"authenticated"],[194,25,160,21],[194,27,160,23],[194,32,160,28],[195,12,161,8,"error"],[195,17,161,13],[195,19,161,15,"healthError"],[195,30,161,26],[195,31,161,27,"message"],[195,38,161,34],[196,12,162,8,"details"],[196,19,162,15],[196,21,162,17],[196,31,162,27],[197,12,163,8,"networkStatus"],[197,25,163,21],[197,27,163,23],[198,10,164,6],[198,11,164,7],[199,8,165,4],[201,8,167,4],[202,8,168,4],[202,12,168,4,"_yield$supabase$auth$"],[202,33,168,4],[202,42,168,61,"supabase"],[202,50,168,69],[202,51,168,70,"auth"],[202,55,168,74],[202,56,168,75,"getSession"],[202,66,168,85],[202,67,168,86],[202,68,168,87],[203,10,168,20,"session"],[203,17,168,27],[203,20,168,27,"_yield$supabase$auth$"],[203,41,168,27],[203,42,168,12,"data"],[203,46,168,16],[203,47,168,20,"session"],[203,54,168,27],[204,10,168,38,"sessionError"],[204,22,168,50],[204,25,168,50,"_yield$supabase$auth$"],[204,46,168,50],[204,47,168,31,"error"],[204,52,168,36],[205,8,170,4],[205,12,170,8,"sessionError"],[205,24,170,20],[205,26,170,22],[206,10,171,6,"EventLogger"],[206,34,171,17],[206,35,171,18,"error"],[206,40,171,23],[206,41,171,24],[206,49,171,32],[206,51,171,34],[206,74,171,57],[206,76,171,59,"sessionError"],[206,88,171,80],[206,89,171,81],[207,10,172,6],[207,17,172,13],[208,12,173,8,"connected"],[208,21,173,17],[208,23,173,19],[208,28,173,24],[209,12,174,8,"authenticated"],[209,25,174,21],[209,27,174,23],[209,32,174,28],[210,12,175,8,"error"],[210,17,175,13],[210,19,175,15,"sessionError"],[210,31,175,27],[210,32,175,28,"message"],[210,39,175,35],[211,12,176,8,"details"],[211,19,176,15],[211,21,176,17],[211,27,176,23],[212,12,177,8,"networkStatus"],[212,25,177,21],[212,27,177,23],[213,10,178,6],[213,11,178,7],[214,8,179,4],[215,8,181,4,"EventLogger"],[215,32,181,15],[215,33,181,16,"debug"],[215,38,181,21],[215,39,181,22],[215,47,181,30],[215,49,181,32],[215,84,181,67],[215,85,181,68],[216,8,182,4,"EventLogger"],[216,32,182,15],[216,33,182,16,"debug"],[216,38,182,21],[216,39,182,22],[216,47,182,30],[216,49,182,32],[216,68,182,51],[216,70,182,53,"session"],[216,77,182,60],[216,80,182,63],[216,95,182,78],[216,98,182,81],[216,117,182,100],[216,118,182,101],[217,8,184,4],[217,15,184,11],[218,10,185,6,"connected"],[218,19,185,15],[218,21,185,17],[218,25,185,21],[219,10,186,6,"authenticated"],[219,23,186,19],[219,25,186,21],[219,26,186,22],[219,27,186,23,"session"],[219,34,186,30],[220,10,187,6,"user"],[220,14,187,10],[220,16,187,12,"session"],[220,23,187,19],[220,25,187,21,"user"],[220,29,187,25],[220,31,187,27,"email"],[220,36,187,32],[221,10,188,6,"details"],[221,17,188,13],[221,19,188,15],[221,45,188,41],[222,10,189,6,"networkStatus"],[222,23,189,19],[222,25,189,21],[223,8,190,4],[223,9,190,5],[224,6,191,2],[224,7,191,3],[224,8,191,4],[224,15,191,11,"error"],[224,20,191,21],[224,22,191,23],[225,8,192,4],[226,8,193,4],[226,12,193,8,"error"],[226,17,193,13],[226,19,193,15,"message"],[226,26,193,22],[226,28,193,24,"includes"],[226,36,193,32],[226,37,193,33],[226,61,193,57],[226,62,193,58],[226,66,194,8,"error"],[226,71,194,13],[226,73,194,15,"name"],[226,77,194,19],[226,82,194,24],[226,96,194,38],[226,98,194,40],[227,10,195,6,"EventLogger"],[227,34,195,17],[227,35,195,18,"debug"],[227,40,195,23],[227,41,195,24],[227,49,195,32],[227,51,195,34],[227,95,195,78],[227,96,195,79],[228,8,196,4],[228,9,196,5],[228,15,196,11],[229,10,197,6,"EventLogger"],[229,34,197,17],[229,35,197,18,"error"],[229,40,197,23],[229,41,197,24],[229,49,197,32],[229,51,197,34],[229,82,197,65],[229,84,197,67,"error"],[229,89,197,81],[229,90,197,82],[230,8,198,4],[231,8,200,4],[231,15,200,11],[232,10,201,6,"connected"],[232,19,201,15],[232,21,201,17],[232,26,201,22],[233,10,202,6,"authenticated"],[233,23,202,19],[233,25,202,21],[233,30,202,26],[234,10,203,6,"error"],[234,15,203,11],[234,17,203,13,"error"],[234,22,203,18],[234,23,203,19,"message"],[234,30,203,26],[234,34,203,30],[234,49,203,45],[235,10,204,6,"details"],[235,17,204,13],[235,19,204,15],[235,38,204,34],[236,10,205,6,"networkStatus"],[236,23,205,19],[236,25,205,21],[237,8,206,4],[237,9,206,5],[238,6,207,2],[239,4,208,0],[239,5,208,1],[240,4,208,1],[240,20,124,13,"testConnection"],[240,34,124,27,"testConnection"],[240,35,124,27],[241,6,124,27],[241,13,124,27,"_ref4"],[241,18,124,27],[241,19,124,27,"apply"],[241,24,124,27],[241,31,124,27,"arguments"],[241,40,124,27],[242,4,124,27],[243,2,124,27],[243,5,208,1],[245,2,210,0],[246,2,211,7],[246,6,211,13,"refreshSession"],[246,20,211,27],[246,23,211,27,"exports"],[246,30,211,27],[246,31,211,27,"refreshSession"],[246,45,211,27],[247,4,211,27],[247,8,211,27,"_ref6"],[247,13,211,27],[247,20,211,27,"_asyncToGenerator2"],[247,38,211,27],[247,39,211,27,"default"],[247,46,211,27],[247,48,211,30],[247,61,211,42],[248,6,212,2],[248,10,212,6],[249,8,213,4],[249,12,213,4,"_yield$supabase$auth$2"],[249,34,213,4],[249,43,213,47,"supabase"],[249,51,213,55],[249,52,213,56,"auth"],[249,56,213,60],[249,57,213,61,"refreshSession"],[249,71,213,75],[249,72,213,76],[249,73,213,77],[250,10,213,20,"session"],[250,17,213,27],[250,20,213,27,"_yield$supabase$auth$2"],[250,42,213,27],[250,43,213,12,"data"],[250,47,213,16],[250,48,213,20,"session"],[250,55,213,27],[251,10,213,31,"error"],[251,15,213,36],[251,18,213,36,"_yield$supabase$auth$2"],[251,40,213,36],[251,41,213,31,"error"],[251,46,213,36],[252,8,214,4],[252,12,214,8,"error"],[252,17,214,13],[252,19,214,15],[253,10,215,6],[254,10,216,6],[254,14,216,10,"error"],[254,19,216,15],[254,21,216,17,"message"],[254,28,216,24],[254,30,216,26,"includes"],[254,38,216,34],[254,39,216,35],[254,63,216,59],[254,64,216,60],[254,68,217,10,"error"],[254,73,217,15],[254,75,217,17,"name"],[254,79,217,21],[254,84,217,26],[254,98,217,40],[254,102,218,10,"error"],[254,107,218,15],[254,109,218,17,"name"],[254,113,218,21],[254,118,218,26],[254,143,218,51],[254,145,218,53],[255,12,219,8,"EventLogger"],[255,36,219,19],[255,37,219,20,"debug"],[255,42,219,25],[255,43,219,26],[255,51,219,34],[255,53,219,36],[255,102,219,85],[255,103,219,86],[256,12,220,8],[256,19,220,15],[256,23,220,19],[257,10,221,6],[258,10,223,6,"EventLogger"],[258,34,223,17],[258,35,223,18,"error"],[258,40,223,23],[258,41,223,24],[258,49,223,32],[258,51,223,34],[258,79,223,62],[258,81,223,64,"error"],[258,86,223,78],[258,87,223,79],[260,10,225,6],[261,10,226,6],[261,14,226,6,"_yield$supabase$auth$3"],[261,36,226,6],[261,45,226,58,"supabase"],[261,53,226,66],[261,54,226,67,"auth"],[261,58,226,71],[261,59,226,72,"getSession"],[261,69,226,82],[261,70,226,83],[261,71,226,84],[262,12,226,31,"currentSession"],[262,26,226,45],[262,29,226,45,"_yield$supabase$auth$3"],[262,51,226,45],[262,52,226,14,"data"],[262,56,226,18],[262,57,226,22,"session"],[262,64,226,29],[263,10,227,6],[263,17,227,13,"currentSession"],[263,31,227,27],[264,8,228,4],[265,8,229,4],[265,15,229,11,"session"],[265,22,229,18],[266,6,230,2],[266,7,230,3],[266,8,230,4],[266,15,230,11,"error"],[266,20,230,21],[266,22,230,23],[267,8,231,4],[268,8,232,4],[268,12,232,8,"error"],[268,17,232,13],[268,19,232,15,"message"],[268,26,232,22],[268,28,232,24,"includes"],[268,36,232,32],[268,37,232,33],[268,61,232,57],[268,62,232,58],[268,66,233,8,"error"],[268,71,233,13],[268,73,233,15,"name"],[268,77,233,19],[268,82,233,24],[268,96,233,38],[268,100,234,8,"error"],[268,105,234,13],[268,107,234,15,"name"],[268,111,234,19],[268,116,234,24],[268,141,234,49],[268,143,234,51],[269,10,235,6,"EventLogger"],[269,34,235,17],[269,35,235,18,"debug"],[269,40,235,23],[269,41,235,24],[269,49,235,32],[269,51,235,34],[269,100,235,83],[269,101,235,84],[270,10,236,6],[270,17,236,13],[270,21,236,17],[271,8,237,4],[272,8,239,4,"EventLogger"],[272,32,239,15],[272,33,239,16,"error"],[272,38,239,21],[272,39,239,22],[272,47,239,30],[272,49,239,32],[272,77,239,60],[272,79,239,62,"error"],[272,84,239,76],[272,85,239,77],[273,8,240,4],[273,15,240,11],[273,19,240,15],[274,6,241,2],[275,4,242,0],[275,5,242,1],[276,4,242,1],[276,20,211,13,"refreshSession"],[276,34,211,27,"refreshSession"],[276,35,211,27],[277,6,211,27],[277,13,211,27,"_ref6"],[277,18,211,27],[277,19,211,27,"apply"],[277,24,211,27],[277,31,211,27,"arguments"],[277,40,211,27],[278,4,211,27],[279,2,211,27],[279,5,242,1],[281,2,244,0],[282,2,245,7],[282,6,245,13,"ensureValidSession"],[282,24,245,31],[282,27,245,31,"exports"],[282,34,245,31],[282,35,245,31,"ensureValidSession"],[282,53,245,31],[283,4,245,31],[283,8,245,31,"_ref7"],[283,13,245,31],[283,20,245,31,"_asyncToGenerator2"],[283,38,245,31],[283,39,245,31,"default"],[283,46,245,31],[283,48,245,34],[283,61,245,46],[284,6,246,2],[284,10,246,6],[285,8,247,4],[285,12,247,4,"_yield$supabase$auth$4"],[285,34,247,4],[285,43,247,40,"supabase"],[285,51,247,48],[285,52,247,49,"auth"],[285,56,247,53],[285,57,247,54,"getSession"],[285,67,247,64],[285,68,247,65],[285,69,247,66],[286,10,247,20,"session"],[286,17,247,27],[286,20,247,27,"_yield$supabase$auth$4"],[286,42,247,27],[286,43,247,12,"data"],[286,47,247,16],[286,48,247,20,"session"],[286,55,247,27],[287,8,249,4],[287,12,249,8],[287,13,249,9,"session"],[287,20,249,16],[287,22,249,18],[288,10,250,6],[288,17,250,13],[288,21,250,17],[289,8,251,4],[291,8,253,4],[292,8,254,4],[292,12,254,10,"expiresAt"],[292,21,254,19],[292,24,254,22,"session"],[292,31,254,29],[292,32,254,30,"expires_at"],[292,42,254,40],[293,8,255,4],[293,12,255,8,"expiresAt"],[293,21,255,17],[293,25,255,21,"expiresAt"],[293,34,255,30],[293,37,255,33],[293,41,255,37],[293,44,255,40,"Date"],[293,48,255,44],[293,49,255,45,"now"],[293,52,255,48],[293,53,255,49],[293,54,255,50],[293,56,255,52],[294,10,256,6],[295,10,257,6],[295,23,257,19,"refreshSession"],[295,37,257,33],[295,38,257,34],[295,39,257,35],[296,8,258,4],[297,8,260,4],[297,15,260,11,"session"],[297,22,260,18],[298,6,261,2],[298,7,261,3],[298,8,261,4],[298,15,261,11,"error"],[298,20,261,21],[298,22,261,23],[299,8,262,4],[300,8,263,4],[300,12,263,8,"error"],[300,17,263,13],[300,19,263,15,"message"],[300,26,263,22],[300,28,263,24,"includes"],[300,36,263,32],[300,37,263,33],[300,61,263,57],[300,62,263,58],[300,66,264,8,"error"],[300,71,264,13],[300,73,264,15,"name"],[300,77,264,19],[300,82,264,24],[300,96,264,38],[300,100,265,8,"error"],[300,105,265,13],[300,107,265,15,"name"],[300,111,265,19],[300,116,265,24],[300,141,265,49],[300,143,265,51],[301,10,266,6,"EventLogger"],[301,34,266,17],[301,35,266,18,"debug"],[301,40,266,23],[301,41,266,24],[301,49,266,32],[301,51,266,34],[301,101,266,84],[301,102,266,85],[302,10,267,6],[302,17,267,13],[302,21,267,17],[303,8,268,4],[305,8,270,4],[306,8,271,4],[306,14,271,10,"error"],[306,19,271,15],[307,6,272,2],[308,4,273,0],[308,5,273,1],[309,4,273,1],[309,20,245,13,"ensureValidSession"],[309,38,245,31,"ensureValidSession"],[309,39,245,31],[310,6,245,31],[310,13,245,31,"_ref7"],[310,18,245,31],[310,19,245,31,"apply"],[310,24,245,31],[310,31,245,31,"arguments"],[310,40,245,31],[311,4,245,31],[312,2,245,31],[312,5,273,1],[314,2,275,0],[315,2,276,7],[315,6,276,13,"handleAuthError"],[315,21,276,28],[315,24,276,28,"exports"],[315,31,276,28],[315,32,276,28,"handleAuthError"],[315,47,276,28],[316,4,276,28],[316,8,276,28,"_ref8"],[316,13,276,28],[316,20,276,28,"_asyncToGenerator2"],[316,38,276,28],[316,39,276,28,"default"],[316,46,276,28],[316,48,276,31],[316,59,276,38,"error"],[316,64,276,48],[316,66,276,53],[317,6,277,2],[317,10,277,6,"error"],[317,15,277,11],[317,16,277,12,"message"],[317,23,277,19],[317,25,277,21,"includes"],[317,33,277,29],[317,34,277,30],[317,39,277,35],[317,40,277,36],[317,44,277,40,"error"],[317,49,277,45],[317,50,277,46,"code"],[317,54,277,50],[317,59,277,55],[317,69,277,65],[317,71,277,67],[318,8,278,4],[319,8,279,4],[319,12,279,10,"newSession"],[319,22,279,20],[319,31,279,29,"refreshSession"],[319,45,279,43],[319,46,279,44],[319,47,279,45],[320,8,280,4],[320,12,280,8,"newSession"],[320,22,280,18],[320,24,280,20],[321,10,281,6,"EventLogger"],[321,34,281,17],[321,35,281,18,"debug"],[321,40,281,23],[321,41,281,24],[321,49,281,32],[321,51,281,34],[321,85,281,68],[321,86,281,69],[322,10,282,6],[322,17,282,13],[322,21,282,17],[323,8,283,4],[323,9,283,5],[323,15,283,11],[324,10,284,6,"EventLogger"],[324,34,284,17],[324,35,284,18,"error"],[324,40,284,23],[324,41,284,24],[324,49,284,32],[324,51,284,34],[324,107,284,90],[324,108,284,91],[325,10,285,6],[325,17,285,13],[325,22,285,18],[326,8,286,4],[327,6,287,2],[328,6,288,2],[328,13,288,9],[328,18,288,14],[329,4,289,0],[329,5,289,1],[330,4,289,1],[330,20,276,13,"handleAuthError"],[330,35,276,28,"handleAuthError"],[330,36,276,28,"_x6"],[330,39,276,28],[331,6,276,28],[331,13,276,28,"_ref8"],[331,18,276,28],[331,19,276,28,"apply"],[331,24,276,28],[331,31,276,28,"arguments"],[331,40,276,28],[332,4,276,28],[333,2,276,28],[333,5,289,1],[334,0,289,2],[334,3]],"functionMap":{"names":["<global>","customStorage.getItem","customStorage.setItem","customStorage.removeItem","SupabaseClientWithRetry","SupabaseClientWithRetry#constructor","NetInfo.addEventListener$argument_0","SupabaseClientWithRetry#get__supabase","SupabaseClientWithRetry#withRetry","Promise$argument_0","testConnection","supabaseWithRetry.withRetry$argument_0","refreshSession","ensureValidSession","handleAuthError"],"mappings":"AAA;WCY;GDO;WEC;GFM;cGC;GHM;AII;ECM;6BC0B;KDG;GDC;EGG;GHE;EIG;4BC2B,+DD;GJM;CJC;8BUQ;qECsB;KDQ;CVsD;8BYG;CZ+B;kCaG;Cb4B;+BcG;Cda"}},"type":"js/module"}]}