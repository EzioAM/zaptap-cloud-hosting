{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@reduxjs/toolkit","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":84,"index":84}}],"key":"54oW2xbJyHE290wIe7uf9enEy7w=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":147},"end":{"line":3,"column":54,"index":201}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}},{"name":"../../utils/errorRecovery","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":202},"end":{"line":4,"column":65,"index":267}}],"key":"RP4thOe0SQlp27ddE2AuYx6HVgQ=","exportNames":["*"]}},{"name":"../../services/supabase/client","data":{"asyncType":"async","isESMImport":true,"locs":[{"start":{"line":157,"column":43,"index":5545},"end":{"line":157,"column":83,"index":5585}}],"key":"ajXqTkOxVh13/E8qrjI2UvUvVoU=","exportNames":["*"],"isOptional":true}},{"name":"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/@expo/metro-config/build/async-require.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":157,"column":16,"index":5518},"end":{"line":157,"column":84,"index":5586}}],"key":"iDU+jeGcLQEhf1Ypl18gGBIi81Y=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialErrorState = exports.errorReducer = exports.errorHandlingMiddleware = exports.errorActions = undefined;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _toolkit = require(_dependencyMap[2]);\n  var _EventLogger = require(_dependencyMap[3]);\n  var _errorRecovery = require(_dependencyMap[4]);\n  /**\n   * Enhanced error types for better categorization\n   */\n\n  /**\n   * Categorize errors for better handling\n   */\n  function categorizeError(error) {\n    if (typeof error.status === 'number') {\n      if (error.status >= 400 && error.status < 500) {\n        if (error.status === 401 || error.status === 403) return 'auth';\n        if (error.status === 422 || error.status === 400) return 'validation';\n        return 'client';\n      }\n      if (error.status >= 500) return 'server';\n    }\n    if (error.status === 'FETCH_ERROR' || error.status === 'TIMEOUT_ERROR') {\n      return 'network';\n    }\n    return 'unknown';\n  }\n\n  /**\n   * Determine if error is recoverable through retry\n   */\n  function isRecoverable(error, category) {\n    // Network errors are usually recoverable\n    if (category === 'network') return true;\n\n    // Server errors might be recoverable\n    if (category === 'server') return true;\n\n    // 429 Too Many Requests is recoverable\n    if (error.status === 429) return true;\n\n    // Auth errors might be recoverable if we can refresh token\n    if (category === 'auth' && error.status === 401) return true;\n\n    // Client and validation errors are usually not recoverable through retry\n    return false;\n  }\n\n  /**\n   * Generate user-friendly error messages\n   */\n  function getUserMessage(error, category) {\n    switch (category) {\n      case 'network':\n        return 'Network connection error. Please check your internet connection and try again.';\n      case 'auth':\n        if (error.status === 401) return 'Your session has expired. Please sign in again.';\n        if (error.status === 403) return 'You don\\'t have permission to perform this action.';\n        return 'Authentication error. Please sign in again.';\n      case 'validation':\n        return 'The information provided is invalid. Please check your input and try again.';\n      case 'server':\n        return 'Server error. We\\'re working to fix this. Please try again later.';\n      case 'client':\n        if (error.status === 404) return 'The requested resource was not found.';\n        if (error.status === 429) return 'Too many requests. Please wait a moment and try again.';\n        return 'Request error. Please try again.';\n      default:\n        return 'An unexpected error occurred. Please try again.';\n    }\n  }\n\n  /**\n   * Extract retry delay from error response\n   */\n  function getRetryAfter(error) {\n    if (error.status === 429 && error.data && typeof error.data === 'object') {\n      var data = error.data;\n      if (data.retryAfter) return data.retryAfter * 1000; // Convert to ms\n      if (data['retry-after']) return parseInt(data['retry-after']) * 1000;\n    }\n    return undefined;\n  }\n\n  /**\n   * Enhanced Redux error handling middleware\n   * \n   * This middleware:\n   * 1. Catches all RTK Query errors\n   * 2. Categorizes errors for better handling\n   * 3. Logs structured error information\n   * 4. Determines recovery strategies\n   * 5. Provides user-friendly error messages\n   */\n  var errorHandlingMiddleware = storeApi => next => action => {\n    // Handle rejected RTK Query actions\n    if ((0, _toolkit.isRejectedWithValue)(action)) {\n      var error = action.payload;\n      var category = categorizeError(error);\n      var recoverable = isRecoverable(error, category);\n      var userMessage = getUserMessage(error, category);\n      var retryAfter = getRetryAfter(error);\n\n      // Create enhanced error object\n      var enhancedError = {\n        ...error,\n        category,\n        recoverable,\n        retryAfter,\n        userMessage\n      };\n\n      // Log the error with context\n      _EventLogger.EventLogger.error('Redux', `API ${category} error in ${action.type}`, new Error(userMessage), {\n        action: action.type,\n        error: enhancedError,\n        category,\n        recoverable,\n        retryAfter,\n        status: error.status,\n        endpoint: action.meta?.baseQueryMeta?.request?.url,\n        method: action.meta?.baseQueryMeta?.request?.method,\n        timestamp: new Date().toISOString()\n      });\n\n      // Register recovery strategy for this error type if recoverable\n      if (recoverable && !_errorRecovery.errorRecoveryManager['strategies']?.find?.(s => s.name === `redux_${category}_recovery`)) {\n        _errorRecovery.errorRecoveryManager.addRecoveryStrategy({\n          name: `redux_${category}_recovery`,\n          canRecover: err => {\n            return err.message.includes(category || '');\n          },\n          recover: function () {\n            var _ref = (0, _asyncToGenerator2.default)(function* (err) {\n              _EventLogger.EventLogger.info('Redux', `Attempting recovery for ${category} error`);\n              switch (category) {\n                case 'network':\n                  // Wait a bit for network to recover\n                  yield new Promise(resolve => setTimeout(resolve, 2000));\n                  return navigator?.onLine !== false;\n                case 'auth':\n                  // Try to refresh session\n                  try {\n                    var _yield$import = yield require(_dependencyMap[6])(_dependencyMap[5], _dependencyMap.paths, \"../../services/supabase/client\"),\n                      supabase = _yield$import.supabase;\n                    var _yield$supabase$auth$ = yield supabase.auth.refreshSession(),\n                      refreshError = _yield$supabase$auth$.error;\n                    return !refreshError;\n                  } catch {\n                    return false;\n                  }\n                case 'server':\n                  // Wait longer for server recovery\n                  yield new Promise(resolve => setTimeout(resolve, 5000));\n                  return true;\n                default:\n                  return false;\n              }\n            });\n            return function recover(_x) {\n              return _ref.apply(this, arguments);\n            };\n          }(),\n          priority: category === 'network' ? 10 : category === 'auth' ? 8 : 5\n        });\n      }\n\n      // Dispatch custom error action for UI handling\n      storeApi.dispatch({\n        type: 'api/errorOccurred',\n        payload: {\n          error: enhancedError,\n          originalAction: action.type,\n          timestamp: Date.now()\n        }\n      });\n\n      // For development, also log to console with more details\n    }\n\n    // Handle other types of errors (like serialized errors)\n    if (action.error && !action.payload) {\n      var _error = action.error;\n      _EventLogger.EventLogger.error('Redux', `Redux action error in ${action.type}`, new Error(_error.message || 'Unknown Redux error'), {\n        action: action.type,\n        error: {\n          name: _error.name,\n          message: _error.message,\n          stack: _error.stack,\n          code: _error.code\n        },\n        timestamp: new Date().toISOString()\n      });\n\n      // Dispatch custom error action\n      storeApi.dispatch({\n        type: 'redux/errorOccurred',\n        payload: {\n          error: _error,\n          originalAction: action.type,\n          timestamp: Date.now()\n        }\n      });\n    }\n    return next(action);\n  };\n\n  /**\n   * Action creators for error handling\n   */\n  exports.errorHandlingMiddleware = errorHandlingMiddleware;\n  var errorActions = exports.errorActions = {\n    clearApiErrors: () => ({\n      type: 'api/clearErrors'\n    }),\n    clearReduxErrors: () => ({\n      type: 'redux/clearErrors'\n    }),\n    clearAllErrors: () => ({\n      type: 'errors/clearAll'\n    })\n  };\n\n  /**\n   * Error state interface for components\n   */\n\n  /**\n   * Initial error state\n   */\n  var initialErrorState = exports.initialErrorState = {\n    apiErrors: [],\n    reduxErrors: []\n  };\n\n  /**\n   * Error reducer for managing error state\n   */\n  var errorReducer = function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialErrorState;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    switch (action.type) {\n      case 'api/errorOccurred':\n        return {\n          ...state,\n          apiErrors: [...state.apiErrors.slice(-9),\n          // Keep last 10 errors\n          action.payload],\n          lastError: {\n            message: action.payload.error.userMessage,\n            timestamp: action.payload.timestamp,\n            category: action.payload.error.category\n          }\n        };\n      case 'redux/errorOccurred':\n        return {\n          ...state,\n          reduxErrors: [...state.reduxErrors.slice(-9),\n          // Keep last 10 errors\n          action.payload],\n          lastError: {\n            message: action.payload.error.message || 'Redux error occurred',\n            timestamp: action.payload.timestamp\n          }\n        };\n      case 'api/clearErrors':\n        return {\n          ...state,\n          apiErrors: []\n        };\n      case 'redux/clearErrors':\n        return {\n          ...state,\n          reduxErrors: []\n        };\n      case 'errors/clearAll':\n        return initialErrorState;\n      default:\n        return state;\n    }\n  };\n  exports.errorReducer = errorReducer;\n});","lineCount":287,"map":[[8,2,1,0],[8,6,1,0,"_toolkit"],[8,14,1,0],[8,17,1,0,"require"],[8,24,1,0],[8,25,1,0,"_dependencyMap"],[8,39,1,0],[9,2,3,0],[9,6,3,0,"_EventLogger"],[9,18,3,0],[9,21,3,0,"require"],[9,28,3,0],[9,29,3,0,"_dependencyMap"],[9,43,3,0],[10,2,4,0],[10,6,4,0,"_errorRecovery"],[10,20,4,0],[10,23,4,0,"require"],[10,30,4,0],[10,31,4,0,"_dependencyMap"],[10,45,4,0],[11,2,6,0],[12,0,7,0],[13,0,8,0],[15,2,16,0],[16,0,17,0],[17,0,18,0],[18,2,19,0],[18,11,19,9,"categorizeError"],[18,26,19,24,"categorizeError"],[18,27,19,25,"error"],[18,32,19,51],[18,34,19,83],[19,4,20,2],[19,8,20,6],[19,15,20,13,"error"],[19,20,20,18],[19,21,20,19,"status"],[19,27,20,25],[19,32,20,30],[19,40,20,38],[19,42,20,40],[20,6,21,4],[20,10,21,8,"error"],[20,15,21,13],[20,16,21,14,"status"],[20,22,21,20],[20,26,21,24],[20,29,21,27],[20,33,21,31,"error"],[20,38,21,36],[20,39,21,37,"status"],[20,45,21,43],[20,48,21,46],[20,51,21,49],[20,53,21,51],[21,8,22,6],[21,12,22,10,"error"],[21,17,22,15],[21,18,22,16,"status"],[21,24,22,22],[21,29,22,27],[21,32,22,30],[21,36,22,34,"error"],[21,41,22,39],[21,42,22,40,"status"],[21,48,22,46],[21,53,22,51],[21,56,22,54],[21,58,22,56],[21,65,22,63],[21,71,22,69],[22,8,23,6],[22,12,23,10,"error"],[22,17,23,15],[22,18,23,16,"status"],[22,24,23,22],[22,29,23,27],[22,32,23,30],[22,36,23,34,"error"],[22,41,23,39],[22,42,23,40,"status"],[22,48,23,46],[22,53,23,51],[22,56,23,54],[22,58,23,56],[22,65,23,63],[22,77,23,75],[23,8,24,6],[23,15,24,13],[23,23,24,21],[24,6,25,4],[25,6,26,4],[25,10,26,8,"error"],[25,15,26,13],[25,16,26,14,"status"],[25,22,26,20],[25,26,26,24],[25,29,26,27],[25,31,26,29],[25,38,26,36],[25,46,26,44],[26,4,27,2],[27,4,29,2],[27,8,29,6,"error"],[27,13,29,11],[27,14,29,12,"status"],[27,20,29,18],[27,25,29,23],[27,38,29,36],[27,42,29,40,"error"],[27,47,29,45],[27,48,29,46,"status"],[27,54,29,52],[27,59,29,57],[27,74,29,72],[27,76,29,74],[28,6,30,4],[28,13,30,11],[28,22,30,20],[29,4,31,2],[30,4,33,2],[30,11,33,9],[30,20,33,18],[31,2,34,0],[33,2,36,0],[34,0,37,0],[35,0,38,0],[36,2,39,0],[36,11,39,9,"isRecoverable"],[36,24,39,22,"isRecoverable"],[36,25,39,23,"error"],[36,30,39,49],[36,32,39,51,"category"],[36,40,39,89],[36,42,39,100],[37,4,40,2],[38,4,41,2],[38,8,41,6,"category"],[38,16,41,14],[38,21,41,19],[38,30,41,28],[38,32,41,30],[38,39,41,37],[38,43,41,41],[40,4,43,2],[41,4,44,2],[41,8,44,6,"category"],[41,16,44,14],[41,21,44,19],[41,29,44,27],[41,31,44,29],[41,38,44,36],[41,42,44,40],[43,4,46,2],[44,4,47,2],[44,8,47,6,"error"],[44,13,47,11],[44,14,47,12,"status"],[44,20,47,18],[44,25,47,23],[44,28,47,26],[44,30,47,28],[44,37,47,35],[44,41,47,39],[46,4,49,2],[47,4,50,2],[47,8,50,6,"category"],[47,16,50,14],[47,21,50,19],[47,27,50,25],[47,31,50,29,"error"],[47,36,50,34],[47,37,50,35,"status"],[47,43,50,41],[47,48,50,46],[47,51,50,49],[47,53,50,51],[47,60,50,58],[47,64,50,62],[49,4,52,2],[50,4,53,2],[50,11,53,9],[50,16,53,14],[51,2,54,0],[53,2,56,0],[54,0,57,0],[55,0,58,0],[56,2,59,0],[56,11,59,9,"getUserMessage"],[56,25,59,23,"getUserMessage"],[56,26,59,24,"error"],[56,31,59,50],[56,33,59,52,"category"],[56,41,59,90],[56,43,59,100],[57,4,60,2],[57,12,60,10,"category"],[57,20,60,18],[58,6,61,4],[58,11,61,9],[58,20,61,18],[59,8,62,6],[59,15,62,13],[59,95,62,93],[60,6,63,4],[60,11,63,9],[60,17,63,15],[61,8,64,6],[61,12,64,10,"error"],[61,17,64,15],[61,18,64,16,"status"],[61,24,64,22],[61,29,64,27],[61,32,64,30],[61,34,64,32],[61,41,64,39],[61,90,64,88],[62,8,65,6],[62,12,65,10,"error"],[62,17,65,15],[62,18,65,16,"status"],[62,24,65,22],[62,29,65,27],[62,32,65,30],[62,34,65,32],[62,41,65,39],[62,93,65,91],[63,8,66,6],[63,15,66,13],[63,60,66,58],[64,6,67,4],[64,11,67,9],[64,23,67,21],[65,8,68,6],[65,15,68,13],[65,92,68,90],[66,6,69,4],[66,11,69,9],[66,19,69,17],[67,8,70,6],[67,15,70,13],[67,82,70,80],[68,6,71,4],[68,11,71,9],[68,19,71,17],[69,8,72,6],[69,12,72,10,"error"],[69,17,72,15],[69,18,72,16,"status"],[69,24,72,22],[69,29,72,27],[69,32,72,30],[69,34,72,32],[69,41,72,39],[69,80,72,78],[70,8,73,6],[70,12,73,10,"error"],[70,17,73,15],[70,18,73,16,"status"],[70,24,73,22],[70,29,73,27],[70,32,73,30],[70,34,73,32],[70,41,73,39],[70,97,73,95],[71,8,74,6],[71,15,74,13],[71,49,74,47],[72,6,75,4],[73,8,76,6],[73,15,76,13],[73,64,76,62],[74,4,77,2],[75,2,78,0],[77,2,80,0],[78,0,81,0],[79,0,82,0],[80,2,83,0],[80,11,83,9,"getRetryAfter"],[80,24,83,22,"getRetryAfter"],[80,25,83,23,"error"],[80,30,83,49],[80,32,83,71],[81,4,84,2],[81,8,84,6,"error"],[81,13,84,11],[81,14,84,12,"status"],[81,20,84,18],[81,25,84,23],[81,28,84,26],[81,32,84,30,"error"],[81,37,84,35],[81,38,84,36,"data"],[81,42,84,40],[81,46,84,44],[81,53,84,51,"error"],[81,58,84,56],[81,59,84,57,"data"],[81,63,84,61],[81,68,84,66],[81,76,84,74],[81,78,84,76],[82,6,85,4],[82,10,85,10,"data"],[82,14,85,14],[82,17,85,17,"error"],[82,22,85,22],[82,23,85,23,"data"],[82,27,85,34],[83,6,86,4],[83,10,86,8,"data"],[83,14,86,12],[83,15,86,13,"retryAfter"],[83,25,86,23],[83,27,86,25],[83,34,86,32,"data"],[83,38,86,36],[83,39,86,37,"retryAfter"],[83,49,86,47],[83,52,86,50],[83,56,86,54],[83,57,86,55],[83,58,86,56],[84,6,87,4],[84,10,87,8,"data"],[84,14,87,12],[84,15,87,13],[84,28,87,26],[84,29,87,27],[84,31,87,29],[84,38,87,36,"parseInt"],[84,46,87,44],[84,47,87,45,"data"],[84,51,87,49],[84,52,87,50],[84,65,87,63],[84,66,87,64],[84,67,87,65],[84,70,87,68],[84,74,87,72],[85,4,88,2],[86,4,89,2],[86,11,89,9,"undefined"],[86,20,89,18],[87,2,90,0],[89,2,92,0],[90,0,93,0],[91,0,94,0],[92,0,95,0],[93,0,96,0],[94,0,97,0],[95,0,98,0],[96,0,99,0],[97,0,100,0],[98,0,101,0],[99,2,102,7],[99,6,102,13,"errorHandlingMiddleware"],[99,29,102,48],[99,32,102,52,"storeApi"],[99,40,102,60],[99,44,102,66,"next"],[99,48,102,70],[99,52,102,76,"action"],[99,58,102,82],[99,62,102,87],[100,4,103,2],[101,4,104,2],[101,8,104,6],[101,12,104,6,"isRejectedWithValue"],[101,40,104,25],[101,42,104,26,"action"],[101,48,104,32],[101,49,104,33],[101,51,104,35],[102,6,105,4],[102,10,105,10,"error"],[102,15,105,15],[102,18,105,18,"action"],[102,24,105,24],[102,25,105,25,"payload"],[102,32,105,55],[103,6,106,4],[103,10,106,10,"category"],[103,18,106,18],[103,21,106,21,"categorizeError"],[103,36,106,36],[103,37,106,37,"error"],[103,42,106,42],[103,43,106,43],[104,6,107,4],[104,10,107,10,"recoverable"],[104,21,107,21],[104,24,107,24,"isRecoverable"],[104,37,107,37],[104,38,107,38,"error"],[104,43,107,43],[104,45,107,45,"category"],[104,53,107,53],[104,54,107,54],[105,6,108,4],[105,10,108,10,"userMessage"],[105,21,108,21],[105,24,108,24,"getUserMessage"],[105,38,108,38],[105,39,108,39,"error"],[105,44,108,44],[105,46,108,46,"category"],[105,54,108,54],[105,55,108,55],[106,6,109,4],[106,10,109,10,"retryAfter"],[106,20,109,20],[106,23,109,23,"getRetryAfter"],[106,36,109,36],[106,37,109,37,"error"],[106,42,109,42],[106,43,109,43],[108,6,111,4],[109,6,112,4],[109,10,112,10,"enhancedError"],[109,23,112,41],[109,26,112,44],[110,8,113,6],[110,11,113,9,"error"],[110,16,113,14],[111,8,114,6,"category"],[111,16,114,14],[112,8,115,6,"recoverable"],[112,19,115,17],[113,8,116,6,"retryAfter"],[113,18,116,16],[114,8,117,6,"userMessage"],[115,6,118,4],[115,7,118,5],[117,6,120,4],[118,6,121,4,"EventLogger"],[118,30,121,15],[118,31,121,16,"error"],[118,36,121,21],[118,37,122,6],[118,44,122,13],[118,46,123,6],[118,53,123,13,"category"],[118,61,123,21],[118,74,123,34,"action"],[118,80,123,40],[118,81,123,41,"type"],[118,85,123,45],[118,87,123,47],[118,89,124,6],[118,93,124,10,"Error"],[118,98,124,15],[118,99,124,16,"userMessage"],[118,110,124,27],[118,111,124,28],[118,113,125,6],[119,8,126,8,"action"],[119,14,126,14],[119,16,126,16,"action"],[119,22,126,22],[119,23,126,23,"type"],[119,27,126,27],[120,8,127,8,"error"],[120,13,127,13],[120,15,127,15,"enhancedError"],[120,28,127,28],[121,8,128,8,"category"],[121,16,128,16],[122,8,129,8,"recoverable"],[122,19,129,19],[123,8,130,8,"retryAfter"],[123,18,130,18],[124,8,131,8,"status"],[124,14,131,14],[124,16,131,16,"error"],[124,21,131,21],[124,22,131,22,"status"],[124,28,131,28],[125,8,132,8,"endpoint"],[125,16,132,16],[125,18,132,18,"action"],[125,24,132,24],[125,25,132,25,"meta"],[125,29,132,29],[125,31,132,31,"baseQueryMeta"],[125,44,132,44],[125,46,132,46,"request"],[125,53,132,53],[125,55,132,55,"url"],[125,58,132,58],[126,8,133,8,"method"],[126,14,133,14],[126,16,133,16,"action"],[126,22,133,22],[126,23,133,23,"meta"],[126,27,133,27],[126,29,133,29,"baseQueryMeta"],[126,42,133,42],[126,44,133,44,"request"],[126,51,133,51],[126,53,133,53,"method"],[126,59,133,59],[127,8,134,8,"timestamp"],[127,17,134,17],[127,19,134,19],[127,23,134,23,"Date"],[127,27,134,27],[127,28,134,28],[127,29,134,29],[127,30,134,30,"toISOString"],[127,41,134,41],[127,42,134,42],[128,6,135,6],[128,7,136,4],[128,8,136,5],[130,6,138,4],[131,6,139,4],[131,10,139,8,"recoverable"],[131,21,139,19],[131,25,139,23],[131,26,139,24,"errorRecoveryManager"],[131,61,139,44],[131,62,139,45],[131,74,139,57],[131,75,139,58],[131,77,139,60,"find"],[131,81,139,64],[131,84,139,67,"s"],[131,85,139,68],[131,89,139,72,"s"],[131,90,139,73],[131,91,139,74,"name"],[131,95,139,78],[131,100,139,83],[131,109,139,92,"category"],[131,117,139,100],[131,128,139,111],[131,129,139,112],[131,131,139,114],[132,8,140,6,"errorRecoveryManager"],[132,43,140,26],[132,44,140,27,"addRecoveryStrategy"],[132,63,140,46],[132,64,140,47],[133,10,141,8,"name"],[133,14,141,12],[133,16,141,14],[133,25,141,23,"category"],[133,33,141,31],[133,44,141,42],[134,10,142,8,"canRecover"],[134,20,142,18],[134,22,142,21,"err"],[134,25,142,31],[134,29,142,36],[135,12,143,10],[135,19,143,17,"err"],[135,22,143,20],[135,23,143,21,"message"],[135,30,143,28],[135,31,143,29,"includes"],[135,39,143,37],[135,40,143,38,"category"],[135,48,143,46],[135,52,143,50],[135,54,143,52],[135,55,143,53],[136,10,144,8],[136,11,144,9],[137,10,145,8,"recover"],[137,17,145,15],[138,12,145,15],[138,16,145,15,"_ref"],[138,20,145,15],[138,27,145,15,"_asyncToGenerator2"],[138,45,145,15],[138,46,145,15,"default"],[138,53,145,15],[138,55,145,17],[138,66,145,24,"err"],[138,69,145,34],[138,71,145,39],[139,14,146,10,"EventLogger"],[139,38,146,21],[139,39,146,22,"info"],[139,43,146,26],[139,44,146,27],[139,51,146,34],[139,53,146,36],[139,80,146,63,"category"],[139,88,146,71],[139,96,146,79],[139,97,146,80],[140,14,148,10],[140,22,148,18,"category"],[140,30,148,26],[141,16,149,12],[141,21,149,17],[141,30,149,26],[142,18,150,14],[143,18,151,14],[143,24,151,20],[143,28,151,24,"Promise"],[143,35,151,31],[143,36,151,32,"resolve"],[143,43,151,39],[143,47,151,43,"setTimeout"],[143,57,151,53],[143,58,151,54,"resolve"],[143,65,151,61],[143,67,151,63],[143,71,151,67],[143,72,151,68],[143,73,151,69],[144,18,152,14],[144,25,152,21,"navigator"],[144,34,152,30],[144,36,152,32,"onLine"],[144,42,152,38],[144,47,152,43],[144,52,152,48],[145,16,154,12],[145,21,154,17],[145,27,154,23],[146,18,155,14],[147,18,156,14],[147,22,156,18],[148,20,157,16],[148,24,157,16,"_yield$import"],[148,37,157,16],[148,46,157,16,"require"],[148,53,157,16],[148,54,157,16,"_dependencyMap"],[148,68,157,16],[148,73,157,16,"_dependencyMap"],[148,87,157,16],[148,92,157,16,"_dependencyMap"],[148,106,157,16],[148,107,157,16,"paths"],[148,112,157,16],[149,22,157,24,"supabase"],[149,30,157,32],[149,33,157,32,"_yield$import"],[149,46,157,32],[149,47,157,24,"supabase"],[149,55,157,32],[150,20,158,16],[150,24,158,16,"_yield$supabase$auth$"],[150,45,158,16],[150,54,158,54,"supabase"],[150,62,158,62],[150,63,158,63,"auth"],[150,67,158,67],[150,68,158,68,"refreshSession"],[150,82,158,82],[150,83,158,83],[150,84,158,84],[151,22,158,31,"refreshError"],[151,34,158,43],[151,37,158,43,"_yield$supabase$auth$"],[151,58,158,43],[151,59,158,24,"error"],[151,64,158,29],[152,20,159,16],[152,27,159,23],[152,28,159,24,"refreshError"],[152,40,159,36],[153,18,160,14],[153,19,160,15],[153,20,160,16],[153,26,160,22],[154,20,161,16],[154,27,161,23],[154,32,161,28],[155,18,162,14],[156,16,164,12],[156,21,164,17],[156,29,164,25],[157,18,165,14],[158,18,166,14],[158,24,166,20],[158,28,166,24,"Promise"],[158,35,166,31],[158,36,166,32,"resolve"],[158,43,166,39],[158,47,166,43,"setTimeout"],[158,57,166,53],[158,58,166,54,"resolve"],[158,65,166,61],[158,67,166,63],[158,71,166,67],[158,72,166,68],[158,73,166,69],[159,18,167,14],[159,25,167,21],[159,29,167,25],[160,16,169,12],[161,18,170,14],[161,25,170,21],[161,30,170,26],[162,14,171,10],[163,12,172,8],[163,13,172,9],[164,12,172,9],[164,28,145,8,"recover"],[164,35,145,15,"recover"],[164,36,145,15,"_x"],[164,38,145,15],[165,14,145,15],[165,21,145,15,"_ref"],[165,25,145,15],[165,26,145,15,"apply"],[165,31,145,15],[165,38,145,15,"arguments"],[165,47,145,15],[166,12,145,15],[167,10,145,15],[167,13,172,9],[168,10,173,8,"priority"],[168,18,173,16],[168,20,173,18,"category"],[168,28,173,26],[168,33,173,31],[168,42,173,40],[168,45,173,43],[168,47,173,45],[168,50,173,48,"category"],[168,58,173,56],[168,63,173,61],[168,69,173,67],[168,72,173,70],[168,73,173,71],[168,76,173,74],[169,8,174,6],[169,9,174,7],[169,10,174,8],[170,6,175,4],[172,6,177,4],[173,6,178,4,"storeApi"],[173,14,178,12],[173,15,178,13,"dispatch"],[173,23,178,21],[173,24,178,22],[174,8,179,6,"type"],[174,12,179,10],[174,14,179,12],[174,33,179,31],[175,8,180,6,"payload"],[175,15,180,13],[175,17,180,15],[176,10,181,8,"error"],[176,15,181,13],[176,17,181,15,"enhancedError"],[176,30,181,28],[177,10,182,8,"originalAction"],[177,24,182,22],[177,26,182,24,"action"],[177,32,182,30],[177,33,182,31,"type"],[177,37,182,35],[178,10,183,8,"timestamp"],[178,19,183,17],[178,21,183,19,"Date"],[178,25,183,23],[178,26,183,24,"now"],[178,29,183,27],[178,30,183,28],[179,8,184,6],[180,6,185,4],[180,7,185,5],[180,8,185,6],[182,6,187,4],[183,4,195,2],[185,4,197,2],[186,4,198,2],[186,8,198,6,"action"],[186,14,198,12],[186,15,198,13,"error"],[186,20,198,18],[186,24,198,22],[186,25,198,23,"action"],[186,31,198,29],[186,32,198,30,"payload"],[186,39,198,37],[186,41,198,39],[187,6,199,4],[187,10,199,10,"error"],[187,16,199,15],[187,19,199,18,"action"],[187,25,199,24],[187,26,199,25,"error"],[187,31,199,49],[188,6,201,4,"EventLogger"],[188,30,201,15],[188,31,201,16,"error"],[188,36,201,21],[188,37,202,6],[188,44,202,13],[188,46,203,6],[188,71,203,31,"action"],[188,77,203,37],[188,78,203,38,"type"],[188,82,203,42],[188,84,203,44],[188,86,204,6],[188,90,204,10,"Error"],[188,95,204,15],[188,96,204,16,"error"],[188,102,204,21],[188,103,204,22,"message"],[188,110,204,29],[188,114,204,33],[188,135,204,54],[188,136,204,55],[188,138,205,6],[189,8,206,8,"action"],[189,14,206,14],[189,16,206,16,"action"],[189,22,206,22],[189,23,206,23,"type"],[189,27,206,27],[190,8,207,8,"error"],[190,13,207,13],[190,15,207,15],[191,10,208,10,"name"],[191,14,208,14],[191,16,208,16,"error"],[191,22,208,21],[191,23,208,22,"name"],[191,27,208,26],[192,10,209,10,"message"],[192,17,209,17],[192,19,209,19,"error"],[192,25,209,24],[192,26,209,25,"message"],[192,33,209,32],[193,10,210,10,"stack"],[193,15,210,15],[193,17,210,17,"error"],[193,23,210,22],[193,24,210,23,"stack"],[193,29,210,28],[194,10,211,10,"code"],[194,14,211,14],[194,16,211,16,"error"],[194,22,211,21],[194,23,211,22,"code"],[195,8,212,8],[195,9,212,9],[196,8,213,8,"timestamp"],[196,17,213,17],[196,19,213,19],[196,23,213,23,"Date"],[196,27,213,27],[196,28,213,28],[196,29,213,29],[196,30,213,30,"toISOString"],[196,41,213,41],[196,42,213,42],[197,6,214,6],[197,7,215,4],[197,8,215,5],[199,6,217,4],[200,6,218,4,"storeApi"],[200,14,218,12],[200,15,218,13,"dispatch"],[200,23,218,21],[200,24,218,22],[201,8,219,6,"type"],[201,12,219,10],[201,14,219,12],[201,35,219,33],[202,8,220,6,"payload"],[202,15,220,13],[202,17,220,15],[203,10,221,8,"error"],[203,15,221,13],[203,17,221,8,"error"],[203,23,221,13],[204,10,222,8,"originalAction"],[204,24,222,22],[204,26,222,24,"action"],[204,32,222,30],[204,33,222,31,"type"],[204,37,222,35],[205,10,223,8,"timestamp"],[205,19,223,17],[205,21,223,19,"Date"],[205,25,223,23],[205,26,223,24,"now"],[205,29,223,27],[205,30,223,28],[206,8,224,6],[207,6,225,4],[207,7,225,5],[207,8,225,6],[208,4,226,2],[209,4,228,2],[209,11,228,9,"next"],[209,15,228,13],[209,16,228,14,"action"],[209,22,228,20],[209,23,228,21],[210,2,229,0],[210,3,229,1],[212,2,231,0],[213,0,232,0],[214,0,233,0],[215,2,231,0,"exports"],[215,9,231,0],[215,10,231,0,"errorHandlingMiddleware"],[215,33,231,0],[215,36,231,0,"errorHandlingMiddleware"],[215,59,231,0],[216,2,234,7],[216,6,234,13,"errorActions"],[216,18,234,25],[216,21,234,25,"exports"],[216,28,234,25],[216,29,234,25,"errorActions"],[216,41,234,25],[216,44,234,28],[217,4,235,2,"clearApiErrors"],[217,18,235,16],[217,20,235,18,"clearApiErrors"],[217,21,235,18],[217,27,235,25],[218,6,236,4,"type"],[218,10,236,8],[218,12,236,10],[219,4,237,2],[219,5,237,3],[219,6,237,4],[220,4,239,2,"clearReduxErrors"],[220,20,239,18],[220,22,239,20,"clearReduxErrors"],[220,23,239,20],[220,29,239,27],[221,6,240,4,"type"],[221,10,240,8],[221,12,240,10],[222,4,241,2],[222,5,241,3],[222,6,241,4],[223,4,243,2,"clearAllErrors"],[223,18,243,16],[223,20,243,18,"clearAllErrors"],[223,21,243,18],[223,27,243,25],[224,6,244,4,"type"],[224,10,244,8],[224,12,244,10],[225,4,245,2],[225,5,245,3],[226,2,246,0],[226,3,246,10],[228,2,248,0],[229,0,249,0],[230,0,250,0],[232,2,269,0],[233,0,270,0],[234,0,271,0],[235,2,272,7],[235,6,272,13,"initialErrorState"],[235,23,272,42],[235,26,272,42,"exports"],[235,33,272,42],[235,34,272,42,"initialErrorState"],[235,51,272,42],[235,54,272,45],[236,4,273,2,"apiErrors"],[236,13,273,11],[236,15,273,13],[236,17,273,15],[237,4,274,2,"reduxErrors"],[237,15,274,13],[237,17,274,15],[238,2,275,0],[238,3,275,1],[240,2,277,0],[241,0,278,0],[242,0,279,0],[243,2,280,7],[243,6,280,13,"errorReducer"],[243,18,280,25],[243,21,280,28],[243,30,280,28,"errorReducer"],[243,31,280,28],[243,33,280,84],[244,4,280,84],[244,8,280,29,"state"],[244,13,280,34],[244,16,280,34,"arguments"],[244,25,280,34],[244,26,280,34,"length"],[244,32,280,34],[244,40,280,34,"arguments"],[244,49,280,34],[244,57,280,34,"undefined"],[244,66,280,34],[244,69,280,34,"arguments"],[244,78,280,34],[244,84,280,37,"initialErrorState"],[244,101,280,54],[245,4,280,54],[245,8,280,56,"action"],[245,14,280,67],[245,17,280,67,"arguments"],[245,26,280,67],[245,27,280,67,"length"],[245,33,280,67],[245,40,280,67,"arguments"],[245,49,280,67],[245,55,280,67,"undefined"],[245,64,280,67],[246,4,281,2],[246,12,281,10,"action"],[246,18,281,16],[246,19,281,17,"type"],[246,23,281,21],[247,6,282,4],[247,11,282,9],[247,30,282,28],[248,8,283,6],[248,15,283,13],[249,10,284,8],[249,13,284,11,"state"],[249,18,284,16],[250,10,285,8,"apiErrors"],[250,19,285,17],[250,21,285,19],[250,22,286,10],[250,25,286,13,"state"],[250,30,286,18],[250,31,286,19,"apiErrors"],[250,40,286,28],[250,41,286,29,"slice"],[250,46,286,34],[250,49,286,37],[250,50,286,38],[251,10,286,40],[252,10,287,10,"action"],[252,16,287,16],[252,17,287,17,"payload"],[252,24,287,24],[252,25,288,9],[253,10,289,8,"lastError"],[253,19,289,17],[253,21,289,19],[254,12,290,10,"message"],[254,19,290,17],[254,21,290,19,"action"],[254,27,290,25],[254,28,290,26,"payload"],[254,35,290,33],[254,36,290,34,"error"],[254,41,290,39],[254,42,290,40,"userMessage"],[254,53,290,51],[255,12,291,10,"timestamp"],[255,21,291,19],[255,23,291,21,"action"],[255,29,291,27],[255,30,291,28,"payload"],[255,37,291,35],[255,38,291,36,"timestamp"],[255,47,291,45],[256,12,292,10,"category"],[256,20,292,18],[256,22,292,20,"action"],[256,28,292,26],[256,29,292,27,"payload"],[256,36,292,34],[256,37,292,35,"error"],[256,42,292,40],[256,43,292,41,"category"],[257,10,293,8],[258,8,294,6],[258,9,294,7],[259,6,296,4],[259,11,296,9],[259,32,296,30],[260,8,297,6],[260,15,297,13],[261,10,298,8],[261,13,298,11,"state"],[261,18,298,16],[262,10,299,8,"reduxErrors"],[262,21,299,19],[262,23,299,21],[262,24,300,10],[262,27,300,13,"state"],[262,32,300,18],[262,33,300,19,"reduxErrors"],[262,44,300,30],[262,45,300,31,"slice"],[262,50,300,36],[262,53,300,39],[262,54,300,40],[263,10,300,42],[264,10,301,10,"action"],[264,16,301,16],[264,17,301,17,"payload"],[264,24,301,24],[264,25,302,9],[265,10,303,8,"lastError"],[265,19,303,17],[265,21,303,19],[266,12,304,10,"message"],[266,19,304,17],[266,21,304,19,"action"],[266,27,304,25],[266,28,304,26,"payload"],[266,35,304,33],[266,36,304,34,"error"],[266,41,304,39],[266,42,304,40,"message"],[266,49,304,47],[266,53,304,51],[266,75,304,73],[267,12,305,10,"timestamp"],[267,21,305,19],[267,23,305,21,"action"],[267,29,305,27],[267,30,305,28,"payload"],[267,37,305,35],[267,38,305,36,"timestamp"],[268,10,306,8],[269,8,307,6],[269,9,307,7],[270,6,309,4],[270,11,309,9],[270,28,309,26],[271,8,310,6],[271,15,310,13],[272,10,311,8],[272,13,311,11,"state"],[272,18,311,16],[273,10,312,8,"apiErrors"],[273,19,312,17],[273,21,312,19],[274,8,313,6],[274,9,313,7],[275,6,315,4],[275,11,315,9],[275,30,315,28],[276,8,316,6],[276,15,316,13],[277,10,317,8],[277,13,317,11,"state"],[277,18,317,16],[278,10,318,8,"reduxErrors"],[278,21,318,19],[278,23,318,21],[279,8,319,6],[279,9,319,7],[280,6,321,4],[280,11,321,9],[280,28,321,26],[281,8,322,6],[281,15,322,13,"initialErrorState"],[281,32,322,30],[282,6,324,4],[283,8,325,6],[283,15,325,13,"state"],[283,20,325,18],[284,4,326,2],[285,2,327,0],[285,3,327,1],[286,2,327,2,"exports"],[286,9,327,2],[286,10,327,2,"errorReducer"],[286,22,327,2],[286,25,327,2,"errorReducer"],[286,37,327,2],[287,0,327,2],[287,3]],"functionMap":{"names":["<global>","categorizeError","isRecoverable","getUserMessage","getRetryAfter","errorHandlingMiddleware","<anonymous>","errorRecoveryManager.strategies.find$argument_0","errorRecoveryManager.addRecoveryStrategy$argument_0.canRecover","errorRecoveryManager.addRecoveryStrategy$argument_0.recover","Promise$argument_0","clearApiErrors","clearReduxErrors","clearAllErrors","errorReducer"],"mappings":"AAA;ACkB;CDe;AEK;CFe;AGK;CHmB;AIK;CJO;mDKY,cC;mECqC,4CD;oBEG;SFE;iBGC;gCCM,oCD;gCCe,oCD;SHM;CNyD;kBWM;IXE;oBYE;IZE;kBaE;IbE;4BcmC;Cd+C"}},"type":"js/module"}]}