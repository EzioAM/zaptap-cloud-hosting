{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.validatePathConfig = validatePathConfig;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var formatToList = function formatToList(items) {\n    return Object.entries(items).map(function (_ref) {\n      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n      return `- ${key} (${value})`;\n    }).join('\\n');\n  };\n  function validatePathConfig(config) {\n    var root = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var validation = Object.assign({\n      path: 'string',\n      initialRouteName: 'string',\n      screens: 'object'\n    }, root ? null : {\n      alias: 'array',\n      exact: 'boolean',\n      stringify: 'object',\n      parse: 'object'\n    });\n    if (typeof config !== 'object' || config === null) {\n      throw new Error(`Expected the configuration to be an object, but got ${JSON.stringify(config)}.`);\n    }\n    var validationErrors = Object.fromEntries(Object.keys(config).map(function (key) {\n      if (key in validation) {\n        var type = validation[key];\n        // @ts-expect-error: we know the key exists\n        var value = config[key];\n        if (value !== undefined) {\n          if (type === 'array') {\n            if (!Array.isArray(value)) {\n              return [key, `expected 'Array', got '${typeof value}'`];\n            }\n          } else if (typeof value !== type) {\n            return [key, `expected '${type}', got '${typeof value}'`];\n          }\n        }\n      } else {\n        return [key, 'extraneous'];\n      }\n      return null;\n    }).filter(Boolean));\n    if (Object.keys(validationErrors).length) {\n      throw new Error(`Found invalid properties in the configuration:\\n${formatToList(validationErrors)}\\n\\nYou can only specify the following properties:\\n${formatToList(validation)}\\n\\nIf you want to specify configuration for screens, you need to specify them under a 'screens' property.\\n\\nSee https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.`);\n    }\n    if (root && 'path' in config && typeof config.path === 'string' && config.path.includes(':')) {\n      throw new Error(`Found invalid path '${config.path}'. The 'path' in the top-level configuration cannot contain patterns for params.`);\n    }\n    if ('screens' in config && config.screens) {\n      Object.entries(config.screens).forEach(function (_ref3) {\n        var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n          _ = _ref4[0],\n          value = _ref4[1];\n        if (typeof value !== 'string') {\n          validatePathConfig(value, false);\n        }\n      });\n    }\n  }\n});","lineCount":69,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"validatePathConfig"],[8,28,1,13],[8,31,1,13,"validatePathConfig"],[8,49,1,13],[9,2,1,13],[9,6,1,13,"_slicedToArray2"],[9,21,1,13],[9,24,1,13,"_interopRequireDefault"],[9,46,1,13],[9,47,1,13,"require"],[9,54,1,13],[9,55,1,13,"_dependencyMap"],[9,69,1,13],[10,2,3,0],[10,6,3,6,"formatToList"],[10,18,3,18],[10,21,3,21],[10,30,3,6,"formatToList"],[10,42,3,18,"formatToList"],[10,43,3,21,"items"],[10,48,3,26],[11,4,3,26],[11,11,3,30,"Object"],[11,17,3,36],[11,18,3,37,"entries"],[11,25,3,44],[11,26,3,45,"items"],[11,31,3,50],[11,32,3,51],[11,33,3,52,"map"],[11,36,3,55],[11,37,3,56],[11,47,3,56,"_ref"],[11,51,3,56],[12,6,3,56],[12,10,3,56,"_ref2"],[12,15,3,56],[12,22,3,56,"_slicedToArray2"],[12,37,3,56],[12,38,3,56,"default"],[12,45,3,56],[12,47,3,56,"_ref"],[12,51,3,56],[13,8,3,58,"key"],[13,11,3,61],[13,14,3,61,"_ref2"],[13,19,3,61],[14,8,3,63,"value"],[14,13,3,68],[14,16,3,68,"_ref2"],[14,21,3,68],[15,6,3,68],[15,13,3,74],[15,18,3,79,"key"],[15,21,3,82],[15,26,3,87,"value"],[15,31,3,92],[15,34,3,95],[16,4,3,95],[16,6,3,96],[16,7,3,97,"join"],[16,11,3,101],[16,12,3,102],[16,16,3,106],[16,17,3,107],[17,2,3,107],[18,2,4,7],[18,11,4,16,"validatePathConfig"],[18,29,4,34,"validatePathConfig"],[18,30,4,35,"config"],[18,36,4,41],[18,38,4,56],[19,4,4,56],[19,8,4,43,"root"],[19,12,4,47],[19,15,4,47,"arguments"],[19,24,4,47],[19,25,4,47,"length"],[19,31,4,47],[19,39,4,47,"arguments"],[19,48,4,47],[19,56,4,47,"undefined"],[19,65,4,47],[19,68,4,47,"arguments"],[19,77,4,47],[19,83,4,50],[19,87,4,54],[20,4,5,2],[20,8,5,8,"validation"],[20,18,5,18],[20,21,5,18,"Object"],[20,27,5,18],[20,28,5,18,"assign"],[20,34,5,18],[21,6,6,4,"path"],[21,10,6,8],[21,12,6,10],[21,20,6,18],[22,6,7,4,"initialRouteName"],[22,22,7,20],[22,24,7,22],[22,32,7,30],[23,6,8,4,"screens"],[23,13,8,11],[23,15,8,13],[24,4,8,21],[24,7,9,8,"root"],[24,11,9,12],[24,14,9,15],[24,18,9,19],[24,21,9,22],[25,6,10,6,"alias"],[25,11,10,11],[25,13,10,13],[25,20,10,20],[26,6,11,6,"exact"],[26,11,11,11],[26,13,11,13],[26,22,11,22],[27,6,12,6,"stringify"],[27,15,12,15],[27,17,12,17],[27,25,12,25],[28,6,13,6,"parse"],[28,11,13,11],[28,13,13,13],[29,4,14,4],[29,5,14,5],[29,6,15,3],[30,4,16,2],[30,8,16,6],[30,15,16,13,"config"],[30,21,16,19],[30,26,16,24],[30,34,16,32],[30,38,16,36,"config"],[30,44,16,42],[30,49,16,47],[30,53,16,51],[30,55,16,53],[31,6,17,4],[31,12,17,10],[31,16,17,14,"Error"],[31,21,17,19],[31,22,17,20],[31,77,17,75,"JSON"],[31,81,17,79],[31,82,17,80,"stringify"],[31,91,17,89],[31,92,17,90,"config"],[31,98,17,96],[31,99,17,97],[31,102,17,100],[31,103,17,101],[32,4,18,2],[33,4,19,2],[33,8,19,8,"validationErrors"],[33,24,19,24],[33,27,19,27,"Object"],[33,33,19,33],[33,34,19,34,"fromEntries"],[33,45,19,45],[33,46,19,46,"Object"],[33,52,19,52],[33,53,19,53,"keys"],[33,57,19,57],[33,58,19,58,"config"],[33,64,19,64],[33,65,19,65],[33,66,19,66,"map"],[33,69,19,69],[33,70,19,70],[33,80,19,70,"key"],[33,83,19,73],[33,85,19,77],[34,6,20,4],[34,10,20,8,"key"],[34,13,20,11],[34,17,20,15,"validation"],[34,27,20,25],[34,29,20,27],[35,8,21,6],[35,12,21,12,"type"],[35,16,21,16],[35,19,21,19,"validation"],[35,29,21,29],[35,30,21,30,"key"],[35,33,21,33],[35,34,21,34],[36,8,22,6],[37,8,23,6],[37,12,23,12,"value"],[37,17,23,17],[37,20,23,20,"config"],[37,26,23,26],[37,27,23,27,"key"],[37,30,23,30],[37,31,23,31],[38,8,24,6],[38,12,24,10,"value"],[38,17,24,15],[38,22,24,20,"undefined"],[38,31,24,29],[38,33,24,31],[39,10,25,8],[39,14,25,12,"type"],[39,18,25,16],[39,23,25,21],[39,30,25,28],[39,32,25,30],[40,12,26,10],[40,16,26,14],[40,17,26,15,"Array"],[40,22,26,20],[40,23,26,21,"isArray"],[40,30,26,28],[40,31,26,29,"value"],[40,36,26,34],[40,37,26,35],[40,39,26,37],[41,14,27,12],[41,21,27,19],[41,22,27,20,"key"],[41,25,27,23],[41,27,27,25],[41,53,27,51],[41,60,27,58,"value"],[41,65,27,63],[41,68,27,66],[41,69,27,67],[42,12,28,10],[43,10,29,8],[43,11,29,9],[43,17,29,15],[43,21,29,19],[43,28,29,26,"value"],[43,33,29,31],[43,38,29,36,"type"],[43,42,29,40],[43,44,29,42],[44,12,30,10],[44,19,30,17],[44,20,30,18,"key"],[44,23,30,21],[44,25,30,23],[44,38,30,36,"type"],[44,42,30,40],[44,53,30,51],[44,60,30,58,"value"],[44,65,30,63],[44,68,30,66],[44,69,30,67],[45,10,31,8],[46,8,32,6],[47,6,33,4],[47,7,33,5],[47,13,33,11],[48,8,34,6],[48,15,34,13],[48,16,34,14,"key"],[48,19,34,17],[48,21,34,19],[48,33,34,31],[48,34,34,32],[49,6,35,4],[50,6,36,4],[50,13,36,11],[50,17,36,15],[51,4,37,2],[51,5,37,3],[51,6,37,4],[51,7,37,5,"filter"],[51,13,37,11],[51,14,37,12,"Boolean"],[51,21,37,19],[51,22,37,20],[51,23,37,21],[52,4,38,2],[52,8,38,6,"Object"],[52,14,38,12],[52,15,38,13,"keys"],[52,19,38,17],[52,20,38,18,"validationErrors"],[52,36,38,34],[52,37,38,35],[52,38,38,36,"length"],[52,44,38,42],[52,46,38,44],[53,6,39,4],[53,12,39,10],[53,16,39,14,"Error"],[53,21,39,19],[53,22,39,20],[53,73,39,71,"formatToList"],[53,85,39,83],[53,86,39,84,"validationErrors"],[53,102,39,100],[53,103,39,101],[53,158,39,156,"formatToList"],[53,170,39,168],[53,171,39,169,"validation"],[53,181,39,179],[53,182,39,180],[53,408,39,406],[53,409,39,407],[54,4,40,2],[55,4,41,2],[55,8,41,6,"root"],[55,12,41,10],[55,16,41,14],[55,22,41,20],[55,26,41,24,"config"],[55,32,41,30],[55,36,41,34],[55,43,41,41,"config"],[55,49,41,47],[55,50,41,48,"path"],[55,54,41,52],[55,59,41,57],[55,67,41,65],[55,71,41,69,"config"],[55,77,41,75],[55,78,41,76,"path"],[55,82,41,80],[55,83,41,81,"includes"],[55,91,41,89],[55,92,41,90],[55,95,41,93],[55,96,41,94],[55,98,41,96],[56,6,42,4],[56,12,42,10],[56,16,42,14,"Error"],[56,21,42,19],[56,22,42,20],[56,45,42,43,"config"],[56,51,42,49],[56,52,42,50,"path"],[56,56,42,54],[56,138,42,136],[56,139,42,137],[57,4,43,2],[58,4,44,2],[58,8,44,6],[58,17,44,15],[58,21,44,19,"config"],[58,27,44,25],[58,31,44,29,"config"],[58,37,44,35],[58,38,44,36,"screens"],[58,45,44,43],[58,47,44,45],[59,6,45,4,"Object"],[59,12,45,10],[59,13,45,11,"entries"],[59,20,45,18],[59,21,45,19,"config"],[59,27,45,25],[59,28,45,26,"screens"],[59,35,45,33],[59,36,45,34],[59,37,45,35,"forEach"],[59,44,45,42],[59,45,45,43],[59,55,45,43,"_ref3"],[59,60,45,43],[59,62,45,59],[60,8,45,59],[60,12,45,59,"_ref4"],[60,17,45,59],[60,24,45,59,"_slicedToArray2"],[60,39,45,59],[60,40,45,59,"default"],[60,47,45,59],[60,49,45,59,"_ref3"],[60,54,45,59],[61,10,45,45,"_"],[61,11,45,46],[61,14,45,46,"_ref4"],[61,19,45,46],[62,10,45,48,"value"],[62,15,45,53],[62,18,45,53,"_ref4"],[62,23,45,53],[63,8,46,6],[63,12,46,10],[63,19,46,17,"value"],[63,24,46,22],[63,29,46,27],[63,37,46,35],[63,39,46,37],[64,10,47,8,"validatePathConfig"],[64,28,47,26],[64,29,47,27,"value"],[64,34,47,32],[64,36,47,34],[64,41,47,39],[64,42,47,40],[65,8,48,6],[66,6,49,4],[66,7,49,5],[66,8,49,6],[67,4,50,2],[68,2,51,0],[69,0,51,1],[69,3]],"functionMap":{"names":["<global>","formatToList","Object.entries.map$argument_0","validatePathConfig","Object.keys.map$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA;qBCE,mCC,uCD,YD;OGC;sECe;GDkB;2CEQ;KFI;CHE"}},"type":"js/module"}]}