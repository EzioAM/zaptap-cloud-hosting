{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"../supabase/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"q3G/dBcB/lyqe2ZqsudXc9dkd4E=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":54,"index":101}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.UserRole = exports.RoleService = undefined;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3]));\n  var _client = require(_dependencyMap[4]);\n  var _EventLogger = require(_dependencyMap[5]);\n  var UserRole = exports.UserRole = /*#__PURE__*/function (UserRole) {\n    UserRole[\"USER\"] = \"user\";\n    UserRole[\"ADMIN\"] = \"admin\";\n    UserRole[\"DEVELOPER\"] = \"developer\";\n    UserRole[\"SUPER_ADMIN\"] = \"super_admin\";\n    return UserRole;\n  }({});\n  var RoleService = exports.RoleService = /*#__PURE__*/function () {\n    function RoleService() {\n      (0, _classCallCheck2.default)(this, RoleService);\n    }\n    return (0, _createClass2.default)(RoleService, null, [{\n      key: \"hasDeveloperAccess\",\n      value: (\n      /**\n       * Check if current user has developer access\n       */\n      function () {\n        var _hasDeveloperAccess = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var _yield$supabase$auth$ = yield _client.supabase.auth.getUser(),\n              user = _yield$supabase$auth$.data.user;\n            if (!user?.email) {\n              return false;\n            }\n\n            // Check if user email is in developer list\n            var isDeveloper = this.DEVELOPER_EMAILS.includes(user.email.toLowerCase());\n\n            // Also check database role if you have a profiles table\n            if (isDeveloper) {\n              return true;\n            }\n\n            // Check database for role\n            var _yield$supabase$from$ = yield _client.supabase.from('profiles').select('role').eq('id', user.id).single(),\n              profile = _yield$supabase$from$.data;\n            return profile?.role === UserRole.DEVELOPER || profile?.role === UserRole.SUPER_ADMIN;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Authentication', 'Error checking developer access:', error);\n            return false;\n          }\n        });\n        function hasDeveloperAccess() {\n          return _hasDeveloperAccess.apply(this, arguments);\n        }\n        return hasDeveloperAccess;\n      }()\n      /**\n       * Check if user has specific permission\n       */\n      )\n    }, {\n      key: \"hasPermission\",\n      value: (function () {\n        var _hasPermission = (0, _asyncToGenerator2.default)(function* (permission) {\n          try {\n            var _yield$supabase$auth$2 = yield _client.supabase.auth.getUser(),\n              user = _yield$supabase$auth$2.data.user;\n            if (!user) return false;\n\n            // Developer emails have all permissions\n            if (this.DEVELOPER_EMAILS.includes(user.email?.toLowerCase() || '')) {\n              return true;\n            }\n            var _yield$supabase$from$2 = yield _client.supabase.from('profiles').select('role, permissions').eq('id', user.id).single(),\n              profile = _yield$supabase$from$2.data;\n            if (!profile) return false;\n\n            // Super admin has all permissions\n            if (profile.role === UserRole.SUPER_ADMIN) {\n              return true;\n            }\n\n            // Check specific permissions\n            return profile.permissions?.includes(permission) || false;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Authentication', 'Error checking permission:', error);\n            return false;\n          }\n        });\n        function hasPermission(_x) {\n          return _hasPermission.apply(this, arguments);\n        }\n        return hasPermission;\n      }()\n      /**\n       * Get current user's role\n       */\n      )\n    }, {\n      key: \"getCurrentUserRole\",\n      value: (function () {\n        var _getCurrentUserRole = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            var _yield$supabase$auth$3 = yield _client.supabase.auth.getUser(),\n              user = _yield$supabase$auth$3.data.user;\n            if (!user?.email) {\n              return UserRole.USER;\n            }\n\n            // Check if user email is in developer list\n            if (this.DEVELOPER_EMAILS.includes(user.email.toLowerCase())) {\n              return UserRole.DEVELOPER;\n            }\n            var _yield$supabase$from$3 = yield _client.supabase.from('profiles').select('role').eq('id', user.id).single(),\n              profile = _yield$supabase$from$3.data;\n            return profile?.role || UserRole.USER;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Authentication', 'Error getting user role:', error);\n            return UserRole.USER;\n          }\n        });\n        function getCurrentUserRole() {\n          return _getCurrentUserRole.apply(this, arguments);\n        }\n        return getCurrentUserRole;\n      }()\n      /**\n       * Update user role (admin only)\n       */\n      )\n    }, {\n      key: \"updateUserRole\",\n      value: (function () {\n        var _updateUserRole = (0, _asyncToGenerator2.default)(function* (userId, newRole) {\n          try {\n            var hasPermission = yield this.hasPermission('manage_users');\n            if (!hasPermission) {\n              throw new Error('Insufficient permissions to update user role');\n            }\n            var _yield$supabase$from$4 = yield _client.supabase.from('profiles').update({\n                role: newRole,\n                updated_at: new Date().toISOString()\n              }).eq('id', userId),\n              error = _yield$supabase$from$4.error;\n            if (error) throw error;\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Authentication', 'Error updating user role:', error);\n            return false;\n          }\n        });\n        function updateUserRole(_x2, _x3) {\n          return _updateUserRole.apply(this, arguments);\n        }\n        return updateUserRole;\n      }()\n      /**\n       * Check if current user is authenticated and authorized for action\n       */\n      )\n    }, {\n      key: \"requireDeveloperAccess\",\n      value: (function () {\n        var _requireDeveloperAccess = (0, _asyncToGenerator2.default)(function* () {\n          var hasAccess = yield this.hasDeveloperAccess();\n          if (!hasAccess) {\n            throw new Error('Developer access required');\n          }\n        });\n        function requireDeveloperAccess() {\n          return _requireDeveloperAccess.apply(this, arguments);\n        }\n        return requireDeveloperAccess;\n      }()\n      /**\n       * Get all available permissions based on role\n       */\n      )\n    }, {\n      key: \"getPermissionsForRole\",\n      value: function getPermissionsForRole(role) {\n        switch (role) {\n          case UserRole.SUPER_ADMIN:\n            return ['manage_users', 'access_developer_tools', 'manage_system_settings', 'view_analytics', 'export_data', 'manage_content'];\n          case UserRole.DEVELOPER:\n            return ['access_developer_tools', 'view_analytics', 'export_data'];\n          case UserRole.ADMIN:\n            return ['manage_content', 'view_analytics'];\n          case UserRole.USER:\n          default:\n            return [];\n        }\n      }\n    }]);\n  }();\n  // Define your developer emails here\n  RoleService.DEVELOPER_EMAILS = ['marcminott@gmail.com' // Your email\n  // Add more developer emails as needed\n  ];\n});","lineCount":203,"map":[[10,2,1,0],[10,6,1,0,"_client"],[10,13,1,0],[10,16,1,0,"require"],[10,23,1,0],[10,24,1,0,"_dependencyMap"],[10,38,1,0],[11,2,2,0],[11,6,2,0,"_EventLogger"],[11,18,2,0],[11,21,2,0,"require"],[11,28,2,0],[11,29,2,0,"_dependencyMap"],[11,43,2,0],[12,2,2,54],[12,6,4,12,"UserRole"],[12,14,4,20],[12,17,4,20,"exports"],[12,24,4,20],[12,25,4,20,"UserRole"],[12,33,4,20],[12,59,4,12,"UserRole"],[12,67,4,20],[13,4,4,12,"UserRole"],[13,12,4,20],[14,4,4,12,"UserRole"],[14,12,4,20],[15,4,4,12,"UserRole"],[15,12,4,20],[16,4,4,12,"UserRole"],[16,12,4,20],[17,4,4,20],[17,11,4,12,"UserRole"],[17,19,4,20],[18,2,4,20],[19,2,4,20],[19,6,20,13,"RoleService"],[19,17,20,24],[19,20,20,24,"exports"],[19,27,20,24],[19,28,20,24,"RoleService"],[19,39,20,24],[20,4,20,24],[20,13,20,24,"RoleService"],[20,25,20,24],[21,6,20,24],[21,10,20,24,"_classCallCheck2"],[21,26,20,24],[21,27,20,24,"default"],[21,34,20,24],[21,42,20,24,"RoleService"],[21,53,20,24],[22,4,20,24],[23,4,20,24],[23,15,20,24,"_createClass2"],[23,28,20,24],[23,29,20,24,"default"],[23,36,20,24],[23,38,20,24,"RoleService"],[23,49,20,24],[24,6,20,24,"key"],[24,9,20,24],[25,6,20,24,"value"],[25,11,20,24],[26,6,27,2],[27,0,28,0],[28,0,29,0],[29,6,27,2],[30,8,27,2],[30,12,27,2,"_hasDeveloperAccess"],[30,31,27,2],[30,38,27,2,"_asyncToGenerator2"],[30,56,27,2],[30,57,27,2,"default"],[30,64,27,2],[30,66,30,2],[30,79,30,54],[31,10,31,4],[31,14,31,8],[32,12,32,6],[32,16,32,6,"_yield$supabase$auth$"],[32,37,32,6],[32,46,32,39,"supabase"],[32,62,32,47],[32,63,32,48,"auth"],[32,67,32,52],[32,68,32,53,"getUser"],[32,75,32,60],[32,76,32,61],[32,77,32,62],[33,14,32,22,"user"],[33,18,32,26],[33,21,32,26,"_yield$supabase$auth$"],[33,42,32,26],[33,43,32,14,"data"],[33,47,32,18],[33,48,32,22,"user"],[33,52,32,26],[34,12,34,6],[34,16,34,10],[34,17,34,11,"user"],[34,21,34,15],[34,23,34,17,"email"],[34,28,34,22],[34,30,34,24],[35,14,35,8],[35,21,35,15],[35,26,35,20],[36,12,36,6],[38,12,38,6],[39,12,39,6],[39,16,39,12,"isDeveloper"],[39,27,39,23],[39,30,39,26],[39,34,39,30],[39,35,39,31,"DEVELOPER_EMAILS"],[39,51,39,47],[39,52,39,48,"includes"],[39,60,39,56],[39,61,39,57,"user"],[39,65,39,61],[39,66,39,62,"email"],[39,71,39,67],[39,72,39,68,"toLowerCase"],[39,83,39,79],[39,84,39,80],[39,85,39,81],[39,86,39,82],[41,12,41,6],[42,12,42,6],[42,16,42,10,"isDeveloper"],[42,27,42,21],[42,29,42,23],[43,14,43,8],[43,21,43,15],[43,25,43,19],[44,12,44,6],[46,12,46,6],[47,12,47,6],[47,16,47,6,"_yield$supabase$from$"],[47,37,47,6],[47,46,47,38,"supabase"],[47,62,47,46],[47,63,48,9,"from"],[47,67,48,13],[47,68,48,14],[47,78,48,24],[47,79,48,25],[47,80,49,9,"select"],[47,86,49,15],[47,87,49,16],[47,93,49,22],[47,94,49,23],[47,95,50,9,"eq"],[47,97,50,11],[47,98,50,12],[47,102,50,16],[47,104,50,18,"user"],[47,108,50,22],[47,109,50,23,"id"],[47,111,50,25],[47,112,50,26],[47,113,51,9,"single"],[47,119,51,15],[47,120,51,16],[47,121,51,17],[48,14,47,20,"profile"],[48,21,47,27],[48,24,47,27,"_yield$supabase$from$"],[48,45,47,27],[48,46,47,14,"data"],[48,50,47,18],[49,12,53,6],[49,19,53,13,"profile"],[49,26,53,20],[49,28,53,22,"role"],[49,32,53,26],[49,37,53,31,"UserRole"],[49,45,53,39],[49,46,53,40,"DEVELOPER"],[49,55,53,49],[49,59,54,13,"profile"],[49,66,54,20],[49,68,54,22,"role"],[49,72,54,26],[49,77,54,31,"UserRole"],[49,85,54,39],[49,86,54,40,"SUPER_ADMIN"],[49,97,54,51],[50,10,55,4],[50,11,55,5],[50,12,55,6],[50,19,55,13,"error"],[50,24,55,18],[50,26,55,20],[51,12,56,6,"EventLogger"],[51,36,56,17],[51,37,56,18,"error"],[51,42,56,23],[51,43,56,24],[51,59,56,40],[51,61,56,42],[51,95,56,76],[51,97,56,78,"error"],[51,102,56,92],[51,103,56,93],[52,12,57,6],[52,19,57,13],[52,24,57,18],[53,10,58,4],[54,8,59,2],[54,9,59,3],[55,8,59,3],[55,17,30,15,"hasDeveloperAccess"],[55,35,30,33,"hasDeveloperAccess"],[55,36,30,33],[56,10,30,33],[56,17,30,33,"_hasDeveloperAccess"],[56,36,30,33],[56,37,30,33,"apply"],[56,42,30,33],[56,49,30,33,"arguments"],[56,58,30,33],[57,8,30,33],[58,8,30,33],[58,15,30,15,"hasDeveloperAccess"],[58,33,30,33],[59,6,30,33],[60,6,61,2],[61,0,62,0],[62,0,63,0],[63,6,61,2],[64,4,61,2],[65,6,61,2,"key"],[65,9,61,2],[66,6,61,2,"value"],[66,11,61,2],[67,8,61,2],[67,12,61,2,"_hasPermission"],[67,26,61,2],[67,33,61,2,"_asyncToGenerator2"],[67,51,61,2],[67,52,61,2,"default"],[67,59,61,2],[67,61,64,2],[67,72,64,29,"permission"],[67,82,64,47],[67,84,64,67],[68,10,65,4],[68,14,65,8],[69,12,66,6],[69,16,66,6,"_yield$supabase$auth$2"],[69,38,66,6],[69,47,66,39,"supabase"],[69,63,66,47],[69,64,66,48,"auth"],[69,68,66,52],[69,69,66,53,"getUser"],[69,76,66,60],[69,77,66,61],[69,78,66,62],[70,14,66,22,"user"],[70,18,66,26],[70,21,66,26,"_yield$supabase$auth$2"],[70,43,66,26],[70,44,66,14,"data"],[70,48,66,18],[70,49,66,22,"user"],[70,53,66,26],[71,12,68,6],[71,16,68,10],[71,17,68,11,"user"],[71,21,68,15],[71,23,68,17],[71,30,68,24],[71,35,68,29],[73,12,70,6],[74,12,71,6],[74,16,71,10],[74,20,71,14],[74,21,71,15,"DEVELOPER_EMAILS"],[74,37,71,31],[74,38,71,32,"includes"],[74,46,71,40],[74,47,71,41,"user"],[74,51,71,45],[74,52,71,46,"email"],[74,57,71,51],[74,59,71,53,"toLowerCase"],[74,70,71,64],[74,71,71,65],[74,72,71,66],[74,76,71,70],[74,78,71,72],[74,79,71,73],[74,81,71,75],[75,14,72,8],[75,21,72,15],[75,25,72,19],[76,12,73,6],[77,12,75,6],[77,16,75,6,"_yield$supabase$from$2"],[77,38,75,6],[77,47,75,38,"supabase"],[77,63,75,46],[77,64,76,9,"from"],[77,68,76,13],[77,69,76,14],[77,79,76,24],[77,80,76,25],[77,81,77,9,"select"],[77,87,77,15],[77,88,77,16],[77,107,77,35],[77,108,77,36],[77,109,78,9,"eq"],[77,111,78,11],[77,112,78,12],[77,116,78,16],[77,118,78,18,"user"],[77,122,78,22],[77,123,78,23,"id"],[77,125,78,25],[77,126,78,26],[77,127,79,9,"single"],[77,133,79,15],[77,134,79,16],[77,135,79,17],[78,14,75,20,"profile"],[78,21,75,27],[78,24,75,27,"_yield$supabase$from$2"],[78,46,75,27],[78,47,75,14,"data"],[78,51,75,18],[79,12,81,6],[79,16,81,10],[79,17,81,11,"profile"],[79,24,81,18],[79,26,81,20],[79,33,81,27],[79,38,81,32],[81,12,83,6],[82,12,84,6],[82,16,84,10,"profile"],[82,23,84,17],[82,24,84,18,"role"],[82,28,84,22],[82,33,84,27,"UserRole"],[82,41,84,35],[82,42,84,36,"SUPER_ADMIN"],[82,53,84,47],[82,55,84,49],[83,14,85,8],[83,21,85,15],[83,25,85,19],[84,12,86,6],[86,12,88,6],[87,12,89,6],[87,19,89,13,"profile"],[87,26,89,20],[87,27,89,21,"permissions"],[87,38,89,32],[87,40,89,34,"includes"],[87,48,89,42],[87,49,89,43,"permission"],[87,59,89,53],[87,60,89,54],[87,64,89,58],[87,69,89,63],[88,10,90,4],[88,11,90,5],[88,12,90,6],[88,19,90,13,"error"],[88,24,90,18],[88,26,90,20],[89,12,91,6,"EventLogger"],[89,36,91,17],[89,37,91,18,"error"],[89,42,91,23],[89,43,91,24],[89,59,91,40],[89,61,91,42],[89,89,91,70],[89,91,91,72,"error"],[89,96,91,86],[89,97,91,87],[90,12,92,6],[90,19,92,13],[90,24,92,18],[91,10,93,4],[92,8,94,2],[92,9,94,3],[93,8,94,3],[93,17,64,15,"hasPermission"],[93,30,64,28,"hasPermission"],[93,31,64,28,"_x"],[93,33,64,28],[94,10,64,28],[94,17,64,28,"_hasPermission"],[94,31,64,28],[94,32,64,28,"apply"],[94,37,64,28],[94,44,64,28,"arguments"],[94,53,64,28],[95,8,64,28],[96,8,64,28],[96,15,64,15,"hasPermission"],[96,28,64,28],[97,6,64,28],[98,6,96,2],[99,0,97,0],[100,0,98,0],[101,6,96,2],[102,4,96,2],[103,6,96,2,"key"],[103,9,96,2],[104,6,96,2,"value"],[104,11,96,2],[105,8,96,2],[105,12,96,2,"_getCurrentUserRole"],[105,31,96,2],[105,38,96,2,"_asyncToGenerator2"],[105,56,96,2],[105,57,96,2,"default"],[105,64,96,2],[105,66,99,2],[105,79,99,55],[106,10,100,4],[106,14,100,8],[107,12,101,6],[107,16,101,6,"_yield$supabase$auth$3"],[107,38,101,6],[107,47,101,39,"supabase"],[107,63,101,47],[107,64,101,48,"auth"],[107,68,101,52],[107,69,101,53,"getUser"],[107,76,101,60],[107,77,101,61],[107,78,101,62],[108,14,101,22,"user"],[108,18,101,26],[108,21,101,26,"_yield$supabase$auth$3"],[108,43,101,26],[108,44,101,14,"data"],[108,48,101,18],[108,49,101,22,"user"],[108,53,101,26],[109,12,103,6],[109,16,103,10],[109,17,103,11,"user"],[109,21,103,15],[109,23,103,17,"email"],[109,28,103,22],[109,30,103,24],[110,14,104,8],[110,21,104,15,"UserRole"],[110,29,104,23],[110,30,104,24,"USER"],[110,34,104,28],[111,12,105,6],[113,12,107,6],[114,12,108,6],[114,16,108,10],[114,20,108,14],[114,21,108,15,"DEVELOPER_EMAILS"],[114,37,108,31],[114,38,108,32,"includes"],[114,46,108,40],[114,47,108,41,"user"],[114,51,108,45],[114,52,108,46,"email"],[114,57,108,51],[114,58,108,52,"toLowerCase"],[114,69,108,63],[114,70,108,64],[114,71,108,65],[114,72,108,66],[114,74,108,68],[115,14,109,8],[115,21,109,15,"UserRole"],[115,29,109,23],[115,30,109,24,"DEVELOPER"],[115,39,109,33],[116,12,110,6],[117,12,112,6],[117,16,112,6,"_yield$supabase$from$3"],[117,38,112,6],[117,47,112,38,"supabase"],[117,63,112,46],[117,64,113,9,"from"],[117,68,113,13],[117,69,113,14],[117,79,113,24],[117,80,113,25],[117,81,114,9,"select"],[117,87,114,15],[117,88,114,16],[117,94,114,22],[117,95,114,23],[117,96,115,9,"eq"],[117,98,115,11],[117,99,115,12],[117,103,115,16],[117,105,115,18,"user"],[117,109,115,22],[117,110,115,23,"id"],[117,112,115,25],[117,113,115,26],[117,114,116,9,"single"],[117,120,116,15],[117,121,116,16],[117,122,116,17],[118,14,112,20,"profile"],[118,21,112,27],[118,24,112,27,"_yield$supabase$from$3"],[118,46,112,27],[118,47,112,14,"data"],[118,51,112,18],[119,12,118,6],[119,19,118,14,"profile"],[119,26,118,21],[119,28,118,23,"role"],[119,32,118,27],[119,36,118,44,"UserRole"],[119,44,118,52],[119,45,118,53,"USER"],[119,49,118,57],[120,10,119,4],[120,11,119,5],[120,12,119,6],[120,19,119,13,"error"],[120,24,119,18],[120,26,119,20],[121,12,120,6,"EventLogger"],[121,36,120,17],[121,37,120,18,"error"],[121,42,120,23],[121,43,120,24],[121,59,120,40],[121,61,120,42],[121,87,120,68],[121,89,120,70,"error"],[121,94,120,84],[121,95,120,85],[122,12,121,6],[122,19,121,13,"UserRole"],[122,27,121,21],[122,28,121,22,"USER"],[122,32,121,26],[123,10,122,4],[124,8,123,2],[124,9,123,3],[125,8,123,3],[125,17,99,15,"getCurrentUserRole"],[125,35,99,33,"getCurrentUserRole"],[125,36,99,33],[126,10,99,33],[126,17,99,33,"_getCurrentUserRole"],[126,36,99,33],[126,37,99,33,"apply"],[126,42,99,33],[126,49,99,33,"arguments"],[126,58,99,33],[127,8,99,33],[128,8,99,33],[128,15,99,15,"getCurrentUserRole"],[128,33,99,33],[129,6,99,33],[130,6,125,2],[131,0,126,0],[132,0,127,0],[133,6,125,2],[134,4,125,2],[135,6,125,2,"key"],[135,9,125,2],[136,6,125,2,"value"],[136,11,125,2],[137,8,125,2],[137,12,125,2,"_updateUserRole"],[137,27,125,2],[137,34,125,2,"_asyncToGenerator2"],[137,52,125,2],[137,53,125,2,"default"],[137,60,125,2],[137,62,128,2],[137,73,128,30,"userId"],[137,79,128,44],[137,81,128,46,"newRole"],[137,88,128,63],[137,90,128,83],[138,10,129,4],[138,14,129,8],[139,12,130,6],[139,16,130,12,"hasPermission"],[139,29,130,25],[139,38,130,34],[139,42,130,38],[139,43,130,39,"hasPermission"],[139,56,130,52],[139,57,130,53],[139,71,130,67],[139,72,130,68],[140,12,131,6],[140,16,131,10],[140,17,131,11,"hasPermission"],[140,30,131,24],[140,32,131,26],[141,14,132,8],[141,20,132,14],[141,24,132,18,"Error"],[141,29,132,23],[141,30,132,24],[141,76,132,70],[141,77,132,71],[142,12,133,6],[143,12,135,6],[143,16,135,6,"_yield$supabase$from$4"],[143,38,135,6],[143,47,135,30,"supabase"],[143,63,135,38],[143,64,136,9,"from"],[143,68,136,13],[143,69,136,14],[143,79,136,24],[143,80,136,25],[143,81,137,9,"update"],[143,87,137,15],[143,88,137,16],[144,16,138,10,"role"],[144,20,138,14],[144,22,138,16,"newRole"],[144,29,138,23],[145,16,139,10,"updated_at"],[145,26,139,20],[145,28,139,22],[145,32,139,26,"Date"],[145,36,139,30],[145,37,139,31],[145,38,139,32],[145,39,139,33,"toISOString"],[145,50,139,44],[145,51,139,45],[146,14,140,8],[146,15,140,9],[146,16,140,10],[146,17,141,9,"eq"],[146,19,141,11],[146,20,141,12],[146,24,141,16],[146,26,141,18,"userId"],[146,32,141,24],[146,33,141,25],[147,14,135,14,"error"],[147,19,135,19],[147,22,135,19,"_yield$supabase$from$4"],[147,44,135,19],[147,45,135,14,"error"],[147,50,135,19],[148,12,143,6],[148,16,143,10,"error"],[148,21,143,15],[148,23,143,17],[148,29,143,23,"error"],[148,34,143,28],[149,12,144,6],[149,19,144,13],[149,23,144,17],[150,10,145,4],[150,11,145,5],[150,12,145,6],[150,19,145,13,"error"],[150,24,145,18],[150,26,145,20],[151,12,146,6,"EventLogger"],[151,36,146,17],[151,37,146,18,"error"],[151,42,146,23],[151,43,146,24],[151,59,146,40],[151,61,146,42],[151,88,146,69],[151,90,146,71,"error"],[151,95,146,85],[151,96,146,86],[152,12,147,6],[152,19,147,13],[152,24,147,18],[153,10,148,4],[154,8,149,2],[154,9,149,3],[155,8,149,3],[155,17,128,15,"updateUserRole"],[155,31,128,29,"updateUserRole"],[155,32,128,29,"_x2"],[155,35,128,29],[155,37,128,29,"_x3"],[155,40,128,29],[156,10,128,29],[156,17,128,29,"_updateUserRole"],[156,32,128,29],[156,33,128,29,"apply"],[156,38,128,29],[156,45,128,29,"arguments"],[156,54,128,29],[157,8,128,29],[158,8,128,29],[158,15,128,15,"updateUserRole"],[158,29,128,29],[159,6,128,29],[160,6,151,2],[161,0,152,0],[162,0,153,0],[163,6,151,2],[164,4,151,2],[165,6,151,2,"key"],[165,9,151,2],[166,6,151,2,"value"],[166,11,151,2],[167,8,151,2],[167,12,151,2,"_requireDeveloperAccess"],[167,35,151,2],[167,42,151,2,"_asyncToGenerator2"],[167,60,151,2],[167,61,151,2,"default"],[167,68,151,2],[167,70,154,2],[167,83,154,55],[168,10,155,4],[168,14,155,10,"hasAccess"],[168,23,155,19],[168,32,155,28],[168,36,155,32],[168,37,155,33,"hasDeveloperAccess"],[168,55,155,51],[168,56,155,52],[168,57,155,53],[169,10,156,4],[169,14,156,8],[169,15,156,9,"hasAccess"],[169,24,156,18],[169,26,156,20],[170,12,157,6],[170,18,157,12],[170,22,157,16,"Error"],[170,27,157,21],[170,28,157,22],[170,55,157,49],[170,56,157,50],[171,10,158,4],[172,8,159,2],[172,9,159,3],[173,8,159,3],[173,17,154,15,"requireDeveloperAccess"],[173,39,154,37,"requireDeveloperAccess"],[173,40,154,37],[174,10,154,37],[174,17,154,37,"_requireDeveloperAccess"],[174,40,154,37],[174,41,154,37,"apply"],[174,46,154,37],[174,53,154,37,"arguments"],[174,62,154,37],[175,8,154,37],[176,8,154,37],[176,15,154,15,"requireDeveloperAccess"],[176,37,154,37],[177,6,154,37],[178,6,161,2],[179,0,162,0],[180,0,163,0],[181,6,161,2],[182,4,161,2],[183,6,161,2,"key"],[183,9,161,2],[184,6,161,2,"value"],[184,11,161,2],[184,13,164,2],[184,22,164,9,"getPermissionsForRole"],[184,43,164,30,"getPermissionsForRole"],[184,44,164,31,"role"],[184,48,164,45],[184,50,164,57],[185,8,165,4],[185,16,165,12,"role"],[185,20,165,16],[186,10,166,6],[186,15,166,11,"UserRole"],[186,23,166,19],[186,24,166,20,"SUPER_ADMIN"],[186,35,166,31],[187,12,167,8],[187,19,167,15],[187,20,168,10],[187,34,168,24],[187,36,169,10],[187,60,169,34],[187,62,170,10],[187,86,170,34],[187,88,171,10],[187,104,171,26],[187,106,172,10],[187,119,172,23],[187,121,173,10],[187,137,173,26],[187,138,174,9],[188,10,175,6],[188,15,175,11,"UserRole"],[188,23,175,19],[188,24,175,20,"DEVELOPER"],[188,33,175,29],[189,12,176,8],[189,19,176,15],[189,20,177,10],[189,44,177,34],[189,46,178,10],[189,62,178,26],[189,64,179,10],[189,77,179,23],[189,78,180,9],[190,10,181,6],[190,15,181,11,"UserRole"],[190,23,181,19],[190,24,181,20,"ADMIN"],[190,29,181,25],[191,12,182,8],[191,19,182,15],[191,20,183,10],[191,36,183,26],[191,38,184,10],[191,54,184,26],[191,55,185,9],[192,10,186,6],[192,15,186,11,"UserRole"],[192,23,186,19],[192,24,186,20,"USER"],[192,28,186,24],[193,10,187,6],[194,12,188,8],[194,19,188,15],[194,21,188,17],[195,8,189,4],[196,6,190,2],[197,4,190,3],[198,2,190,3],[199,2,21,2],[200,2,20,13,"RoleService"],[200,13,20,24],[200,14,22,26,"DEVELOPER_EMAILS"],[200,30,22,42],[200,33,22,45],[200,34,23,4],[200,56,23,26],[200,57,23,28],[201,2,24,4],[202,2,24,4],[202,3,25,3],[203,0,25,3],[203,3]],"functionMap":{"names":["<global>","RoleService","hasDeveloperAccess","hasPermission","getCurrentUserRole","updateUserRole","requireDeveloperAccess","getPermissionsForRole"],"mappings":"AAA;OCmB;ECU;GD6B;EEK;GF8B;EGK;GHwB;EIK;GJqB;EKK;GLK;EMK;GN0B"}},"type":"js/module"}]}