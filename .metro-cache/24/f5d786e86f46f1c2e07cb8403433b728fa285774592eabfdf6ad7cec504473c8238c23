{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo-application","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":48,"index":48}}],"key":"aOo/Wkh64aldyNvnMGu1GTRT2ZA=","exportNames":["*"]}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":49},"end":{"line":2,"column":39,"index":88}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":89},"end":{"line":3,"column":78,"index":167}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./DevicePushTokenAutoRegistration.fx","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":168},"end":{"line":4,"column":93,"index":261}}],"key":"ZH5Mz79TLJE/dTuAobGrlWmVWRo=","exportNames":["*"]}},{"name":"./ServerRegistrationModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":262},"end":{"line":5,"column":66,"index":328}}],"key":"OTliNP9lxRDJOLdh5XsGIjq12GA=","exportNames":["*"]}},{"name":"./getDevicePushTokenAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":329},"end":{"line":6,"column":64,"index":393}}],"key":"XdMNnezmMyUe2eZLOsw/aE7Mhfk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getExpoPushTokenAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var Application = _interopRequireWildcard(require(_dependencyMap[2]));\n  var _expoConstants = _interopRequireDefault(require(_dependencyMap[3]));\n  var _expoModulesCore = require(_dependencyMap[4]);\n  var _DevicePushTokenAutoRegistration = require(_dependencyMap[5]);\n  var _ServerRegistrationModule = _interopRequireDefault(require(_dependencyMap[6]));\n  var _getDevicePushTokenAsync = _interopRequireDefault(require(_dependencyMap[7]));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  var productionBaseUrl = 'https://exp.host/--/api/v2/';\n  /**\n   * Returns an Expo token that can be used to send a push notification to the device using Expo's push notifications service.\n   *\n   * This method makes requests to the Expo's servers. It can get rejected in cases where the request itself fails\n   * (for example, due to the device being offline, experiencing a network timeout, or other HTTPS request failures).\n   * To provide offline support to your users, you should `try/catch` this method and implement retry logic to attempt\n   * to get the push token later, once the device is back online.\n   *\n   * > For Expo's backend to be able to send notifications to your app, you will need to provide it with push notification keys.\n   * For more information, see [credentials](/push-notifications/push-notifications-setup/#get-credentials-for-development-builds) in the push notifications setup.\n   *\n   * @param options Object allowing you to pass in push notification configuration.\n   * @return Returns a `Promise` that resolves to an object representing acquired push token.\n   * @header fetch\n   *\n   * @example\n   * ```ts\n   * import * as Notifications from 'expo-notifications';\n   *\n   * export async function registerForPushNotificationsAsync(userId: string) {\n   *   const expoPushToken = await Notifications.getExpoPushTokenAsync({\n   *    projectId: 'your-project-id',\n   *   });\n   *\n   *   await fetch('https://example.com/', {\n   *     method: 'POST',\n   *     headers: {\n   *       'Content-Type': 'application/json',\n   *     },\n   *     body: JSON.stringify({\n   *       userId,\n   *       expoPushToken,\n   *     }),\n   *   });\n   * }\n   * ```\n   */\n  function getExpoPushTokenAsync() {\n    return _getExpoPushTokenAsync.apply(this, arguments);\n  }\n  function _getExpoPushTokenAsync() {\n    _getExpoPushTokenAsync = (0, _asyncToGenerator2.default)(function* () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var devicePushToken = options.devicePushToken || (yield (0, _getDevicePushTokenAsync.default)());\n      var deviceId = options.deviceId || (yield getDeviceIdAsync());\n      // Depending on the runtime environment, the default may be located in various places.\n      var projectId = options.projectId || _expoConstants.default.easConfig?.projectId || _expoConstants.default.expoConfig?.extra?.eas?.projectId;\n      if (!projectId) {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_NO_EXPERIENCE_ID', `No \"projectId\" found. If \"projectId\" can't be inferred from the manifest (for instance, in bare workflow), you have to pass it in yourself.`);\n      }\n      var applicationId = options.applicationId || Application.applicationId;\n      if (!applicationId) {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_NO_APPLICATION_ID', `No \"applicationId\" found. If it can't be inferred from native configuration by expo-application, you have to pass it in yourself.`);\n      }\n      var type = options.type || getTypeOfToken(devicePushToken);\n      var development = options.development || (yield shouldUseDevelopmentNotificationService());\n      var baseUrl = options.baseUrl ?? productionBaseUrl;\n      var url = options.url ?? `${baseUrl}push/getExpoPushToken`;\n      var body = {\n        type,\n        deviceId: deviceId.toLowerCase(),\n        development,\n        appId: applicationId,\n        deviceToken: getDeviceToken(devicePushToken),\n        projectId\n      };\n      var response = yield fetch(url, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      }).catch(error => {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_NETWORK_ERROR', `Error encountered while fetching Expo token: ${error}.`);\n      });\n      if (!response.ok) {\n        var statusInfo = response.statusText || response.status;\n        var _body = undefined;\n        try {\n          _body = yield response.text();\n        } catch {\n          // do nothing\n        }\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Error encountered while fetching Expo token, expected an OK response, received: ${statusInfo} (body: \"${_body}\").`);\n      }\n      var expoPushToken = getExpoPushToken(yield parseResponse(response));\n      try {\n        if (options.url || options.baseUrl) {} else {\n          yield (0, _DevicePushTokenAutoRegistration.setAutoServerRegistrationEnabledAsync)(true);\n        }\n      } catch (e) {}\n      return {\n        type: 'expo',\n        data: expoPushToken\n      };\n    });\n    return _getExpoPushTokenAsync.apply(this, arguments);\n  }\n  function parseResponse(_x) {\n    return _parseResponse.apply(this, arguments);\n  }\n  function _parseResponse() {\n    _parseResponse = (0, _asyncToGenerator2.default)(function* (response) {\n      try {\n        return yield response.json();\n      } catch {\n        try {\n          throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Expected a JSON response from server when fetching Expo token, received body: ${JSON.stringify(yield response.text())}.`);\n        } catch {\n          throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Expected a JSON response from server when fetching Expo token, received response: ${JSON.stringify(response)}.`);\n        }\n      }\n    });\n    return _parseResponse.apply(this, arguments);\n  }\n  function getExpoPushToken(data) {\n    if (!data || !(typeof data === 'object') || !data.data || !(typeof data.data === 'object') || !data.data.expoPushToken || !(typeof data.data.expoPushToken === 'string')) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Malformed response from server, expected \"{ data: { expoPushToken: string } }\", received: ${JSON.stringify(data, null, 2)}.`);\n    }\n    return data.data.expoPushToken;\n  }\n  // Same as in DevicePushTokenAutoRegistration\n  function getDeviceIdAsync() {\n    return _getDeviceIdAsync.apply(this, arguments);\n  }\n  function _getDeviceIdAsync() {\n    _getDeviceIdAsync = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        if (!_ServerRegistrationModule.default.getInstallationIdAsync) {\n          throw new _expoModulesCore.UnavailabilityError('ExpoServerRegistrationModule', 'getInstallationIdAsync');\n        }\n        return yield _ServerRegistrationModule.default.getInstallationIdAsync();\n      } catch (e) {\n        throw new _expoModulesCore.CodedError('ERR_NOTIF_DEVICE_ID', `Could not have fetched installation ID of the application: ${e}.`);\n      }\n    });\n    return _getDeviceIdAsync.apply(this, arguments);\n  }\n  function getDeviceToken(devicePushToken) {\n    if (typeof devicePushToken.data === 'string') {\n      return devicePushToken.data;\n    }\n    return JSON.stringify(devicePushToken.data);\n  }\n  // Same as in DevicePushTokenAutoRegistration\n  function shouldUseDevelopmentNotificationService() {\n    return _shouldUseDevelopmentNotificationService.apply(this, arguments);\n  } // Same as in DevicePushTokenAutoRegistration\n  function _shouldUseDevelopmentNotificationService() {\n    _shouldUseDevelopmentNotificationService = (0, _asyncToGenerator2.default)(function* () {\n      return false;\n    });\n    return _shouldUseDevelopmentNotificationService.apply(this, arguments);\n  }\n  function getTypeOfToken(devicePushToken) {\n    switch (devicePushToken.type) {\n      case 'ios':\n        return 'apns';\n      case 'android':\n        return 'fcm';\n      // This probably will error on server, but let's make this function future-safe.\n      default:\n        return devicePushToken.type;\n    }\n  }\n});","lineCount":181,"map":[[8,2,1,0],[8,6,1,0,"Application"],[8,17,1,0],[8,20,1,0,"_interopRequireWildcard"],[8,43,1,0],[8,44,1,0,"require"],[8,51,1,0],[8,52,1,0,"_dependencyMap"],[8,66,1,0],[9,2,2,0],[9,6,2,0,"_expoConstants"],[9,20,2,0],[9,23,2,0,"_interopRequireDefault"],[9,45,2,0],[9,46,2,0,"require"],[9,53,2,0],[9,54,2,0,"_dependencyMap"],[9,68,2,0],[10,2,3,0],[10,6,3,0,"_expoModulesCore"],[10,22,3,0],[10,25,3,0,"require"],[10,32,3,0],[10,33,3,0,"_dependencyMap"],[10,47,3,0],[11,2,4,0],[11,6,4,0,"_DevicePushTokenAutoRegistration"],[11,38,4,0],[11,41,4,0,"require"],[11,48,4,0],[11,49,4,0,"_dependencyMap"],[11,63,4,0],[12,2,5,0],[12,6,5,0,"_ServerRegistrationModule"],[12,31,5,0],[12,34,5,0,"_interopRequireDefault"],[12,56,5,0],[12,57,5,0,"require"],[12,64,5,0],[12,65,5,0,"_dependencyMap"],[12,79,5,0],[13,2,6,0],[13,6,6,0,"_getDevicePushTokenAsync"],[13,30,6,0],[13,33,6,0,"_interopRequireDefault"],[13,55,6,0],[13,56,6,0,"require"],[13,63,6,0],[13,64,6,0,"_dependencyMap"],[13,78,6,0],[14,2,6,64],[14,11,6,64,"_interopRequireWildcard"],[14,35,6,64,"e"],[14,36,6,64],[14,38,6,64,"t"],[14,39,6,64],[14,68,6,64,"WeakMap"],[14,75,6,64],[14,81,6,64,"r"],[14,82,6,64],[14,89,6,64,"WeakMap"],[14,96,6,64],[14,100,6,64,"n"],[14,101,6,64],[14,108,6,64,"WeakMap"],[14,115,6,64],[14,127,6,64,"_interopRequireWildcard"],[14,150,6,64],[14,162,6,64,"_interopRequireWildcard"],[14,163,6,64,"e"],[14,164,6,64],[14,166,6,64,"t"],[14,167,6,64],[14,176,6,64,"t"],[14,177,6,64],[14,181,6,64,"e"],[14,182,6,64],[14,186,6,64,"e"],[14,187,6,64],[14,188,6,64,"__esModule"],[14,198,6,64],[14,207,6,64,"e"],[14,208,6,64],[14,214,6,64,"o"],[14,215,6,64],[14,217,6,64,"i"],[14,218,6,64],[14,220,6,64,"f"],[14,221,6,64],[14,226,6,64,"__proto__"],[14,235,6,64],[14,243,6,64,"default"],[14,250,6,64],[14,252,6,64,"e"],[14,253,6,64],[14,270,6,64,"e"],[14,271,6,64],[14,294,6,64,"e"],[14,295,6,64],[14,320,6,64,"e"],[14,321,6,64],[14,330,6,64,"f"],[14,331,6,64],[14,337,6,64,"o"],[14,338,6,64],[14,341,6,64,"t"],[14,342,6,64],[14,345,6,64,"n"],[14,346,6,64],[14,349,6,64,"r"],[14,350,6,64],[14,358,6,64,"o"],[14,359,6,64],[14,360,6,64,"has"],[14,363,6,64],[14,364,6,64,"e"],[14,365,6,64],[14,375,6,64,"o"],[14,376,6,64],[14,377,6,64,"get"],[14,380,6,64],[14,381,6,64,"e"],[14,382,6,64],[14,385,6,64,"o"],[14,386,6,64],[14,387,6,64,"set"],[14,390,6,64],[14,391,6,64,"e"],[14,392,6,64],[14,394,6,64,"f"],[14,395,6,64],[14,409,6,64,"_t"],[14,411,6,64],[14,415,6,64,"e"],[14,416,6,64],[14,432,6,64,"_t"],[14,434,6,64],[14,441,6,64,"hasOwnProperty"],[14,455,6,64],[14,456,6,64,"call"],[14,460,6,64],[14,461,6,64,"e"],[14,462,6,64],[14,464,6,64,"_t"],[14,466,6,64],[14,473,6,64,"i"],[14,474,6,64],[14,478,6,64,"o"],[14,479,6,64],[14,482,6,64,"Object"],[14,488,6,64],[14,489,6,64,"defineProperty"],[14,503,6,64],[14,508,6,64,"Object"],[14,514,6,64],[14,515,6,64,"getOwnPropertyDescriptor"],[14,539,6,64],[14,540,6,64,"e"],[14,541,6,64],[14,543,6,64,"_t"],[14,545,6,64],[14,552,6,64,"i"],[14,553,6,64],[14,554,6,64,"get"],[14,557,6,64],[14,561,6,64,"i"],[14,562,6,64],[14,563,6,64,"set"],[14,566,6,64],[14,570,6,64,"o"],[14,571,6,64],[14,572,6,64,"f"],[14,573,6,64],[14,575,6,64,"_t"],[14,577,6,64],[14,579,6,64,"i"],[14,580,6,64],[14,584,6,64,"f"],[14,585,6,64],[14,586,6,64,"_t"],[14,588,6,64],[14,592,6,64,"e"],[14,593,6,64],[14,594,6,64,"_t"],[14,596,6,64],[14,607,6,64,"f"],[14,608,6,64],[14,613,6,64,"e"],[14,614,6,64],[14,616,6,64,"t"],[14,617,6,64],[15,2,7,0],[15,6,7,6,"productionBaseUrl"],[15,23,7,23],[15,26,7,26],[15,55,7,55],[16,2,8,0],[17,0,9,0],[18,0,10,0],[19,0,11,0],[20,0,12,0],[21,0,13,0],[22,0,14,0],[23,0,15,0],[24,0,16,0],[25,0,17,0],[26,0,18,0],[27,0,19,0],[28,0,20,0],[29,0,21,0],[30,0,22,0],[31,0,23,0],[32,0,24,0],[33,0,25,0],[34,0,26,0],[35,0,27,0],[36,0,28,0],[37,0,29,0],[38,0,30,0],[39,0,31,0],[40,0,32,0],[41,0,33,0],[42,0,34,0],[43,0,35,0],[44,0,36,0],[45,0,37,0],[46,0,38,0],[47,0,39,0],[48,0,40,0],[49,0,41,0],[50,0,42,0],[51,0,43,0],[52,0,44,0],[53,2,8,0],[53,11,45,30,"getExpoPushTokenAsync"],[53,32,45,51,"getExpoPushTokenAsync"],[53,33,45,51],[54,4,45,51],[54,11,45,51,"_getExpoPushTokenAsync"],[54,33,45,51],[54,34,45,51,"apply"],[54,39,45,51],[54,46,45,51,"arguments"],[54,55,45,51],[55,2,45,51],[56,2,45,51],[56,11,45,51,"_getExpoPushTokenAsync"],[56,34,45,51],[57,4,45,51,"_getExpoPushTokenAsync"],[57,26,45,51],[57,33,45,51,"_asyncToGenerator2"],[57,51,45,51],[57,52,45,51,"default"],[57,59,45,51],[57,61,45,15],[57,74,45,66],[58,6,45,66],[58,10,45,52,"options"],[58,17,45,59],[58,20,45,59,"arguments"],[58,29,45,59],[58,30,45,59,"length"],[58,36,45,59],[58,44,45,59,"arguments"],[58,53,45,59],[58,61,45,59,"undefined"],[58,70,45,59],[58,73,45,59,"arguments"],[58,82,45,59],[58,88,45,62],[58,89,45,63],[58,90,45,64],[59,6,46,4],[59,10,46,10,"devicePushToken"],[59,25,46,25],[59,28,46,28,"options"],[59,35,46,35],[59,36,46,36,"devicePushToken"],[59,51,46,51],[59,62,46,62],[59,66,46,62,"getDevicePushTokenAsync"],[59,98,46,85],[59,100,46,86],[59,101,46,87],[59,102,46,88],[60,6,47,4],[60,10,47,10,"deviceId"],[60,18,47,18],[60,21,47,21,"options"],[60,28,47,28],[60,29,47,29,"deviceId"],[60,37,47,37],[60,48,47,48,"getDeviceIdAsync"],[60,64,47,64],[60,65,47,65],[60,66,47,66],[60,67,47,67],[61,6,48,4],[62,6,49,4],[62,10,49,10,"projectId"],[62,19,49,19],[62,22,49,22,"options"],[62,29,49,29],[62,30,49,30,"projectId"],[62,39,49,39],[62,43,50,8,"Constants"],[62,65,50,17],[62,66,50,18,"easConfig"],[62,75,50,27],[62,77,50,29,"projectId"],[62,86,50,38],[62,90,51,8,"Constants"],[62,112,51,17],[62,113,51,18,"expoConfig"],[62,123,51,28],[62,125,51,30,"extra"],[62,130,51,35],[62,132,51,37,"eas"],[62,135,51,40],[62,137,51,42,"projectId"],[62,146,51,51],[63,6,52,4],[63,10,52,8],[63,11,52,9,"projectId"],[63,20,52,18],[63,22,52,20],[64,8,53,8],[64,14,53,14],[64,18,53,18,"CodedError"],[64,45,53,28],[64,46,53,29],[64,82,53,65],[64,84,53,67],[64,225,53,208],[64,226,53,209],[65,6,54,4],[66,6,55,4],[66,10,55,10,"applicationId"],[66,23,55,23],[66,26,55,26,"options"],[66,33,55,33],[66,34,55,34,"applicationId"],[66,47,55,47],[66,51,55,51,"Application"],[66,62,55,62],[66,63,55,63,"applicationId"],[66,76,55,76],[67,6,56,4],[67,10,56,8],[67,11,56,9,"applicationId"],[67,24,56,22],[67,26,56,24],[68,8,57,8],[68,14,57,14],[68,18,57,18,"CodedError"],[68,45,57,28],[68,46,57,29],[68,83,57,66],[68,85,57,68],[68,216,57,199],[68,217,57,200],[69,6,58,4],[70,6,59,4],[70,10,59,10,"type"],[70,14,59,14],[70,17,59,17,"options"],[70,24,59,24],[70,25,59,25,"type"],[70,29,59,29],[70,33,59,33,"getTypeOfToken"],[70,47,59,47],[70,48,59,48,"devicePushToken"],[70,63,59,63],[70,64,59,64],[71,6,60,4],[71,10,60,10,"development"],[71,21,60,21],[71,24,60,24,"options"],[71,31,60,31],[71,32,60,32,"development"],[71,43,60,43],[71,54,60,54,"shouldUseDevelopmentNotificationService"],[71,93,60,93],[71,94,60,94],[71,95,60,95],[71,96,60,96],[72,6,61,4],[72,10,61,10,"baseUrl"],[72,17,61,17],[72,20,61,20,"options"],[72,27,61,27],[72,28,61,28,"baseUrl"],[72,35,61,35],[72,39,61,39,"productionBaseUrl"],[72,56,61,56],[73,6,62,4],[73,10,62,10,"url"],[73,13,62,13],[73,16,62,16,"options"],[73,23,62,23],[73,24,62,24,"url"],[73,27,62,27],[73,31,62,31],[73,34,62,34,"baseUrl"],[73,41,62,41],[73,64,62,64],[74,6,63,4],[74,10,63,10,"body"],[74,14,63,14],[74,17,63,17],[75,8,64,8,"type"],[75,12,64,12],[76,8,65,8,"deviceId"],[76,16,65,16],[76,18,65,18,"deviceId"],[76,26,65,26],[76,27,65,27,"toLowerCase"],[76,38,65,38],[76,39,65,39],[76,40,65,40],[77,8,66,8,"development"],[77,19,66,19],[78,8,67,8,"appId"],[78,13,67,13],[78,15,67,15,"applicationId"],[78,28,67,28],[79,8,68,8,"deviceToken"],[79,19,68,19],[79,21,68,21,"getDeviceToken"],[79,35,68,35],[79,36,68,36,"devicePushToken"],[79,51,68,51],[79,52,68,52],[80,8,69,8,"projectId"],[81,6,70,4],[81,7,70,5],[82,6,71,4],[82,10,71,10,"response"],[82,18,71,18],[82,27,71,27,"fetch"],[82,32,71,32],[82,33,71,33,"url"],[82,36,71,36],[82,38,71,38],[83,8,72,8,"method"],[83,14,72,14],[83,16,72,16],[83,22,72,22],[84,8,73,8,"headers"],[84,15,73,15],[84,17,73,17],[85,10,74,12],[85,24,74,26],[85,26,74,28],[86,8,75,8],[86,9,75,9],[87,8,76,8,"body"],[87,12,76,12],[87,14,76,14,"JSON"],[87,18,76,18],[87,19,76,19,"stringify"],[87,28,76,28],[87,29,76,29,"body"],[87,33,76,33],[88,6,77,4],[88,7,77,5],[88,8,77,6],[88,9,77,7,"catch"],[88,14,77,12],[88,15,77,14,"error"],[88,20,77,19],[88,24,77,24],[89,8,78,8],[89,14,78,14],[89,18,78,18,"CodedError"],[89,45,78,28],[89,46,78,29],[89,79,78,62],[89,81,78,64],[89,129,78,112,"error"],[89,134,78,117],[89,137,78,120],[89,138,78,121],[90,6,79,4],[90,7,79,5],[90,8,79,6],[91,6,80,4],[91,10,80,8],[91,11,80,9,"response"],[91,19,80,17],[91,20,80,18,"ok"],[91,22,80,20],[91,24,80,22],[92,8,81,8],[92,12,81,14,"statusInfo"],[92,22,81,24],[92,25,81,27,"response"],[92,33,81,35],[92,34,81,36,"statusText"],[92,44,81,46],[92,48,81,50,"response"],[92,56,81,58],[92,57,81,59,"status"],[92,63,81,65],[93,8,82,8],[93,12,82,12,"body"],[93,17,82,16],[93,20,82,19,"undefined"],[93,29,82,28],[94,8,83,8],[94,12,83,12],[95,10,84,12,"body"],[95,15,84,16],[95,24,84,25,"response"],[95,32,84,33],[95,33,84,34,"text"],[95,37,84,38],[95,38,84,39],[95,39,84,40],[96,8,85,8],[96,9,85,9],[96,10,86,8],[96,16,86,14],[97,10,87,12],[98,8,87,12],[99,8,89,8],[99,14,89,14],[99,18,89,18,"CodedError"],[99,45,89,28],[99,46,89,29],[99,78,89,61],[99,80,89,63],[99,163,89,146,"statusInfo"],[99,173,89,156],[99,185,89,168,"body"],[99,190,89,172],[99,195,89,177],[99,196,89,178],[100,6,90,4],[101,6,91,4],[101,10,91,10,"expoPushToken"],[101,23,91,23],[101,26,91,26,"getExpoPushToken"],[101,42,91,42],[101,49,91,49,"parseResponse"],[101,62,91,62],[101,63,91,63,"response"],[101,71,91,71],[101,72,91,72],[101,73,91,73],[102,6,92,4],[102,10,92,8],[103,8,93,8],[103,12,93,12,"options"],[103,19,93,19],[103,20,93,20,"url"],[103,23,93,23],[103,27,93,27,"options"],[103,34,93,34],[103,35,93,35,"baseUrl"],[103,42,93,42],[103,44,93,44],[103,45,95,8],[103,46,95,9],[103,52,96,13],[104,10,97,12],[104,16,97,18],[104,20,97,18,"setAutoServerRegistrationEnabledAsync"],[104,90,97,55],[104,92,97,56],[104,96,97,60],[104,97,97,61],[105,8,98,8],[106,6,99,4],[106,7,99,5],[106,8,100,4],[106,15,100,11,"e"],[106,16,100,12],[106,18,100,14],[106,19,102,4],[107,6,103,4],[107,13,103,11],[108,8,104,8,"type"],[108,12,104,12],[108,14,104,14],[108,20,104,20],[109,8,105,8,"data"],[109,12,105,12],[109,14,105,14,"expoPushToken"],[110,6,106,4],[110,7,106,5],[111,4,107,0],[111,5,107,1],[112,4,107,1],[112,11,107,1,"_getExpoPushTokenAsync"],[112,33,107,1],[112,34,107,1,"apply"],[112,39,107,1],[112,46,107,1,"arguments"],[112,55,107,1],[113,2,107,1],[114,2,107,1],[114,11,108,15,"parseResponse"],[114,24,108,28,"parseResponse"],[114,25,108,28,"_x"],[114,27,108,28],[115,4,108,28],[115,11,108,28,"_parseResponse"],[115,25,108,28],[115,26,108,28,"apply"],[115,31,108,28],[115,38,108,28,"arguments"],[115,47,108,28],[116,2,108,28],[117,2,108,28],[117,11,108,28,"_parseResponse"],[117,26,108,28],[118,4,108,28,"_parseResponse"],[118,18,108,28],[118,25,108,28,"_asyncToGenerator2"],[118,43,108,28],[118,44,108,28,"default"],[118,51,108,28],[118,53,108,0],[118,64,108,29,"response"],[118,72,108,37],[118,74,108,39],[119,6,109,4],[119,10,109,8],[120,8,110,8],[120,21,110,21,"response"],[120,29,110,29],[120,30,110,30,"json"],[120,34,110,34],[120,35,110,35],[120,36,110,36],[121,6,111,4],[121,7,111,5],[121,8,112,4],[121,14,112,10],[122,8,113,8],[122,12,113,12],[123,10,114,12],[123,16,114,18],[123,20,114,22,"CodedError"],[123,47,114,32],[123,48,114,33],[123,80,114,65],[123,82,114,67],[123,163,114,148,"JSON"],[123,167,114,152],[123,168,114,153,"stringify"],[123,177,114,162],[123,184,114,169,"response"],[123,192,114,177],[123,193,114,178,"text"],[123,197,114,182],[123,198,114,183],[123,199,114,184],[123,200,114,185],[123,203,114,188],[123,204,114,189],[124,8,115,8],[124,9,115,9],[124,10,116,8],[124,16,116,14],[125,10,117,12],[125,16,117,18],[125,20,117,22,"CodedError"],[125,47,117,32],[125,48,117,33],[125,80,117,65],[125,82,117,67],[125,167,117,152,"JSON"],[125,171,117,156],[125,172,117,157,"stringify"],[125,181,117,166],[125,182,117,167,"response"],[125,190,117,175],[125,191,117,176],[125,194,117,179],[125,195,117,180],[126,8,118,8],[127,6,119,4],[128,4,120,0],[128,5,120,1],[129,4,120,1],[129,11,120,1,"_parseResponse"],[129,25,120,1],[129,26,120,1,"apply"],[129,31,120,1],[129,38,120,1,"arguments"],[129,47,120,1],[130,2,120,1],[131,2,121,0],[131,11,121,9,"getExpoPushToken"],[131,27,121,25,"getExpoPushToken"],[131,28,121,26,"data"],[131,32,121,30],[131,34,121,32],[132,4,122,4],[132,8,122,8],[132,9,122,9,"data"],[132,13,122,13],[132,17,123,8],[132,19,123,10],[132,26,123,17,"data"],[132,30,123,21],[132,35,123,26],[132,43,123,34],[132,44,123,35],[132,48,124,8],[132,49,124,9,"data"],[132,53,124,13],[132,54,124,14,"data"],[132,58,124,18],[132,62,125,8],[132,64,125,10],[132,71,125,17,"data"],[132,75,125,21],[132,76,125,22,"data"],[132,80,125,26],[132,85,125,31],[132,93,125,39],[132,94,125,40],[132,98,126,8],[132,99,126,9,"data"],[132,103,126,13],[132,104,126,14,"data"],[132,108,126,18],[132,109,126,19,"expoPushToken"],[132,122,126,32],[132,126,127,8],[132,128,127,10],[132,135,127,17,"data"],[132,139,127,21],[132,140,127,22,"data"],[132,144,127,26],[132,145,127,27,"expoPushToken"],[132,158,127,40],[132,163,127,45],[132,171,127,53],[132,172,127,54],[132,174,127,56],[133,6,128,8],[133,12,128,14],[133,16,128,18,"CodedError"],[133,43,128,28],[133,44,128,29],[133,76,128,61],[133,78,128,63],[133,171,128,156,"JSON"],[133,175,128,160],[133,176,128,161,"stringify"],[133,185,128,170],[133,186,128,171,"data"],[133,190,128,175],[133,192,128,177],[133,196,128,181],[133,198,128,183],[133,199,128,184],[133,200,128,185],[133,203,128,188],[133,204,128,189],[134,4,129,4],[135,4,130,4],[135,11,130,11,"data"],[135,15,130,15],[135,16,130,16,"data"],[135,20,130,20],[135,21,130,21,"expoPushToken"],[135,34,130,34],[136,2,131,0],[137,2,132,0],[138,2,132,0],[138,11,133,15,"getDeviceIdAsync"],[138,27,133,31,"getDeviceIdAsync"],[138,28,133,31],[139,4,133,31],[139,11,133,31,"_getDeviceIdAsync"],[139,28,133,31],[139,29,133,31,"apply"],[139,34,133,31],[139,41,133,31,"arguments"],[139,50,133,31],[140,2,133,31],[141,2,133,31],[141,11,133,31,"_getDeviceIdAsync"],[141,29,133,31],[142,4,133,31,"_getDeviceIdAsync"],[142,21,133,31],[142,28,133,31,"_asyncToGenerator2"],[142,46,133,31],[142,47,133,31,"default"],[142,54,133,31],[142,56,133,0],[142,69,133,34],[143,6,134,4],[143,10,134,8],[144,8,135,8],[144,12,135,12],[144,13,135,13,"ServerRegistrationModule"],[144,46,135,37],[144,47,135,38,"getInstallationIdAsync"],[144,69,135,60],[144,71,135,62],[145,10,136,12],[145,16,136,18],[145,20,136,22,"UnavailabilityError"],[145,56,136,41],[145,57,136,42],[145,87,136,72],[145,89,136,74],[145,113,136,98],[145,114,136,99],[146,8,137,8],[147,8,138,8],[147,21,138,21,"ServerRegistrationModule"],[147,54,138,45],[147,55,138,46,"getInstallationIdAsync"],[147,77,138,68],[147,78,138,69],[147,79,138,70],[148,6,139,4],[148,7,139,5],[148,8,140,4],[148,15,140,11,"e"],[148,16,140,12],[148,18,140,14],[149,8,141,8],[149,14,141,14],[149,18,141,18,"CodedError"],[149,45,141,28],[149,46,141,29],[149,67,141,50],[149,69,141,52],[149,131,141,114,"e"],[149,132,141,115],[149,135,141,118],[149,136,141,119],[150,6,142,4],[151,4,143,0],[151,5,143,1],[152,4,143,1],[152,11,143,1,"_getDeviceIdAsync"],[152,28,143,1],[152,29,143,1,"apply"],[152,34,143,1],[152,41,143,1,"arguments"],[152,50,143,1],[153,2,143,1],[154,2,144,0],[154,11,144,9,"getDeviceToken"],[154,25,144,23,"getDeviceToken"],[154,26,144,24,"devicePushToken"],[154,41,144,39],[154,43,144,41],[155,4,145,4],[155,8,145,8],[155,15,145,15,"devicePushToken"],[155,30,145,30],[155,31,145,31,"data"],[155,35,145,35],[155,40,145,40],[155,48,145,48],[155,50,145,50],[156,6,146,8],[156,13,146,15,"devicePushToken"],[156,28,146,30],[156,29,146,31,"data"],[156,33,146,35],[157,4,147,4],[158,4,148,4],[158,11,148,11,"JSON"],[158,15,148,15],[158,16,148,16,"stringify"],[158,25,148,25],[158,26,148,26,"devicePushToken"],[158,41,148,41],[158,42,148,42,"data"],[158,46,148,46],[158,47,148,47],[159,2,149,0],[160,2,150,0],[161,2,150,0],[161,11,151,15,"shouldUseDevelopmentNotificationService"],[161,50,151,54,"shouldUseDevelopmentNotificationService"],[161,51,151,54],[162,4,151,54],[162,11,151,54,"_shouldUseDevelopmentNotificationService"],[162,51,151,54],[162,52,151,54,"apply"],[162,57,151,54],[162,64,151,54,"arguments"],[162,73,151,54],[163,2,151,54],[163,4,165,0],[164,2,165,0],[164,11,165,0,"_shouldUseDevelopmentNotificationService"],[164,52,165,0],[165,4,165,0,"_shouldUseDevelopmentNotificationService"],[165,44,165,0],[165,51,165,0,"_asyncToGenerator2"],[165,69,165,0],[165,70,165,0,"default"],[165,77,165,0],[165,79,151,0],[165,92,151,57],[166,6,163,4],[166,13,163,11],[166,18,163,16],[167,4,164,0],[167,5,164,1],[168,4,164,1],[168,11,164,1,"_shouldUseDevelopmentNotificationService"],[168,51,164,1],[168,52,164,1,"apply"],[168,57,164,1],[168,64,164,1,"arguments"],[168,73,164,1],[169,2,164,1],[170,2,166,0],[170,11,166,9,"getTypeOfToken"],[170,25,166,23,"getTypeOfToken"],[170,26,166,24,"devicePushToken"],[170,41,166,39],[170,43,166,41],[171,4,167,4],[171,12,167,12,"devicePushToken"],[171,27,167,27],[171,28,167,28,"type"],[171,32,167,32],[172,6,168,8],[172,11,168,13],[172,16,168,18],[173,8,169,12],[173,15,169,19],[173,21,169,25],[174,6,170,8],[174,11,170,13],[174,20,170,22],[175,8,171,12],[175,15,171,19],[175,20,171,24],[176,6,172,8],[177,6,173,8],[178,8,174,12],[178,15,174,19,"devicePushToken"],[178,30,174,34],[178,31,174,35,"type"],[178,35,174,39],[179,4,175,4],[180,2,176,0],[181,0,176,1],[181,3]],"functionMap":{"names":["<global>","getExpoPushTokenAsync","fetch._catch$argument_0","parseResponse","getExpoPushToken","getDeviceIdAsync","getDeviceToken","shouldUseDevelopmentNotificationService","getTypeOfToken"],"mappings":"AAA;eC4C;aCgC;KDE;CD4B;AGC;CHY;AIC;CJU;AKE;CLU;AMC;CNK;AOE;CPa;AQE;CRU"}},"type":"js/module"}]}