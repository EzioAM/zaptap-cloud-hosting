{"dependencies":[{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":55,"index":55}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"./web","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":57},"end":{"line":3,"column":43,"index":100}}],"key":"8hbLzyIXFhqWXguD+C6jDKIcDJ4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ensureNativeModulesAreInstalled = ensureNativeModulesAreInstalled;\n  var _reactNative = require(_dependencyMap[0], \"react-native\");\n  var _web = require(_dependencyMap[1], \"./web\");\n  /**\n   * Ensures that the native modules are installed in the current runtime.\n   * Otherwise, it synchronously calls a native function that installs them.\n   */\n  function ensureNativeModulesAreInstalled() {\n    if (globalThis.expo) {\n      return;\n    }\n    try {\n      if (_reactNative.Platform.OS === 'web') {\n        // Requiring web folder sets up the `globalThis.expo` object.\n        (0, _web.registerWebGlobals)();\n      } else {\n        var _NativeModules$ExpoMo;\n        // TODO: ExpoModulesCore shouldn't be optional here,\n        // but to keep backwards compatibility let's just ignore it in SDK 50.\n        // In most cases the modules were already installed from the native side.\n        (_NativeModules$ExpoMo = _reactNative.NativeModules.ExpoModulesCore) == null || _NativeModules$ExpoMo.installModules();\n      }\n    } catch (error) {\n      console.error(`Unable to install Expo modules: ${error}`);\n    }\n  }\n});","lineCount":31,"map":[[6,2,1,0],[6,6,1,0,"_reactNative"],[6,18,1,0],[6,21,1,0,"require"],[6,28,1,0],[6,29,1,0,"_dependencyMap"],[6,43,1,0],[7,2,3,0],[7,6,3,0,"_web"],[7,10,3,0],[7,13,3,0,"require"],[7,20,3,0],[7,21,3,0,"_dependencyMap"],[7,35,3,0],[8,2,5,0],[9,0,6,0],[10,0,7,0],[11,0,8,0],[12,2,9,7],[12,11,9,16,"ensureNativeModulesAreInstalled"],[12,42,9,47,"ensureNativeModulesAreInstalled"],[12,43,9,47],[12,45,9,56],[13,4,10,2],[13,8,10,6,"globalThis"],[13,18,10,16],[13,19,10,17,"expo"],[13,23,10,21],[13,25,10,23],[14,6,11,4],[15,4,12,2],[16,4,13,2],[16,8,13,6],[17,6,14,4],[17,10,14,8,"Platform"],[17,31,14,16],[17,32,14,17,"OS"],[17,34,14,19],[17,39,14,24],[17,44,14,29],[17,46,14,31],[18,8,15,6],[19,8,16,6],[19,12,16,6,"registerWebGlobals"],[19,35,16,24],[19,37,16,25],[19,38,16,26],[20,6,17,4],[20,7,17,5],[20,13,17,11],[21,8,17,11],[21,12,17,11,"_NativeModules$ExpoMo"],[21,33,17,11],[22,8,18,6],[23,8,19,6],[24,8,20,6],[25,8,21,6],[25,9,21,6,"_NativeModules$ExpoMo"],[25,30,21,6],[25,33,21,6,"NativeModules"],[25,59,21,19],[25,60,21,20,"ExpoModulesCore"],[25,75,21,35],[25,88,21,6,"_NativeModules$ExpoMo"],[25,109,21,6],[25,110,21,37,"installModules"],[25,124,21,51],[25,125,21,52],[25,126,21,53],[26,6,22,4],[27,4,23,2],[27,5,23,3],[27,6,23,4],[27,13,23,11,"error"],[27,18,23,16],[27,20,23,18],[28,6,24,4,"console"],[28,13,24,11],[28,14,24,12,"error"],[28,19,24,17],[28,20,24,18],[28,55,24,53,"error"],[28,60,24,58],[28,62,24,60],[28,63,24,61],[29,4,25,2],[30,2,26,0],[31,0,26,1],[31,3]],"functionMap":{"names":["<global>","ensureNativeModulesAreInstalled"],"mappings":"AAA;OCQ;CDiB"}},"type":"js/module"}]}