{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":204},"end":{"line":10,"column":55,"index":259}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":260},"end":{"line":11,"column":38,"index":298}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"./internal/defaultConfiguration","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":299},"end":{"line":12,"column":68,"index":367}}],"key":"G1uCgDScaM3S5X00e27Zr8lG1Vk=","exportNames":["*"]}},{"name":"./internal/nativeInterface","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":368},"end":{"line":13,"column":57,"index":425}}],"key":"Sp4VfNT4MoXGzcKDwaXut8oRUXA=","exportNames":["*"]}},{"name":"./internal/state","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":426},"end":{"line":14,"column":37,"index":463}}],"key":"AJQfTgXn0K20r74TcE/30yPPOOA=","exportNames":["*"]}},{"name":"./internal/types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":464},"end":{"line":15,"column":42,"index":506}}],"key":"uIQB1mLKV8iOTHySJkPsqOCQMhM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    configure: true,\n    fetch: true,\n    refresh: true,\n    addEventListener: true,\n    useNetInfo: true,\n    useNetInfoInstance: true\n  };\n  exports.addEventListener = addEventListener;\n  exports.configure = configure;\n  exports.default = void 0;\n  exports.fetch = fetch;\n  exports.refresh = refresh;\n  exports.useNetInfo = useNetInfo;\n  exports.useNetInfoInstance = useNetInfoInstance;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _react = require(_dependencyMap[2], \"react\");\n  var _reactNative = require(_dependencyMap[3], \"react-native\");\n  var _defaultConfiguration = _interopRequireDefault(require(_dependencyMap[4], \"./internal/defaultConfiguration\"));\n  var _nativeInterface = _interopRequireDefault(require(_dependencyMap[5], \"./internal/nativeInterface\"));\n  var _state2 = _interopRequireDefault(require(_dependencyMap[6], \"./internal/state\"));\n  var Types = _interopRequireWildcard(require(_dependencyMap[7], \"./internal/types\"));\n  Object.keys(Types).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === Types[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function get() {\n        return Types[key];\n      }\n    });\n  });\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  /**\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   */\n\n  // Stores the currently used configuration\n  var _configuration = _defaultConfiguration.default;\n\n  // Stores the singleton reference to the state manager\n  var _state = null;\n  var createState = function createState() {\n    return new _state2.default(_configuration);\n  };\n\n  // Track ongoing requests\n  var isRequestInProgress = false;\n  var requestQueue = [];\n\n  /**\n   * Configures the library with the given configuration. Note that calling this will stop all\n   * previously added listeners from being called again. It is best to call this right when your\n   * application is started to avoid issues. The configuration sets up a global singleton instance.\n   *\n   * @param configuration The new configuration to set.\n   */\n  function configure(configuration) {\n    _configuration = Object.assign({}, _defaultConfiguration.default, configuration);\n    if (_state) {\n      _state.tearDown();\n      _state = createState();\n    }\n    if (_reactNative.Platform.OS === 'ios') {\n      _nativeInterface.default.configure(configuration);\n    }\n  }\n\n  /**\n   * Returns a `Promise` that resolves to a `NetInfoState` object.\n   * This function operates on the global singleton instance configured using `configure()`\n   *\n   * @param [requestedInterface] interface from which to obtain the information\n   *\n   * @returns A Promise which contains the current connection state.\n   */\n  function fetch(requestedInterface) {\n    if (!_state) {\n      _state = createState();\n    }\n    return _state.latest(requestedInterface);\n  }\n\n  /**\n   * Force-refreshes the internal state of the global singleton managed by this library.\n   *\n   * @returns A Promise which contains the updated connection state.\n   */\n  function refresh() {\n    if (!_state) {\n      _state = createState();\n    }\n\n    // If a request is already in progress, return a promise that will resolve when the current request finishes\n    if (isRequestInProgress) {\n      return new Promise(function (resolve) {\n        requestQueue.push(resolve);\n      });\n    }\n    isRequestInProgress = true;\n    return _state._fetchCurrentState().then(function (result) {\n      requestQueue.forEach(function (resolve) {\n        return resolve(result);\n      });\n      requestQueue = [];\n      return result;\n    }).finally(function () {\n      isRequestInProgress = false;\n    });\n  }\n\n  /**\n   * Subscribe to the global singleton's connection information. The callback is called with a parameter of type\n   * [`NetInfoState`](README.md#netinfostate) whenever the connection state changes. Your listener\n   * will be called with the latest information soon after you subscribe and then with any\n   * subsequent changes afterwards. You should not assume that the listener is called in the same\n   * way across devices or platforms.\n   *\n   * @param listener The listener which is called when the network state changes.\n   *\n   * @returns A function which can be called to unsubscribe.\n   */\n  function addEventListener(listener) {\n    if (!_state) {\n      _state = createState();\n    }\n    _state.add(listener);\n    return function () {\n      _state && _state.remove(listener);\n    };\n  }\n\n  /**\n   * A React Hook into this library's singleton which updates when the connection state changes.\n   *\n   * @param {Partial<Types.NetInfoConfiguration>} configuration - Configure the isolated network checker managed by this hook\n   *\n   * @returns The connection state.\n   */\n  function useNetInfo(configuration) {\n    if (configuration) {\n      configure(configuration);\n    }\n    var _useState = (0, _react.useState)({\n        type: Types.NetInfoStateType.unknown,\n        isConnected: null,\n        isInternetReachable: null,\n        details: null\n      }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      netInfo = _useState2[0],\n      setNetInfo = _useState2[1];\n    (0, _react.useEffect)(function () {\n      var unsubscribe = addEventListener(setNetInfo);\n      return function () {\n        return unsubscribe();\n      };\n    }, []);\n    return netInfo;\n  }\n\n  /**\n   * A React Hook which manages an isolated instance of the network info manager.\n   * This is not a hook into a singleton shared state. NetInfo.configure, NetInfo.addEventListener,\n   * NetInfo.fetch, NetInfo.refresh are performed on a global singleton and have no affect on this hook.\n   * @param {boolean} isPaused - Pause the internal network checks.\n   * @param {Partial<Types.NetInfoConfiguration>} configuration - Configure the isolated network checker managed by this hook\n   *\n   * @returns the netInfo state and a refresh function\n   */\n  function useNetInfoInstance() {\n    var isPaused = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var configuration = arguments.length > 1 ? arguments[1] : undefined;\n    var _useState3 = (0, _react.useState)(),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      networkInfoManager = _useState4[0],\n      setNetworkInfoManager = _useState4[1];\n    var _useState5 = (0, _react.useState)({\n        type: Types.NetInfoStateType.unknown,\n        isConnected: null,\n        isInternetReachable: null,\n        details: null\n      }),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      netInfo = _useState6[0],\n      setNetInfo = _useState6[1];\n    (0, _react.useEffect)(function () {\n      if (isPaused) {\n        return;\n      }\n      var config = Object.assign({}, _defaultConfiguration.default, configuration);\n      var state = new _state2.default(config);\n      setNetworkInfoManager(state);\n      state.add(setNetInfo);\n      return state.tearDown;\n    }, [isPaused, configuration]);\n    var refresh = (0, _react.useCallback)(function () {\n      if (networkInfoManager && !isRequestInProgress) {\n        isRequestInProgress = true;\n        networkInfoManager._fetchCurrentState().finally(function () {\n          isRequestInProgress = false;\n        });\n      }\n    }, [networkInfoManager]);\n    return {\n      netInfo: netInfo,\n      refresh: refresh\n    };\n  }\n  var _default = exports.default = {\n    configure: configure,\n    fetch: fetch,\n    refresh: refresh,\n    addEventListener: addEventListener,\n    useNetInfo: useNetInfo,\n    useNetInfoInstance: useNetInfoInstance\n  };\n});","lineCount":229,"map":[[22,2,10,0],[22,6,10,0,"_react"],[22,12,10,0],[22,15,10,0,"require"],[22,22,10,0],[22,23,10,0,"_dependencyMap"],[22,37,10,0],[23,2,11,0],[23,6,11,0,"_reactNative"],[23,18,11,0],[23,21,11,0,"require"],[23,28,11,0],[23,29,11,0,"_dependencyMap"],[23,43,11,0],[24,2,12,0],[24,6,12,0,"_defaultConfiguration"],[24,27,12,0],[24,30,12,0,"_interopRequireDefault"],[24,52,12,0],[24,53,12,0,"require"],[24,60,12,0],[24,61,12,0,"_dependencyMap"],[24,75,12,0],[25,2,13,0],[25,6,13,0,"_nativeInterface"],[25,22,13,0],[25,25,13,0,"_interopRequireDefault"],[25,47,13,0],[25,48,13,0,"require"],[25,55,13,0],[25,56,13,0,"_dependencyMap"],[25,70,13,0],[26,2,14,0],[26,6,14,0,"_state2"],[26,13,14,0],[26,16,14,0,"_interopRequireDefault"],[26,38,14,0],[26,39,14,0,"require"],[26,46,14,0],[26,47,14,0,"_dependencyMap"],[26,61,14,0],[27,2,15,0],[27,6,15,0,"Types"],[27,11,15,0],[27,14,15,0,"_interopRequireWildcard"],[27,37,15,0],[27,38,15,0,"require"],[27,45,15,0],[27,46,15,0,"_dependencyMap"],[27,60,15,0],[28,2,203,0,"Object"],[28,8,203,0],[28,9,203,0,"keys"],[28,13,203,0],[28,14,203,0,"Types"],[28,19,203,0],[28,21,203,0,"forEach"],[28,28,203,0],[28,39,203,0,"key"],[28,42,203,0],[29,4,203,0],[29,8,203,0,"key"],[29,11,203,0],[29,29,203,0,"key"],[29,32,203,0],[30,4,203,0],[30,8,203,0,"Object"],[30,14,203,0],[30,15,203,0,"prototype"],[30,24,203,0],[30,25,203,0,"hasOwnProperty"],[30,39,203,0],[30,40,203,0,"call"],[30,44,203,0],[30,45,203,0,"_exportNames"],[30,57,203,0],[30,59,203,0,"key"],[30,62,203,0],[31,4,203,0],[31,8,203,0,"key"],[31,11,203,0],[31,15,203,0,"exports"],[31,22,203,0],[31,26,203,0,"exports"],[31,33,203,0],[31,34,203,0,"key"],[31,37,203,0],[31,43,203,0,"Types"],[31,48,203,0],[31,49,203,0,"key"],[31,52,203,0],[32,4,203,0,"Object"],[32,10,203,0],[32,11,203,0,"defineProperty"],[32,25,203,0],[32,26,203,0,"exports"],[32,33,203,0],[32,35,203,0,"key"],[32,38,203,0],[33,6,203,0,"enumerable"],[33,16,203,0],[34,6,203,0,"get"],[34,9,203,0],[34,20,203,0,"get"],[34,24,203,0],[35,8,203,0],[35,15,203,0,"Types"],[35,20,203,0],[35,21,203,0,"key"],[35,24,203,0],[36,6,203,0],[37,4,203,0],[38,2,203,0],[39,2,203,33],[39,11,203,33,"_interopRequireWildcard"],[39,35,203,33,"e"],[39,36,203,33],[39,38,203,33,"t"],[39,39,203,33],[39,68,203,33,"WeakMap"],[39,75,203,33],[39,81,203,33,"r"],[39,82,203,33],[39,89,203,33,"WeakMap"],[39,96,203,33],[39,100,203,33,"n"],[39,101,203,33],[39,108,203,33,"WeakMap"],[39,115,203,33],[39,127,203,33,"_interopRequireWildcard"],[39,150,203,33],[39,162,203,33,"_interopRequireWildcard"],[39,186,203,33,"e"],[39,187,203,33],[39,189,203,33,"t"],[39,190,203,33],[39,199,203,33,"t"],[39,200,203,33],[39,204,203,33,"e"],[39,205,203,33],[39,209,203,33,"e"],[39,210,203,33],[39,211,203,33,"__esModule"],[39,221,203,33],[39,230,203,33,"e"],[39,231,203,33],[39,237,203,33,"o"],[39,238,203,33],[39,240,203,33,"i"],[39,241,203,33],[39,243,203,33,"f"],[39,244,203,33],[39,249,203,33,"__proto__"],[39,258,203,33],[39,266,203,33,"default"],[39,273,203,33],[39,275,203,33,"e"],[39,276,203,33],[39,293,203,33,"e"],[39,294,203,33],[39,317,203,33,"e"],[39,318,203,33],[39,343,203,33,"e"],[39,344,203,33],[39,353,203,33,"f"],[39,354,203,33],[39,360,203,33,"o"],[39,361,203,33],[39,364,203,33,"t"],[39,365,203,33],[39,368,203,33,"n"],[39,369,203,33],[39,372,203,33,"r"],[39,373,203,33],[39,381,203,33,"o"],[39,382,203,33],[39,383,203,33,"has"],[39,386,203,33],[39,387,203,33,"e"],[39,388,203,33],[39,398,203,33,"o"],[39,399,203,33],[39,400,203,33,"get"],[39,403,203,33],[39,404,203,33,"e"],[39,405,203,33],[39,408,203,33,"o"],[39,409,203,33],[39,410,203,33,"set"],[39,413,203,33],[39,414,203,33,"e"],[39,415,203,33],[39,417,203,33,"f"],[39,418,203,33],[39,432,203,33,"_t"],[39,434,203,33],[39,438,203,33,"e"],[39,439,203,33],[39,455,203,33,"_t"],[39,457,203,33],[39,464,203,33,"hasOwnProperty"],[39,478,203,33],[39,479,203,33,"call"],[39,483,203,33],[39,484,203,33,"e"],[39,485,203,33],[39,487,203,33,"_t"],[39,489,203,33],[39,496,203,33,"i"],[39,497,203,33],[39,501,203,33,"o"],[39,502,203,33],[39,505,203,33,"Object"],[39,511,203,33],[39,512,203,33,"defineProperty"],[39,526,203,33],[39,531,203,33,"Object"],[39,537,203,33],[39,538,203,33,"getOwnPropertyDescriptor"],[39,562,203,33],[39,563,203,33,"e"],[39,564,203,33],[39,566,203,33,"_t"],[39,568,203,33],[39,575,203,33,"i"],[39,576,203,33],[39,577,203,33,"get"],[39,580,203,33],[39,584,203,33,"i"],[39,585,203,33],[39,586,203,33,"set"],[39,589,203,33],[39,593,203,33,"o"],[39,594,203,33],[39,595,203,33,"f"],[39,596,203,33],[39,598,203,33,"_t"],[39,600,203,33],[39,602,203,33,"i"],[39,603,203,33],[39,607,203,33,"f"],[39,608,203,33],[39,609,203,33,"_t"],[39,611,203,33],[39,615,203,33,"e"],[39,616,203,33],[39,617,203,33,"_t"],[39,619,203,33],[39,630,203,33,"f"],[39,631,203,33],[39,636,203,33,"e"],[39,637,203,33],[39,639,203,33,"t"],[39,640,203,33],[40,2,1,0],[41,0,2,0],[42,0,3,0],[43,0,4,0],[44,0,5,0],[45,0,6,0],[46,0,7,0],[47,0,8,0],[49,2,17,0],[50,2,18,0],[50,6,18,4,"_configuration"],[50,20,18,18],[50,23,18,21,"DEFAULT_CONFIGURATION"],[50,52,18,42],[52,2,20,0],[53,2,21,0],[53,6,21,4,"_state"],[53,12,21,24],[53,15,21,27],[53,19,21,31],[54,2,22,0],[54,6,22,6,"createState"],[54,17,22,17],[54,20,22,20],[54,29,22,6,"createState"],[54,40,22,17,"createState"],[54,41,22,17],[54,43,22,33],[55,4,23,2],[55,11,23,9],[55,15,23,13,"State"],[55,30,23,18],[55,31,23,19,"_configuration"],[55,45,23,33],[55,46,23,34],[56,2,24,0],[56,3,24,1],[58,2,26,0],[59,2,27,0],[59,6,27,4,"isRequestInProgress"],[59,25,27,23],[59,28,27,26],[59,33,27,31],[60,2,28,0],[60,6,28,4,"requestQueue"],[60,18,28,57],[60,21,28,60],[60,23,28,62],[62,2,30,0],[63,0,31,0],[64,0,32,0],[65,0,33,0],[66,0,34,0],[67,0,35,0],[68,0,36,0],[69,2,37,7],[69,11,37,16,"configure"],[69,20,37,25,"configure"],[69,21,38,2,"configuration"],[69,34,38,52],[69,36,39,8],[70,4,40,2,"_configuration"],[70,18,40,16],[70,21,40,16,"Object"],[70,27,40,16],[70,28,40,16,"assign"],[70,34,40,16],[70,39,41,7,"DEFAULT_CONFIGURATION"],[70,68,41,28],[70,70,42,7,"configuration"],[70,83,42,20],[70,84,43,3],[71,4,45,2],[71,8,45,6,"_state"],[71,14,45,12],[71,16,45,14],[72,6,46,4,"_state"],[72,12,46,10],[72,13,46,11,"tearDown"],[72,21,46,19],[72,22,46,20],[72,23,46,21],[73,6,47,4,"_state"],[73,12,47,10],[73,15,47,13,"createState"],[73,26,47,24],[73,27,47,25],[73,28,47,26],[74,4,48,2],[75,4,50,2],[75,8,50,6,"Platform"],[75,29,50,14],[75,30,50,15,"OS"],[75,32,50,17],[75,37,50,22],[75,42,50,27],[75,44,50,29],[76,6,51,4,"NativeInterface"],[76,30,51,19],[76,31,51,20,"configure"],[76,40,51,29],[76,41,51,30,"configuration"],[76,54,51,43],[76,55,51,44],[77,4,52,2],[78,2,53,0],[80,2,55,0],[81,0,56,0],[82,0,57,0],[83,0,58,0],[84,0,59,0],[85,0,60,0],[86,0,61,0],[87,0,62,0],[88,2,63,7],[88,11,63,16,"fetch"],[88,16,63,21,"fetch"],[88,17,64,2,"requestedInterface"],[88,35,64,29],[88,37,65,31],[89,4,66,2],[89,8,66,6],[89,9,66,7,"_state"],[89,15,66,13],[89,17,66,15],[90,6,67,4,"_state"],[90,12,67,10],[90,15,67,13,"createState"],[90,26,67,24],[90,27,67,25],[90,28,67,26],[91,4,68,2],[92,4,69,2],[92,11,69,9,"_state"],[92,17,69,15],[92,18,69,16,"latest"],[92,24,69,22],[92,25,69,23,"requestedInterface"],[92,43,69,41],[92,44,69,42],[93,2,70,0],[95,2,72,0],[96,0,73,0],[97,0,74,0],[98,0,75,0],[99,0,76,0],[100,2,77,7],[100,11,77,16,"refresh"],[100,18,77,23,"refresh"],[100,19,77,23],[100,21,77,55],[101,4,78,2],[101,8,78,6],[101,9,78,7,"_state"],[101,15,78,13],[101,17,78,15],[102,6,79,4,"_state"],[102,12,79,10],[102,15,79,13,"createState"],[102,26,79,24],[102,27,79,25],[102,28,79,26],[103,4,80,2],[105,4,82,1],[106,4,83,2],[106,8,83,6,"isRequestInProgress"],[106,27,83,25],[106,29,83,27],[107,6,84,4],[107,13,84,11],[107,17,84,15,"Promise"],[107,24,84,22],[107,25,84,23],[107,35,84,24,"resolve"],[107,42,84,31],[107,44,84,36],[108,8,85,6,"requestQueue"],[108,20,85,18],[108,21,85,19,"push"],[108,25,85,23],[108,26,85,24,"resolve"],[108,33,85,31],[108,34,85,32],[109,6,86,4],[109,7,86,5],[109,8,86,6],[110,4,87,2],[111,4,89,2,"isRequestInProgress"],[111,23,89,21],[111,26,89,24],[111,30,89,28],[112,4,91,2],[112,11,91,9,"_state"],[112,17,91,15],[112,18,91,16,"_fetchCurrentState"],[112,36,91,34],[112,37,91,35],[112,38,91,36],[112,39,91,37,"then"],[112,43,91,41],[112,44,91,42],[112,54,91,43,"result"],[112,60,91,49],[112,62,91,54],[113,6,92,4,"requestQueue"],[113,18,92,16],[113,19,92,17,"forEach"],[113,26,92,24],[113,27,92,25],[113,37,92,26,"resolve"],[113,44,92,33],[114,8,92,33],[114,15,92,38,"resolve"],[114,22,92,45],[114,23,92,46,"result"],[114,29,92,52],[114,30,92,53],[115,6,92,53],[115,8,92,54],[116,6,93,4,"requestQueue"],[116,18,93,16],[116,21,93,19],[116,23,93,21],[117,6,94,4],[117,13,94,11,"result"],[117,19,94,17],[118,4,95,2],[118,5,95,3],[118,6,95,4],[118,7,95,5,"finally"],[118,14,95,12],[118,15,95,13],[118,27,95,19],[119,6,96,4,"isRequestInProgress"],[119,25,96,23],[119,28,96,26],[119,33,96,31],[120,4,97,2],[120,5,97,3],[120,6,97,4],[121,2,98,0],[123,2,100,0],[124,0,101,0],[125,0,102,0],[126,0,103,0],[127,0,104,0],[128,0,105,0],[129,0,106,0],[130,0,107,0],[131,0,108,0],[132,0,109,0],[133,0,110,0],[134,2,111,7],[134,11,111,16,"addEventListener"],[134,27,111,32,"addEventListener"],[134,28,112,2,"listener"],[134,36,112,38],[134,38,113,29],[135,4,114,2],[135,8,114,6],[135,9,114,7,"_state"],[135,15,114,13],[135,17,114,15],[136,6,115,4,"_state"],[136,12,115,10],[136,15,115,13,"createState"],[136,26,115,24],[136,27,115,25],[136,28,115,26],[137,4,116,2],[138,4,118,2,"_state"],[138,10,118,8],[138,11,118,9,"add"],[138,14,118,12],[138,15,118,13,"listener"],[138,23,118,21],[138,24,118,22],[139,4,119,2],[139,11,119,9],[139,23,119,21],[140,6,120,4,"_state"],[140,12,120,10],[140,16,120,14,"_state"],[140,22,120,20],[140,23,120,21,"remove"],[140,29,120,27],[140,30,120,28,"listener"],[140,38,120,36],[140,39,120,37],[141,4,121,2],[141,5,121,3],[142,2,122,0],[144,2,124,0],[145,0,125,0],[146,0,126,0],[147,0,127,0],[148,0,128,0],[149,0,129,0],[150,0,130,0],[151,2,131,7],[151,11,131,16,"useNetInfo"],[151,21,131,26,"useNetInfo"],[151,22,132,2,"configuration"],[151,35,132,53],[151,37,133,22],[152,4,134,2],[152,8,134,6,"configuration"],[152,21,134,19],[152,23,134,21],[153,6,135,4,"configure"],[153,15,135,13],[153,16,135,14,"configuration"],[153,29,135,27],[153,30,135,28],[154,4,136,2],[155,4,138,2],[155,8,138,2,"_useState"],[155,17,138,2],[155,20,138,32],[155,24,138,32,"useState"],[155,39,138,40],[155,41,138,61],[156,8,139,4,"type"],[156,12,139,8],[156,14,139,10,"Types"],[156,19,139,15],[156,20,139,16,"NetInfoStateType"],[156,36,139,32],[156,37,139,33,"unknown"],[156,44,139,40],[157,8,140,4,"isConnected"],[157,19,140,15],[157,21,140,17],[157,25,140,21],[158,8,141,4,"isInternetReachable"],[158,27,141,23],[158,29,141,25],[158,33,141,29],[159,8,142,4,"details"],[159,15,142,11],[159,17,142,13],[160,6,143,2],[160,7,143,3],[160,8,143,4],[161,6,143,4,"_useState2"],[161,16,143,4],[161,23,143,4,"_slicedToArray2"],[161,38,143,4],[161,39,143,4,"default"],[161,46,143,4],[161,48,143,4,"_useState"],[161,57,143,4],[162,6,138,9,"netInfo"],[162,13,138,16],[162,16,138,16,"_useState2"],[162,26,138,16],[163,6,138,18,"setNetInfo"],[163,16,138,28],[163,19,138,28,"_useState2"],[163,29,138,28],[164,4,145,2],[164,8,145,2,"useEffect"],[164,24,145,11],[164,26,145,12],[164,38,145,32],[165,6,146,4],[165,10,146,10,"unsubscribe"],[165,21,146,21],[165,24,146,24,"addEventListener"],[165,40,146,40],[165,41,146,41,"setNetInfo"],[165,51,146,51],[165,52,146,52],[166,6,147,4],[166,13,147,11],[167,8,147,11],[167,15,147,17,"unsubscribe"],[167,26,147,28],[167,27,147,29],[167,28,147,30],[168,6,147,30],[169,4,148,2],[169,5,148,3],[169,7,148,5],[169,9,148,7],[169,10,148,8],[170,4,150,2],[170,11,150,9,"netInfo"],[170,18,150,16],[171,2,151,0],[173,2,153,0],[174,0,154,0],[175,0,155,0],[176,0,156,0],[177,0,157,0],[178,0,158,0],[179,0,159,0],[180,0,160,0],[181,0,161,0],[182,2,162,7],[182,11,162,16,"useNetInfoInstance"],[182,29,162,34,"useNetInfoInstance"],[182,30,162,34],[182,32,165,2],[183,4,165,2],[183,8,163,2,"isPaused"],[183,16,163,10],[183,19,163,10,"arguments"],[183,28,163,10],[183,29,163,10,"length"],[183,35,163,10],[183,43,163,10,"arguments"],[183,52,163,10],[183,60,163,10,"undefined"],[183,69,163,10],[183,72,163,10,"arguments"],[183,81,163,10],[183,87,163,13],[183,92,163,18],[184,4,163,18],[184,8,164,2,"configuration"],[184,21,164,53],[184,24,164,53,"arguments"],[184,33,164,53],[184,34,164,53,"length"],[184,40,164,53],[184,47,164,53,"arguments"],[184,56,164,53],[184,62,164,53,"undefined"],[184,71,164,53],[185,4,166,2],[185,8,166,2,"_useState3"],[185,18,166,2],[185,21,166,54],[185,25,166,54,"useState"],[185,40,166,62],[185,42,166,70],[185,43,166,71],[186,6,166,71,"_useState4"],[186,16,166,71],[186,23,166,71,"_slicedToArray2"],[186,38,166,71],[186,39,166,71,"default"],[186,46,166,71],[186,48,166,71,"_useState3"],[186,58,166,71],[187,6,166,9,"networkInfoManager"],[187,24,166,27],[187,27,166,27,"_useState4"],[187,37,166,27],[188,6,166,29,"setNetworkInfoManager"],[188,27,166,50],[188,30,166,50,"_useState4"],[188,40,166,50],[189,4,167,2],[189,8,167,2,"_useState5"],[189,18,167,2],[189,21,167,32],[189,25,167,32,"useState"],[189,40,167,40],[189,42,167,61],[190,8,168,4,"type"],[190,12,168,8],[190,14,168,10,"Types"],[190,19,168,15],[190,20,168,16,"NetInfoStateType"],[190,36,168,32],[190,37,168,33,"unknown"],[190,44,168,40],[191,8,169,4,"isConnected"],[191,19,169,15],[191,21,169,17],[191,25,169,21],[192,8,170,4,"isInternetReachable"],[192,27,170,23],[192,29,170,25],[192,33,170,29],[193,8,171,4,"details"],[193,15,171,11],[193,17,171,13],[194,6,172,2],[194,7,172,3],[194,8,172,4],[195,6,172,4,"_useState6"],[195,16,172,4],[195,23,172,4,"_slicedToArray2"],[195,38,172,4],[195,39,172,4,"default"],[195,46,172,4],[195,48,172,4,"_useState5"],[195,58,172,4],[196,6,167,9,"netInfo"],[196,13,167,16],[196,16,167,16,"_useState6"],[196,26,167,16],[197,6,167,18,"setNetInfo"],[197,16,167,28],[197,19,167,28,"_useState6"],[197,29,167,28],[198,4,174,2],[198,8,174,2,"useEffect"],[198,24,174,11],[198,26,174,12],[198,38,174,18],[199,6,175,4],[199,10,175,8,"isPaused"],[199,18,175,16],[199,20,175,18],[200,8,176,6],[201,6,177,4],[202,6,178,4],[202,10,178,10,"config"],[202,16,178,16],[202,19,178,16,"Object"],[202,25,178,16],[202,26,178,16,"assign"],[202,32,178,16],[202,37,179,9,"DEFAULT_CONFIGURATION"],[202,66,179,30],[202,68,180,9,"configuration"],[202,81,180,22],[202,82,181,5],[203,6,182,4],[203,10,182,10,"state"],[203,15,182,15],[203,18,182,18],[203,22,182,22,"State"],[203,37,182,27],[203,38,182,28,"config"],[203,44,182,34],[203,45,182,35],[204,6,183,4,"setNetworkInfoManager"],[204,27,183,25],[204,28,183,26,"state"],[204,33,183,31],[204,34,183,32],[205,6,184,4,"state"],[205,11,184,9],[205,12,184,10,"add"],[205,15,184,13],[205,16,184,14,"setNetInfo"],[205,26,184,24],[205,27,184,25],[206,6,185,4],[206,13,185,11,"state"],[206,18,185,16],[206,19,185,17,"tearDown"],[206,27,185,25],[207,4,186,2],[207,5,186,3],[207,7,186,5],[207,8,186,6,"isPaused"],[207,16,186,14],[207,18,186,16,"configuration"],[207,31,186,29],[207,32,186,30],[207,33,186,31],[208,4,188,2],[208,8,188,8,"refresh"],[208,15,188,15],[208,18,188,18],[208,22,188,18,"useCallback"],[208,40,188,29],[208,42,188,30],[208,54,188,36],[209,6,189,4],[209,10,189,8,"networkInfoManager"],[209,28,189,26],[209,32,189,30],[209,33,189,31,"isRequestInProgress"],[209,52,189,50],[209,54,189,52],[210,8,190,6,"isRequestInProgress"],[210,27,190,25],[210,30,190,28],[210,34,190,32],[211,8,191,6,"networkInfoManager"],[211,26,191,24],[211,27,191,25,"_fetchCurrentState"],[211,45,191,43],[211,46,191,44],[211,47,191,45],[211,48,191,46,"finally"],[211,55,191,53],[211,56,191,54],[211,68,191,60],[212,10,192,8,"isRequestInProgress"],[212,29,192,27],[212,32,192,30],[212,37,192,35],[213,8,193,6],[213,9,193,7],[213,10,193,8],[214,6,194,4],[215,4,195,2],[215,5,195,3],[215,7,195,5],[215,8,195,6,"networkInfoManager"],[215,26,195,24],[215,27,195,25],[215,28,195,26],[216,4,197,2],[216,11,197,9],[217,6,198,4,"netInfo"],[217,13,198,11],[217,15,198,4,"netInfo"],[217,22,198,11],[218,6,199,4,"refresh"],[218,13,199,11],[218,15,199,4,"refresh"],[219,4,200,2],[219,5,200,3],[220,2,201,0],[221,2,201,1],[221,6,201,1,"_default"],[221,14,201,1],[221,17,201,1,"exports"],[221,24,201,1],[221,25,201,1,"default"],[221,32,201,1],[221,35,205,15],[222,4,206,2,"configure"],[222,13,206,11],[222,15,206,2,"configure"],[222,24,206,11],[223,4,207,2,"fetch"],[223,9,207,7],[223,11,207,2,"fetch"],[223,16,207,7],[224,4,208,2,"refresh"],[224,11,208,9],[224,13,208,2,"refresh"],[224,20,208,9],[225,4,209,2,"addEventListener"],[225,20,209,18],[225,22,209,2,"addEventListener"],[225,38,209,18],[226,4,210,2,"useNetInfo"],[226,14,210,12],[226,16,210,2,"useNetInfo"],[226,26,210,12],[227,4,211,2,"useNetInfoInstance"],[227,22,211,20],[227,24,211,2,"useNetInfoInstance"],[228,2,212,0],[228,3,212,1],[229,0,212,1],[229,3]],"functionMap":{"names":["<global>","createState","configure","fetch","refresh","Promise$argument_0","_state._fetchCurrentState.then$argument_0","requestQueue.forEach$argument_0","_state._fetchCurrentState.then._finally$argument_0","addEventListener","<anonymous>","useNetInfo","useEffect$argument_0","useNetInfoInstance","networkInfoManager._fetchCurrentState._finally$argument_0"],"mappings":"AAA;oBCqB;CDE;OEa;CFgB;OGU;CHO;OIO;uBCO;KDE;0CEK;yBCC,4BD;GFG,UI;GJE;CJC;OSa;SCQ;GDE;CTC;OWS;YCc;WFE,mBE;GDC;CXG;OaW;YDY;GCY;8BTE;sDUG;OVE;GSE;CbM"}},"type":"js/module"}]}