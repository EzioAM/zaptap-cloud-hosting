{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"]}},{"name":"boolbase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":32,"index":32}}],"key":"0NOX8eQTjRnr/BoMAee+Ac81wCc=","exportNames":["*"]}},{"name":"../sort.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":33},"end":{"line":2,"column":41,"index":74}}],"key":"wRrMbOisgA91+MMOzbna2NI6Dz0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PLACEHOLDER_ELEMENT = void 0;\n  exports.ensureIsTag = ensureIsTag;\n  exports.getNextSiblings = getNextSiblings;\n  exports.subselects = void 0;\n  var _toConsumableArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _boolbase = _interopRequireDefault(require(_dependencyMap[2], \"boolbase\"));\n  var _sort = require(_dependencyMap[3], \"../sort.js\");\n  /** Used as a placeholder for :has. Will be replaced with the actual element. */\n  var PLACEHOLDER_ELEMENT = exports.PLACEHOLDER_ELEMENT = {};\n  function ensureIsTag(next, adapter) {\n    if (next === _boolbase.default.falseFunc) return _boolbase.default.falseFunc;\n    return function (elem) {\n      return adapter.isTag(elem) && next(elem);\n    };\n  }\n  function getNextSiblings(elem, adapter) {\n    var siblings = adapter.getSiblings(elem);\n    if (siblings.length <= 1) return [];\n    var elemIndex = siblings.indexOf(elem);\n    if (elemIndex < 0 || elemIndex === siblings.length - 1) return [];\n    return siblings.slice(elemIndex + 1).filter(adapter.isTag);\n  }\n  function copyOptions(options) {\n    // Not copied: context, rootFunc\n    return {\n      xmlMode: !!options.xmlMode,\n      lowerCaseAttributeNames: !!options.lowerCaseAttributeNames,\n      lowerCaseTags: !!options.lowerCaseTags,\n      quirksMode: !!options.quirksMode,\n      cacheResults: !!options.cacheResults,\n      pseudos: options.pseudos,\n      adapter: options.adapter,\n      equals: options.equals\n    };\n  }\n  var is = function is(next, token, options, context, compileToken) {\n    var func = compileToken(token, copyOptions(options), context);\n    return func === _boolbase.default.trueFunc ? next : func === _boolbase.default.falseFunc ? _boolbase.default.falseFunc : function (elem) {\n      return func(elem) && next(elem);\n    };\n  };\n  /*\n   * :not, :has, :is, :matches and :where have to compile selectors\n   * doing this in src/pseudos.ts would lead to circular dependencies,\n   * so we add them here\n   */\n  var subselects = exports.subselects = {\n    is: is,\n    /**\n     * `:matches` and `:where` are aliases for `:is`.\n     */\n    matches: is,\n    where: is,\n    not: function not(next, token, options, context, compileToken) {\n      var func = compileToken(token, copyOptions(options), context);\n      return func === _boolbase.default.falseFunc ? next : func === _boolbase.default.trueFunc ? _boolbase.default.falseFunc : function (elem) {\n        return !func(elem) && next(elem);\n      };\n    },\n    has: function has(next, subselect, options, _context, compileToken) {\n      var adapter = options.adapter;\n      var opts = copyOptions(options);\n      opts.relativeSelector = true;\n      var context = subselect.some(function (s) {\n        return s.some(_sort.isTraversal);\n      }) ?\n      // Used as a placeholder. Will be replaced with the actual element.\n      [PLACEHOLDER_ELEMENT] : undefined;\n      var compiled = compileToken(subselect, opts, context);\n      if (compiled === _boolbase.default.falseFunc) return _boolbase.default.falseFunc;\n      var hasElement = ensureIsTag(compiled, adapter);\n      // If `compiled` is `trueFunc`, we can skip this.\n      if (context && compiled !== _boolbase.default.trueFunc) {\n        /*\n         * `shouldTestNextSiblings` will only be true if the query starts with\n         * a traversal (sibling or adjacent). That means we will always have a context.\n         */\n        var _compiled$shouldTestN = compiled.shouldTestNextSiblings,\n          shouldTestNextSiblings = _compiled$shouldTestN === void 0 ? false : _compiled$shouldTestN;\n        return function (elem) {\n          if (!next(elem)) return false;\n          context[0] = elem;\n          var childs = adapter.getChildren(elem);\n          var nextElements = shouldTestNextSiblings ? [].concat((0, _toConsumableArray2.default)(childs), (0, _toConsumableArray2.default)(getNextSiblings(elem, adapter))) : childs;\n          return adapter.existsOne(hasElement, nextElements);\n        };\n      }\n      return function (elem) {\n        return next(elem) && adapter.existsOne(hasElement, adapter.getChildren(elem));\n      };\n    }\n  };\n});","lineCount":98,"map":[[11,2,1,0],[11,6,1,0,"_boolbase"],[11,15,1,0],[11,18,1,0,"_interopRequireDefault"],[11,40,1,0],[11,41,1,0,"require"],[11,48,1,0],[11,49,1,0,"_dependencyMap"],[11,63,1,0],[12,2,2,0],[12,6,2,0,"_sort"],[12,11,2,0],[12,14,2,0,"require"],[12,21,2,0],[12,22,2,0,"_dependencyMap"],[12,36,2,0],[13,2,3,0],[14,2,4,7],[14,6,4,13,"PLACEHOLDER_ELEMENT"],[14,25,4,32],[14,28,4,32,"exports"],[14,35,4,32],[14,36,4,32,"PLACEHOLDER_ELEMENT"],[14,55,4,32],[14,58,4,35],[14,59,4,36],[14,60,4,37],[15,2,5,7],[15,11,5,16,"ensureIsTag"],[15,22,5,27,"ensureIsTag"],[15,23,5,28,"next"],[15,27,5,32],[15,29,5,34,"adapter"],[15,36,5,41],[15,38,5,43],[16,4,6,4],[16,8,6,8,"next"],[16,12,6,12],[16,17,6,17,"boolbase"],[16,34,6,25],[16,35,6,26,"falseFunc"],[16,44,6,35],[16,46,7,8],[16,53,7,15,"boolbase"],[16,70,7,23],[16,71,7,24,"falseFunc"],[16,80,7,33],[17,4,8,4],[17,11,8,11],[17,21,8,12,"elem"],[17,25,8,16],[18,6,8,16],[18,13,8,21,"adapter"],[18,20,8,28],[18,21,8,29,"isTag"],[18,26,8,34],[18,27,8,35,"elem"],[18,31,8,39],[18,32,8,40],[18,36,8,44,"next"],[18,40,8,48],[18,41,8,49,"elem"],[18,45,8,53],[18,46,8,54],[19,4,8,54],[20,2,9,0],[21,2,10,7],[21,11,10,16,"getNextSiblings"],[21,26,10,31,"getNextSiblings"],[21,27,10,32,"elem"],[21,31,10,36],[21,33,10,38,"adapter"],[21,40,10,45],[21,42,10,47],[22,4,11,4],[22,8,11,10,"siblings"],[22,16,11,18],[22,19,11,21,"adapter"],[22,26,11,28],[22,27,11,29,"getSiblings"],[22,38,11,40],[22,39,11,41,"elem"],[22,43,11,45],[22,44,11,46],[23,4,12,4],[23,8,12,8,"siblings"],[23,16,12,16],[23,17,12,17,"length"],[23,23,12,23],[23,27,12,27],[23,28,12,28],[23,30,13,8],[23,37,13,15],[23,39,13,17],[24,4,14,4],[24,8,14,10,"elemIndex"],[24,17,14,19],[24,20,14,22,"siblings"],[24,28,14,30],[24,29,14,31,"indexOf"],[24,36,14,38],[24,37,14,39,"elem"],[24,41,14,43],[24,42,14,44],[25,4,15,4],[25,8,15,8,"elemIndex"],[25,17,15,17],[25,20,15,20],[25,21,15,21],[25,25,15,25,"elemIndex"],[25,34,15,34],[25,39,15,39,"siblings"],[25,47,15,47],[25,48,15,48,"length"],[25,54,15,54],[25,57,15,57],[25,58,15,58],[25,60,16,8],[25,67,16,15],[25,69,16,17],[26,4,17,4],[26,11,17,11,"siblings"],[26,19,17,19],[26,20,17,20,"slice"],[26,25,17,25],[26,26,17,26,"elemIndex"],[26,35,17,35],[26,38,17,38],[26,39,17,39],[26,40,17,40],[26,41,17,41,"filter"],[26,47,17,47],[26,48,17,48,"adapter"],[26,55,17,55],[26,56,17,56,"isTag"],[26,61,17,61],[26,62,17,62],[27,2,18,0],[28,2,19,0],[28,11,19,9,"copyOptions"],[28,22,19,20,"copyOptions"],[28,23,19,21,"options"],[28,30,19,28],[28,32,19,30],[29,4,20,4],[30,4,21,4],[30,11,21,11],[31,6,22,8,"xmlMode"],[31,13,22,15],[31,15,22,17],[31,16,22,18],[31,17,22,19,"options"],[31,24,22,26],[31,25,22,27,"xmlMode"],[31,32,22,34],[32,6,23,8,"lowerCaseAttributeNames"],[32,29,23,31],[32,31,23,33],[32,32,23,34],[32,33,23,35,"options"],[32,40,23,42],[32,41,23,43,"lowerCaseAttributeNames"],[32,64,23,66],[33,6,24,8,"lowerCaseTags"],[33,19,24,21],[33,21,24,23],[33,22,24,24],[33,23,24,25,"options"],[33,30,24,32],[33,31,24,33,"lowerCaseTags"],[33,44,24,46],[34,6,25,8,"quirksMode"],[34,16,25,18],[34,18,25,20],[34,19,25,21],[34,20,25,22,"options"],[34,27,25,29],[34,28,25,30,"quirksMode"],[34,38,25,40],[35,6,26,8,"cacheResults"],[35,18,26,20],[35,20,26,22],[35,21,26,23],[35,22,26,24,"options"],[35,29,26,31],[35,30,26,32,"cacheResults"],[35,42,26,44],[36,6,27,8,"pseudos"],[36,13,27,15],[36,15,27,17,"options"],[36,22,27,24],[36,23,27,25,"pseudos"],[36,30,27,32],[37,6,28,8,"adapter"],[37,13,28,15],[37,15,28,17,"options"],[37,22,28,24],[37,23,28,25,"adapter"],[37,30,28,32],[38,6,29,8,"equals"],[38,12,29,14],[38,14,29,16,"options"],[38,21,29,23],[38,22,29,24,"equals"],[39,4,30,4],[39,5,30,5],[40,2,31,0],[41,2,32,0],[41,6,32,6,"is"],[41,8,32,8],[41,11,32,11],[41,20,32,6,"is"],[41,22,32,8,"is"],[41,23,32,12,"next"],[41,27,32,16],[41,29,32,18,"token"],[41,34,32,23],[41,36,32,25,"options"],[41,43,32,32],[41,45,32,34,"context"],[41,52,32,41],[41,54,32,43,"compileToken"],[41,66,32,55],[41,68,32,60],[42,4,33,4],[42,8,33,10,"func"],[42,12,33,14],[42,15,33,17,"compileToken"],[42,27,33,29],[42,28,33,30,"token"],[42,33,33,35],[42,35,33,37,"copyOptions"],[42,46,33,48],[42,47,33,49,"options"],[42,54,33,56],[42,55,33,57],[42,57,33,59,"context"],[42,64,33,66],[42,65,33,67],[43,4,34,4],[43,11,34,11,"func"],[43,15,34,15],[43,20,34,20,"boolbase"],[43,37,34,28],[43,38,34,29,"trueFunc"],[43,46,34,37],[43,49,35,10,"next"],[43,53,35,14],[43,56,36,10,"func"],[43,60,36,14],[43,65,36,19,"boolbase"],[43,82,36,27],[43,83,36,28,"falseFunc"],[43,92,36,37],[43,95,37,14,"boolbase"],[43,112,37,22],[43,113,37,23,"falseFunc"],[43,122,37,32],[43,125,38,14],[43,135,38,15,"elem"],[43,139,38,19],[44,6,38,19],[44,13,38,24,"func"],[44,17,38,28],[44,18,38,29,"elem"],[44,22,38,33],[44,23,38,34],[44,27,38,38,"next"],[44,31,38,42],[44,32,38,43,"elem"],[44,36,38,47],[44,37,38,48],[45,4,38,48],[46,2,39,0],[46,3,39,1],[47,2,40,0],[48,0,41,0],[49,0,42,0],[50,0,43,0],[51,0,44,0],[52,2,45,7],[52,6,45,13,"subselects"],[52,16,45,23],[52,19,45,23,"exports"],[52,26,45,23],[52,27,45,23,"subselects"],[52,37,45,23],[52,40,45,26],[53,4,46,4,"is"],[53,6,46,6],[53,8,46,4,"is"],[53,10,46,6],[54,4,47,4],[55,0,48,0],[56,0,49,0],[57,4,50,4,"matches"],[57,11,50,11],[57,13,50,13,"is"],[57,15,50,15],[58,4,51,4,"where"],[58,9,51,9],[58,11,51,11,"is"],[58,13,51,13],[59,4,52,4,"not"],[59,7,52,7],[59,18,52,4,"not"],[59,21,52,7,"not"],[59,22,52,8,"next"],[59,26,52,12],[59,28,52,14,"token"],[59,33,52,19],[59,35,52,21,"options"],[59,42,52,28],[59,44,52,30,"context"],[59,51,52,37],[59,53,52,39,"compileToken"],[59,65,52,51],[59,67,52,53],[60,6,53,8],[60,10,53,14,"func"],[60,14,53,18],[60,17,53,21,"compileToken"],[60,29,53,33],[60,30,53,34,"token"],[60,35,53,39],[60,37,53,41,"copyOptions"],[60,48,53,52],[60,49,53,53,"options"],[60,56,53,60],[60,57,53,61],[60,59,53,63,"context"],[60,66,53,70],[60,67,53,71],[61,6,54,8],[61,13,54,15,"func"],[61,17,54,19],[61,22,54,24,"boolbase"],[61,39,54,32],[61,40,54,33,"falseFunc"],[61,49,54,42],[61,52,55,14,"next"],[61,56,55,18],[61,59,56,14,"func"],[61,63,56,18],[61,68,56,23,"boolbase"],[61,85,56,31],[61,86,56,32,"trueFunc"],[61,94,56,40],[61,97,57,18,"boolbase"],[61,114,57,26],[61,115,57,27,"falseFunc"],[61,124,57,36],[61,127,58,18],[61,137,58,19,"elem"],[61,141,58,23],[62,8,58,23],[62,15,58,28],[62,16,58,29,"func"],[62,20,58,33],[62,21,58,34,"elem"],[62,25,58,38],[62,26,58,39],[62,30,58,43,"next"],[62,34,58,47],[62,35,58,48,"elem"],[62,39,58,52],[62,40,58,53],[63,6,58,53],[64,4,59,4],[64,5,59,5],[65,4,60,4,"has"],[65,7,60,7],[65,18,60,4,"has"],[65,21,60,7,"has"],[65,22,60,8,"next"],[65,26,60,12],[65,28,60,14,"subselect"],[65,37,60,23],[65,39,60,25,"options"],[65,46,60,32],[65,48,60,34,"_context"],[65,56,60,42],[65,58,60,44,"compileToken"],[65,70,60,56],[65,72,60,58],[66,6,61,8],[66,10,61,16,"adapter"],[66,17,61,23],[66,20,61,28,"options"],[66,27,61,35],[66,28,61,16,"adapter"],[66,35,61,23],[67,6,62,8],[67,10,62,14,"opts"],[67,14,62,18],[67,17,62,21,"copyOptions"],[67,28,62,32],[67,29,62,33,"options"],[67,36,62,40],[67,37,62,41],[68,6,63,8,"opts"],[68,10,63,12],[68,11,63,13,"relativeSelector"],[68,27,63,29],[68,30,63,32],[68,34,63,36],[69,6,64,8],[69,10,64,14,"context"],[69,17,64,21],[69,20,64,24,"subselect"],[69,29,64,33],[69,30,64,34,"some"],[69,34,64,38],[69,35,64,39],[69,45,64,40,"s"],[69,46,64,41],[70,8,64,41],[70,15,64,46,"s"],[70,16,64,47],[70,17,64,48,"some"],[70,21,64,52],[70,22,64,53,"isTraversal"],[70,39,64,64],[70,40,64,65],[71,6,64,65],[71,8,64,66],[72,6,65,14],[73,6,66,16],[73,7,66,17,"PLACEHOLDER_ELEMENT"],[73,26,66,36],[73,27,66,37],[73,30,67,14,"undefined"],[73,39,67,23],[74,6,68,8],[74,10,68,14,"compiled"],[74,18,68,22],[74,21,68,25,"compileToken"],[74,33,68,37],[74,34,68,38,"subselect"],[74,43,68,47],[74,45,68,49,"opts"],[74,49,68,53],[74,51,68,55,"context"],[74,58,68,62],[74,59,68,63],[75,6,69,8],[75,10,69,12,"compiled"],[75,18,69,20],[75,23,69,25,"boolbase"],[75,40,69,33],[75,41,69,34,"falseFunc"],[75,50,69,43],[75,52,70,12],[75,59,70,19,"boolbase"],[75,76,70,27],[75,77,70,28,"falseFunc"],[75,86,70,37],[76,6,71,8],[76,10,71,14,"hasElement"],[76,20,71,24],[76,23,71,27,"ensureIsTag"],[76,34,71,38],[76,35,71,39,"compiled"],[76,43,71,47],[76,45,71,49,"adapter"],[76,52,71,56],[76,53,71,57],[77,6,72,8],[78,6,73,8],[78,10,73,12,"context"],[78,17,73,19],[78,21,73,23,"compiled"],[78,29,73,31],[78,34,73,36,"boolbase"],[78,51,73,44],[78,52,73,45,"trueFunc"],[78,60,73,53],[78,62,73,55],[79,8,74,12],[80,0,75,0],[81,0,76,0],[82,0,77,0],[83,8,78,12],[83,12,78,12,"_compiled$shouldTestN"],[83,33,78,12],[83,36,78,55,"compiled"],[83,44,78,63],[83,45,78,20,"shouldTestNextSiblings"],[83,67,78,42],[84,10,78,20,"shouldTestNextSiblings"],[84,32,78,42],[84,35,78,42,"_compiled$shouldTestN"],[84,56,78,42],[84,70,78,45],[84,75,78,50],[84,78,78,50,"_compiled$shouldTestN"],[84,99,78,50],[85,8,79,12],[85,15,79,19],[85,25,79,20,"elem"],[85,29,79,24],[85,31,79,29],[86,10,80,16],[86,14,80,20],[86,15,80,21,"next"],[86,19,80,25],[86,20,80,26,"elem"],[86,24,80,30],[86,25,80,31],[86,27,81,20],[86,34,81,27],[86,39,81,32],[87,10,82,16,"context"],[87,17,82,23],[87,18,82,24],[87,19,82,25],[87,20,82,26],[87,23,82,29,"elem"],[87,27,82,33],[88,10,83,16],[88,14,83,22,"childs"],[88,20,83,28],[88,23,83,31,"adapter"],[88,30,83,38],[88,31,83,39,"getChildren"],[88,42,83,50],[88,43,83,51,"elem"],[88,47,83,55],[88,48,83,56],[89,10,84,16],[89,14,84,22,"nextElements"],[89,26,84,34],[89,29,84,37,"shouldTestNextSiblings"],[89,51,84,59],[89,57,84,59,"concat"],[89,63,84,59],[89,68,84,59,"_toConsumableArray2"],[89,87,84,59],[89,88,84,59,"default"],[89,95,84,59],[89,97,85,26,"childs"],[89,103,85,32],[89,110,85,32,"_toConsumableArray2"],[89,129,85,32],[89,130,85,32,"default"],[89,137,85,32],[89,139,85,37,"getNextSiblings"],[89,154,85,52],[89,155,85,53,"elem"],[89,159,85,57],[89,161,85,59,"adapter"],[89,168,85,66],[89,169,85,67],[89,174,86,22,"childs"],[89,180,86,28],[90,10,87,16],[90,17,87,23,"adapter"],[90,24,87,30],[90,25,87,31,"existsOne"],[90,34,87,40],[90,35,87,41,"hasElement"],[90,45,87,51],[90,47,87,53,"nextElements"],[90,59,87,65],[90,60,87,66],[91,8,88,12],[91,9,88,13],[92,6,89,8],[93,6,90,8],[93,13,90,15],[93,23,90,16,"elem"],[93,27,90,20],[94,8,90,20],[94,15,90,25,"next"],[94,19,90,29],[94,20,90,30,"elem"],[94,24,90,34],[94,25,90,35],[94,29,91,12,"adapter"],[94,36,91,19],[94,37,91,20,"existsOne"],[94,46,91,29],[94,47,91,30,"hasElement"],[94,57,91,40],[94,59,91,42,"adapter"],[94,66,91,49],[94,67,91,50,"getChildren"],[94,78,91,61],[94,79,91,62,"elem"],[94,83,91,66],[94,84,91,67],[94,85,91,68],[95,6,91,68],[96,4,92,4],[97,2,93,0],[97,3,93,1],[98,0,93,2],[98,3]],"functionMap":{"names":["<global>","ensureIsTag","<anonymous>","getNextSiblings","copyOptions","is","not","has","subselect.some$argument_0"],"mappings":"AAA;OCI;WCG,2CD;CDC;OGC;CHQ;AIC;CJY;WKC;cHM,kCG;CLC;IMa;kBJM,mCI;KNC;IOC;uCCI,0BD;mBLe;aKS;eLE;oEKC;KPC"}},"type":"js/module"}]}