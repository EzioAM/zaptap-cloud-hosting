{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/construct","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"2C82t1U223HDonToEo9xWdebgJo=","exportNames":["*"]}},{"name":"./flingGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"h24ijk3pJCmeakiNLvaxhU4oD+0=","exportNames":["*"]}},{"name":"./forceTouchGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":56,"index":103}}],"key":"1QIx9s/Hb/tSlS4sC64N+Adyv7M=","exportNames":["*"]}},{"name":"./gestureComposition","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":141},"end":{"line":8,"column":30,"index":242}}],"key":"J0ugy1LMUGf5KgbYvNV+9auzxk4=","exportNames":["*"]}},{"name":"./longPressGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":243},"end":{"line":9,"column":54,"index":297}}],"key":"1o89s2ZbLCAJzQNlPSeE8o2+cH8=","exportNames":["*"]}},{"name":"./panGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":298},"end":{"line":10,"column":42,"index":340}}],"key":"aBzYQKsfDy415OM5yEWHEC+JvOM=","exportNames":["*"]}},{"name":"./pinchGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":341},"end":{"line":11,"column":46,"index":387}}],"key":"Dpg/8aAltyIIC/a4wQAoQVMdkg4=","exportNames":["*"]}},{"name":"./rotationGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":388},"end":{"line":12,"column":52,"index":440}}],"key":"/7dx2ayCyD336a+OWcSLUeam5aE=","exportNames":["*"]}},{"name":"./tapGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":441},"end":{"line":13,"column":42,"index":483}}],"key":"0AhBYBLv6GsrGEF0r8aS4Nb6QGo=","exportNames":["*"]}},{"name":"./nativeGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":484},"end":{"line":14,"column":48,"index":532}}],"key":"cjDWt0y1Cq1VxsEGc4geilXmt0Q=","exportNames":["*"]}},{"name":"./manualGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":533},"end":{"line":15,"column":48,"index":581}}],"key":"HUWWiRL9QzXRRI3alfUEUrUAkqk=","exportNames":["*"]}},{"name":"./hoverGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":582},"end":{"line":16,"column":46,"index":628}}],"key":"+OU9Hr4DiheWQiFQL42cwzfCmfI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.GestureObjects = void 0;\n  var _construct2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/construct\"));\n  var _flingGesture = require(_dependencyMap[2], \"./flingGesture\");\n  var _forceTouchGesture = require(_dependencyMap[3], \"./forceTouchGesture\");\n  var _gestureComposition = require(_dependencyMap[4], \"./gestureComposition\");\n  var _longPressGesture = require(_dependencyMap[5], \"./longPressGesture\");\n  var _panGesture = require(_dependencyMap[6], \"./panGesture\");\n  var _pinchGesture = require(_dependencyMap[7], \"./pinchGesture\");\n  var _rotationGesture = require(_dependencyMap[8], \"./rotationGesture\");\n  var _tapGesture = require(_dependencyMap[9], \"./tapGesture\");\n  var _nativeGesture = require(_dependencyMap[10], \"./nativeGesture\");\n  var _manualGesture = require(_dependencyMap[11], \"./manualGesture\");\n  var _hoverGesture = require(_dependencyMap[12], \"./hoverGesture\");\n  /**\n   * `Gesture` is the object that allows you to create and compose gestures.\n   *\n   * ### Remarks\n   * - Consider wrapping your gesture configurations with `useMemo`, as it will reduce the amount of work Gesture Handler has to do under the hood when updating gestures.\n   *\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture\n   */\n  var GestureObjects = exports.GestureObjects = {\n    /**\n     * A discrete gesture that recognizes one or many taps.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture\n     */\n    Tap: function Tap() {\n      return new _tapGesture.TapGesture();\n    },\n    /**\n     * A continuous gesture that can recognize a panning (dragging) gesture and track its movement.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture\n     */\n    Pan: function Pan() {\n      return new _panGesture.PanGesture();\n    },\n    /**\n     * A continuous gesture that recognizes pinch gesture. It allows for tracking the distance between two fingers and use that information to scale or zoom your content.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pinch-gesture\n     */\n    Pinch: function Pinch() {\n      return new _pinchGesture.PinchGesture();\n    },\n    /**\n     * A continuous gesture that can recognize rotation and track its movement.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/rotation-gesture\n     */\n    Rotation: function Rotation() {\n      return new _rotationGesture.RotationGesture();\n    },\n    /**\n     * A discrete gesture that activates when the movement is sufficiently fast.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/fling-gesture\n     */\n    Fling: function Fling() {\n      return new _flingGesture.FlingGesture();\n    },\n    /**\n     * A discrete gesture that activates when the corresponding view is pressed for a sufficiently long time.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/long-press-gesture\n     */\n    LongPress: function LongPress() {\n      return new _longPressGesture.LongPressGesture();\n    },\n    /**\n     * #### iOS only\n     * A continuous gesture that recognizes force of a touch. It allows for tracking pressure of touch on some iOS devices.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/force-touch-gesture\n     */\n    ForceTouch: function ForceTouch() {\n      return new _forceTouchGesture.ForceTouchGesture();\n    },\n    /**\n     * A gesture that allows other touch handling components to participate in RNGH's gesture system.\n     * When used, the other component should be the direct child of a `GestureDetector`.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/native-gesture\n     */\n    Native: function Native() {\n      return new _nativeGesture.NativeGesture();\n    },\n    /**\n     * A plain gesture that has no specific activation criteria nor event data set.\n     * Its state has to be controlled manually using a state manager.\n     * It will not fail when all the pointers are lifted from the screen.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/manual-gesture\n     */\n    Manual: function Manual() {\n      return new _manualGesture.ManualGesture();\n    },\n    /**\n     * A continuous gesture that can recognize hovering above the view it's attached to.\n     * The hover effect may be activated by moving a mouse or a stylus over the view.\n     *\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/hover-gesture\n     */\n    Hover: function Hover() {\n      return new _hoverGesture.HoverGesture();\n    },\n    /**\n     * Builds a composed gesture consisting of gestures provided as parameters.\n     * The first one that becomes active cancels the rest of gestures.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#race\n     */\n    Race: function Race() {\n      for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n        gestures[_key] = arguments[_key];\n      }\n      return (0, _construct2.default)(_gestureComposition.ComposedGesture, gestures);\n    },\n    /**\n     * Builds a composed gesture that allows all base gestures to run simultaneously.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#simultaneous\n     */\n    Simultaneous: function Simultaneous() {\n      for (var _len2 = arguments.length, gestures = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        gestures[_key2] = arguments[_key2];\n      }\n      return (0, _construct2.default)(_gestureComposition.SimultaneousGesture, gestures);\n    },\n    /**\n     * Builds a composed gesture where only one of the provided gestures can become active.\n     * Priority is decided through the order of gestures: the first one has higher priority\n     * than the second one, second one has higher priority than the third one, and so on.\n     * For example, to make a gesture that recognizes both single and double tap you need\n     * to call Exclusive(doubleTap, singleTap).\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#exclusive\n     */\n    Exclusive: function Exclusive() {\n      for (var _len3 = arguments.length, gestures = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        gestures[_key3] = arguments[_key3];\n      }\n      return (0, _construct2.default)(_gestureComposition.ExclusiveGesture, gestures);\n    }\n  };\n});","lineCount":140,"map":[[8,2,1,0],[8,6,1,0,"_flingGesture"],[8,19,1,0],[8,22,1,0,"require"],[8,29,1,0],[8,30,1,0,"_dependencyMap"],[8,44,1,0],[9,2,2,0],[9,6,2,0,"_forceTouchGesture"],[9,24,2,0],[9,27,2,0,"require"],[9,34,2,0],[9,35,2,0,"_dependencyMap"],[9,49,2,0],[10,2,4,0],[10,6,4,0,"_gestureComposition"],[10,25,4,0],[10,28,4,0,"require"],[10,35,4,0],[10,36,4,0,"_dependencyMap"],[10,50,4,0],[11,2,9,0],[11,6,9,0,"_longPressGesture"],[11,23,9,0],[11,26,9,0,"require"],[11,33,9,0],[11,34,9,0,"_dependencyMap"],[11,48,9,0],[12,2,10,0],[12,6,10,0,"_panGesture"],[12,17,10,0],[12,20,10,0,"require"],[12,27,10,0],[12,28,10,0,"_dependencyMap"],[12,42,10,0],[13,2,11,0],[13,6,11,0,"_pinchGesture"],[13,19,11,0],[13,22,11,0,"require"],[13,29,11,0],[13,30,11,0,"_dependencyMap"],[13,44,11,0],[14,2,12,0],[14,6,12,0,"_rotationGesture"],[14,22,12,0],[14,25,12,0,"require"],[14,32,12,0],[14,33,12,0,"_dependencyMap"],[14,47,12,0],[15,2,13,0],[15,6,13,0,"_tapGesture"],[15,17,13,0],[15,20,13,0,"require"],[15,27,13,0],[15,28,13,0,"_dependencyMap"],[15,42,13,0],[16,2,14,0],[16,6,14,0,"_nativeGesture"],[16,20,14,0],[16,23,14,0,"require"],[16,30,14,0],[16,31,14,0,"_dependencyMap"],[16,45,14,0],[17,2,15,0],[17,6,15,0,"_manualGesture"],[17,20,15,0],[17,23,15,0,"require"],[17,30,15,0],[17,31,15,0,"_dependencyMap"],[17,45,15,0],[18,2,16,0],[18,6,16,0,"_hoverGesture"],[18,19,16,0],[18,22,16,0,"require"],[18,29,16,0],[18,30,16,0,"_dependencyMap"],[18,44,16,0],[19,2,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,2,26,7],[27,6,26,13,"GestureObjects"],[27,20,26,27],[27,23,26,27,"exports"],[27,30,26,27],[27,31,26,27,"GestureObjects"],[27,45,26,27],[27,48,26,30],[28,4,27,2],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,4,31,2,"Tap"],[32,7,31,5],[32,9,31,7],[32,18,31,2,"Tap"],[32,21,31,5,"Tap"],[32,22,31,5],[32,24,31,13],[33,6,32,4],[33,13,32,11],[33,17,32,15,"TapGesture"],[33,39,32,25],[33,40,32,26],[33,41,32,27],[34,4,33,2],[34,5,33,3],[35,4,35,2],[36,0,36,0],[37,0,37,0],[38,0,38,0],[39,4,39,2,"Pan"],[39,7,39,5],[39,9,39,7],[39,18,39,2,"Pan"],[39,21,39,5,"Pan"],[39,22,39,5],[39,24,39,13],[40,6,40,4],[40,13,40,11],[40,17,40,15,"PanGesture"],[40,39,40,25],[40,40,40,26],[40,41,40,27],[41,4,41,2],[41,5,41,3],[42,4,43,2],[43,0,44,0],[44,0,45,0],[45,0,46,0],[46,4,47,2,"Pinch"],[46,9,47,7],[46,11,47,9],[46,20,47,2,"Pinch"],[46,25,47,7,"Pinch"],[46,26,47,7],[46,28,47,15],[47,6,48,4],[47,13,48,11],[47,17,48,15,"PinchGesture"],[47,43,48,27],[47,44,48,28],[47,45,48,29],[48,4,49,2],[48,5,49,3],[49,4,51,2],[50,0,52,0],[51,0,53,0],[52,0,54,0],[53,4,55,2,"Rotation"],[53,12,55,10],[53,14,55,12],[53,23,55,2,"Rotation"],[53,31,55,10,"Rotation"],[53,32,55,10],[53,34,55,18],[54,6,56,4],[54,13,56,11],[54,17,56,15,"RotationGesture"],[54,49,56,30],[54,50,56,31],[54,51,56,32],[55,4,57,2],[55,5,57,3],[56,4,59,2],[57,0,60,0],[58,0,61,0],[59,0,62,0],[60,4,63,2,"Fling"],[60,9,63,7],[60,11,63,9],[60,20,63,2,"Fling"],[60,25,63,7,"Fling"],[60,26,63,7],[60,28,63,15],[61,6,64,4],[61,13,64,11],[61,17,64,15,"FlingGesture"],[61,43,64,27],[61,44,64,28],[61,45,64,29],[62,4,65,2],[62,5,65,3],[63,4,67,2],[64,0,68,0],[65,0,69,0],[66,0,70,0],[67,4,71,2,"LongPress"],[67,13,71,11],[67,15,71,13],[67,24,71,2,"LongPress"],[67,33,71,11,"LongPress"],[67,34,71,11],[67,36,71,19],[68,6,72,4],[68,13,72,11],[68,17,72,15,"LongPressGesture"],[68,51,72,31],[68,52,72,32],[68,53,72,33],[69,4,73,2],[69,5,73,3],[70,4,75,2],[71,0,76,0],[72,0,77,0],[73,0,78,0],[74,0,79,0],[75,4,80,2,"ForceTouch"],[75,14,80,12],[75,16,80,14],[75,25,80,2,"ForceTouch"],[75,35,80,12,"ForceTouch"],[75,36,80,12],[75,38,80,20],[76,6,81,4],[76,13,81,11],[76,17,81,15,"ForceTouchGesture"],[76,53,81,32],[76,54,81,33],[76,55,81,34],[77,4,82,2],[77,5,82,3],[78,4,84,2],[79,0,85,0],[80,0,86,0],[81,0,87,0],[82,0,88,0],[83,4,89,2,"Native"],[83,10,89,8],[83,12,89,10],[83,21,89,2,"Native"],[83,27,89,8,"Native"],[83,28,89,8],[83,30,89,16],[84,6,90,4],[84,13,90,11],[84,17,90,15,"NativeGesture"],[84,45,90,28],[84,46,90,29],[84,47,90,30],[85,4,91,2],[85,5,91,3],[86,4,93,2],[87,0,94,0],[88,0,95,0],[89,0,96,0],[90,0,97,0],[91,0,98,0],[92,4,99,2,"Manual"],[92,10,99,8],[92,12,99,10],[92,21,99,2,"Manual"],[92,27,99,8,"Manual"],[92,28,99,8],[92,30,99,16],[93,6,100,4],[93,13,100,11],[93,17,100,15,"ManualGesture"],[93,45,100,28],[93,46,100,29],[93,47,100,30],[94,4,101,2],[94,5,101,3],[95,4,103,2],[96,0,104,0],[97,0,105,0],[98,0,106,0],[99,0,107,0],[100,0,108,0],[101,4,109,2,"Hover"],[101,9,109,7],[101,11,109,9],[101,20,109,2,"Hover"],[101,25,109,7,"Hover"],[101,26,109,7],[101,28,109,15],[102,6,110,4],[102,13,110,11],[102,17,110,15,"HoverGesture"],[102,43,110,27],[102,44,110,28],[102,45,110,29],[103,4,111,2],[103,5,111,3],[104,4,113,2],[105,0,114,0],[106,0,115,0],[107,0,116,0],[108,0,117,0],[109,4,118,2,"Race"],[109,8,118,6],[109,10,118,8],[109,19,118,2,"Race"],[109,23,118,6,"Race"],[109,24,118,6],[109,26,118,36],[110,6,118,36],[110,15,118,36,"_len"],[110,19,118,36],[110,22,118,36,"arguments"],[110,31,118,36],[110,32,118,36,"length"],[110,38,118,36],[110,40,118,12,"gestures"],[110,48,118,20],[110,55,118,20,"Array"],[110,60,118,20],[110,61,118,20,"_len"],[110,65,118,20],[110,68,118,20,"_key"],[110,72,118,20],[110,78,118,20,"_key"],[110,82,118,20],[110,85,118,20,"_len"],[110,89,118,20],[110,91,118,20,"_key"],[110,95,118,20],[111,8,118,12,"gestures"],[111,16,118,20],[111,17,118,20,"_key"],[111,21,118,20],[111,25,118,20,"arguments"],[111,34,118,20],[111,35,118,20,"_key"],[111,39,118,20],[112,6,118,20],[113,6,119,4],[113,17,119,4,"_construct2"],[113,28,119,4],[113,29,119,4,"default"],[113,36,119,4],[113,38,119,15,"ComposedGesture"],[113,73,119,30],[113,75,119,34,"gestures"],[113,83,119,42],[114,4,120,2],[114,5,120,3],[115,4,122,2],[116,0,123,0],[117,0,124,0],[118,0,125,0],[119,4,126,2,"Simultaneous"],[119,16,126,14],[119,27,126,2,"Simultaneous"],[119,39,126,14,"Simultaneous"],[119,40,126,14],[119,42,126,39],[120,6,126,39],[120,15,126,39,"_len2"],[120,20,126,39],[120,23,126,39,"arguments"],[120,32,126,39],[120,33,126,39,"length"],[120,39,126,39],[120,41,126,18,"gestures"],[120,49,126,26],[120,56,126,26,"Array"],[120,61,126,26],[120,62,126,26,"_len2"],[120,67,126,26],[120,70,126,26,"_key2"],[120,75,126,26],[120,81,126,26,"_key2"],[120,86,126,26],[120,89,126,26,"_len2"],[120,94,126,26],[120,96,126,26,"_key2"],[120,101,126,26],[121,8,126,18,"gestures"],[121,16,126,26],[121,17,126,26,"_key2"],[121,22,126,26],[121,26,126,26,"arguments"],[121,35,126,26],[121,36,126,26,"_key2"],[121,41,126,26],[122,6,126,26],[123,6,127,4],[123,17,127,4,"_construct2"],[123,28,127,4],[123,29,127,4,"default"],[123,36,127,4],[123,38,127,15,"SimultaneousGesture"],[123,77,127,34],[123,79,127,38,"gestures"],[123,87,127,46],[124,4,128,2],[124,5,128,3],[125,4,130,2],[126,0,131,0],[127,0,132,0],[128,0,133,0],[129,0,134,0],[130,0,135,0],[131,0,136,0],[132,0,137,0],[133,4,138,2,"Exclusive"],[133,13,138,11],[133,24,138,2,"Exclusive"],[133,33,138,11,"Exclusive"],[133,34,138,11],[133,36,138,36],[134,6,138,36],[134,15,138,36,"_len3"],[134,20,138,36],[134,23,138,36,"arguments"],[134,32,138,36],[134,33,138,36,"length"],[134,39,138,36],[134,41,138,15,"gestures"],[134,49,138,23],[134,56,138,23,"Array"],[134,61,138,23],[134,62,138,23,"_len3"],[134,67,138,23],[134,70,138,23,"_key3"],[134,75,138,23],[134,81,138,23,"_key3"],[134,86,138,23],[134,89,138,23,"_len3"],[134,94,138,23],[134,96,138,23,"_key3"],[134,101,138,23],[135,8,138,15,"gestures"],[135,16,138,23],[135,17,138,23,"_key3"],[135,22,138,23],[135,26,138,23,"arguments"],[135,35,138,23],[135,36,138,23,"_key3"],[135,41,138,23],[136,6,138,23],[137,6,139,4],[137,17,139,4,"_construct2"],[137,28,139,4],[137,29,139,4,"default"],[137,36,139,4],[137,38,139,15,"ExclusiveGesture"],[137,74,139,31],[137,76,139,35,"gestures"],[137,84,139,43],[138,4,140,2],[139,2,141,0],[139,3,141,1],[140,0,141,2],[140,3]],"functionMap":{"names":["<global>","GestureObjects.Tap","GestureObjects.Pan","GestureObjects.Pinch","GestureObjects.Rotation","GestureObjects.Fling","GestureObjects.LongPress","GestureObjects.ForceTouch","GestureObjects.Native","GestureObjects.Manual","GestureObjects.Hover","GestureObjects.Race","GestureObjects.Simultaneous","GestureObjects.Exclusive"],"mappings":"AAA;OC8B;GDE;OEM;GFE;SGM;GHE;YIM;GJE;SKM;GLE;aMM;GNE;cOO;GPE;UQO;GRE;USQ;GTE;SUQ;GVE;QWO;GXE;EYM;GZE;EaU;GbE"}},"type":"js/module"}]}