{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@reduxjs/toolkit/query/react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":57,"index":57}}],"key":"H8aYsQNJt9rS0BKlqltpEbUG6zo=","exportNames":["*"]}},{"name":"../../services/supabase/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":58,"index":117}}],"key":"a99TehitYkPR4mct+ady0jxcI4I=","exportNames":["*"]}},{"name":"../../constants/defaults","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":119},"end":{"line":3,"column":58,"index":177}}],"key":"Ye25I9WTFVUZPXhwgfQ8l+VQTx4=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":179},"end":{"line":4,"column":54,"index":233}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useRefreshDashboardMutation = exports.useGetTodayStatsQuery = exports.useGetRecentActivityQuery = exports.useGetFeaturedAutomationQuery = exports.default = void 0;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _react = require(_dependencyMap[3], \"@reduxjs/toolkit/query/react\");\n  var _client = require(_dependencyMap[4], \"../../services/supabase/client\");\n  var _defaults = require(_dependencyMap[5], \"../../constants/defaults\");\n  var _EventLogger = require(_dependencyMap[6], \"../../utils/EventLogger\");\n  var dashboardApi = (0, _react.createApi)({\n    reducerPath: 'dashboardApi',\n    baseQuery: function () {\n      var _baseQuery = (0, _asyncToGenerator2.default)(function* (_ref) {\n        var url = _ref.url,\n          _ref$method = _ref.method,\n          method = _ref$method === void 0 ? 'GET' : _ref$method,\n          body = _ref.body,\n          params = _ref.params;\n        try {\n          // Get current user\n          var _yield$supabase$auth$ = yield _client.supabase.auth.getUser(),\n            user = _yield$supabase$auth$.data.user;\n          if (!user) {\n            return {\n              error: {\n                status: 401,\n                data: 'Not authenticated'\n              }\n            };\n          }\n\n          // Handle RPC calls\n          if (url.startsWith('rpc/')) {\n            var functionName = url.replace('rpc/', '');\n            var _yield$supabase$rpc = yield _client.supabase.rpc(functionName, body),\n              _data = _yield$supabase$rpc.data,\n              _error = _yield$supabase$rpc.error;\n            if (_error) {\n              return {\n                error: {\n                  status: 500,\n                  data: _error.message\n                }\n              };\n            }\n            return {\n              data: _data\n            };\n          }\n\n          // Handle regular queries\n          var query = _client.supabase.from(url);\n\n          // Apply params\n          if (params) {\n            Object.entries(params).forEach(function (_ref2) {\n              var _ref3 = (0, _slicedToArray2.default)(_ref2, 2),\n                key = _ref3[0],\n                value = _ref3[1];\n              if (key === 'select') {\n                query = query.select(value);\n              } else if (key === 'order') {\n                var _split = value.split('.'),\n                  _split2 = (0, _slicedToArray2.default)(_split, 2),\n                  column = _split2[0],\n                  direction = _split2[1];\n                query = query.order(column, {\n                  ascending: direction === 'asc'\n                });\n              } else if (key === 'limit') {\n                query = query.limit(value);\n              } else {\n                // Handle filter params like user_id: 'eq.${userId}'\n                var _split3 = value.split('.'),\n                  _split4 = (0, _slicedToArray2.default)(_split3, 2),\n                  operator = _split4[0],\n                  filterValue = _split4[1];\n                if (operator === 'eq') {\n                  query = query.eq(key, filterValue);\n                }\n              }\n            });\n          }\n          var _yield$query = yield query,\n            data = _yield$query.data,\n            error = _yield$query.error;\n          if (error) {\n            return {\n              error: {\n                status: 500,\n                data: error.message\n              }\n            };\n          }\n          return {\n            data: data\n          };\n        } catch (error) {\n          return {\n            error: {\n              status: 500,\n              data: 'An unexpected error occurred'\n            }\n          };\n        }\n      });\n      function baseQuery(_x) {\n        return _baseQuery.apply(this, arguments);\n      }\n      return baseQuery;\n    }(),\n    tagTypes: ['Dashboard', 'Stats', 'Activity', 'Featured'],\n    endpoints: function endpoints(builder) {\n      return {\n        getTodayStats: builder.query({\n          queryFn: function () {\n            var _queryFn = (0, _asyncToGenerator2.default)(function* () {\n              try {\n                var _yield$supabase$auth$2 = yield _client.supabase.auth.getUser(),\n                  user = _yield$supabase$auth$2.data.user;\n                if (!user) {\n                  return {\n                    data: {\n                      totalExecutions: 0,\n                      successRate: 0,\n                      averageTime: 0,\n                      timeSaved: 0\n                    }\n                  };\n                }\n                var today = new Date().toISOString().split('T')[0];\n                var _yield$supabase$from$ = yield _client.supabase.from('automation_executions').select('status, execution_time').eq('user_id', user.id).gte('created_at', `${today}T00:00:00`).lte('created_at', `${today}T23:59:59`),\n                  executions = _yield$supabase$from$.data,\n                  error = _yield$supabase$from$.error;\n                if (error) {\n                  _EventLogger.EventLogger.error('API', 'Error fetching today stats:', error);\n                  // Return default values on error instead of throwing\n                  return {\n                    data: {\n                      totalExecutions: 0,\n                      successRate: 0,\n                      averageTime: 0,\n                      timeSaved: 0\n                    }\n                  };\n                }\n                if (!executions || executions.length === 0) {\n                  return {\n                    data: {\n                      totalExecutions: 0,\n                      successRate: 0,\n                      averageTime: 0,\n                      timeSaved: 0\n                    }\n                  };\n                }\n                var successful = executions.filter(function (e) {\n                  return e.status === 'success';\n                });\n                var totalTime = successful.reduce(function (acc, e) {\n                  return acc + (e.execution_time || 0);\n                }, 0);\n                return {\n                  data: {\n                    totalExecutions: executions.length,\n                    successRate: Math.round(successful.length / executions.length * 100),\n                    averageTime: successful.length > 0 ? Math.round(totalTime / successful.length) : 0,\n                    timeSaved: Math.round(totalTime / 1000 * 5) // Estimate 5x time saved\n                  }\n                };\n              } catch (error) {\n                _EventLogger.EventLogger.error('API', 'Failed to fetch today stats:', error);\n                // Return default values on any error\n                return {\n                  data: {\n                    totalExecutions: 0,\n                    successRate: 0,\n                    averageTime: 0,\n                    timeSaved: 0\n                  }\n                };\n              }\n            });\n            function queryFn() {\n              return _queryFn.apply(this, arguments);\n            }\n            return queryFn;\n          }(),\n          providesTags: ['Stats']\n        }),\n        getRecentActivity: builder.query({\n          queryFn: function () {\n            var _queryFn2 = (0, _asyncToGenerator2.default)(function* () {\n              try {\n                var _yield$supabase$auth$3 = yield _client.supabase.auth.getUser(),\n                  user = _yield$supabase$auth$3.data.user;\n                if (!user) {\n                  return {\n                    data: []\n                  };\n                }\n                var _yield$supabase$from$2 = yield _client.supabase.from('automation_executions').select('id,status,execution_time,created_at,automation_id').eq('user_id', user.id).order('created_at', {\n                    ascending: false\n                  }).limit(5),\n                  executions = _yield$supabase$from$2.data,\n                  error = _yield$supabase$from$2.error;\n                if (error) {\n                  _EventLogger.EventLogger.error('API', 'Error fetching recent activity:', error);\n                  return {\n                    data: []\n                  };\n                }\n                if (!executions || executions.length === 0) {\n                  return {\n                    data: []\n                  };\n                }\n\n                // Fetch automation details\n                var automationIds = executions.map(function (r) {\n                  return r.automation_id;\n                }).filter(Boolean);\n                if (automationIds.length === 0) {\n                  return {\n                    data: []\n                  };\n                }\n                var _yield$supabase$from$3 = yield _client.supabase.from('automations').select('id, title').in('id', automationIds),\n                  automations = _yield$supabase$from$3.data,\n                  automationsError = _yield$supabase$from$3.error;\n                if (automationsError) {\n                  _EventLogger.EventLogger.error('API', 'Error fetching automation details:', automationsError);\n                }\n                var automationMap = new Map((automations == null ? void 0 : automations.map(function (a) {\n                  return [a.id, a];\n                })) || []);\n                return {\n                  data: executions.map(function (execution) {\n                    return {\n                      id: execution.id,\n                      status: execution.status,\n                      executionTime: execution.execution_time || 0,\n                      createdAt: execution.created_at,\n                      automation: automationMap.get(execution.automation_id) || {\n                        title: 'Unknown Automation',\n                        icon: 'help-circle'\n                      }\n                    };\n                  })\n                };\n              } catch (error) {\n                _EventLogger.EventLogger.error('API', 'Failed to fetch recent activity:', error);\n                return {\n                  data: []\n                };\n              }\n            });\n            function queryFn() {\n              return _queryFn2.apply(this, arguments);\n            }\n            return queryFn;\n          }(),\n          providesTags: ['Activity']\n        }),\n        getFeaturedAutomation: builder.query({\n          queryFn: function () {\n            var _queryFn3 = (0, _asyncToGenerator2.default)(function* () {\n              try {\n                var _yield$supabase$from$4 = yield _client.supabase.from('automations').select('id,title,description,category,tags,likes_count,downloads_count,created_by').eq('is_public', true).eq('is_template', true).order('likes_count', {\n                    ascending: false\n                  }).limit(1),\n                  automations = _yield$supabase$from$4.data,\n                  error = _yield$supabase$from$4.error;\n                if (error) {\n                  _EventLogger.EventLogger.error('API', 'Error fetching featured automation:', error);\n                  return {\n                    data: null\n                  };\n                }\n                if (!automations || automations.length === 0) {\n                  return {\n                    data: null\n                  };\n                }\n                var automation = automations[0];\n\n                // Fetch user details\n                var _yield$supabase$from$5 = yield _client.supabase.from('users').select('name, avatar_url').eq('id', automation.created_by).single(),\n                  userData = _yield$supabase$from$5.data,\n                  userError = _yield$supabase$from$5.error;\n                if (userError) {\n                  _EventLogger.EventLogger.error('API', 'Error fetching user details:', userError);\n                }\n                return {\n                  data: {\n                    id: automation.id,\n                    title: automation.title,\n                    description: automation.description,\n                    category: automation.category || 'Productivity',\n                    tags: automation.tags || [],\n                    likesCount: automation.likes_count || 0,\n                    downloadsCount: automation.downloads_count || 0,\n                    createdBy: automation.created_by,\n                    user: {\n                      name: (userData == null ? void 0 : userData.name) || 'Anonymous',\n                      avatarUrl: (userData == null ? void 0 : userData.avatar_url) || _defaults.DEFAULT_AVATAR\n                    }\n                  }\n                };\n              } catch (error) {\n                _EventLogger.EventLogger.error('API', 'Failed to fetch featured automation:', error);\n                return {\n                  data: null\n                };\n              }\n            });\n            function queryFn() {\n              return _queryFn3.apply(this, arguments);\n            }\n            return queryFn;\n          }(),\n          providesTags: ['Featured']\n        }),\n        refreshDashboard: builder.mutation({\n          queryFn: function queryFn() {\n            return {\n              data: null\n            };\n          },\n          invalidatesTags: ['Stats', 'Activity', 'Featured']\n        })\n      };\n    }\n  });\n  var useGetTodayStatsQuery = exports.useGetTodayStatsQuery = dashboardApi.useGetTodayStatsQuery,\n    useGetRecentActivityQuery = exports.useGetRecentActivityQuery = dashboardApi.useGetRecentActivityQuery,\n    useGetFeaturedAutomationQuery = exports.useGetFeaturedAutomationQuery = dashboardApi.useGetFeaturedAutomationQuery,\n    useRefreshDashboardMutation = exports.useRefreshDashboardMutation = dashboardApi.useRefreshDashboardMutation;\n  var _default = exports.default = dashboardApi;\n});","lineCount":343,"map":[[9,2,1,0],[9,6,1,0,"_react"],[9,12,1,0],[9,15,1,0,"require"],[9,22,1,0],[9,23,1,0,"_dependencyMap"],[9,37,1,0],[10,2,2,0],[10,6,2,0,"_client"],[10,13,2,0],[10,16,2,0,"require"],[10,23,2,0],[10,24,2,0,"_dependencyMap"],[10,38,2,0],[11,2,3,0],[11,6,3,0,"_defaults"],[11,15,3,0],[11,18,3,0,"require"],[11,25,3,0],[11,26,3,0,"_dependencyMap"],[11,40,3,0],[12,2,4,0],[12,6,4,0,"_EventLogger"],[12,18,4,0],[12,21,4,0,"require"],[12,28,4,0],[12,29,4,0,"_dependencyMap"],[12,43,4,0],[13,2,39,0],[13,6,39,6,"dashboardApi"],[13,18,39,18],[13,21,39,21],[13,25,39,21,"createApi"],[13,41,39,30],[13,43,39,31],[14,4,40,2,"reducerPath"],[14,15,40,13],[14,17,40,15],[14,31,40,29],[15,4,41,2,"baseQuery"],[15,13,41,11],[16,6,41,11],[16,10,41,11,"_baseQuery"],[16,20,41,11],[16,27,41,11,"_asyncToGenerator2"],[16,45,41,11],[16,46,41,11,"default"],[16,53,41,11],[16,55,41,13],[16,66,41,13,"_ref"],[16,70,41,13],[16,72,41,62],[17,8,41,62],[17,12,41,22,"url"],[17,15,41,25],[17,18,41,25,"_ref"],[17,22,41,25],[17,23,41,22,"url"],[17,26,41,25],[18,10,41,25,"_ref$method"],[18,21,41,25],[18,24,41,25,"_ref"],[18,28,41,25],[18,29,41,27,"method"],[18,35,41,33],[19,10,41,27,"method"],[19,16,41,33],[19,19,41,33,"_ref$method"],[19,30,41,33],[19,44,41,36],[19,49,41,41],[19,52,41,41,"_ref$method"],[19,63,41,41],[20,10,41,43,"body"],[20,14,41,47],[20,17,41,47,"_ref"],[20,21,41,47],[20,22,41,43,"body"],[20,26,41,47],[21,10,41,49,"params"],[21,16,41,55],[21,19,41,55,"_ref"],[21,23,41,55],[21,24,41,49,"params"],[21,30,41,55],[22,8,42,4],[22,12,42,8],[23,10,43,6],[24,10,44,6],[24,14,44,6,"_yield$supabase$auth$"],[24,35,44,6],[24,44,44,39,"supabase"],[24,60,44,47],[24,61,44,48,"auth"],[24,65,44,52],[24,66,44,53,"getUser"],[24,73,44,60],[24,74,44,61],[24,75,44,62],[25,12,44,22,"user"],[25,16,44,26],[25,19,44,26,"_yield$supabase$auth$"],[25,40,44,26],[25,41,44,14,"data"],[25,45,44,18],[25,46,44,22,"user"],[25,50,44,26],[26,10,45,6],[26,14,45,10],[26,15,45,11,"user"],[26,19,45,15],[26,21,45,17],[27,12,46,8],[27,19,46,15],[28,14,46,17,"error"],[28,19,46,22],[28,21,46,24],[29,16,46,26,"status"],[29,22,46,32],[29,24,46,34],[29,27,46,37],[30,16,46,39,"data"],[30,20,46,43],[30,22,46,45],[31,14,46,65],[32,12,46,67],[32,13,46,68],[33,10,47,6],[35,10,49,6],[36,10,50,6],[36,14,50,10,"url"],[36,17,50,13],[36,18,50,14,"startsWith"],[36,28,50,24],[36,29,50,25],[36,35,50,31],[36,36,50,32],[36,38,50,34],[37,12,51,8],[37,16,51,14,"functionName"],[37,28,51,26],[37,31,51,29,"url"],[37,34,51,32],[37,35,51,33,"replace"],[37,42,51,40],[37,43,51,41],[37,49,51,47],[37,51,51,49],[37,53,51,51],[37,54,51,52],[38,12,52,8],[38,16,52,8,"_yield$supabase$rpc"],[38,35,52,8],[38,44,52,38,"supabase"],[38,60,52,46],[38,61,52,47,"rpc"],[38,64,52,50],[38,65,52,51,"functionName"],[38,77,52,63],[38,79,52,65,"body"],[38,83,52,69],[38,84,52,70],[39,14,52,16,"data"],[39,19,52,20],[39,22,52,20,"_yield$supabase$rpc"],[39,41,52,20],[39,42,52,16,"data"],[39,46,52,20],[40,14,52,22,"error"],[40,20,52,27],[40,23,52,27,"_yield$supabase$rpc"],[40,42,52,27],[40,43,52,22,"error"],[40,48,52,27],[41,12,54,8],[41,16,54,12,"error"],[41,22,54,17],[41,24,54,19],[42,14,55,10],[42,21,55,17],[43,16,55,19,"error"],[43,21,55,24],[43,23,55,26],[44,18,55,28,"status"],[44,24,55,34],[44,26,55,36],[44,29,55,39],[45,18,55,41,"data"],[45,22,55,45],[45,24,55,47,"error"],[45,30,55,52],[45,31,55,53,"message"],[46,16,55,61],[47,14,55,63],[47,15,55,64],[48,12,56,8],[49,12,58,8],[49,19,58,15],[50,14,58,17,"data"],[50,18,58,21],[50,20,58,17,"data"],[51,12,58,22],[51,13,58,23],[52,10,59,6],[54,10,61,6],[55,10,62,6],[55,14,62,10,"query"],[55,19,62,15],[55,22,62,18,"supabase"],[55,38,62,26],[55,39,62,27,"from"],[55,43,62,31],[55,44,62,32,"url"],[55,47,62,35],[55,48,62,36],[57,10,64,6],[58,10,65,6],[58,14,65,10,"params"],[58,20,65,16],[58,22,65,18],[59,12,66,8,"Object"],[59,18,66,14],[59,19,66,15,"entries"],[59,26,66,22],[59,27,66,23,"params"],[59,33,66,29],[59,34,66,30],[59,35,66,31,"forEach"],[59,42,66,38],[59,43,66,39],[59,53,66,39,"_ref2"],[59,58,66,39],[59,60,66,57],[60,14,66,57],[60,18,66,57,"_ref3"],[60,23,66,57],[60,30,66,57,"_slicedToArray2"],[60,45,66,57],[60,46,66,57,"default"],[60,53,66,57],[60,55,66,57,"_ref2"],[60,60,66,57],[61,16,66,41,"key"],[61,19,66,44],[61,22,66,44,"_ref3"],[61,27,66,44],[62,16,66,46,"value"],[62,21,66,51],[62,24,66,51,"_ref3"],[62,29,66,51],[63,14,67,10],[63,18,67,14,"key"],[63,21,67,17],[63,26,67,22],[63,34,67,30],[63,36,67,32],[64,16,68,12,"query"],[64,21,68,17],[64,24,68,20,"query"],[64,29,68,25],[64,30,68,26,"select"],[64,36,68,32],[64,37,68,33,"value"],[64,42,68,48],[64,43,68,49],[65,14,69,10],[65,15,69,11],[65,21,69,17],[65,25,69,21,"key"],[65,28,69,24],[65,33,69,29],[65,40,69,36],[65,42,69,38],[66,16,70,12],[66,20,70,12,"_split"],[66,26,70,12],[66,29,70,41,"value"],[66,34,70,46],[66,35,70,58,"split"],[66,40,70,63],[66,41,70,64],[66,44,70,67],[66,45,70,68],[67,18,70,68,"_split2"],[67,25,70,68],[67,32,70,68,"_slicedToArray2"],[67,47,70,68],[67,48,70,68,"default"],[67,55,70,68],[67,57,70,68,"_split"],[67,63,70,68],[68,18,70,19,"column"],[68,24,70,25],[68,27,70,25,"_split2"],[68,34,70,25],[69,18,70,27,"direction"],[69,27,70,36],[69,30,70,36,"_split2"],[69,37,70,36],[70,16,71,12,"query"],[70,21,71,17],[70,24,71,20,"query"],[70,29,71,25],[70,30,71,26,"order"],[70,35,71,31],[70,36,71,32,"column"],[70,42,71,38],[70,44,71,40],[71,18,71,42,"ascending"],[71,27,71,51],[71,29,71,53,"direction"],[71,38,71,62],[71,43,71,67],[72,16,71,73],[72,17,71,74],[72,18,71,75],[73,14,72,10],[73,15,72,11],[73,21,72,17],[73,25,72,21,"key"],[73,28,72,24],[73,33,72,29],[73,40,72,36],[73,42,72,38],[74,16,73,12,"query"],[74,21,73,17],[74,24,73,20,"query"],[74,29,73,25],[74,30,73,26,"limit"],[74,35,73,31],[74,36,73,32,"value"],[74,41,73,47],[74,42,73,48],[75,14,74,10],[75,15,74,11],[75,21,74,17],[76,16,75,12],[77,16,76,12],[77,20,76,12,"_split3"],[77,27,76,12],[77,30,76,45,"value"],[77,35,76,50],[77,36,76,62,"split"],[77,41,76,67],[77,42,76,68],[77,45,76,71],[77,46,76,72],[78,18,76,72,"_split4"],[78,25,76,72],[78,32,76,72,"_slicedToArray2"],[78,47,76,72],[78,48,76,72,"default"],[78,55,76,72],[78,57,76,72,"_split3"],[78,64,76,72],[79,18,76,19,"operator"],[79,26,76,27],[79,29,76,27,"_split4"],[79,36,76,27],[80,18,76,29,"filterValue"],[80,29,76,40],[80,32,76,40,"_split4"],[80,39,76,40],[81,16,77,12],[81,20,77,16,"operator"],[81,28,77,24],[81,33,77,29],[81,37,77,33],[81,39,77,35],[82,18,78,14,"query"],[82,23,78,19],[82,26,78,22,"query"],[82,31,78,27],[82,32,78,28,"eq"],[82,34,78,30],[82,35,78,31,"key"],[82,38,78,34],[82,40,78,36,"filterValue"],[82,51,78,47],[82,52,78,48],[83,16,79,12],[84,14,80,10],[85,12,81,8],[85,13,81,9],[85,14,81,10],[86,10,82,6],[87,10,84,6],[87,14,84,6,"_yield$query"],[87,26,84,6],[87,35,84,36,"query"],[87,40,84,41],[88,12,84,14,"data"],[88,16,84,18],[88,19,84,18,"_yield$query"],[88,31,84,18],[88,32,84,14,"data"],[88,36,84,18],[89,12,84,20,"error"],[89,17,84,25],[89,20,84,25,"_yield$query"],[89,32,84,25],[89,33,84,20,"error"],[89,38,84,25],[90,10,86,6],[90,14,86,10,"error"],[90,19,86,15],[90,21,86,17],[91,12,87,8],[91,19,87,15],[92,14,87,17,"error"],[92,19,87,22],[92,21,87,24],[93,16,87,26,"status"],[93,22,87,32],[93,24,87,34],[93,27,87,37],[94,16,87,39,"data"],[94,20,87,43],[94,22,87,45,"error"],[94,27,87,50],[94,28,87,51,"message"],[95,14,87,59],[96,12,87,61],[96,13,87,62],[97,10,88,6],[98,10,90,6],[98,17,90,13],[99,12,90,15,"data"],[99,16,90,19],[99,18,90,15,"data"],[100,10,90,20],[100,11,90,21],[101,8,91,4],[101,9,91,5],[101,10,91,6],[101,17,91,13,"error"],[101,22,91,18],[101,24,91,20],[102,10,92,6],[102,17,92,13],[103,12,92,15,"error"],[103,17,92,20],[103,19,92,22],[104,14,92,24,"status"],[104,20,92,30],[104,22,92,32],[104,25,92,35],[105,14,92,37,"data"],[105,18,92,41],[105,20,92,43],[106,12,92,74],[107,10,92,76],[107,11,92,77],[108,8,93,4],[109,6,94,2],[109,7,94,3],[110,6,94,3],[110,15,41,2,"baseQuery"],[110,24,41,11,"baseQuery"],[110,25,41,11,"_x"],[110,27,41,11],[111,8,41,11],[111,15,41,11,"_baseQuery"],[111,25,41,11],[111,26,41,11,"apply"],[111,31,41,11],[111,38,41,11,"arguments"],[111,47,41,11],[112,6,41,11],[113,6,41,11],[113,13,41,2,"baseQuery"],[113,22,41,11],[114,4,41,11],[114,7,94,3],[115,4,95,2,"tagTypes"],[115,12,95,10],[115,14,95,12],[115,15,95,13],[115,26,95,24],[115,28,95,26],[115,35,95,33],[115,37,95,35],[115,47,95,45],[115,49,95,47],[115,59,95,57],[115,60,95,58],[116,4,96,2,"endpoints"],[116,13,96,11],[116,15,96,13],[116,24,96,2,"endpoints"],[116,33,96,11,"endpoints"],[116,34,96,14,"builder"],[116,41,96,21],[117,6,96,21],[117,13,96,27],[118,8,97,4,"getTodayStats"],[118,21,97,17],[118,23,97,19,"builder"],[118,30,97,26],[118,31,97,27,"query"],[118,36,97,32],[118,37,97,51],[119,10,98,6,"queryFn"],[119,17,98,13],[120,12,98,13],[120,16,98,13,"_queryFn"],[120,24,98,13],[120,31,98,13,"_asyncToGenerator2"],[120,49,98,13],[120,50,98,13,"default"],[120,57,98,13],[120,59,98,15],[120,72,98,27],[121,14,99,8],[121,18,99,12],[122,16,100,10],[122,20,100,10,"_yield$supabase$auth$2"],[122,42,100,10],[122,51,100,43,"supabase"],[122,67,100,51],[122,68,100,52,"auth"],[122,72,100,56],[122,73,100,57,"getUser"],[122,80,100,64],[122,81,100,65],[122,82,100,66],[123,18,100,26,"user"],[123,22,100,30],[123,25,100,30,"_yield$supabase$auth$2"],[123,47,100,30],[123,48,100,18,"data"],[123,52,100,22],[123,53,100,26,"user"],[123,57,100,30],[124,16,101,10],[124,20,101,14],[124,21,101,15,"user"],[124,25,101,19],[124,27,101,21],[125,18,102,12],[125,25,102,19],[126,20,102,21,"data"],[126,24,102,25],[126,26,102,27],[127,22,102,29,"totalExecutions"],[127,37,102,44],[127,39,102,46],[127,40,102,47],[128,22,102,49,"successRate"],[128,33,102,60],[128,35,102,62],[128,36,102,63],[129,22,102,65,"averageTime"],[129,33,102,76],[129,35,102,78],[129,36,102,79],[130,22,102,81,"timeSaved"],[130,31,102,90],[130,33,102,92],[131,20,102,94],[132,18,102,96],[132,19,102,97],[133,16,103,10],[134,16,105,10],[134,20,105,16,"today"],[134,25,105,21],[134,28,105,24],[134,32,105,28,"Date"],[134,36,105,32],[134,37,105,33],[134,38,105,34],[134,39,105,35,"toISOString"],[134,50,105,46],[134,51,105,47],[134,52,105,48],[134,53,105,49,"split"],[134,58,105,54],[134,59,105,55],[134,62,105,58],[134,63,105,59],[134,64,105,60],[134,65,105,61],[134,66,105,62],[135,16,107,10],[135,20,107,10,"_yield$supabase$from$"],[135,41,107,10],[135,50,107,52,"supabase"],[135,66,107,60],[135,67,108,13,"from"],[135,71,108,17],[135,72,108,18],[135,95,108,41],[135,96,108,42],[135,97,109,13,"select"],[135,103,109,19],[135,104,109,20],[135,128,109,44],[135,129,109,45],[135,130,110,13,"eq"],[135,132,110,15],[135,133,110,16],[135,142,110,25],[135,144,110,27,"user"],[135,148,110,31],[135,149,110,32,"id"],[135,151,110,34],[135,152,110,35],[135,153,111,13,"gte"],[135,156,111,16],[135,157,111,17],[135,169,111,29],[135,171,111,31],[135,174,111,34,"today"],[135,179,111,39],[135,190,111,50],[135,191,111,51],[135,192,112,13,"lte"],[135,195,112,16],[135,196,112,17],[135,208,112,29],[135,210,112,31],[135,213,112,34,"today"],[135,218,112,39],[135,229,112,50],[135,230,112,51],[136,18,107,24,"executions"],[136,28,107,34],[136,31,107,34,"_yield$supabase$from$"],[136,52,107,34],[136,53,107,18,"data"],[136,57,107,22],[137,18,107,36,"error"],[137,23,107,41],[137,26,107,41,"_yield$supabase$from$"],[137,47,107,41],[137,48,107,36,"error"],[137,53,107,41],[138,16,114,10],[138,20,114,14,"error"],[138,25,114,19],[138,27,114,21],[139,18,115,12,"EventLogger"],[139,42,115,23],[139,43,115,24,"error"],[139,48,115,29],[139,49,115,30],[139,54,115,35],[139,56,115,37],[139,85,115,66],[139,87,115,68,"error"],[139,92,115,82],[139,93,115,83],[140,18,116,12],[141,18,117,12],[141,25,117,19],[142,20,117,21,"data"],[142,24,117,25],[142,26,117,27],[143,22,117,29,"totalExecutions"],[143,37,117,44],[143,39,117,46],[143,40,117,47],[144,22,117,49,"successRate"],[144,33,117,60],[144,35,117,62],[144,36,117,63],[145,22,117,65,"averageTime"],[145,33,117,76],[145,35,117,78],[145,36,117,79],[146,22,117,81,"timeSaved"],[146,31,117,90],[146,33,117,92],[147,20,117,94],[148,18,117,96],[148,19,117,97],[149,16,118,10],[150,16,120,10],[150,20,120,14],[150,21,120,15,"executions"],[150,31,120,25],[150,35,120,29,"executions"],[150,45,120,39],[150,46,120,40,"length"],[150,52,120,46],[150,57,120,51],[150,58,120,52],[150,60,120,54],[151,18,121,12],[151,25,121,19],[152,20,121,21,"data"],[152,24,121,25],[152,26,121,27],[153,22,121,29,"totalExecutions"],[153,37,121,44],[153,39,121,46],[153,40,121,47],[154,22,121,49,"successRate"],[154,33,121,60],[154,35,121,62],[154,36,121,63],[155,22,121,65,"averageTime"],[155,33,121,76],[155,35,121,78],[155,36,121,79],[156,22,121,81,"timeSaved"],[156,31,121,90],[156,33,121,92],[157,20,121,94],[158,18,121,96],[158,19,121,97],[159,16,122,10],[160,16,124,10],[160,20,124,16,"successful"],[160,30,124,26],[160,33,124,29,"executions"],[160,43,124,39],[160,44,124,40,"filter"],[160,50,124,46],[160,51,124,47],[160,61,124,47,"e"],[160,62,124,48],[161,18,124,48],[161,25,124,52,"e"],[161,26,124,53],[161,27,124,54,"status"],[161,33,124,60],[161,38,124,65],[161,47,124,74],[162,16,124,74],[162,18,124,75],[163,16,125,10],[163,20,125,16,"totalTime"],[163,29,125,25],[163,32,125,28,"successful"],[163,42,125,38],[163,43,125,39,"reduce"],[163,49,125,45],[163,50,125,46],[163,60,125,47,"acc"],[163,63,125,50],[163,65,125,52,"e"],[163,66,125,53],[164,18,125,53],[164,25,125,58,"acc"],[164,28,125,61],[164,32,125,65,"e"],[164,33,125,66],[164,34,125,67,"execution_time"],[164,48,125,81],[164,52,125,85],[164,53,125,86],[164,54,125,87],[165,16,125,87],[165,19,125,89],[165,20,125,90],[165,21,125,91],[166,16,127,10],[166,23,127,17],[167,18,128,12,"data"],[167,22,128,16],[167,24,128,18],[168,20,129,14,"totalExecutions"],[168,35,129,29],[168,37,129,31,"executions"],[168,47,129,41],[168,48,129,42,"length"],[168,54,129,48],[169,20,130,14,"successRate"],[169,31,130,25],[169,33,130,27,"Math"],[169,37,130,31],[169,38,130,32,"round"],[169,43,130,37],[169,44,130,39,"successful"],[169,54,130,49],[169,55,130,50,"length"],[169,61,130,56],[169,64,130,59,"executions"],[169,74,130,69],[169,75,130,70,"length"],[169,81,130,76],[169,84,130,80],[169,87,130,83],[169,88,130,84],[170,20,131,14,"averageTime"],[170,31,131,25],[170,33,131,27,"successful"],[170,43,131,37],[170,44,131,38,"length"],[170,50,131,44],[170,53,131,47],[170,54,131,48],[170,57,131,51,"Math"],[170,61,131,55],[170,62,131,56,"round"],[170,67,131,61],[170,68,131,62,"totalTime"],[170,77,131,71],[170,80,131,74,"successful"],[170,90,131,84],[170,91,131,85,"length"],[170,97,131,91],[170,98,131,92],[170,101,131,95],[170,102,131,96],[171,20,132,14,"timeSaved"],[171,29,132,23],[171,31,132,25,"Math"],[171,35,132,29],[171,36,132,30,"round"],[171,41,132,35],[171,42,132,36,"totalTime"],[171,51,132,45],[171,54,132,48],[171,58,132,52],[171,61,132,55],[171,62,132,56],[171,63,132,57],[171,64,132,58],[172,18,133,12],[173,16,134,10],[173,17,134,11],[174,14,135,8],[174,15,135,9],[174,16,135,10],[174,23,135,17,"error"],[174,28,135,22],[174,30,135,24],[175,16,136,10,"EventLogger"],[175,40,136,21],[175,41,136,22,"error"],[175,46,136,27],[175,47,136,28],[175,52,136,33],[175,54,136,35],[175,84,136,65],[175,86,136,67,"error"],[175,91,136,81],[175,92,136,82],[176,16,137,10],[177,16,138,10],[177,23,138,17],[178,18,138,19,"data"],[178,22,138,23],[178,24,138,25],[179,20,138,27,"totalExecutions"],[179,35,138,42],[179,37,138,44],[179,38,138,45],[180,20,138,47,"successRate"],[180,31,138,58],[180,33,138,60],[180,34,138,61],[181,20,138,63,"averageTime"],[181,31,138,74],[181,33,138,76],[181,34,138,77],[182,20,138,79,"timeSaved"],[182,29,138,88],[182,31,138,90],[183,18,138,92],[184,16,138,94],[184,17,138,95],[185,14,139,8],[186,12,140,6],[186,13,140,7],[187,12,140,7],[187,21,98,6,"queryFn"],[187,28,98,13,"queryFn"],[187,29,98,13],[188,14,98,13],[188,21,98,13,"_queryFn"],[188,29,98,13],[188,30,98,13,"apply"],[188,35,98,13],[188,42,98,13,"arguments"],[188,51,98,13],[189,12,98,13],[190,12,98,13],[190,19,98,6,"queryFn"],[190,26,98,13],[191,10,98,13],[191,13,140,7],[192,10,141,6,"providesTags"],[192,22,141,18],[192,24,141,20],[192,25,141,21],[192,32,141,28],[193,8,142,4],[193,9,142,5],[193,10,142,6],[194,8,144,4,"getRecentActivity"],[194,25,144,21],[194,27,144,23,"builder"],[194,34,144,30],[194,35,144,31,"query"],[194,40,144,36],[194,41,144,61],[195,10,145,6,"queryFn"],[195,17,145,13],[196,12,145,13],[196,16,145,13,"_queryFn2"],[196,25,145,13],[196,32,145,13,"_asyncToGenerator2"],[196,50,145,13],[196,51,145,13,"default"],[196,58,145,13],[196,60,145,15],[196,73,145,27],[197,14,146,8],[197,18,146,12],[198,16,147,10],[198,20,147,10,"_yield$supabase$auth$3"],[198,42,147,10],[198,51,147,43,"supabase"],[198,67,147,51],[198,68,147,52,"auth"],[198,72,147,56],[198,73,147,57,"getUser"],[198,80,147,64],[198,81,147,65],[198,82,147,66],[199,18,147,26,"user"],[199,22,147,30],[199,25,147,30,"_yield$supabase$auth$3"],[199,47,147,30],[199,48,147,18,"data"],[199,52,147,22],[199,53,147,26,"user"],[199,57,147,30],[200,16,148,10],[200,20,148,14],[200,21,148,15,"user"],[200,25,148,19],[200,27,148,21],[201,18,149,12],[201,25,149,19],[202,20,149,21,"data"],[202,24,149,25],[202,26,149,27],[203,18,149,30],[203,19,149,31],[204,16,150,10],[205,16,152,10],[205,20,152,10,"_yield$supabase$from$2"],[205,42,152,10],[205,51,152,52,"supabase"],[205,67,152,60],[205,68,153,13,"from"],[205,72,153,17],[205,73,153,18],[205,96,153,41],[205,97,153,42],[205,98,154,13,"select"],[205,104,154,19],[205,105,154,20],[205,156,154,71],[205,157,154,72],[205,158,155,13,"eq"],[205,160,155,15],[205,161,155,16],[205,170,155,25],[205,172,155,27,"user"],[205,176,155,31],[205,177,155,32,"id"],[205,179,155,34],[205,180,155,35],[205,181,156,13,"order"],[205,186,156,18],[205,187,156,19],[205,199,156,31],[205,201,156,33],[206,20,156,35,"ascending"],[206,29,156,44],[206,31,156,46],[207,18,156,52],[207,19,156,53],[207,20,156,54],[207,21,157,13,"limit"],[207,26,157,18],[207,27,157,19],[207,28,157,20],[207,29,157,21],[208,18,152,24,"executions"],[208,28,152,34],[208,31,152,34,"_yield$supabase$from$2"],[208,53,152,34],[208,54,152,18,"data"],[208,58,152,22],[209,18,152,36,"error"],[209,23,152,41],[209,26,152,41,"_yield$supabase$from$2"],[209,48,152,41],[209,49,152,36,"error"],[209,54,152,41],[210,16,159,10],[210,20,159,14,"error"],[210,25,159,19],[210,27,159,21],[211,18,160,12,"EventLogger"],[211,42,160,23],[211,43,160,24,"error"],[211,48,160,29],[211,49,160,30],[211,54,160,35],[211,56,160,37],[211,89,160,70],[211,91,160,72,"error"],[211,96,160,86],[211,97,160,87],[212,18,161,12],[212,25,161,19],[213,20,161,21,"data"],[213,24,161,25],[213,26,161,27],[214,18,161,30],[214,19,161,31],[215,16,162,10],[216,16,164,10],[216,20,164,14],[216,21,164,15,"executions"],[216,31,164,25],[216,35,164,29,"executions"],[216,45,164,39],[216,46,164,40,"length"],[216,52,164,46],[216,57,164,51],[216,58,164,52],[216,60,164,54],[217,18,165,12],[217,25,165,19],[218,20,165,21,"data"],[218,24,165,25],[218,26,165,27],[219,18,165,30],[219,19,165,31],[220,16,166,10],[222,16,168,10],[223,16,169,10],[223,20,169,16,"automationIds"],[223,33,169,29],[223,36,169,32,"executions"],[223,46,169,42],[223,47,169,43,"map"],[223,50,169,46],[223,51,169,47],[223,61,169,47,"r"],[223,62,169,48],[224,18,169,48],[224,25,169,52,"r"],[224,26,169,53],[224,27,169,54,"automation_id"],[224,40,169,67],[225,16,169,67],[225,18,169,68],[225,19,169,69,"filter"],[225,25,169,75],[225,26,169,76,"Boolean"],[225,33,169,83],[225,34,169,84],[226,16,170,10],[226,20,170,14,"automationIds"],[226,33,170,27],[226,34,170,28,"length"],[226,40,170,34],[226,45,170,39],[226,46,170,40],[226,48,170,42],[227,18,171,12],[227,25,171,19],[228,20,171,21,"data"],[228,24,171,25],[228,26,171,27],[229,18,171,30],[229,19,171,31],[230,16,172,10],[231,16,174,10],[231,20,174,10,"_yield$supabase$from$3"],[231,42,174,10],[231,51,174,71,"supabase"],[231,67,174,79],[231,68,175,13,"from"],[231,72,175,17],[231,73,175,18],[231,86,175,31],[231,87,175,32],[231,88,176,13,"select"],[231,94,176,19],[231,95,176,20],[231,106,176,31],[231,107,176,32],[231,108,177,13,"in"],[231,110,177,15],[231,111,177,16],[231,115,177,20],[231,117,177,22,"automationIds"],[231,130,177,35],[231,131,177,36],[232,18,174,24,"automations"],[232,29,174,35],[232,32,174,35,"_yield$supabase$from$3"],[232,54,174,35],[232,55,174,18,"data"],[232,59,174,22],[233,18,174,44,"automationsError"],[233,34,174,60],[233,37,174,60,"_yield$supabase$from$3"],[233,59,174,60],[233,60,174,37,"error"],[233,65,174,42],[234,16,179,10],[234,20,179,14,"automationsError"],[234,36,179,30],[234,38,179,32],[235,18,180,12,"EventLogger"],[235,42,180,23],[235,43,180,24,"error"],[235,48,180,29],[235,49,180,30],[235,54,180,35],[235,56,180,37],[235,92,180,73],[235,94,180,75,"automationsError"],[235,110,180,100],[235,111,180,101],[236,16,181,10],[237,16,183,10],[237,20,183,16,"automationMap"],[237,33,183,29],[237,36,183,32],[237,40,183,36,"Map"],[237,43,183,39],[237,44,183,40],[237,45,183,40,"automations"],[237,56,183,51],[237,76,183,40,"automations"],[237,87,183,51],[237,88,183,53,"map"],[237,91,183,56],[237,92,183,57],[237,102,183,57,"a"],[237,103,183,58],[238,18,183,58],[238,25,183,62],[238,26,183,63,"a"],[238,27,183,64],[238,28,183,65,"id"],[238,30,183,67],[238,32,183,69,"a"],[238,33,183,70],[238,34,183,71],[239,16,183,71],[239,18,183,72],[239,23,183,76],[239,25,183,78],[239,26,183,79],[240,16,185,10],[240,23,185,17],[241,18,186,12,"data"],[241,22,186,16],[241,24,186,18,"executions"],[241,34,186,28],[241,35,186,29,"map"],[241,38,186,32],[241,39,186,33],[241,49,186,33,"execution"],[241,58,186,42],[242,20,186,42],[242,27,186,47],[243,22,187,14,"id"],[243,24,187,16],[243,26,187,18,"execution"],[243,35,187,27],[243,36,187,28,"id"],[243,38,187,30],[244,22,188,14,"status"],[244,28,188,20],[244,30,188,22,"execution"],[244,39,188,31],[244,40,188,32,"status"],[244,46,188,38],[245,22,189,14,"executionTime"],[245,35,189,27],[245,37,189,29,"execution"],[245,46,189,38],[245,47,189,39,"execution_time"],[245,61,189,53],[245,65,189,57],[245,66,189,58],[246,22,190,14,"createdAt"],[246,31,190,23],[246,33,190,25,"execution"],[246,42,190,34],[246,43,190,35,"created_at"],[246,53,190,45],[247,22,191,14,"automation"],[247,32,191,24],[247,34,191,26,"automationMap"],[247,47,191,39],[247,48,191,40,"get"],[247,51,191,43],[247,52,191,44,"execution"],[247,61,191,53],[247,62,191,54,"automation_id"],[247,75,191,67],[247,76,191,68],[247,80,191,72],[248,24,192,16,"title"],[248,29,192,21],[248,31,192,23],[248,51,192,43],[249,24,193,16,"icon"],[249,28,193,20],[249,30,193,22],[250,22,194,14],[251,20,195,12],[251,21,195,13],[252,18,195,13],[252,19,195,14],[253,16,196,10],[253,17,196,11],[254,14,197,8],[254,15,197,9],[254,16,197,10],[254,23,197,17,"error"],[254,28,197,22],[254,30,197,24],[255,16,198,10,"EventLogger"],[255,40,198,21],[255,41,198,22,"error"],[255,46,198,27],[255,47,198,28],[255,52,198,33],[255,54,198,35],[255,88,198,69],[255,90,198,71,"error"],[255,95,198,85],[255,96,198,86],[256,16,199,10],[256,23,199,17],[257,18,199,19,"data"],[257,22,199,23],[257,24,199,25],[258,16,199,28],[258,17,199,29],[259,14,200,8],[260,12,201,6],[260,13,201,7],[261,12,201,7],[261,21,145,6,"queryFn"],[261,28,145,13,"queryFn"],[261,29,145,13],[262,14,145,13],[262,21,145,13,"_queryFn2"],[262,30,145,13],[262,31,145,13,"apply"],[262,36,145,13],[262,43,145,13,"arguments"],[262,52,145,13],[263,12,145,13],[264,12,145,13],[264,19,145,6,"queryFn"],[264,26,145,13],[265,10,145,13],[265,13,201,7],[266,10,202,6,"providesTags"],[266,22,202,18],[266,24,202,20],[266,25,202,21],[266,35,202,31],[267,8,203,4],[267,9,203,5],[267,10,203,6],[268,8,205,4,"getFeaturedAutomation"],[268,29,205,25],[268,31,205,27,"builder"],[268,38,205,34],[268,39,205,35,"query"],[268,44,205,40],[268,45,205,74],[269,10,206,6,"queryFn"],[269,17,206,13],[270,12,206,13],[270,16,206,13,"_queryFn3"],[270,25,206,13],[270,32,206,13,"_asyncToGenerator2"],[270,50,206,13],[270,51,206,13,"default"],[270,58,206,13],[270,60,206,15],[270,73,206,27],[271,14,207,8],[271,18,207,12],[272,16,208,10],[272,20,208,10,"_yield$supabase$from$4"],[272,42,208,10],[272,51,208,53,"supabase"],[272,67,208,61],[272,68,209,13,"from"],[272,72,209,17],[272,73,209,18],[272,86,209,31],[272,87,209,32],[272,88,210,13,"select"],[272,94,210,19],[272,95,210,20],[272,170,210,95],[272,171,210,96],[272,172,211,13,"eq"],[272,174,211,15],[272,175,211,16],[272,186,211,27],[272,188,211,29],[272,192,211,33],[272,193,211,34],[272,194,212,13,"eq"],[272,196,212,15],[272,197,212,16],[272,210,212,29],[272,212,212,31],[272,216,212,35],[272,217,212,36],[272,218,213,13,"order"],[272,223,213,18],[272,224,213,19],[272,237,213,32],[272,239,213,34],[273,20,213,36,"ascending"],[273,29,213,45],[273,31,213,47],[274,18,213,53],[274,19,213,54],[274,20,213,55],[274,21,214,13,"limit"],[274,26,214,18],[274,27,214,19],[274,28,214,20],[274,29,214,21],[275,18,208,24,"automations"],[275,29,208,35],[275,32,208,35,"_yield$supabase$from$4"],[275,54,208,35],[275,55,208,18,"data"],[275,59,208,22],[276,18,208,37,"error"],[276,23,208,42],[276,26,208,42,"_yield$supabase$from$4"],[276,48,208,42],[276,49,208,37,"error"],[276,54,208,42],[277,16,216,10],[277,20,216,14,"error"],[277,25,216,19],[277,27,216,21],[278,18,217,12,"EventLogger"],[278,42,217,23],[278,43,217,24,"error"],[278,48,217,29],[278,49,217,30],[278,54,217,35],[278,56,217,37],[278,93,217,74],[278,95,217,76,"error"],[278,100,217,90],[278,101,217,91],[279,18,218,12],[279,25,218,19],[280,20,218,21,"data"],[280,24,218,25],[280,26,218,27],[281,18,218,32],[281,19,218,33],[282,16,219,10],[283,16,221,10],[283,20,221,14],[283,21,221,15,"automations"],[283,32,221,26],[283,36,221,30,"automations"],[283,47,221,41],[283,48,221,42,"length"],[283,54,221,48],[283,59,221,53],[283,60,221,54],[283,62,221,56],[284,18,222,12],[284,25,222,19],[285,20,222,21,"data"],[285,24,222,25],[285,26,222,27],[286,18,222,32],[286,19,222,33],[287,16,223,10],[288,16,225,10],[288,20,225,16,"automation"],[288,30,225,26],[288,33,225,29,"automations"],[288,44,225,40],[288,45,225,41],[288,46,225,42],[288,47,225,43],[290,16,227,10],[291,16,228,10],[291,20,228,10,"_yield$supabase$from$5"],[291,42,228,10],[291,51,228,61,"supabase"],[291,67,228,69],[291,68,229,13,"from"],[291,72,229,17],[291,73,229,18],[291,80,229,25],[291,81,229,26],[291,82,230,13,"select"],[291,88,230,19],[291,89,230,20],[291,107,230,38],[291,108,230,39],[291,109,231,13,"eq"],[291,111,231,15],[291,112,231,16],[291,116,231,20],[291,118,231,22,"automation"],[291,128,231,32],[291,129,231,33,"created_by"],[291,139,231,43],[291,140,231,44],[291,141,232,13,"single"],[291,147,232,19],[291,148,232,20],[291,149,232,21],[292,18,228,24,"userData"],[292,26,228,32],[292,29,228,32,"_yield$supabase$from$5"],[292,51,228,32],[292,52,228,18,"data"],[292,56,228,22],[293,18,228,41,"userError"],[293,27,228,50],[293,30,228,50,"_yield$supabase$from$5"],[293,52,228,50],[293,53,228,34,"error"],[293,58,228,39],[294,16,234,10],[294,20,234,14,"userError"],[294,29,234,23],[294,31,234,25],[295,18,235,12,"EventLogger"],[295,42,235,23],[295,43,235,24,"error"],[295,48,235,29],[295,49,235,30],[295,54,235,35],[295,56,235,37],[295,86,235,67],[295,88,235,69,"userError"],[295,97,235,87],[295,98,235,88],[296,16,236,10],[297,16,238,10],[297,23,238,17],[298,18,239,12,"data"],[298,22,239,16],[298,24,239,18],[299,20,240,14,"id"],[299,22,240,16],[299,24,240,18,"automation"],[299,34,240,28],[299,35,240,29,"id"],[299,37,240,31],[300,20,241,14,"title"],[300,25,241,19],[300,27,241,21,"automation"],[300,37,241,31],[300,38,241,32,"title"],[300,43,241,37],[301,20,242,14,"description"],[301,31,242,25],[301,33,242,27,"automation"],[301,43,242,37],[301,44,242,38,"description"],[301,55,242,49],[302,20,243,14,"category"],[302,28,243,22],[302,30,243,24,"automation"],[302,40,243,34],[302,41,243,35,"category"],[302,49,243,43],[302,53,243,47],[302,67,243,61],[303,20,244,14,"tags"],[303,24,244,18],[303,26,244,20,"automation"],[303,36,244,30],[303,37,244,31,"tags"],[303,41,244,35],[303,45,244,39],[303,47,244,41],[304,20,245,14,"likesCount"],[304,30,245,24],[304,32,245,26,"automation"],[304,42,245,36],[304,43,245,37,"likes_count"],[304,54,245,48],[304,58,245,52],[304,59,245,53],[305,20,246,14,"downloadsCount"],[305,34,246,28],[305,36,246,30,"automation"],[305,46,246,40],[305,47,246,41,"downloads_count"],[305,62,246,56],[305,66,246,60],[305,67,246,61],[306,20,247,14,"createdBy"],[306,29,247,23],[306,31,247,25,"automation"],[306,41,247,35],[306,42,247,36,"created_by"],[306,52,247,46],[307,20,248,14,"user"],[307,24,248,18],[307,26,248,20],[308,22,249,16,"name"],[308,26,249,20],[308,28,249,22],[308,29,249,22,"userData"],[308,37,249,30],[308,57,249,22,"userData"],[308,65,249,30],[308,66,249,32,"name"],[308,70,249,36],[308,75,249,40],[308,86,249,51],[309,22,250,16,"avatarUrl"],[309,31,250,25],[309,33,250,27],[309,34,250,27,"userData"],[309,42,250,35],[309,62,250,27,"userData"],[309,70,250,35],[309,71,250,37,"avatar_url"],[309,81,250,47],[309,86,250,51,"DEFAULT_AVATAR"],[310,20,251,14],[311,18,252,12],[312,16,253,10],[312,17,253,11],[313,14,254,8],[313,15,254,9],[313,16,254,10],[313,23,254,17,"error"],[313,28,254,22],[313,30,254,24],[314,16,255,10,"EventLogger"],[314,40,255,21],[314,41,255,22,"error"],[314,46,255,27],[314,47,255,28],[314,52,255,33],[314,54,255,35],[314,92,255,73],[314,94,255,75,"error"],[314,99,255,89],[314,100,255,90],[315,16,256,10],[315,23,256,17],[316,18,256,19,"data"],[316,22,256,23],[316,24,256,25],[317,16,256,30],[317,17,256,31],[318,14,257,8],[319,12,258,6],[319,13,258,7],[320,12,258,7],[320,21,206,6,"queryFn"],[320,28,206,13,"queryFn"],[320,29,206,13],[321,14,206,13],[321,21,206,13,"_queryFn3"],[321,30,206,13],[321,31,206,13,"apply"],[321,36,206,13],[321,43,206,13,"arguments"],[321,52,206,13],[322,12,206,13],[323,12,206,13],[323,19,206,6,"queryFn"],[323,26,206,13],[324,10,206,13],[324,13,258,7],[325,10,259,6,"providesTags"],[325,22,259,18],[325,24,259,20],[325,25,259,21],[325,35,259,31],[326,8,260,4],[326,9,260,5],[326,10,260,6],[327,8,262,4,"refreshDashboard"],[327,24,262,20],[327,26,262,22,"builder"],[327,33,262,29],[327,34,262,30,"mutation"],[327,42,262,38],[327,43,262,51],[328,10,263,6,"queryFn"],[328,17,263,13],[328,19,263,15],[328,28,263,6,"queryFn"],[328,35,263,13,"queryFn"],[328,36,263,13],[329,12,263,13],[329,19,263,22],[330,14,263,24,"data"],[330,18,263,28],[330,20,263,30],[331,12,263,35],[331,13,263,36],[332,10,263,36],[332,11,263,37],[333,10,264,6,"invalidatesTags"],[333,25,264,21],[333,27,264,23],[333,28,264,24],[333,35,264,31],[333,37,264,33],[333,47,264,43],[333,49,264,45],[333,59,264,55],[334,8,265,4],[334,9,265,5],[335,6,266,2],[335,7,266,3],[336,4,266,3],[337,2,267,0],[337,3,267,1],[337,4,267,2],[338,2,269,7],[338,6,270,2,"useGetTodayStatsQuery"],[338,27,270,23],[338,30,270,23,"exports"],[338,37,270,23],[338,38,270,23,"useGetTodayStatsQuery"],[338,59,270,23],[338,62,274,4,"dashboardApi"],[338,74,274,16],[338,75,270,2,"useGetTodayStatsQuery"],[338,96,270,23],[339,4,271,2,"useGetRecentActivityQuery"],[339,29,271,27],[339,32,271,27,"exports"],[339,39,271,27],[339,40,271,27,"useGetRecentActivityQuery"],[339,65,271,27],[339,68,274,4,"dashboardApi"],[339,80,274,16],[339,81,271,2,"useGetRecentActivityQuery"],[339,106,271,27],[340,4,272,2,"useGetFeaturedAutomationQuery"],[340,33,272,31],[340,36,272,31,"exports"],[340,43,272,31],[340,44,272,31,"useGetFeaturedAutomationQuery"],[340,73,272,31],[340,76,274,4,"dashboardApi"],[340,88,274,16],[340,89,272,2,"useGetFeaturedAutomationQuery"],[340,118,272,31],[341,4,273,2,"useRefreshDashboardMutation"],[341,31,273,29],[341,34,273,29,"exports"],[341,41,273,29],[341,42,273,29,"useRefreshDashboardMutation"],[341,69,273,29],[341,72,274,4,"dashboardApi"],[341,84,274,16],[341,85,273,2,"useRefreshDashboardMutation"],[341,112,273,29],[342,2,274,17],[342,6,274,17,"_default"],[342,14,274,17],[342,17,274,17,"exports"],[342,24,274,17],[342,25,274,17,"default"],[342,32,274,17],[342,35,276,15,"dashboardApi"],[342,47,276,27],[343,0,276,27],[343,3]],"functionMap":{"names":["<global>","createApi$argument_0.baseQuery","Object.entries.forEach$argument_0","createApi$argument_0.endpoints","builder.query$argument_0.queryFn","executions.filter$argument_0","successful.reduce$argument_0","executions.map$argument_0","automations.map$argument_0","builder.mutation$argument_0.queryFn"],"mappings":"AAA;aCwC;uCCyB;SDe;GDa;aGE;eCE;+CC0B,2BD;8CEC,yCF;ODe;eCK;+CGwB,oBH;yDIc,cJ;iCGG;cHS;ODM;eCK;ODoD;eMK,sBN;IHG"}},"type":"js/module"}]}