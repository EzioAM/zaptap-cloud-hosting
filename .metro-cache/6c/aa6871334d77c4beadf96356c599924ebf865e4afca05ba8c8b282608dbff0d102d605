{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@reduxjs/toolkit","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":80,"index":80}}],"key":"54oW2xbJyHE290wIe7uf9enEy7w=","exportNames":["*"]}},{"name":"../../services/offline/OfflineQueue","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":151},"end":{"line":3,"column":84,"index":235}}],"key":"VKX64fMlJtJi8U30CMLuMlZnKHQ=","exportNames":["*"]}},{"name":"../../services/offline/SyncManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":237},"end":{"line":4,"column":92,"index":329}}],"key":"Vx4yphZskdVV1RP6j8VjvWDxHZg=","exportNames":["*"]}},{"name":"../../services/analytics/AnalyticsService","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":331},"end":{"line":5,"column":67,"index":398}}],"key":"NNKdl+byoCYyyYGP/N603C3dfUo=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.updateSyncProgress = exports.updateSettings = exports.updateQueueStatistics = exports.updateNetworkState = exports.toggleAutoSync = exports.setSyncStatus = exports.setLastSyncTime = exports.selectSyncState = exports.selectSyncProgress = exports.selectQueueStats = exports.selectOptimisticUpdates = exports.selectOfflineSettings = exports.selectNetworkState = exports.selectIsSyncing = exports.selectIsOnline = exports.selectIsInitialized = exports.selectFailedOperations = exports.selectConnectionQuality = exports.retryFailedOperations = exports.resetOfflineState = exports.removeOptimisticUpdate = exports.removeFailedOperation = exports.initializeOfflineSystem = exports.forceSync = exports.enqueueOperation = exports.default = exports.clearSyncErrors = exports.clearOptimisticUpdates = exports.clearFailedOperations = exports.clearCompletedOperations = exports.addSyncError = exports.addOptimisticUpdate = exports.addFailedOperation = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _toolkit = require(_dependencyMap[2], \"@reduxjs/toolkit\");\n  var _OfflineQueue = require(_dependencyMap[3], \"../../services/offline/OfflineQueue\");\n  var _SyncManager = require(_dependencyMap[4], \"../../services/offline/SyncManager\");\n  var _AnalyticsService = require(_dependencyMap[5], \"../../services/analytics/AnalyticsService\");\n  /**\r\n   * Network connection state\r\n   */\n\n  /**\r\n   * Queue statistics\r\n   */\n\n  /**\r\n   * Sync state\r\n   */\n\n  /**\r\n   * Failed operation for retry tracking\r\n   */\n\n  /**\r\n   * Complete offline slice state\r\n   */\n\n  /**\r\n   * Initial state\r\n   */\n  var initialState = {\n    network: {\n      isOnline: false,\n      connectionType: 'unknown',\n      isInternetReachable: null,\n      lastConnectedTime: null,\n      connectionQuality: 'offline'\n    },\n    queue: {\n      total: 0,\n      pending: 0,\n      processing: 0,\n      completed: 0,\n      failed: 0,\n      deadLetter: 0\n    },\n    sync: {\n      isSyncing: false,\n      progress: {\n        total: 0,\n        completed: 0,\n        failed: 0,\n        inProgress: false\n      },\n      lastSyncTime: null,\n      nextSyncTime: null,\n      syncErrors: [],\n      autoSyncEnabled: true\n    },\n    failedOperations: [],\n    optimisticUpdates: {},\n    settings: {\n      enableOptimisticUpdates: true,\n      maxRetryAttempts: 3,\n      syncInterval: 30000,\n      // 30 seconds\n      enableBackgroundSync: true\n    },\n    isInitialized: false\n  };\n\n  /**\r\n   * Async thunk to initialize offline system\r\n   */\n  var initializeOfflineSystem = exports.initializeOfflineSystem = (0, _toolkit.createAsyncThunk)('offline/initialize', /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* (_, _ref) {\n      var dispatch = _ref.dispatch;\n      try {\n        _AnalyticsService.logger.info('OfflineSlice: Initializing offline system');\n\n        // Get initial network state\n        var networkInfo = _SyncManager.syncManager.getNetworkInfo();\n        if (networkInfo) {\n          dispatch(updateNetworkState(networkInfo));\n        }\n\n        // Get initial queue stats\n        var queueStats = _OfflineQueue.offlineQueue.getQueueStats();\n        dispatch(updateQueueStatistics(queueStats));\n\n        // Get initial sync state\n        var syncProgress = _SyncManager.syncManager.getSyncProgress();\n        dispatch(updateSyncProgress(syncProgress));\n        _AnalyticsService.logger.info('OfflineSlice: Offline system initialized');\n        return true;\n      } catch (error) {\n        _AnalyticsService.logger.error('OfflineSlice: Failed to initialize offline system', {\n          error: error\n        });\n        throw error;\n      }\n    });\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n\n  /**\r\n   * Async thunk to enqueue operation\r\n   */\n  var enqueueOperation = exports.enqueueOperation = (0, _toolkit.createAsyncThunk)('offline/enqueue', /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2.default)(function* (operation, _ref3) {\n      var dispatch = _ref3.dispatch;\n      try {\n        var operationId = yield _OfflineQueue.offlineQueue.enqueue({\n          type: operation.type,\n          payload: operation.payload,\n          priority: operation.priority || 'normal',\n          maxRetries: operation.maxRetries || 3\n        });\n\n        // Update queue statistics\n        var queueStats = _OfflineQueue.offlineQueue.getQueueStats();\n        dispatch(updateQueueStatistics(queueStats));\n        _AnalyticsService.logger.info('OfflineSlice: Operation enqueued', {\n          operationId: operationId,\n          type: operation.type\n        });\n        return Object.assign({\n          operationId: operationId\n        }, operation);\n      } catch (error) {\n        _AnalyticsService.logger.error('OfflineSlice: Failed to enqueue operation', {\n          type: operation.type,\n          error: error\n        });\n        throw error;\n      }\n    });\n    return function (_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n\n  /**\r\n   * Async thunk to force sync\r\n   */\n  var forceSync = exports.forceSync = (0, _toolkit.createAsyncThunk)('offline/forceSync', /*#__PURE__*/function () {\n    var _ref6 = (0, _asyncToGenerator2.default)(function* (_, _ref5) {\n      var dispatch = _ref5.dispatch;\n      try {\n        _AnalyticsService.logger.info('OfflineSlice: Force sync requested');\n        yield _SyncManager.syncManager.forceSync();\n        return true;\n      } catch (error) {\n        _AnalyticsService.logger.error('OfflineSlice: Force sync failed', {\n          error: error\n        });\n        throw error;\n      }\n    });\n    return function (_x5, _x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }());\n\n  /**\r\n   * Async thunk to retry failed operations\r\n   */\n  var retryFailedOperations = exports.retryFailedOperations = (0, _toolkit.createAsyncThunk)('offline/retryFailed', /*#__PURE__*/function () {\n    var _ref8 = (0, _asyncToGenerator2.default)(function* (operationIds, _ref7) {\n      var dispatch = _ref7.dispatch;\n      try {\n        _AnalyticsService.logger.info('OfflineSlice: Retrying failed operations', {\n          operationIds: (operationIds == null ? void 0 : operationIds.length) || 'all'\n        });\n        var retryCount = 0;\n        if (operationIds && operationIds.length > 0) {\n          // Retry specific operations\n          for (var operationId of operationIds) {\n            var success = yield _OfflineQueue.offlineQueue.requeueFromDeadLetter(operationId);\n            if (success) {\n              retryCount++;\n            }\n          }\n        } else {\n          // Retry all dead letter operations\n          var deadLetterOperations = yield _OfflineQueue.offlineQueue.getDeadLetterQueue();\n          for (var operation of deadLetterOperations) {\n            var _success = yield _OfflineQueue.offlineQueue.requeueFromDeadLetter(operation.id);\n            if (_success) {\n              retryCount++;\n            }\n          }\n        }\n\n        // Update queue stats\n        var queueStats = _OfflineQueue.offlineQueue.getQueueStats();\n        dispatch(updateQueueStatistics(queueStats));\n\n        // Trigger sync if we have requeued operations\n        if (retryCount > 0) {\n          yield _SyncManager.syncManager.forceSync();\n        }\n        _AnalyticsService.logger.info('OfflineSlice: Retried failed operations', {\n          retryCount: retryCount\n        });\n        return retryCount;\n      } catch (error) {\n        _AnalyticsService.logger.error('OfflineSlice: Failed to retry operations', {\n          error: error\n        });\n        throw error;\n      }\n    });\n    return function (_x7, _x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }());\n\n  /**\r\n   * Async thunk to clear completed operations\r\n   */\n  var clearCompletedOperations = exports.clearCompletedOperations = (0, _toolkit.createAsyncThunk)('offline/clearCompleted', /*#__PURE__*/function () {\n    var _ref0 = (0, _asyncToGenerator2.default)(function* (_, _ref9) {\n      var dispatch = _ref9.dispatch;\n      try {\n        _AnalyticsService.logger.info('OfflineSlice: Clearing completed operations');\n        var clearedCount = yield _OfflineQueue.offlineQueue.clearCompleted();\n\n        // Update queue stats\n        var queueStats = _OfflineQueue.offlineQueue.getQueueStats();\n        dispatch(updateQueueStatistics(queueStats));\n        _AnalyticsService.logger.info('OfflineSlice: Cleared completed operations', {\n          count: clearedCount\n        });\n        return clearedCount;\n      } catch (error) {\n        _AnalyticsService.logger.error('OfflineSlice: Failed to clear completed operations', {\n          error: error\n        });\n        throw error;\n      }\n    });\n    return function (_x9, _x0) {\n      return _ref0.apply(this, arguments);\n    };\n  }());\n\n  /**\r\n   * Offline slice\r\n   */\n  var offlineSlice = (0, _toolkit.createSlice)({\n    name: 'offline',\n    initialState: initialState,\n    reducers: {\n      /**\r\n       * Update network state\r\n       */\n      updateNetworkState: function updateNetworkState(state, action) {\n        var _action$payload = action.payload,\n          isConnected = _action$payload.isConnected,\n          type = _action$payload.type,\n          isInternetReachable = _action$payload.isInternetReachable;\n\n        // Track when we went online/offline\n        if (isConnected && !state.network.isOnline) {\n          state.network.lastConnectedTime = Date.now();\n        }\n        state.network.isOnline = isConnected;\n        state.network.connectionType = type;\n        state.network.isInternetReachable = isInternetReachable;\n\n        // Determine connection quality\n        if (!isConnected || isInternetReachable === false) {\n          state.network.connectionQuality = 'offline';\n        } else {\n          switch (type) {\n            case 'wifi':\n            case 'ethernet':\n              state.network.connectionQuality = 'excellent';\n              break;\n            case 'cellular':\n              state.network.connectionQuality = 'good';\n              break;\n            case 'bluetooth':\n            case 'vpn':\n              state.network.connectionQuality = 'fair';\n              break;\n            default:\n              state.network.connectionQuality = 'poor';\n          }\n        }\n      },\n      /**\r\n       * Update queue statistics\r\n       */\n      updateQueueStatistics: function updateQueueStatistics(state, action) {\n        state.queue = action.payload;\n      },\n      /**\r\n       * Update sync progress\r\n       */\n      updateSyncProgress: function updateSyncProgress(state, action) {\n        state.sync.progress = action.payload;\n        state.sync.isSyncing = action.payload.inProgress;\n      },\n      /**\r\n       * Set sync status\r\n       */\n      setSyncStatus: function setSyncStatus(state, action) {\n        state.sync.isSyncing = action.payload;\n        if (!action.payload) {\n          // Reset progress when sync completes\n          state.sync.progress = initialState.sync.progress;\n        }\n      },\n      /**\r\n       * Set last sync time\r\n       */\n      setLastSyncTime: function setLastSyncTime(state, action) {\n        state.sync.lastSyncTime = action.payload;\n      },\n      /**\r\n       * Add sync error\r\n       */\n      addSyncError: function addSyncError(state, action) {\n        state.sync.syncErrors.push(action.payload);\n        // Keep only last 10 errors\n        if (state.sync.syncErrors.length > 10) {\n          state.sync.syncErrors.shift();\n        }\n      },\n      /**\r\n       * Clear sync errors\r\n       */\n      clearSyncErrors: function clearSyncErrors(state) {\n        state.sync.syncErrors = [];\n      },\n      /**\r\n       * Add failed operation\r\n       */\n      addFailedOperation: function addFailedOperation(state, action) {\n        var existingIndex = state.failedOperations.findIndex(function (op) {\n          return op.id === action.payload.id;\n        });\n        if (existingIndex >= 0) {\n          state.failedOperations[existingIndex] = action.payload;\n        } else {\n          state.failedOperations.push(action.payload);\n        }\n\n        // Keep only last 50 failed operations\n        if (state.failedOperations.length > 50) {\n          state.failedOperations.shift();\n        }\n      },\n      /**\r\n       * Remove failed operation\r\n       */\n      removeFailedOperation: function removeFailedOperation(state, action) {\n        state.failedOperations = state.failedOperations.filter(function (op) {\n          return op.id !== action.payload;\n        });\n      },\n      /**\r\n       * Clear failed operations\r\n       */\n      clearFailedOperations: function clearFailedOperations(state) {\n        state.failedOperations = [];\n      },\n      /**\r\n       * Add optimistic update\r\n       */\n      addOptimisticUpdate: function addOptimisticUpdate(state, action) {\n        if (state.settings.enableOptimisticUpdates) {\n          state.optimisticUpdates[action.payload.id] = action.payload.data;\n        }\n      },\n      /**\r\n       * Remove optimistic update\r\n       */\n      removeOptimisticUpdate: function removeOptimisticUpdate(state, action) {\n        delete state.optimisticUpdates[action.payload];\n      },\n      /**\r\n       * Clear all optimistic updates\r\n       */\n      clearOptimisticUpdates: function clearOptimisticUpdates(state) {\n        state.optimisticUpdates = {};\n      },\n      /**\r\n       * Update settings\r\n       */\n      updateSettings: function updateSettings(state, action) {\n        state.settings = Object.assign({}, state.settings, action.payload);\n      },\n      /**\r\n       * Toggle auto sync\r\n       */\n      toggleAutoSync: function toggleAutoSync(state) {\n        state.sync.autoSyncEnabled = !state.sync.autoSyncEnabled;\n      },\n      /**\r\n       * Reset offline state\r\n       */\n      resetOfflineState: function resetOfflineState(state) {\n        return Object.assign({}, initialState, {\n          isInitialized: true\n        });\n      }\n    },\n    extraReducers: function extraReducers(builder) {\n      builder\n      // Initialize offline system\n      .addCase(initializeOfflineSystem.fulfilled, function (state) {\n        state.isInitialized = true;\n      }).addCase(initializeOfflineSystem.rejected, function (state, action) {\n        state.isInitialized = false;\n        if (action.error.message) {\n          state.sync.syncErrors.push(`Initialization failed: ${action.error.message}`);\n        }\n      })\n\n      // Enqueue operation\n      .addCase(enqueueOperation.fulfilled, function (state, action) {\n        _AnalyticsService.logger.info('OfflineSlice: Operation enqueued successfully', {\n          operationId: action.payload.operationId\n        });\n      }).addCase(enqueueOperation.rejected, function (state, action) {\n        if (action.error.message) {\n          state.sync.syncErrors.push(`Failed to enqueue operation: ${action.error.message}`);\n        }\n      })\n\n      // Force sync\n      .addCase(forceSync.pending, function (state) {\n        state.sync.isSyncing = true;\n      }).addCase(forceSync.fulfilled, function (state) {\n        state.sync.lastSyncTime = Date.now();\n      }).addCase(forceSync.rejected, function (state, action) {\n        state.sync.isSyncing = false;\n        if (action.error.message) {\n          state.sync.syncErrors.push(`Force sync failed: ${action.error.message}`);\n        }\n      })\n\n      // Retry failed operations\n      .addCase(retryFailedOperations.fulfilled, function (state, action) {\n        _AnalyticsService.logger.info('OfflineSlice: Successfully retried operations', {\n          count: action.payload\n        });\n      }).addCase(retryFailedOperations.rejected, function (state, action) {\n        if (action.error.message) {\n          state.sync.syncErrors.push(`Failed to retry operations: ${action.error.message}`);\n        }\n      })\n\n      // Clear completed operations\n      .addCase(clearCompletedOperations.fulfilled, function (state, action) {\n        _AnalyticsService.logger.info('OfflineSlice: Successfully cleared completed operations', {\n          count: action.payload\n        });\n      }).addCase(clearCompletedOperations.rejected, function (state, action) {\n        if (action.error.message) {\n          state.sync.syncErrors.push(`Failed to clear completed operations: ${action.error.message}`);\n        }\n      });\n    }\n  });\n\n  // Export actions\n  var _offlineSlice$actions = offlineSlice.actions,\n    updateNetworkState = exports.updateNetworkState = _offlineSlice$actions.updateNetworkState,\n    updateQueueStatistics = exports.updateQueueStatistics = _offlineSlice$actions.updateQueueStatistics,\n    updateSyncProgress = exports.updateSyncProgress = _offlineSlice$actions.updateSyncProgress,\n    setSyncStatus = exports.setSyncStatus = _offlineSlice$actions.setSyncStatus,\n    setLastSyncTime = exports.setLastSyncTime = _offlineSlice$actions.setLastSyncTime,\n    addSyncError = exports.addSyncError = _offlineSlice$actions.addSyncError,\n    clearSyncErrors = exports.clearSyncErrors = _offlineSlice$actions.clearSyncErrors,\n    addFailedOperation = exports.addFailedOperation = _offlineSlice$actions.addFailedOperation,\n    removeFailedOperation = exports.removeFailedOperation = _offlineSlice$actions.removeFailedOperation,\n    clearFailedOperations = exports.clearFailedOperations = _offlineSlice$actions.clearFailedOperations,\n    addOptimisticUpdate = exports.addOptimisticUpdate = _offlineSlice$actions.addOptimisticUpdate,\n    removeOptimisticUpdate = exports.removeOptimisticUpdate = _offlineSlice$actions.removeOptimisticUpdate,\n    clearOptimisticUpdates = exports.clearOptimisticUpdates = _offlineSlice$actions.clearOptimisticUpdates,\n    updateSettings = exports.updateSettings = _offlineSlice$actions.updateSettings,\n    toggleAutoSync = exports.toggleAutoSync = _offlineSlice$actions.toggleAutoSync,\n    resetOfflineState = exports.resetOfflineState = _offlineSlice$actions.resetOfflineState;\n\n  // Selectors\n  var selectNetworkState = exports.selectNetworkState = function selectNetworkState(state) {\n    return state.offline.network;\n  };\n  var selectIsOnline = exports.selectIsOnline = function selectIsOnline(state) {\n    return state.offline.network.isOnline;\n  };\n  var selectConnectionQuality = exports.selectConnectionQuality = function selectConnectionQuality(state) {\n    return state.offline.network.connectionQuality;\n  };\n  var selectQueueStats = exports.selectQueueStats = function selectQueueStats(state) {\n    return state.offline.queue;\n  };\n  var selectSyncState = exports.selectSyncState = function selectSyncState(state) {\n    return state.offline.sync;\n  };\n  var selectIsSyncing = exports.selectIsSyncing = function selectIsSyncing(state) {\n    return state.offline.sync.isSyncing;\n  };\n  var selectSyncProgress = exports.selectSyncProgress = function selectSyncProgress(state) {\n    return state.offline.sync.progress;\n  };\n  var selectFailedOperations = exports.selectFailedOperations = function selectFailedOperations(state) {\n    return state.offline.failedOperations;\n  };\n  var selectOptimisticUpdates = exports.selectOptimisticUpdates = function selectOptimisticUpdates(state) {\n    return state.offline.optimisticUpdates;\n  };\n  var selectOfflineSettings = exports.selectOfflineSettings = function selectOfflineSettings(state) {\n    return state.offline.settings;\n  };\n  var selectIsInitialized = exports.selectIsInitialized = function selectIsInitialized(state) {\n    return state.offline.isInitialized;\n  };\n\n  // Export reducer\n  var _default = exports.default = offlineSlice.reducer;\n});","lineCount":532,"map":[[8,2,1,0],[8,6,1,0,"_toolkit"],[8,14,1,0],[8,17,1,0,"require"],[8,24,1,0],[8,25,1,0,"_dependencyMap"],[8,39,1,0],[9,2,3,0],[9,6,3,0,"_OfflineQueue"],[9,19,3,0],[9,22,3,0,"require"],[9,29,3,0],[9,30,3,0,"_dependencyMap"],[9,44,3,0],[10,2,4,0],[10,6,4,0,"_SyncManager"],[10,18,4,0],[10,21,4,0,"require"],[10,28,4,0],[10,29,4,0,"_dependencyMap"],[10,43,4,0],[11,2,5,0],[11,6,5,0,"_AnalyticsService"],[11,23,5,0],[11,26,5,0,"require"],[11,33,5,0],[11,34,5,0,"_dependencyMap"],[11,48,5,0],[12,2,7,0],[13,0,8,0],[14,0,9,0],[16,2,18,0],[17,0,19,0],[18,0,20,0],[20,2,30,0],[21,0,31,0],[22,0,32,0],[24,2,42,0],[25,0,43,0],[26,0,44,0],[28,2,54,0],[29,0,55,0],[30,0,56,0],[32,2,72,0],[33,0,73,0],[34,0,74,0],[35,2,75,0],[35,6,75,6,"initialState"],[35,18,75,32],[35,21,75,35],[36,4,76,2,"network"],[36,11,76,9],[36,13,76,11],[37,6,77,4,"isOnline"],[37,14,77,12],[37,16,77,14],[37,21,77,19],[38,6,78,4,"connectionType"],[38,20,78,18],[38,22,78,20],[38,31,78,29],[39,6,79,4,"isInternetReachable"],[39,25,79,23],[39,27,79,25],[39,31,79,29],[40,6,80,4,"lastConnectedTime"],[40,23,80,21],[40,25,80,23],[40,29,80,27],[41,6,81,4,"connectionQuality"],[41,23,81,21],[41,25,81,23],[42,4,82,2],[42,5,82,3],[43,4,83,2,"queue"],[43,9,83,7],[43,11,83,9],[44,6,84,4,"total"],[44,11,84,9],[44,13,84,11],[44,14,84,12],[45,6,85,4,"pending"],[45,13,85,11],[45,15,85,13],[45,16,85,14],[46,6,86,4,"processing"],[46,16,86,14],[46,18,86,16],[46,19,86,17],[47,6,87,4,"completed"],[47,15,87,13],[47,17,87,15],[47,18,87,16],[48,6,88,4,"failed"],[48,12,88,10],[48,14,88,12],[48,15,88,13],[49,6,89,4,"deadLetter"],[49,16,89,14],[49,18,89,16],[50,4,90,2],[50,5,90,3],[51,4,91,2,"sync"],[51,8,91,6],[51,10,91,8],[52,6,92,4,"isSyncing"],[52,15,92,13],[52,17,92,15],[52,22,92,20],[53,6,93,4,"progress"],[53,14,93,12],[53,16,93,14],[54,8,94,6,"total"],[54,13,94,11],[54,15,94,13],[54,16,94,14],[55,8,95,6,"completed"],[55,17,95,15],[55,19,95,17],[55,20,95,18],[56,8,96,6,"failed"],[56,14,96,12],[56,16,96,14],[56,17,96,15],[57,8,97,6,"inProgress"],[57,18,97,16],[57,20,97,18],[58,6,98,4],[58,7,98,5],[59,6,99,4,"lastSyncTime"],[59,18,99,16],[59,20,99,18],[59,24,99,22],[60,6,100,4,"nextSyncTime"],[60,18,100,16],[60,20,100,18],[60,24,100,22],[61,6,101,4,"syncErrors"],[61,16,101,14],[61,18,101,16],[61,20,101,18],[62,6,102,4,"autoSyncEnabled"],[62,21,102,19],[62,23,102,21],[63,4,103,2],[63,5,103,3],[64,4,104,2,"failedOperations"],[64,20,104,18],[64,22,104,20],[64,24,104,22],[65,4,105,2,"optimisticUpdates"],[65,21,105,19],[65,23,105,21],[65,24,105,22],[65,25,105,23],[66,4,106,2,"settings"],[66,12,106,10],[66,14,106,12],[67,6,107,4,"enableOptimisticUpdates"],[67,29,107,27],[67,31,107,29],[67,35,107,33],[68,6,108,4,"maxRetryAttempts"],[68,22,108,20],[68,24,108,22],[68,25,108,23],[69,6,109,4,"syncInterval"],[69,18,109,16],[69,20,109,18],[69,25,109,23],[70,6,109,25],[71,6,110,4,"enableBackgroundSync"],[71,26,110,24],[71,28,110,26],[72,4,111,2],[72,5,111,3],[73,4,112,2,"isInitialized"],[73,17,112,15],[73,19,112,17],[74,2,113,0],[74,3,113,1],[76,2,115,0],[77,0,116,0],[78,0,117,0],[79,2,118,7],[79,6,118,13,"initializeOfflineSystem"],[79,29,118,36],[79,32,118,36,"exports"],[79,39,118,36],[79,40,118,36,"initializeOfflineSystem"],[79,63,118,36],[79,66,118,39],[79,70,118,39,"createAsyncThunk"],[79,95,118,55],[79,97,119,2],[79,117,119,22],[80,4,119,22],[80,8,119,22,"_ref2"],[80,13,119,22],[80,20,119,22,"_asyncToGenerator2"],[80,38,119,22],[80,39,119,22,"default"],[80,46,119,22],[80,48,120,2],[80,59,120,9,"_"],[80,60,120,10],[80,62,120,10,"_ref"],[80,66,120,10],[80,68,120,29],[81,6,120,29],[81,10,120,14,"dispatch"],[81,18,120,22],[81,21,120,22,"_ref"],[81,25,120,22],[81,26,120,14,"dispatch"],[81,34,120,22],[82,6,121,4],[82,10,121,8],[83,8,122,6,"logger"],[83,32,122,12],[83,33,122,13,"info"],[83,37,122,17],[83,38,122,18],[83,81,122,61],[83,82,122,62],[85,8,124,6],[86,8,125,6],[86,12,125,12,"networkInfo"],[86,23,125,23],[86,26,125,26,"syncManager"],[86,50,125,37],[86,51,125,38,"getNetworkInfo"],[86,65,125,52],[86,66,125,53],[86,67,125,54],[87,8,126,6],[87,12,126,10,"networkInfo"],[87,23,126,21],[87,25,126,23],[88,10,127,8,"dispatch"],[88,18,127,16],[88,19,127,17,"updateNetworkState"],[88,37,127,35],[88,38,127,36,"networkInfo"],[88,49,127,47],[88,50,127,48],[88,51,127,49],[89,8,128,6],[91,8,130,6],[92,8,131,6],[92,12,131,12,"queueStats"],[92,22,131,22],[92,25,131,25,"offlineQueue"],[92,51,131,37],[92,52,131,38,"getQueueStats"],[92,65,131,51],[92,66,131,52],[92,67,131,53],[93,8,132,6,"dispatch"],[93,16,132,14],[93,17,132,15,"updateQueueStatistics"],[93,38,132,36],[93,39,132,37,"queueStats"],[93,49,132,47],[93,50,132,48],[93,51,132,49],[95,8,134,6],[96,8,135,6],[96,12,135,12,"syncProgress"],[96,24,135,24],[96,27,135,27,"syncManager"],[96,51,135,38],[96,52,135,39,"getSyncProgress"],[96,67,135,54],[96,68,135,55],[96,69,135,56],[97,8,136,6,"dispatch"],[97,16,136,14],[97,17,136,15,"updateSyncProgress"],[97,35,136,33],[97,36,136,34,"syncProgress"],[97,48,136,46],[97,49,136,47],[97,50,136,48],[98,8,138,6,"logger"],[98,32,138,12],[98,33,138,13,"info"],[98,37,138,17],[98,38,138,18],[98,80,138,60],[98,81,138,61],[99,8,139,6],[99,15,139,13],[99,19,139,17],[100,6,140,4],[100,7,140,5],[100,8,140,6],[100,15,140,13,"error"],[100,20,140,18],[100,22,140,20],[101,8,141,6,"logger"],[101,32,141,12],[101,33,141,13,"error"],[101,38,141,18],[101,39,141,19],[101,90,141,70],[101,92,141,72],[102,10,141,74,"error"],[102,15,141,79],[102,17,141,74,"error"],[103,8,141,80],[103,9,141,81],[103,10,141,82],[104,8,142,6],[104,14,142,12,"error"],[104,19,142,17],[105,6,143,4],[106,4,144,2],[106,5,144,3],[107,4,144,3],[107,21,144,3,"_x"],[107,23,144,3],[107,25,144,3,"_x2"],[107,28,144,3],[108,6,144,3],[108,13,144,3,"_ref2"],[108,18,144,3],[108,19,144,3,"apply"],[108,24,144,3],[108,31,144,3,"arguments"],[108,40,144,3],[109,4,144,3],[110,2,144,3],[110,5,145,0],[110,6,145,1],[112,2,147,0],[113,0,148,0],[114,0,149,0],[115,2,150,7],[115,6,150,13,"enqueueOperation"],[115,22,150,29],[115,25,150,29,"exports"],[115,32,150,29],[115,33,150,29,"enqueueOperation"],[115,49,150,29],[115,52,150,32],[115,56,150,32,"createAsyncThunk"],[115,81,150,48],[115,83,151,2],[115,100,151,19],[116,4,151,19],[116,8,151,19,"_ref4"],[116,13,151,19],[116,20,151,19,"_asyncToGenerator2"],[116,38,151,19],[116,39,151,19,"default"],[116,46,151,19],[116,48,152,2],[116,59,152,9,"operation"],[116,68,157,3],[116,70,157,3,"_ref3"],[116,75,157,3],[116,77,157,22],[117,6,157,22],[117,10,157,7,"dispatch"],[117,18,157,15],[117,21,157,15,"_ref3"],[117,26,157,15],[117,27,157,7,"dispatch"],[117,35,157,15],[118,6,158,4],[118,10,158,8],[119,8,159,6],[119,12,159,12,"operationId"],[119,23,159,23],[119,32,159,32,"offlineQueue"],[119,58,159,44],[119,59,159,45,"enqueue"],[119,66,159,52],[119,67,159,53],[120,10,160,8,"type"],[120,14,160,12],[120,16,160,14,"operation"],[120,25,160,23],[120,26,160,24,"type"],[120,30,160,28],[121,10,161,8,"payload"],[121,17,161,15],[121,19,161,17,"operation"],[121,28,161,26],[121,29,161,27,"payload"],[121,36,161,34],[122,10,162,8,"priority"],[122,18,162,16],[122,20,162,18,"operation"],[122,29,162,27],[122,30,162,28,"priority"],[122,38,162,36],[122,42,162,40],[122,50,162,48],[123,10,163,8,"maxRetries"],[123,20,163,18],[123,22,163,20,"operation"],[123,31,163,29],[123,32,163,30,"maxRetries"],[123,42,163,40],[123,46,163,44],[124,8,164,6],[124,9,164,7],[124,10,164,8],[126,8,166,6],[127,8,167,6],[127,12,167,12,"queueStats"],[127,22,167,22],[127,25,167,25,"offlineQueue"],[127,51,167,37],[127,52,167,38,"getQueueStats"],[127,65,167,51],[127,66,167,52],[127,67,167,53],[128,8,168,6,"dispatch"],[128,16,168,14],[128,17,168,15,"updateQueueStatistics"],[128,38,168,36],[128,39,168,37,"queueStats"],[128,49,168,47],[128,50,168,48],[128,51,168,49],[129,8,170,6,"logger"],[129,32,170,12],[129,33,170,13,"info"],[129,37,170,17],[129,38,170,18],[129,72,170,52],[129,74,170,54],[130,10,171,8,"operationId"],[130,21,171,19],[130,23,171,8,"operationId"],[130,34,171,19],[131,10,172,8,"type"],[131,14,172,12],[131,16,172,14,"operation"],[131,25,172,23],[131,26,172,24,"type"],[132,8,173,6],[132,9,173,7],[132,10,173,8],[133,8,175,6],[133,15,175,6,"Object"],[133,21,175,6],[133,22,175,6,"assign"],[133,28,175,6],[134,10,175,15,"operationId"],[134,21,175,26],[134,23,175,15,"operationId"],[135,8,175,26],[135,11,175,31,"operation"],[135,20,175,40],[136,6,176,4],[136,7,176,5],[136,8,176,6],[136,15,176,13,"error"],[136,20,176,18],[136,22,176,20],[137,8,177,6,"logger"],[137,32,177,12],[137,33,177,13,"error"],[137,38,177,18],[137,39,177,19],[137,82,177,62],[137,84,177,64],[138,10,178,8,"type"],[138,14,178,12],[138,16,178,14,"operation"],[138,25,178,23],[138,26,178,24,"type"],[138,30,178,28],[139,10,179,8,"error"],[139,15,179,13],[139,17,179,8,"error"],[140,8,180,6],[140,9,180,7],[140,10,180,8],[141,8,181,6],[141,14,181,12,"error"],[141,19,181,17],[142,6,182,4],[143,4,183,2],[143,5,183,3],[144,4,183,3],[144,21,183,3,"_x3"],[144,24,183,3],[144,26,183,3,"_x4"],[144,29,183,3],[145,6,183,3],[145,13,183,3,"_ref4"],[145,18,183,3],[145,19,183,3,"apply"],[145,24,183,3],[145,31,183,3,"arguments"],[145,40,183,3],[146,4,183,3],[147,2,183,3],[147,5,184,0],[147,6,184,1],[149,2,186,0],[150,0,187,0],[151,0,188,0],[152,2,189,7],[152,6,189,13,"forceSync"],[152,15,189,22],[152,18,189,22,"exports"],[152,25,189,22],[152,26,189,22,"forceSync"],[152,35,189,22],[152,38,189,25],[152,42,189,25,"createAsyncThunk"],[152,67,189,41],[152,69,190,2],[152,88,190,21],[153,4,190,21],[153,8,190,21,"_ref6"],[153,13,190,21],[153,20,190,21,"_asyncToGenerator2"],[153,38,190,21],[153,39,190,21,"default"],[153,46,190,21],[153,48,191,2],[153,59,191,9,"_"],[153,60,191,10],[153,62,191,10,"_ref5"],[153,67,191,10],[153,69,191,29],[154,6,191,29],[154,10,191,14,"dispatch"],[154,18,191,22],[154,21,191,22,"_ref5"],[154,26,191,22],[154,27,191,14,"dispatch"],[154,35,191,22],[155,6,192,4],[155,10,192,8],[156,8,193,6,"logger"],[156,32,193,12],[156,33,193,13,"info"],[156,37,193,17],[156,38,193,18],[156,74,193,54],[156,75,193,55],[157,8,194,6],[157,14,194,12,"syncManager"],[157,38,194,23],[157,39,194,24,"forceSync"],[157,48,194,33],[157,49,194,34],[157,50,194,35],[158,8,195,6],[158,15,195,13],[158,19,195,17],[159,6,196,4],[159,7,196,5],[159,8,196,6],[159,15,196,13,"error"],[159,20,196,18],[159,22,196,20],[160,8,197,6,"logger"],[160,32,197,12],[160,33,197,13,"error"],[160,38,197,18],[160,39,197,19],[160,72,197,52],[160,74,197,54],[161,10,197,56,"error"],[161,15,197,61],[161,17,197,56,"error"],[162,8,197,62],[162,9,197,63],[162,10,197,64],[163,8,198,6],[163,14,198,12,"error"],[163,19,198,17],[164,6,199,4],[165,4,200,2],[165,5,200,3],[166,4,200,3],[166,21,200,3,"_x5"],[166,24,200,3],[166,26,200,3,"_x6"],[166,29,200,3],[167,6,200,3],[167,13,200,3,"_ref6"],[167,18,200,3],[167,19,200,3,"apply"],[167,24,200,3],[167,31,200,3,"arguments"],[167,40,200,3],[168,4,200,3],[169,2,200,3],[169,5,201,0],[169,6,201,1],[171,2,203,0],[172,0,204,0],[173,0,205,0],[174,2,206,7],[174,6,206,13,"retryFailedOperations"],[174,27,206,34],[174,30,206,34,"exports"],[174,37,206,34],[174,38,206,34,"retryFailedOperations"],[174,59,206,34],[174,62,206,37],[174,66,206,37,"createAsyncThunk"],[174,91,206,53],[174,93,207,2],[174,114,207,23],[175,4,207,23],[175,8,207,23,"_ref8"],[175,13,207,23],[175,20,207,23,"_asyncToGenerator2"],[175,38,207,23],[175,39,207,23,"default"],[175,46,207,23],[175,48,208,2],[175,59,208,9,"operationIds"],[175,71,208,32],[175,73,208,32,"_ref7"],[175,78,208,32],[175,80,208,51],[176,6,208,51],[176,10,208,36,"dispatch"],[176,18,208,44],[176,21,208,44,"_ref7"],[176,26,208,44],[176,27,208,36,"dispatch"],[176,35,208,44],[177,6,209,4],[177,10,209,8],[178,8,210,6,"logger"],[178,32,210,12],[178,33,210,13,"info"],[178,37,210,17],[178,38,210,18],[178,80,210,60],[178,82,210,62],[179,10,211,8,"operationIds"],[179,22,211,20],[179,24,211,22],[179,25,211,22,"operationIds"],[179,37,211,34],[179,57,211,22,"operationIds"],[179,69,211,34],[179,70,211,36,"length"],[179,76,211,42],[179,81,211,46],[180,8,212,6],[180,9,212,7],[180,10,212,8],[181,8,214,6],[181,12,214,10,"retryCount"],[181,22,214,20],[181,25,214,23],[181,26,214,24],[182,8,216,6],[182,12,216,10,"operationIds"],[182,24,216,22],[182,28,216,26,"operationIds"],[182,40,216,38],[182,41,216,39,"length"],[182,47,216,45],[182,50,216,48],[182,51,216,49],[182,53,216,51],[183,10,217,8],[184,10,218,8],[184,15,218,13],[184,19,218,19,"operationId"],[184,30,218,30],[184,34,218,34,"operationIds"],[184,46,218,46],[184,48,218,48],[185,12,219,10],[185,16,219,16,"success"],[185,23,219,23],[185,32,219,32,"offlineQueue"],[185,58,219,44],[185,59,219,45,"requeueFromDeadLetter"],[185,80,219,66],[185,81,219,67,"operationId"],[185,92,219,78],[185,93,219,79],[186,12,220,10],[186,16,220,14,"success"],[186,23,220,21],[186,25,220,23],[187,14,221,12,"retryCount"],[187,24,221,22],[187,26,221,24],[188,12,222,10],[189,10,223,8],[190,8,224,6],[190,9,224,7],[190,15,224,13],[191,10,225,8],[192,10,226,8],[192,14,226,14,"deadLetterOperations"],[192,34,226,34],[192,43,226,43,"offlineQueue"],[192,69,226,55],[192,70,226,56,"getDeadLetterQueue"],[192,88,226,74],[192,89,226,75],[192,90,226,76],[193,10,227,8],[193,15,227,13],[193,19,227,19,"operation"],[193,28,227,28],[193,32,227,32,"deadLetterOperations"],[193,52,227,52],[193,54,227,54],[194,12,228,10],[194,16,228,16,"success"],[194,24,228,23],[194,33,228,32,"offlineQueue"],[194,59,228,44],[194,60,228,45,"requeueFromDeadLetter"],[194,81,228,66],[194,82,228,67,"operation"],[194,91,228,76],[194,92,228,77,"id"],[194,94,228,79],[194,95,228,80],[195,12,229,10],[195,16,229,14,"success"],[195,24,229,21],[195,26,229,23],[196,14,230,12,"retryCount"],[196,24,230,22],[196,26,230,24],[197,12,231,10],[198,10,232,8],[199,8,233,6],[201,8,235,6],[202,8,236,6],[202,12,236,12,"queueStats"],[202,22,236,22],[202,25,236,25,"offlineQueue"],[202,51,236,37],[202,52,236,38,"getQueueStats"],[202,65,236,51],[202,66,236,52],[202,67,236,53],[203,8,237,6,"dispatch"],[203,16,237,14],[203,17,237,15,"updateQueueStatistics"],[203,38,237,36],[203,39,237,37,"queueStats"],[203,49,237,47],[203,50,237,48],[203,51,237,49],[205,8,239,6],[206,8,240,6],[206,12,240,10,"retryCount"],[206,22,240,20],[206,25,240,23],[206,26,240,24],[206,28,240,26],[207,10,241,8],[207,16,241,14,"syncManager"],[207,40,241,25],[207,41,241,26,"forceSync"],[207,50,241,35],[207,51,241,36],[207,52,241,37],[208,8,242,6],[209,8,244,6,"logger"],[209,32,244,12],[209,33,244,13,"info"],[209,37,244,17],[209,38,244,18],[209,79,244,59],[209,81,244,61],[210,10,244,63,"retryCount"],[210,20,244,73],[210,22,244,63,"retryCount"],[211,8,244,74],[211,9,244,75],[211,10,244,76],[212,8,245,6],[212,15,245,13,"retryCount"],[212,25,245,23],[213,6,246,4],[213,7,246,5],[213,8,246,6],[213,15,246,13,"error"],[213,20,246,18],[213,22,246,20],[214,8,247,6,"logger"],[214,32,247,12],[214,33,247,13,"error"],[214,38,247,18],[214,39,247,19],[214,81,247,61],[214,83,247,63],[215,10,247,65,"error"],[215,15,247,70],[215,17,247,65,"error"],[216,8,247,71],[216,9,247,72],[216,10,247,73],[217,8,248,6],[217,14,248,12,"error"],[217,19,248,17],[218,6,249,4],[219,4,250,2],[219,5,250,3],[220,4,250,3],[220,21,250,3,"_x7"],[220,24,250,3],[220,26,250,3,"_x8"],[220,29,250,3],[221,6,250,3],[221,13,250,3,"_ref8"],[221,18,250,3],[221,19,250,3,"apply"],[221,24,250,3],[221,31,250,3,"arguments"],[221,40,250,3],[222,4,250,3],[223,2,250,3],[223,5,251,0],[223,6,251,1],[225,2,253,0],[226,0,254,0],[227,0,255,0],[228,2,256,7],[228,6,256,13,"clearCompletedOperations"],[228,30,256,37],[228,33,256,37,"exports"],[228,40,256,37],[228,41,256,37,"clearCompletedOperations"],[228,65,256,37],[228,68,256,40],[228,72,256,40,"createAsyncThunk"],[228,97,256,56],[228,99,257,2],[228,123,257,26],[229,4,257,26],[229,8,257,26,"_ref0"],[229,13,257,26],[229,20,257,26,"_asyncToGenerator2"],[229,38,257,26],[229,39,257,26,"default"],[229,46,257,26],[229,48,258,2],[229,59,258,9,"_"],[229,60,258,10],[229,62,258,10,"_ref9"],[229,67,258,10],[229,69,258,29],[230,6,258,29],[230,10,258,14,"dispatch"],[230,18,258,22],[230,21,258,22,"_ref9"],[230,26,258,22],[230,27,258,14,"dispatch"],[230,35,258,22],[231,6,259,4],[231,10,259,8],[232,8,260,6,"logger"],[232,32,260,12],[232,33,260,13,"info"],[232,37,260,17],[232,38,260,18],[232,83,260,63],[232,84,260,64],[233,8,261,6],[233,12,261,12,"clearedCount"],[233,24,261,24],[233,33,261,33,"offlineQueue"],[233,59,261,45],[233,60,261,46,"clearCompleted"],[233,74,261,60],[233,75,261,61],[233,76,261,62],[235,8,263,6],[236,8,264,6],[236,12,264,12,"queueStats"],[236,22,264,22],[236,25,264,25,"offlineQueue"],[236,51,264,37],[236,52,264,38,"getQueueStats"],[236,65,264,51],[236,66,264,52],[236,67,264,53],[237,8,265,6,"dispatch"],[237,16,265,14],[237,17,265,15,"updateQueueStatistics"],[237,38,265,36],[237,39,265,37,"queueStats"],[237,49,265,47],[237,50,265,48],[237,51,265,49],[238,8,267,6,"logger"],[238,32,267,12],[238,33,267,13,"info"],[238,37,267,17],[238,38,267,18],[238,82,267,62],[238,84,267,64],[239,10,267,66,"count"],[239,15,267,71],[239,17,267,73,"clearedCount"],[240,8,267,86],[240,9,267,87],[240,10,267,88],[241,8,268,6],[241,15,268,13,"clearedCount"],[241,27,268,25],[242,6,269,4],[242,7,269,5],[242,8,269,6],[242,15,269,13,"error"],[242,20,269,18],[242,22,269,20],[243,8,270,6,"logger"],[243,32,270,12],[243,33,270,13,"error"],[243,38,270,18],[243,39,270,19],[243,91,270,71],[243,93,270,73],[244,10,270,75,"error"],[244,15,270,80],[244,17,270,75,"error"],[245,8,270,81],[245,9,270,82],[245,10,270,83],[246,8,271,6],[246,14,271,12,"error"],[246,19,271,17],[247,6,272,4],[248,4,273,2],[248,5,273,3],[249,4,273,3],[249,21,273,3,"_x9"],[249,24,273,3],[249,26,273,3,"_x0"],[249,29,273,3],[250,6,273,3],[250,13,273,3,"_ref0"],[250,18,273,3],[250,19,273,3,"apply"],[250,24,273,3],[250,31,273,3,"arguments"],[250,40,273,3],[251,4,273,3],[252,2,273,3],[252,5,274,0],[252,6,274,1],[254,2,276,0],[255,0,277,0],[256,0,278,0],[257,2,279,0],[257,6,279,6,"offlineSlice"],[257,18,279,18],[257,21,279,21],[257,25,279,21,"createSlice"],[257,45,279,32],[257,47,279,33],[258,4,280,2,"name"],[258,8,280,6],[258,10,280,8],[258,19,280,17],[259,4,281,2,"initialState"],[259,16,281,14],[259,18,281,2,"initialState"],[259,30,281,14],[260,4,282,2,"reducers"],[260,12,282,10],[260,14,282,12],[261,6,283,4],[262,0,284,0],[263,0,285,0],[264,6,286,4,"updateNetworkState"],[264,24,286,22],[264,26,286,24],[264,35,286,4,"updateNetworkState"],[264,53,286,22,"updateNetworkState"],[264,54,286,25,"state"],[264,59,286,30],[264,61,286,32,"action"],[264,67,286,66],[264,69,286,71],[265,8,287,6],[265,12,287,6,"_action$payload"],[265,27,287,6],[265,30,287,57,"action"],[265,36,287,63],[265,37,287,64,"payload"],[265,44,287,71],[266,10,287,14,"isConnected"],[266,21,287,25],[266,24,287,25,"_action$payload"],[266,39,287,25],[266,40,287,14,"isConnected"],[266,51,287,25],[267,10,287,27,"type"],[267,14,287,31],[267,17,287,31,"_action$payload"],[267,32,287,31],[267,33,287,27,"type"],[267,37,287,31],[268,10,287,33,"isInternetReachable"],[268,29,287,52],[268,32,287,52,"_action$payload"],[268,47,287,52],[268,48,287,33,"isInternetReachable"],[268,67,287,52],[270,8,289,6],[271,8,290,6],[271,12,290,10,"isConnected"],[271,23,290,21],[271,27,290,25],[271,28,290,26,"state"],[271,33,290,31],[271,34,290,32,"network"],[271,41,290,39],[271,42,290,40,"isOnline"],[271,50,290,48],[271,52,290,50],[272,10,291,8,"state"],[272,15,291,13],[272,16,291,14,"network"],[272,23,291,21],[272,24,291,22,"lastConnectedTime"],[272,41,291,39],[272,44,291,42,"Date"],[272,48,291,46],[272,49,291,47,"now"],[272,52,291,50],[272,53,291,51],[272,54,291,52],[273,8,292,6],[274,8,294,6,"state"],[274,13,294,11],[274,14,294,12,"network"],[274,21,294,19],[274,22,294,20,"isOnline"],[274,30,294,28],[274,33,294,31,"isConnected"],[274,44,294,42],[275,8,295,6,"state"],[275,13,295,11],[275,14,295,12,"network"],[275,21,295,19],[275,22,295,20,"connectionType"],[275,36,295,34],[275,39,295,37,"type"],[275,43,295,41],[276,8,296,6,"state"],[276,13,296,11],[276,14,296,12,"network"],[276,21,296,19],[276,22,296,20,"isInternetReachable"],[276,41,296,39],[276,44,296,42,"isInternetReachable"],[276,63,296,61],[278,8,298,6],[279,8,299,6],[279,12,299,10],[279,13,299,11,"isConnected"],[279,24,299,22],[279,28,299,26,"isInternetReachable"],[279,47,299,45],[279,52,299,50],[279,57,299,55],[279,59,299,57],[280,10,300,8,"state"],[280,15,300,13],[280,16,300,14,"network"],[280,23,300,21],[280,24,300,22,"connectionQuality"],[280,41,300,39],[280,44,300,42],[280,53,300,51],[281,8,301,6],[281,9,301,7],[281,15,301,13],[282,10,302,8],[282,18,302,16,"type"],[282,22,302,20],[283,12,303,10],[283,17,303,15],[283,23,303,21],[284,12,304,10],[284,17,304,15],[284,27,304,25],[285,14,305,12,"state"],[285,19,305,17],[285,20,305,18,"network"],[285,27,305,25],[285,28,305,26,"connectionQuality"],[285,45,305,43],[285,48,305,46],[285,59,305,57],[286,14,306,12],[287,12,307,10],[287,17,307,15],[287,27,307,25],[288,14,308,12,"state"],[288,19,308,17],[288,20,308,18,"network"],[288,27,308,25],[288,28,308,26,"connectionQuality"],[288,45,308,43],[288,48,308,46],[288,54,308,52],[289,14,309,12],[290,12,310,10],[290,17,310,15],[290,28,310,26],[291,12,311,10],[291,17,311,15],[291,22,311,20],[292,14,312,12,"state"],[292,19,312,17],[292,20,312,18,"network"],[292,27,312,25],[292,28,312,26,"connectionQuality"],[292,45,312,43],[292,48,312,46],[292,54,312,52],[293,14,313,12],[294,12,314,10],[295,14,315,12,"state"],[295,19,315,17],[295,20,315,18,"network"],[295,27,315,25],[295,28,315,26,"connectionQuality"],[295,45,315,43],[295,48,315,46],[295,54,315,52],[296,10,316,8],[297,8,317,6],[298,6,318,4],[298,7,318,5],[299,6,320,4],[300,0,321,0],[301,0,322,0],[302,6,323,4,"updateQueueStatistics"],[302,27,323,25],[302,29,323,27],[302,38,323,4,"updateQueueStatistics"],[302,59,323,25,"updateQueueStatistics"],[302,60,323,28,"state"],[302,65,323,33],[302,67,323,35,"action"],[302,73,323,73],[302,75,323,78],[303,8,324,6,"state"],[303,13,324,11],[303,14,324,12,"queue"],[303,19,324,17],[303,22,324,20,"action"],[303,28,324,26],[303,29,324,27,"payload"],[303,36,324,34],[304,6,325,4],[304,7,325,5],[305,6,327,4],[306,0,328,0],[307,0,329,0],[308,6,330,4,"updateSyncProgress"],[308,24,330,22],[308,26,330,24],[308,35,330,4,"updateSyncProgress"],[308,53,330,22,"updateSyncProgress"],[308,54,330,25,"state"],[308,59,330,30],[308,61,330,32,"action"],[308,67,330,67],[308,69,330,72],[309,8,331,6,"state"],[309,13,331,11],[309,14,331,12,"sync"],[309,18,331,16],[309,19,331,17,"progress"],[309,27,331,25],[309,30,331,28,"action"],[309,36,331,34],[309,37,331,35,"payload"],[309,44,331,42],[310,8,332,6,"state"],[310,13,332,11],[310,14,332,12,"sync"],[310,18,332,16],[310,19,332,17,"isSyncing"],[310,28,332,26],[310,31,332,29,"action"],[310,37,332,35],[310,38,332,36,"payload"],[310,45,332,43],[310,46,332,44,"inProgress"],[310,56,332,54],[311,6,333,4],[311,7,333,5],[312,6,335,4],[313,0,336,0],[314,0,337,0],[315,6,338,4,"setSyncStatus"],[315,19,338,17],[315,21,338,19],[315,30,338,4,"setSyncStatus"],[315,43,338,17,"setSyncStatus"],[315,44,338,20,"state"],[315,49,338,25],[315,51,338,27,"action"],[315,57,338,57],[315,59,338,62],[316,8,339,6,"state"],[316,13,339,11],[316,14,339,12,"sync"],[316,18,339,16],[316,19,339,17,"isSyncing"],[316,28,339,26],[316,31,339,29,"action"],[316,37,339,35],[316,38,339,36,"payload"],[316,45,339,43],[317,8,340,6],[317,12,340,10],[317,13,340,11,"action"],[317,19,340,17],[317,20,340,18,"payload"],[317,27,340,25],[317,29,340,27],[318,10,341,8],[319,10,342,8,"state"],[319,15,342,13],[319,16,342,14,"sync"],[319,20,342,18],[319,21,342,19,"progress"],[319,29,342,27],[319,32,342,30,"initialState"],[319,44,342,42],[319,45,342,43,"sync"],[319,49,342,47],[319,50,342,48,"progress"],[319,58,342,56],[320,8,343,6],[321,6,344,4],[321,7,344,5],[322,6,346,4],[323,0,347,0],[324,0,348,0],[325,6,349,4,"setLastSyncTime"],[325,21,349,19],[325,23,349,21],[325,32,349,4,"setLastSyncTime"],[325,47,349,19,"setLastSyncTime"],[325,48,349,22,"state"],[325,53,349,27],[325,55,349,29,"action"],[325,61,349,58],[325,63,349,63],[326,8,350,6,"state"],[326,13,350,11],[326,14,350,12,"sync"],[326,18,350,16],[326,19,350,17,"lastSyncTime"],[326,31,350,29],[326,34,350,32,"action"],[326,40,350,38],[326,41,350,39,"payload"],[326,48,350,46],[327,6,351,4],[327,7,351,5],[328,6,353,4],[329,0,354,0],[330,0,355,0],[331,6,356,4,"addSyncError"],[331,18,356,16],[331,20,356,18],[331,29,356,4,"addSyncError"],[331,41,356,16,"addSyncError"],[331,42,356,19,"state"],[331,47,356,24],[331,49,356,26,"action"],[331,55,356,55],[331,57,356,60],[332,8,357,6,"state"],[332,13,357,11],[332,14,357,12,"sync"],[332,18,357,16],[332,19,357,17,"syncErrors"],[332,29,357,27],[332,30,357,28,"push"],[332,34,357,32],[332,35,357,33,"action"],[332,41,357,39],[332,42,357,40,"payload"],[332,49,357,47],[332,50,357,48],[333,8,358,6],[334,8,359,6],[334,12,359,10,"state"],[334,17,359,15],[334,18,359,16,"sync"],[334,22,359,20],[334,23,359,21,"syncErrors"],[334,33,359,31],[334,34,359,32,"length"],[334,40,359,38],[334,43,359,41],[334,45,359,43],[334,47,359,45],[335,10,360,8,"state"],[335,15,360,13],[335,16,360,14,"sync"],[335,20,360,18],[335,21,360,19,"syncErrors"],[335,31,360,29],[335,32,360,30,"shift"],[335,37,360,35],[335,38,360,36],[335,39,360,37],[336,8,361,6],[337,6,362,4],[337,7,362,5],[338,6,364,4],[339,0,365,0],[340,0,366,0],[341,6,367,4,"clearSyncErrors"],[341,21,367,19],[341,23,367,21],[341,32,367,4,"clearSyncErrors"],[341,47,367,19,"clearSyncErrors"],[341,48,367,22,"state"],[341,53,367,27],[341,55,367,32],[342,8,368,6,"state"],[342,13,368,11],[342,14,368,12,"sync"],[342,18,368,16],[342,19,368,17,"syncErrors"],[342,29,368,27],[342,32,368,30],[342,34,368,32],[343,6,369,4],[343,7,369,5],[344,6,371,4],[345,0,372,0],[346,0,373,0],[347,6,374,4,"addFailedOperation"],[347,24,374,22],[347,26,374,24],[347,35,374,4,"addFailedOperation"],[347,53,374,22,"addFailedOperation"],[347,54,374,25,"state"],[347,59,374,30],[347,61,374,32,"action"],[347,67,374,70],[347,69,374,75],[348,8,375,6],[348,12,375,12,"existingIndex"],[348,25,375,25],[348,28,375,28,"state"],[348,33,375,33],[348,34,375,34,"failedOperations"],[348,50,375,50],[348,51,375,51,"findIndex"],[348,60,375,60],[348,61,376,8],[348,71,376,8,"op"],[348,73,376,10],[349,10,376,10],[349,17,376,14,"op"],[349,19,376,16],[349,20,376,17,"id"],[349,22,376,19],[349,27,376,24,"action"],[349,33,376,30],[349,34,376,31,"payload"],[349,41,376,38],[349,42,376,39,"id"],[349,44,376,41],[350,8,376,41],[350,9,377,6],[350,10,377,7],[351,8,379,6],[351,12,379,10,"existingIndex"],[351,25,379,23],[351,29,379,27],[351,30,379,28],[351,32,379,30],[352,10,380,8,"state"],[352,15,380,13],[352,16,380,14,"failedOperations"],[352,32,380,30],[352,33,380,31,"existingIndex"],[352,46,380,44],[352,47,380,45],[352,50,380,48,"action"],[352,56,380,54],[352,57,380,55,"payload"],[352,64,380,62],[353,8,381,6],[353,9,381,7],[353,15,381,13],[354,10,382,8,"state"],[354,15,382,13],[354,16,382,14,"failedOperations"],[354,32,382,30],[354,33,382,31,"push"],[354,37,382,35],[354,38,382,36,"action"],[354,44,382,42],[354,45,382,43,"payload"],[354,52,382,50],[354,53,382,51],[355,8,383,6],[357,8,385,6],[358,8,386,6],[358,12,386,10,"state"],[358,17,386,15],[358,18,386,16,"failedOperations"],[358,34,386,32],[358,35,386,33,"length"],[358,41,386,39],[358,44,386,42],[358,46,386,44],[358,48,386,46],[359,10,387,8,"state"],[359,15,387,13],[359,16,387,14,"failedOperations"],[359,32,387,30],[359,33,387,31,"shift"],[359,38,387,36],[359,39,387,37],[359,40,387,38],[360,8,388,6],[361,6,389,4],[361,7,389,5],[362,6,391,4],[363,0,392,0],[364,0,393,0],[365,6,394,4,"removeFailedOperation"],[365,27,394,25],[365,29,394,27],[365,38,394,4,"removeFailedOperation"],[365,59,394,25,"removeFailedOperation"],[365,60,394,28,"state"],[365,65,394,33],[365,67,394,35,"action"],[365,73,394,64],[365,75,394,69],[366,8,395,6,"state"],[366,13,395,11],[366,14,395,12,"failedOperations"],[366,30,395,28],[366,33,395,31,"state"],[366,38,395,36],[366,39,395,37,"failedOperations"],[366,55,395,53],[366,56,395,54,"filter"],[366,62,395,60],[366,63,396,8],[366,73,396,8,"op"],[366,75,396,10],[367,10,396,10],[367,17,396,14,"op"],[367,19,396,16],[367,20,396,17,"id"],[367,22,396,19],[367,27,396,24,"action"],[367,33,396,30],[367,34,396,31,"payload"],[367,41,396,38],[368,8,396,38],[368,9,397,6],[368,10,397,7],[369,6,398,4],[369,7,398,5],[370,6,400,4],[371,0,401,0],[372,0,402,0],[373,6,403,4,"clearFailedOperations"],[373,27,403,25],[373,29,403,27],[373,38,403,4,"clearFailedOperations"],[373,59,403,25,"clearFailedOperations"],[373,60,403,28,"state"],[373,65,403,33],[373,67,403,38],[374,8,404,6,"state"],[374,13,404,11],[374,14,404,12,"failedOperations"],[374,30,404,28],[374,33,404,31],[374,35,404,33],[375,6,405,4],[375,7,405,5],[376,6,407,4],[377,0,408,0],[378,0,409,0],[379,6,410,4,"addOptimisticUpdate"],[379,25,410,23],[379,27,410,25],[379,36,410,4,"addOptimisticUpdate"],[379,55,410,23,"addOptimisticUpdate"],[379,56,410,26,"state"],[379,61,410,31],[379,63,410,33,"action"],[379,69,410,81],[379,71,410,86],[380,8,411,6],[380,12,411,10,"state"],[380,17,411,15],[380,18,411,16,"settings"],[380,26,411,24],[380,27,411,25,"enableOptimisticUpdates"],[380,50,411,48],[380,52,411,50],[381,10,412,8,"state"],[381,15,412,13],[381,16,412,14,"optimisticUpdates"],[381,33,412,31],[381,34,412,32,"action"],[381,40,412,38],[381,41,412,39,"payload"],[381,48,412,46],[381,49,412,47,"id"],[381,51,412,49],[381,52,412,50],[381,55,412,53,"action"],[381,61,412,59],[381,62,412,60,"payload"],[381,69,412,67],[381,70,412,68,"data"],[381,74,412,72],[382,8,413,6],[383,6,414,4],[383,7,414,5],[384,6,416,4],[385,0,417,0],[386,0,418,0],[387,6,419,4,"removeOptimisticUpdate"],[387,28,419,26],[387,30,419,28],[387,39,419,4,"removeOptimisticUpdate"],[387,61,419,26,"removeOptimisticUpdate"],[387,62,419,29,"state"],[387,67,419,34],[387,69,419,36,"action"],[387,75,419,65],[387,77,419,70],[388,8,420,6],[388,15,420,13,"state"],[388,20,420,18],[388,21,420,19,"optimisticUpdates"],[388,38,420,36],[388,39,420,37,"action"],[388,45,420,43],[388,46,420,44,"payload"],[388,53,420,51],[388,54,420,52],[389,6,421,4],[389,7,421,5],[390,6,423,4],[391,0,424,0],[392,0,425,0],[393,6,426,4,"clearOptimisticUpdates"],[393,28,426,26],[393,30,426,28],[393,39,426,4,"clearOptimisticUpdates"],[393,61,426,26,"clearOptimisticUpdates"],[393,62,426,29,"state"],[393,67,426,34],[393,69,426,39],[394,8,427,6,"state"],[394,13,427,11],[394,14,427,12,"optimisticUpdates"],[394,31,427,29],[394,34,427,32],[394,35,427,33],[394,36,427,34],[395,6,428,4],[395,7,428,5],[396,6,430,4],[397,0,431,0],[398,0,432,0],[399,6,433,4,"updateSettings"],[399,20,433,18],[399,22,433,20],[399,31,433,4,"updateSettings"],[399,45,433,18,"updateSettings"],[399,46,433,21,"state"],[399,51,433,26],[399,53,433,28,"action"],[399,59,433,84],[399,61,433,89],[400,8,434,6,"state"],[400,13,434,11],[400,14,434,12,"settings"],[400,22,434,20],[400,25,434,20,"Object"],[400,31,434,20],[400,32,434,20,"assign"],[400,38,434,20],[400,43,434,28,"state"],[400,48,434,33],[400,49,434,34,"settings"],[400,57,434,42],[400,59,434,47,"action"],[400,65,434,53],[400,66,434,54,"payload"],[400,73,434,61],[400,74,434,63],[401,6,435,4],[401,7,435,5],[402,6,437,4],[403,0,438,0],[404,0,439,0],[405,6,440,4,"toggleAutoSync"],[405,20,440,18],[405,22,440,20],[405,31,440,4,"toggleAutoSync"],[405,45,440,18,"toggleAutoSync"],[405,46,440,21,"state"],[405,51,440,26],[405,53,440,31],[406,8,441,6,"state"],[406,13,441,11],[406,14,441,12,"sync"],[406,18,441,16],[406,19,441,17,"autoSyncEnabled"],[406,34,441,32],[406,37,441,35],[406,38,441,36,"state"],[406,43,441,41],[406,44,441,42,"sync"],[406,48,441,46],[406,49,441,47,"autoSyncEnabled"],[406,64,441,62],[407,6,442,4],[407,7,442,5],[408,6,444,4],[409,0,445,0],[410,0,446,0],[411,6,447,4,"resetOfflineState"],[411,23,447,21],[411,25,447,23],[411,34,447,4,"resetOfflineState"],[411,51,447,21,"resetOfflineState"],[411,52,447,24,"state"],[411,57,447,29],[411,59,447,34],[412,8,448,6],[412,15,448,6,"Object"],[412,21,448,6],[412,22,448,6,"assign"],[412,28,448,6],[412,33,448,18,"initialState"],[412,45,448,30],[413,10,448,32,"isInitialized"],[413,23,448,45],[413,25,448,47],[414,8,448,51],[415,6,449,4],[416,4,450,2],[416,5,450,3],[417,4,451,2,"extraReducers"],[417,17,451,15],[417,19,451,17],[417,28,451,2,"extraReducers"],[417,41,451,15,"extraReducers"],[417,42,451,18,"builder"],[417,49,451,25],[417,51,451,30],[418,6,452,4,"builder"],[419,6,453,6],[420,6,453,6],[420,7,454,7,"addCase"],[420,14,454,14],[420,15,454,15,"initializeOfflineSystem"],[420,38,454,38],[420,39,454,39,"fulfilled"],[420,48,454,48],[420,50,454,50],[420,60,454,51,"state"],[420,65,454,56],[420,67,454,61],[421,8,455,8,"state"],[421,13,455,13],[421,14,455,14,"isInitialized"],[421,27,455,27],[421,30,455,30],[421,34,455,34],[422,6,456,6],[422,7,456,7],[422,8,456,8],[422,9,457,7,"addCase"],[422,16,457,14],[422,17,457,15,"initializeOfflineSystem"],[422,40,457,38],[422,41,457,39,"rejected"],[422,49,457,47],[422,51,457,49],[422,61,457,50,"state"],[422,66,457,55],[422,68,457,57,"action"],[422,74,457,63],[422,76,457,68],[423,8,458,8,"state"],[423,13,458,13],[423,14,458,14,"isInitialized"],[423,27,458,27],[423,30,458,30],[423,35,458,35],[424,8,459,8],[424,12,459,12,"action"],[424,18,459,18],[424,19,459,19,"error"],[424,24,459,24],[424,25,459,25,"message"],[424,32,459,32],[424,34,459,34],[425,10,460,10,"state"],[425,15,460,15],[425,16,460,16,"sync"],[425,20,460,20],[425,21,460,21,"syncErrors"],[425,31,460,31],[425,32,460,32,"push"],[425,36,460,36],[425,37,460,37],[425,63,460,63,"action"],[425,69,460,69],[425,70,460,70,"error"],[425,75,460,75],[425,76,460,76,"message"],[425,83,460,83],[425,85,460,85],[425,86,460,86],[426,8,461,8],[427,6,462,6],[427,7,462,7],[429,6,464,6],[430,6,464,6],[430,7,465,7,"addCase"],[430,14,465,14],[430,15,465,15,"enqueueOperation"],[430,31,465,31],[430,32,465,32,"fulfilled"],[430,41,465,41],[430,43,465,43],[430,53,465,44,"state"],[430,58,465,49],[430,60,465,51,"action"],[430,66,465,57],[430,68,465,62],[431,8,466,8,"logger"],[431,32,466,14],[431,33,466,15,"info"],[431,37,466,19],[431,38,466,20],[431,85,466,67],[431,87,466,69],[432,10,467,10,"operationId"],[432,21,467,21],[432,23,467,23,"action"],[432,29,467,29],[432,30,467,30,"payload"],[432,37,467,37],[432,38,467,38,"operationId"],[433,8,468,8],[433,9,468,9],[433,10,468,10],[434,6,469,6],[434,7,469,7],[434,8,469,8],[434,9,470,7,"addCase"],[434,16,470,14],[434,17,470,15,"enqueueOperation"],[434,33,470,31],[434,34,470,32,"rejected"],[434,42,470,40],[434,44,470,42],[434,54,470,43,"state"],[434,59,470,48],[434,61,470,50,"action"],[434,67,470,56],[434,69,470,61],[435,8,471,8],[435,12,471,12,"action"],[435,18,471,18],[435,19,471,19,"error"],[435,24,471,24],[435,25,471,25,"message"],[435,32,471,32],[435,34,471,34],[436,10,472,10,"state"],[436,15,472,15],[436,16,472,16,"sync"],[436,20,472,20],[436,21,472,21,"syncErrors"],[436,31,472,31],[436,32,472,32,"push"],[436,36,472,36],[436,37,472,37],[436,69,472,69,"action"],[436,75,472,75],[436,76,472,76,"error"],[436,81,472,81],[436,82,472,82,"message"],[436,89,472,89],[436,91,472,91],[436,92,472,92],[437,8,473,8],[438,6,474,6],[438,7,474,7],[440,6,476,6],[441,6,476,6],[441,7,477,7,"addCase"],[441,14,477,14],[441,15,477,15,"forceSync"],[441,24,477,24],[441,25,477,25,"pending"],[441,32,477,32],[441,34,477,34],[441,44,477,35,"state"],[441,49,477,40],[441,51,477,45],[442,8,478,8,"state"],[442,13,478,13],[442,14,478,14,"sync"],[442,18,478,18],[442,19,478,19,"isSyncing"],[442,28,478,28],[442,31,478,31],[442,35,478,35],[443,6,479,6],[443,7,479,7],[443,8,479,8],[443,9,480,7,"addCase"],[443,16,480,14],[443,17,480,15,"forceSync"],[443,26,480,24],[443,27,480,25,"fulfilled"],[443,36,480,34],[443,38,480,36],[443,48,480,37,"state"],[443,53,480,42],[443,55,480,47],[444,8,481,8,"state"],[444,13,481,13],[444,14,481,14,"sync"],[444,18,481,18],[444,19,481,19,"lastSyncTime"],[444,31,481,31],[444,34,481,34,"Date"],[444,38,481,38],[444,39,481,39,"now"],[444,42,481,42],[444,43,481,43],[444,44,481,44],[445,6,482,6],[445,7,482,7],[445,8,482,8],[445,9,483,7,"addCase"],[445,16,483,14],[445,17,483,15,"forceSync"],[445,26,483,24],[445,27,483,25,"rejected"],[445,35,483,33],[445,37,483,35],[445,47,483,36,"state"],[445,52,483,41],[445,54,483,43,"action"],[445,60,483,49],[445,62,483,54],[446,8,484,8,"state"],[446,13,484,13],[446,14,484,14,"sync"],[446,18,484,18],[446,19,484,19,"isSyncing"],[446,28,484,28],[446,31,484,31],[446,36,484,36],[447,8,485,8],[447,12,485,12,"action"],[447,18,485,18],[447,19,485,19,"error"],[447,24,485,24],[447,25,485,25,"message"],[447,32,485,32],[447,34,485,34],[448,10,486,10,"state"],[448,15,486,15],[448,16,486,16,"sync"],[448,20,486,20],[448,21,486,21,"syncErrors"],[448,31,486,31],[448,32,486,32,"push"],[448,36,486,36],[448,37,486,37],[448,59,486,59,"action"],[448,65,486,65],[448,66,486,66,"error"],[448,71,486,71],[448,72,486,72,"message"],[448,79,486,79],[448,81,486,81],[448,82,486,82],[449,8,487,8],[450,6,488,6],[450,7,488,7],[452,6,490,6],[453,6,490,6],[453,7,491,7,"addCase"],[453,14,491,14],[453,15,491,15,"retryFailedOperations"],[453,36,491,36],[453,37,491,37,"fulfilled"],[453,46,491,46],[453,48,491,48],[453,58,491,49,"state"],[453,63,491,54],[453,65,491,56,"action"],[453,71,491,62],[453,73,491,67],[454,8,492,8,"logger"],[454,32,492,14],[454,33,492,15,"info"],[454,37,492,19],[454,38,492,20],[454,85,492,67],[454,87,492,69],[455,10,493,10,"count"],[455,15,493,15],[455,17,493,17,"action"],[455,23,493,23],[455,24,493,24,"payload"],[456,8,494,8],[456,9,494,9],[456,10,494,10],[457,6,495,6],[457,7,495,7],[457,8,495,8],[457,9,496,7,"addCase"],[457,16,496,14],[457,17,496,15,"retryFailedOperations"],[457,38,496,36],[457,39,496,37,"rejected"],[457,47,496,45],[457,49,496,47],[457,59,496,48,"state"],[457,64,496,53],[457,66,496,55,"action"],[457,72,496,61],[457,74,496,66],[458,8,497,8],[458,12,497,12,"action"],[458,18,497,18],[458,19,497,19,"error"],[458,24,497,24],[458,25,497,25,"message"],[458,32,497,32],[458,34,497,34],[459,10,498,10,"state"],[459,15,498,15],[459,16,498,16,"sync"],[459,20,498,20],[459,21,498,21,"syncErrors"],[459,31,498,31],[459,32,498,32,"push"],[459,36,498,36],[459,37,498,37],[459,68,498,68,"action"],[459,74,498,74],[459,75,498,75,"error"],[459,80,498,80],[459,81,498,81,"message"],[459,88,498,88],[459,90,498,90],[459,91,498,91],[460,8,499,8],[461,6,500,6],[461,7,500,7],[463,6,502,6],[464,6,502,6],[464,7,503,7,"addCase"],[464,14,503,14],[464,15,503,15,"clearCompletedOperations"],[464,39,503,39],[464,40,503,40,"fulfilled"],[464,49,503,49],[464,51,503,51],[464,61,503,52,"state"],[464,66,503,57],[464,68,503,59,"action"],[464,74,503,65],[464,76,503,70],[465,8,504,8,"logger"],[465,32,504,14],[465,33,504,15,"info"],[465,37,504,19],[465,38,504,20],[465,95,504,77],[465,97,504,79],[466,10,505,10,"count"],[466,15,505,15],[466,17,505,17,"action"],[466,23,505,23],[466,24,505,24,"payload"],[467,8,506,8],[467,9,506,9],[467,10,506,10],[468,6,507,6],[468,7,507,7],[468,8,507,8],[468,9,508,7,"addCase"],[468,16,508,14],[468,17,508,15,"clearCompletedOperations"],[468,41,508,39],[468,42,508,40,"rejected"],[468,50,508,48],[468,52,508,50],[468,62,508,51,"state"],[468,67,508,56],[468,69,508,58,"action"],[468,75,508,64],[468,77,508,69],[469,8,509,8],[469,12,509,12,"action"],[469,18,509,18],[469,19,509,19,"error"],[469,24,509,24],[469,25,509,25,"message"],[469,32,509,32],[469,34,509,34],[470,10,510,10,"state"],[470,15,510,15],[470,16,510,16,"sync"],[470,20,510,20],[470,21,510,21,"syncErrors"],[470,31,510,31],[470,32,510,32,"push"],[470,36,510,36],[470,37,510,37],[470,78,510,78,"action"],[470,84,510,84],[470,85,510,85,"error"],[470,90,510,90],[470,91,510,91,"message"],[470,98,510,98],[470,100,510,100],[470,101,510,101],[471,8,511,8],[472,6,512,6],[472,7,512,7],[472,8,512,8],[473,4,513,2],[474,2,514,0],[474,3,514,1],[474,4,514,2],[476,2,516,0],[477,2,517,7],[477,6,517,7,"_offlineSlice$actions"],[477,27,517,7],[477,30,534,4,"offlineSlice"],[477,42,534,16],[477,43,534,17,"actions"],[477,50,534,24],[478,4,518,2,"updateNetworkState"],[478,22,518,20],[478,25,518,20,"exports"],[478,32,518,20],[478,33,518,20,"updateNetworkState"],[478,51,518,20],[478,54,518,20,"_offlineSlice$actions"],[478,75,518,20],[478,76,518,2,"updateNetworkState"],[478,94,518,20],[479,4,519,2,"updateQueueStatistics"],[479,25,519,23],[479,28,519,23,"exports"],[479,35,519,23],[479,36,519,23,"updateQueueStatistics"],[479,57,519,23],[479,60,519,23,"_offlineSlice$actions"],[479,81,519,23],[479,82,519,2,"updateQueueStatistics"],[479,103,519,23],[480,4,520,2,"updateSyncProgress"],[480,22,520,20],[480,25,520,20,"exports"],[480,32,520,20],[480,33,520,20,"updateSyncProgress"],[480,51,520,20],[480,54,520,20,"_offlineSlice$actions"],[480,75,520,20],[480,76,520,2,"updateSyncProgress"],[480,94,520,20],[481,4,521,2,"setSyncStatus"],[481,17,521,15],[481,20,521,15,"exports"],[481,27,521,15],[481,28,521,15,"setSyncStatus"],[481,41,521,15],[481,44,521,15,"_offlineSlice$actions"],[481,65,521,15],[481,66,521,2,"setSyncStatus"],[481,79,521,15],[482,4,522,2,"setLastSyncTime"],[482,19,522,17],[482,22,522,17,"exports"],[482,29,522,17],[482,30,522,17,"setLastSyncTime"],[482,45,522,17],[482,48,522,17,"_offlineSlice$actions"],[482,69,522,17],[482,70,522,2,"setLastSyncTime"],[482,85,522,17],[483,4,523,2,"addSyncError"],[483,16,523,14],[483,19,523,14,"exports"],[483,26,523,14],[483,27,523,14,"addSyncError"],[483,39,523,14],[483,42,523,14,"_offlineSlice$actions"],[483,63,523,14],[483,64,523,2,"addSyncError"],[483,76,523,14],[484,4,524,2,"clearSyncErrors"],[484,19,524,17],[484,22,524,17,"exports"],[484,29,524,17],[484,30,524,17,"clearSyncErrors"],[484,45,524,17],[484,48,524,17,"_offlineSlice$actions"],[484,69,524,17],[484,70,524,2,"clearSyncErrors"],[484,85,524,17],[485,4,525,2,"addFailedOperation"],[485,22,525,20],[485,25,525,20,"exports"],[485,32,525,20],[485,33,525,20,"addFailedOperation"],[485,51,525,20],[485,54,525,20,"_offlineSlice$actions"],[485,75,525,20],[485,76,525,2,"addFailedOperation"],[485,94,525,20],[486,4,526,2,"removeFailedOperation"],[486,25,526,23],[486,28,526,23,"exports"],[486,35,526,23],[486,36,526,23,"removeFailedOperation"],[486,57,526,23],[486,60,526,23,"_offlineSlice$actions"],[486,81,526,23],[486,82,526,2,"removeFailedOperation"],[486,103,526,23],[487,4,527,2,"clearFailedOperations"],[487,25,527,23],[487,28,527,23,"exports"],[487,35,527,23],[487,36,527,23,"clearFailedOperations"],[487,57,527,23],[487,60,527,23,"_offlineSlice$actions"],[487,81,527,23],[487,82,527,2,"clearFailedOperations"],[487,103,527,23],[488,4,528,2,"addOptimisticUpdate"],[488,23,528,21],[488,26,528,21,"exports"],[488,33,528,21],[488,34,528,21,"addOptimisticUpdate"],[488,53,528,21],[488,56,528,21,"_offlineSlice$actions"],[488,77,528,21],[488,78,528,2,"addOptimisticUpdate"],[488,97,528,21],[489,4,529,2,"removeOptimisticUpdate"],[489,26,529,24],[489,29,529,24,"exports"],[489,36,529,24],[489,37,529,24,"removeOptimisticUpdate"],[489,59,529,24],[489,62,529,24,"_offlineSlice$actions"],[489,83,529,24],[489,84,529,2,"removeOptimisticUpdate"],[489,106,529,24],[490,4,530,2,"clearOptimisticUpdates"],[490,26,530,24],[490,29,530,24,"exports"],[490,36,530,24],[490,37,530,24,"clearOptimisticUpdates"],[490,59,530,24],[490,62,530,24,"_offlineSlice$actions"],[490,83,530,24],[490,84,530,2,"clearOptimisticUpdates"],[490,106,530,24],[491,4,531,2,"updateSettings"],[491,18,531,16],[491,21,531,16,"exports"],[491,28,531,16],[491,29,531,16,"updateSettings"],[491,43,531,16],[491,46,531,16,"_offlineSlice$actions"],[491,67,531,16],[491,68,531,2,"updateSettings"],[491,82,531,16],[492,4,532,2,"toggleAutoSync"],[492,18,532,16],[492,21,532,16,"exports"],[492,28,532,16],[492,29,532,16,"toggleAutoSync"],[492,43,532,16],[492,46,532,16,"_offlineSlice$actions"],[492,67,532,16],[492,68,532,2,"toggleAutoSync"],[492,82,532,16],[493,4,533,2,"resetOfflineState"],[493,21,533,19],[493,24,533,19,"exports"],[493,31,533,19],[493,32,533,19,"resetOfflineState"],[493,49,533,19],[493,52,533,19,"_offlineSlice$actions"],[493,73,533,19],[493,74,533,2,"resetOfflineState"],[493,91,533,19],[495,2,536,0],[496,2,537,7],[496,6,537,13,"selectNetworkState"],[496,24,537,31],[496,27,537,31,"exports"],[496,34,537,31],[496,35,537,31,"selectNetworkState"],[496,53,537,31],[496,56,537,34],[496,65,537,13,"selectNetworkState"],[496,83,537,31,"selectNetworkState"],[496,84,537,35,"state"],[496,89,537,67],[497,4,537,67],[497,11,537,72,"state"],[497,16,537,77],[497,17,537,78,"offline"],[497,24,537,85],[497,25,537,86,"network"],[497,32,537,93],[498,2,537,93],[499,2,538,7],[499,6,538,13,"selectIsOnline"],[499,20,538,27],[499,23,538,27,"exports"],[499,30,538,27],[499,31,538,27,"selectIsOnline"],[499,45,538,27],[499,48,538,30],[499,57,538,13,"selectIsOnline"],[499,71,538,27,"selectIsOnline"],[499,72,538,31,"state"],[499,77,538,63],[500,4,538,63],[500,11,538,68,"state"],[500,16,538,73],[500,17,538,74,"offline"],[500,24,538,81],[500,25,538,82,"network"],[500,32,538,89],[500,33,538,90,"isOnline"],[500,41,538,98],[501,2,538,98],[502,2,539,7],[502,6,539,13,"selectConnectionQuality"],[502,29,539,36],[502,32,539,36,"exports"],[502,39,539,36],[502,40,539,36,"selectConnectionQuality"],[502,63,539,36],[502,66,539,39],[502,75,539,13,"selectConnectionQuality"],[502,98,539,36,"selectConnectionQuality"],[502,99,539,40,"state"],[502,104,539,72],[503,4,539,72],[503,11,539,77,"state"],[503,16,539,82],[503,17,539,83,"offline"],[503,24,539,90],[503,25,539,91,"network"],[503,32,539,98],[503,33,539,99,"connectionQuality"],[503,50,539,116],[504,2,539,116],[505,2,540,7],[505,6,540,13,"selectQueueStats"],[505,22,540,29],[505,25,540,29,"exports"],[505,32,540,29],[505,33,540,29,"selectQueueStats"],[505,49,540,29],[505,52,540,32],[505,61,540,13,"selectQueueStats"],[505,77,540,29,"selectQueueStats"],[505,78,540,33,"state"],[505,83,540,65],[506,4,540,65],[506,11,540,70,"state"],[506,16,540,75],[506,17,540,76,"offline"],[506,24,540,83],[506,25,540,84,"queue"],[506,30,540,89],[507,2,540,89],[508,2,541,7],[508,6,541,13,"selectSyncState"],[508,21,541,28],[508,24,541,28,"exports"],[508,31,541,28],[508,32,541,28,"selectSyncState"],[508,47,541,28],[508,50,541,31],[508,59,541,13,"selectSyncState"],[508,74,541,28,"selectSyncState"],[508,75,541,32,"state"],[508,80,541,64],[509,4,541,64],[509,11,541,69,"state"],[509,16,541,74],[509,17,541,75,"offline"],[509,24,541,82],[509,25,541,83,"sync"],[509,29,541,87],[510,2,541,87],[511,2,542,7],[511,6,542,13,"selectIsSyncing"],[511,21,542,28],[511,24,542,28,"exports"],[511,31,542,28],[511,32,542,28,"selectIsSyncing"],[511,47,542,28],[511,50,542,31],[511,59,542,13,"selectIsSyncing"],[511,74,542,28,"selectIsSyncing"],[511,75,542,32,"state"],[511,80,542,64],[512,4,542,64],[512,11,542,69,"state"],[512,16,542,74],[512,17,542,75,"offline"],[512,24,542,82],[512,25,542,83,"sync"],[512,29,542,87],[512,30,542,88,"isSyncing"],[512,39,542,97],[513,2,542,97],[514,2,543,7],[514,6,543,13,"selectSyncProgress"],[514,24,543,31],[514,27,543,31,"exports"],[514,34,543,31],[514,35,543,31,"selectSyncProgress"],[514,53,543,31],[514,56,543,34],[514,65,543,13,"selectSyncProgress"],[514,83,543,31,"selectSyncProgress"],[514,84,543,35,"state"],[514,89,543,67],[515,4,543,67],[515,11,543,72,"state"],[515,16,543,77],[515,17,543,78,"offline"],[515,24,543,85],[515,25,543,86,"sync"],[515,29,543,90],[515,30,543,91,"progress"],[515,38,543,99],[516,2,543,99],[517,2,544,7],[517,6,544,13,"selectFailedOperations"],[517,28,544,35],[517,31,544,35,"exports"],[517,38,544,35],[517,39,544,35,"selectFailedOperations"],[517,61,544,35],[517,64,544,38],[517,73,544,13,"selectFailedOperations"],[517,95,544,35,"selectFailedOperations"],[517,96,544,39,"state"],[517,101,544,71],[518,4,544,71],[518,11,544,76,"state"],[518,16,544,81],[518,17,544,82,"offline"],[518,24,544,89],[518,25,544,90,"failedOperations"],[518,41,544,106],[519,2,544,106],[520,2,545,7],[520,6,545,13,"selectOptimisticUpdates"],[520,29,545,36],[520,32,545,36,"exports"],[520,39,545,36],[520,40,545,36,"selectOptimisticUpdates"],[520,63,545,36],[520,66,545,39],[520,75,545,13,"selectOptimisticUpdates"],[520,98,545,36,"selectOptimisticUpdates"],[520,99,545,40,"state"],[520,104,545,72],[521,4,545,72],[521,11,545,77,"state"],[521,16,545,82],[521,17,545,83,"offline"],[521,24,545,90],[521,25,545,91,"optimisticUpdates"],[521,42,545,108],[522,2,545,108],[523,2,546,7],[523,6,546,13,"selectOfflineSettings"],[523,27,546,34],[523,30,546,34,"exports"],[523,37,546,34],[523,38,546,34,"selectOfflineSettings"],[523,59,546,34],[523,62,546,37],[523,71,546,13,"selectOfflineSettings"],[523,92,546,34,"selectOfflineSettings"],[523,93,546,38,"state"],[523,98,546,70],[524,4,546,70],[524,11,546,75,"state"],[524,16,546,80],[524,17,546,81,"offline"],[524,24,546,88],[524,25,546,89,"settings"],[524,33,546,97],[525,2,546,97],[526,2,547,7],[526,6,547,13,"selectIsInitialized"],[526,25,547,32],[526,28,547,32,"exports"],[526,35,547,32],[526,36,547,32,"selectIsInitialized"],[526,55,547,32],[526,58,547,35],[526,67,547,13,"selectIsInitialized"],[526,86,547,32,"selectIsInitialized"],[526,87,547,36,"state"],[526,92,547,68],[527,4,547,68],[527,11,547,73,"state"],[527,16,547,78],[527,17,547,79,"offline"],[527,24,547,86],[527,25,547,87,"isInitialized"],[527,38,547,100],[528,2,547,100],[530,2,549,0],[531,2,549,0],[531,6,549,0,"_default"],[531,14,549,0],[531,17,549,0,"exports"],[531,24,549,0],[531,25,549,0,"default"],[531,32,549,0],[531,35,550,15,"offlineSlice"],[531,47,550,27],[531,48,550,28,"reducer"],[531,55,550,35],[532,0,550,35],[532,3]],"functionMap":{"names":["<global>","createAsyncThunk$argument_1","createSlice$argument_0.reducers.updateNetworkState","createSlice$argument_0.reducers.updateQueueStatistics","createSlice$argument_0.reducers.updateSyncProgress","createSlice$argument_0.reducers.setSyncStatus","createSlice$argument_0.reducers.setLastSyncTime","createSlice$argument_0.reducers.addSyncError","createSlice$argument_0.reducers.clearSyncErrors","createSlice$argument_0.reducers.addFailedOperation","state.failedOperations.findIndex$argument_0","createSlice$argument_0.reducers.removeFailedOperation","state.failedOperations.filter$argument_0","createSlice$argument_0.reducers.clearFailedOperations","createSlice$argument_0.reducers.addOptimisticUpdate","createSlice$argument_0.reducers.removeOptimisticUpdate","createSlice$argument_0.reducers.clearOptimisticUpdates","createSlice$argument_0.reducers.updateSettings","createSlice$argument_0.reducers.toggleAutoSync","createSlice$argument_0.reducers.resetOfflineState","createSlice$argument_0.extraReducers","builder.addCase$argument_1","builder.addCase.addCase$argument_1","builder.addCase.addCase.addCase$argument_1","builder.addCase.addCase.addCase.addCase$argument_1","builder.addCase...addCase.addCase$argument_1","selectNetworkState","selectIsOnline","selectConnectionQuality","selectQueueStats","selectSyncState","selectIsSyncing","selectSyncProgress","selectFailedOperations","selectOptimisticUpdates","selectOfflineSettings","selectIsInitialized"],"mappings":"AAA;ECuH;GDwB;ECQ;GD+B;ECQ;GDS;ECQ;GD0C;ECQ;GDe;wBEa;KFgC;2BGK;KHE;wBIK;KJG;mBKK;KLM;qBMK;KNE;kBOK;KPM;qBQK;KRE;wBSK;QCE,iCD;KTa;2BWK;QCE,8BD;KXE;2BaK;KbE;yBcK;KdI;4BeK;KfE;4BgBK;KhBE;oBiBK;KjBE;oBkBK;KlBE;uBmBK;KnBE;iBoBE;kDCG;ODE;iDEC;OFK;2CGG;OHI;0CIC;OJI;kCKG;OLE;oCKC;OLE;mCKC;OLK;gDKG;OLI;+CKC;OLI;mDKG;OLI;kDKC;OLI;GpBC;kC0BwB,2D1B;8B2BC,oE3B;uC4BC,6E5B;gC6BC,yD7B;+B8BC,wD9B;+B+BC,kE/B;kCgCC,iEhC;sCiCC,oEjC;uCkCC,qElC;qCmCC,4DnC;mCoCC,iEpC"}},"type":"js/module"}]}