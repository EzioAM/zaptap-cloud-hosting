{"dependencies":[{"name":"./util","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":28,"index":28}}],"key":"hA8WsniBZrUJ/dmBZgrNdZcEmJ8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var util = require(_dependencyMap[0], \"./util\");\n\n  // decode text bytes from ndef record payload\n  // @returns a string\n  function decode(data) {\n    var languageCodeLength = data[0] & 0x3f; // 6 LSBs\n    // languageCode = data.slice(1, 1 + languageCodeLength),\n    // utf16 = (data[0] & 0x80) !== 0; // assuming UTF-16BE\n\n    // TODO need to deal with UTF in the future\n    // console.log(\"lang \" + languageCode + (utf16 ? \" utf16\" : \" utf8\"));\n\n    return util.bytesToString(data.slice(languageCodeLength + 1));\n  }\n\n  // encode text payload\n  // @returns an array of bytes\n  function encode(text, lang, encoding) {\n    // ISO/IANA language code, but we're not enforcing\n    if (!lang) {\n      lang = 'en';\n    }\n    var encoded = util.stringToBytes(lang + text);\n    encoded.unshift(lang.length);\n    return encoded;\n  }\n  module.exports = {\n    encodePayload: encode,\n    decodePayload: decode\n  };\n});","lineCount":32,"map":[[2,2,1,0],[2,6,1,4,"util"],[2,10,1,8],[2,13,1,11,"require"],[2,20,1,18],[2,21,1,18,"_dependencyMap"],[2,35,1,18],[2,48,1,27],[2,49,1,28],[4,2,3,0],[5,2,4,0],[6,2,5,0],[6,11,5,9,"decode"],[6,17,5,15,"decode"],[6,18,5,16,"data"],[6,22,5,20],[6,24,5,22],[7,4,6,2],[7,8,6,6,"languageCodeLength"],[7,26,6,24],[7,29,6,27,"data"],[7,33,6,31],[7,34,6,32],[7,35,6,33],[7,36,6,34],[7,39,6,37],[7,43,6,41],[7,44,6,42],[7,45,6,43],[8,4,7,2],[9,4,8,2],[11,4,10,2],[12,4,11,2],[14,4,13,2],[14,11,13,9,"util"],[14,15,13,13],[14,16,13,14,"bytesToString"],[14,29,13,27],[14,30,13,28,"data"],[14,34,13,32],[14,35,13,33,"slice"],[14,40,13,38],[14,41,13,39,"languageCodeLength"],[14,59,13,57],[14,62,13,60],[14,63,13,61],[14,64,13,62],[14,65,13,63],[15,2,14,0],[17,2,16,0],[18,2,17,0],[19,2,18,0],[19,11,18,9,"encode"],[19,17,18,15,"encode"],[19,18,18,16,"text"],[19,22,18,20],[19,24,18,22,"lang"],[19,28,18,26],[19,30,18,28,"encoding"],[19,38,18,36],[19,40,18,38],[20,4,19,2],[21,4,20,2],[21,8,20,6],[21,9,20,7,"lang"],[21,13,20,11],[21,15,20,13],[22,6,21,4,"lang"],[22,10,21,8],[22,13,21,11],[22,17,21,15],[23,4,22,2],[24,4,24,2],[24,8,24,6,"encoded"],[24,15,24,13],[24,18,24,16,"util"],[24,22,24,20],[24,23,24,21,"stringToBytes"],[24,36,24,34],[24,37,24,35,"lang"],[24,41,24,39],[24,44,24,42,"text"],[24,48,24,46],[24,49,24,47],[25,4,25,2,"encoded"],[25,11,25,9],[25,12,25,10,"unshift"],[25,19,25,17],[25,20,25,18,"lang"],[25,24,25,22],[25,25,25,23,"length"],[25,31,25,29],[25,32,25,30],[26,4,27,2],[26,11,27,9,"encoded"],[26,18,27,16],[27,2,28,0],[28,2,30,0,"module"],[28,8,30,6],[28,9,30,7,"exports"],[28,16,30,14],[28,19,30,17],[29,4,31,2,"encodePayload"],[29,17,31,15],[29,19,31,17,"encode"],[29,25,31,23],[30,4,32,2,"decodePayload"],[30,17,32,15],[30,19,32,17,"decode"],[31,2,33,0],[31,3,33,1],[32,0,33,2],[32,3]],"functionMap":{"names":["<global>","decode","encode"],"mappings":"AAA;ACI;CDS;AEI;CFU"}},"type":"js/module"}]}