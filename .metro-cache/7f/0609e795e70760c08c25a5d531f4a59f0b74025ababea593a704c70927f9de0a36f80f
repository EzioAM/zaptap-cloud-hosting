{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":46},"end":{"line":2,"column":57,"index":103}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"./AssetSourceResolver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":104},"end":{"line":3,"column":56,"index":160}}],"key":"1XREZLfiB40YsGJEOFyn6rrYKeQ=","exportNames":["*"]}},{"name":"./PlatformUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":161},"end":{"line":4,"column":64,"index":225}}],"key":"vk5TSZJTws6vRpll7frKCvmMWgw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.resolveUri = resolveUri;\n  exports.selectAssetSource = selectAssetSource;\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _AssetSourceResolver = _interopRequireDefault(require(_dependencyMap[3], \"./AssetSourceResolver\"));\n  var _PlatformUtils = require(_dependencyMap[4], \"./PlatformUtils\");\n  /**\n   * Selects the best file for the given asset (ex: choosing the best scale for images) and returns\n   * a { uri, hash } pair for the specific asset file.\n   *\n   * If the asset isn't an image with multiple scales, the first file is selected.\n   */\n  function selectAssetSource(meta) {\n    var _meta$fileHashes$inde, _meta$fileUris$index, _manifest2$extra;\n    // This logic is based on that of AssetSourceResolver, with additional support for file hashes and\n    // explicitly provided URIs\n    var scale = _AssetSourceResolver.default.pickScale(meta.scales, _reactNative.PixelRatio.get());\n    var index = meta.scales.findIndex(function (s) {\n      return s === scale;\n    });\n    var hash = meta.fileHashes ? (_meta$fileHashes$inde = meta.fileHashes[index]) != null ? _meta$fileHashes$inde : meta.fileHashes[0] : meta.hash;\n    // Allow asset processors to directly provide the URL to load\n    var uri = meta.fileUris ? (_meta$fileUris$index = meta.fileUris[index]) != null ? _meta$fileUris$index : meta.fileUris[0] : meta.uri;\n    if (uri) {\n      return {\n        uri: resolveUri(uri),\n        hash: hash\n      };\n    }\n    var fileScale = scale === 1 ? '' : `@${scale}x`;\n    var fileExtension = meta.type ? `.${encodeURIComponent(meta.type)}` : '';\n    var suffix = `/${encodeURIComponent(meta.name)}${fileScale}${fileExtension}`;\n    var params = new URLSearchParams({\n      platform: _expoModulesCore.Platform.OS,\n      hash: meta.hash\n    });\n    // For assets with a specified absolute URL, we use the existing origin instead of prepending the\n    // development server or production CDN URL origin\n    if (/^https?:\\/\\//.test(meta.httpServerLocation)) {\n      var _uri = meta.httpServerLocation + suffix + '?' + params;\n      return {\n        uri: _uri,\n        hash: hash\n      };\n    }\n    // For assets during development using manifest2, we use the development server's URL origin\n    var manifest2 = (0, _PlatformUtils.getManifest2)();\n    var devServerUrl = manifest2 != null && (_manifest2$extra = manifest2.extra) != null && (_manifest2$extra = _manifest2$extra.expoGo) != null && _manifest2$extra.developer ? 'http://' + manifest2.extra.expoGo.debuggerHost : null;\n    if (devServerUrl) {\n      var baseUrl = new URL(meta.httpServerLocation + suffix, devServerUrl);\n      baseUrl.searchParams.set('platform', _expoModulesCore.Platform.OS);\n      baseUrl.searchParams.set('hash', meta.hash);\n      return {\n        uri: baseUrl.href,\n        hash: hash\n      };\n    }\n    // Temporary fallback for loading assets in Expo Go home\n    if (_reactNative.NativeModules['ExponentKernel']) {\n      return {\n        uri: `https://classic-assets.eascdn.net/~assets/${encodeURIComponent(hash)}`,\n        hash: hash\n      };\n    }\n    // In correctly configured apps, we arrive here if the asset is locally available on disk due to\n    // being managed by expo-updates, and `getLocalAssetUri(hash)` must return a local URI for this\n    // hash. Since the asset is local, we don't have a remote URL and specify an invalid URL (an empty\n    // string) as a placeholder.\n    return {\n      uri: '',\n      hash: hash\n    };\n  }\n  /**\n   * Resolves the given URI to an absolute URI. If the given URI is already an absolute URI, it is\n   * simply returned. Otherwise, if it is a relative URI, it is resolved relative to the manifest's\n   * base URI.\n   */\n  function resolveUri(uri) {\n    // `manifestBaseUrl` is always an absolute URL or `null`.\n    return _PlatformUtils.manifestBaseUrl ? new URL(uri, _PlatformUtils.manifestBaseUrl).href : uri;\n  }\n});","lineCount":88,"map":[[8,2,1,0],[8,6,1,0,"_expoModulesCore"],[8,22,1,0],[8,25,1,0,"require"],[8,32,1,0],[8,33,1,0,"_dependencyMap"],[8,47,1,0],[9,2,2,0],[9,6,2,0,"_reactNative"],[9,18,2,0],[9,21,2,0,"require"],[9,28,2,0],[9,29,2,0,"_dependencyMap"],[9,43,2,0],[10,2,3,0],[10,6,3,0,"_AssetSourceResolver"],[10,26,3,0],[10,29,3,0,"_interopRequireDefault"],[10,51,3,0],[10,52,3,0,"require"],[10,59,3,0],[10,60,3,0,"_dependencyMap"],[10,74,3,0],[11,2,4,0],[11,6,4,0,"_PlatformUtils"],[11,20,4,0],[11,23,4,0,"require"],[11,30,4,0],[11,31,4,0,"_dependencyMap"],[11,45,4,0],[12,2,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,2,11,7],[18,11,11,16,"selectAssetSource"],[18,28,11,33,"selectAssetSource"],[18,29,11,34,"meta"],[18,33,11,38],[18,35,11,40],[19,4,11,40],[19,8,11,40,"_meta$fileHashes$inde"],[19,29,11,40],[19,31,11,40,"_meta$fileUris$index"],[19,51,11,40],[19,53,11,40,"_manifest2$extra"],[19,69,11,40],[20,4,12,4],[21,4,13,4],[22,4,14,4],[22,8,14,10,"scale"],[22,13,14,15],[22,16,14,18,"AssetSourceResolver"],[22,44,14,37],[22,45,14,38,"pickScale"],[22,54,14,47],[22,55,14,48,"meta"],[22,59,14,52],[22,60,14,53,"scales"],[22,66,14,59],[22,68,14,61,"PixelRatio"],[22,91,14,71],[22,92,14,72,"get"],[22,95,14,75],[22,96,14,76],[22,97,14,77],[22,98,14,78],[23,4,15,4],[23,8,15,10,"index"],[23,13,15,15],[23,16,15,18,"meta"],[23,20,15,22],[23,21,15,23,"scales"],[23,27,15,29],[23,28,15,30,"findIndex"],[23,37,15,39],[23,38,15,40],[23,48,15,41,"s"],[23,49,15,42],[24,6,15,42],[24,13,15,47,"s"],[24,14,15,48],[24,19,15,53,"scale"],[24,24,15,58],[25,4,15,58],[25,6,15,59],[26,4,16,4],[26,8,16,10,"hash"],[26,12,16,14],[26,15,16,17,"meta"],[26,19,16,21],[26,20,16,22,"fileHashes"],[26,30,16,32],[26,34,16,32,"_meta$fileHashes$inde"],[26,55,16,32],[26,58,16,36,"meta"],[26,62,16,40],[26,63,16,41,"fileHashes"],[26,73,16,51],[26,74,16,52,"index"],[26,79,16,57],[26,80,16,58],[26,92,16,58,"_meta$fileHashes$inde"],[26,113,16,58],[26,116,16,62,"meta"],[26,120,16,66],[26,121,16,67,"fileHashes"],[26,131,16,77],[26,132,16,78],[26,133,16,79],[26,134,16,80],[26,137,16,84,"meta"],[26,141,16,88],[26,142,16,89,"hash"],[26,146,16,93],[27,4,17,4],[28,4,18,4],[28,8,18,10,"uri"],[28,11,18,13],[28,14,18,16,"meta"],[28,18,18,20],[28,19,18,21,"fileUris"],[28,27,18,29],[28,31,18,29,"_meta$fileUris$index"],[28,51,18,29],[28,54,18,33,"meta"],[28,58,18,37],[28,59,18,38,"fileUris"],[28,67,18,46],[28,68,18,47,"index"],[28,73,18,52],[28,74,18,53],[28,86,18,53,"_meta$fileUris$index"],[28,106,18,53],[28,109,18,57,"meta"],[28,113,18,61],[28,114,18,62,"fileUris"],[28,122,18,70],[28,123,18,71],[28,124,18,72],[28,125,18,73],[28,128,18,77,"meta"],[28,132,18,81],[28,133,18,82,"uri"],[28,136,18,85],[29,4,19,4],[29,8,19,8,"uri"],[29,11,19,11],[29,13,19,13],[30,6,20,8],[30,13,20,15],[31,8,20,17,"uri"],[31,11,20,20],[31,13,20,22,"resolveUri"],[31,23,20,32],[31,24,20,33,"uri"],[31,27,20,36],[31,28,20,37],[32,8,20,39,"hash"],[32,12,20,43],[32,14,20,39,"hash"],[33,6,20,44],[33,7,20,45],[34,4,21,4],[35,4,22,4],[35,8,22,10,"fileScale"],[35,17,22,19],[35,20,22,22,"scale"],[35,25,22,27],[35,30,22,32],[35,31,22,33],[35,34,22,36],[35,36,22,38],[35,39,22,41],[35,43,22,45,"scale"],[35,48,22,50],[35,51,22,53],[36,4,23,4],[36,8,23,10,"fileExtension"],[36,21,23,23],[36,24,23,26,"meta"],[36,28,23,30],[36,29,23,31,"type"],[36,33,23,35],[36,36,23,38],[36,40,23,42,"encodeURIComponent"],[36,58,23,60],[36,59,23,61,"meta"],[36,63,23,65],[36,64,23,66,"type"],[36,68,23,70],[36,69,23,71],[36,71,23,73],[36,74,23,76],[36,76,23,78],[37,4,24,4],[37,8,24,10,"suffix"],[37,14,24,16],[37,17,24,19],[37,21,24,23,"encodeURIComponent"],[37,39,24,41],[37,40,24,42,"meta"],[37,44,24,46],[37,45,24,47,"name"],[37,49,24,51],[37,50,24,52],[37,53,24,55,"fileScale"],[37,62,24,64],[37,65,24,67,"fileExtension"],[37,78,24,80],[37,80,24,82],[38,4,25,4],[38,8,25,10,"params"],[38,14,25,16],[38,17,25,19],[38,21,25,23,"URLSearchParams"],[38,36,25,38],[38,37,25,39],[39,6,26,8,"platform"],[39,14,26,16],[39,16,26,18,"Platform"],[39,41,26,26],[39,42,26,27,"OS"],[39,44,26,29],[40,6,27,8,"hash"],[40,10,27,12],[40,12,27,14,"meta"],[40,16,27,18],[40,17,27,19,"hash"],[41,4,28,4],[41,5,28,5],[41,6,28,6],[42,4,29,4],[43,4,30,4],[44,4,31,4],[44,8,31,8],[44,22,31,22],[44,23,31,23,"test"],[44,27,31,27],[44,28,31,28,"meta"],[44,32,31,32],[44,33,31,33,"httpServerLocation"],[44,51,31,51],[44,52,31,52],[44,54,31,54],[45,6,32,8],[45,10,32,14,"uri"],[45,14,32,17],[45,17,32,20,"meta"],[45,21,32,24],[45,22,32,25,"httpServerLocation"],[45,40,32,43],[45,43,32,46,"suffix"],[45,49,32,52],[45,52,32,55],[45,55,32,58],[45,58,32,61,"params"],[45,64,32,67],[46,6,33,8],[46,13,33,15],[47,8,33,17,"uri"],[47,11,33,20],[47,13,33,17,"uri"],[47,17,33,20],[48,8,33,22,"hash"],[48,12,33,26],[48,14,33,22,"hash"],[49,6,33,27],[49,7,33,28],[50,4,34,4],[51,4,35,4],[52,4,36,4],[52,8,36,10,"manifest2"],[52,17,36,19],[52,20,36,22],[52,24,36,22,"getManifest2"],[52,51,36,34],[52,53,36,35],[52,54,36,36],[53,4,37,4],[53,8,37,10,"devServerUrl"],[53,20,37,22],[53,23,37,25,"manifest2"],[53,32,37,34],[53,45,37,34,"_manifest2$extra"],[53,61,37,34],[53,64,37,25,"manifest2"],[53,73,37,34],[53,74,37,36,"extra"],[53,79,37,41],[53,93,37,41,"_manifest2$extra"],[53,109,37,41],[53,112,37,25,"_manifest2$extra"],[53,128,37,25],[53,129,37,43,"expoGo"],[53,135,37,49],[53,148,37,25,"_manifest2$extra"],[53,164,37,25],[53,165,37,51,"developer"],[53,174,37,60],[53,177,38,10],[53,186,38,19],[53,189,38,22,"manifest2"],[53,198,38,31],[53,199,38,32,"extra"],[53,204,38,37],[53,205,38,38,"expoGo"],[53,211,38,44],[53,212,38,45,"debuggerHost"],[53,224,38,57],[53,227,39,10],[53,231,39,14],[54,4,40,4],[54,8,40,8,"devServerUrl"],[54,20,40,20],[54,22,40,22],[55,6,41,8],[55,10,41,14,"baseUrl"],[55,17,41,21],[55,20,41,24],[55,24,41,28,"URL"],[55,27,41,31],[55,28,41,32,"meta"],[55,32,41,36],[55,33,41,37,"httpServerLocation"],[55,51,41,55],[55,54,41,58,"suffix"],[55,60,41,64],[55,62,41,66,"devServerUrl"],[55,74,41,78],[55,75,41,79],[56,6,42,8,"baseUrl"],[56,13,42,15],[56,14,42,16,"searchParams"],[56,26,42,28],[56,27,42,29,"set"],[56,30,42,32],[56,31,42,33],[56,41,42,43],[56,43,42,45,"Platform"],[56,68,42,53],[56,69,42,54,"OS"],[56,71,42,56],[56,72,42,57],[57,6,43,8,"baseUrl"],[57,13,43,15],[57,14,43,16,"searchParams"],[57,26,43,28],[57,27,43,29,"set"],[57,30,43,32],[57,31,43,33],[57,37,43,39],[57,39,43,41,"meta"],[57,43,43,45],[57,44,43,46,"hash"],[57,48,43,50],[57,49,43,51],[58,6,44,8],[58,13,44,15],[59,8,45,12,"uri"],[59,11,45,15],[59,13,45,17,"baseUrl"],[59,20,45,24],[59,21,45,25,"href"],[59,25,45,29],[60,8,46,12,"hash"],[60,12,46,16],[60,14,46,12,"hash"],[61,6,47,8],[61,7,47,9],[62,4,48,4],[63,4,49,4],[64,4,50,4],[64,8,50,8,"NativeModules"],[64,34,50,21],[64,35,50,22],[64,51,50,38],[64,52,50,39],[64,54,50,41],[65,6,51,8],[65,13,51,15],[66,8,51,17,"uri"],[66,11,51,20],[66,13,51,22],[66,58,51,67,"encodeURIComponent"],[66,76,51,85],[66,77,51,86,"hash"],[66,81,51,90],[66,82,51,91],[66,84,51,93],[67,8,51,95,"hash"],[67,12,51,99],[67,14,51,95,"hash"],[68,6,51,100],[68,7,51,101],[69,4,52,4],[70,4,53,4],[71,4,54,4],[72,4,55,4],[73,4,56,4],[74,4,57,4],[74,11,57,11],[75,6,57,13,"uri"],[75,9,57,16],[75,11,57,18],[75,13,57,20],[76,6,57,22,"hash"],[76,10,57,26],[76,12,57,22,"hash"],[77,4,57,27],[77,5,57,28],[78,2,58,0],[79,2,59,0],[80,0,60,0],[81,0,61,0],[82,0,62,0],[83,0,63,0],[84,2,64,7],[84,11,64,16,"resolveUri"],[84,21,64,26,"resolveUri"],[84,22,64,27,"uri"],[84,25,64,30],[84,27,64,32],[85,4,65,4],[86,4,66,4],[86,11,66,11,"manifestBaseUrl"],[86,41,66,26],[86,44,66,29],[86,48,66,33,"URL"],[86,51,66,36],[86,52,66,37,"uri"],[86,55,66,40],[86,57,66,42,"manifestBaseUrl"],[86,87,66,57],[86,88,66,58],[86,89,66,59,"href"],[86,93,66,63],[86,96,66,66,"uri"],[86,99,66,69],[87,2,67,0],[88,0,67,1],[88,3]],"functionMap":{"names":["<global>","selectAssetSource","meta.scales.findIndex$argument_0","resolveUri"],"mappings":"AAA;OCU;wCCI,kBD;CD2C;OGM;CHG"}},"type":"js/module"}]}