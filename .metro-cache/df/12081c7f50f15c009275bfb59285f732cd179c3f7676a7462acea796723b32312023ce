{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@reduxjs/toolkit","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":84,"index":84}}],"key":"54oW2xbJyHE290wIe7uf9enEy7w=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":147},"end":{"line":3,"column":54,"index":201}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}},{"name":"../../utils/errorRecovery","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":202},"end":{"line":4,"column":65,"index":267}}],"key":"RP4thOe0SQlp27ddE2AuYx6HVgQ=","exportNames":["*"]}},{"name":"../../services/supabase/client","data":{"asyncType":"async","isESMImport":true,"locs":[{"start":{"line":157,"column":43,"index":5545},"end":{"line":157,"column":83,"index":5585}}],"key":"ajXqTkOxVh13/E8qrjI2UvUvVoU=","exportNames":["*"],"isOptional":true}},{"name":"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/@expo/metro-config/build/async-require.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":157,"column":16,"index":5518},"end":{"line":157,"column":84,"index":5586}}],"key":"iDU+jeGcLQEhf1Ypl18gGBIi81Y=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialErrorState = exports.errorReducer = exports.errorHandlingMiddleware = exports.errorActions = void 0;\n  var _toConsumableArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _toolkit = require(_dependencyMap[3], \"@reduxjs/toolkit\");\n  var _EventLogger = require(_dependencyMap[4], \"../../utils/EventLogger\");\n  var _errorRecovery = require(_dependencyMap[5], \"../../utils/errorRecovery\");\n  /**\n   * Enhanced error types for better categorization\n   */\n\n  /**\n   * Categorize errors for better handling\n   */\n  function categorizeError(error) {\n    if (typeof error.status === 'number') {\n      if (error.status >= 400 && error.status < 500) {\n        if (error.status === 401 || error.status === 403) return 'auth';\n        if (error.status === 422 || error.status === 400) return 'validation';\n        return 'client';\n      }\n      if (error.status >= 500) return 'server';\n    }\n    if (error.status === 'FETCH_ERROR' || error.status === 'TIMEOUT_ERROR') {\n      return 'network';\n    }\n    return 'unknown';\n  }\n\n  /**\n   * Determine if error is recoverable through retry\n   */\n  function isRecoverable(error, category) {\n    // Network errors are usually recoverable\n    if (category === 'network') return true;\n\n    // Server errors might be recoverable\n    if (category === 'server') return true;\n\n    // 429 Too Many Requests is recoverable\n    if (error.status === 429) return true;\n\n    // Auth errors might be recoverable if we can refresh token\n    if (category === 'auth' && error.status === 401) return true;\n\n    // Client and validation errors are usually not recoverable through retry\n    return false;\n  }\n\n  /**\n   * Generate user-friendly error messages\n   */\n  function getUserMessage(error, category) {\n    switch (category) {\n      case 'network':\n        return 'Network connection error. Please check your internet connection and try again.';\n      case 'auth':\n        if (error.status === 401) return 'Your session has expired. Please sign in again.';\n        if (error.status === 403) return 'You don\\'t have permission to perform this action.';\n        return 'Authentication error. Please sign in again.';\n      case 'validation':\n        return 'The information provided is invalid. Please check your input and try again.';\n      case 'server':\n        return 'Server error. We\\'re working to fix this. Please try again later.';\n      case 'client':\n        if (error.status === 404) return 'The requested resource was not found.';\n        if (error.status === 429) return 'Too many requests. Please wait a moment and try again.';\n        return 'Request error. Please try again.';\n      default:\n        return 'An unexpected error occurred. Please try again.';\n    }\n  }\n\n  /**\n   * Extract retry delay from error response\n   */\n  function getRetryAfter(error) {\n    if (error.status === 429 && error.data && typeof error.data === 'object') {\n      var data = error.data;\n      if (data.retryAfter) return data.retryAfter * 1000; // Convert to ms\n      if (data['retry-after']) return parseInt(data['retry-after']) * 1000;\n    }\n    return undefined;\n  }\n\n  /**\n   * Enhanced Redux error handling middleware\n   * \n   * This middleware:\n   * 1. Catches all RTK Query errors\n   * 2. Categorizes errors for better handling\n   * 3. Logs structured error information\n   * 4. Determines recovery strategies\n   * 5. Provides user-friendly error messages\n   */\n  var errorHandlingMiddleware = exports.errorHandlingMiddleware = function errorHandlingMiddleware(storeApi) {\n    return function (next) {\n      return function (action) {\n        // Handle rejected RTK Query actions\n        if ((0, _toolkit.isRejectedWithValue)(action)) {\n          var _action$meta, _action$meta2, _errorRecoveryManager;\n          var error = action.payload;\n          var category = categorizeError(error);\n          var recoverable = isRecoverable(error, category);\n          var userMessage = getUserMessage(error, category);\n          var retryAfter = getRetryAfter(error);\n\n          // Create enhanced error object\n          var enhancedError = Object.assign({}, error, {\n            category: category,\n            recoverable: recoverable,\n            retryAfter: retryAfter,\n            userMessage: userMessage\n          });\n\n          // Log the error with context\n          _EventLogger.EventLogger.error('Redux', `API ${category} error in ${action.type}`, new Error(userMessage), {\n            action: action.type,\n            error: enhancedError,\n            category: category,\n            recoverable: recoverable,\n            retryAfter: retryAfter,\n            status: error.status,\n            endpoint: (_action$meta = action.meta) == null || (_action$meta = _action$meta.baseQueryMeta) == null || (_action$meta = _action$meta.request) == null ? void 0 : _action$meta.url,\n            method: (_action$meta2 = action.meta) == null || (_action$meta2 = _action$meta2.baseQueryMeta) == null || (_action$meta2 = _action$meta2.request) == null ? void 0 : _action$meta2.method,\n            timestamp: new Date().toISOString()\n          });\n\n          // Register recovery strategy for this error type if recoverable\n          if (recoverable && !((_errorRecoveryManager = _errorRecovery.errorRecoveryManager['strategies']) != null && _errorRecoveryManager.find != null && _errorRecoveryManager.find(function (s) {\n            return s.name === `redux_${category}_recovery`;\n          }))) {\n            _errorRecovery.errorRecoveryManager.addRecoveryStrategy({\n              name: `redux_${category}_recovery`,\n              canRecover: function canRecover(err) {\n                return err.message.includes(category || '');\n              },\n              recover: function () {\n                var _recover = (0, _asyncToGenerator2.default)(function* (err) {\n                  var _navigator;\n                  _EventLogger.EventLogger.info('Redux', `Attempting recovery for ${category} error`);\n                  switch (category) {\n                    case 'network':\n                      // Wait a bit for network to recover\n                      yield new Promise(function (resolve) {\n                        return setTimeout(resolve, 2000);\n                      });\n                      return ((_navigator = navigator) == null ? void 0 : _navigator.onLine) !== false;\n                    case 'auth':\n                      // Try to refresh session\n                      try {\n                        var _yield$import = yield require(_dependencyMap[7], \"/Users/marcminott/Documents/DevProject/ShortcutsLike/node_modules/@expo/metro-config/build/async-require.js\")(_dependencyMap[6], _dependencyMap.paths, \"../../services/supabase/client\"),\n                          supabase = _yield$import.supabase;\n                        var _yield$supabase$auth$ = yield supabase.auth.refreshSession(),\n                          refreshError = _yield$supabase$auth$.error;\n                        return !refreshError;\n                      } catch (_unused) {\n                        return false;\n                      }\n                    case 'server':\n                      // Wait longer for server recovery\n                      yield new Promise(function (resolve) {\n                        return setTimeout(resolve, 5000);\n                      });\n                      return true;\n                    default:\n                      return false;\n                  }\n                });\n                function recover(_x) {\n                  return _recover.apply(this, arguments);\n                }\n                return recover;\n              }(),\n              priority: category === 'network' ? 10 : category === 'auth' ? 8 : 5\n            });\n          }\n\n          // Dispatch custom error action for UI handling\n          storeApi.dispatch({\n            type: 'api/errorOccurred',\n            payload: {\n              error: enhancedError,\n              originalAction: action.type,\n              timestamp: Date.now()\n            }\n          });\n\n          // For development, also log to console with more details\n          if (__DEV__) {\n            console.group(`🚨 Redux API Error: ${action.type}`);\n            console.error('Error Details:', enhancedError);\n            console.error('Original Action:', action);\n            console.error('Store State:', storeApi.getState());\n            console.groupEnd();\n          }\n        }\n\n        // Handle other types of errors (like serialized errors)\n        if (action.error && !action.payload) {\n          var _error = action.error;\n          _EventLogger.EventLogger.error('Redux', `Redux action error in ${action.type}`, new Error(_error.message || 'Unknown Redux error'), {\n            action: action.type,\n            error: {\n              name: _error.name,\n              message: _error.message,\n              stack: _error.stack,\n              code: _error.code\n            },\n            timestamp: new Date().toISOString()\n          });\n\n          // Dispatch custom error action\n          storeApi.dispatch({\n            type: 'redux/errorOccurred',\n            payload: {\n              error: _error,\n              originalAction: action.type,\n              timestamp: Date.now()\n            }\n          });\n        }\n        return next(action);\n      };\n    };\n  };\n\n  /**\n   * Action creators for error handling\n   */\n  var errorActions = exports.errorActions = {\n    clearApiErrors: function clearApiErrors() {\n      return {\n        type: 'api/clearErrors'\n      };\n    },\n    clearReduxErrors: function clearReduxErrors() {\n      return {\n        type: 'redux/clearErrors'\n      };\n    },\n    clearAllErrors: function clearAllErrors() {\n      return {\n        type: 'errors/clearAll'\n      };\n    }\n  };\n\n  /**\n   * Error state interface for components\n   */\n\n  /**\n   * Initial error state\n   */\n  var initialErrorState = exports.initialErrorState = {\n    apiErrors: [],\n    reduxErrors: []\n  };\n\n  /**\n   * Error reducer for managing error state\n   */\n  var errorReducer = exports.errorReducer = function errorReducer() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialErrorState;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    switch (action.type) {\n      case 'api/errorOccurred':\n        return Object.assign({}, state, {\n          apiErrors: [].concat((0, _toConsumableArray2.default)(state.apiErrors.slice(-9)), [\n          // Keep last 10 errors\n          action.payload]),\n          lastError: {\n            message: action.payload.error.userMessage,\n            timestamp: action.payload.timestamp,\n            category: action.payload.error.category\n          }\n        });\n      case 'redux/errorOccurred':\n        return Object.assign({}, state, {\n          reduxErrors: [].concat((0, _toConsumableArray2.default)(state.reduxErrors.slice(-9)), [\n          // Keep last 10 errors\n          action.payload]),\n          lastError: {\n            message: action.payload.error.message || 'Redux error occurred',\n            timestamp: action.payload.timestamp\n          }\n        });\n      case 'api/clearErrors':\n        return Object.assign({}, state, {\n          apiErrors: []\n        });\n      case 'redux/clearErrors':\n        return Object.assign({}, state, {\n          reduxErrors: []\n        });\n      case 'errors/clearAll':\n        return initialErrorState;\n      default:\n        return state;\n    }\n  };\n});","lineCount":307,"map":[[9,2,1,0],[9,6,1,0,"_toolkit"],[9,14,1,0],[9,17,1,0,"require"],[9,24,1,0],[9,25,1,0,"_dependencyMap"],[9,39,1,0],[10,2,3,0],[10,6,3,0,"_EventLogger"],[10,18,3,0],[10,21,3,0,"require"],[10,28,3,0],[10,29,3,0,"_dependencyMap"],[10,43,3,0],[11,2,4,0],[11,6,4,0,"_errorRecovery"],[11,20,4,0],[11,23,4,0,"require"],[11,30,4,0],[11,31,4,0,"_dependencyMap"],[11,45,4,0],[12,2,6,0],[13,0,7,0],[14,0,8,0],[16,2,16,0],[17,0,17,0],[18,0,18,0],[19,2,19,0],[19,11,19,9,"categorizeError"],[19,26,19,24,"categorizeError"],[19,27,19,25,"error"],[19,32,19,51],[19,34,19,83],[20,4,20,2],[20,8,20,6],[20,15,20,13,"error"],[20,20,20,18],[20,21,20,19,"status"],[20,27,20,25],[20,32,20,30],[20,40,20,38],[20,42,20,40],[21,6,21,4],[21,10,21,8,"error"],[21,15,21,13],[21,16,21,14,"status"],[21,22,21,20],[21,26,21,24],[21,29,21,27],[21,33,21,31,"error"],[21,38,21,36],[21,39,21,37,"status"],[21,45,21,43],[21,48,21,46],[21,51,21,49],[21,53,21,51],[22,8,22,6],[22,12,22,10,"error"],[22,17,22,15],[22,18,22,16,"status"],[22,24,22,22],[22,29,22,27],[22,32,22,30],[22,36,22,34,"error"],[22,41,22,39],[22,42,22,40,"status"],[22,48,22,46],[22,53,22,51],[22,56,22,54],[22,58,22,56],[22,65,22,63],[22,71,22,69],[23,8,23,6],[23,12,23,10,"error"],[23,17,23,15],[23,18,23,16,"status"],[23,24,23,22],[23,29,23,27],[23,32,23,30],[23,36,23,34,"error"],[23,41,23,39],[23,42,23,40,"status"],[23,48,23,46],[23,53,23,51],[23,56,23,54],[23,58,23,56],[23,65,23,63],[23,77,23,75],[24,8,24,6],[24,15,24,13],[24,23,24,21],[25,6,25,4],[26,6,26,4],[26,10,26,8,"error"],[26,15,26,13],[26,16,26,14,"status"],[26,22,26,20],[26,26,26,24],[26,29,26,27],[26,31,26,29],[26,38,26,36],[26,46,26,44],[27,4,27,2],[28,4,29,2],[28,8,29,6,"error"],[28,13,29,11],[28,14,29,12,"status"],[28,20,29,18],[28,25,29,23],[28,38,29,36],[28,42,29,40,"error"],[28,47,29,45],[28,48,29,46,"status"],[28,54,29,52],[28,59,29,57],[28,74,29,72],[28,76,29,74],[29,6,30,4],[29,13,30,11],[29,22,30,20],[30,4,31,2],[31,4,33,2],[31,11,33,9],[31,20,33,18],[32,2,34,0],[34,2,36,0],[35,0,37,0],[36,0,38,0],[37,2,39,0],[37,11,39,9,"isRecoverable"],[37,24,39,22,"isRecoverable"],[37,25,39,23,"error"],[37,30,39,49],[37,32,39,51,"category"],[37,40,39,89],[37,42,39,100],[38,4,40,2],[39,4,41,2],[39,8,41,6,"category"],[39,16,41,14],[39,21,41,19],[39,30,41,28],[39,32,41,30],[39,39,41,37],[39,43,41,41],[41,4,43,2],[42,4,44,2],[42,8,44,6,"category"],[42,16,44,14],[42,21,44,19],[42,29,44,27],[42,31,44,29],[42,38,44,36],[42,42,44,40],[44,4,46,2],[45,4,47,2],[45,8,47,6,"error"],[45,13,47,11],[45,14,47,12,"status"],[45,20,47,18],[45,25,47,23],[45,28,47,26],[45,30,47,28],[45,37,47,35],[45,41,47,39],[47,4,49,2],[48,4,50,2],[48,8,50,6,"category"],[48,16,50,14],[48,21,50,19],[48,27,50,25],[48,31,50,29,"error"],[48,36,50,34],[48,37,50,35,"status"],[48,43,50,41],[48,48,50,46],[48,51,50,49],[48,53,50,51],[48,60,50,58],[48,64,50,62],[50,4,52,2],[51,4,53,2],[51,11,53,9],[51,16,53,14],[52,2,54,0],[54,2,56,0],[55,0,57,0],[56,0,58,0],[57,2,59,0],[57,11,59,9,"getUserMessage"],[57,25,59,23,"getUserMessage"],[57,26,59,24,"error"],[57,31,59,50],[57,33,59,52,"category"],[57,41,59,90],[57,43,59,100],[58,4,60,2],[58,12,60,10,"category"],[58,20,60,18],[59,6,61,4],[59,11,61,9],[59,20,61,18],[60,8,62,6],[60,15,62,13],[60,95,62,93],[61,6,63,4],[61,11,63,9],[61,17,63,15],[62,8,64,6],[62,12,64,10,"error"],[62,17,64,15],[62,18,64,16,"status"],[62,24,64,22],[62,29,64,27],[62,32,64,30],[62,34,64,32],[62,41,64,39],[62,90,64,88],[63,8,65,6],[63,12,65,10,"error"],[63,17,65,15],[63,18,65,16,"status"],[63,24,65,22],[63,29,65,27],[63,32,65,30],[63,34,65,32],[63,41,65,39],[63,93,65,91],[64,8,66,6],[64,15,66,13],[64,60,66,58],[65,6,67,4],[65,11,67,9],[65,23,67,21],[66,8,68,6],[66,15,68,13],[66,92,68,90],[67,6,69,4],[67,11,69,9],[67,19,69,17],[68,8,70,6],[68,15,70,13],[68,82,70,80],[69,6,71,4],[69,11,71,9],[69,19,71,17],[70,8,72,6],[70,12,72,10,"error"],[70,17,72,15],[70,18,72,16,"status"],[70,24,72,22],[70,29,72,27],[70,32,72,30],[70,34,72,32],[70,41,72,39],[70,80,72,78],[71,8,73,6],[71,12,73,10,"error"],[71,17,73,15],[71,18,73,16,"status"],[71,24,73,22],[71,29,73,27],[71,32,73,30],[71,34,73,32],[71,41,73,39],[71,97,73,95],[72,8,74,6],[72,15,74,13],[72,49,74,47],[73,6,75,4],[74,8,76,6],[74,15,76,13],[74,64,76,62],[75,4,77,2],[76,2,78,0],[78,2,80,0],[79,0,81,0],[80,0,82,0],[81,2,83,0],[81,11,83,9,"getRetryAfter"],[81,24,83,22,"getRetryAfter"],[81,25,83,23,"error"],[81,30,83,49],[81,32,83,71],[82,4,84,2],[82,8,84,6,"error"],[82,13,84,11],[82,14,84,12,"status"],[82,20,84,18],[82,25,84,23],[82,28,84,26],[82,32,84,30,"error"],[82,37,84,35],[82,38,84,36,"data"],[82,42,84,40],[82,46,84,44],[82,53,84,51,"error"],[82,58,84,56],[82,59,84,57,"data"],[82,63,84,61],[82,68,84,66],[82,76,84,74],[82,78,84,76],[83,6,85,4],[83,10,85,10,"data"],[83,14,85,14],[83,17,85,17,"error"],[83,22,85,22],[83,23,85,23,"data"],[83,27,85,34],[84,6,86,4],[84,10,86,8,"data"],[84,14,86,12],[84,15,86,13,"retryAfter"],[84,25,86,23],[84,27,86,25],[84,34,86,32,"data"],[84,38,86,36],[84,39,86,37,"retryAfter"],[84,49,86,47],[84,52,86,50],[84,56,86,54],[84,57,86,55],[84,58,86,56],[85,6,87,4],[85,10,87,8,"data"],[85,14,87,12],[85,15,87,13],[85,28,87,26],[85,29,87,27],[85,31,87,29],[85,38,87,36,"parseInt"],[85,46,87,44],[85,47,87,45,"data"],[85,51,87,49],[85,52,87,50],[85,65,87,63],[85,66,87,64],[85,67,87,65],[85,70,87,68],[85,74,87,72],[86,4,88,2],[87,4,89,2],[87,11,89,9,"undefined"],[87,20,89,18],[88,2,90,0],[90,2,92,0],[91,0,93,0],[92,0,94,0],[93,0,95,0],[94,0,96,0],[95,0,97,0],[96,0,98,0],[97,0,99,0],[98,0,100,0],[99,0,101,0],[100,2,102,7],[100,6,102,13,"errorHandlingMiddleware"],[100,29,102,48],[100,32,102,48,"exports"],[100,39,102,48],[100,40,102,48,"errorHandlingMiddleware"],[100,63,102,48],[100,66,102,51],[100,75,102,13,"errorHandlingMiddleware"],[100,98,102,48,"errorHandlingMiddleware"],[100,99,102,52,"storeApi"],[100,107,102,60],[101,4,102,60],[101,11,102,65],[101,21,102,66,"next"],[101,25,102,70],[102,6,102,70],[102,13,102,75],[102,23,102,76,"action"],[102,29,102,82],[102,31,102,87],[103,8,103,2],[104,8,104,2],[104,12,104,6],[104,16,104,6,"isRejectedWithValue"],[104,44,104,25],[104,46,104,26,"action"],[104,52,104,32],[104,53,104,33],[104,55,104,35],[105,10,104,35],[105,14,104,35,"_action$meta"],[105,26,104,35],[105,28,104,35,"_action$meta2"],[105,41,104,35],[105,43,104,35,"_errorRecoveryManager"],[105,64,104,35],[106,10,105,4],[106,14,105,10,"error"],[106,19,105,15],[106,22,105,18,"action"],[106,28,105,24],[106,29,105,25,"payload"],[106,36,105,55],[107,10,106,4],[107,14,106,10,"category"],[107,22,106,18],[107,25,106,21,"categorizeError"],[107,40,106,36],[107,41,106,37,"error"],[107,46,106,42],[107,47,106,43],[108,10,107,4],[108,14,107,10,"recoverable"],[108,25,107,21],[108,28,107,24,"isRecoverable"],[108,41,107,37],[108,42,107,38,"error"],[108,47,107,43],[108,49,107,45,"category"],[108,57,107,53],[108,58,107,54],[109,10,108,4],[109,14,108,10,"userMessage"],[109,25,108,21],[109,28,108,24,"getUserMessage"],[109,42,108,38],[109,43,108,39,"error"],[109,48,108,44],[109,50,108,46,"category"],[109,58,108,54],[109,59,108,55],[110,10,109,4],[110,14,109,10,"retryAfter"],[110,24,109,20],[110,27,109,23,"getRetryAfter"],[110,40,109,36],[110,41,109,37,"error"],[110,46,109,42],[110,47,109,43],[112,10,111,4],[113,10,112,4],[113,14,112,10,"enhancedError"],[113,27,112,41],[113,30,112,41,"Object"],[113,36,112,41],[113,37,112,41,"assign"],[113,43,112,41],[113,48,113,9,"error"],[113,53,113,14],[114,12,114,6,"category"],[114,20,114,14],[114,22,114,6,"category"],[114,30,114,14],[115,12,115,6,"recoverable"],[115,23,115,17],[115,25,115,6,"recoverable"],[115,36,115,17],[116,12,116,6,"retryAfter"],[116,22,116,16],[116,24,116,6,"retryAfter"],[116,34,116,16],[117,12,117,6,"userMessage"],[117,23,117,17],[117,25,117,6,"userMessage"],[118,10,117,17],[118,12,118,5],[120,10,120,4],[121,10,121,4,"EventLogger"],[121,34,121,15],[121,35,121,16,"error"],[121,40,121,21],[121,41,122,6],[121,48,122,13],[121,50,123,6],[121,57,123,13,"category"],[121,65,123,21],[121,78,123,34,"action"],[121,84,123,40],[121,85,123,41,"type"],[121,89,123,45],[121,91,123,47],[121,93,124,6],[121,97,124,10,"Error"],[121,102,124,15],[121,103,124,16,"userMessage"],[121,114,124,27],[121,115,124,28],[121,117,125,6],[122,12,126,8,"action"],[122,18,126,14],[122,20,126,16,"action"],[122,26,126,22],[122,27,126,23,"type"],[122,31,126,27],[123,12,127,8,"error"],[123,17,127,13],[123,19,127,15,"enhancedError"],[123,32,127,28],[124,12,128,8,"category"],[124,20,128,16],[124,22,128,8,"category"],[124,30,128,16],[125,12,129,8,"recoverable"],[125,23,129,19],[125,25,129,8,"recoverable"],[125,36,129,19],[126,12,130,8,"retryAfter"],[126,22,130,18],[126,24,130,8,"retryAfter"],[126,34,130,18],[127,12,131,8,"status"],[127,18,131,14],[127,20,131,16,"error"],[127,25,131,21],[127,26,131,22,"status"],[127,32,131,28],[128,12,132,8,"endpoint"],[128,20,132,16],[128,23,132,16,"_action$meta"],[128,35,132,16],[128,38,132,18,"action"],[128,44,132,24],[128,45,132,25,"meta"],[128,49,132,29],[128,63,132,29,"_action$meta"],[128,75,132,29],[128,78,132,18,"_action$meta"],[128,90,132,18],[128,91,132,31,"baseQueryMeta"],[128,104,132,44],[128,118,132,44,"_action$meta"],[128,130,132,44],[128,133,132,18,"_action$meta"],[128,145,132,18],[128,146,132,46,"request"],[128,153,132,53],[128,174,132,18,"_action$meta"],[128,186,132,18],[128,187,132,55,"url"],[128,190,132,58],[129,12,133,8,"method"],[129,18,133,14],[129,21,133,14,"_action$meta2"],[129,34,133,14],[129,37,133,16,"action"],[129,43,133,22],[129,44,133,23,"meta"],[129,48,133,27],[129,62,133,27,"_action$meta2"],[129,75,133,27],[129,78,133,16,"_action$meta2"],[129,91,133,16],[129,92,133,29,"baseQueryMeta"],[129,105,133,42],[129,119,133,42,"_action$meta2"],[129,132,133,42],[129,135,133,16,"_action$meta2"],[129,148,133,16],[129,149,133,44,"request"],[129,156,133,51],[129,177,133,16,"_action$meta2"],[129,190,133,16],[129,191,133,53,"method"],[129,197,133,59],[130,12,134,8,"timestamp"],[130,21,134,17],[130,23,134,19],[130,27,134,23,"Date"],[130,31,134,27],[130,32,134,28],[130,33,134,29],[130,34,134,30,"toISOString"],[130,45,134,41],[130,46,134,42],[131,10,135,6],[131,11,136,4],[131,12,136,5],[133,10,138,4],[134,10,139,4],[134,14,139,8,"recoverable"],[134,25,139,19],[134,29,139,23],[134,32,139,23,"_errorRecoveryManager"],[134,53,139,23],[134,56,139,24,"errorRecoveryManager"],[134,91,139,44],[134,92,139,45],[134,104,139,57],[134,105,139,58],[134,118,139,24,"_errorRecoveryManager"],[134,139,139,24],[134,140,139,60,"find"],[134,144,139,64],[134,156,139,24,"_errorRecoveryManager"],[134,177,139,24],[134,178,139,60,"find"],[134,182,139,64],[134,183,139,67],[134,193,139,67,"s"],[134,194,139,68],[135,12,139,68],[135,19,139,72,"s"],[135,20,139,73],[135,21,139,74,"name"],[135,25,139,78],[135,30,139,83],[135,39,139,92,"category"],[135,47,139,100],[135,58,139,111],[136,10,139,111],[136,12,139,112],[136,15,139,114],[137,12,140,6,"errorRecoveryManager"],[137,47,140,26],[137,48,140,27,"addRecoveryStrategy"],[137,67,140,46],[137,68,140,47],[138,14,141,8,"name"],[138,18,141,12],[138,20,141,14],[138,29,141,23,"category"],[138,37,141,31],[138,48,141,42],[139,14,142,8,"canRecover"],[139,24,142,18],[139,26,142,20],[139,35,142,8,"canRecover"],[139,45,142,18,"canRecover"],[139,46,142,21,"err"],[139,49,142,31],[139,51,142,36],[140,16,143,10],[140,23,143,17,"err"],[140,26,143,20],[140,27,143,21,"message"],[140,34,143,28],[140,35,143,29,"includes"],[140,43,143,37],[140,44,143,38,"category"],[140,52,143,46],[140,56,143,50],[140,58,143,52],[140,59,143,53],[141,14,144,8],[141,15,144,9],[142,14,145,8,"recover"],[142,21,145,15],[143,16,145,15],[143,20,145,15,"_recover"],[143,28,145,15],[143,35,145,15,"_asyncToGenerator2"],[143,53,145,15],[143,54,145,15,"default"],[143,61,145,15],[143,63,145,17],[143,74,145,24,"err"],[143,77,145,34],[143,79,145,39],[144,18,145,39],[144,22,145,39,"_navigator"],[144,32,145,39],[145,18,146,10,"EventLogger"],[145,42,146,21],[145,43,146,22,"info"],[145,47,146,26],[145,48,146,27],[145,55,146,34],[145,57,146,36],[145,84,146,63,"category"],[145,92,146,71],[145,100,146,79],[145,101,146,80],[146,18,148,10],[146,26,148,18,"category"],[146,34,148,26],[147,20,149,12],[147,25,149,17],[147,34,149,26],[148,22,150,14],[149,22,151,14],[149,28,151,20],[149,32,151,24,"Promise"],[149,39,151,31],[149,40,151,32],[149,50,151,32,"resolve"],[149,57,151,39],[150,24,151,39],[150,31,151,43,"setTimeout"],[150,41,151,53],[150,42,151,54,"resolve"],[150,49,151,61],[150,51,151,63],[150,55,151,67],[150,56,151,68],[151,22,151,68],[151,24,151,69],[152,22,152,14],[152,29,152,21],[152,31,152,21,"_navigator"],[152,41,152,21],[152,44,152,21,"navigator"],[152,53,152,30],[152,74,152,21,"_navigator"],[152,84,152,21],[152,85,152,32,"onLine"],[152,91,152,38],[152,97,152,43],[152,102,152,48],[153,20,154,12],[153,25,154,17],[153,31,154,23],[154,22,155,14],[155,22,156,14],[155,26,156,18],[156,24,157,16],[156,28,157,16,"_yield$import"],[156,41,157,16],[156,50,157,16,"require"],[156,57,157,16],[156,58,157,16,"_dependencyMap"],[156,72,157,16],[156,188,157,16,"_dependencyMap"],[156,202,157,16],[156,207,157,16,"_dependencyMap"],[156,221,157,16],[156,222,157,16,"paths"],[156,227,157,16],[157,26,157,24,"supabase"],[157,34,157,32],[157,37,157,32,"_yield$import"],[157,50,157,32],[157,51,157,24,"supabase"],[157,59,157,32],[158,24,158,16],[158,28,158,16,"_yield$supabase$auth$"],[158,49,158,16],[158,58,158,54,"supabase"],[158,66,158,62],[158,67,158,63,"auth"],[158,71,158,67],[158,72,158,68,"refreshSession"],[158,86,158,82],[158,87,158,83],[158,88,158,84],[159,26,158,31,"refreshError"],[159,38,158,43],[159,41,158,43,"_yield$supabase$auth$"],[159,62,158,43],[159,63,158,24,"error"],[159,68,158,29],[160,24,159,16],[160,31,159,23],[160,32,159,24,"refreshError"],[160,44,159,36],[161,22,160,14],[161,23,160,15],[161,24,160,16],[161,31,160,16,"_unused"],[161,38,160,16],[161,40,160,22],[162,24,161,16],[162,31,161,23],[162,36,161,28],[163,22,162,14],[164,20,164,12],[164,25,164,17],[164,33,164,25],[165,22,165,14],[166,22,166,14],[166,28,166,20],[166,32,166,24,"Promise"],[166,39,166,31],[166,40,166,32],[166,50,166,32,"resolve"],[166,57,166,39],[167,24,166,39],[167,31,166,43,"setTimeout"],[167,41,166,53],[167,42,166,54,"resolve"],[167,49,166,61],[167,51,166,63],[167,55,166,67],[167,56,166,68],[168,22,166,68],[168,24,166,69],[169,22,167,14],[169,29,167,21],[169,33,167,25],[170,20,169,12],[171,22,170,14],[171,29,170,21],[171,34,170,26],[172,18,171,10],[173,16,172,8],[173,17,172,9],[174,16,172,9],[174,25,145,8,"recover"],[174,32,145,15,"recover"],[174,33,145,15,"_x"],[174,35,145,15],[175,18,145,15],[175,25,145,15,"_recover"],[175,33,145,15],[175,34,145,15,"apply"],[175,39,145,15],[175,46,145,15,"arguments"],[175,55,145,15],[176,16,145,15],[177,16,145,15],[177,23,145,8,"recover"],[177,30,145,15],[178,14,145,15],[178,17,172,9],[179,14,173,8,"priority"],[179,22,173,16],[179,24,173,18,"category"],[179,32,173,26],[179,37,173,31],[179,46,173,40],[179,49,173,43],[179,51,173,45],[179,54,173,48,"category"],[179,62,173,56],[179,67,173,61],[179,73,173,67],[179,76,173,70],[179,77,173,71],[179,80,173,74],[180,12,174,6],[180,13,174,7],[180,14,174,8],[181,10,175,4],[183,10,177,4],[184,10,178,4,"storeApi"],[184,18,178,12],[184,19,178,13,"dispatch"],[184,27,178,21],[184,28,178,22],[185,12,179,6,"type"],[185,16,179,10],[185,18,179,12],[185,37,179,31],[186,12,180,6,"payload"],[186,19,180,13],[186,21,180,15],[187,14,181,8,"error"],[187,19,181,13],[187,21,181,15,"enhancedError"],[187,34,181,28],[188,14,182,8,"originalAction"],[188,28,182,22],[188,30,182,24,"action"],[188,36,182,30],[188,37,182,31,"type"],[188,41,182,35],[189,14,183,8,"timestamp"],[189,23,183,17],[189,25,183,19,"Date"],[189,29,183,23],[189,30,183,24,"now"],[189,33,183,27],[189,34,183,28],[190,12,184,6],[191,10,185,4],[191,11,185,5],[191,12,185,6],[193,10,187,4],[194,10,188,4],[194,14,188,8,"__DEV__"],[194,21,188,15],[194,23,188,17],[195,12,189,6,"console"],[195,19,189,13],[195,20,189,14,"group"],[195,25,189,19],[195,26,189,20],[195,49,189,43,"action"],[195,55,189,49],[195,56,189,50,"type"],[195,60,189,54],[195,62,189,56],[195,63,189,57],[196,12,190,6,"console"],[196,19,190,13],[196,20,190,14,"error"],[196,25,190,19],[196,26,190,20],[196,42,190,36],[196,44,190,38,"enhancedError"],[196,57,190,51],[196,58,190,52],[197,12,191,6,"console"],[197,19,191,13],[197,20,191,14,"error"],[197,25,191,19],[197,26,191,20],[197,44,191,38],[197,46,191,40,"action"],[197,52,191,46],[197,53,191,47],[198,12,192,6,"console"],[198,19,192,13],[198,20,192,14,"error"],[198,25,192,19],[198,26,192,20],[198,40,192,34],[198,42,192,36,"storeApi"],[198,50,192,44],[198,51,192,45,"getState"],[198,59,192,53],[198,60,192,54],[198,61,192,55],[198,62,192,56],[199,12,193,6,"console"],[199,19,193,13],[199,20,193,14,"groupEnd"],[199,28,193,22],[199,29,193,23],[199,30,193,24],[200,10,194,4],[201,8,195,2],[203,8,197,2],[204,8,198,2],[204,12,198,6,"action"],[204,18,198,12],[204,19,198,13,"error"],[204,24,198,18],[204,28,198,22],[204,29,198,23,"action"],[204,35,198,29],[204,36,198,30,"payload"],[204,43,198,37],[204,45,198,39],[205,10,199,4],[205,14,199,10,"error"],[205,20,199,15],[205,23,199,18,"action"],[205,29,199,24],[205,30,199,25,"error"],[205,35,199,49],[206,10,201,4,"EventLogger"],[206,34,201,15],[206,35,201,16,"error"],[206,40,201,21],[206,41,202,6],[206,48,202,13],[206,50,203,6],[206,75,203,31,"action"],[206,81,203,37],[206,82,203,38,"type"],[206,86,203,42],[206,88,203,44],[206,90,204,6],[206,94,204,10,"Error"],[206,99,204,15],[206,100,204,16,"error"],[206,106,204,21],[206,107,204,22,"message"],[206,114,204,29],[206,118,204,33],[206,139,204,54],[206,140,204,55],[206,142,205,6],[207,12,206,8,"action"],[207,18,206,14],[207,20,206,16,"action"],[207,26,206,22],[207,27,206,23,"type"],[207,31,206,27],[208,12,207,8,"error"],[208,17,207,13],[208,19,207,15],[209,14,208,10,"name"],[209,18,208,14],[209,20,208,16,"error"],[209,26,208,21],[209,27,208,22,"name"],[209,31,208,26],[210,14,209,10,"message"],[210,21,209,17],[210,23,209,19,"error"],[210,29,209,24],[210,30,209,25,"message"],[210,37,209,32],[211,14,210,10,"stack"],[211,19,210,15],[211,21,210,17,"error"],[211,27,210,22],[211,28,210,23,"stack"],[211,33,210,28],[212,14,211,10,"code"],[212,18,211,14],[212,20,211,16,"error"],[212,26,211,21],[212,27,211,22,"code"],[213,12,212,8],[213,13,212,9],[214,12,213,8,"timestamp"],[214,21,213,17],[214,23,213,19],[214,27,213,23,"Date"],[214,31,213,27],[214,32,213,28],[214,33,213,29],[214,34,213,30,"toISOString"],[214,45,213,41],[214,46,213,42],[215,10,214,6],[215,11,215,4],[215,12,215,5],[217,10,217,4],[218,10,218,4,"storeApi"],[218,18,218,12],[218,19,218,13,"dispatch"],[218,27,218,21],[218,28,218,22],[219,12,219,6,"type"],[219,16,219,10],[219,18,219,12],[219,39,219,33],[220,12,220,6,"payload"],[220,19,220,13],[220,21,220,15],[221,14,221,8,"error"],[221,19,221,13],[221,21,221,8,"error"],[221,27,221,13],[222,14,222,8,"originalAction"],[222,28,222,22],[222,30,222,24,"action"],[222,36,222,30],[222,37,222,31,"type"],[222,41,222,35],[223,14,223,8,"timestamp"],[223,23,223,17],[223,25,223,19,"Date"],[223,29,223,23],[223,30,223,24,"now"],[223,33,223,27],[223,34,223,28],[224,12,224,6],[225,10,225,4],[225,11,225,5],[225,12,225,6],[226,8,226,2],[227,8,228,2],[227,15,228,9,"next"],[227,19,228,13],[227,20,228,14,"action"],[227,26,228,20],[227,27,228,21],[228,6,229,0],[228,7,229,1],[229,4,229,1],[230,2,229,1],[232,2,231,0],[233,0,232,0],[234,0,233,0],[235,2,234,7],[235,6,234,13,"errorActions"],[235,18,234,25],[235,21,234,25,"exports"],[235,28,234,25],[235,29,234,25,"errorActions"],[235,41,234,25],[235,44,234,28],[236,4,235,2,"clearApiErrors"],[236,18,235,16],[236,20,235,18],[236,29,235,2,"clearApiErrors"],[236,43,235,16,"clearApiErrors"],[236,44,235,16],[237,6,235,16],[237,13,235,25],[238,8,236,4,"type"],[238,12,236,8],[238,14,236,10],[239,6,237,2],[239,7,237,3],[240,4,237,3],[240,5,237,4],[241,4,239,2,"clearReduxErrors"],[241,20,239,18],[241,22,239,20],[241,31,239,2,"clearReduxErrors"],[241,47,239,18,"clearReduxErrors"],[241,48,239,18],[242,6,239,18],[242,13,239,27],[243,8,240,4,"type"],[243,12,240,8],[243,14,240,10],[244,6,241,2],[244,7,241,3],[245,4,241,3],[245,5,241,4],[246,4,243,2,"clearAllErrors"],[246,18,243,16],[246,20,243,18],[246,29,243,2,"clearAllErrors"],[246,43,243,16,"clearAllErrors"],[246,44,243,16],[247,6,243,16],[247,13,243,25],[248,8,244,4,"type"],[248,12,244,8],[248,14,244,10],[249,6,245,2],[249,7,245,3],[250,4,245,3],[251,2,246,0],[251,3,246,10],[253,2,248,0],[254,0,249,0],[255,0,250,0],[257,2,269,0],[258,0,270,0],[259,0,271,0],[260,2,272,7],[260,6,272,13,"initialErrorState"],[260,23,272,42],[260,26,272,42,"exports"],[260,33,272,42],[260,34,272,42,"initialErrorState"],[260,51,272,42],[260,54,272,45],[261,4,273,2,"apiErrors"],[261,13,273,11],[261,15,273,13],[261,17,273,15],[262,4,274,2,"reduxErrors"],[262,15,274,13],[262,17,274,15],[263,2,275,0],[263,3,275,1],[265,2,277,0],[266,0,278,0],[267,0,279,0],[268,2,280,7],[268,6,280,13,"errorReducer"],[268,18,280,25],[268,21,280,25,"exports"],[268,28,280,25],[268,29,280,25,"errorReducer"],[268,41,280,25],[268,44,280,28],[268,53,280,13,"errorReducer"],[268,65,280,25,"errorReducer"],[268,66,280,25],[268,68,280,84],[269,4,280,84],[269,8,280,29,"state"],[269,13,280,34],[269,16,280,34,"arguments"],[269,25,280,34],[269,26,280,34,"length"],[269,32,280,34],[269,40,280,34,"arguments"],[269,49,280,34],[269,57,280,34,"undefined"],[269,66,280,34],[269,69,280,34,"arguments"],[269,78,280,34],[269,84,280,37,"initialErrorState"],[269,101,280,54],[270,4,280,54],[270,8,280,56,"action"],[270,14,280,67],[270,17,280,67,"arguments"],[270,26,280,67],[270,27,280,67,"length"],[270,33,280,67],[270,40,280,67,"arguments"],[270,49,280,67],[270,55,280,67,"undefined"],[270,64,280,67],[271,4,281,2],[271,12,281,10,"action"],[271,18,281,16],[271,19,281,17,"type"],[271,23,281,21],[272,6,282,4],[272,11,282,9],[272,30,282,28],[273,8,283,6],[273,15,283,6,"Object"],[273,21,283,6],[273,22,283,6,"assign"],[273,28,283,6],[273,33,284,11,"state"],[273,38,284,16],[274,10,285,8,"apiErrors"],[274,19,285,17],[274,24,285,17,"concat"],[274,30,285,17],[274,35,285,17,"_toConsumableArray2"],[274,54,285,17],[274,55,285,17,"default"],[274,62,285,17],[274,64,286,13,"state"],[274,69,286,18],[274,70,286,19,"apiErrors"],[274,79,286,28],[274,80,286,29,"slice"],[274,85,286,34],[274,86,286,35],[274,87,286,36],[274,88,286,37],[274,89,286,38],[275,10,286,40],[276,10,287,10,"action"],[276,16,287,16],[276,17,287,17,"payload"],[276,24,287,24],[276,26,288,9],[277,10,289,8,"lastError"],[277,19,289,17],[277,21,289,19],[278,12,290,10,"message"],[278,19,290,17],[278,21,290,19,"action"],[278,27,290,25],[278,28,290,26,"payload"],[278,35,290,33],[278,36,290,34,"error"],[278,41,290,39],[278,42,290,40,"userMessage"],[278,53,290,51],[279,12,291,10,"timestamp"],[279,21,291,19],[279,23,291,21,"action"],[279,29,291,27],[279,30,291,28,"payload"],[279,37,291,35],[279,38,291,36,"timestamp"],[279,47,291,45],[280,12,292,10,"category"],[280,20,292,18],[280,22,292,20,"action"],[280,28,292,26],[280,29,292,27,"payload"],[280,36,292,34],[280,37,292,35,"error"],[280,42,292,40],[280,43,292,41,"category"],[281,10,293,8],[282,8,293,9],[283,6,296,4],[283,11,296,9],[283,32,296,30],[284,8,297,6],[284,15,297,6,"Object"],[284,21,297,6],[284,22,297,6,"assign"],[284,28,297,6],[284,33,298,11,"state"],[284,38,298,16],[285,10,299,8,"reduxErrors"],[285,21,299,19],[285,26,299,19,"concat"],[285,32,299,19],[285,37,299,19,"_toConsumableArray2"],[285,56,299,19],[285,57,299,19,"default"],[285,64,299,19],[285,66,300,13,"state"],[285,71,300,18],[285,72,300,19,"reduxErrors"],[285,83,300,30],[285,84,300,31,"slice"],[285,89,300,36],[285,90,300,37],[285,91,300,38],[285,92,300,39],[285,93,300,40],[286,10,300,42],[287,10,301,10,"action"],[287,16,301,16],[287,17,301,17,"payload"],[287,24,301,24],[287,26,302,9],[288,10,303,8,"lastError"],[288,19,303,17],[288,21,303,19],[289,12,304,10,"message"],[289,19,304,17],[289,21,304,19,"action"],[289,27,304,25],[289,28,304,26,"payload"],[289,35,304,33],[289,36,304,34,"error"],[289,41,304,39],[289,42,304,40,"message"],[289,49,304,47],[289,53,304,51],[289,75,304,73],[290,12,305,10,"timestamp"],[290,21,305,19],[290,23,305,21,"action"],[290,29,305,27],[290,30,305,28,"payload"],[290,37,305,35],[290,38,305,36,"timestamp"],[291,10,306,8],[292,8,306,9],[293,6,309,4],[293,11,309,9],[293,28,309,26],[294,8,310,6],[294,15,310,6,"Object"],[294,21,310,6],[294,22,310,6,"assign"],[294,28,310,6],[294,33,311,11,"state"],[294,38,311,16],[295,10,312,8,"apiErrors"],[295,19,312,17],[295,21,312,19],[296,8,312,21],[297,6,315,4],[297,11,315,9],[297,30,315,28],[298,8,316,6],[298,15,316,6,"Object"],[298,21,316,6],[298,22,316,6,"assign"],[298,28,316,6],[298,33,317,11,"state"],[298,38,317,16],[299,10,318,8,"reduxErrors"],[299,21,318,19],[299,23,318,21],[300,8,318,23],[301,6,321,4],[301,11,321,9],[301,28,321,26],[302,8,322,6],[302,15,322,13,"initialErrorState"],[302,32,322,30],[303,6,324,4],[304,8,325,6],[304,15,325,13,"state"],[304,20,325,18],[305,4,326,2],[306,2,327,0],[306,3,327,1],[307,0,327,2],[307,3]],"functionMap":{"names":["<global>","categorizeError","isRecoverable","getUserMessage","getRetryAfter","errorHandlingMiddleware","<anonymous>","errorRecoveryManager.strategies.find$argument_0","errorRecoveryManager.addRecoveryStrategy$argument_0.canRecover","errorRecoveryManager.addRecoveryStrategy$argument_0.recover","Promise$argument_0","clearApiErrors","clearReduxErrors","clearAllErrors","errorReducer"],"mappings":"AAA;ACkB;CDe;AEK;CFe;AGK;CHmB;AIK;CJO;mDKY,cC;mECqC,4CD;oBEG;SFE;iBGC;gCCM,oCD;gCCe,oCD;SHM;CNyD;kBWM;IXE;oBYE;IZE;kBaE;IbE;4BcmC;Cd+C"}},"type":"js/module"}]}