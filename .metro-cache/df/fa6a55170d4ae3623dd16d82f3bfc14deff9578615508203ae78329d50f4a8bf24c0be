{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"../Utilities/infoLog","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":16},"end":{"line":13,"column":47}}],"key":"JOQiliPDxvxpS4qCtoh0JoUHvB4=","exportNames":["*"]}},{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":18},"end":{"line":14,"column":38}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var infoLog = require(_dependencyMap[3], \"../Utilities/infoLog\").default;\n  var invariant = require(_dependencyMap[4], \"invariant\");\n  var DEBUG = false;\n  var TaskQueue = /*#__PURE__*/function () {\n    function TaskQueue(_ref) {\n      var onMoreTasks = _ref.onMoreTasks;\n      (0, _classCallCheck2.default)(this, TaskQueue);\n      this._onMoreTasks = onMoreTasks;\n      this._queueStack = [{\n        tasks: [],\n        popable: false\n      }];\n    }\n    return (0, _createClass2.default)(TaskQueue, [{\n      key: \"enqueue\",\n      value: function enqueue(task) {\n        this._getCurrentQueue().push(task);\n      }\n    }, {\n      key: \"enqueueTasks\",\n      value: function enqueueTasks(tasks) {\n        var _this = this;\n        tasks.forEach(function (task) {\n          return _this.enqueue(task);\n        });\n      }\n    }, {\n      key: \"cancelTasks\",\n      value: function cancelTasks(tasksToCancel) {\n        this._queueStack = this._queueStack.map(function (queue) {\n          return Object.assign({}, queue, {\n            tasks: queue.tasks.filter(function (task) {\n              return tasksToCancel.indexOf(task) === -1;\n            })\n          });\n        }).filter(function (queue, idx) {\n          return queue.tasks.length > 0 || idx === 0;\n        });\n      }\n    }, {\n      key: \"hasTasksToProcess\",\n      value: function hasTasksToProcess() {\n        return this._getCurrentQueue().length > 0;\n      }\n    }, {\n      key: \"processNext\",\n      value: function processNext() {\n        var queue = this._getCurrentQueue();\n        if (queue.length) {\n          var task = queue.shift();\n          try {\n            if (typeof task === 'object' && task.gen) {\n              DEBUG && infoLog('TaskQueue: genPromise for task ' + task.name);\n              this._genPromise(task);\n            } else if (typeof task === 'object' && task.run) {\n              DEBUG && infoLog('TaskQueue: run task ' + task.name);\n              task.run();\n            } else {\n              invariant(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\\n' + JSON.stringify(task, null, 2));\n              DEBUG && infoLog('TaskQueue: run anonymous task');\n              task();\n            }\n          } catch (e) {\n            e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;\n            throw e;\n          }\n        }\n      }\n    }, {\n      key: \"_getCurrentQueue\",\n      value: function _getCurrentQueue() {\n        var stackIdx = this._queueStack.length - 1;\n        var queue = this._queueStack[stackIdx];\n        if (queue.popable && queue.tasks.length === 0 && this._queueStack.length > 1) {\n          this._queueStack.pop();\n          DEBUG && infoLog('TaskQueue: popped queue: ', {\n            stackIdx: stackIdx,\n            queueStackSize: this._queueStack.length\n          });\n          return this._getCurrentQueue();\n        } else {\n          return queue.tasks;\n        }\n      }\n    }, {\n      key: \"_genPromise\",\n      value: function _genPromise(task) {\n        var _this2 = this;\n        this._queueStack.push({\n          tasks: [],\n          popable: false\n        });\n        var stackIdx = this._queueStack.length - 1;\n        var stackItem = this._queueStack[stackIdx];\n        DEBUG && infoLog('TaskQueue: push new queue: ', {\n          stackIdx: stackIdx\n        });\n        DEBUG && infoLog('TaskQueue: exec gen task ' + task.name);\n        task.gen().then(function () {\n          DEBUG && infoLog('TaskQueue: onThen for gen task ' + task.name, {\n            stackIdx: stackIdx,\n            queueStackSize: _this2._queueStack.length\n          });\n          stackItem.popable = true;\n          _this2.hasTasksToProcess() && _this2._onMoreTasks();\n        }).catch(function (ex) {\n          setTimeout(function () {\n            ex.message = `TaskQueue: Error resolving Promise in task ${task.name}: ${ex.message}`;\n            throw ex;\n          }, 0);\n        });\n      }\n    }]);\n  }();\n  var _default = exports.default = TaskQueue;\n});","lineCount":126,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13],[4,6,11,13,"_interopRequireDefault"],[4,28,11,13],[4,31,11,13,"require"],[4,38,11,13],[4,39,11,13,"_dependencyMap"],[4,53,11,13],[5,2,11,13,"Object"],[5,8,11,13],[5,9,11,13,"defineProperty"],[5,23,11,13],[5,24,11,13,"exports"],[5,31,11,13],[6,4,11,13,"value"],[6,9,11,13],[7,2,11,13],[8,2,11,13,"exports"],[8,9,11,13],[8,10,11,13,"default"],[8,17,11,13],[9,2,11,13],[9,6,11,13,"_classCallCheck2"],[9,22,11,13],[9,25,11,13,"_interopRequireDefault"],[9,47,11,13],[9,48,11,13,"require"],[9,55,11,13],[9,56,11,13,"_dependencyMap"],[9,70,11,13],[10,2,11,13],[10,6,11,13,"_createClass2"],[10,19,11,13],[10,22,11,13,"_interopRequireDefault"],[10,44,11,13],[10,45,11,13,"require"],[10,52,11,13],[10,53,11,13,"_dependencyMap"],[10,67,11,13],[11,2,13,0],[11,6,13,6,"infoLog"],[11,13,13,13],[11,16,13,16,"require"],[11,23,13,23],[11,24,13,23,"_dependencyMap"],[11,38,13,23],[11,65,13,46],[11,66,13,47],[11,67,13,48,"default"],[11,74,13,55],[12,2,14,0],[12,6,14,6,"invariant"],[12,15,14,15],[12,18,14,18,"require"],[12,25,14,25],[12,26,14,25,"_dependencyMap"],[12,40,14,25],[12,56,14,37],[12,57,14,38],[13,2,26,0],[13,6,26,6,"DEBUG"],[13,11,26,18],[13,14,26,21],[13,19,26,26],[14,2,26,27],[14,6,44,6,"TaskQueue"],[14,15,44,15],[15,4,52,2],[15,13,52,2,"TaskQueue"],[15,23,52,2,"_ref"],[15,27,52,2],[15,29,52,61],[16,6,52,61],[16,10,52,15,"onMoreTasks"],[16,21,52,26],[16,24,52,26,"_ref"],[16,28,52,26],[16,29,52,15,"onMoreTasks"],[16,40,52,26],[17,6,52,26],[17,10,52,26,"_classCallCheck2"],[17,26,52,26],[17,27,52,26,"default"],[17,34,52,26],[17,42,52,26,"TaskQueue"],[17,51,52,26],[18,6,53,4],[18,10,53,8],[18,11,53,9,"_onMoreTasks"],[18,23,53,21],[18,26,53,24,"onMoreTasks"],[18,37,53,35],[19,6,54,4],[19,10,54,8],[19,11,54,9,"_queueStack"],[19,22,54,20],[19,25,54,23],[19,26,54,24],[20,8,54,25,"tasks"],[20,13,54,30],[20,15,54,32],[20,17,54,34],[21,8,54,36,"popable"],[21,15,54,43],[21,17,54,45],[22,6,54,50],[22,7,54,51],[22,8,54,52],[23,4,55,2],[24,4,55,3],[24,15,55,3,"_createClass2"],[24,28,55,3],[24,29,55,3,"default"],[24,36,55,3],[24,38,55,3,"TaskQueue"],[24,47,55,3],[25,6,55,3,"key"],[25,9,55,3],[26,6,55,3,"value"],[26,11,55,3],[26,13,62,2],[26,22,62,2,"enqueue"],[26,29,62,9,"enqueue"],[26,30,62,10,"task"],[26,34,62,20],[26,36,62,28],[27,8,63,4],[27,12,63,8],[27,13,63,9,"_getCurrentQueue"],[27,29,63,25],[27,30,63,26],[27,31,63,27],[27,32,63,28,"push"],[27,36,63,32],[27,37,63,33,"task"],[27,41,63,37],[27,42,63,38],[28,6,64,2],[29,4,64,3],[30,6,64,3,"key"],[30,9,64,3],[31,6,64,3,"value"],[31,11,64,3],[31,13,66,2],[31,22,66,2,"enqueueTasks"],[31,34,66,14,"enqueueTasks"],[31,35,66,15,"tasks"],[31,40,66,33],[31,42,66,41],[32,8,66,41],[32,12,66,41,"_this"],[32,17,66,41],[33,8,67,4,"tasks"],[33,13,67,9],[33,14,67,10,"forEach"],[33,21,67,17],[33,22,67,18],[33,32,67,18,"task"],[33,36,67,22],[34,10,67,22],[34,17,67,26,"_this"],[34,22,67,30],[34,23,67,31,"enqueue"],[34,30,67,38],[34,31,67,39,"task"],[34,35,67,43],[34,36,67,44],[35,8,67,44],[35,10,67,45],[36,6,68,2],[37,4,68,3],[38,6,68,3,"key"],[38,9,68,3],[39,6,68,3,"value"],[39,11,68,3],[39,13,70,2],[39,22,70,2,"cancelTasks"],[39,33,70,13,"cancelTasks"],[39,34,70,14,"tasksToCancel"],[39,47,70,40],[39,49,70,48],[40,8,72,4],[40,12,72,8],[40,13,72,9,"_queueStack"],[40,24,72,20],[40,27,72,23],[40,31,72,27],[40,32,72,28,"_queueStack"],[40,43,72,39],[40,44,73,7,"map"],[40,47,73,10],[40,48,73,11],[40,58,73,11,"queue"],[40,63,73,16],[41,10,73,16],[41,17,73,16,"Object"],[41,23,73,16],[41,24,73,16,"assign"],[41,30,73,16],[41,35,74,11,"queue"],[41,40,74,16],[42,12,75,8,"tasks"],[42,17,75,13],[42,19,75,15,"queue"],[42,24,75,20],[42,25,75,21,"tasks"],[42,30,75,26],[42,31,75,27,"filter"],[42,37,75,33],[42,38,75,34],[42,48,75,34,"task"],[42,52,75,38],[43,14,75,38],[43,21,75,42,"tasksToCancel"],[43,34,75,55],[43,35,75,56,"indexOf"],[43,42,75,63],[43,43,75,64,"task"],[43,47,75,68],[43,48,75,69],[43,53,75,74],[43,54,75,75],[43,55,75,76],[44,12,75,76],[45,10,75,77],[46,8,75,77],[46,9,76,8],[46,10,76,9],[46,11,77,7,"filter"],[46,17,77,13],[46,18,77,14],[46,28,77,15,"queue"],[46,33,77,20],[46,35,77,22,"idx"],[46,38,77,25],[47,10,77,25],[47,17,77,30,"queue"],[47,22,77,35],[47,23,77,36,"tasks"],[47,28,77,41],[47,29,77,42,"length"],[47,35,77,48],[47,38,77,51],[47,39,77,52],[47,43,77,56,"idx"],[47,46,77,59],[47,51,77,64],[47,52,77,65],[48,8,77,65],[48,10,77,66],[49,6,78,2],[50,4,78,3],[51,6,78,3,"key"],[51,9,78,3],[52,6,78,3,"value"],[52,11,78,3],[52,13,90,2],[52,22,90,2,"hasTasksToProcess"],[52,39,90,19,"hasTasksToProcess"],[52,40,90,19],[52,42,90,31],[53,8,91,4],[53,15,91,11],[53,19,91,15],[53,20,91,16,"_getCurrentQueue"],[53,36,91,32],[53,37,91,33],[53,38,91,34],[53,39,91,35,"length"],[53,45,91,41],[53,48,91,44],[53,49,91,45],[54,6,92,2],[55,4,92,3],[56,6,92,3,"key"],[56,9,92,3],[57,6,92,3,"value"],[57,11,92,3],[57,13,97,2],[57,22,97,2,"processNext"],[57,33,97,13,"processNext"],[57,34,97,13],[57,36,97,22],[58,8,98,4],[58,12,98,10,"queue"],[58,17,98,15],[58,20,98,18],[58,24,98,22],[58,25,98,23,"_getCurrentQueue"],[58,41,98,39],[58,42,98,40],[58,43,98,41],[59,8,99,4],[59,12,99,8,"queue"],[59,17,99,13],[59,18,99,14,"length"],[59,24,99,20],[59,26,99,22],[60,10,100,6],[60,14,100,12,"task"],[60,18,100,16],[60,21,100,19,"queue"],[60,26,100,24],[60,27,100,25,"shift"],[60,32,100,30],[60,33,100,31],[60,34,100,32],[61,10,101,6],[61,14,101,10],[62,12,102,8],[62,16,102,12],[62,23,102,19,"task"],[62,27,102,23],[62,32,102,28],[62,40,102,36],[62,44,102,40,"task"],[62,48,102,44],[62,49,102,45,"gen"],[62,52,102,48],[62,54,102,50],[63,14,103,10,"DEBUG"],[63,19,103,15],[63,23,103,19,"infoLog"],[63,30,103,26],[63,31,103,27],[63,64,103,60],[63,67,103,63,"task"],[63,71,103,67],[63,72,103,68,"name"],[63,76,103,72],[63,77,103,73],[64,14,104,10],[64,18,104,14],[64,19,104,15,"_genPromise"],[64,30,104,26],[64,31,104,27,"task"],[64,35,104,31],[64,36,104,32],[65,12,105,8],[65,13,105,9],[65,19,105,15],[65,23,105,19],[65,30,105,26,"task"],[65,34,105,30],[65,39,105,35],[65,47,105,43],[65,51,105,47,"task"],[65,55,105,51],[65,56,105,52,"run"],[65,59,105,55],[65,61,105,57],[66,14,106,10,"DEBUG"],[66,19,106,15],[66,23,106,19,"infoLog"],[66,30,106,26],[66,31,106,27],[66,53,106,49],[66,56,106,52,"task"],[66,60,106,56],[66,61,106,57,"name"],[66,65,106,61],[66,66,106,62],[67,14,107,10,"task"],[67,18,107,14],[67,19,107,15,"run"],[67,22,107,18],[67,23,107,19],[67,24,107,20],[68,12,108,8],[68,13,108,9],[68,19,108,15],[69,14,109,10,"invariant"],[69,23,109,19],[69,24,110,12],[69,31,110,19,"task"],[69,35,110,23],[69,40,110,28],[69,50,110,38],[69,52,111,12],[69,111,111,71],[69,114,112,14,"JSON"],[69,118,112,18],[69,119,112,19,"stringify"],[69,128,112,28],[69,129,112,29,"task"],[69,133,112,33],[69,135,112,35],[69,139,112,39],[69,141,112,41],[69,142,112,42],[69,143,113,10],[69,144,113,11],[70,14,114,10,"DEBUG"],[70,19,114,15],[70,23,114,19,"infoLog"],[70,30,114,26],[70,31,114,27],[70,62,114,58],[70,63,114,59],[71,14,115,10,"task"],[71,18,115,14],[71,19,115,15],[71,20,115,16],[72,12,116,8],[73,10,117,6],[73,11,117,7],[73,12,117,8],[73,19,117,15,"e"],[73,20,117,16],[73,22,117,18],[74,12,118,8,"e"],[74,13,118,9],[74,14,118,10,"message"],[74,21,118,17],[74,24,120,10],[74,53,120,39],[74,57,120,43,"task"],[74,61,120,47],[74,62,120,48,"name"],[74,66,120,52],[74,70,120,56],[74,72,120,58],[74,73,120,59],[74,76,120,62],[74,80,120,66],[74,83,120,69,"e"],[74,84,120,70],[74,85,120,71,"message"],[74,92,120,78],[75,12,121,8],[75,18,121,14,"e"],[75,19,121,15],[76,10,122,6],[77,8,123,4],[78,6,124,2],[79,4,124,3],[80,6,124,3,"key"],[80,9,124,3],[81,6,124,3,"value"],[81,11,124,3],[81,13,133,2],[81,22,133,2,"_getCurrentQueue"],[81,38,133,18,"_getCurrentQueue"],[81,39,133,18],[81,41,133,34],[82,8,134,4],[82,12,134,10,"stackIdx"],[82,20,134,18],[82,23,134,21],[82,27,134,25],[82,28,134,26,"_queueStack"],[82,39,134,37],[82,40,134,38,"length"],[82,46,134,44],[82,49,134,47],[82,50,134,48],[83,8,135,4],[83,12,135,10,"queue"],[83,17,135,15],[83,20,135,18],[83,24,135,22],[83,25,135,23,"_queueStack"],[83,36,135,34],[83,37,135,35,"stackIdx"],[83,45,135,43],[83,46,135,44],[84,8,136,4],[84,12,137,6,"queue"],[84,17,137,11],[84,18,137,12,"popable"],[84,25,137,19],[84,29,138,6,"queue"],[84,34,138,11],[84,35,138,12,"tasks"],[84,40,138,17],[84,41,138,18,"length"],[84,47,138,24],[84,52,138,29],[84,53,138,30],[84,57,139,6],[84,61,139,10],[84,62,139,11,"_queueStack"],[84,73,139,22],[84,74,139,23,"length"],[84,80,139,29],[84,83,139,32],[84,84,139,33],[84,86,140,6],[85,10,141,6],[85,14,141,10],[85,15,141,11,"_queueStack"],[85,26,141,22],[85,27,141,23,"pop"],[85,30,141,26],[85,31,141,27],[85,32,141,28],[86,10,142,6,"DEBUG"],[86,15,142,11],[86,19,143,8,"infoLog"],[86,26,143,15],[86,27,143,16],[86,54,143,43],[86,56,143,45],[87,12,144,10,"stackIdx"],[87,20,144,18],[87,22,144,10,"stackIdx"],[87,30,144,18],[88,12,145,10,"queueStackSize"],[88,26,145,24],[88,28,145,26],[88,32,145,30],[88,33,145,31,"_queueStack"],[88,44,145,42],[88,45,145,43,"length"],[89,10,146,8],[89,11,146,9],[89,12,146,10],[90,10,147,6],[90,17,147,13],[90,21,147,17],[90,22,147,18,"_getCurrentQueue"],[90,38,147,34],[90,39,147,35],[90,40,147,36],[91,8,148,4],[91,9,148,5],[91,15,148,11],[92,10,149,6],[92,17,149,13,"queue"],[92,22,149,18],[92,23,149,19,"tasks"],[92,28,149,24],[93,8,150,4],[94,6,151,2],[95,4,151,3],[96,6,151,3,"key"],[96,9,151,3],[97,6,151,3,"value"],[97,11,151,3],[97,13,153,2],[97,22,153,2,"_genPromise"],[97,33,153,13,"_genPromise"],[97,34,153,14,"task"],[97,38,153,31],[97,40,153,33],[98,8,153,33],[98,12,153,33,"_this2"],[98,18,153,33],[99,8,158,4],[99,12,158,8],[99,13,158,9,"_queueStack"],[99,24,158,20],[99,25,158,21,"push"],[99,29,158,25],[99,30,158,26],[100,10,158,27,"tasks"],[100,15,158,32],[100,17,158,34],[100,19,158,36],[101,10,158,38,"popable"],[101,17,158,45],[101,19,158,47],[102,8,158,52],[102,9,158,53],[102,10,158,54],[103,8,159,4],[103,12,159,10,"stackIdx"],[103,20,159,18],[103,23,159,21],[103,27,159,25],[103,28,159,26,"_queueStack"],[103,39,159,37],[103,40,159,38,"length"],[103,46,159,44],[103,49,159,47],[103,50,159,48],[104,8,160,4],[104,12,160,10,"stackItem"],[104,21,160,19],[104,24,160,22],[104,28,160,26],[104,29,160,27,"_queueStack"],[104,40,160,38],[104,41,160,39,"stackIdx"],[104,49,160,47],[104,50,160,48],[105,8,161,4,"DEBUG"],[105,13,161,9],[105,17,161,13,"infoLog"],[105,24,161,20],[105,25,161,21],[105,54,161,50],[105,56,161,52],[106,10,161,53,"stackIdx"],[106,18,161,61],[106,20,161,53,"stackIdx"],[107,8,161,61],[107,9,161,62],[107,10,161,63],[108,8,162,4,"DEBUG"],[108,13,162,9],[108,17,162,13,"infoLog"],[108,24,162,20],[108,25,162,21],[108,52,162,48],[108,55,162,51,"task"],[108,59,162,55],[108,60,162,56,"name"],[108,64,162,60],[108,65,162,61],[109,8,163,4,"task"],[109,12,163,8],[109,13,164,7,"gen"],[109,16,164,10],[109,17,164,11],[109,18,164,12],[109,19,165,7,"then"],[109,23,165,11],[109,24,165,12],[109,36,165,18],[110,10,166,8,"DEBUG"],[110,15,166,13],[110,19,167,10,"infoLog"],[110,26,167,17],[110,27,167,18],[110,60,167,51],[110,63,167,54,"task"],[110,67,167,58],[110,68,167,59,"name"],[110,72,167,63],[110,74,167,65],[111,12,168,12,"stackIdx"],[111,20,168,20],[111,22,168,12,"stackIdx"],[111,30,168,20],[112,12,169,12,"queueStackSize"],[112,26,169,26],[112,28,169,28,"_this2"],[112,34,169,32],[112,35,169,33,"_queueStack"],[112,46,169,44],[112,47,169,45,"length"],[113,10,170,10],[113,11,170,11],[113,12,170,12],[114,10,171,8,"stackItem"],[114,19,171,17],[114,20,171,18,"popable"],[114,27,171,25],[114,30,171,28],[114,34,171,32],[115,10,172,8,"_this2"],[115,16,172,12],[115,17,172,13,"hasTasksToProcess"],[115,34,172,30],[115,35,172,31],[115,36,172,32],[115,40,172,36,"_this2"],[115,46,172,40],[115,47,172,41,"_onMoreTasks"],[115,59,172,53],[115,60,172,54],[115,61,172,55],[116,8,173,6],[116,9,173,7],[116,10,173,8],[116,11,174,7,"catch"],[116,16,174,12],[116,17,174,13],[116,27,174,13,"ex"],[116,29,174,15],[116,31,174,19],[117,10,175,8,"setTimeout"],[117,20,175,18],[117,21,175,19],[117,33,175,25],[118,12,176,10,"ex"],[118,14,176,12],[118,15,176,13,"message"],[118,22,176,20],[118,25,176,23],[118,71,176,69,"task"],[118,75,176,73],[118,76,176,74,"name"],[118,80,176,78],[118,85,176,83,"ex"],[118,87,176,85],[118,88,176,86,"message"],[118,95,176,93],[118,97,176,95],[119,12,177,10],[119,18,177,16,"ex"],[119,20,177,18],[120,10,178,8],[120,11,178,9],[120,13,178,11],[120,14,178,12],[120,15,178,13],[121,8,179,6],[121,9,179,7],[121,10,179,8],[122,6,180,2],[123,4,180,3],[124,2,180,3],[125,2,180,3],[125,6,180,3,"_default"],[125,14,180,3],[125,17,180,3,"exports"],[125,24,180,3],[125,25,180,3,"default"],[125,32,180,3],[125,35,183,15,"TaskQueue"],[125,44,183,24],[126,0,183,24],[126,3]],"functionMap":{"names":["<global>","TaskQueue","constructor","enqueue","enqueueTasks","tasks.forEach$argument_0","cancelTasks","_queueStack.map$argument_0","queue.tasks.filter$argument_0","_queueStack.map.filter$argument_0","hasTasksToProcess","processNext","_getCurrentQueue","_genPromise","task.gen.then$argument_0","task.gen.then._catch$argument_0","setTimeout$argument_0"],"mappings":"AAA;AC2C;ECQ;GDG;EEO;GFE;EGE;kBCC,0BD;GHC;EKE;WCG;kCCE,0CD;QDC;cGC,mDH;GLC;ESY;GTE;EUK;GV2B;EWS;GXkB;EYE;YCY;ODQ;aEC;mBCC;SDG;OFC;GZC;CDC"}},"type":"js/module"}]}