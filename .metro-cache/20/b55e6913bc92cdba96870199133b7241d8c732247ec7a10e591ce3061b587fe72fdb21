{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":91,"index":91}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"../services/supabase/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":93},"end":{"line":2,"column":71,"index":164}}],"key":"1oKwhaRe1xqGzl3XNlbj9GPxLtM=","exportNames":["*"]}},{"name":"@react-native-community/netinfo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":166},"end":{"line":3,"column":54,"index":220}}],"key":"PqZcYTlMIVnzFjdViPzMiGUu7Hg=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":222},"end":{"line":4,"column":56,"index":278}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"../store/api/networkAwareApi","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":280},"end":{"line":5,"column":59,"index":339}}],"key":"vZV6uiUYSWrK0KaKVyVGr5uRKC0=","exportNames":["*"]}},{"name":"../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":341},"end":{"line":6,"column":51,"index":392}}],"key":"yE50x5RqRtg1gxlUHvyLXkSBAF0=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useConnection = exports.ConnectionProvider = undefined;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _react = _interopRequireWildcard(require(_dependencyMap[3]));\n  var _client = require(_dependencyMap[4]);\n  var _netinfo = _interopRequireDefault(require(_dependencyMap[5]));\n  var _reactNative = require(_dependencyMap[6]);\n  var _networkAwareApi = require(_dependencyMap[7]);\n  var _EventLogger = require(_dependencyMap[8]);\n  var _jsxRuntime = require(_dependencyMap[9]);\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  var ConnectionContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var ConnectionProvider = _ref => {\n    var children = _ref.children;\n    var _useState = (0, _react.useState)({\n        isConnected: true,\n        isAuthenticated: false,\n        isChecking: false,\n        error: null,\n        lastChecked: null,\n        details: 'initializing'\n      }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      connectionState = _useState2[0],\n      setConnectionState = _useState2[1];\n    var checkConnection = (0, _react.useCallback)(/*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {\n      setConnectionState(prev => ({\n        ...prev,\n        isChecking: true,\n        error: null\n      }));\n      try {\n        // First check network connectivity\n        var netState = yield _netinfo.default.fetch();\n        if (!netState.isConnected) {\n          setConnectionState({\n            isConnected: false,\n            isAuthenticated: false,\n            isChecking: false,\n            error: 'No internet connection',\n            lastChecked: new Date(),\n            details: 'network_offline'\n          });\n          return;\n        }\n\n        // Then check Supabase connection\n        var result = yield (0, _client.testConnection)();\n        setConnectionState({\n          isConnected: result.connected,\n          isAuthenticated: result.authenticated || false,\n          isChecking: false,\n          error: result.error || null,\n          lastChecked: new Date(),\n          details: result.details || 'unknown'\n        });\n      } catch (error) {\n        // Don't spam network errors\n        if (!error?.message?.includes('Network request failed')) {\n          (0, _networkAwareApi.logApiError)(error, 'ConnectionContext.checkConnection');\n        }\n        setConnectionState({\n          isConnected: false,\n          isAuthenticated: false,\n          isChecking: false,\n          error: error.message || 'Connection check failed',\n          lastChecked: new Date(),\n          details: 'error'\n        });\n      }\n    }), []);\n    var resetError = (0, _react.useCallback)(() => {\n      setConnectionState(prev => ({\n        ...prev,\n        error: null\n      }));\n    }, []);\n\n    // Check connection on mount and when app comes to foreground\n    (0, _react.useEffect)(() => {\n      // MUCH longer delay to prevent blocking app startup completely\n      var initialCheckTimer = setTimeout(() => {\n        checkConnection().catch(error => {\n          _EventLogger.EventLogger.warn('ConnectionContext', 'Initial connection check failed, app will continue offline:', error);\n        });\n      }, 3000); // 3 second delay to let app fully initialize\n\n      // Listen for app state changes\n      var subscription = _reactNative.AppState.addEventListener('change', nextAppState => {\n        if (nextAppState === 'active') {\n          // Add delay to prevent blocking app resume\n          setTimeout(() => {\n            checkConnection().catch(error => {\n              _EventLogger.EventLogger.warn('ConnectionContext', 'Connection check on app resume failed:', error);\n            });\n          }, 500);\n        }\n      });\n\n      // Listen for network state changes with error handling\n      var unsubscribe = _netinfo.default.addEventListener(state => {\n        try {\n          if (state.isConnected && !connectionState.isConnected) {\n            // Delay connection check after network reconnects\n            setTimeout(() => {\n              checkConnection().catch(error => {\n                _EventLogger.EventLogger.warn('ConnectionContext', 'Network reconnect check failed:', error);\n              });\n            }, 1000);\n          } else if (!state.isConnected) {\n            setConnectionState(prev => ({\n              ...prev,\n              isConnected: false,\n              error: 'No internet connection',\n              details: 'network_offline'\n            }));\n          }\n        } catch (error) {\n          _EventLogger.EventLogger.warn('ConnectionContext', 'Network state change handler error:', error);\n        }\n      });\n\n      // Listen for auth state changes with error handling\n      var authListener;\n      try {\n        var _supabase$auth$onAuth = _client.supabase.auth.onAuthStateChange((event, session) => {\n            try {\n              if (event === 'SIGNED_IN' || event === 'TOKEN_REFRESHED') {\n                // Delay connection check to prevent blocking auth flow\n                setTimeout(() => {\n                  checkConnection().catch(error => {\n                    _EventLogger.EventLogger.warn('ConnectionContext', 'Auth state change connection check failed:', error);\n                  });\n                }, 1000);\n              } else if (event === 'SIGNED_OUT') {\n                setConnectionState(prev => ({\n                  ...prev,\n                  isAuthenticated: false\n                }));\n              }\n            } catch (error) {\n              _EventLogger.EventLogger.warn('ConnectionContext', 'Auth state change handler error:', error);\n            }\n          }),\n          data = _supabase$auth$onAuth.data;\n        authListener = data;\n      } catch (error) {\n        _EventLogger.EventLogger.warn('ConnectionContext', 'Failed to set up auth listener:', error);\n      }\n      return () => {\n        clearTimeout(initialCheckTimer);\n        try {\n          subscription.remove();\n          unsubscribe();\n          authListener?.subscription?.unsubscribe();\n        } catch (error) {\n          _EventLogger.EventLogger.warn('ConnectionContext', 'Cleanup error in ConnectionProvider:', error);\n        }\n      };\n    }, [checkConnection]);\n\n    // Periodic connection check every 5 minutes\n    (0, _react.useEffect)(() => {\n      var interval = setInterval(() => {\n        if (!connectionState.isChecking) {\n          checkConnection();\n        }\n      }, 300000); // 5 minutes\n\n      return () => clearInterval(interval);\n    }, [checkConnection, connectionState.isChecking]);\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(ConnectionContext.Provider, {\n      value: {\n        connectionState,\n        checkConnection,\n        resetError\n      },\n      children: children\n    });\n  };\n  exports.ConnectionProvider = ConnectionProvider;\n  var useConnection = () => {\n    var context = (0, _react.useContext)(ConnectionContext);\n    if (!context) {\n      throw new Error('useConnection must be used within ConnectionProvider');\n    }\n    return context;\n  };\n  exports.useConnection = useConnection;\n});","lineCount":195,"map":[[9,2,1,0],[9,6,1,0,"_react"],[9,12,1,0],[9,15,1,0,"_interopRequireWildcard"],[9,38,1,0],[9,39,1,0,"require"],[9,46,1,0],[9,47,1,0,"_dependencyMap"],[9,61,1,0],[10,2,2,0],[10,6,2,0,"_client"],[10,13,2,0],[10,16,2,0,"require"],[10,23,2,0],[10,24,2,0,"_dependencyMap"],[10,38,2,0],[11,2,3,0],[11,6,3,0,"_netinfo"],[11,14,3,0],[11,17,3,0,"_interopRequireDefault"],[11,39,3,0],[11,40,3,0,"require"],[11,47,3,0],[11,48,3,0,"_dependencyMap"],[11,62,3,0],[12,2,4,0],[12,6,4,0,"_reactNative"],[12,18,4,0],[12,21,4,0,"require"],[12,28,4,0],[12,29,4,0,"_dependencyMap"],[12,43,4,0],[13,2,5,0],[13,6,5,0,"_networkAwareApi"],[13,22,5,0],[13,25,5,0,"require"],[13,32,5,0],[13,33,5,0,"_dependencyMap"],[13,47,5,0],[14,2,6,0],[14,6,6,0,"_EventLogger"],[14,18,6,0],[14,21,6,0,"require"],[14,28,6,0],[14,29,6,0,"_dependencyMap"],[14,43,6,0],[15,2,6,51],[15,6,6,51,"_jsxRuntime"],[15,17,6,51],[15,20,6,51,"require"],[15,27,6,51],[15,28,6,51,"_dependencyMap"],[15,42,6,51],[16,2,6,51],[16,11,6,51,"_interopRequireWildcard"],[16,35,6,51,"e"],[16,36,6,51],[16,38,6,51,"t"],[16,39,6,51],[16,68,6,51,"WeakMap"],[16,75,6,51],[16,81,6,51,"r"],[16,82,6,51],[16,89,6,51,"WeakMap"],[16,96,6,51],[16,100,6,51,"n"],[16,101,6,51],[16,108,6,51,"WeakMap"],[16,115,6,51],[16,127,6,51,"_interopRequireWildcard"],[16,150,6,51],[16,162,6,51,"_interopRequireWildcard"],[16,163,6,51,"e"],[16,164,6,51],[16,166,6,51,"t"],[16,167,6,51],[16,176,6,51,"t"],[16,177,6,51],[16,181,6,51,"e"],[16,182,6,51],[16,186,6,51,"e"],[16,187,6,51],[16,188,6,51,"__esModule"],[16,198,6,51],[16,207,6,51,"e"],[16,208,6,51],[16,214,6,51,"o"],[16,215,6,51],[16,217,6,51,"i"],[16,218,6,51],[16,220,6,51,"f"],[16,221,6,51],[16,226,6,51,"__proto__"],[16,235,6,51],[16,243,6,51,"default"],[16,250,6,51],[16,252,6,51,"e"],[16,253,6,51],[16,270,6,51,"e"],[16,271,6,51],[16,294,6,51,"e"],[16,295,6,51],[16,320,6,51,"e"],[16,321,6,51],[16,330,6,51,"f"],[16,331,6,51],[16,337,6,51,"o"],[16,338,6,51],[16,341,6,51,"t"],[16,342,6,51],[16,345,6,51,"n"],[16,346,6,51],[16,349,6,51,"r"],[16,350,6,51],[16,358,6,51,"o"],[16,359,6,51],[16,360,6,51,"has"],[16,363,6,51],[16,364,6,51,"e"],[16,365,6,51],[16,375,6,51,"o"],[16,376,6,51],[16,377,6,51,"get"],[16,380,6,51],[16,381,6,51,"e"],[16,382,6,51],[16,385,6,51,"o"],[16,386,6,51],[16,387,6,51,"set"],[16,390,6,51],[16,391,6,51,"e"],[16,392,6,51],[16,394,6,51,"f"],[16,395,6,51],[16,409,6,51,"_t"],[16,411,6,51],[16,415,6,51,"e"],[16,416,6,51],[16,432,6,51,"_t"],[16,434,6,51],[16,441,6,51,"hasOwnProperty"],[16,455,6,51],[16,456,6,51,"call"],[16,460,6,51],[16,461,6,51,"e"],[16,462,6,51],[16,464,6,51,"_t"],[16,466,6,51],[16,473,6,51,"i"],[16,474,6,51],[16,478,6,51,"o"],[16,479,6,51],[16,482,6,51,"Object"],[16,488,6,51],[16,489,6,51,"defineProperty"],[16,503,6,51],[16,508,6,51,"Object"],[16,514,6,51],[16,515,6,51,"getOwnPropertyDescriptor"],[16,539,6,51],[16,540,6,51,"e"],[16,541,6,51],[16,543,6,51,"_t"],[16,545,6,51],[16,552,6,51,"i"],[16,553,6,51],[16,554,6,51,"get"],[16,557,6,51],[16,561,6,51,"i"],[16,562,6,51],[16,563,6,51,"set"],[16,566,6,51],[16,570,6,51,"o"],[16,571,6,51],[16,572,6,51,"f"],[16,573,6,51],[16,575,6,51,"_t"],[16,577,6,51],[16,579,6,51,"i"],[16,580,6,51],[16,584,6,51,"f"],[16,585,6,51],[16,586,6,51,"_t"],[16,588,6,51],[16,592,6,51,"e"],[16,593,6,51],[16,594,6,51,"_t"],[16,596,6,51],[16,607,6,51,"f"],[16,608,6,51],[16,613,6,51,"e"],[16,614,6,51],[16,616,6,51,"t"],[16,617,6,51],[17,2,23,0],[17,6,23,6,"ConnectionContext"],[17,23,23,23],[17,39,23,26],[17,43,23,26,"createContext"],[17,63,23,39],[17,65,23,75,"undefined"],[17,74,23,84],[17,75,23,85],[18,2,25,7],[18,6,25,13,"ConnectionProvider"],[18,24,25,72],[18,27,25,75,"_ref"],[18,31,25,75],[18,35,25,93],[19,4,25,93],[19,8,25,78,"children"],[19,16,25,86],[19,19,25,86,"_ref"],[19,23,25,86],[19,24,25,78,"children"],[19,32,25,86],[20,4,26,2],[20,8,26,2,"_useState"],[20,17,26,2],[20,20,26,48],[20,24,26,48,"useState"],[20,39,26,56],[20,41,26,74],[21,8,27,4,"isConnected"],[21,19,27,15],[21,21,27,17],[21,25,27,21],[22,8,28,4,"isAuthenticated"],[22,23,28,19],[22,25,28,21],[22,30,28,26],[23,8,29,4,"isChecking"],[23,18,29,14],[23,20,29,16],[23,25,29,21],[24,8,30,4,"error"],[24,13,30,9],[24,15,30,11],[24,19,30,15],[25,8,31,4,"lastChecked"],[25,19,31,15],[25,21,31,17],[25,25,31,21],[26,8,32,4,"details"],[26,15,32,11],[26,17,32,13],[27,6,33,2],[27,7,33,3],[27,8,33,4],[28,6,33,4,"_useState2"],[28,16,33,4],[28,23,33,4,"_slicedToArray2"],[28,38,33,4],[28,39,33,4,"default"],[28,46,33,4],[28,48,33,4,"_useState"],[28,57,33,4],[29,6,26,9,"connectionState"],[29,21,26,24],[29,24,26,24,"_useState2"],[29,34,26,24],[30,6,26,26,"setConnectionState"],[30,24,26,44],[30,27,26,44,"_useState2"],[30,37,26,44],[31,4,35,2],[31,8,35,8,"checkConnection"],[31,23,35,23],[31,26,35,26],[31,30,35,26,"useCallback"],[31,48,35,37],[31,67,35,37,"_asyncToGenerator2"],[31,85,35,37],[31,86,35,37,"default"],[31,93,35,37],[31,95,35,38],[31,108,35,50],[32,6,36,4,"setConnectionState"],[32,24,36,22],[32,25,36,23,"prev"],[32,29,36,27],[32,34,36,32],[33,8,36,34],[33,11,36,37,"prev"],[33,15,36,41],[34,8,36,43,"isChecking"],[34,18,36,53],[34,20,36,55],[34,24,36,59],[35,8,36,61,"error"],[35,13,36,66],[35,15,36,68],[36,6,36,73],[36,7,36,74],[36,8,36,75],[36,9,36,76],[37,6,38,4],[37,10,38,8],[38,8,39,6],[39,8,40,6],[39,12,40,12,"netState"],[39,20,40,20],[39,29,40,29,"NetInfo"],[39,45,40,36],[39,46,40,37,"fetch"],[39,51,40,42],[39,52,40,43],[39,53,40,44],[40,8,42,6],[40,12,42,10],[40,13,42,11,"netState"],[40,21,42,19],[40,22,42,20,"isConnected"],[40,33,42,31],[40,35,42,33],[41,10,43,8,"setConnectionState"],[41,28,43,26],[41,29,43,27],[42,12,44,10,"isConnected"],[42,23,44,21],[42,25,44,23],[42,30,44,28],[43,12,45,10,"isAuthenticated"],[43,27,45,25],[43,29,45,27],[43,34,45,32],[44,12,46,10,"isChecking"],[44,22,46,20],[44,24,46,22],[44,29,46,27],[45,12,47,10,"error"],[45,17,47,15],[45,19,47,17],[45,43,47,41],[46,12,48,10,"lastChecked"],[46,23,48,21],[46,25,48,23],[46,29,48,27,"Date"],[46,33,48,31],[46,34,48,32],[46,35,48,33],[47,12,49,10,"details"],[47,19,49,17],[47,21,49,19],[48,10,50,8],[48,11,50,9],[48,12,50,10],[49,10,51,8],[50,8,52,6],[52,8,54,6],[53,8,55,6],[53,12,55,12,"result"],[53,18,55,18],[53,27,55,27],[53,31,55,27,"testConnection"],[53,53,55,41],[53,55,55,42],[53,56,55,43],[54,8,57,6,"setConnectionState"],[54,26,57,24],[54,27,57,25],[55,10,58,8,"isConnected"],[55,21,58,19],[55,23,58,21,"result"],[55,29,58,27],[55,30,58,28,"connected"],[55,39,58,37],[56,10,59,8,"isAuthenticated"],[56,25,59,23],[56,27,59,25,"result"],[56,33,59,31],[56,34,59,32,"authenticated"],[56,47,59,45],[56,51,59,49],[56,56,59,54],[57,10,60,8,"isChecking"],[57,20,60,18],[57,22,60,20],[57,27,60,25],[58,10,61,8,"error"],[58,15,61,13],[58,17,61,15,"result"],[58,23,61,21],[58,24,61,22,"error"],[58,29,61,27],[58,33,61,31],[58,37,61,35],[59,10,62,8,"lastChecked"],[59,21,62,19],[59,23,62,21],[59,27,62,25,"Date"],[59,31,62,29],[59,32,62,30],[59,33,62,31],[60,10,63,8,"details"],[60,17,63,15],[60,19,63,17,"result"],[60,25,63,23],[60,26,63,24,"details"],[60,33,63,31],[60,37,63,35],[61,8,64,6],[61,9,64,7],[61,10,64,8],[62,6,65,4],[62,7,65,5],[62,8,65,6],[62,15,65,13,"error"],[62,20,65,23],[62,22,65,25],[63,8,66,6],[64,8,67,6],[64,12,67,10],[64,13,67,11,"error"],[64,18,67,16],[64,20,67,18,"message"],[64,27,67,25],[64,29,67,27,"includes"],[64,37,67,35],[64,38,67,36],[64,62,67,60],[64,63,67,61],[64,65,67,63],[65,10,68,8],[65,14,68,8,"logApiError"],[65,42,68,19],[65,44,68,20,"error"],[65,49,68,25],[65,51,68,27],[65,86,68,62],[65,87,68,63],[66,8,69,6],[67,8,71,6,"setConnectionState"],[67,26,71,24],[67,27,71,25],[68,10,72,8,"isConnected"],[68,21,72,19],[68,23,72,21],[68,28,72,26],[69,10,73,8,"isAuthenticated"],[69,25,73,23],[69,27,73,25],[69,32,73,30],[70,10,74,8,"isChecking"],[70,20,74,18],[70,22,74,20],[70,27,74,25],[71,10,75,8,"error"],[71,15,75,13],[71,17,75,15,"error"],[71,22,75,20],[71,23,75,21,"message"],[71,30,75,28],[71,34,75,32],[71,59,75,57],[72,10,76,8,"lastChecked"],[72,21,76,19],[72,23,76,21],[72,27,76,25,"Date"],[72,31,76,29],[72,32,76,30],[72,33,76,31],[73,10,77,8,"details"],[73,17,77,15],[73,19,77,17],[74,8,78,6],[74,9,78,7],[74,10,78,8],[75,6,79,4],[76,4,80,2],[76,5,80,3],[76,8,80,5],[76,10,80,7],[76,11,80,8],[77,4,82,2],[77,8,82,8,"resetError"],[77,18,82,18],[77,21,82,21],[77,25,82,21,"useCallback"],[77,43,82,32],[77,45,82,33],[77,51,82,39],[78,6,83,4,"setConnectionState"],[78,24,83,22],[78,25,83,23,"prev"],[78,29,83,27],[78,34,83,32],[79,8,83,34],[79,11,83,37,"prev"],[79,15,83,41],[80,8,83,43,"error"],[80,13,83,48],[80,15,83,50],[81,6,83,55],[81,7,83,56],[81,8,83,57],[81,9,83,58],[82,4,84,2],[82,5,84,3],[82,7,84,5],[82,9,84,7],[82,10,84,8],[84,4,86,2],[85,4,87,2],[85,8,87,2,"useEffect"],[85,24,87,11],[85,26,87,12],[85,32,87,18],[86,6,88,4],[87,6,89,4],[87,10,89,10,"initialCheckTimer"],[87,27,89,27],[87,30,89,30,"setTimeout"],[87,40,89,40],[87,41,89,41],[87,47,89,47],[88,8,90,6,"checkConnection"],[88,23,90,21],[88,24,90,22],[88,25,90,23],[88,26,90,24,"catch"],[88,31,90,29],[88,32,90,30,"error"],[88,37,90,35],[88,41,90,39],[89,10,91,8,"EventLogger"],[89,34,91,19],[89,35,91,20,"warn"],[89,39,91,24],[89,40,91,25],[89,59,91,44],[89,61,91,46],[89,122,91,107],[89,124,91,109,"error"],[89,129,91,114],[89,130,91,115],[90,8,92,6],[90,9,92,7],[90,10,92,8],[91,6,93,4],[91,7,93,5],[91,9,93,7],[91,13,93,11],[91,14,93,12],[91,15,93,13],[91,16,93,14],[93,6,95,4],[94,6,96,4],[94,10,96,10,"subscription"],[94,22,96,22],[94,25,96,25,"AppState"],[94,46,96,33],[94,47,96,34,"addEventListener"],[94,63,96,50],[94,64,96,51],[94,72,96,59],[94,74,96,62,"nextAppState"],[94,86,96,90],[94,90,96,95],[95,8,97,6],[95,12,97,10,"nextAppState"],[95,24,97,22],[95,29,97,27],[95,37,97,35],[95,39,97,37],[96,10,98,8],[97,10,99,8,"setTimeout"],[97,20,99,18],[97,21,99,19],[97,27,99,25],[98,12,100,10,"checkConnection"],[98,27,100,25],[98,28,100,26],[98,29,100,27],[98,30,100,28,"catch"],[98,35,100,33],[98,36,100,34,"error"],[98,41,100,39],[98,45,100,43],[99,14,101,12,"EventLogger"],[99,38,101,23],[99,39,101,24,"warn"],[99,43,101,28],[99,44,101,29],[99,63,101,48],[99,65,101,50],[99,105,101,90],[99,107,101,92,"error"],[99,112,101,97],[99,113,101,98],[100,12,102,10],[100,13,102,11],[100,14,102,12],[101,10,103,8],[101,11,103,9],[101,13,103,11],[101,16,103,14],[101,17,103,15],[102,8,104,6],[103,6,105,4],[103,7,105,5],[103,8,105,6],[105,6,107,4],[106,6,108,4],[106,10,108,10,"unsubscribe"],[106,21,108,21],[106,24,108,24,"NetInfo"],[106,40,108,31],[106,41,108,32,"addEventListener"],[106,57,108,48],[106,58,108,50,"state"],[106,63,108,55],[106,67,108,60],[107,8,109,6],[107,12,109,10],[108,10,110,8],[108,14,110,12,"state"],[108,19,110,17],[108,20,110,18,"isConnected"],[108,31,110,29],[108,35,110,33],[108,36,110,34,"connectionState"],[108,51,110,49],[108,52,110,50,"isConnected"],[108,63,110,61],[108,65,110,63],[109,12,111,10],[110,12,112,10,"setTimeout"],[110,22,112,20],[110,23,112,21],[110,29,112,27],[111,14,113,12,"checkConnection"],[111,29,113,27],[111,30,113,28],[111,31,113,29],[111,32,113,30,"catch"],[111,37,113,35],[111,38,113,36,"error"],[111,43,113,41],[111,47,113,45],[112,16,114,14,"EventLogger"],[112,40,114,25],[112,41,114,26,"warn"],[112,45,114,30],[112,46,114,31],[112,65,114,50],[112,67,114,52],[112,100,114,85],[112,102,114,87,"error"],[112,107,114,92],[112,108,114,93],[113,14,115,12],[113,15,115,13],[113,16,115,14],[114,12,116,10],[114,13,116,11],[114,15,116,13],[114,19,116,17],[114,20,116,18],[115,10,117,8],[115,11,117,9],[115,17,117,15],[115,21,117,19],[115,22,117,20,"state"],[115,27,117,25],[115,28,117,26,"isConnected"],[115,39,117,37],[115,41,117,39],[116,12,118,10,"setConnectionState"],[116,30,118,28],[116,31,118,29,"prev"],[116,35,118,33],[116,40,118,38],[117,14,119,12],[117,17,119,15,"prev"],[117,21,119,19],[118,14,120,12,"isConnected"],[118,25,120,23],[118,27,120,25],[118,32,120,30],[119,14,121,12,"error"],[119,19,121,17],[119,21,121,19],[119,45,121,43],[120,14,122,12,"details"],[120,21,122,19],[120,23,122,21],[121,12,123,10],[121,13,123,11],[121,14,123,12],[121,15,123,13],[122,10,124,8],[123,8,125,6],[123,9,125,7],[123,10,125,8],[123,17,125,15,"error"],[123,22,125,20],[123,24,125,22],[124,10,126,8,"EventLogger"],[124,34,126,19],[124,35,126,20,"warn"],[124,39,126,24],[124,40,126,25],[124,59,126,44],[124,61,126,46],[124,98,126,83],[124,100,126,85,"error"],[124,105,126,90],[124,106,126,91],[125,8,127,6],[126,6,128,4],[126,7,128,5],[126,8,128,6],[128,6,130,4],[129,6,131,4],[129,10,131,8,"authListener"],[129,22,131,25],[130,6,132,4],[130,10,132,8],[131,8,133,6],[131,12,133,6,"_supabase$auth$onAuth"],[131,33,133,6],[131,36,133,23,"supabase"],[131,52,133,31],[131,53,133,32,"auth"],[131,57,133,36],[131,58,133,37,"onAuthStateChange"],[131,75,133,54],[131,76,133,55],[131,77,133,56,"event"],[131,82,133,61],[131,84,133,63,"session"],[131,91,133,70],[131,96,133,75],[132,12,134,8],[132,16,134,12],[133,14,135,10],[133,18,135,14,"event"],[133,23,135,19],[133,28,135,24],[133,39,135,35],[133,43,135,39,"event"],[133,48,135,44],[133,53,135,49],[133,70,135,66],[133,72,135,68],[134,16,136,12],[135,16,137,12,"setTimeout"],[135,26,137,22],[135,27,137,23],[135,33,137,29],[136,18,138,14,"checkConnection"],[136,33,138,29],[136,34,138,30],[136,35,138,31],[136,36,138,32,"catch"],[136,41,138,37],[136,42,138,38,"error"],[136,47,138,43],[136,51,138,47],[137,20,139,16,"EventLogger"],[137,44,139,27],[137,45,139,28,"warn"],[137,49,139,32],[137,50,139,33],[137,69,139,52],[137,71,139,54],[137,115,139,98],[137,117,139,100,"error"],[137,122,139,105],[137,123,139,106],[138,18,140,14],[138,19,140,15],[138,20,140,16],[139,16,141,12],[139,17,141,13],[139,19,141,15],[139,23,141,19],[139,24,141,20],[140,14,142,10],[140,15,142,11],[140,21,142,17],[140,25,142,21,"event"],[140,30,142,26],[140,35,142,31],[140,47,142,43],[140,49,142,45],[141,16,143,12,"setConnectionState"],[141,34,143,30],[141,35,143,31,"prev"],[141,39,143,35],[141,44,143,40],[142,18,144,14],[142,21,144,17,"prev"],[142,25,144,21],[143,18,145,14,"isAuthenticated"],[143,33,145,29],[143,35,145,31],[144,16,146,12],[144,17,146,13],[144,18,146,14],[144,19,146,15],[145,14,147,10],[146,12,148,8],[146,13,148,9],[146,14,148,10],[146,21,148,17,"error"],[146,26,148,22],[146,28,148,24],[147,14,149,10,"EventLogger"],[147,38,149,21],[147,39,149,22,"warn"],[147,43,149,26],[147,44,149,27],[147,63,149,46],[147,65,149,48],[147,99,149,82],[147,101,149,84,"error"],[147,106,149,89],[147,107,149,90],[148,12,150,8],[149,10,151,6],[149,11,151,7],[149,12,151,8],[150,10,133,14,"data"],[150,14,133,18],[150,17,133,18,"_supabase$auth$onAuth"],[150,38,133,18],[150,39,133,14,"data"],[150,43,133,18],[151,8,152,6,"authListener"],[151,20,152,18],[151,23,152,21,"data"],[151,27,152,25],[152,6,153,4],[152,7,153,5],[152,8,153,6],[152,15,153,13,"error"],[152,20,153,18],[152,22,153,20],[153,8,154,6,"EventLogger"],[153,32,154,17],[153,33,154,18,"warn"],[153,37,154,22],[153,38,154,23],[153,57,154,42],[153,59,154,44],[153,92,154,77],[153,94,154,79,"error"],[153,99,154,84],[153,100,154,85],[154,6,155,4],[155,6,157,4],[155,13,157,11],[155,19,157,17],[156,8,158,6,"clearTimeout"],[156,20,158,18],[156,21,158,19,"initialCheckTimer"],[156,38,158,36],[156,39,158,37],[157,8,159,6],[157,12,159,10],[158,10,160,8,"subscription"],[158,22,160,20],[158,23,160,21,"remove"],[158,29,160,27],[158,30,160,28],[158,31,160,29],[159,10,161,8,"unsubscribe"],[159,21,161,19],[159,22,161,20],[159,23,161,21],[160,10,162,8,"authListener"],[160,22,162,20],[160,24,162,22,"subscription"],[160,36,162,34],[160,38,162,36,"unsubscribe"],[160,49,162,47],[160,50,162,48],[160,51,162,49],[161,8,163,6],[161,9,163,7],[161,10,163,8],[161,17,163,15,"error"],[161,22,163,20],[161,24,163,22],[162,10,164,8,"EventLogger"],[162,34,164,19],[162,35,164,20,"warn"],[162,39,164,24],[162,40,164,25],[162,59,164,44],[162,61,164,46],[162,99,164,84],[162,101,164,86,"error"],[162,106,164,91],[162,107,164,92],[163,8,165,6],[164,6,166,4],[164,7,166,5],[165,4,167,2],[165,5,167,3],[165,7,167,5],[165,8,167,6,"checkConnection"],[165,23,167,21],[165,24,167,22],[165,25,167,23],[167,4,169,2],[168,4,170,2],[168,8,170,2,"useEffect"],[168,24,170,11],[168,26,170,12],[168,32,170,18],[169,6,171,4],[169,10,171,10,"interval"],[169,18,171,18],[169,21,171,21,"setInterval"],[169,32,171,32],[169,33,171,33],[169,39,171,39],[170,8,172,6],[170,12,172,10],[170,13,172,11,"connectionState"],[170,28,172,26],[170,29,172,27,"isChecking"],[170,39,172,37],[170,41,172,39],[171,10,173,8,"checkConnection"],[171,25,173,23],[171,26,173,24],[171,27,173,25],[172,8,174,6],[173,6,175,4],[173,7,175,5],[173,15,175,20],[173,16,175,21],[173,17,175,22],[173,18,175,23],[175,6,177,4],[175,13,177,11],[175,19,177,17,"clearInterval"],[175,32,177,30],[175,33,177,31,"interval"],[175,41,177,39],[175,42,177,40],[176,4,178,2],[176,5,178,3],[176,7,178,5],[176,8,178,6,"checkConnection"],[176,23,178,21],[176,25,178,23,"connectionState"],[176,40,178,38],[176,41,178,39,"isChecking"],[176,51,178,49],[176,52,178,50],[176,53,178,51],[177,4,180,2],[177,24,181,4],[177,28,181,4,"_jsxRuntime"],[177,39,181,4],[177,40,181,4,"jsx"],[177,43,181,4],[177,45,181,5,"ConnectionContext"],[177,62,181,22],[177,63,181,23,"Provider"],[177,71,181,31],[178,6,181,32,"value"],[178,11,181,37],[178,13,181,39],[179,8,181,41,"connectionState"],[179,23,181,56],[180,8,181,58,"checkConnection"],[180,23,181,73],[181,8,181,75,"resetError"],[182,6,181,86],[182,7,181,88],[183,6,181,88,"children"],[183,14,181,88],[183,16,182,7,"children"],[184,4,182,15],[184,5,183,32],[184,6,183,33],[185,2,185,0],[185,3,185,1],[186,2,185,2,"exports"],[186,9,185,2],[186,10,185,2,"ConnectionProvider"],[186,28,185,2],[186,31,185,2,"ConnectionProvider"],[186,49,185,2],[187,2,187,7],[187,6,187,13,"useConnection"],[187,19,187,26],[187,22,187,29,"useConnection"],[187,23,187,29],[187,28,187,35],[188,4,188,2],[188,8,188,8,"context"],[188,15,188,15],[188,18,188,18],[188,22,188,18,"useContext"],[188,39,188,28],[188,41,188,29,"ConnectionContext"],[188,58,188,46],[188,59,188,47],[189,4,189,2],[189,8,189,6],[189,9,189,7,"context"],[189,16,189,14],[189,18,189,16],[190,6,190,4],[190,12,190,10],[190,16,190,14,"Error"],[190,21,190,19],[190,22,190,20],[190,76,190,74],[190,77,190,75],[191,4,191,2],[192,4,192,2],[192,11,192,9,"context"],[192,18,192,16],[193,2,193,0],[193,3,193,1],[194,2,193,2,"exports"],[194,9,193,2],[194,10,193,2,"useConnection"],[194,23,193,2],[194,26,193,2,"useConnection"],[194,39,193,2],[195,0,193,2],[195,3]],"functionMap":{"names":["<global>","ConnectionProvider","checkConnection","setConnectionState$argument_0","resetError","useEffect$argument_0","setTimeout$argument_0","checkConnection._catch$argument_0","AppState.addEventListener$argument_1","NetInfo.addEventListener$argument_0","supabase.auth.onAuthStateChange$argument_0","<anonymous>","setInterval$argument_0","useConnection"],"mappings":"AAA;2ECwB;sCCU;uBCC,oDD;GD4C;iCGE;uBDC,kCC;GHC;YIG;yCCE;8BCC;ODE;KDC;6DGG;mBFG;kCCC;WDE;SEC;KHE;iDIG;qBHI;oCCC;aDE;WGC;6BNE;YMK;KJK;uDKK;uBJI;sCCC;eDE;aIC;+BPE;cOG;OLK;WMM;KNS;GJC;YIG;iCOC;KPI;WME,6BN;GJC;CDO;6BaE;CbM"}},"type":"js/module"}]}