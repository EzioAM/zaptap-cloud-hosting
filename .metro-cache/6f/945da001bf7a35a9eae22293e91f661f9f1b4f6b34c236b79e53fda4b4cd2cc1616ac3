{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"abort-controller/polyfill","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":35,"index":35}}],"key":"Zt445sKJeaqmd3t2yOR0GF+G/L0=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":36},"end":{"line":2,"column":56,"index":92}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./ServerRegistrationModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":93},"end":{"line":3,"column":66,"index":159}}],"key":"OTliNP9lxRDJOLdh5XsGIjq12GA=","exportNames":["*"]}},{"name":"./TokenEmitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":160},"end":{"line":4,"column":54,"index":214}}],"key":"5j/AymtYsxXL7qVrWh9rwW/7ePw=","exportNames":["*"]}},{"name":"./getDevicePushTokenAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":215},"end":{"line":5,"column":64,"index":279}}],"key":"XdMNnezmMyUe2eZLOsw/aE7Mhfk=","exportNames":["*"]}},{"name":"./utils/updateDevicePushTokenAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":280},"end":{"line":6,"column":120,"index":400}}],"key":"153jXZ66s6HybIv8YrABEWMrDwY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.__handlePersistedRegistrationInfoAsync = __handlePersistedRegistrationInfoAsync;\n  exports.setAutoServerRegistrationEnabledAsync = setAutoServerRegistrationEnabledAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  require(_dependencyMap[2], \"abort-controller/polyfill\");\n  var _expoModulesCore = require(_dependencyMap[3], \"expo-modules-core\");\n  var _ServerRegistrationModule = _interopRequireDefault(require(_dependencyMap[4], \"./ServerRegistrationModule\"));\n  var _TokenEmitter = require(_dependencyMap[5], \"./TokenEmitter\");\n  var _getDevicePushTokenAsync = _interopRequireDefault(require(_dependencyMap[6], \"./getDevicePushTokenAsync\"));\n  var _updateDevicePushTokenAsync = require(_dependencyMap[7], \"./utils/updateDevicePushTokenAsync\");\n  var lastAbortController = null;\n  function updatePushTokenAsync(_x) {\n    return _updatePushTokenAsync.apply(this, arguments);\n  }\n  /**\n   * @hidden - the comment is misleading and the purpose of the function needs to be reevaluated\n   *\n   * Sets the registration information so that the device push token gets pushed\n   * to the given registration endpoint\n   * @param enabled\n   */\n  function _updatePushTokenAsync() {\n    _updatePushTokenAsync = (0, _asyncToGenerator2.default)(function* (token) {\n      var _lastAbortController;\n      // Abort current update process\n      (_lastAbortController = lastAbortController) == null || _lastAbortController.abort();\n      lastAbortController = new AbortController();\n      return yield (0, _updateDevicePushTokenAsync.updateDevicePushTokenAsync)(lastAbortController.signal, token);\n    });\n    return _updatePushTokenAsync.apply(this, arguments);\n  }\n  function setAutoServerRegistrationEnabledAsync(_x2) {\n    return _setAutoServerRegistrationEnabledAsync.apply(this, arguments);\n  } // note(Chmiela): This function is exported only for testing purposes.\n  function _setAutoServerRegistrationEnabledAsync() {\n    _setAutoServerRegistrationEnabledAsync = (0, _asyncToGenerator2.default)(function* (enabled) {\n      var _lastAbortController2;\n      // We are overwriting registration, so we shouldn't let\n      // any pending request complete.\n      (_lastAbortController2 = lastAbortController) == null || _lastAbortController2.abort();\n      if (!_ServerRegistrationModule.default.setRegistrationInfoAsync) {\n        throw new _expoModulesCore.UnavailabilityError('ServerRegistrationModule', 'setRegistrationInfoAsync');\n      }\n      yield _ServerRegistrationModule.default.setRegistrationInfoAsync(enabled ? JSON.stringify({\n        isEnabled: enabled\n      }) : null);\n    });\n    return _setAutoServerRegistrationEnabledAsync.apply(this, arguments);\n  }\n  function __handlePersistedRegistrationInfoAsync(_x3) {\n    return _handlePersistedRegistrationInfoAsync.apply(this, arguments);\n  }\n  function _handlePersistedRegistrationInfoAsync() {\n    _handlePersistedRegistrationInfoAsync = (0, _asyncToGenerator2.default)(function* (registrationInfo) {\n      var _registration;\n      if (!registrationInfo) {\n        // No registration info, nothing to do\n        return;\n      }\n      var registration = null;\n      try {\n        registration = JSON.parse(registrationInfo);\n      } catch (e) {\n        console.warn('[expo-notifications] Error encountered while fetching registration information for auto token updates.', e);\n      }\n      if (!((_registration = registration) != null && _registration.isEnabled)) {\n        // Registration is invalid or not enabled, nothing more to do\n        return;\n      }\n      try {\n        // Since the registration is enabled, fetching a \"new\" device token\n        // shouldn't be a problem.\n        var latestDevicePushToken = yield (0, _getDevicePushTokenAsync.default)();\n        yield updatePushTokenAsync(latestDevicePushToken);\n      } catch (e) {\n        console.warn('[expo-notifications] Error encountered while updating server registration with latest device push token.', e);\n      }\n    });\n    return _handlePersistedRegistrationInfoAsync.apply(this, arguments);\n  }\n  if (_ServerRegistrationModule.default.getRegistrationInfoAsync) {\n    // A global scope (to get all the updates) device push token\n    // subscription, never cleared.\n    (0, _TokenEmitter.addPushTokenListener)(/*#__PURE__*/function () {\n      var _ref = (0, _asyncToGenerator2.default)(function* (token) {\n        try {\n          // Before updating the push token on server we always check if we should\n          // Since modules can't change their method availability while running, we\n          // can assert it's defined.\n          var registrationInfo = yield _ServerRegistrationModule.default.getRegistrationInfoAsync();\n          if (!registrationInfo) {\n            // Registration is not enabled\n            return;\n          }\n          var registration = JSON.parse(registrationInfo);\n          if (registration != null && registration.isEnabled) {\n            // Dispatch an abortable task to update\n            // registration with new token.\n            yield updatePushTokenAsync(token);\n          }\n        } catch (e) {\n          console.warn('[expo-notifications] Error encountered while updating server registration with latest device push token.', e);\n        }\n      });\n      return function (_x4) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    // Verify if persisted registration\n    // has successfully uploaded last known\n    // device push token. If not, retry.\n    _ServerRegistrationModule.default.getRegistrationInfoAsync().then(__handlePersistedRegistrationInfoAsync);\n  } else {\n    console.warn(`[expo-notifications] Error encountered while fetching auto-registration state, new tokens will not be automatically registered on server.`, new _expoModulesCore.UnavailabilityError('ServerRegistrationModule', 'getRegistrationInfoAsync'));\n  }\n});","lineCount":120,"map":[[9,2,1,0,"require"],[9,9,1,0],[9,10,1,0,"_dependencyMap"],[9,24,1,0],[10,2,2,0],[10,6,2,0,"_expoModulesCore"],[10,22,2,0],[10,25,2,0,"require"],[10,32,2,0],[10,33,2,0,"_dependencyMap"],[10,47,2,0],[11,2,3,0],[11,6,3,0,"_ServerRegistrationModule"],[11,31,3,0],[11,34,3,0,"_interopRequireDefault"],[11,56,3,0],[11,57,3,0,"require"],[11,64,3,0],[11,65,3,0,"_dependencyMap"],[11,79,3,0],[12,2,4,0],[12,6,4,0,"_TokenEmitter"],[12,19,4,0],[12,22,4,0,"require"],[12,29,4,0],[12,30,4,0,"_dependencyMap"],[12,44,4,0],[13,2,5,0],[13,6,5,0,"_getDevicePushTokenAsync"],[13,30,5,0],[13,33,5,0,"_interopRequireDefault"],[13,55,5,0],[13,56,5,0,"require"],[13,63,5,0],[13,64,5,0,"_dependencyMap"],[13,78,5,0],[14,2,6,0],[14,6,6,0,"_updateDevicePushTokenAsync"],[14,33,6,0],[14,36,6,0,"require"],[14,43,6,0],[14,44,6,0,"_dependencyMap"],[14,58,6,0],[15,2,7,0],[15,6,7,4,"lastAbortController"],[15,25,7,23],[15,28,7,26],[15,32,7,30],[16,2,7,31],[16,11,8,15,"updatePushTokenAsync"],[16,31,8,35,"updatePushTokenAsync"],[16,32,8,35,"_x"],[16,34,8,35],[17,4,8,35],[17,11,8,35,"_updatePushTokenAsync"],[17,32,8,35],[17,33,8,35,"apply"],[17,38,8,35],[17,45,8,35,"arguments"],[17,54,8,35],[18,2,8,35],[19,2,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,2,14,0],[26,11,14,0,"_updatePushTokenAsync"],[26,33,14,0],[27,4,14,0,"_updatePushTokenAsync"],[27,25,14,0],[27,32,14,0,"_asyncToGenerator2"],[27,50,14,0],[27,51,14,0,"default"],[27,58,14,0],[27,60,8,0],[27,71,8,36,"token"],[27,76,8,41],[27,78,8,43],[28,6,8,43],[28,10,8,43,"_lastAbortController"],[28,30,8,43],[29,6,9,4],[30,6,10,4],[30,7,10,4,"_lastAbortController"],[30,27,10,4],[30,30,10,4,"lastAbortController"],[30,49,10,23],[30,62,10,4,"_lastAbortController"],[30,82,10,4],[30,83,10,25,"abort"],[30,88,10,30],[30,89,10,31],[30,90,10,32],[31,6,11,4,"lastAbortController"],[31,25,11,23],[31,28,11,26],[31,32,11,30,"AbortController"],[31,47,11,45],[31,48,11,46],[31,49,11,47],[32,6,12,4],[32,19,12,17],[32,23,12,17,"updateDevicePushTokenAsyncWithSignal"],[32,77,12,53],[32,79,12,54,"lastAbortController"],[32,98,12,73],[32,99,12,74,"signal"],[32,105,12,80],[32,107,12,82,"token"],[32,112,12,87],[32,113,12,88],[33,4,13,0],[33,5,13,1],[34,4,13,1],[34,11,13,1,"_updatePushTokenAsync"],[34,32,13,1],[34,33,13,1,"apply"],[34,38,13,1],[34,45,13,1,"arguments"],[34,54,13,1],[35,2,13,1],[36,2,13,1],[36,11,21,22,"setAutoServerRegistrationEnabledAsync"],[36,48,21,59,"setAutoServerRegistrationEnabledAsync"],[36,49,21,59,"_x2"],[36,52,21,59],[37,4,21,59],[37,11,21,59,"_setAutoServerRegistrationEnabledAsync"],[37,49,21,59],[37,50,21,59,"apply"],[37,55,21,59],[37,62,21,59,"arguments"],[37,71,21,59],[38,2,21,59],[38,4,30,0],[39,2,30,0],[39,11,30,0,"_setAutoServerRegistrationEnabledAsync"],[39,50,30,0],[40,4,30,0,"_setAutoServerRegistrationEnabledAsync"],[40,42,30,0],[40,49,30,0,"_asyncToGenerator2"],[40,67,30,0],[40,68,30,0,"default"],[40,75,30,0],[40,77,21,7],[40,88,21,60,"enabled"],[40,95,21,67],[40,97,21,69],[41,6,21,69],[41,10,21,69,"_lastAbortController2"],[41,31,21,69],[42,6,22,4],[43,6,23,4],[44,6,24,4],[44,7,24,4,"_lastAbortController2"],[44,28,24,4],[44,31,24,4,"lastAbortController"],[44,50,24,23],[44,63,24,4,"_lastAbortController2"],[44,84,24,4],[44,85,24,25,"abort"],[44,90,24,30],[44,91,24,31],[44,92,24,32],[45,6,25,4],[45,10,25,8],[45,11,25,9,"ServerRegistrationModule"],[45,44,25,33],[45,45,25,34,"setRegistrationInfoAsync"],[45,69,25,58],[45,71,25,60],[46,8,26,8],[46,14,26,14],[46,18,26,18,"UnavailabilityError"],[46,54,26,37],[46,55,26,38],[46,81,26,64],[46,83,26,66],[46,109,26,92],[46,110,26,93],[47,6,27,4],[48,6,28,4],[48,12,28,10,"ServerRegistrationModule"],[48,45,28,34],[48,46,28,35,"setRegistrationInfoAsync"],[48,70,28,59],[48,71,28,60,"enabled"],[48,78,28,67],[48,81,28,70,"JSON"],[48,85,28,74],[48,86,28,75,"stringify"],[48,95,28,84],[48,96,28,85],[49,8,28,87,"isEnabled"],[49,17,28,96],[49,19,28,98,"enabled"],[50,6,28,106],[50,7,28,107],[50,8,28,108],[50,11,28,111],[50,15,28,115],[50,16,28,116],[51,4,29,0],[51,5,29,1],[52,4,29,1],[52,11,29,1,"_setAutoServerRegistrationEnabledAsync"],[52,49,29,1],[52,50,29,1,"apply"],[52,55,29,1],[52,62,29,1,"arguments"],[52,71,29,1],[53,2,29,1],[54,2,29,1],[54,11,31,22,"__handlePersistedRegistrationInfoAsync"],[54,49,31,60,"__handlePersistedRegistrationInfoAsync"],[54,50,31,60,"_x3"],[54,53,31,60],[55,4,31,60],[55,11,31,60,"_handlePersistedRegistrationInfoAsync"],[55,48,31,60],[55,49,31,60,"apply"],[55,54,31,60],[55,61,31,60,"arguments"],[55,70,31,60],[56,2,31,60],[57,2,31,60],[57,11,31,60,"_handlePersistedRegistrationInfoAsync"],[57,49,31,60],[58,4,31,60,"_handlePersistedRegistrationInfoAsync"],[58,41,31,60],[58,48,31,60,"_asyncToGenerator2"],[58,66,31,60],[58,67,31,60,"default"],[58,74,31,60],[58,76,31,7],[58,87,31,61,"registrationInfo"],[58,103,31,77],[58,105,31,79],[59,6,31,79],[59,10,31,79,"_registration"],[59,23,31,79],[60,6,32,4],[60,10,32,8],[60,11,32,9,"registrationInfo"],[60,27,32,25],[60,29,32,27],[61,8,33,8],[62,8,34,8],[63,6,35,4],[64,6,36,4],[64,10,36,8,"registration"],[64,22,36,20],[64,25,36,23],[64,29,36,27],[65,6,37,4],[65,10,37,8],[66,8,38,8,"registration"],[66,20,38,20],[66,23,38,23,"JSON"],[66,27,38,27],[66,28,38,28,"parse"],[66,33,38,33],[66,34,38,34,"registrationInfo"],[66,50,38,50],[66,51,38,51],[67,6,39,4],[67,7,39,5],[67,8,40,4],[67,15,40,11,"e"],[67,16,40,12],[67,18,40,14],[68,8,41,8,"console"],[68,15,41,15],[68,16,41,16,"warn"],[68,20,41,20],[68,21,41,21],[68,125,41,125],[68,127,41,127,"e"],[68,128,41,128],[68,129,41,129],[69,6,42,4],[70,6,43,4],[70,10,43,8],[70,13,43,8,"_registration"],[70,26,43,8],[70,29,43,9,"registration"],[70,41,43,21],[70,54,43,9,"_registration"],[70,67,43,9],[70,68,43,23,"isEnabled"],[70,77,43,32],[70,80,43,34],[71,8,44,8],[72,8,45,8],[73,6,46,4],[74,6,47,4],[74,10,47,8],[75,8,48,8],[76,8,49,8],[77,8,50,8],[77,12,50,14,"latestDevicePushToken"],[77,33,50,35],[77,42,50,44],[77,46,50,44,"getDevicePushTokenAsync"],[77,78,50,67],[77,80,50,68],[77,81,50,69],[78,8,51,8],[78,14,51,14,"updatePushTokenAsync"],[78,34,51,34],[78,35,51,35,"latestDevicePushToken"],[78,56,51,56],[78,57,51,57],[79,6,52,4],[79,7,52,5],[79,8,53,4],[79,15,53,11,"e"],[79,16,53,12],[79,18,53,14],[80,8,54,8,"console"],[80,15,54,15],[80,16,54,16,"warn"],[80,20,54,20],[80,21,54,21],[80,127,54,127],[80,129,54,129,"e"],[80,130,54,130],[80,131,54,131],[81,6,55,4],[82,4,56,0],[82,5,56,1],[83,4,56,1],[83,11,56,1,"_handlePersistedRegistrationInfoAsync"],[83,48,56,1],[83,49,56,1,"apply"],[83,54,56,1],[83,61,56,1,"arguments"],[83,70,56,1],[84,2,56,1],[85,2,57,0],[85,6,57,4,"ServerRegistrationModule"],[85,39,57,28],[85,40,57,29,"getRegistrationInfoAsync"],[85,64,57,53],[85,66,57,55],[86,4,58,4],[87,4,59,4],[88,4,60,4],[88,8,60,4,"addPushTokenListener"],[88,42,60,24],[89,6,60,24],[89,10,60,24,"_ref"],[89,14,60,24],[89,21,60,24,"_asyncToGenerator2"],[89,39,60,24],[89,40,60,24,"default"],[89,47,60,24],[89,49,60,25],[89,60,60,32,"token"],[89,65,60,37],[89,67,60,42],[90,8,61,8],[90,12,61,12],[91,10,62,12],[92,10,63,12],[93,10,64,12],[94,10,65,12],[94,14,65,18,"registrationInfo"],[94,30,65,34],[94,39,65,43,"ServerRegistrationModule"],[94,72,65,67],[94,73,65,68,"getRegistrationInfoAsync"],[94,97,65,92],[94,98,65,93],[94,99,65,94],[95,10,66,12],[95,14,66,16],[95,15,66,17,"registrationInfo"],[95,31,66,33],[95,33,66,35],[96,12,67,16],[97,12,68,16],[98,10,69,12],[99,10,70,12],[99,14,70,18,"registration"],[99,26,70,30],[99,29,70,33,"JSON"],[99,33,70,37],[99,34,70,38,"parse"],[99,39,70,43],[99,40,70,44,"registrationInfo"],[99,56,70,60],[99,57,70,61],[100,10,71,12],[100,14,71,16,"registration"],[100,26,71,28],[100,38,71,16,"registration"],[100,50,71,28],[100,51,71,30,"isEnabled"],[100,60,71,39],[100,62,71,41],[101,12,72,16],[102,12,73,16],[103,12,74,16],[103,18,74,22,"updatePushTokenAsync"],[103,38,74,42],[103,39,74,43,"token"],[103,44,74,48],[103,45,74,49],[104,10,75,12],[105,8,76,8],[105,9,76,9],[105,10,77,8],[105,17,77,15,"e"],[105,18,77,16],[105,20,77,18],[106,10,78,12,"console"],[106,17,78,19],[106,18,78,20,"warn"],[106,22,78,24],[106,23,78,25],[106,129,78,131],[106,131,78,133,"e"],[106,132,78,134],[106,133,78,135],[107,8,79,8],[108,6,80,4],[108,7,80,5],[109,6,80,5],[109,23,80,5,"_x4"],[109,26,80,5],[110,8,80,5],[110,15,80,5,"_ref"],[110,19,80,5],[110,20,80,5,"apply"],[110,25,80,5],[110,32,80,5,"arguments"],[110,41,80,5],[111,6,80,5],[112,4,80,5],[112,8,80,6],[113,4,81,4],[114,4,82,4],[115,4,83,4],[116,4,84,4,"ServerRegistrationModule"],[116,37,84,28],[116,38,84,29,"getRegistrationInfoAsync"],[116,62,84,53],[116,63,84,54],[116,64,84,55],[116,65,84,56,"then"],[116,69,84,60],[116,70,84,61,"__handlePersistedRegistrationInfoAsync"],[116,108,84,99],[116,109,84,100],[117,2,85,0],[117,3,85,1],[117,9,86,5],[118,4,87,4,"console"],[118,11,87,11],[118,12,87,12,"warn"],[118,16,87,16],[118,17,87,17],[118,156,87,156],[118,158,87,158],[118,162,87,162,"UnavailabilityError"],[118,198,87,181],[118,199,87,182],[118,225,87,208],[118,227,87,210],[118,253,87,236],[118,254,87,237],[118,255,87,238],[119,2,88,0],[120,0,88,1],[120,3]],"functionMap":{"names":["<global>","updatePushTokenAsync","setAutoServerRegistrationEnabledAsync","__handlePersistedRegistrationInfoAsync","addPushTokenListener$argument_0"],"mappings":"AAA;ACO;CDK;OEQ;CFQ;OGE;CHyB;yBII;KJoB"}},"type":"js/module"}]}