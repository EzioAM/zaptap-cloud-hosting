{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./AnimatedEvent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0},"end":{"line":20,"column":65}}],"key":"c7AooxRYFqBD9mVagDev/GMMGiE=","exportNames":["*"]}},{"name":"./AnimatedImplementation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0},"end":{"line":21,"column":62}}],"key":"MmE1c5G8MIzpHpSfKBLhd7ZPBbI=","exportNames":["*"]}},{"name":"./createAnimatedComponent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0},"end":{"line":22,"column":64}}],"key":"ULBS35x9qf+879w0v+Zk4awjD2M=","exportNames":["*"]}},{"name":"./nodes/AnimatedColor","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0},"end":{"line":23,"column":50}}],"key":"gFGgLTIWH3dK+ZDh4iJRleH39vI=","exportNames":["*"]}},{"name":"./nodes/AnimatedInterpolation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0},"end":{"line":24,"column":66}}],"key":"7AvogLNMCq+0dYvYtQwojfD4N+E=","exportNames":["*"]}},{"name":"./nodes/AnimatedNode","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0},"end":{"line":25,"column":48}}],"key":"PbjdhlWfw8UuzyhESFYeEh3/fNI=","exportNames":["*"]}},{"name":"./nodes/AnimatedValue","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0},"end":{"line":26,"column":50}}],"key":"f81vU8CZKg/cTtdZZWovPFjkmVQ=","exportNames":["*"]}},{"name":"./nodes/AnimatedValueXY","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":27,"column":0},"end":{"line":27,"column":54}}],"key":"7SBCZjhpUHSM8w3orgZuIXhtT8I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = undefined;\n  var _AnimatedEvent = require(_dependencyMap[1]);\n  var _AnimatedImplementation = _interopRequireDefault(require(_dependencyMap[2]));\n  var _createAnimatedComponent = _interopRequireDefault(require(_dependencyMap[3]));\n  var _AnimatedColor = _interopRequireDefault(require(_dependencyMap[4]));\n  var _AnimatedInterpolation = _interopRequireDefault(require(_dependencyMap[5]));\n  var _AnimatedNode = _interopRequireDefault(require(_dependencyMap[6]));\n  var _AnimatedValue = _interopRequireDefault(require(_dependencyMap[7]));\n  var _AnimatedValueXY = _interopRequireDefault(require(_dependencyMap[8]));\n  var inAnimationCallback = false;\n  function mockAnimationStart(start) {\n    return callback => {\n      var guardedCallback = callback == null ? callback : function () {\n        if (inAnimationCallback) {\n          return;\n        }\n        inAnimationCallback = true;\n        try {\n          callback(...arguments);\n        } finally {\n          inAnimationCallback = false;\n        }\n      };\n      start(guardedCallback);\n    };\n  }\n  var emptyAnimation = {\n    start: () => {},\n    stop: () => {},\n    reset: () => {},\n    _startNativeLoop: () => {},\n    _isUsingNativeDriver: () => {\n      return false;\n    }\n  };\n  var mockCompositeAnimation = animations => ({\n    ...emptyAnimation,\n    start: mockAnimationStart(callback => {\n      animations.forEach(animation => animation.start());\n      callback?.({\n        finished: true\n      });\n    })\n  });\n  var spring = function (value, config) {\n    var anyValue = value;\n    return {\n      ...emptyAnimation,\n      start: mockAnimationStart(callback => {\n        anyValue.setValue(config.toValue);\n        callback?.({\n          finished: true\n        });\n      })\n    };\n  };\n  var timing = function (value, config) {\n    var anyValue = value;\n    return {\n      ...emptyAnimation,\n      start: mockAnimationStart(callback => {\n        anyValue.setValue(config.toValue);\n        callback?.({\n          finished: true\n        });\n      })\n    };\n  };\n  var decay = function (value, config) {\n    return emptyAnimation;\n  };\n  var sequence = function (animations) {\n    return mockCompositeAnimation(animations);\n  };\n  var parallel = function (animations, config) {\n    return mockCompositeAnimation(animations);\n  };\n  var delay = function (time) {\n    return emptyAnimation;\n  };\n  var stagger = function (time, animations) {\n    return mockCompositeAnimation(animations);\n  };\n  var loop = function (animation) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$iterations = _ref.iterations,\n      iterations = _ref$iterations === undefined ? -1 : _ref$iterations;\n    return emptyAnimation;\n  };\n  var _default = exports.default = {\n    Value: _AnimatedValue.default,\n    ValueXY: _AnimatedValueXY.default,\n    Color: _AnimatedColor.default,\n    Interpolation: _AnimatedInterpolation.default,\n    Node: _AnimatedNode.default,\n    decay,\n    timing,\n    spring,\n    add: _AnimatedImplementation.default.add,\n    subtract: _AnimatedImplementation.default.subtract,\n    divide: _AnimatedImplementation.default.divide,\n    multiply: _AnimatedImplementation.default.multiply,\n    modulo: _AnimatedImplementation.default.modulo,\n    diffClamp: _AnimatedImplementation.default.diffClamp,\n    delay,\n    sequence,\n    parallel,\n    stagger,\n    loop,\n    event: _AnimatedImplementation.default.event,\n    createAnimatedComponent: _createAnimatedComponent.default,\n    attachNativeEvent: _AnimatedEvent.attachNativeEvent,\n    forkEvent: _AnimatedImplementation.default.forkEvent,\n    unforkEvent: _AnimatedImplementation.default.unforkEvent,\n    Event: _AnimatedEvent.AnimatedEvent\n  };\n});","lineCount":124,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13],[4,6,11,13,"_interopRequireDefault"],[4,28,11,13],[4,31,11,13,"require"],[4,38,11,13],[4,39,11,13,"_dependencyMap"],[4,53,11,13],[5,2,11,13,"Object"],[5,8,11,13],[5,9,11,13,"defineProperty"],[5,23,11,13],[5,24,11,13,"exports"],[5,31,11,13],[6,4,11,13,"value"],[6,9,11,13],[7,2,11,13],[8,2,11,13,"exports"],[8,9,11,13],[8,10,11,13,"default"],[8,17,11,13],[8,20,11,13,"undefined"],[8,29,11,13],[9,2,20,0],[9,6,20,0,"_AnimatedEvent"],[9,20,20,0],[9,23,20,0,"require"],[9,30,20,0],[9,31,20,0,"_dependencyMap"],[9,45,20,0],[10,2,21,0],[10,6,21,0,"_AnimatedImplementation"],[10,29,21,0],[10,32,21,0,"_interopRequireDefault"],[10,54,21,0],[10,55,21,0,"require"],[10,62,21,0],[10,63,21,0,"_dependencyMap"],[10,77,21,0],[11,2,22,0],[11,6,22,0,"_createAnimatedComponent"],[11,30,22,0],[11,33,22,0,"_interopRequireDefault"],[11,55,22,0],[11,56,22,0,"require"],[11,63,22,0],[11,64,22,0,"_dependencyMap"],[11,78,22,0],[12,2,23,0],[12,6,23,0,"_AnimatedColor"],[12,20,23,0],[12,23,23,0,"_interopRequireDefault"],[12,45,23,0],[12,46,23,0,"require"],[12,53,23,0],[12,54,23,0,"_dependencyMap"],[12,68,23,0],[13,2,24,0],[13,6,24,0,"_AnimatedInterpolation"],[13,28,24,0],[13,31,24,0,"_interopRequireDefault"],[13,53,24,0],[13,54,24,0,"require"],[13,61,24,0],[13,62,24,0,"_dependencyMap"],[13,76,24,0],[14,2,25,0],[14,6,25,0,"_AnimatedNode"],[14,19,25,0],[14,22,25,0,"_interopRequireDefault"],[14,44,25,0],[14,45,25,0,"require"],[14,52,25,0],[14,53,25,0,"_dependencyMap"],[14,67,25,0],[15,2,26,0],[15,6,26,0,"_AnimatedValue"],[15,20,26,0],[15,23,26,0,"_interopRequireDefault"],[15,45,26,0],[15,46,26,0,"require"],[15,53,26,0],[15,54,26,0,"_dependencyMap"],[15,68,26,0],[16,2,27,0],[16,6,27,0,"_AnimatedValueXY"],[16,22,27,0],[16,25,27,0,"_interopRequireDefault"],[16,47,27,0],[16,48,27,0,"require"],[16,55,27,0],[16,56,27,0,"_dependencyMap"],[16,70,27,0],[17,2,38,0],[17,6,38,4,"inAnimationCallback"],[17,25,38,23],[17,28,38,26],[17,33,38,31],[18,2,39,0],[18,11,39,9,"mockAnimationStart"],[18,29,39,27,"mockAnimationStart"],[18,30,40,2,"start"],[18,35,40,42],[18,37,41,37],[19,4,42,2],[19,11,42,9,"callback"],[19,19,42,17],[19,23,42,21],[20,6,43,4],[20,10,43,10,"guardedCallback"],[20,25,43,25],[20,28,44,6,"callback"],[20,36,44,14],[20,40,44,18],[20,44,44,22],[20,47,45,10,"callback"],[20,55,45,18],[20,58,46,10],[20,70,46,41],[21,8,47,12],[21,12,47,16,"inAnimationCallback"],[21,31,47,35],[21,33,47,37],[22,10,51,14],[23,8,52,12],[24,8,53,12,"inAnimationCallback"],[24,27,53,31],[24,30,53,34],[24,34,53,38],[25,8,54,12],[25,12,54,16],[26,10,55,14,"callback"],[26,18,55,22],[26,19,55,23],[26,22,55,23,"arguments"],[26,31,55,30],[26,32,55,31],[27,8,56,12],[27,9,56,13],[27,18,56,22],[28,10,57,14,"inAnimationCallback"],[28,29,57,33],[28,32,57,36],[28,37,57,41],[29,8,58,12],[30,6,59,10],[30,7,59,11],[31,6,60,4,"start"],[31,11,60,9],[31,12,60,10,"guardedCallback"],[31,27,60,25],[31,28,60,26],[32,4,61,2],[32,5,61,3],[33,2,62,0],[34,2,73,0],[34,6,73,6,"emptyAnimation"],[34,20,73,20],[34,23,73,23],[35,4,74,2,"start"],[35,9,74,7],[35,11,74,9,"start"],[35,12,74,9],[35,17,74,15],[35,18,74,16],[35,19,74,17],[36,4,75,2,"stop"],[36,8,75,6],[36,10,75,8,"stop"],[36,11,75,8],[36,16,75,14],[36,17,75,15],[36,18,75,16],[37,4,76,2,"reset"],[37,9,76,7],[37,11,76,9,"reset"],[37,12,76,9],[37,17,76,15],[37,18,76,16],[37,19,76,17],[38,4,77,2,"_startNativeLoop"],[38,20,77,18],[38,22,77,20,"_startNativeLoop"],[38,23,77,20],[38,28,77,26],[38,29,77,27],[38,30,77,28],[39,4,78,2,"_isUsingNativeDriver"],[39,24,78,22],[39,26,78,24,"_isUsingNativeDriver"],[39,27,78,24],[39,32,78,30],[40,6,79,4],[40,13,79,11],[40,18,79,16],[41,4,80,2],[42,2,81,0],[42,3,81,1],[43,2,83,0],[43,6,83,6,"mockCompositeAnimation"],[43,28,83,28],[43,31,84,2,"animations"],[43,41,84,39],[43,46,85,26],[44,4,86,2],[44,7,86,5,"emptyAnimation"],[44,21,86,19],[45,4,87,2,"start"],[45,9,87,7],[45,11,87,9,"mockAnimationStart"],[45,29,87,27],[45,30,87,29,"callback"],[45,38,87,52],[45,42,87,63],[46,6,88,4,"animations"],[46,16,88,14],[46,17,88,15,"forEach"],[46,24,88,22],[46,25,88,23,"animation"],[46,34,88,32],[46,38,88,36,"animation"],[46,47,88,45],[46,48,88,46,"start"],[46,53,88,51],[46,54,88,52],[46,55,88,53],[46,56,88,54],[47,6,89,4,"callback"],[47,14,89,12],[47,17,89,15],[48,8,89,16,"finished"],[48,16,89,24],[48,18,89,26],[49,6,89,30],[49,7,89,31],[49,8,89,32],[50,4,90,2],[50,5,90,3],[51,2,91,0],[51,3,91,1],[51,4,91,2],[52,2,93,0],[52,6,93,6,"spring"],[52,12,93,12],[52,15,93,15],[52,24,93,15,"spring"],[52,25,94,2,"value"],[52,30,94,56],[52,32,95,2,"config"],[52,38,95,31],[52,40,96,22],[53,4,97,2],[53,8,97,8,"anyValue"],[53,16,97,21],[53,19,97,24,"value"],[53,24,97,29],[54,4,98,2],[54,11,98,9],[55,6,99,4],[55,9,99,7,"emptyAnimation"],[55,23,99,21],[56,6,100,4,"start"],[56,11,100,9],[56,13,100,11,"mockAnimationStart"],[56,31,100,29],[56,32,100,31,"callback"],[56,40,100,54],[56,44,100,65],[57,8,101,6,"anyValue"],[57,16,101,14],[57,17,101,15,"setValue"],[57,25,101,23],[57,26,101,24,"config"],[57,32,101,30],[57,33,101,31,"toValue"],[57,40,101,38],[57,41,101,39],[58,8,102,6,"callback"],[58,16,102,14],[58,19,102,17],[59,10,102,18,"finished"],[59,18,102,26],[59,20,102,28],[60,8,102,32],[60,9,102,33],[60,10,102,34],[61,6,103,4],[61,7,103,5],[62,4,104,2],[62,5,104,3],[63,2,105,0],[63,3,105,1],[64,2,107,0],[64,6,107,6,"timing"],[64,12,107,12],[64,15,107,15],[64,24,107,15,"timing"],[64,25,108,2,"value"],[64,30,108,56],[64,32,109,2,"config"],[64,38,109,31],[64,40,110,22],[65,4,111,2],[65,8,111,8,"anyValue"],[65,16,111,21],[65,19,111,24,"value"],[65,24,111,29],[66,4,112,2],[66,11,112,9],[67,6,113,4],[67,9,113,7,"emptyAnimation"],[67,23,113,21],[68,6,114,4,"start"],[68,11,114,9],[68,13,114,11,"mockAnimationStart"],[68,31,114,29],[68,32,114,31,"callback"],[68,40,114,54],[68,44,114,65],[69,8,115,6,"anyValue"],[69,16,115,14],[69,17,115,15,"setValue"],[69,25,115,23],[69,26,115,24,"config"],[69,32,115,30],[69,33,115,31,"toValue"],[69,40,115,38],[69,41,115,39],[70,8,116,6,"callback"],[70,16,116,14],[70,19,116,17],[71,10,116,18,"finished"],[71,18,116,26],[71,20,116,28],[72,8,116,32],[72,9,116,33],[72,10,116,34],[73,6,117,4],[73,7,117,5],[74,4,118,2],[74,5,118,3],[75,2,119,0],[75,3,119,1],[76,2,121,0],[76,6,121,6,"decay"],[76,11,121,11],[76,14,121,14],[76,23,121,14,"decay"],[76,24,122,2,"value"],[76,29,122,56],[76,31,123,2,"config"],[76,37,123,30],[76,39,124,22],[77,4,125,2],[77,11,125,9,"emptyAnimation"],[77,25,125,23],[78,2,126,0],[78,3,126,1],[79,2,128,0],[79,6,128,6,"sequence"],[79,14,128,14],[79,17,128,17],[79,26,128,17,"sequence"],[79,27,129,2,"animations"],[79,37,129,39],[79,39,130,22],[80,4,131,2],[80,11,131,9,"mockCompositeAnimation"],[80,33,131,31],[80,34,131,32,"animations"],[80,44,131,42],[80,45,131,43],[81,2,132,0],[81,3,132,1],[82,2,135,0],[82,6,135,6,"parallel"],[82,14,135,14],[82,17,135,17],[82,26,135,17,"parallel"],[82,27,136,2,"animations"],[82,37,136,39],[82,39,137,2,"config"],[82,45,137,26],[82,47,138,22],[83,4,139,2],[83,11,139,9,"mockCompositeAnimation"],[83,33,139,31],[83,34,139,32,"animations"],[83,44,139,42],[83,45,139,43],[84,2,140,0],[84,3,140,1],[85,2,142,0],[85,6,142,6,"delay"],[85,11,142,11],[85,14,142,14],[85,23,142,14,"delay"],[85,24,142,24,"time"],[85,28,142,36],[85,30,142,58],[86,4,143,2],[86,11,143,9,"emptyAnimation"],[86,25,143,23],[87,2,144,0],[87,3,144,1],[88,2,146,0],[88,6,146,6,"stagger"],[88,13,146,13],[88,16,146,16],[88,25,146,16,"stagger"],[88,26,147,2,"time"],[88,30,147,14],[88,32,148,2,"animations"],[88,42,148,39],[88,44,149,22],[89,4,150,2],[89,11,150,9,"mockCompositeAnimation"],[89,33,150,31],[89,34,150,32,"animations"],[89,44,150,42],[89,45,150,43],[90,2,151,0],[90,3,151,1],[91,2,159,0],[91,6,159,6,"loop"],[91,10,159,10],[91,13,159,13],[91,22,159,13,"loop"],[91,23,160,2,"animation"],[91,32,160,31],[91,34,163,22],[92,4,163,22],[92,8,163,22,"_ref"],[92,12,163,22],[92,15,163,22,"arguments"],[92,24,163,22],[92,25,163,22,"length"],[92,31,163,22],[92,39,163,22,"arguments"],[92,48,163,22],[92,56,163,22,"undefined"],[92,65,163,22],[92,68,163,22,"arguments"],[92,77,163,22],[92,83,162,43],[92,84,162,44],[92,85,162,45],[93,6,162,45,"_ref$iterations"],[93,21,162,45],[93,24,162,45,"_ref"],[93,28,162,45],[93,29,162,3,"iterations"],[93,39,162,13],[94,6,162,3,"iterations"],[94,16,162,13],[94,19,162,13,"_ref$iterations"],[94,34,162,13],[94,39,162,13,"undefined"],[94,48,162,13],[94,56,162,13,"_ref$iterations"],[94,71,162,13],[95,4,164,2],[95,11,164,9,"emptyAnimation"],[95,25,164,23],[96,2,165,0],[96,3,165,1],[97,2,165,2],[97,6,165,2,"_default"],[97,14,165,2],[97,17,165,2,"exports"],[97,24,165,2],[97,25,165,2,"default"],[97,32,165,2],[97,35,169,15],[98,4,170,2,"Value"],[98,9,170,7],[98,11,170,9,"AnimatedValue"],[98,33,170,22],[99,4,171,2,"ValueXY"],[99,11,171,9],[99,13,171,11,"AnimatedValueXY"],[99,37,171,26],[100,4,172,2,"Color"],[100,9,172,7],[100,11,172,9,"AnimatedColor"],[100,33,172,22],[101,4,173,2,"Interpolation"],[101,17,173,15],[101,19,173,17,"AnimatedInterpolation"],[101,49,173,38],[102,4,174,2,"Node"],[102,8,174,6],[102,10,174,8,"AnimatedNode"],[102,31,174,20],[103,4,175,2,"decay"],[103,9,175,7],[104,4,176,2,"timing"],[104,10,176,8],[105,4,177,2,"spring"],[105,10,177,8],[106,4,178,2,"add"],[106,7,178,5],[106,9,178,7,"AnimatedImplementation"],[106,40,178,29],[106,41,178,30,"add"],[106,44,178,33],[107,4,179,2,"subtract"],[107,12,179,10],[107,14,179,12,"AnimatedImplementation"],[107,45,179,34],[107,46,179,35,"subtract"],[107,54,179,43],[108,4,180,2,"divide"],[108,10,180,8],[108,12,180,10,"AnimatedImplementation"],[108,43,180,32],[108,44,180,33,"divide"],[108,50,180,39],[109,4,181,2,"multiply"],[109,12,181,10],[109,14,181,12,"AnimatedImplementation"],[109,45,181,34],[109,46,181,35,"multiply"],[109,54,181,43],[110,4,182,2,"modulo"],[110,10,182,8],[110,12,182,10,"AnimatedImplementation"],[110,43,182,32],[110,44,182,33,"modulo"],[110,50,182,39],[111,4,183,2,"diffClamp"],[111,13,183,11],[111,15,183,13,"AnimatedImplementation"],[111,46,183,35],[111,47,183,36,"diffClamp"],[111,56,183,45],[112,4,184,2,"delay"],[112,9,184,7],[113,4,185,2,"sequence"],[113,12,185,10],[114,4,186,2,"parallel"],[114,12,186,10],[115,4,187,2,"stagger"],[115,11,187,9],[116,4,188,2,"loop"],[116,8,188,6],[117,4,189,2,"event"],[117,9,189,7],[117,11,189,9,"AnimatedImplementation"],[117,42,189,31],[117,43,189,32,"event"],[117,48,189,37],[118,4,190,2,"createAnimatedComponent"],[118,27,190,25],[118,29,190,2,"createAnimatedComponent"],[118,61,190,25],[119,4,191,2,"attachNativeEvent"],[119,21,191,19],[119,23,191,2,"attachNativeEvent"],[119,55,191,19],[120,4,192,2,"forkEvent"],[120,13,192,11],[120,15,192,13,"AnimatedImplementation"],[120,46,192,35],[120,47,192,36,"forkEvent"],[120,56,192,45],[121,4,193,2,"unforkEvent"],[121,15,193,13],[121,17,193,15,"AnimatedImplementation"],[121,48,193,37],[121,49,193,38,"unforkEvent"],[121,60,193,49],[122,4,194,2,"Event"],[122,9,194,7],[122,11,194,9,"AnimatedEvent"],[123,2,195,0],[123,3,195,1],[124,0,195,1],[124,3]],"functionMap":{"names":["<global>","mockAnimationStart","<anonymous>","emptyAnimation.start","emptyAnimation.stop","emptyAnimation.reset","emptyAnimation._startNativeLoop","emptyAnimation._isUsingNativeDriver","mockCompositeAnimation","mockAnimationStart$argument_0","animations.forEach$argument_0","spring","timing","decay","sequence","parallel","delay","stagger","loop"],"mappings":"AAA;ACsC;SCG;GDmB;CDC;SGY,QH;QIC,QJ;SKC,QL;oBMC,QN;wBOC;GPE;+BQG;4BCI;uBCC,8BD;GDE;ERC;eWE;8BFO;KEG;CXE;eYE;8BHO;KGG;CZE;caE;CbK;iBcE;CdI;iBeG;CfK;cgBE;ChBE;gBiBE;CjBK;akBQ;ClBM"}},"type":"js/module"}]}