{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"react-native-url-polyfill/auto","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"FjDCbK7LcT49IdUkzoo8Fm4C4ig=","exportNames":["*"]}},{"name":"@supabase/supabase-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":42},"end":{"line":2,"column":69,"index":111}}],"key":"bIfLatK31tbWgCp34BhPDdikyTA=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":113},"end":{"line":3,"column":69,"index":182}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":184},"end":{"line":4,"column":39,"index":223}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"]}},{"name":"@react-native-community/netinfo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":225},"end":{"line":5,"column":54,"index":279}}],"key":"PqZcYTlMIVnzFjdViPzMiGUu7Hg=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":281},"end":{"line":6,"column":54,"index":335}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.testConnection = exports.supabaseWithRetry = exports.supabase = exports.refreshSession = exports.handleAuthError = exports.ensureValidSession = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/asyncToGenerator\"));\n  require(_dependencyMap[4], \"react-native-url-polyfill/auto\");\n  var _supabaseJs = require(_dependencyMap[5], \"@supabase/supabase-js\");\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[6], \"@react-native-async-storage/async-storage\"));\n  var _expoConstants = _interopRequireDefault(require(_dependencyMap[7], \"expo-constants\"));\n  var _netinfo = _interopRequireDefault(require(_dependencyMap[8], \"@react-native-community/netinfo\"));\n  var _EventLogger = require(_dependencyMap[9], \"../../utils/EventLogger\");\n  var _Constants$expoConfig, _Constants$expoConfig2;\n  var supabaseUrl = ((_Constants$expoConfig = _expoConstants.default.expoConfig) == null || (_Constants$expoConfig = _Constants$expoConfig.extra) == null ? void 0 : _Constants$expoConfig.supabaseUrl) || 'https://gfkdclzgdlcvhfiujkwz.supabase.co';\n  var supabaseAnonKey = ((_Constants$expoConfig2 = _expoConstants.default.expoConfig) == null || (_Constants$expoConfig2 = _Constants$expoConfig2.extra) == null ? void 0 : _Constants$expoConfig2.supabaseAnonKey) || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imdma2RjbHpnZGxjdmhmaXVqa3d6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM0OTI2NTcsImV4cCI6MjA2OTA2ODY1N30.lJpGLp14e_9ku8n3WN8i61jYPohfx7htTEmTrnje-uE';\n\n  // Create a custom storage implementation with error handling\n  var customStorage = {\n    getItem: function () {\n      var _getItem = (0, _asyncToGenerator2.default)(function* (key) {\n        try {\n          return yield _asyncStorage.default.getItem(key);\n        } catch (error) {\n          _EventLogger.EventLogger.error('client', 'Storage getItem error:', error);\n          return null;\n        }\n      });\n      function getItem(_x) {\n        return _getItem.apply(this, arguments);\n      }\n      return getItem;\n    }(),\n    setItem: function () {\n      var _setItem = (0, _asyncToGenerator2.default)(function* (key, value) {\n        try {\n          yield _asyncStorage.default.setItem(key, value);\n        } catch (error) {\n          _EventLogger.EventLogger.error('client', 'Storage setItem error:', error);\n        }\n      });\n      function setItem(_x2, _x3) {\n        return _setItem.apply(this, arguments);\n      }\n      return setItem;\n    }(),\n    removeItem: function () {\n      var _removeItem = (0, _asyncToGenerator2.default)(function* (key) {\n        try {\n          yield _asyncStorage.default.removeItem(key);\n        } catch (error) {\n          _EventLogger.EventLogger.error('client', 'Storage removeItem error:', error);\n        }\n      });\n      function removeItem(_x4) {\n        return _removeItem.apply(this, arguments);\n      }\n      return removeItem;\n    }()\n  };\n\n  // Enhanced Supabase client with retry logic\n  var SupabaseClientWithRetry = /*#__PURE__*/function () {\n    function SupabaseClientWithRetry() {\n      var _this = this;\n      (0, _classCallCheck2.default)(this, SupabaseClientWithRetry);\n      this.isOnline = true;\n      this.retryCount = 3;\n      this.retryDelay = 1000;\n      this.client = (0, _supabaseJs.createClient)(supabaseUrl, supabaseAnonKey, {\n        auth: {\n          storage: customStorage,\n          autoRefreshToken: true,\n          persistSession: true,\n          detectSessionInUrl: false,\n          flowType: 'pkce',\n          storageKey: 'supabase.auth.token'\n        },\n        global: {\n          headers: {\n            'X-Client-Info': 'zaptap-mobile'\n          }\n        },\n        db: {\n          schema: 'public'\n        },\n        realtime: {\n          params: {\n            eventsPerSecond: 10\n          }\n        }\n      });\n\n      // Monitor network connectivity\n      _netinfo.default.addEventListener(function (state) {\n        var _state$isConnected;\n        _this.isOnline = (_state$isConnected = state.isConnected) != null ? _state$isConnected : true;\n        _EventLogger.EventLogger.debug('client', 'Network status:', _this.isOnline ? 'Online' : 'Offline');\n      });\n    }\n\n    // Get the underlying Supabase client\n    return (0, _createClass2.default)(SupabaseClientWithRetry, [{\n      key: \"supabase\",\n      get: function get() {\n        return this.client;\n      }\n\n      // Retry wrapper for database operations\n    }, {\n      key: \"withRetry\",\n      value: function () {\n        var _withRetry = (0, _asyncToGenerator2.default)(function* (operation) {\n          var _this2 = this;\n          var lastError;\n          var _loop = function* _loop(attempt) {\n              try {\n                // Check network status before attempting\n                if (!_this2.isOnline) {\n                  throw new Error('No network connection');\n                }\n                return {\n                  v: yield operation()\n                };\n              } catch (error) {\n                var _error$message;\n                lastError = error;\n                _EventLogger.EventLogger.error('client', 'Attempt ${attempt + 1} failed:', error.message);\n\n                // Don't retry on auth errors or validation errors\n                if (error.code === '42501' ||\n                // permission denied\n                error.code === '23503' ||\n                // foreign key violation\n                error.code === '23505' ||\n                // unique violation\n                error.code === '23514' ||\n                // check violation\n                error.code === 'PGRST301' || // JWT expired\n                (_error$message = error.message) != null && _error$message.includes('JWT')) {\n                  throw error;\n                }\n\n                // Wait before retrying\n                if (attempt < _this2.retryCount - 1) {\n                  yield new Promise(function (resolve) {\n                    return setTimeout(resolve, _this2.retryDelay * (attempt + 1));\n                  });\n                }\n              }\n            },\n            _ret;\n          for (var attempt = 0; attempt < this.retryCount; attempt++) {\n            _ret = yield* _loop(attempt);\n            if (_ret) return _ret.v;\n          }\n          throw lastError;\n        });\n        function withRetry(_x5) {\n          return _withRetry.apply(this, arguments);\n        }\n        return withRetry;\n      }()\n    }]);\n  }(); // Create singleton instance\n  var supabaseClientWithRetry = new SupabaseClientWithRetry();\n  var supabase = exports.supabase = supabaseClientWithRetry.supabase;\n  var supabaseWithRetry = exports.supabaseWithRetry = supabaseClientWithRetry;\n\n  // Enhanced test connection function\n  var testConnection = exports.testConnection = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var _session$user;\n        // Check network connectivity first\n        var netInfo = yield _netinfo.default.fetch();\n        if (!netInfo.isConnected) {\n          return {\n            connected: false,\n            authenticated: false,\n            error: 'No network connection',\n            details: 'network_offline',\n            networkStatus: false\n          };\n        }\n\n        // Test database connection with retry\n        var _yield$supabaseWithRe = yield supabaseWithRetry.withRetry(/*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {\n            var result = yield supabase.from('automations').select('count', {\n              count: 'exact',\n              head: true\n            }).limit(1);\n            if (result.error) throw result.error;\n            return result;\n          })),\n          healthError = _yield$supabaseWithRe.error;\n        if (healthError) {\n          _EventLogger.EventLogger.error('client', '❌ Database connection failed:', healthError);\n          return {\n            connected: false,\n            authenticated: false,\n            error: healthError.message,\n            details: 'database',\n            networkStatus: true\n          };\n        }\n\n        // Test authentication status\n        var _yield$supabase$auth$ = yield supabase.auth.getSession(),\n          session = _yield$supabase$auth$.data.session,\n          sessionError = _yield$supabase$auth$.error;\n        if (sessionError) {\n          _EventLogger.EventLogger.error('client', '❌ Auth service error:', sessionError);\n          return {\n            connected: false,\n            authenticated: false,\n            error: sessionError.message,\n            details: 'auth',\n            networkStatus: true\n          };\n        }\n        _EventLogger.EventLogger.debug('client', '✅ Supabase connected successfully');\n        _EventLogger.EventLogger.debug('client', '✅ Session status:', session ? 'Authenticated' : 'Not authenticated');\n        return {\n          connected: true,\n          authenticated: !!session,\n          user: session == null || (_session$user = session.user) == null ? void 0 : _session$user.email,\n          details: 'all_services_operational',\n          networkStatus: true\n        };\n      } catch (error) {\n        var _error$message2;\n        // Don't log network errors as errors\n        if (error != null && (_error$message2 = error.message) != null && _error$message2.includes('Network request failed') || (error == null ? void 0 : error.name) === 'NetworkError') {\n          _EventLogger.EventLogger.debug('client', '📴 Network unavailable for connection test');\n        } else {\n          _EventLogger.EventLogger.error('client', '❌ Supabase connection failed:', error);\n        }\n        return {\n          connected: false,\n          authenticated: false,\n          error: error.message || 'Unknown error',\n          details: 'network_or_config',\n          networkStatus: false\n        };\n      }\n    });\n    return function testConnection() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  // Helper to refresh session if needed\n  var refreshSession = exports.refreshSession = /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var _yield$supabase$auth$2 = yield supabase.auth.refreshSession(),\n          session = _yield$supabase$auth$2.data.session,\n          error = _yield$supabase$auth$2.error;\n        if (error) {\n          var _error$message3;\n          // Don't log network errors as errors\n          if (error != null && (_error$message3 = error.message) != null && _error$message3.includes('Network request failed') || (error == null ? void 0 : error.name) === 'NetworkError' || (error == null ? void 0 : error.name) === 'AuthRetryableFetchError') {\n            _EventLogger.EventLogger.debug('client', '📴 Network unavailable - cannot refresh session');\n            return null;\n          }\n          _EventLogger.EventLogger.error('client', 'Failed to refresh session:', error);\n\n          // If refresh fails, try to get the current session\n          var _yield$supabase$auth$3 = yield supabase.auth.getSession(),\n            currentSession = _yield$supabase$auth$3.data.session;\n          return currentSession;\n        }\n        return session;\n      } catch (error) {\n        var _error$message4;\n        // Handle network errors gracefully\n        if (error != null && (_error$message4 = error.message) != null && _error$message4.includes('Network request failed') || (error == null ? void 0 : error.name) === 'NetworkError' || (error == null ? void 0 : error.name) === 'AuthRetryableFetchError') {\n          _EventLogger.EventLogger.debug('client', '📴 Network unavailable - cannot refresh session');\n          return null;\n        }\n        _EventLogger.EventLogger.error('client', 'Failed to refresh session:', error);\n        return null;\n      }\n    });\n    return function refreshSession() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  // Helper to ensure session is valid\n  var ensureValidSession = exports.ensureValidSession = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var _yield$supabase$auth$4 = yield supabase.auth.getSession(),\n          session = _yield$supabase$auth$4.data.session;\n        if (!session) {\n          return null;\n        }\n\n        // Check if token is expired\n        var expiresAt = session.expires_at;\n        if (expiresAt && expiresAt * 1000 < Date.now()) {\n          // Token expired, try to refresh\n          return yield refreshSession();\n        }\n        return session;\n      } catch (error) {\n        var _error$message5;\n        // Handle network errors gracefully\n        if (error != null && (_error$message5 = error.message) != null && _error$message5.includes('Network request failed') || (error == null ? void 0 : error.name) === 'NetworkError' || (error == null ? void 0 : error.name) === 'AuthRetryableFetchError') {\n          _EventLogger.EventLogger.debug('client', '📴 Network unavailable - cannot validate session');\n          return null;\n        }\n\n        // Re-throw non-network errors\n        throw error;\n      }\n    });\n    return function ensureValidSession() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  // Helper to handle auth errors globally\n  var handleAuthError = exports.handleAuthError = /*#__PURE__*/function () {\n    var _ref5 = (0, _asyncToGenerator2.default)(function* (error) {\n      var _error$message6;\n      if ((_error$message6 = error.message) != null && _error$message6.includes('JWT') || error.code === 'PGRST301') {\n        // JWT error, try to refresh session\n        var newSession = yield refreshSession();\n        if (newSession) {\n          _EventLogger.EventLogger.debug('client', '✅ Session refreshed successfully');\n          return true;\n        } else {\n          _EventLogger.EventLogger.error('client', '❌ Failed to refresh session, user needs to login again');\n          return false;\n        }\n      }\n      return false;\n    });\n    return function handleAuthError(_x6) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n});","lineCount":348,"map":[[10,2,1,0,"require"],[10,9,1,0],[10,10,1,0,"_dependencyMap"],[10,24,1,0],[11,2,2,0],[11,6,2,0,"_supabaseJs"],[11,17,2,0],[11,20,2,0,"require"],[11,27,2,0],[11,28,2,0,"_dependencyMap"],[11,42,2,0],[12,2,3,0],[12,6,3,0,"_asyncStorage"],[12,19,3,0],[12,22,3,0,"_interopRequireDefault"],[12,44,3,0],[12,45,3,0,"require"],[12,52,3,0],[12,53,3,0,"_dependencyMap"],[12,67,3,0],[13,2,4,0],[13,6,4,0,"_expoConstants"],[13,20,4,0],[13,23,4,0,"_interopRequireDefault"],[13,45,4,0],[13,46,4,0,"require"],[13,53,4,0],[13,54,4,0,"_dependencyMap"],[13,68,4,0],[14,2,5,0],[14,6,5,0,"_netinfo"],[14,14,5,0],[14,17,5,0,"_interopRequireDefault"],[14,39,5,0],[14,40,5,0,"require"],[14,47,5,0],[14,48,5,0,"_dependencyMap"],[14,62,5,0],[15,2,6,0],[15,6,6,0,"_EventLogger"],[15,18,6,0],[15,21,6,0,"require"],[15,28,6,0],[15,29,6,0,"_dependencyMap"],[15,43,6,0],[16,2,6,54],[16,6,6,54,"_Constants$expoConfig"],[16,27,6,54],[16,29,6,54,"_Constants$expoConfig2"],[16,51,6,54],[17,2,8,0],[17,6,8,6,"supabaseUrl"],[17,17,8,17],[17,20,8,20],[17,22,8,20,"_Constants$expoConfig"],[17,43,8,20],[17,46,8,20,"Constants"],[17,68,8,29],[17,69,8,30,"expoConfig"],[17,79,8,40],[17,93,8,40,"_Constants$expoConfig"],[17,114,8,40],[17,117,8,20,"_Constants$expoConfig"],[17,138,8,20],[17,139,8,42,"extra"],[17,144,8,47],[17,165,8,20,"_Constants$expoConfig"],[17,186,8,20],[17,187,8,49,"supabaseUrl"],[17,198,8,60],[17,203,8,64],[17,245,8,106],[18,2,9,0],[18,6,9,6,"supabaseAnonKey"],[18,21,9,21],[18,24,9,24],[18,26,9,24,"_Constants$expoConfig2"],[18,48,9,24],[18,51,9,24,"Constants"],[18,73,9,33],[18,74,9,34,"expoConfig"],[18,84,9,44],[18,98,9,44,"_Constants$expoConfig2"],[18,120,9,44],[18,123,9,24,"_Constants$expoConfig2"],[18,145,9,24],[18,146,9,46,"extra"],[18,151,9,51],[18,172,9,24,"_Constants$expoConfig2"],[18,194,9,24],[18,195,9,53,"supabaseAnonKey"],[18,210,9,68],[18,215,9,72],[18,425,9,282],[20,2,11,0],[21,2,12,0],[21,6,12,6,"customStorage"],[21,19,12,19],[21,22,12,22],[22,4,13,2,"getItem"],[22,11,13,9],[23,6,13,9],[23,10,13,9,"_getItem"],[23,18,13,9],[23,25,13,9,"_asyncToGenerator2"],[23,43,13,9],[23,44,13,9,"default"],[23,51,13,9],[23,53,13,11],[23,64,13,18,"key"],[23,67,13,29],[23,69,13,34],[24,8,14,4],[24,12,14,8],[25,10,15,6],[25,23,15,19,"AsyncStorage"],[25,44,15,31],[25,45,15,32,"getItem"],[25,52,15,39],[25,53,15,40,"key"],[25,56,15,43],[25,57,15,44],[26,8,16,4],[26,9,16,5],[26,10,16,6],[26,17,16,13,"error"],[26,22,16,18],[26,24,16,20],[27,10,17,6,"EventLogger"],[27,34,17,17],[27,35,17,18,"error"],[27,40,17,23],[27,41,17,24],[27,49,17,32],[27,51,17,34],[27,75,17,58],[27,77,17,60,"error"],[27,82,17,74],[27,83,17,75],[28,10,18,6],[28,17,18,13],[28,21,18,17],[29,8,19,4],[30,6,20,2],[30,7,20,3],[31,6,20,3],[31,15,13,2,"getItem"],[31,22,13,9,"getItem"],[31,23,13,9,"_x"],[31,25,13,9],[32,8,13,9],[32,15,13,9,"_getItem"],[32,23,13,9],[32,24,13,9,"apply"],[32,29,13,9],[32,36,13,9,"arguments"],[32,45,13,9],[33,6,13,9],[34,6,13,9],[34,13,13,2,"getItem"],[34,20,13,9],[35,4,13,9],[35,7,20,3],[36,4,21,2,"setItem"],[36,11,21,9],[37,6,21,9],[37,10,21,9,"_setItem"],[37,18,21,9],[37,25,21,9,"_asyncToGenerator2"],[37,43,21,9],[37,44,21,9,"default"],[37,51,21,9],[37,53,21,11],[37,64,21,18,"key"],[37,67,21,29],[37,69,21,31,"value"],[37,74,21,44],[37,76,21,49],[38,8,22,4],[38,12,22,8],[39,10,23,6],[39,16,23,12,"AsyncStorage"],[39,37,23,24],[39,38,23,25,"setItem"],[39,45,23,32],[39,46,23,33,"key"],[39,49,23,36],[39,51,23,38,"value"],[39,56,23,43],[39,57,23,44],[40,8,24,4],[40,9,24,5],[40,10,24,6],[40,17,24,13,"error"],[40,22,24,18],[40,24,24,20],[41,10,25,6,"EventLogger"],[41,34,25,17],[41,35,25,18,"error"],[41,40,25,23],[41,41,25,24],[41,49,25,32],[41,51,25,34],[41,75,25,58],[41,77,25,60,"error"],[41,82,25,74],[41,83,25,75],[42,8,26,4],[43,6,27,2],[43,7,27,3],[44,6,27,3],[44,15,21,2,"setItem"],[44,22,21,9,"setItem"],[44,23,21,9,"_x2"],[44,26,21,9],[44,28,21,9,"_x3"],[44,31,21,9],[45,8,21,9],[45,15,21,9,"_setItem"],[45,23,21,9],[45,24,21,9,"apply"],[45,29,21,9],[45,36,21,9,"arguments"],[45,45,21,9],[46,6,21,9],[47,6,21,9],[47,13,21,2,"setItem"],[47,20,21,9],[48,4,21,9],[48,7,27,3],[49,4,28,2,"removeItem"],[49,14,28,12],[50,6,28,12],[50,10,28,12,"_removeItem"],[50,21,28,12],[50,28,28,12,"_asyncToGenerator2"],[50,46,28,12],[50,47,28,12,"default"],[50,54,28,12],[50,56,28,14],[50,67,28,21,"key"],[50,70,28,32],[50,72,28,37],[51,8,29,4],[51,12,29,8],[52,10,30,6],[52,16,30,12,"AsyncStorage"],[52,37,30,24],[52,38,30,25,"removeItem"],[52,48,30,35],[52,49,30,36,"key"],[52,52,30,39],[52,53,30,40],[53,8,31,4],[53,9,31,5],[53,10,31,6],[53,17,31,13,"error"],[53,22,31,18],[53,24,31,20],[54,10,32,6,"EventLogger"],[54,34,32,17],[54,35,32,18,"error"],[54,40,32,23],[54,41,32,24],[54,49,32,32],[54,51,32,34],[54,78,32,61],[54,80,32,63,"error"],[54,85,32,77],[54,86,32,78],[55,8,33,4],[56,6,34,2],[56,7,34,3],[57,6,34,3],[57,15,28,2,"removeItem"],[57,25,28,12,"removeItem"],[57,26,28,12,"_x4"],[57,29,28,12],[58,8,28,12],[58,15,28,12,"_removeItem"],[58,26,28,12],[58,27,28,12,"apply"],[58,32,28,12],[58,39,28,12,"arguments"],[58,48,28,12],[59,6,28,12],[60,6,28,12],[60,13,28,2,"removeItem"],[60,23,28,12],[61,4,28,12],[62,2,35,0],[62,3,35,1],[64,2,37,0],[65,2,37,0],[65,6,38,6,"SupabaseClientWithRetry"],[65,29,38,29],[66,4,44,2],[66,13,44,2,"SupabaseClientWithRetry"],[66,37,44,2],[66,39,44,16],[67,6,44,16],[67,10,44,16,"_this"],[67,15,44,16],[68,6,44,16],[68,10,44,16,"_classCallCheck2"],[68,26,44,16],[68,27,44,16,"default"],[68,34,44,16],[68,42,44,16,"SupabaseClientWithRetry"],[68,65,44,16],[69,6,44,16],[69,11,40,10,"isOnline"],[69,19,40,18],[69,22,40,30],[69,26,40,34],[70,6,40,34],[70,11,41,10,"retryCount"],[70,21,41,20],[70,24,41,31],[70,25,41,32],[71,6,41,32],[71,11,42,10,"retryDelay"],[71,21,42,20],[71,24,42,31],[71,28,42,35],[72,6,45,4],[72,10,45,8],[72,11,45,9,"client"],[72,17,45,15],[72,20,45,18],[72,24,45,18,"createClient"],[72,48,45,30],[72,50,45,31,"supabaseUrl"],[72,61,45,42],[72,63,45,44,"supabaseAnonKey"],[72,78,45,59],[72,80,45,61],[73,8,46,6,"auth"],[73,12,46,10],[73,14,46,12],[74,10,47,8,"storage"],[74,17,47,15],[74,19,47,17,"customStorage"],[74,32,47,30],[75,10,48,8,"autoRefreshToken"],[75,26,48,24],[75,28,48,26],[75,32,48,30],[76,10,49,8,"persistSession"],[76,24,49,22],[76,26,49,24],[76,30,49,28],[77,10,50,8,"detectSessionInUrl"],[77,28,50,26],[77,30,50,28],[77,35,50,33],[78,10,51,8,"flowType"],[78,18,51,16],[78,20,51,18],[78,26,51,24],[79,10,52,8,"storageKey"],[79,20,52,18],[79,22,52,20],[80,8,53,6],[80,9,53,7],[81,8,54,6,"global"],[81,14,54,12],[81,16,54,14],[82,10,55,8,"headers"],[82,17,55,15],[82,19,55,17],[83,12,56,10],[83,27,56,25],[83,29,56,27],[84,10,57,8],[85,8,58,6],[85,9,58,7],[86,8,59,6,"db"],[86,10,59,8],[86,12,59,10],[87,10,60,8,"schema"],[87,16,60,14],[87,18,60,16],[88,8,61,6],[88,9,61,7],[89,8,62,6,"realtime"],[89,16,62,14],[89,18,62,16],[90,10,63,8,"params"],[90,16,63,14],[90,18,63,16],[91,12,64,10,"eventsPerSecond"],[91,27,64,25],[91,29,64,27],[92,10,65,8],[93,8,66,6],[94,6,67,4],[94,7,67,5],[94,8,67,6],[96,6,69,4],[97,6,70,4,"NetInfo"],[97,22,70,11],[97,23,70,12,"addEventListener"],[97,39,70,28],[97,40,70,29],[97,50,70,29,"state"],[97,55,70,34],[97,57,70,38],[98,8,70,38],[98,12,70,38,"_state$isConnected"],[98,30,70,38],[99,8,71,6,"_this"],[99,13,71,10],[99,14,71,11,"isOnline"],[99,22,71,19],[99,26,71,19,"_state$isConnected"],[99,44,71,19],[99,47,71,22,"state"],[99,52,71,27],[99,53,71,28,"isConnected"],[99,64,71,39],[99,76,71,39,"_state$isConnected"],[99,94,71,39],[99,97,71,43],[99,101,71,47],[100,8,72,6,"EventLogger"],[100,32,72,17],[100,33,72,18,"debug"],[100,38,72,23],[100,39,72,24],[100,47,72,32],[100,49,72,34],[100,66,72,51],[100,68,72,53,"_this"],[100,73,72,57],[100,74,72,58,"isOnline"],[100,82,72,66],[100,85,72,69],[100,93,72,77],[100,96,72,80],[100,105,72,89],[100,106,72,90],[101,6,73,4],[101,7,73,5],[101,8,73,6],[102,4,74,2],[104,4,76,2],[105,4,76,2],[105,15,76,2,"_createClass2"],[105,28,76,2],[105,29,76,2,"default"],[105,36,76,2],[105,38,76,2,"SupabaseClientWithRetry"],[105,61,76,2],[106,6,76,2,"key"],[106,9,76,2],[107,6,76,2,"get"],[107,9,76,2],[107,11,77,2],[107,20,77,2,"get"],[107,24,77,2],[107,26,77,17],[108,8,78,4],[108,15,78,11],[108,19,78,15],[108,20,78,16,"client"],[108,26,78,22],[109,6,79,2],[111,6,81,2],[112,4,81,2],[113,6,81,2,"key"],[113,9,81,2],[114,6,81,2,"value"],[114,11,81,2],[115,8,81,2],[115,12,81,2,"_withRetry"],[115,22,81,2],[115,29,81,2,"_asyncToGenerator2"],[115,47,81,2],[115,48,81,2,"default"],[115,55,81,2],[115,57,82,2],[115,68,82,21,"operation"],[115,77,82,48],[115,79,82,62],[116,10,82,62],[116,14,82,62,"_this2"],[116,20,82,62],[117,10,83,4],[117,14,83,8,"lastError"],[117,23,83,22],[118,10,83,23],[118,14,83,23,"_loop"],[118,19,83,23],[118,32,83,23,"_loop"],[118,38,83,23,"attempt"],[118,45,83,23],[118,47,85,64],[119,14,86,6],[119,18,86,10],[120,16,87,8],[121,16,88,8],[121,20,88,12],[121,21,88,13,"_this2"],[121,27,88,17],[121,28,88,18,"isOnline"],[121,36,88,26],[121,38,88,28],[122,18,89,10],[122,24,89,16],[122,28,89,20,"Error"],[122,33,89,25],[122,34,89,26],[122,57,89,49],[122,58,89,50],[123,16,90,8],[124,16,90,9],[125,18,90,9,"v"],[125,19,90,9],[125,27,92,21,"operation"],[125,36,92,30],[125,37,92,31],[126,16,92,32],[127,14,93,6],[127,15,93,7],[127,16,93,8],[127,23,93,15,"error"],[127,28,93,25],[127,30,93,27],[128,16,93,27],[128,20,93,27,"_error$message"],[128,34,93,27],[129,16,94,8,"lastError"],[129,25,94,17],[129,28,94,20,"error"],[129,33,94,25],[130,16,95,8,"EventLogger"],[130,40,95,19],[130,41,95,20,"error"],[130,46,95,25],[130,47,95,26],[130,55,95,34],[130,57,95,36],[130,89,95,68],[130,91,95,70,"error"],[130,96,95,75],[130,97,95,76,"message"],[130,104,95,92],[130,105,95,93],[132,16,97,8],[133,16,98,8],[133,20,98,12,"error"],[133,25,98,17],[133,26,98,18,"code"],[133,30,98,22],[133,35,98,27],[133,42,98,34],[134,16,98,38],[135,16,99,12,"error"],[135,21,99,17],[135,22,99,18,"code"],[135,26,99,22],[135,31,99,27],[135,38,99,34],[136,16,99,38],[137,16,100,12,"error"],[137,21,100,17],[137,22,100,18,"code"],[137,26,100,22],[137,31,100,27],[137,38,100,34],[138,16,100,38],[139,16,101,12,"error"],[139,21,101,17],[139,22,101,18,"code"],[139,26,101,22],[139,31,101,27],[139,38,101,34],[140,16,101,38],[141,16,102,12,"error"],[141,21,102,17],[141,22,102,18,"code"],[141,26,102,22],[141,31,102,27],[141,41,102,37],[141,45,102,41],[142,16,102,41],[142,17,102,41,"_error$message"],[142,31,102,41],[142,34,103,12,"error"],[142,39,103,17],[142,40,103,18,"message"],[142,47,103,25],[142,60,103,12,"_error$message"],[142,74,103,12],[142,75,103,27,"includes"],[142,83,103,35],[142,84,103,36],[142,89,103,41],[142,90,103,42],[142,92,103,44],[143,18,104,10],[143,24,104,16,"error"],[143,29,104,21],[144,16,105,8],[146,16,107,8],[147,16,108,8],[147,20,108,12,"attempt"],[147,27,108,19],[147,30,108,22,"_this2"],[147,36,108,26],[147,37,108,27,"retryCount"],[147,47,108,37],[147,50,108,40],[147,51,108,41],[147,53,108,43],[148,18,109,10],[148,24,109,16],[148,28,109,20,"Promise"],[148,35,109,27],[148,36,109,28],[148,46,109,28,"resolve"],[148,53,109,35],[149,20,109,35],[149,27,109,39,"setTimeout"],[149,37,109,49],[149,38,109,50,"resolve"],[149,45,109,57],[149,47,109,59,"_this2"],[149,53,109,63],[149,54,109,64,"retryDelay"],[149,64,109,74],[149,68,109,78,"attempt"],[149,75,109,85],[149,78,109,88],[149,79,109,89],[149,80,109,90],[149,81,109,91],[150,18,109,91],[150,20,109,92],[151,16,110,8],[152,14,111,6],[153,12,112,4],[153,13,112,5],[154,12,112,5,"_ret"],[154,16,112,5],[155,10,85,4],[155,15,85,9],[155,19,85,13,"attempt"],[155,26,85,20],[155,29,85,23],[155,30,85,24],[155,32,85,26,"attempt"],[155,39,85,33],[155,42,85,36],[155,46,85,40],[155,47,85,41,"retryCount"],[155,57,85,51],[155,59,85,53,"attempt"],[155,66,85,60],[155,68,85,62],[156,12,85,62,"_ret"],[156,16,85,62],[156,26,85,62,"_loop"],[156,31,85,62],[156,32,85,62,"attempt"],[156,39,85,62],[157,12,85,62],[157,16,85,62,"_ret"],[157,20,85,62],[157,29,85,62,"_ret"],[157,33,85,62],[157,34,85,62,"v"],[157,35,85,62],[158,10,85,62],[159,10,114,4],[159,16,114,10,"lastError"],[159,25,114,19],[160,8,115,2],[160,9,115,3],[161,8,115,3],[161,17,82,8,"withRetry"],[161,26,82,17,"withRetry"],[161,27,82,17,"_x5"],[161,30,82,17],[162,10,82,17],[162,17,82,17,"_withRetry"],[162,27,82,17],[162,28,82,17,"apply"],[162,33,82,17],[162,40,82,17,"arguments"],[162,49,82,17],[163,8,82,17],[164,8,82,17],[164,15,82,8,"withRetry"],[164,24,82,17],[165,6,82,17],[166,4,82,17],[167,2,82,17],[167,7,118,0],[168,2,119,0],[168,6,119,6,"supabaseClientWithRetry"],[168,29,119,29],[168,32,119,32],[168,36,119,36,"SupabaseClientWithRetry"],[168,59,119,59],[168,60,119,60],[168,61,119,61],[169,2,120,7],[169,6,120,13,"supabase"],[169,14,120,21],[169,17,120,21,"exports"],[169,24,120,21],[169,25,120,21,"supabase"],[169,33,120,21],[169,36,120,24,"supabaseClientWithRetry"],[169,59,120,47],[169,60,120,48,"supabase"],[169,68,120,56],[170,2,121,7],[170,6,121,13,"supabaseWithRetry"],[170,23,121,30],[170,26,121,30,"exports"],[170,33,121,30],[170,34,121,30,"supabaseWithRetry"],[170,51,121,30],[170,54,121,33,"supabaseClientWithRetry"],[170,77,121,56],[172,2,123,0],[173,2,124,7],[173,6,124,13,"testConnection"],[173,20,124,27],[173,23,124,27,"exports"],[173,30,124,27],[173,31,124,27,"testConnection"],[173,45,124,27],[174,4,124,27],[174,8,124,27,"_ref"],[174,12,124,27],[174,19,124,27,"_asyncToGenerator2"],[174,37,124,27],[174,38,124,27,"default"],[174,45,124,27],[174,47,124,30],[174,60,131,6],[175,6,132,2],[175,10,132,6],[176,8,132,6],[176,12,132,6,"_session$user"],[176,25,132,6],[177,8,133,4],[178,8,134,4],[178,12,134,10,"netInfo"],[178,19,134,17],[178,28,134,26,"NetInfo"],[178,44,134,33],[178,45,134,34,"fetch"],[178,50,134,39],[178,51,134,40],[178,52,134,41],[179,8,135,4],[179,12,135,8],[179,13,135,9,"netInfo"],[179,20,135,16],[179,21,135,17,"isConnected"],[179,32,135,28],[179,34,135,30],[180,10,136,6],[180,17,136,13],[181,12,137,8,"connected"],[181,21,137,17],[181,23,137,19],[181,28,137,24],[182,12,138,8,"authenticated"],[182,25,138,21],[182,27,138,23],[182,32,138,28],[183,12,139,8,"error"],[183,17,139,13],[183,19,139,15],[183,42,139,38],[184,12,140,8,"details"],[184,19,140,15],[184,21,140,17],[184,38,140,34],[185,12,141,8,"networkStatus"],[185,25,141,21],[185,27,141,23],[186,10,142,6],[186,11,142,7],[187,8,143,4],[189,8,145,4],[190,8,146,4],[190,12,146,4,"_yield$supabaseWithRe"],[190,33,146,4],[190,42,146,41,"supabaseWithRetry"],[190,59,146,58],[190,60,146,59,"withRetry"],[190,69,146,68],[190,87,146,68,"_asyncToGenerator2"],[190,105,146,68],[190,106,146,68,"default"],[190,113,146,68],[190,115,146,69],[190,128,146,81],[191,12,147,6],[191,16,147,12,"result"],[191,22,147,18],[191,31,147,27,"supabase"],[191,39,147,35],[191,40,148,9,"from"],[191,44,148,13],[191,45,148,14],[191,58,148,27],[191,59,148,28],[191,60,149,9,"select"],[191,66,149,15],[191,67,149,16],[191,74,149,23],[191,76,149,25],[192,14,149,27,"count"],[192,19,149,32],[192,21,149,34],[192,28,149,41],[193,14,149,43,"head"],[193,18,149,47],[193,20,149,49],[194,12,149,54],[194,13,149,55],[194,14,149,56],[194,15,150,9,"limit"],[194,20,150,14],[194,21,150,15],[194,22,150,16],[194,23,150,17],[195,12,152,6],[195,16,152,10,"result"],[195,22,152,16],[195,23,152,17,"error"],[195,28,152,22],[195,30,152,24],[195,36,152,30,"result"],[195,42,152,36],[195,43,152,37,"error"],[195,48,152,42],[196,12,153,6],[196,19,153,13,"result"],[196,25,153,19],[197,10,154,4],[197,11,154,5],[197,13,154,6],[198,10,146,19,"healthError"],[198,21,146,30],[198,24,146,30,"_yield$supabaseWithRe"],[198,45,146,30],[198,46,146,12,"error"],[198,51,146,17],[199,8,156,4],[199,12,156,8,"healthError"],[199,23,156,19],[199,25,156,21],[200,10,157,6,"EventLogger"],[200,34,157,17],[200,35,157,18,"error"],[200,40,157,23],[200,41,157,24],[200,49,157,32],[200,51,157,34],[200,82,157,65],[200,84,157,67,"healthError"],[200,95,157,87],[200,96,157,88],[201,10,158,6],[201,17,158,13],[202,12,159,8,"connected"],[202,21,159,17],[202,23,159,19],[202,28,159,24],[203,12,160,8,"authenticated"],[203,25,160,21],[203,27,160,23],[203,32,160,28],[204,12,161,8,"error"],[204,17,161,13],[204,19,161,15,"healthError"],[204,30,161,26],[204,31,161,27,"message"],[204,38,161,34],[205,12,162,8,"details"],[205,19,162,15],[205,21,162,17],[205,31,162,27],[206,12,163,8,"networkStatus"],[206,25,163,21],[206,27,163,23],[207,10,164,6],[207,11,164,7],[208,8,165,4],[210,8,167,4],[211,8,168,4],[211,12,168,4,"_yield$supabase$auth$"],[211,33,168,4],[211,42,168,61,"supabase"],[211,50,168,69],[211,51,168,70,"auth"],[211,55,168,74],[211,56,168,75,"getSession"],[211,66,168,85],[211,67,168,86],[211,68,168,87],[212,10,168,20,"session"],[212,17,168,27],[212,20,168,27,"_yield$supabase$auth$"],[212,41,168,27],[212,42,168,12,"data"],[212,46,168,16],[212,47,168,20,"session"],[212,54,168,27],[213,10,168,38,"sessionError"],[213,22,168,50],[213,25,168,50,"_yield$supabase$auth$"],[213,46,168,50],[213,47,168,31,"error"],[213,52,168,36],[214,8,170,4],[214,12,170,8,"sessionError"],[214,24,170,20],[214,26,170,22],[215,10,171,6,"EventLogger"],[215,34,171,17],[215,35,171,18,"error"],[215,40,171,23],[215,41,171,24],[215,49,171,32],[215,51,171,34],[215,74,171,57],[215,76,171,59,"sessionError"],[215,88,171,80],[215,89,171,81],[216,10,172,6],[216,17,172,13],[217,12,173,8,"connected"],[217,21,173,17],[217,23,173,19],[217,28,173,24],[218,12,174,8,"authenticated"],[218,25,174,21],[218,27,174,23],[218,32,174,28],[219,12,175,8,"error"],[219,17,175,13],[219,19,175,15,"sessionError"],[219,31,175,27],[219,32,175,28,"message"],[219,39,175,35],[220,12,176,8,"details"],[220,19,176,15],[220,21,176,17],[220,27,176,23],[221,12,177,8,"networkStatus"],[221,25,177,21],[221,27,177,23],[222,10,178,6],[222,11,178,7],[223,8,179,4],[224,8,181,4,"EventLogger"],[224,32,181,15],[224,33,181,16,"debug"],[224,38,181,21],[224,39,181,22],[224,47,181,30],[224,49,181,32],[224,84,181,67],[224,85,181,68],[225,8,182,4,"EventLogger"],[225,32,182,15],[225,33,182,16,"debug"],[225,38,182,21],[225,39,182,22],[225,47,182,30],[225,49,182,32],[225,68,182,51],[225,70,182,53,"session"],[225,77,182,60],[225,80,182,63],[225,95,182,78],[225,98,182,81],[225,117,182,100],[225,118,182,101],[226,8,184,4],[226,15,184,11],[227,10,185,6,"connected"],[227,19,185,15],[227,21,185,17],[227,25,185,21],[228,10,186,6,"authenticated"],[228,23,186,19],[228,25,186,21],[228,26,186,22],[228,27,186,23,"session"],[228,34,186,30],[229,10,187,6,"user"],[229,14,187,10],[229,16,187,12,"session"],[229,23,187,19],[229,36,187,19,"_session$user"],[229,49,187,19],[229,52,187,12,"session"],[229,59,187,19],[229,60,187,21,"user"],[229,64,187,25],[229,85,187,12,"_session$user"],[229,98,187,12],[229,99,187,27,"email"],[229,104,187,32],[230,10,188,6,"details"],[230,17,188,13],[230,19,188,15],[230,45,188,41],[231,10,189,6,"networkStatus"],[231,23,189,19],[231,25,189,21],[232,8,190,4],[232,9,190,5],[233,6,191,2],[233,7,191,3],[233,8,191,4],[233,15,191,11,"error"],[233,20,191,21],[233,22,191,23],[234,8,191,23],[234,12,191,23,"_error$message2"],[234,27,191,23],[235,8,192,4],[236,8,193,4],[236,12,193,8,"error"],[236,17,193,13],[236,30,193,13,"_error$message2"],[236,45,193,13],[236,48,193,8,"error"],[236,53,193,13],[236,54,193,15,"message"],[236,61,193,22],[236,74,193,8,"_error$message2"],[236,89,193,8],[236,90,193,24,"includes"],[236,98,193,32],[236,99,193,33],[236,123,193,57],[236,124,193,58],[236,128,194,8],[236,129,194,8,"error"],[236,134,194,13],[236,154,194,8,"error"],[236,159,194,13],[236,160,194,15,"name"],[236,164,194,19],[236,170,194,24],[236,184,194,38],[236,186,194,40],[237,10,195,6,"EventLogger"],[237,34,195,17],[237,35,195,18,"debug"],[237,40,195,23],[237,41,195,24],[237,49,195,32],[237,51,195,34],[237,95,195,78],[237,96,195,79],[238,8,196,4],[238,9,196,5],[238,15,196,11],[239,10,197,6,"EventLogger"],[239,34,197,17],[239,35,197,18,"error"],[239,40,197,23],[239,41,197,24],[239,49,197,32],[239,51,197,34],[239,82,197,65],[239,84,197,67,"error"],[239,89,197,81],[239,90,197,82],[240,8,198,4],[241,8,200,4],[241,15,200,11],[242,10,201,6,"connected"],[242,19,201,15],[242,21,201,17],[242,26,201,22],[243,10,202,6,"authenticated"],[243,23,202,19],[243,25,202,21],[243,30,202,26],[244,10,203,6,"error"],[244,15,203,11],[244,17,203,13,"error"],[244,22,203,18],[244,23,203,19,"message"],[244,30,203,26],[244,34,203,30],[244,49,203,45],[245,10,204,6,"details"],[245,17,204,13],[245,19,204,15],[245,38,204,34],[246,10,205,6,"networkStatus"],[246,23,205,19],[246,25,205,21],[247,8,206,4],[247,9,206,5],[248,6,207,2],[249,4,208,0],[249,5,208,1],[250,4,208,1],[250,20,124,13,"testConnection"],[250,34,124,27,"testConnection"],[250,35,124,27],[251,6,124,27],[251,13,124,27,"_ref"],[251,17,124,27],[251,18,124,27,"apply"],[251,23,124,27],[251,30,124,27,"arguments"],[251,39,124,27],[252,4,124,27],[253,2,124,27],[253,5,208,1],[255,2,210,0],[256,2,211,7],[256,6,211,13,"refreshSession"],[256,20,211,27],[256,23,211,27,"exports"],[256,30,211,27],[256,31,211,27,"refreshSession"],[256,45,211,27],[257,4,211,27],[257,8,211,27,"_ref3"],[257,13,211,27],[257,20,211,27,"_asyncToGenerator2"],[257,38,211,27],[257,39,211,27,"default"],[257,46,211,27],[257,48,211,30],[257,61,211,42],[258,6,212,2],[258,10,212,6],[259,8,213,4],[259,12,213,4,"_yield$supabase$auth$2"],[259,34,213,4],[259,43,213,47,"supabase"],[259,51,213,55],[259,52,213,56,"auth"],[259,56,213,60],[259,57,213,61,"refreshSession"],[259,71,213,75],[259,72,213,76],[259,73,213,77],[260,10,213,20,"session"],[260,17,213,27],[260,20,213,27,"_yield$supabase$auth$2"],[260,42,213,27],[260,43,213,12,"data"],[260,47,213,16],[260,48,213,20,"session"],[260,55,213,27],[261,10,213,31,"error"],[261,15,213,36],[261,18,213,36,"_yield$supabase$auth$2"],[261,40,213,36],[261,41,213,31,"error"],[261,46,213,36],[262,8,214,4],[262,12,214,8,"error"],[262,17,214,13],[262,19,214,15],[263,10,214,15],[263,14,214,15,"_error$message3"],[263,29,214,15],[264,10,215,6],[265,10,216,6],[265,14,216,10,"error"],[265,19,216,15],[265,32,216,15,"_error$message3"],[265,47,216,15],[265,50,216,10,"error"],[265,55,216,15],[265,56,216,17,"message"],[265,63,216,24],[265,76,216,10,"_error$message3"],[265,91,216,10],[265,92,216,26,"includes"],[265,100,216,34],[265,101,216,35],[265,125,216,59],[265,126,216,60],[265,130,217,10],[265,131,217,10,"error"],[265,136,217,15],[265,156,217,10,"error"],[265,161,217,15],[265,162,217,17,"name"],[265,166,217,21],[265,172,217,26],[265,186,217,40],[265,190,218,10],[265,191,218,10,"error"],[265,196,218,15],[265,216,218,10,"error"],[265,221,218,15],[265,222,218,17,"name"],[265,226,218,21],[265,232,218,26],[265,257,218,51],[265,259,218,53],[266,12,219,8,"EventLogger"],[266,36,219,19],[266,37,219,20,"debug"],[266,42,219,25],[266,43,219,26],[266,51,219,34],[266,53,219,36],[266,102,219,85],[266,103,219,86],[267,12,220,8],[267,19,220,15],[267,23,220,19],[268,10,221,6],[269,10,223,6,"EventLogger"],[269,34,223,17],[269,35,223,18,"error"],[269,40,223,23],[269,41,223,24],[269,49,223,32],[269,51,223,34],[269,79,223,62],[269,81,223,64,"error"],[269,86,223,78],[269,87,223,79],[271,10,225,6],[272,10,226,6],[272,14,226,6,"_yield$supabase$auth$3"],[272,36,226,6],[272,45,226,58,"supabase"],[272,53,226,66],[272,54,226,67,"auth"],[272,58,226,71],[272,59,226,72,"getSession"],[272,69,226,82],[272,70,226,83],[272,71,226,84],[273,12,226,31,"currentSession"],[273,26,226,45],[273,29,226,45,"_yield$supabase$auth$3"],[273,51,226,45],[273,52,226,14,"data"],[273,56,226,18],[273,57,226,22,"session"],[273,64,226,29],[274,10,227,6],[274,17,227,13,"currentSession"],[274,31,227,27],[275,8,228,4],[276,8,229,4],[276,15,229,11,"session"],[276,22,229,18],[277,6,230,2],[277,7,230,3],[277,8,230,4],[277,15,230,11,"error"],[277,20,230,21],[277,22,230,23],[278,8,230,23],[278,12,230,23,"_error$message4"],[278,27,230,23],[279,8,231,4],[280,8,232,4],[280,12,232,8,"error"],[280,17,232,13],[280,30,232,13,"_error$message4"],[280,45,232,13],[280,48,232,8,"error"],[280,53,232,13],[280,54,232,15,"message"],[280,61,232,22],[280,74,232,8,"_error$message4"],[280,89,232,8],[280,90,232,24,"includes"],[280,98,232,32],[280,99,232,33],[280,123,232,57],[280,124,232,58],[280,128,233,8],[280,129,233,8,"error"],[280,134,233,13],[280,154,233,8,"error"],[280,159,233,13],[280,160,233,15,"name"],[280,164,233,19],[280,170,233,24],[280,184,233,38],[280,188,234,8],[280,189,234,8,"error"],[280,194,234,13],[280,214,234,8,"error"],[280,219,234,13],[280,220,234,15,"name"],[280,224,234,19],[280,230,234,24],[280,255,234,49],[280,257,234,51],[281,10,235,6,"EventLogger"],[281,34,235,17],[281,35,235,18,"debug"],[281,40,235,23],[281,41,235,24],[281,49,235,32],[281,51,235,34],[281,100,235,83],[281,101,235,84],[282,10,236,6],[282,17,236,13],[282,21,236,17],[283,8,237,4],[284,8,239,4,"EventLogger"],[284,32,239,15],[284,33,239,16,"error"],[284,38,239,21],[284,39,239,22],[284,47,239,30],[284,49,239,32],[284,77,239,60],[284,79,239,62,"error"],[284,84,239,76],[284,85,239,77],[285,8,240,4],[285,15,240,11],[285,19,240,15],[286,6,241,2],[287,4,242,0],[287,5,242,1],[288,4,242,1],[288,20,211,13,"refreshSession"],[288,34,211,27,"refreshSession"],[288,35,211,27],[289,6,211,27],[289,13,211,27,"_ref3"],[289,18,211,27],[289,19,211,27,"apply"],[289,24,211,27],[289,31,211,27,"arguments"],[289,40,211,27],[290,4,211,27],[291,2,211,27],[291,5,242,1],[293,2,244,0],[294,2,245,7],[294,6,245,13,"ensureValidSession"],[294,24,245,31],[294,27,245,31,"exports"],[294,34,245,31],[294,35,245,31,"ensureValidSession"],[294,53,245,31],[295,4,245,31],[295,8,245,31,"_ref4"],[295,13,245,31],[295,20,245,31,"_asyncToGenerator2"],[295,38,245,31],[295,39,245,31,"default"],[295,46,245,31],[295,48,245,34],[295,61,245,46],[296,6,246,2],[296,10,246,6],[297,8,247,4],[297,12,247,4,"_yield$supabase$auth$4"],[297,34,247,4],[297,43,247,40,"supabase"],[297,51,247,48],[297,52,247,49,"auth"],[297,56,247,53],[297,57,247,54,"getSession"],[297,67,247,64],[297,68,247,65],[297,69,247,66],[298,10,247,20,"session"],[298,17,247,27],[298,20,247,27,"_yield$supabase$auth$4"],[298,42,247,27],[298,43,247,12,"data"],[298,47,247,16],[298,48,247,20,"session"],[298,55,247,27],[299,8,249,4],[299,12,249,8],[299,13,249,9,"session"],[299,20,249,16],[299,22,249,18],[300,10,250,6],[300,17,250,13],[300,21,250,17],[301,8,251,4],[303,8,253,4],[304,8,254,4],[304,12,254,10,"expiresAt"],[304,21,254,19],[304,24,254,22,"session"],[304,31,254,29],[304,32,254,30,"expires_at"],[304,42,254,40],[305,8,255,4],[305,12,255,8,"expiresAt"],[305,21,255,17],[305,25,255,21,"expiresAt"],[305,34,255,30],[305,37,255,33],[305,41,255,37],[305,44,255,40,"Date"],[305,48,255,44],[305,49,255,45,"now"],[305,52,255,48],[305,53,255,49],[305,54,255,50],[305,56,255,52],[306,10,256,6],[307,10,257,6],[307,23,257,19,"refreshSession"],[307,37,257,33],[307,38,257,34],[307,39,257,35],[308,8,258,4],[309,8,260,4],[309,15,260,11,"session"],[309,22,260,18],[310,6,261,2],[310,7,261,3],[310,8,261,4],[310,15,261,11,"error"],[310,20,261,21],[310,22,261,23],[311,8,261,23],[311,12,261,23,"_error$message5"],[311,27,261,23],[312,8,262,4],[313,8,263,4],[313,12,263,8,"error"],[313,17,263,13],[313,30,263,13,"_error$message5"],[313,45,263,13],[313,48,263,8,"error"],[313,53,263,13],[313,54,263,15,"message"],[313,61,263,22],[313,74,263,8,"_error$message5"],[313,89,263,8],[313,90,263,24,"includes"],[313,98,263,32],[313,99,263,33],[313,123,263,57],[313,124,263,58],[313,128,264,8],[313,129,264,8,"error"],[313,134,264,13],[313,154,264,8,"error"],[313,159,264,13],[313,160,264,15,"name"],[313,164,264,19],[313,170,264,24],[313,184,264,38],[313,188,265,8],[313,189,265,8,"error"],[313,194,265,13],[313,214,265,8,"error"],[313,219,265,13],[313,220,265,15,"name"],[313,224,265,19],[313,230,265,24],[313,255,265,49],[313,257,265,51],[314,10,266,6,"EventLogger"],[314,34,266,17],[314,35,266,18,"debug"],[314,40,266,23],[314,41,266,24],[314,49,266,32],[314,51,266,34],[314,101,266,84],[314,102,266,85],[315,10,267,6],[315,17,267,13],[315,21,267,17],[316,8,268,4],[318,8,270,4],[319,8,271,4],[319,14,271,10,"error"],[319,19,271,15],[320,6,272,2],[321,4,273,0],[321,5,273,1],[322,4,273,1],[322,20,245,13,"ensureValidSession"],[322,38,245,31,"ensureValidSession"],[322,39,245,31],[323,6,245,31],[323,13,245,31,"_ref4"],[323,18,245,31],[323,19,245,31,"apply"],[323,24,245,31],[323,31,245,31,"arguments"],[323,40,245,31],[324,4,245,31],[325,2,245,31],[325,5,273,1],[327,2,275,0],[328,2,276,7],[328,6,276,13,"handleAuthError"],[328,21,276,28],[328,24,276,28,"exports"],[328,31,276,28],[328,32,276,28,"handleAuthError"],[328,47,276,28],[329,4,276,28],[329,8,276,28,"_ref5"],[329,13,276,28],[329,20,276,28,"_asyncToGenerator2"],[329,38,276,28],[329,39,276,28,"default"],[329,46,276,28],[329,48,276,31],[329,59,276,38,"error"],[329,64,276,48],[329,66,276,53],[330,6,276,53],[330,10,276,53,"_error$message6"],[330,25,276,53],[331,6,277,2],[331,10,277,6],[331,11,277,6,"_error$message6"],[331,26,277,6],[331,29,277,6,"error"],[331,34,277,11],[331,35,277,12,"message"],[331,42,277,19],[331,55,277,6,"_error$message6"],[331,70,277,6],[331,71,277,21,"includes"],[331,79,277,29],[331,80,277,30],[331,85,277,35],[331,86,277,36],[331,90,277,40,"error"],[331,95,277,45],[331,96,277,46,"code"],[331,100,277,50],[331,105,277,55],[331,115,277,65],[331,117,277,67],[332,8,278,4],[333,8,279,4],[333,12,279,10,"newSession"],[333,22,279,20],[333,31,279,29,"refreshSession"],[333,45,279,43],[333,46,279,44],[333,47,279,45],[334,8,280,4],[334,12,280,8,"newSession"],[334,22,280,18],[334,24,280,20],[335,10,281,6,"EventLogger"],[335,34,281,17],[335,35,281,18,"debug"],[335,40,281,23],[335,41,281,24],[335,49,281,32],[335,51,281,34],[335,85,281,68],[335,86,281,69],[336,10,282,6],[336,17,282,13],[336,21,282,17],[337,8,283,4],[337,9,283,5],[337,15,283,11],[338,10,284,6,"EventLogger"],[338,34,284,17],[338,35,284,18,"error"],[338,40,284,23],[338,41,284,24],[338,49,284,32],[338,51,284,34],[338,107,284,90],[338,108,284,91],[339,10,285,6],[339,17,285,13],[339,22,285,18],[340,8,286,4],[341,6,287,2],[342,6,288,2],[342,13,288,9],[342,18,288,14],[343,4,289,0],[343,5,289,1],[344,4,289,1],[344,20,276,13,"handleAuthError"],[344,35,276,28,"handleAuthError"],[344,36,276,28,"_x6"],[344,39,276,28],[345,6,276,28],[345,13,276,28,"_ref5"],[345,18,276,28],[345,19,276,28,"apply"],[345,24,276,28],[345,31,276,28,"arguments"],[345,40,276,28],[346,4,276,28],[347,2,276,28],[347,5,289,1],[348,0,289,2],[348,3]],"functionMap":{"names":["<global>","customStorage.getItem","customStorage.setItem","customStorage.removeItem","SupabaseClientWithRetry","SupabaseClientWithRetry#constructor","NetInfo.addEventListener$argument_0","SupabaseClientWithRetry#get__supabase","SupabaseClientWithRetry#withRetry","Promise$argument_0","testConnection","supabaseWithRetry.withRetry$argument_0","refreshSession","ensureValidSession","handleAuthError"],"mappings":"AAA;WCY;GDO;WEC;GFM;cGC;GHM;AII;ECM;6BC0B;KDG;GDC;EGG;GHE;EIG;4BC2B,+DD;GJM;CJC;8BUQ;qECsB;KDQ;CVsD;8BYG;CZ+B;kCaG;Cb4B;+BcG;Cda"}},"type":"js/module"}]}