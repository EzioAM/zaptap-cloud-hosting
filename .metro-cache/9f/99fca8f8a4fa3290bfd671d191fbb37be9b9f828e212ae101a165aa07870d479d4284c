{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"./LocalResearchService","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":77,"index":77}}],"key":"05wTOXJfs/0LERL835S1HlHgBz4=","exportNames":["*"]}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":79},"end":{"line":2,"column":39,"index":118}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ImprovedAIResearchService = void 0;\n  var _toConsumableArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n  var _LocalResearchService = require(_dependencyMap[5], \"./LocalResearchService\");\n  var _expoConstants = _interopRequireDefault(require(_dependencyMap[6], \"expo-constants\"));\n  var ImprovedAIResearchService = exports.ImprovedAIResearchService = /*#__PURE__*/function () {\n    function ImprovedAIResearchService() {\n      (0, _classCallCheck2.default)(this, ImprovedAIResearchService);\n      this.isConfigured = false;\n      // Try multiple ways to get API keys from environment\n      this.claudeApiKey = this.getApiKey('claudeApiKey', 'CLAUDE_API_KEY');\n      this.openaiApiKey = this.getApiKey('openaiApiKey', 'OPENAI_API_KEY');\n      this.isConfigured = !!(this.claudeApiKey && this.claudeApiKey.length > 10 || this.openaiApiKey && this.openaiApiKey.length > 10);\n      EventLogger.debug('ImprovedAIResearch', 'üîß AI Research Service initialized:', {\n        hasClaudeKey: !!(this.claudeApiKey && this.claudeApiKey.length > 10),\n        hasOpenAIKey: !!(this.openaiApiKey && this.openaiApiKey.length > 10),\n        isConfigured: this.isConfigured\n      });\n    }\n    return (0, _createClass2.default)(ImprovedAIResearchService, [{\n      key: \"getApiKey\",\n      value: function getApiKey(configKey, envKey) {\n        var _Constants$expoConfig, _Constants$manifest, _Constants$manifest2;\n        // Try multiple sources for API keys\n        return ((_Constants$expoConfig = _expoConstants.default.expoConfig) == null || (_Constants$expoConfig = _Constants$expoConfig.extra) == null ? void 0 : _Constants$expoConfig[configKey]) || ((_Constants$manifest = _expoConstants.default.manifest) == null || (_Constants$manifest = _Constants$manifest.extra) == null ? void 0 : _Constants$manifest[configKey]) || ((_Constants$manifest2 = _expoConstants.default.manifest2) == null || (_Constants$manifest2 = _Constants$manifest2.extra) == null || (_Constants$manifest2 = _Constants$manifest2.expoClient) == null || (_Constants$manifest2 = _Constants$manifest2.extra) == null ? void 0 : _Constants$manifest2[configKey]) || process.env[envKey] || null;\n      }\n\n      /**\r\n       * Main research method with enhanced fallback capabilities\r\n       */\n    }, {\n      key: \"researchAppImprovements\",\n      value: (function () {\n        var _researchAppImprovements = (0, _asyncToGenerator2.default)(function* (query) {\n          var results = [];\n\n          // Normalize query structure\n          var normalizedQuery = typeof query === 'string' ? {\n            topic: query\n          } : query;\n          EventLogger.debug('ImprovedAIResearch', 'üîç Starting research for:', normalizedQuery.topic);\n\n          // Always try enhanced local research first\n          try {\n            var enhancedLocal = yield this.performEnhancedLocalResearch(normalizedQuery);\n            if (enhancedLocal) {\n              results.push(enhancedLocal);\n            }\n          } catch (error) {\n            EventLogger.error('ImprovedAIResearch', 'Enhanced local research failed:', error);\n          }\n\n          // Try API-based research if configured\n          if (this.isConfigured) {\n            try {\n              var apiResults = yield this.performAPIResearch(normalizedQuery);\n              results.push.apply(results, (0, _toConsumableArray2.default)(apiResults));\n            } catch (error) {\n              EventLogger.error('ImprovedAIResearch', 'API research failed:', error);\n            }\n          }\n\n          // Always include basic local research as fallback\n          try {\n            var localResult = this.performBasicLocalResearch(normalizedQuery);\n            if (localResult) {\n              results.push(localResult);\n            }\n          } catch (error) {\n            EventLogger.error('ImprovedAIResearch', 'Basic local research failed:', error);\n          }\n\n          // If no results, generate a helpful response\n          if (results.length === 0) {\n            results.push(this.generateHelpfulFallback(normalizedQuery));\n          }\n          EventLogger.debug('ImprovedAIResearch', `üìä Research complete: ${results.length} results from ${results.map(function (r) {\n            return r.provider;\n          }).join(', ')}`);\n          return results;\n        });\n        function researchAppImprovements(_x) {\n          return _researchAppImprovements.apply(this, arguments);\n        }\n        return researchAppImprovements;\n      }()\n      /**\r\n       * Enhanced local research that combines multiple data sources\r\n       */\n      )\n    }, {\n      key: \"performEnhancedLocalResearch\",\n      value: (function () {\n        var _performEnhancedLocalResearch = (0, _asyncToGenerator2.default)(function* (query) {\n          try {\n            // Get local research data\n            var localTopic = _LocalResearchService.LocalResearchService.getResearch(query.topic);\n            var searchResults = _LocalResearchService.LocalResearchService.searchTopics(query.topic);\n            if (!localTopic && searchResults.length === 0) {\n              return null;\n            }\n\n            // Combine and enhance results\n            var insights = [];\n            var recommendations = [];\n            var codeExamples = [];\n\n            // Add insights from exact match\n            if (localTopic) {\n              insights.push.apply(insights, (0, _toConsumableArray2.default)(localTopic.insights));\n              recommendations.push.apply(recommendations, (0, _toConsumableArray2.default)(localTopic.recommendations));\n              codeExamples.push.apply(codeExamples, (0, _toConsumableArray2.default)(localTopic.codeExamples || []));\n            }\n\n            // Add insights from search results\n            searchResults.forEach(function (result) {\n              // Add unique insights\n              result.insights.forEach(function (insight) {\n                if (!insights.includes(insight)) {\n                  insights.push(insight);\n                }\n              });\n\n              // Add unique recommendations\n              result.recommendations.forEach(function (rec) {\n                if (!recommendations.includes(rec)) {\n                  recommendations.push(rec);\n                }\n              });\n            });\n\n            // Generate additional context-aware recommendations\n            if (query.specificQuestions) {\n              query.specificQuestions.forEach(function (question) {\n                recommendations.push(`Research answer for: ${question}`);\n              });\n            }\n            return {\n              provider: 'enhanced-local',\n              insights: insights.slice(0, 10),\n              recommendations: recommendations.slice(0, 12),\n              codeExamples: codeExamples.slice(0, 5),\n              sources: ['Local Knowledge Base', 'Codebase Analysis', 'Best Practices Database'],\n              confidence: 0.8\n            };\n          } catch (error) {\n            EventLogger.error('ImprovedAIResearch', 'Enhanced local research error:', error);\n            return null;\n          }\n        });\n        function performEnhancedLocalResearch(_x2) {\n          return _performEnhancedLocalResearch.apply(this, arguments);\n        }\n        return performEnhancedLocalResearch;\n      }()\n      /**\r\n       * Perform API-based research (placeholder for actual implementation)\r\n       */\n      )\n    }, {\n      key: \"performAPIResearch\",\n      value: (function () {\n        var _performAPIResearch = (0, _asyncToGenerator2.default)(function* (query) {\n          // In a production app, you would implement actual API calls here\n          // For now, return empty array to indicate API research is not available\n          EventLogger.debug('ImprovedAIResearch', '‚ö†Ô∏è API research not implemented in React Native environment');\n          return [];\n        });\n        function performAPIResearch(_x3) {\n          return _performAPIResearch.apply(this, arguments);\n        }\n        return performAPIResearch;\n      }()\n      /**\r\n       * Basic local research fallback\r\n       */\n      )\n    }, {\n      key: \"performBasicLocalResearch\",\n      value: function performBasicLocalResearch(query) {\n        var _localTopic$codeExamp;\n        var localTopic = _LocalResearchService.LocalResearchService.getResearch(query.topic);\n        if (!localTopic) {\n          return null;\n        }\n        return {\n          provider: 'local',\n          insights: localTopic.insights.slice(0, 5),\n          recommendations: localTopic.recommendations.slice(0, 8),\n          codeExamples: (_localTopic$codeExamp = localTopic.codeExamples) == null ? void 0 : _localTopic$codeExamp.slice(0, 3),\n          sources: localTopic.sources,\n          confidence: 0.7\n        };\n      }\n\n      /**\r\n       * Generate a helpful fallback response\r\n       */\n    }, {\n      key: \"generateHelpfulFallback\",\n      value: function generateHelpfulFallback(query) {\n        var topic = query.topic.toLowerCase();\n\n        // Generate contextual insights based on common patterns\n        var insights = [`Consider implementing ${query.topic} using React Native best practices`, 'Ensure compatibility with both iOS and Android platforms', 'Focus on performance optimization for mobile devices', 'Implement proper error handling and user feedback', 'Consider offline functionality and data persistence'];\n        var recommendations = [`Research ${query.topic} implementation patterns in React Native`, 'Review similar implementations in popular React Native apps', 'Consider using established libraries from the React Native community', 'Implement comprehensive testing for this feature', 'Gather user feedback early in the development process', 'Document the implementation for future maintenance'];\n\n        // Add specific recommendations based on keywords\n        if (topic.includes('performance')) {\n          recommendations.push('Use React.memo and useMemo for optimization', 'Implement lazy loading and code splitting', 'Optimize image loading and caching');\n        }\n        if (topic.includes('security')) {\n          recommendations.push('Implement proper authentication and authorization', 'Use secure storage for sensitive data', 'Validate all user inputs');\n        }\n        if (topic.includes('nfc')) {\n          recommendations.push('Test NFC functionality on various devices', 'Implement fallback options for devices without NFC', 'Handle NFC permissions properly');\n        }\n        var codeExamples = [`// Example ${query.topic} implementation\nimport React from 'react';\nimport { View, Text } from 'react-native';\nimport { EventLogger } from '../../utils/EventLogger';\n\nexport const ${query.topic.replace(/\\s+/g, '')}Component = () => {\n  // Implementation would go here\n  return (\n    <View>\n      <Text>${query.topic}</Text>\n    </View>\n  );\n};`];\n        return {\n          provider: 'enhanced-local',\n          insights: insights,\n          recommendations: recommendations,\n          codeExamples: codeExamples,\n          sources: ['React Native Best Practices', 'Community Guidelines', 'Mobile Development Patterns'],\n          confidence: 0.6\n        };\n      }\n\n      /**\r\n       * Check if AI services are properly configured\r\n       */\n    }, {\n      key: \"isAIConfigured\",\n      value: function isAIConfigured() {\n        return this.isConfigured;\n      }\n\n      /**\r\n       * Get configuration status for debugging\r\n       */\n    }, {\n      key: \"getConfigStatus\",\n      value: function getConfigStatus() {\n        var claudeConfigured = !!(this.claudeApiKey && this.claudeApiKey.length > 10);\n        var openaiConfigured = !!(this.openaiApiKey && this.openaiApiKey.length > 10);\n        return {\n          claudeConfigured: claudeConfigured,\n          openaiConfigured: openaiConfigured,\n          anyConfigured: claudeConfigured || openaiConfigured,\n          recommendation: !claudeConfigured && !openaiConfigured ? 'Configure API keys in your environment variables for enhanced AI research' : 'AI services are configured and ready'\n        };\n      }\n\n      /**\r\n       * Generate smart research topics based on app analysis\r\n       */\n    }, {\n      key: \"generateSmartTopics\",\n      value: (function () {\n        var _generateSmartTopics = (0, _asyncToGenerator2.default)(function* () {\n          // These topics are specifically relevant to the Zaptap app\n          return ['NFC Tag Security Best Practices', 'Offline Automation Execution', 'React Native Performance Optimization', 'Supabase Real-time Features', 'Mobile App Accessibility Standards', 'Cross-platform QR Code Generation', 'Redux Toolkit Advanced Patterns', 'React Navigation Deep Linking', 'Expo Managed Workflow Optimization', 'Mobile App State Persistence', 'Background Task Management', 'Push Notification Strategies'];\n        });\n        function generateSmartTopics() {\n          return _generateSmartTopics.apply(this, arguments);\n        }\n        return generateSmartTopics;\n      }())\n    }]);\n  }();\n});","lineCount":290,"map":[[11,2,1,0],[11,6,1,0,"_LocalResearchService"],[11,27,1,0],[11,30,1,0,"require"],[11,37,1,0],[11,38,1,0,"_dependencyMap"],[11,52,1,0],[12,2,2,0],[12,6,2,0,"_expoConstants"],[12,20,2,0],[12,23,2,0,"_interopRequireDefault"],[12,45,2,0],[12,46,2,0,"require"],[12,53,2,0],[12,54,2,0,"_dependencyMap"],[12,68,2,0],[13,2,2,39],[13,6,21,13,"ImprovedAIResearchService"],[13,31,21,38],[13,34,21,38,"exports"],[13,41,21,38],[13,42,21,38,"ImprovedAIResearchService"],[13,67,21,38],[14,4,26,2],[14,13,26,2,"ImprovedAIResearchService"],[14,39,26,2],[14,41,26,16],[15,6,26,16],[15,10,26,16,"_classCallCheck2"],[15,26,26,16],[15,27,26,16,"default"],[15,34,26,16],[15,42,26,16,"ImprovedAIResearchService"],[15,67,26,16],[16,6,26,16],[16,11,24,10,"isConfigured"],[16,23,24,22],[16,26,24,34],[16,31,24,39],[17,6,27,4],[18,6,28,4],[18,10,28,8],[18,11,28,9,"claudeApiKey"],[18,23,28,21],[18,26,28,24],[18,30,28,28],[18,31,28,29,"getApiKey"],[18,40,28,38],[18,41,28,39],[18,55,28,53],[18,57,28,55],[18,73,28,71],[18,74,28,72],[19,6,29,4],[19,10,29,8],[19,11,29,9,"openaiApiKey"],[19,23,29,21],[19,26,29,24],[19,30,29,28],[19,31,29,29,"getApiKey"],[19,40,29,38],[19,41,29,39],[19,55,29,53],[19,57,29,55],[19,73,29,71],[19,74,29,72],[20,6,31,4],[20,10,31,8],[20,11,31,9,"isConfigured"],[20,23,31,21],[20,26,31,24],[20,27,31,25],[20,29,32,7],[20,33,32,11],[20,34,32,12,"claudeApiKey"],[20,46,32,24],[20,50,32,28],[20,54,32,32],[20,55,32,33,"claudeApiKey"],[20,67,32,45],[20,68,32,46,"length"],[20,74,32,52],[20,77,32,55],[20,79,32,57],[20,83,33,7],[20,87,33,11],[20,88,33,12,"openaiApiKey"],[20,100,33,24],[20,104,33,28],[20,108,33,32],[20,109,33,33,"openaiApiKey"],[20,121,33,45],[20,122,33,46,"length"],[20,128,33,52],[20,131,33,55],[20,133,33,58],[20,134,34,5],[21,6,36,4,"EventLogger"],[21,17,36,15],[21,18,36,16,"debug"],[21,23,36,21],[21,24,36,22],[21,44,36,42],[21,46,36,44],[21,83,36,81],[21,85,36,83],[22,8,37,6,"hasClaudeKey"],[22,20,37,18],[22,22,37,20],[22,23,37,21],[22,25,37,23],[22,29,37,27],[22,30,37,28,"claudeApiKey"],[22,42,37,40],[22,46,37,44],[22,50,37,48],[22,51,37,49,"claudeApiKey"],[22,63,37,61],[22,64,37,62,"length"],[22,70,37,68],[22,73,37,71],[22,75,37,73],[22,76,37,74],[23,8,38,6,"hasOpenAIKey"],[23,20,38,18],[23,22,38,20],[23,23,38,21],[23,25,38,23],[23,29,38,27],[23,30,38,28,"openaiApiKey"],[23,42,38,40],[23,46,38,44],[23,50,38,48],[23,51,38,49,"openaiApiKey"],[23,63,38,61],[23,64,38,62,"length"],[23,70,38,68],[23,73,38,71],[23,75,38,73],[23,76,38,74],[24,8,39,6,"isConfigured"],[24,20,39,18],[24,22,39,20],[24,26,39,24],[24,27,39,25,"isConfigured"],[25,6,40,4],[25,7,40,5],[25,8,40,6],[26,4,41,2],[27,4,41,3],[27,15,41,3,"_createClass2"],[27,28,41,3],[27,29,41,3,"default"],[27,36,41,3],[27,38,41,3,"ImprovedAIResearchService"],[27,63,41,3],[28,6,41,3,"key"],[28,9,41,3],[29,6,41,3,"value"],[29,11,41,3],[29,13,43,2],[29,22,43,10,"getApiKey"],[29,31,43,19,"getApiKey"],[29,32,43,20,"configKey"],[29,41,43,37],[29,43,43,39,"envKey"],[29,49,43,53],[29,51,43,70],[30,8,43,70],[30,12,43,70,"_Constants$expoConfig"],[30,33,43,70],[30,35,43,70,"_Constants$manifest"],[30,54,43,70],[30,56,43,70,"_Constants$manifest2"],[30,76,43,70],[31,8,44,4],[32,8,45,4],[32,15,45,11],[32,17,45,11,"_Constants$expoConfig"],[32,38,45,11],[32,41,45,11,"Constants"],[32,63,45,20],[32,64,45,21,"expoConfig"],[32,74,45,31],[32,88,45,31,"_Constants$expoConfig"],[32,109,45,31],[32,112,45,11,"_Constants$expoConfig"],[32,133,45,11],[32,134,45,33,"extra"],[32,139,45,38],[32,160,45,11,"_Constants$expoConfig"],[32,181,45,11],[32,182,45,41,"configKey"],[32,191,45,50],[32,192,45,51],[32,199,45,51,"_Constants$manifest"],[32,218,45,51],[32,221,46,11,"Constants"],[32,243,46,20],[32,244,46,21,"manifest"],[32,252,46,29],[32,266,46,29,"_Constants$manifest"],[32,285,46,29],[32,288,46,11,"_Constants$manifest"],[32,307,46,11],[32,308,46,31,"extra"],[32,313,46,36],[32,334,46,11,"_Constants$manifest"],[32,353,46,11],[32,354,46,39,"configKey"],[32,363,46,48],[32,364,46,49],[32,371,46,49,"_Constants$manifest2"],[32,391,46,49],[32,394,47,11,"Constants"],[32,416,47,20],[32,417,47,21,"manifest2"],[32,426,47,30],[32,440,47,30,"_Constants$manifest2"],[32,460,47,30],[32,463,47,11,"_Constants$manifest2"],[32,483,47,11],[32,484,47,32,"extra"],[32,489,47,37],[32,503,47,37,"_Constants$manifest2"],[32,523,47,37],[32,526,47,11,"_Constants$manifest2"],[32,546,47,11],[32,547,47,39,"expoClient"],[32,557,47,49],[32,571,47,49,"_Constants$manifest2"],[32,591,47,49],[32,594,47,11,"_Constants$manifest2"],[32,614,47,11],[32,615,47,51,"extra"],[32,620,47,56],[32,641,47,11,"_Constants$manifest2"],[32,661,47,11],[32,662,47,59,"configKey"],[32,671,47,68],[32,672,47,69],[32,677,48,11,"process"],[32,684,48,18],[32,685,48,19,"env"],[32,688,48,22],[32,689,48,23,"envKey"],[32,695,48,29],[32,696,48,30],[32,700,49,11],[32,704,49,15],[33,6,50,2],[35,6,52,2],[36,0,53,0],[37,0,54,0],[38,4,52,2],[39,6,52,2,"key"],[39,9,52,2],[40,6,52,2,"value"],[40,11,52,2],[41,8,52,2],[41,12,52,2,"_researchAppImprovements"],[41,36,52,2],[41,43,52,2,"_asyncToGenerator2"],[41,61,52,2],[41,62,52,2,"default"],[41,69,52,2],[41,71,55,2],[41,82,55,32,"query"],[41,87,55,58],[41,89,55,87],[42,10,56,4],[42,14,56,10,"results"],[42,21,56,35],[42,24,56,38],[42,26,56,40],[44,10,58,4],[45,10,59,4],[45,14,59,10,"normalizedQuery"],[45,29,59,40],[45,32,59,43],[45,39,59,50,"query"],[45,44,59,55],[45,49,59,60],[45,57,59,68],[45,60,60,8],[46,12,60,10,"topic"],[46,17,60,15],[46,19,60,17,"query"],[47,10,60,23],[47,11,60,24],[47,14,61,8,"query"],[47,19,61,13],[48,10,63,4,"EventLogger"],[48,21,63,15],[48,22,63,16,"debug"],[48,27,63,21],[48,28,63,22],[48,48,63,42],[48,50,63,44],[48,77,63,71],[48,79,63,73,"normalizedQuery"],[48,94,63,88],[48,95,63,89,"topic"],[48,100,63,94],[48,101,63,95],[50,10,65,4],[51,10,66,4],[51,14,66,8],[52,12,67,6],[52,16,67,12,"enhancedLocal"],[52,29,67,25],[52,38,67,34],[52,42,67,38],[52,43,67,39,"performEnhancedLocalResearch"],[52,71,67,67],[52,72,67,68,"normalizedQuery"],[52,87,67,83],[52,88,67,84],[53,12,68,6],[53,16,68,10,"enhancedLocal"],[53,29,68,23],[53,31,68,25],[54,14,69,8,"results"],[54,21,69,15],[54,22,69,16,"push"],[54,26,69,20],[54,27,69,21,"enhancedLocal"],[54,40,69,34],[54,41,69,35],[55,12,70,6],[56,10,71,4],[56,11,71,5],[56,12,71,6],[56,19,71,13,"error"],[56,24,71,18],[56,26,71,20],[57,12,72,6,"EventLogger"],[57,23,72,17],[57,24,72,18,"error"],[57,29,72,23],[57,30,72,24],[57,50,72,44],[57,52,72,46],[57,85,72,79],[57,87,72,81,"error"],[57,92,72,95],[57,93,72,96],[58,10,73,4],[60,10,75,4],[61,10,76,4],[61,14,76,8],[61,18,76,12],[61,19,76,13,"isConfigured"],[61,31,76,25],[61,33,76,27],[62,12,77,6],[62,16,77,10],[63,14,78,8],[63,18,78,14,"apiResults"],[63,28,78,24],[63,37,78,33],[63,41,78,37],[63,42,78,38,"performAPIResearch"],[63,60,78,56],[63,61,78,57,"normalizedQuery"],[63,76,78,72],[63,77,78,73],[64,14,79,8,"results"],[64,21,79,15],[64,22,79,16,"push"],[64,26,79,20],[64,27,79,20,"apply"],[64,32,79,20],[64,33,79,8,"results"],[64,40,79,15],[64,46,79,15,"_toConsumableArray2"],[64,65,79,15],[64,66,79,15,"default"],[64,73,79,15],[64,75,79,24,"apiResults"],[64,85,79,34],[64,87,79,35],[65,12,80,6],[65,13,80,7],[65,14,80,8],[65,21,80,15,"error"],[65,26,80,20],[65,28,80,22],[66,14,81,8,"EventLogger"],[66,25,81,19],[66,26,81,20,"error"],[66,31,81,25],[66,32,81,26],[66,52,81,46],[66,54,81,48],[66,76,81,70],[66,78,81,72,"error"],[66,83,81,86],[66,84,81,87],[67,12,82,6],[68,10,83,4],[70,10,85,4],[71,10,86,4],[71,14,86,8],[72,12,87,6],[72,16,87,12,"localResult"],[72,27,87,23],[72,30,87,26],[72,34,87,30],[72,35,87,31,"performBasicLocalResearch"],[72,60,87,56],[72,61,87,57,"normalizedQuery"],[72,76,87,72],[72,77,87,73],[73,12,88,6],[73,16,88,10,"localResult"],[73,27,88,21],[73,29,88,23],[74,14,89,8,"results"],[74,21,89,15],[74,22,89,16,"push"],[74,26,89,20],[74,27,89,21,"localResult"],[74,38,89,32],[74,39,89,33],[75,12,90,6],[76,10,91,4],[76,11,91,5],[76,12,91,6],[76,19,91,13,"error"],[76,24,91,18],[76,26,91,20],[77,12,92,6,"EventLogger"],[77,23,92,17],[77,24,92,18,"error"],[77,29,92,23],[77,30,92,24],[77,50,92,44],[77,52,92,46],[77,82,92,76],[77,84,92,78,"error"],[77,89,92,92],[77,90,92,93],[78,10,93,4],[80,10,95,4],[81,10,96,4],[81,14,96,8,"results"],[81,21,96,15],[81,22,96,16,"length"],[81,28,96,22],[81,33,96,27],[81,34,96,28],[81,36,96,30],[82,12,97,6,"results"],[82,19,97,13],[82,20,97,14,"push"],[82,24,97,18],[82,25,97,19],[82,29,97,23],[82,30,97,24,"generateHelpfulFallback"],[82,53,97,47],[82,54,97,48,"normalizedQuery"],[82,69,97,63],[82,70,97,64],[82,71,97,65],[83,10,98,4],[84,10,100,4,"EventLogger"],[84,21,100,15],[84,22,100,16,"debug"],[84,27,100,21],[84,28,100,22],[84,48,100,42],[84,50,100,44],[84,75,100,69,"results"],[84,82,100,76],[84,83,100,77,"length"],[84,89,100,83],[84,106,100,100,"results"],[84,113,100,107],[84,114,100,108,"map"],[84,117,100,111],[84,118,100,112],[84,128,100,112,"r"],[84,129,100,113],[85,12,100,113],[85,19,100,117,"r"],[85,20,100,118],[85,21,100,119,"provider"],[85,29,100,127],[86,10,100,127],[86,12,100,128],[86,13,100,129,"join"],[86,17,100,133],[86,18,100,134],[86,22,100,138],[86,23,100,139],[86,25,100,141],[86,26,100,142],[87,10,101,4],[87,17,101,11,"results"],[87,24,101,18],[88,8,102,2],[88,9,102,3],[89,8,102,3],[89,17,55,8,"researchAppImprovements"],[89,40,55,31,"researchAppImprovements"],[89,41,55,31,"_x"],[89,43,55,31],[90,10,55,31],[90,17,55,31,"_researchAppImprovements"],[90,41,55,31],[90,42,55,31,"apply"],[90,47,55,31],[90,54,55,31,"arguments"],[90,63,55,31],[91,8,55,31],[92,8,55,31],[92,15,55,8,"researchAppImprovements"],[92,38,55,31],[93,6,55,31],[94,6,104,2],[95,0,105,0],[96,0,106,0],[97,6,104,2],[98,4,104,2],[99,6,104,2,"key"],[99,9,104,2],[100,6,104,2,"value"],[100,11,104,2],[101,8,104,2],[101,12,104,2,"_performEnhancedLocalResearch"],[101,41,104,2],[101,48,104,2,"_asyncToGenerator2"],[101,66,104,2],[101,67,104,2,"default"],[101,74,104,2],[101,76,107,2],[101,87,107,45,"query"],[101,92,107,65],[101,94,107,99],[102,10,108,4],[102,14,108,8],[103,12,109,6],[104,12,110,6],[104,16,110,12,"localTopic"],[104,26,110,22],[104,29,110,25,"LocalResearchService"],[104,71,110,45],[104,72,110,46,"getResearch"],[104,83,110,57],[104,84,110,58,"query"],[104,89,110,63],[104,90,110,64,"topic"],[104,95,110,69],[104,96,110,70],[105,12,111,6],[105,16,111,12,"searchResults"],[105,29,111,25],[105,32,111,28,"LocalResearchService"],[105,74,111,48],[105,75,111,49,"searchTopics"],[105,87,111,61],[105,88,111,62,"query"],[105,93,111,67],[105,94,111,68,"topic"],[105,99,111,73],[105,100,111,74],[106,12,113,6],[106,16,113,10],[106,17,113,11,"localTopic"],[106,27,113,21],[106,31,113,25,"searchResults"],[106,44,113,38],[106,45,113,39,"length"],[106,51,113,45],[106,56,113,50],[106,57,113,51],[106,59,113,53],[107,14,114,8],[107,21,114,15],[107,25,114,19],[108,12,115,6],[110,12,117,6],[111,12,118,6],[111,16,118,12,"insights"],[111,24,118,30],[111,27,118,33],[111,29,118,35],[112,12,119,6],[112,16,119,12,"recommendations"],[112,31,119,37],[112,34,119,40],[112,36,119,42],[113,12,120,6],[113,16,120,12,"codeExamples"],[113,28,120,34],[113,31,120,37],[113,33,120,39],[115,12,122,6],[116,12,123,6],[116,16,123,10,"localTopic"],[116,26,123,20],[116,28,123,22],[117,14,124,8,"insights"],[117,22,124,16],[117,23,124,17,"push"],[117,27,124,21],[117,28,124,21,"apply"],[117,33,124,21],[117,34,124,8,"insights"],[117,42,124,16],[117,48,124,16,"_toConsumableArray2"],[117,67,124,16],[117,68,124,16,"default"],[117,75,124,16],[117,77,124,25,"localTopic"],[117,87,124,35],[117,88,124,36,"insights"],[117,96,124,44],[117,98,124,45],[118,14,125,8,"recommendations"],[118,29,125,23],[118,30,125,24,"push"],[118,34,125,28],[118,35,125,28,"apply"],[118,40,125,28],[118,41,125,8,"recommendations"],[118,56,125,23],[118,62,125,23,"_toConsumableArray2"],[118,81,125,23],[118,82,125,23,"default"],[118,89,125,23],[118,91,125,32,"localTopic"],[118,101,125,42],[118,102,125,43,"recommendations"],[118,117,125,58],[118,119,125,59],[119,14,126,8,"codeExamples"],[119,26,126,20],[119,27,126,21,"push"],[119,31,126,25],[119,32,126,25,"apply"],[119,37,126,25],[119,38,126,8,"codeExamples"],[119,50,126,20],[119,56,126,20,"_toConsumableArray2"],[119,75,126,20],[119,76,126,20,"default"],[119,83,126,20],[119,85,126,30,"localTopic"],[119,95,126,40],[119,96,126,41,"codeExamples"],[119,108,126,53],[119,112,126,57],[119,114,126,59],[119,115,126,60],[119,116,126,61],[120,12,127,6],[122,12,129,6],[123,12,130,6,"searchResults"],[123,25,130,19],[123,26,130,20,"forEach"],[123,33,130,27],[123,34,130,28],[123,44,130,28,"result"],[123,50,130,34],[123,52,130,38],[124,14,131,8],[125,14,132,8,"result"],[125,20,132,14],[125,21,132,15,"insights"],[125,29,132,23],[125,30,132,24,"forEach"],[125,37,132,31],[125,38,132,32],[125,48,132,32,"insight"],[125,55,132,39],[125,57,132,43],[126,16,133,10],[126,20,133,14],[126,21,133,15,"insights"],[126,29,133,23],[126,30,133,24,"includes"],[126,38,133,32],[126,39,133,33,"insight"],[126,46,133,40],[126,47,133,41],[126,49,133,43],[127,18,134,12,"insights"],[127,26,134,20],[127,27,134,21,"push"],[127,31,134,25],[127,32,134,26,"insight"],[127,39,134,33],[127,40,134,34],[128,16,135,10],[129,14,136,8],[129,15,136,9],[129,16,136,10],[131,14,138,8],[132,14,139,8,"result"],[132,20,139,14],[132,21,139,15,"recommendations"],[132,36,139,30],[132,37,139,31,"forEach"],[132,44,139,38],[132,45,139,39],[132,55,139,39,"rec"],[132,58,139,42],[132,60,139,46],[133,16,140,10],[133,20,140,14],[133,21,140,15,"recommendations"],[133,36,140,30],[133,37,140,31,"includes"],[133,45,140,39],[133,46,140,40,"rec"],[133,49,140,43],[133,50,140,44],[133,52,140,46],[134,18,141,12,"recommendations"],[134,33,141,27],[134,34,141,28,"push"],[134,38,141,32],[134,39,141,33,"rec"],[134,42,141,36],[134,43,141,37],[135,16,142,10],[136,14,143,8],[136,15,143,9],[136,16,143,10],[137,12,144,6],[137,13,144,7],[137,14,144,8],[139,12,146,6],[140,12,147,6],[140,16,147,10,"query"],[140,21,147,15],[140,22,147,16,"specificQuestions"],[140,39,147,33],[140,41,147,35],[141,14,148,8,"query"],[141,19,148,13],[141,20,148,14,"specificQuestions"],[141,37,148,31],[141,38,148,32,"forEach"],[141,45,148,39],[141,46,148,40],[141,56,148,40,"question"],[141,64,148,48],[141,66,148,52],[142,16,149,10,"recommendations"],[142,31,149,25],[142,32,149,26,"push"],[142,36,149,30],[142,37,149,31],[142,61,149,55,"question"],[142,69,149,63],[142,71,149,65],[142,72,149,66],[143,14,150,8],[143,15,150,9],[143,16,150,10],[144,12,151,6],[145,12,153,6],[145,19,153,13],[146,14,154,8,"provider"],[146,22,154,16],[146,24,154,18],[146,40,154,34],[147,14,155,8,"insights"],[147,22,155,16],[147,24,155,18,"insights"],[147,32,155,26],[147,33,155,27,"slice"],[147,38,155,32],[147,39,155,33],[147,40,155,34],[147,42,155,36],[147,44,155,38],[147,45,155,39],[148,14,156,8,"recommendations"],[148,29,156,23],[148,31,156,25,"recommendations"],[148,46,156,40],[148,47,156,41,"slice"],[148,52,156,46],[148,53,156,47],[148,54,156,48],[148,56,156,50],[148,58,156,52],[148,59,156,53],[149,14,157,8,"codeExamples"],[149,26,157,20],[149,28,157,22,"codeExamples"],[149,40,157,34],[149,41,157,35,"slice"],[149,46,157,40],[149,47,157,41],[149,48,157,42],[149,50,157,44],[149,51,157,45],[149,52,157,46],[150,14,158,8,"sources"],[150,21,158,15],[150,23,158,17],[150,24,158,18],[150,46,158,40],[150,48,158,42],[150,67,158,61],[150,69,158,63],[150,94,158,88],[150,95,158,89],[151,14,159,8,"confidence"],[151,24,159,18],[151,26,159,20],[152,12,160,6],[152,13,160,7],[153,10,161,4],[153,11,161,5],[153,12,161,6],[153,19,161,13,"error"],[153,24,161,18],[153,26,161,20],[154,12,162,6,"EventLogger"],[154,23,162,17],[154,24,162,18,"error"],[154,29,162,23],[154,30,162,24],[154,50,162,44],[154,52,162,46],[154,84,162,78],[154,86,162,80,"error"],[154,91,162,94],[154,92,162,95],[155,12,163,6],[155,19,163,13],[155,23,163,17],[156,10,164,4],[157,8,165,2],[157,9,165,3],[158,8,165,3],[158,17,107,16,"performEnhancedLocalResearch"],[158,45,107,44,"performEnhancedLocalResearch"],[158,46,107,44,"_x2"],[158,49,107,44],[159,10,107,44],[159,17,107,44,"_performEnhancedLocalResearch"],[159,46,107,44],[159,47,107,44,"apply"],[159,52,107,44],[159,59,107,44,"arguments"],[159,68,107,44],[160,8,107,44],[161,8,107,44],[161,15,107,16,"performEnhancedLocalResearch"],[161,43,107,44],[162,6,107,44],[163,6,167,2],[164,0,168,0],[165,0,169,0],[166,6,167,2],[167,4,167,2],[168,6,167,2,"key"],[168,9,167,2],[169,6,167,2,"value"],[169,11,167,2],[170,8,167,2],[170,12,167,2,"_performAPIResearch"],[170,31,167,2],[170,38,167,2,"_asyncToGenerator2"],[170,56,167,2],[170,57,167,2,"default"],[170,64,167,2],[170,66,170,2],[170,77,170,35,"query"],[170,82,170,55],[170,84,170,84],[171,10,171,4],[172,10,172,4],[173,10,173,4,"EventLogger"],[173,21,173,15],[173,22,173,16,"debug"],[173,27,173,21],[173,28,173,22],[173,48,173,42],[173,50,173,44],[173,111,173,105],[173,112,173,106],[174,10,174,4],[174,17,174,11],[174,19,174,13],[175,8,175,2],[175,9,175,3],[176,8,175,3],[176,17,170,16,"performAPIResearch"],[176,35,170,34,"performAPIResearch"],[176,36,170,34,"_x3"],[176,39,170,34],[177,10,170,34],[177,17,170,34,"_performAPIResearch"],[177,36,170,34],[177,37,170,34,"apply"],[177,42,170,34],[177,49,170,34,"arguments"],[177,58,170,34],[178,8,170,34],[179,8,170,34],[179,15,170,16,"performAPIResearch"],[179,33,170,34],[180,6,170,34],[181,6,177,2],[182,0,178,0],[183,0,179,0],[184,6,177,2],[185,4,177,2],[186,6,177,2,"key"],[186,9,177,2],[187,6,177,2,"value"],[187,11,177,2],[187,13,180,2],[187,22,180,10,"performBasicLocalResearch"],[187,47,180,35,"performBasicLocalResearch"],[187,48,180,36,"query"],[187,53,180,56],[187,55,180,81],[188,8,180,81],[188,12,180,81,"_localTopic$codeExamp"],[188,33,180,81],[189,8,181,4],[189,12,181,10,"localTopic"],[189,22,181,20],[189,25,181,23,"LocalResearchService"],[189,67,181,43],[189,68,181,44,"getResearch"],[189,79,181,55],[189,80,181,56,"query"],[189,85,181,61],[189,86,181,62,"topic"],[189,91,181,67],[189,92,181,68],[190,8,183,4],[190,12,183,8],[190,13,183,9,"localTopic"],[190,23,183,19],[190,25,183,21],[191,10,184,6],[191,17,184,13],[191,21,184,17],[192,8,185,4],[193,8,187,4],[193,15,187,11],[194,10,188,6,"provider"],[194,18,188,14],[194,20,188,16],[194,27,188,23],[195,10,189,6,"insights"],[195,18,189,14],[195,20,189,16,"localTopic"],[195,30,189,26],[195,31,189,27,"insights"],[195,39,189,35],[195,40,189,36,"slice"],[195,45,189,41],[195,46,189,42],[195,47,189,43],[195,49,189,45],[195,50,189,46],[195,51,189,47],[196,10,190,6,"recommendations"],[196,25,190,21],[196,27,190,23,"localTopic"],[196,37,190,33],[196,38,190,34,"recommendations"],[196,53,190,49],[196,54,190,50,"slice"],[196,59,190,55],[196,60,190,56],[196,61,190,57],[196,63,190,59],[196,64,190,60],[196,65,190,61],[197,10,191,6,"codeExamples"],[197,22,191,18],[197,25,191,18,"_localTopic$codeExamp"],[197,46,191,18],[197,49,191,20,"localTopic"],[197,59,191,30],[197,60,191,31,"codeExamples"],[197,72,191,43],[197,93,191,20,"_localTopic$codeExamp"],[197,114,191,20],[197,115,191,45,"slice"],[197,120,191,50],[197,121,191,51],[197,122,191,52],[197,124,191,54],[197,125,191,55],[197,126,191,56],[198,10,192,6,"sources"],[198,17,192,13],[198,19,192,15,"localTopic"],[198,29,192,25],[198,30,192,26,"sources"],[198,37,192,33],[199,10,193,6,"confidence"],[199,20,193,16],[199,22,193,18],[200,8,194,4],[200,9,194,5],[201,6,195,2],[203,6,197,2],[204,0,198,0],[205,0,199,0],[206,4,197,2],[207,6,197,2,"key"],[207,9,197,2],[208,6,197,2,"value"],[208,11,197,2],[208,13,200,2],[208,22,200,10,"generateHelpfulFallback"],[208,45,200,33,"generateHelpfulFallback"],[208,46,200,34,"query"],[208,51,200,54],[208,53,200,72],[209,8,201,4],[209,12,201,10,"topic"],[209,17,201,15],[209,20,201,18,"query"],[209,25,201,23],[209,26,201,24,"topic"],[209,31,201,29],[209,32,201,30,"toLowerCase"],[209,43,201,41],[209,44,201,42],[209,45,201,43],[211,8,203,4],[212,8,204,4],[212,12,204,10,"insights"],[212,20,204,28],[212,23,204,31],[212,24,205,6],[212,49,205,31,"query"],[212,54,205,36],[212,55,205,37,"topic"],[212,60,205,42],[212,96,205,78],[212,98,206,6],[212,156,206,64],[212,158,207,6],[212,212,207,60],[212,214,208,6],[212,265,208,57],[212,267,209,6],[212,320,209,59],[212,321,210,5],[213,8,212,4],[213,12,212,10,"recommendations"],[213,27,212,35],[213,30,212,38],[213,31,213,6],[213,43,213,18,"query"],[213,48,213,23],[213,49,213,24,"topic"],[213,54,213,29],[213,96,213,71],[213,98,214,6],[213,159,214,67],[213,161,215,6],[213,231,215,76],[213,233,216,6],[213,283,216,56],[213,285,217,6],[213,340,217,61],[213,342,218,6],[213,394,218,58],[213,395,219,5],[215,8,221,4],[216,8,222,4],[216,12,222,8,"topic"],[216,17,222,13],[216,18,222,14,"includes"],[216,26,222,22],[216,27,222,23],[216,40,222,36],[216,41,222,37],[216,43,222,39],[217,10,223,6,"recommendations"],[217,25,223,21],[217,26,223,22,"push"],[217,30,223,26],[217,31,224,8],[217,76,224,53],[217,78,225,8],[217,121,225,51],[217,123,226,8],[217,159,227,6],[217,160,227,7],[218,8,228,4],[219,8,230,4],[219,12,230,8,"topic"],[219,17,230,13],[219,18,230,14,"includes"],[219,26,230,22],[219,27,230,23],[219,37,230,33],[219,38,230,34],[219,40,230,36],[220,10,231,6,"recommendations"],[220,25,231,21],[220,26,231,22,"push"],[220,30,231,26],[220,31,232,8],[220,82,232,59],[220,84,233,8],[220,123,233,47],[220,125,234,8],[220,151,235,6],[220,152,235,7],[221,8,236,4],[222,8,238,4],[222,12,238,8,"topic"],[222,17,238,13],[222,18,238,14,"includes"],[222,26,238,22],[222,27,238,23],[222,32,238,28],[222,33,238,29],[222,35,238,31],[223,10,239,6,"recommendations"],[223,25,239,21],[223,26,239,22,"push"],[223,30,239,26],[223,31,240,8],[223,74,240,51],[223,76,241,8],[223,128,241,60],[223,130,242,8],[223,163,243,6],[223,164,243,7],[224,8,244,4],[225,8,246,4],[225,12,246,10,"codeExamples"],[225,24,246,22],[225,27,246,25],[225,28,247,6],[225,42,247,20,"query"],[225,47,247,25],[225,48,247,26,"topic"],[225,53,247,31],[226,0,248,0],[227,0,249,0],[228,0,250,0],[229,0,251,0],[230,0,252,0],[230,15,252,15,"query"],[230,20,252,20],[230,21,252,21,"topic"],[230,26,252,26],[230,27,252,27,"replace"],[230,34,252,34],[230,35,252,35],[230,41,252,41],[230,43,252,43],[230,45,252,45],[230,46,252,46],[231,0,253,0],[232,0,254,0],[233,0,255,0],[234,0,256,0],[234,14,256,14,"query"],[234,19,256,19],[234,20,256,20,"topic"],[234,25,256,25],[235,0,257,0],[236,0,258,0],[237,0,259,0],[237,3,259,3],[237,4,260,5],[238,8,262,4],[238,15,262,11],[239,10,263,6,"provider"],[239,18,263,14],[239,20,263,16],[239,36,263,32],[240,10,264,6,"insights"],[240,18,264,14],[240,20,264,6,"insights"],[240,28,264,14],[241,10,265,6,"recommendations"],[241,25,265,21],[241,27,265,6,"recommendations"],[241,42,265,21],[242,10,266,6,"codeExamples"],[242,22,266,18],[242,24,266,6,"codeExamples"],[242,36,266,18],[243,10,267,6,"sources"],[243,17,267,13],[243,19,267,15],[243,20,267,16],[243,49,267,45],[243,51,267,47],[243,73,267,69],[243,75,267,71],[243,104,267,100],[243,105,267,101],[244,10,268,6,"confidence"],[244,20,268,16],[244,22,268,18],[245,8,269,4],[245,9,269,5],[246,6,270,2],[248,6,272,2],[249,0,273,0],[250,0,274,0],[251,4,272,2],[252,6,272,2,"key"],[252,9,272,2],[253,6,272,2,"value"],[253,11,272,2],[253,13,275,2],[253,22,275,2,"isAIConfigured"],[253,36,275,16,"isAIConfigured"],[253,37,275,16],[253,39,275,28],[254,8,276,4],[254,15,276,11],[254,19,276,15],[254,20,276,16,"isConfigured"],[254,32,276,28],[255,6,277,2],[257,6,279,2],[258,0,280,0],[259,0,281,0],[260,4,279,2],[261,6,279,2,"key"],[261,9,279,2],[262,6,279,2,"value"],[262,11,279,2],[262,13,282,2],[262,22,282,2,"getConfigStatus"],[262,37,282,17,"getConfigStatus"],[262,38,282,17],[262,40,287,4],[263,8,288,4],[263,12,288,10,"claudeConfigured"],[263,28,288,26],[263,31,288,29],[263,32,288,30],[263,34,288,32],[263,38,288,36],[263,39,288,37,"claudeApiKey"],[263,51,288,49],[263,55,288,53],[263,59,288,57],[263,60,288,58,"claudeApiKey"],[263,72,288,70],[263,73,288,71,"length"],[263,79,288,77],[263,82,288,80],[263,84,288,82],[263,85,288,83],[264,8,289,4],[264,12,289,10,"openaiConfigured"],[264,28,289,26],[264,31,289,29],[264,32,289,30],[264,34,289,32],[264,38,289,36],[264,39,289,37,"openaiApiKey"],[264,51,289,49],[264,55,289,53],[264,59,289,57],[264,60,289,58,"openaiApiKey"],[264,72,289,70],[264,73,289,71,"length"],[264,79,289,77],[264,82,289,80],[264,84,289,82],[264,85,289,83],[265,8,291,4],[265,15,291,11],[266,10,292,6,"claudeConfigured"],[266,26,292,22],[266,28,292,6,"claudeConfigured"],[266,44,292,22],[267,10,293,6,"openaiConfigured"],[267,26,293,22],[267,28,293,6,"openaiConfigured"],[267,44,293,22],[268,10,294,6,"anyConfigured"],[268,23,294,19],[268,25,294,21,"claudeConfigured"],[268,41,294,37],[268,45,294,41,"openaiConfigured"],[268,61,294,57],[269,10,295,6,"recommendation"],[269,24,295,20],[269,26,295,22],[269,27,295,23,"claudeConfigured"],[269,43,295,39],[269,47,295,43],[269,48,295,44,"openaiConfigured"],[269,64,295,60],[269,67,296,10],[269,142,296,85],[269,145,297,10],[270,8,298,4],[270,9,298,5],[271,6,299,2],[273,6,301,2],[274,0,302,0],[275,0,303,0],[276,4,301,2],[277,6,301,2,"key"],[277,9,301,2],[278,6,301,2,"value"],[278,11,301,2],[279,8,301,2],[279,12,301,2,"_generateSmartTopics"],[279,32,301,2],[279,39,301,2,"_asyncToGenerator2"],[279,57,301,2],[279,58,301,2,"default"],[279,65,301,2],[279,67,304,2],[279,80,304,49],[280,10,305,4],[281,10,306,4],[281,17,306,11],[281,18,307,6],[281,51,307,39],[281,53,308,6],[281,83,308,36],[281,85,309,6],[281,124,309,45],[281,126,310,6],[281,155,310,35],[281,157,311,6],[281,193,311,42],[281,195,312,6],[281,230,312,41],[281,232,313,6],[281,265,313,39],[281,267,314,6],[281,298,314,37],[281,300,315,6],[281,336,315,42],[281,338,316,6],[281,368,316,36],[281,370,317,6],[281,398,317,34],[281,400,318,6],[281,430,318,36],[281,431,319,5],[282,8,320,2],[282,9,320,3],[283,8,320,3],[283,17,304,8,"generateSmartTopics"],[283,36,304,27,"generateSmartTopics"],[283,37,304,27],[284,10,304,27],[284,17,304,27,"_generateSmartTopics"],[284,37,304,27],[284,38,304,27,"apply"],[284,43,304,27],[284,50,304,27,"arguments"],[284,59,304,27],[285,8,304,27],[286,8,304,27],[286,15,304,8,"generateSmartTopics"],[286,34,304,27],[287,6,304,27],[288,4,304,27],[289,2,304,27],[290,0,304,27],[290,3]],"functionMap":{"names":["<global>","ImprovedAIResearchService","constructor","getApiKey","researchAppImprovements","results.map$argument_0","performEnhancedLocalResearch","searchResults.forEach$argument_0","result.insights.forEach$argument_0","result.recommendations.forEach$argument_0","query.specificQuestions.forEach$argument_0","performAPIResearch","performBasicLocalResearch","generateHelpfulFallback","isAIConfigured","getConfigStatus","generateSmartTopics"],"mappings":"AAA;OCoB;ECK;GDe;EEE;GFO;EGK;gHC6C,eD;GHE;EKK;4BCuB;gCCE;SDI;uCEG;SFI;ODC;wCII;SJE;GLe;EUK;GVK;EWK;GXe;EYK;GZsE;EaK;GbE;EcK;GdiB;EeK;GfgB"}},"type":"js/module"}]}