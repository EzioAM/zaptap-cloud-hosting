{"dependencies":[{"name":"./ndef","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":30,"index":30}}],"key":"hASpwHebFS0sv1l8ZFJIgGyNCH8=","exportNames":["*"]}},{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":18,"index":50},"end":{"line":2,"column":40,"index":72}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var ndef = require(_dependencyMap[0], \"./ndef\");\n  var constants = require(_dependencyMap[1], \"./constants\");\n\n  // Convert NDEF records and messages to strings\n  // This works OK for demos, but real code proably needs\n  // a custom implementation. It would be nice to make\n  // smarter record objects that can print themselves\n  var stringifier = {\n    stringify: function stringify(data, separator) {\n      if (Array.isArray(data)) {\n        if (typeof data[0] === 'number') {\n          // guessing this message bytes\n          data = ndef.decodeMessage(data);\n        }\n        return stringifier.printRecords(data, separator);\n      } else {\n        return stringifier.printRecord(data, separator);\n      }\n    },\n    // @message - NDEF Message (array of NDEF Records)\n    // @separator - line separator, optional, defaults to \\n\n    // @returns string with NDEF Message\n    printRecords: function printRecords(message, separator) {\n      if (!separator) {\n        separator = '\\n';\n      }\n      var result = '';\n\n      // Print out the payload for each record\n      message.forEach(function (record) {\n        result += stringifier.printRecord(record, separator);\n        result += separator;\n      });\n      return result.slice(0, -1 * separator.length);\n    },\n    // @record - NDEF Record\n    // @separator - line separator, optional, defaults to \\n\n    // @returns string with NDEF Record\n    printRecord: function printRecord(record, separator) {\n      var result = '';\n      if (!separator) {\n        separator = '\\n';\n      }\n      switch (record.tnf) {\n        case constants.TNF_EMPTY:\n          result += 'Empty Record';\n          result += separator;\n          break;\n        case constants.TNF_WELL_KNOWN:\n          result += stringifier.printWellKnown(record, separator);\n          break;\n        case constants.TNF_MIME_MEDIA:\n          result += 'MIME Media';\n          result += separator;\n          result += s(record.type);\n          result += separator;\n          result += s(record.payload); // might be binary\n          break;\n        case constants.TNF_ABSOLUTE_URI:\n          result += 'Absolute URI';\n          result += separator;\n          result += s(record.type); // the URI is the type\n          result += separator;\n          result += s(record.payload); // might be binary\n          break;\n        case constants.TNF_EXTERNAL_TYPE:\n          // AAR contains strings, other types could\n          // contain binary data\n          result += 'External';\n          result += separator;\n          result += s(record.type);\n          result += separator;\n          result += s(record.payload);\n          break;\n        default:\n          result += s(\"Can't process TNF \" + record.tnf);\n      }\n      result += separator;\n      return result;\n    },\n    printWellKnown: function printWellKnown(record, separator) {\n      var result = '';\n      if (record.tnf !== constants.TNF_WELL_KNOWN) {\n        return 'ERROR expecting TNF Well Known';\n      }\n      switch (record.type) {\n        case constants.RTD_TEXT:\n          result += 'Text Record';\n          result += separator;\n          result += ndef.text.decodePayload(record.payload);\n          break;\n        case constants.RTD_URI:\n          result += 'URI Record';\n          result += separator;\n          result += ndef.uri.decodePayload(record.payload);\n          break;\n        case constants.RTD_SMART_POSTER:\n          result += 'Smart Poster';\n          result += separator;\n          // the payload of a smartposter is a NDEF message\n          result += stringifier.printRecords(ndef.decodeMessage(record.payload));\n          break;\n        default:\n          // attempt to display other types\n          result += record.type + ' Record';\n          result += separator;\n          result += s(record.payload);\n      }\n      return result;\n    },\n    tnfToString: function tnfToString(tnf) {\n      var value = tnf;\n      switch (tnf) {\n        case constants.TNF_EMPTY:\n          value = 'Empty';\n          break;\n        case constants.TNF_WELL_KNOWN:\n          value = 'Well Known';\n          break;\n        case constants.TNF_MIME_MEDIA:\n          value = 'Mime Media';\n          break;\n        case constants.TNF_ABSOLUTE_URI:\n          value = 'Absolute URI';\n          break;\n        case constants.TNF_EXTERNAL_TYPE:\n          value = 'External';\n          break;\n        case constants.TNF_UNKNOWN:\n          value = 'Unknown';\n          break;\n        case constants.TNF_UNCHANGED:\n          value = 'Unchanged';\n          break;\n        case constants.TNF_RESERVED:\n          value = 'Reserved';\n          break;\n      }\n      return value;\n    }\n  };\n  function s(bytes) {\n    if (typeof bytes === 'string') {\n      return bytes;\n    }\n    return bytes.reduce(function (acc, byte) {\n      return acc + String.fromCharCode(byte);\n    }, '');\n  }\n  module.exports = stringifier;\n});","lineCount":152,"map":[[2,2,1,0],[2,6,1,6,"ndef"],[2,10,1,10],[2,13,1,13,"require"],[2,20,1,20],[2,21,1,20,"_dependencyMap"],[2,35,1,20],[2,48,1,29],[2,49,1,30],[3,2,2,0],[3,6,2,6,"constants"],[3,15,2,15],[3,18,2,18,"require"],[3,25,2,25],[3,26,2,25,"_dependencyMap"],[3,40,2,25],[3,58,2,39],[3,59,2,40],[5,2,4,0],[6,2,5,0],[7,2,6,0],[8,2,7,0],[9,2,8,0],[9,6,8,4,"stringifier"],[9,17,8,15],[9,20,8,18],[10,4,9,2,"stringify"],[10,13,9,11],[10,15,9,13],[10,24,9,2,"stringify"],[10,33,9,11,"stringify"],[10,34,9,23,"data"],[10,38,9,27],[10,40,9,29,"separator"],[10,49,9,38],[10,51,9,40],[11,6,10,4],[11,10,10,8,"Array"],[11,15,10,13],[11,16,10,14,"isArray"],[11,23,10,21],[11,24,10,22,"data"],[11,28,10,26],[11,29,10,27],[11,31,10,29],[12,8,11,6],[12,12,11,10],[12,19,11,17,"data"],[12,23,11,21],[12,24,11,22],[12,25,11,23],[12,26,11,24],[12,31,11,29],[12,39,11,37],[12,41,11,39],[13,10,12,8],[14,10,13,8,"data"],[14,14,13,12],[14,17,13,15,"ndef"],[14,21,13,19],[14,22,13,20,"decodeMessage"],[14,35,13,33],[14,36,13,34,"data"],[14,40,13,38],[14,41,13,39],[15,8,14,6],[16,8,16,6],[16,15,16,13,"stringifier"],[16,26,16,24],[16,27,16,25,"printRecords"],[16,39,16,37],[16,40,16,38,"data"],[16,44,16,42],[16,46,16,44,"separator"],[16,55,16,53],[16,56,16,54],[17,6,17,4],[17,7,17,5],[17,13,17,11],[18,8,18,6],[18,15,18,13,"stringifier"],[18,26,18,24],[18,27,18,25,"printRecord"],[18,38,18,36],[18,39,18,37,"data"],[18,43,18,41],[18,45,18,43,"separator"],[18,54,18,52],[18,55,18,53],[19,6,19,4],[20,4,20,2],[20,5,20,3],[21,4,22,2],[22,4,23,2],[23,4,24,2],[24,4,25,2,"printRecords"],[24,16,25,14],[24,18,25,16],[24,27,25,2,"printRecords"],[24,39,25,14,"printRecords"],[24,40,25,26,"message"],[24,47,25,33],[24,49,25,35,"separator"],[24,58,25,44],[24,60,25,46],[25,6,26,4],[25,10,26,8],[25,11,26,9,"separator"],[25,20,26,18],[25,22,26,20],[26,8,27,6,"separator"],[26,17,27,15],[26,20,27,18],[26,24,27,22],[27,6,28,4],[28,6,29,4],[28,10,29,8,"result"],[28,16,29,14],[28,19,29,17],[28,21,29,19],[30,6,31,4],[31,6,32,4,"message"],[31,13,32,11],[31,14,32,12,"forEach"],[31,21,32,19],[31,22,32,20],[31,32,32,30,"record"],[31,38,32,36],[31,40,32,38],[32,8,33,6,"result"],[32,14,33,12],[32,18,33,16,"stringifier"],[32,29,33,27],[32,30,33,28,"printRecord"],[32,41,33,39],[32,42,33,40,"record"],[32,48,33,46],[32,50,33,48,"separator"],[32,59,33,57],[32,60,33,58],[33,8,34,6,"result"],[33,14,34,12],[33,18,34,16,"separator"],[33,27,34,25],[34,6,35,4],[34,7,35,5],[34,8,35,6],[35,6,37,4],[35,13,37,11,"result"],[35,19,37,17],[35,20,37,18,"slice"],[35,25,37,23],[35,26,37,24],[35,27,37,25],[35,29,37,27],[35,30,37,28],[35,31,37,29],[35,34,37,32,"separator"],[35,43,37,41],[35,44,37,42,"length"],[35,50,37,48],[35,51,37,49],[36,4,38,2],[36,5,38,3],[37,4,40,2],[38,4,41,2],[39,4,42,2],[40,4,43,2,"printRecord"],[40,15,43,13],[40,17,43,15],[40,26,43,2,"printRecord"],[40,37,43,13,"printRecord"],[40,38,43,25,"record"],[40,44,43,31],[40,46,43,33,"separator"],[40,55,43,42],[40,57,43,44],[41,6,44,4],[41,10,44,8,"result"],[41,16,44,14],[41,19,44,17],[41,21,44,19],[42,6,46,4],[42,10,46,8],[42,11,46,9,"separator"],[42,20,46,18],[42,22,46,20],[43,8,47,6,"separator"],[43,17,47,15],[43,20,47,18],[43,24,47,22],[44,6,48,4],[45,6,50,4],[45,14,50,12,"record"],[45,20,50,18],[45,21,50,19,"tnf"],[45,24,50,22],[46,8,51,6],[46,13,51,11,"constants"],[46,22,51,20],[46,23,51,21,"TNF_EMPTY"],[46,32,51,30],[47,10,52,8,"result"],[47,16,52,14],[47,20,52,18],[47,34,52,32],[48,10,53,8,"result"],[48,16,53,14],[48,20,53,18,"separator"],[48,29,53,27],[49,10,54,8],[50,8,55,6],[50,13,55,11,"constants"],[50,22,55,20],[50,23,55,21,"TNF_WELL_KNOWN"],[50,37,55,35],[51,10,56,8,"result"],[51,16,56,14],[51,20,56,18,"stringifier"],[51,31,56,29],[51,32,56,30,"printWellKnown"],[51,46,56,44],[51,47,56,45,"record"],[51,53,56,51],[51,55,56,53,"separator"],[51,64,56,62],[51,65,56,63],[52,10,57,8],[53,8,58,6],[53,13,58,11,"constants"],[53,22,58,20],[53,23,58,21,"TNF_MIME_MEDIA"],[53,37,58,35],[54,10,59,8,"result"],[54,16,59,14],[54,20,59,18],[54,32,59,30],[55,10,60,8,"result"],[55,16,60,14],[55,20,60,18,"separator"],[55,29,60,27],[56,10,61,8,"result"],[56,16,61,14],[56,20,61,18,"s"],[56,21,61,19],[56,22,61,20,"record"],[56,28,61,26],[56,29,61,27,"type"],[56,33,61,31],[56,34,61,32],[57,10,62,8,"result"],[57,16,62,14],[57,20,62,18,"separator"],[57,29,62,27],[58,10,63,8,"result"],[58,16,63,14],[58,20,63,18,"s"],[58,21,63,19],[58,22,63,20,"record"],[58,28,63,26],[58,29,63,27,"payload"],[58,36,63,34],[58,37,63,35],[58,38,63,36],[58,39,63,37],[59,10,64,8],[60,8,65,6],[60,13,65,11,"constants"],[60,22,65,20],[60,23,65,21,"TNF_ABSOLUTE_URI"],[60,39,65,37],[61,10,66,8,"result"],[61,16,66,14],[61,20,66,18],[61,34,66,32],[62,10,67,8,"result"],[62,16,67,14],[62,20,67,18,"separator"],[62,29,67,27],[63,10,68,8,"result"],[63,16,68,14],[63,20,68,18,"s"],[63,21,68,19],[63,22,68,20,"record"],[63,28,68,26],[63,29,68,27,"type"],[63,33,68,31],[63,34,68,32],[63,35,68,33],[63,36,68,34],[64,10,69,8,"result"],[64,16,69,14],[64,20,69,18,"separator"],[64,29,69,27],[65,10,70,8,"result"],[65,16,70,14],[65,20,70,18,"s"],[65,21,70,19],[65,22,70,20,"record"],[65,28,70,26],[65,29,70,27,"payload"],[65,36,70,34],[65,37,70,35],[65,38,70,36],[65,39,70,37],[66,10,71,8],[67,8,72,6],[67,13,72,11,"constants"],[67,22,72,20],[67,23,72,21,"TNF_EXTERNAL_TYPE"],[67,40,72,38],[68,10,73,8],[69,10,74,8],[70,10,75,8,"result"],[70,16,75,14],[70,20,75,18],[70,30,75,28],[71,10,76,8,"result"],[71,16,76,14],[71,20,76,18,"separator"],[71,29,76,27],[72,10,77,8,"result"],[72,16,77,14],[72,20,77,18,"s"],[72,21,77,19],[72,22,77,20,"record"],[72,28,77,26],[72,29,77,27,"type"],[72,33,77,31],[72,34,77,32],[73,10,78,8,"result"],[73,16,78,14],[73,20,78,18,"separator"],[73,29,78,27],[74,10,79,8,"result"],[74,16,79,14],[74,20,79,18,"s"],[74,21,79,19],[74,22,79,20,"record"],[74,28,79,26],[74,29,79,27,"payload"],[74,36,79,34],[74,37,79,35],[75,10,80,8],[76,8,81,6],[77,10,82,8,"result"],[77,16,82,14],[77,20,82,18,"s"],[77,21,82,19],[77,22,82,20],[77,42,82,40],[77,45,82,43,"record"],[77,51,82,49],[77,52,82,50,"tnf"],[77,55,82,53],[77,56,82,54],[78,6,83,4],[79,6,85,4,"result"],[79,12,85,10],[79,16,85,14,"separator"],[79,25,85,23],[80,6,86,4],[80,13,86,11,"result"],[80,19,86,17],[81,4,87,2],[81,5,87,3],[82,4,89,2,"printWellKnown"],[82,18,89,16],[82,20,89,18],[82,29,89,2,"printWellKnown"],[82,43,89,16,"printWellKnown"],[82,44,89,28,"record"],[82,50,89,34],[82,52,89,36,"separator"],[82,61,89,45],[82,63,89,47],[83,6,90,4],[83,10,90,8,"result"],[83,16,90,14],[83,19,90,17],[83,21,90,19],[84,6,92,4],[84,10,92,8,"record"],[84,16,92,14],[84,17,92,15,"tnf"],[84,20,92,18],[84,25,92,23,"constants"],[84,34,92,32],[84,35,92,33,"TNF_WELL_KNOWN"],[84,49,92,47],[84,51,92,49],[85,8,93,6],[85,15,93,13],[85,47,93,45],[86,6,94,4],[87,6,96,4],[87,14,96,12,"record"],[87,20,96,18],[87,21,96,19,"type"],[87,25,96,23],[88,8,97,6],[88,13,97,11,"constants"],[88,22,97,20],[88,23,97,21,"RTD_TEXT"],[88,31,97,29],[89,10,98,8,"result"],[89,16,98,14],[89,20,98,18],[89,33,98,31],[90,10,99,8,"result"],[90,16,99,14],[90,20,99,18,"separator"],[90,29,99,27],[91,10,100,8,"result"],[91,16,100,14],[91,20,100,18,"ndef"],[91,24,100,22],[91,25,100,23,"text"],[91,29,100,27],[91,30,100,28,"decodePayload"],[91,43,100,41],[91,44,100,42,"record"],[91,50,100,48],[91,51,100,49,"payload"],[91,58,100,56],[91,59,100,57],[92,10,101,8],[93,8,102,6],[93,13,102,11,"constants"],[93,22,102,20],[93,23,102,21,"RTD_URI"],[93,30,102,28],[94,10,103,8,"result"],[94,16,103,14],[94,20,103,18],[94,32,103,30],[95,10,104,8,"result"],[95,16,104,14],[95,20,104,18,"separator"],[95,29,104,27],[96,10,105,8,"result"],[96,16,105,14],[96,20,105,18,"ndef"],[96,24,105,22],[96,25,105,23,"uri"],[96,28,105,26],[96,29,105,27,"decodePayload"],[96,42,105,40],[96,43,105,41,"record"],[96,49,105,47],[96,50,105,48,"payload"],[96,57,105,55],[96,58,105,56],[97,10,106,8],[98,8,107,6],[98,13,107,11,"constants"],[98,22,107,20],[98,23,107,21,"RTD_SMART_POSTER"],[98,39,107,37],[99,10,108,8,"result"],[99,16,108,14],[99,20,108,18],[99,34,108,32],[100,10,109,8,"result"],[100,16,109,14],[100,20,109,18,"separator"],[100,29,109,27],[101,10,110,8],[102,10,111,8,"result"],[102,16,111,14],[102,20,111,18,"stringifier"],[102,31,111,29],[102,32,111,30,"printRecords"],[102,44,111,42],[102,45,111,43,"ndef"],[102,49,111,47],[102,50,111,48,"decodeMessage"],[102,63,111,61],[102,64,111,62,"record"],[102,70,111,68],[102,71,111,69,"payload"],[102,78,111,76],[102,79,111,77],[102,80,111,78],[103,10,112,8],[104,8,113,6],[105,10,114,8],[106,10,115,8,"result"],[106,16,115,14],[106,20,115,18,"record"],[106,26,115,24],[106,27,115,25,"type"],[106,31,115,29],[106,34,115,32],[106,43,115,41],[107,10,116,8,"result"],[107,16,116,14],[107,20,116,18,"separator"],[107,29,116,27],[108,10,117,8,"result"],[108,16,117,14],[108,20,117,18,"s"],[108,21,117,19],[108,22,117,20,"record"],[108,28,117,26],[108,29,117,27,"payload"],[108,36,117,34],[108,37,117,35],[109,6,118,4],[110,6,120,4],[110,13,120,11,"result"],[110,19,120,17],[111,4,121,2],[111,5,121,3],[112,4,123,2,"tnfToString"],[112,15,123,13],[112,17,123,15],[112,26,123,2,"tnfToString"],[112,37,123,13,"tnfToString"],[112,38,123,25,"tnf"],[112,41,123,28],[112,43,123,30],[113,6,124,4],[113,10,124,8,"value"],[113,15,124,13],[113,18,124,16,"tnf"],[113,21,124,19],[114,6,126,4],[114,14,126,12,"tnf"],[114,17,126,15],[115,8,127,6],[115,13,127,11,"constants"],[115,22,127,20],[115,23,127,21,"TNF_EMPTY"],[115,32,127,30],[116,10,128,8,"value"],[116,15,128,13],[116,18,128,16],[116,25,128,23],[117,10,129,8],[118,8,130,6],[118,13,130,11,"constants"],[118,22,130,20],[118,23,130,21,"TNF_WELL_KNOWN"],[118,37,130,35],[119,10,131,8,"value"],[119,15,131,13],[119,18,131,16],[119,30,131,28],[120,10,132,8],[121,8,133,6],[121,13,133,11,"constants"],[121,22,133,20],[121,23,133,21,"TNF_MIME_MEDIA"],[121,37,133,35],[122,10,134,8,"value"],[122,15,134,13],[122,18,134,16],[122,30,134,28],[123,10,135,8],[124,8,136,6],[124,13,136,11,"constants"],[124,22,136,20],[124,23,136,21,"TNF_ABSOLUTE_URI"],[124,39,136,37],[125,10,137,8,"value"],[125,15,137,13],[125,18,137,16],[125,32,137,30],[126,10,138,8],[127,8,139,6],[127,13,139,11,"constants"],[127,22,139,20],[127,23,139,21,"TNF_EXTERNAL_TYPE"],[127,40,139,38],[128,10,140,8,"value"],[128,15,140,13],[128,18,140,16],[128,28,140,26],[129,10,141,8],[130,8,142,6],[130,13,142,11,"constants"],[130,22,142,20],[130,23,142,21,"TNF_UNKNOWN"],[130,34,142,32],[131,10,143,8,"value"],[131,15,143,13],[131,18,143,16],[131,27,143,25],[132,10,144,8],[133,8,145,6],[133,13,145,11,"constants"],[133,22,145,20],[133,23,145,21,"TNF_UNCHANGED"],[133,36,145,34],[134,10,146,8,"value"],[134,15,146,13],[134,18,146,16],[134,29,146,27],[135,10,147,8],[136,8,148,6],[136,13,148,11,"constants"],[136,22,148,20],[136,23,148,21,"TNF_RESERVED"],[136,35,148,33],[137,10,149,8,"value"],[137,15,149,13],[137,18,149,16],[137,28,149,26],[138,10,150,8],[139,6,151,4],[140,6,152,4],[140,13,152,11,"value"],[140,18,152,16],[141,4,153,2],[142,2,154,0],[142,3,154,1],[143,2,156,0],[143,11,156,9,"s"],[143,12,156,10,"s"],[143,13,156,11,"bytes"],[143,18,156,16],[143,20,156,18],[144,4,157,2],[144,8,157,6],[144,15,157,13,"bytes"],[144,20,157,18],[144,25,157,23],[144,33,157,31],[144,35,157,33],[145,6,158,4],[145,13,158,11,"bytes"],[145,18,158,16],[146,4,159,2],[147,4,161,2],[147,11,161,9,"bytes"],[147,16,161,14],[147,17,161,15,"reduce"],[147,23,161,21],[147,24,161,22],[147,34,161,32,"acc"],[147,37,161,35],[147,39,161,37,"byte"],[147,43,161,41],[147,45,161,43],[148,6,162,4],[148,13,162,11,"acc"],[148,16,162,14],[148,19,162,17,"String"],[148,25,162,23],[148,26,162,24,"fromCharCode"],[148,38,162,36],[148,39,162,37,"byte"],[148,43,162,41],[148,44,162,42],[149,4,163,2],[149,5,163,3],[149,7,163,5],[149,9,163,7],[149,10,163,8],[150,2,164,0],[151,2,166,0,"module"],[151,8,166,6],[151,9,166,7,"exports"],[151,16,166,14],[151,19,166,17,"stringifier"],[151,30,166,28],[152,0,166,29],[152,3]],"functionMap":{"names":["<global>","stringify","printRecords","message.forEach$argument_0","printRecord","printWellKnown","tnfToString","s","bytes.reduce$argument_0"],"mappings":"AAA;aCQ;GDW;gBEK;oBCO;KDG;GFG;eIK;GJ4C;kBKE;GLgC;eME;GN8B;AOG;sBCK;GDE;CPC"}},"type":"js/module"}]}