{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@react-native-community/netinfo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":153},"end":{"line":8,"column":54,"index":207}}],"key":"PqZcYTlMIVnzFjdViPzMiGUu7Hg=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":246},"end":{"line":10,"column":54,"index":300}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.networkAwareQuery = exports.logApiError = exports.clearErrorLogCache = exports.checkNetworkStatus = undefined;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _netinfo = _interopRequireDefault(require(_dependencyMap[2]));\n  var _EventLogger = require(_dependencyMap[3]);\n  /**\n   * Network-aware API utilities\n   * \n   * This module provides utilities to prevent API calls when offline\n   * and handle network errors gracefully.\n   */\n\n  // Cache network status to avoid repeated checks\n  var isOnline = true;\n  var lastNetworkCheck = 0;\n  var NETWORK_CHECK_INTERVAL = 5000; // 5 seconds\n\n  // Initialize network listener\n  _netinfo.default.addEventListener(state => {\n    isOnline = state.isConnected ?? true;\n    lastNetworkCheck = Date.now();\n  });\n\n  /**\n   * Check if device is online (with caching)\n   */\n  var checkNetworkStatus = exports.checkNetworkStatus = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2.default)(function* () {\n      // Use cached value if recent\n      if (Date.now() - lastNetworkCheck < NETWORK_CHECK_INTERVAL) {\n        return isOnline;\n      }\n      try {\n        var state = yield _netinfo.default.fetch();\n        isOnline = state.isConnected ?? true;\n        lastNetworkCheck = Date.now();\n        return isOnline;\n      } catch (error) {\n        _EventLogger.EventLogger.warn('API', 'Failed to check network status:', error);\n        return isOnline; // Return last known state\n      }\n    });\n    return function checkNetworkStatus() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  /**\n   * Network-aware query wrapper that prevents API calls when offline\n   */\n  var networkAwareQuery = exports.networkAwareQuery = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* (queryFn, options) {\n      var _ref3 = options || {},\n        _ref3$skipNetworkChec = _ref3.skipNetworkCheck,\n        skipNetworkCheck = _ref3$skipNetworkChec === undefined ? false : _ref3$skipNetworkChec,\n        offlineData = _ref3.offlineData;\n\n      // Skip network check if requested (for critical operations)\n      if (!skipNetworkCheck) {\n        var online = yield checkNetworkStatus();\n        if (!online) {\n          if (offlineData !== undefined) {\n            return offlineData;\n          }\n          throw {\n            status: 'OFFLINE',\n            message: 'No internet connection. Please check your network and try again.',\n            code: 'NETWORK_OFFLINE'\n          };\n        }\n      }\n      try {\n        return yield queryFn();\n      } catch (error) {\n        // Check if error is due to network failure\n        if (error?.message?.includes('Network request failed') || error?.message?.includes('Failed to fetch') || error?.code === 'NETWORK_ERROR') {\n          // Update network status\n          isOnline = false;\n          lastNetworkCheck = Date.now();\n          throw {\n            status: 'OFFLINE',\n            message: 'Connection lost. Please check your internet connection.',\n            code: 'NETWORK_ERROR'\n          };\n        }\n\n        // Re-throw other errors\n        throw error;\n      }\n    });\n    return function networkAwareQuery(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  /**\n   * Debounced error logger to prevent spam\n   */\n  var errorLogCache = new Map();\n  var ERROR_LOG_INTERVAL = 60000; // 1 minute\n\n  var logApiError = (error, context) => {\n    var errorKey = `${context}:${error?.message || error?.code || 'unknown'}`;\n    var lastLogged = errorLogCache.get(errorKey) || 0;\n    if (Date.now() - lastLogged > ERROR_LOG_INTERVAL) {\n      _EventLogger.EventLogger.error('API', '[${context}] API Error:', error);\n      errorLogCache.set(errorKey, Date.now());\n    }\n  };\n\n  /**\n   * Clear error log cache (useful for testing)\n   */\n  exports.logApiError = logApiError;\n  var clearErrorLogCache = () => {\n    errorLogCache.clear();\n  };\n  exports.clearErrorLogCache = clearErrorLogCache;\n});","lineCount":123,"map":[[8,2,8,0],[8,6,8,0,"_netinfo"],[8,14,8,0],[8,17,8,0,"_interopRequireDefault"],[8,39,8,0],[8,40,8,0,"require"],[8,47,8,0],[8,48,8,0,"_dependencyMap"],[8,62,8,0],[9,2,10,0],[9,6,10,0,"_EventLogger"],[9,18,10,0],[9,21,10,0,"require"],[9,28,10,0],[9,29,10,0,"_dependencyMap"],[9,43,10,0],[10,2,1,0],[11,0,2,0],[12,0,3,0],[13,0,4,0],[14,0,5,0],[15,0,6,0],[17,2,12,0],[18,2,13,0],[18,6,13,4,"isOnline"],[18,14,13,12],[18,17,13,15],[18,21,13,19],[19,2,14,0],[19,6,14,4,"lastNetworkCheck"],[19,22,14,20],[19,25,14,23],[19,26,14,24],[20,2,15,0],[20,6,15,6,"NETWORK_CHECK_INTERVAL"],[20,28,15,28],[20,31,15,31],[20,35,15,35],[20,36,15,36],[20,37,15,37],[22,2,17,0],[23,2,18,0,"NetInfo"],[23,18,18,7],[23,19,18,8,"addEventListener"],[23,35,18,24],[23,36,18,25,"state"],[23,41,18,30],[23,45,18,34],[24,4,19,2,"isOnline"],[24,12,19,10],[24,15,19,13,"state"],[24,20,19,18],[24,21,19,19,"isConnected"],[24,32,19,30],[24,36,19,34],[24,40,19,38],[25,4,20,2,"lastNetworkCheck"],[25,20,20,18],[25,23,20,21,"Date"],[25,27,20,25],[25,28,20,26,"now"],[25,31,20,29],[25,32,20,30],[25,33,20,31],[26,2,21,0],[26,3,21,1],[26,4,21,2],[28,2,23,0],[29,0,24,0],[30,0,25,0],[31,2,26,7],[31,6,26,13,"checkNetworkStatus"],[31,24,26,31],[31,27,26,31,"exports"],[31,34,26,31],[31,35,26,31,"checkNetworkStatus"],[31,53,26,31],[32,4,26,31],[32,8,26,31,"_ref"],[32,12,26,31],[32,19,26,31,"_asyncToGenerator2"],[32,37,26,31],[32,38,26,31,"default"],[32,45,26,31],[32,47,26,34],[32,60,26,64],[33,6,27,2],[34,6,28,2],[34,10,28,6,"Date"],[34,14,28,10],[34,15,28,11,"now"],[34,18,28,14],[34,19,28,15],[34,20,28,16],[34,23,28,19,"lastNetworkCheck"],[34,39,28,35],[34,42,28,38,"NETWORK_CHECK_INTERVAL"],[34,64,28,60],[34,66,28,62],[35,8,29,4],[35,15,29,11,"isOnline"],[35,23,29,19],[36,6,30,2],[37,6,32,2],[37,10,32,6],[38,8,33,4],[38,12,33,10,"state"],[38,17,33,15],[38,26,33,24,"NetInfo"],[38,42,33,31],[38,43,33,32,"fetch"],[38,48,33,37],[38,49,33,38],[38,50,33,39],[39,8,34,4,"isOnline"],[39,16,34,12],[39,19,34,15,"state"],[39,24,34,20],[39,25,34,21,"isConnected"],[39,36,34,32],[39,40,34,36],[39,44,34,40],[40,8,35,4,"lastNetworkCheck"],[40,24,35,20],[40,27,35,23,"Date"],[40,31,35,27],[40,32,35,28,"now"],[40,35,35,31],[40,36,35,32],[40,37,35,33],[41,8,36,4],[41,15,36,11,"isOnline"],[41,23,36,19],[42,6,37,2],[42,7,37,3],[42,8,37,4],[42,15,37,11,"error"],[42,20,37,16],[42,22,37,18],[43,8,38,4,"EventLogger"],[43,32,38,15],[43,33,38,16,"warn"],[43,37,38,20],[43,38,38,21],[43,43,38,26],[43,45,38,28],[43,78,38,61],[43,80,38,63,"error"],[43,85,38,68],[43,86,38,69],[44,8,39,4],[44,15,39,11,"isOnline"],[44,23,39,19],[44,24,39,20],[44,25,39,21],[45,6,40,2],[46,4,41,0],[46,5,41,1],[47,4,41,1],[47,20,26,13,"checkNetworkStatus"],[47,38,26,31,"checkNetworkStatus"],[47,39,26,31],[48,6,26,31],[48,13,26,31,"_ref"],[48,17,26,31],[48,18,26,31,"apply"],[48,23,26,31],[48,30,26,31,"arguments"],[48,39,26,31],[49,4,26,31],[50,2,26,31],[50,5,41,1],[52,2,43,0],[53,0,44,0],[54,0,45,0],[55,2,46,7],[55,6,46,13,"networkAwareQuery"],[55,23,46,30],[55,26,46,30,"exports"],[55,33,46,30],[55,34,46,30,"networkAwareQuery"],[55,51,46,30],[56,4,46,30],[56,8,46,30,"_ref2"],[56,13,46,30],[56,20,46,30,"_asyncToGenerator2"],[56,38,46,30],[56,39,46,30,"default"],[56,46,46,30],[56,48,46,33],[56,59,47,2,"queryFn"],[56,66,47,27],[56,68,48,2,"options"],[56,75,51,3],[56,77,52,17],[57,6,53,2],[57,10,53,2,"_ref3"],[57,15,53,2],[57,18,53,52,"options"],[57,25,53,59],[57,29,53,63],[57,30,53,64],[57,31,53,65],[58,8,53,65,"_ref3$skipNetworkChec"],[58,29,53,65],[58,32,53,65,"_ref3"],[58,37,53,65],[58,38,53,10,"skipNetworkCheck"],[58,54,53,26],[59,8,53,10,"skipNetworkCheck"],[59,24,53,26],[59,27,53,26,"_ref3$skipNetworkChec"],[59,48,53,26],[59,53,53,26,"undefined"],[59,62,53,26],[59,65,53,29],[59,70,53,34],[59,73,53,34,"_ref3$skipNetworkChec"],[59,94,53,34],[60,8,53,36,"offlineData"],[60,19,53,47],[60,22,53,47,"_ref3"],[60,27,53,47],[60,28,53,36,"offlineData"],[60,39,53,47],[62,6,55,2],[63,6,56,2],[63,10,56,6],[63,11,56,7,"skipNetworkCheck"],[63,27,56,23],[63,29,56,25],[64,8,57,4],[64,12,57,10,"online"],[64,18,57,16],[64,27,57,25,"checkNetworkStatus"],[64,45,57,43],[64,46,57,44],[64,47,57,45],[65,8,59,4],[65,12,59,8],[65,13,59,9,"online"],[65,19,59,15],[65,21,59,17],[66,10,60,6],[66,14,60,10,"offlineData"],[66,25,60,21],[66,30,60,26,"undefined"],[66,39,60,35],[66,41,60,37],[67,12,61,8],[67,19,61,15,"offlineData"],[67,30,61,26],[68,10,62,6],[69,10,64,6],[69,16,64,12],[70,12,65,8,"status"],[70,18,65,14],[70,20,65,16],[70,29,65,25],[71,12,66,8,"message"],[71,19,66,15],[71,21,66,17],[71,87,66,83],[72,12,67,8,"code"],[72,16,67,12],[72,18,67,14],[73,10,68,6],[73,11,68,7],[74,8,69,4],[75,6,70,2],[76,6,72,2],[76,10,72,6],[77,8,73,4],[77,21,73,17,"queryFn"],[77,28,73,24],[77,29,73,25],[77,30,73,26],[78,6,74,2],[78,7,74,3],[78,8,74,4],[78,15,74,11,"error"],[78,20,74,21],[78,22,74,23],[79,8,75,4],[80,8,76,4],[80,12,76,8,"error"],[80,17,76,13],[80,19,76,15,"message"],[80,26,76,22],[80,28,76,24,"includes"],[80,36,76,32],[80,37,76,33],[80,61,76,57],[80,62,76,58],[80,66,77,8,"error"],[80,71,77,13],[80,73,77,15,"message"],[80,80,77,22],[80,82,77,24,"includes"],[80,90,77,32],[80,91,77,33],[80,108,77,50],[80,109,77,51],[80,113,78,8,"error"],[80,118,78,13],[80,120,78,15,"code"],[80,124,78,19],[80,129,78,24],[80,144,78,39],[80,146,78,41],[81,10,80,6],[82,10,81,6,"isOnline"],[82,18,81,14],[82,21,81,17],[82,26,81,22],[83,10,82,6,"lastNetworkCheck"],[83,26,82,22],[83,29,82,25,"Date"],[83,33,82,29],[83,34,82,30,"now"],[83,37,82,33],[83,38,82,34],[83,39,82,35],[84,10,84,6],[84,16,84,12],[85,12,85,8,"status"],[85,18,85,14],[85,20,85,16],[85,29,85,25],[86,12,86,8,"message"],[86,19,86,15],[86,21,86,17],[86,78,86,74],[87,12,87,8,"code"],[87,16,87,12],[87,18,87,14],[88,10,88,6],[88,11,88,7],[89,8,89,4],[91,8,91,4],[92,8,92,4],[92,14,92,10,"error"],[92,19,92,15],[93,6,93,2],[94,4,94,0],[94,5,94,1],[95,4,94,1],[95,20,46,13,"networkAwareQuery"],[95,37,46,30,"networkAwareQuery"],[95,38,46,30,"_x"],[95,40,46,30],[95,42,46,30,"_x2"],[95,45,46,30],[96,6,46,30],[96,13,46,30,"_ref2"],[96,18,46,30],[96,19,46,30,"apply"],[96,24,46,30],[96,31,46,30,"arguments"],[96,40,46,30],[97,4,46,30],[98,2,46,30],[98,5,94,1],[100,2,96,0],[101,0,97,0],[102,0,98,0],[103,2,99,0],[103,6,99,6,"errorLogCache"],[103,19,99,19],[103,22,99,22],[103,26,99,26,"Map"],[103,29,99,29],[103,30,99,46],[103,31,99,47],[104,2,100,0],[104,6,100,6,"ERROR_LOG_INTERVAL"],[104,24,100,24],[104,27,100,27],[104,32,100,32],[104,33,100,33],[104,34,100,34],[106,2,102,7],[106,6,102,13,"logApiError"],[106,17,102,24],[106,20,102,27,"logApiError"],[106,21,102,28,"error"],[106,26,102,38],[106,28,102,40,"context"],[106,35,102,55],[106,40,102,60],[107,4,103,2],[107,8,103,8,"errorKey"],[107,16,103,16],[107,19,103,19],[107,22,103,22,"context"],[107,29,103,29],[107,33,103,33,"error"],[107,38,103,38],[107,40,103,40,"message"],[107,47,103,47],[107,51,103,51,"error"],[107,56,103,56],[107,58,103,58,"code"],[107,62,103,62],[107,66,103,66],[107,75,103,75],[107,77,103,77],[108,4,104,2],[108,8,104,8,"lastLogged"],[108,18,104,18],[108,21,104,21,"errorLogCache"],[108,34,104,34],[108,35,104,35,"get"],[108,38,104,38],[108,39,104,39,"errorKey"],[108,47,104,47],[108,48,104,48],[108,52,104,52],[108,53,104,53],[109,4,106,2],[109,8,106,6,"Date"],[109,12,106,10],[109,13,106,11,"now"],[109,16,106,14],[109,17,106,15],[109,18,106,16],[109,21,106,19,"lastLogged"],[109,31,106,29],[109,34,106,32,"ERROR_LOG_INTERVAL"],[109,52,106,50],[109,54,106,52],[110,6,107,4,"EventLogger"],[110,30,107,15],[110,31,107,16,"error"],[110,36,107,21],[110,37,107,22],[110,42,107,27],[110,44,107,29],[110,69,107,54],[110,71,107,56,"error"],[110,76,107,70],[110,77,107,71],[111,6,108,4,"errorLogCache"],[111,19,108,17],[111,20,108,18,"set"],[111,23,108,21],[111,24,108,22,"errorKey"],[111,32,108,30],[111,34,108,32,"Date"],[111,38,108,36],[111,39,108,37,"now"],[111,42,108,40],[111,43,108,41],[111,44,108,42],[111,45,108,43],[112,4,109,2],[113,2,110,0],[113,3,110,1],[115,2,112,0],[116,0,113,0],[117,0,114,0],[118,2,112,0,"exports"],[118,9,112,0],[118,10,112,0,"logApiError"],[118,21,112,0],[118,24,112,0,"logApiError"],[118,35,112,0],[119,2,115,7],[119,6,115,13,"clearErrorLogCache"],[119,24,115,31],[119,27,115,34,"clearErrorLogCache"],[119,28,115,34],[119,33,115,40],[120,4,116,2,"errorLogCache"],[120,17,116,15],[120,18,116,16,"clear"],[120,23,116,21],[120,24,116,22],[120,25,116,23],[121,2,117,0],[121,3,117,1],[122,2,117,2,"exports"],[122,9,117,2],[122,10,117,2,"clearErrorLogCache"],[122,28,117,2],[122,31,117,2,"clearErrorLogCache"],[122,49,117,2],[123,0,117,2],[123,3]],"functionMap":{"names":["<global>","NetInfo.addEventListener$argument_0","checkNetworkStatus","networkAwareQuery","logApiError","clearErrorLogCache"],"mappings":"AAA;yBCiB;CDG;kCEK;CFe;iCGK;CHgD;2BIQ;CJQ;kCKK;CLE"}},"type":"js/module"}]}