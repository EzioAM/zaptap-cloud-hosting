{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"../../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":42},"end":{"line":3,"column":55,"index":97}}],"key":"4wo4OYT4MSo2InL8kiWmZxvepwE=","exportNames":["*"]}},{"name":"../gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":98},"end":{"line":4,"column":66,"index":164}}],"key":"tAi+3DTq2/XlM2rT1I9X7ektuV0=","exportNames":["*"]}},{"name":"../../FlingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":166},"end":{"line":6,"column":69,"index":235}}],"key":"m7drCniziiNjEu9Grhe6bV/AFd0=","exportNames":["*"]}},{"name":"../../ForceTouchGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":236},"end":{"line":7,"column":79,"index":315}}],"key":"Zs82FqJFIcjv50A58P90bQbMZ6s=","exportNames":["*"]}},{"name":"../../LongPressGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":316},"end":{"line":8,"column":77,"index":393}}],"key":"xLOe4E3z7HzpJ/yq6aTNrEbuZio=","exportNames":["*"]}},{"name":"../../PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":394},"end":{"line":12,"column":33,"index":500}}],"key":"bk07O1d6H26279U6oqqnjaS7c4c=","exportNames":["*"]}},{"name":"../../TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":501},"end":{"line":13,"column":65,"index":566}}],"key":"ZqoHIcC0SF6bf3AIHltJPu1k9xI=","exportNames":["*"]}},{"name":"../hoverGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":567},"end":{"line":14,"column":59,"index":626}}],"key":"2DA6Vfuec14INlrI/GwdOE0FAK4=","exportNames":["*"]}},{"name":"../../NativeViewGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":627},"end":{"line":15,"column":79,"index":706}}],"key":"FiQaORn3aiHBJrGlJ2FeE26dr38=","exportNames":["*"]}},{"name":"../../gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":707},"end":{"line":19,"column":36,"index":818}}],"key":"iYkm+MgDTErKT5jbMC97JfuzH7k=","exportNames":["*"]}},{"name":"../../../EnableNewWebImplementation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":819},"end":{"line":20,"column":84,"index":903}}],"key":"eaIoOU9/v4mL1aA6FJZKxHzRNGE=","exportNames":["*"]}},{"name":"../../../getReactNativeVersion","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":904},"end":{"line":21,"column":71,"index":975}}],"key":"LRN+jz/5KqOYFnR82ORUXrazSTg=","exportNames":["*"]}},{"name":"../../../RNRenderer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":976},"end":{"line":22,"column":49,"index":1025}}],"key":"dd5GIUVDNjn2BlVM36KIcGPscVA=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":1026},"end":{"line":23,"column":54,"index":1080}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"../reanimatedWrapper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":1081},"end":{"line":24,"column":50,"index":1131}}],"key":"55E8XkeO+dzLnJh3bfoVrgRwD58=","exportNames":["*"]}},{"name":"../eventReceiver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0,"index":1132},"end":{"line":25,"column":57,"index":1189}}],"key":"5nSvdaEKN+h/ZTz2T/BGCtOX48A=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ALLOWED_PROPS = void 0;\n  exports.checkGestureCallbacksForWorklets = checkGestureCallbacksForWorklets;\n  exports.extractGestureRelations = extractGestureRelations;\n  exports.useForceRender = useForceRender;\n  exports.useWebEventHandlers = useWebEventHandlers;\n  exports.validateDetectorChildren = validateDetectorChildren;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _toConsumableArray2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _reactNative = require(_dependencyMap[3], \"react-native\");\n  var _utils = require(_dependencyMap[4], \"../../../utils\");\n  var _gesture = require(_dependencyMap[5], \"../gesture\");\n  var _FlingGestureHandler = require(_dependencyMap[6], \"../../FlingGestureHandler\");\n  var _ForceTouchGestureHandler = require(_dependencyMap[7], \"../../ForceTouchGestureHandler\");\n  var _LongPressGestureHandler = require(_dependencyMap[8], \"../../LongPressGestureHandler\");\n  var _PanGestureHandler = require(_dependencyMap[9], \"../../PanGestureHandler\");\n  var _TapGestureHandler = require(_dependencyMap[10], \"../../TapGestureHandler\");\n  var _hoverGesture = require(_dependencyMap[11], \"../hoverGesture\");\n  var _NativeViewGestureHandler = require(_dependencyMap[12], \"../../NativeViewGestureHandler\");\n  var _gestureHandlerCommon = require(_dependencyMap[13], \"../../gestureHandlerCommon\");\n  var _EnableNewWebImplementation = require(_dependencyMap[14], \"../../../EnableNewWebImplementation\");\n  var _getReactNativeVersion = require(_dependencyMap[15], \"../../../getReactNativeVersion\");\n  var _RNRenderer = require(_dependencyMap[16], \"../../../RNRenderer\");\n  var _react = require(_dependencyMap[17], \"react\");\n  var _reanimatedWrapper = require(_dependencyMap[18], \"../reanimatedWrapper\");\n  var _eventReceiver = require(_dependencyMap[19], \"../eventReceiver\");\n  var ALLOWED_PROPS = exports.ALLOWED_PROPS = [].concat((0, _toConsumableArray2.default)(_gestureHandlerCommon.baseGestureHandlerWithDetectorProps), (0, _toConsumableArray2.default)(_TapGestureHandler.tapGestureHandlerProps), (0, _toConsumableArray2.default)(_PanGestureHandler.panGestureHandlerProps), (0, _toConsumableArray2.default)(_PanGestureHandler.panGestureHandlerCustomNativeProps), (0, _toConsumableArray2.default)(_LongPressGestureHandler.longPressGestureHandlerProps), (0, _toConsumableArray2.default)(_ForceTouchGestureHandler.forceTouchGestureHandlerProps), (0, _toConsumableArray2.default)(_FlingGestureHandler.flingGestureHandlerProps), (0, _toConsumableArray2.default)(_hoverGesture.hoverGestureHandlerProps), (0, _toConsumableArray2.default)(_NativeViewGestureHandler.nativeViewGestureHandlerProps));\n  function convertToHandlerTag(ref) {\n    if (typeof ref === 'number') {\n      return ref;\n    } else if (ref instanceof _gesture.BaseGesture) {\n      return ref.handlerTag;\n    } else {\n      var _ref$current$handlerT, _ref$current;\n      // @ts-ignore in this case it should be a ref either to gesture object or\n      // a gesture handler component, in both cases handlerTag property exists\n      return (_ref$current$handlerT = (_ref$current = ref.current) == null ? void 0 : _ref$current.handlerTag) != null ? _ref$current$handlerT : -1;\n    }\n  }\n  function extractValidHandlerTags(interactionGroup) {\n    var _interactionGroup$map, _interactionGroup$map2;\n    return (_interactionGroup$map = interactionGroup == null || (_interactionGroup$map2 = interactionGroup.map(convertToHandlerTag)) == null ? void 0 : _interactionGroup$map2.filter(function (tag) {\n      return tag > 0;\n    })) != null ? _interactionGroup$map : [];\n  }\n  function extractGestureRelations(gesture) {\n    var requireToFail = extractValidHandlerTags(gesture.config.requireToFail);\n    var simultaneousWith = extractValidHandlerTags(gesture.config.simultaneousWith);\n    var blocksHandlers = extractValidHandlerTags(gesture.config.blocksHandlers);\n    return {\n      waitFor: requireToFail,\n      simultaneousHandlers: simultaneousWith,\n      blocksHandlers: blocksHandlers\n    };\n  }\n  function checkGestureCallbacksForWorklets(gesture) {\n    if (!__DEV__) {\n      return;\n    }\n    // If a gesture is explicitly marked to run on the JS thread there is no need to check\n    // if callbacks are worklets as the user is aware they will be ran on the JS thread\n    if (gesture.config.runOnJS) {\n      return;\n    }\n    var areSomeNotWorklets = gesture.handlers.isWorklet.includes(false);\n    var areSomeWorklets = gesture.handlers.isWorklet.includes(true);\n\n    // If some of the callbacks are worklets and some are not, and the gesture is not\n    // explicitly marked with `.runOnJS(true)` show an error\n    if (areSomeNotWorklets && areSomeWorklets) {\n      console.error((0, _utils.tagMessage)(`Some of the callbacks in the gesture are worklets and some are not. Either make sure that all calbacks are marked as 'worklet' if you wish to run them on the UI thread or use '.runOnJS(true)' modifier on the gesture explicitly to run all callbacks on the JS thread.`));\n    }\n    if (_reanimatedWrapper.Reanimated === undefined) {\n      // If Reanimated is not available, we can't run worklets, so we shouldn't show the warning\n      return;\n    }\n    var areAllNotWorklets = !areSomeWorklets && areSomeNotWorklets;\n    // If none of the callbacks are worklets and the gesture is not explicitly marked with\n    // `.runOnJS(true)` show a warning\n    if (areAllNotWorklets && !(0, _utils.isTestEnv)()) {\n      console.warn((0, _utils.tagMessage)(`None of the callbacks in the gesture are worklets. If you wish to run them on the JS thread use '.runOnJS(true)' modifier on the gesture to make this explicit. Otherwise, mark the callbacks as 'worklet' to run them on the UI thread.`));\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function validateDetectorChildren(ref) {\n    // Finds the first native view under the Wrap component and traverses the fiber tree upwards\n    // to check whether there is more than one native view as a pseudo-direct child of GestureDetector\n    // i.e. this is not ok:\n    //            Wrap\n    //             |\n    //            / \\\n    //           /   \\\n    //          /     \\\n    //         /       \\\n    //   NativeView  NativeView\n    //\n    // but this is fine:\n    //            Wrap\n    //             |\n    //         NativeView\n    //             |\n    //            / \\\n    //           /   \\\n    //          /     \\\n    //         /       \\\n    //   NativeView  NativeView\n    if (__DEV__ && _reactNative.Platform.OS !== 'web') {\n      var REACT_NATIVE_VERSION = (0, _getReactNativeVersion.getReactNativeVersion)();\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      var wrapType = REACT_NATIVE_VERSION.minor > 63 || REACT_NATIVE_VERSION.major > 0 ?\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      ref._reactInternals.elementType :\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      ref._reactInternalFiber.elementType;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      var instance = _RNRenderer.RNRenderer.findHostInstance_DEPRECATED(ref)._internalFiberInstanceHandleDEV;\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      while (instance && instance.elementType !== wrapType) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (instance.sibling) {\n          throw new Error('GestureDetector has more than one native view as its children. This can happen if you are using a custom component that renders multiple views, like React.Fragment. You should wrap content of GestureDetector with a <View> or <Animated.View>.');\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        instance = instance.return;\n      }\n    }\n  }\n  function useForceRender() {\n    var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      renderState = _useState2[0],\n      setRenderState = _useState2[1];\n    var forceRender = (0, _react.useCallback)(function () {\n      setRenderState(!renderState);\n    }, [renderState, setRenderState]);\n    return forceRender;\n  }\n  function useWebEventHandlers() {\n    return (0, _react.useRef)({\n      onGestureHandlerEvent: function onGestureHandlerEvent(e) {\n        (0, _eventReceiver.onGestureHandlerEvent)(e.nativeEvent);\n      },\n      onGestureHandlerStateChange: (0, _EnableNewWebImplementation.isNewWebImplementationEnabled)() ? function (e) {\n        (0, _eventReceiver.onGestureHandlerEvent)(e.nativeEvent);\n      } : undefined\n    });\n  }\n});","lineCount":155,"map":[[14,2,1,0],[14,6,1,0,"_reactNative"],[14,18,1,0],[14,21,1,0,"require"],[14,28,1,0],[14,29,1,0,"_dependencyMap"],[14,43,1,0],[15,2,3,0],[15,6,3,0,"_utils"],[15,12,3,0],[15,15,3,0,"require"],[15,22,3,0],[15,23,3,0,"_dependencyMap"],[15,37,3,0],[16,2,4,0],[16,6,4,0,"_gesture"],[16,14,4,0],[16,17,4,0,"require"],[16,24,4,0],[16,25,4,0,"_dependencyMap"],[16,39,4,0],[17,2,6,0],[17,6,6,0,"_FlingGestureHandler"],[17,26,6,0],[17,29,6,0,"require"],[17,36,6,0],[17,37,6,0,"_dependencyMap"],[17,51,6,0],[18,2,7,0],[18,6,7,0,"_ForceTouchGestureHandler"],[18,31,7,0],[18,34,7,0,"require"],[18,41,7,0],[18,42,7,0,"_dependencyMap"],[18,56,7,0],[19,2,8,0],[19,6,8,0,"_LongPressGestureHandler"],[19,30,8,0],[19,33,8,0,"require"],[19,40,8,0],[19,41,8,0,"_dependencyMap"],[19,55,8,0],[20,2,9,0],[20,6,9,0,"_PanGestureHandler"],[20,24,9,0],[20,27,9,0,"require"],[20,34,9,0],[20,35,9,0,"_dependencyMap"],[20,49,9,0],[21,2,13,0],[21,6,13,0,"_TapGestureHandler"],[21,24,13,0],[21,27,13,0,"require"],[21,34,13,0],[21,35,13,0,"_dependencyMap"],[21,49,13,0],[22,2,14,0],[22,6,14,0,"_hoverGesture"],[22,19,14,0],[22,22,14,0,"require"],[22,29,14,0],[22,30,14,0,"_dependencyMap"],[22,44,14,0],[23,2,15,0],[23,6,15,0,"_NativeViewGestureHandler"],[23,31,15,0],[23,34,15,0,"require"],[23,41,15,0],[23,42,15,0,"_dependencyMap"],[23,56,15,0],[24,2,16,0],[24,6,16,0,"_gestureHandlerCommon"],[24,27,16,0],[24,30,16,0,"require"],[24,37,16,0],[24,38,16,0,"_dependencyMap"],[24,52,16,0],[25,2,20,0],[25,6,20,0,"_EnableNewWebImplementation"],[25,33,20,0],[25,36,20,0,"require"],[25,43,20,0],[25,44,20,0,"_dependencyMap"],[25,58,20,0],[26,2,21,0],[26,6,21,0,"_getReactNativeVersion"],[26,28,21,0],[26,31,21,0,"require"],[26,38,21,0],[26,39,21,0,"_dependencyMap"],[26,53,21,0],[27,2,22,0],[27,6,22,0,"_RNRenderer"],[27,17,22,0],[27,20,22,0,"require"],[27,27,22,0],[27,28,22,0,"_dependencyMap"],[27,42,22,0],[28,2,23,0],[28,6,23,0,"_react"],[28,12,23,0],[28,15,23,0,"require"],[28,22,23,0],[28,23,23,0,"_dependencyMap"],[28,37,23,0],[29,2,24,0],[29,6,24,0,"_reanimatedWrapper"],[29,24,24,0],[29,27,24,0,"require"],[29,34,24,0],[29,35,24,0,"_dependencyMap"],[29,49,24,0],[30,2,25,0],[30,6,25,0,"_eventReceiver"],[30,20,25,0],[30,23,25,0,"require"],[30,30,25,0],[30,31,25,0,"_dependencyMap"],[30,45,25,0],[31,2,28,7],[31,6,28,13,"ALLOWED_PROPS"],[31,19,28,26],[31,22,28,26,"exports"],[31,29,28,26],[31,30,28,26,"ALLOWED_PROPS"],[31,43,28,26],[31,49,28,26,"concat"],[31,55,28,26],[31,60,28,26,"_toConsumableArray2"],[31,79,28,26],[31,80,28,26,"default"],[31,87,28,26],[31,89,29,5,"baseGestureHandlerWithDetectorProps"],[31,146,29,40],[31,153,29,40,"_toConsumableArray2"],[31,172,29,40],[31,173,29,40,"default"],[31,180,29,40],[31,182,30,5,"tapGestureHandlerProps"],[31,223,30,27],[31,230,30,27,"_toConsumableArray2"],[31,249,30,27],[31,250,30,27,"default"],[31,257,30,27],[31,259,31,5,"panGestureHandlerProps"],[31,300,31,27],[31,307,31,27,"_toConsumableArray2"],[31,326,31,27],[31,327,31,27,"default"],[31,334,31,27],[31,336,32,5,"panGestureHandlerCustomNativeProps"],[31,389,32,39],[31,396,32,39,"_toConsumableArray2"],[31,415,32,39],[31,416,32,39,"default"],[31,423,32,39],[31,425,33,5,"longPressGestureHandlerProps"],[31,478,33,33],[31,485,33,33,"_toConsumableArray2"],[31,504,33,33],[31,505,33,33,"default"],[31,512,33,33],[31,514,34,5,"forceTouchGestureHandlerProps"],[31,569,34,34],[31,576,34,34,"_toConsumableArray2"],[31,595,34,34],[31,596,34,34,"default"],[31,603,34,34],[31,605,35,5,"flingGestureHandlerProps"],[31,650,35,29],[31,657,35,29,"_toConsumableArray2"],[31,676,35,29],[31,677,35,29,"default"],[31,684,35,29],[31,686,36,5,"hoverGestureHandlerProps"],[31,724,36,29],[31,731,36,29,"_toConsumableArray2"],[31,750,36,29],[31,751,36,29,"default"],[31,758,36,29],[31,760,37,5,"nativeViewGestureHandlerProps"],[31,815,37,34],[31,817,38,1],[32,2,40,0],[32,11,40,9,"convertToHandlerTag"],[32,30,40,28,"convertToHandlerTag"],[32,31,40,29,"ref"],[32,34,40,44],[32,36,40,54],[33,4,41,2],[33,8,41,6],[33,15,41,13,"ref"],[33,18,41,16],[33,23,41,21],[33,31,41,29],[33,33,41,31],[34,6,42,4],[34,13,42,11,"ref"],[34,16,42,14],[35,4,43,2],[35,5,43,3],[35,11,43,9],[35,15,43,13,"ref"],[35,18,43,16],[35,30,43,28,"BaseGesture"],[35,50,43,39],[35,52,43,41],[36,6,44,4],[36,13,44,11,"ref"],[36,16,44,14],[36,17,44,15,"handlerTag"],[36,27,44,25],[37,4,45,2],[37,5,45,3],[37,11,45,9],[38,6,45,9],[38,10,45,9,"_ref$current$handlerT"],[38,31,45,9],[38,33,45,9,"_ref$current"],[38,45,45,9],[39,6,46,4],[40,6,47,4],[41,6,48,4],[41,14,48,4,"_ref$current$handlerT"],[41,35,48,4],[41,39,48,4,"_ref$current"],[41,51,48,4],[41,54,48,11,"ref"],[41,57,48,14],[41,58,48,15,"current"],[41,65,48,22],[41,86,48,11,"_ref$current"],[41,98,48,11],[41,99,48,24,"handlerTag"],[41,109,48,34],[41,121,48,34,"_ref$current$handlerT"],[41,142,48,34],[41,145,48,38],[41,146,48,39],[41,147,48,40],[42,4,49,2],[43,2,50,0],[44,2,52,0],[44,11,52,9,"extractValidHandlerTags"],[44,34,52,32,"extractValidHandlerTags"],[44,35,52,33,"interactionGroup"],[44,51,52,75],[44,53,52,77],[45,4,52,77],[45,8,52,77,"_interactionGroup$map"],[45,29,52,77],[45,31,52,77,"_interactionGroup$map2"],[45,53,52,77],[46,4,53,2],[46,12,53,2,"_interactionGroup$map"],[46,33,53,2],[46,36,54,4,"interactionGroup"],[46,52,54,20],[46,65,54,20,"_interactionGroup$map2"],[46,87,54,20],[46,90,54,4,"interactionGroup"],[46,106,54,20],[46,107,54,22,"map"],[46,110,54,25],[46,111,54,26,"convertToHandlerTag"],[46,130,54,45],[46,131,54,46],[46,152,54,4,"_interactionGroup$map2"],[46,174,54,4],[46,175,54,48,"filter"],[46,181,54,54],[46,182,54,55],[46,192,54,56,"tag"],[46,195,54,59],[47,6,54,59],[47,13,54,64,"tag"],[47,16,54,67],[47,19,54,70],[47,20,54,71],[48,4,54,71],[48,6,54,72],[48,18,54,72,"_interactionGroup$map"],[48,39,54,72],[48,42,54,76],[48,44,54,78],[49,2,56,0],[50,2,58,7],[50,11,58,16,"extractGestureRelations"],[50,34,58,39,"extractGestureRelations"],[50,35,58,40,"gesture"],[50,42,58,60],[50,44,58,62],[51,4,59,2],[51,8,59,8,"requireToFail"],[51,21,59,21],[51,24,59,24,"extractValidHandlerTags"],[51,47,59,47],[51,48,59,48,"gesture"],[51,55,59,55],[51,56,59,56,"config"],[51,62,59,62],[51,63,59,63,"requireToFail"],[51,76,59,76],[51,77,59,77],[52,4,60,2],[52,8,60,8,"simultaneousWith"],[52,24,60,24],[52,27,60,27,"extractValidHandlerTags"],[52,50,60,50],[52,51,61,4,"gesture"],[52,58,61,11],[52,59,61,12,"config"],[52,65,61,18],[52,66,61,19,"simultaneousWith"],[52,82,62,2],[52,83,62,3],[53,4,63,2],[53,8,63,8,"blocksHandlers"],[53,22,63,22],[53,25,63,25,"extractValidHandlerTags"],[53,48,63,48],[53,49,63,49,"gesture"],[53,56,63,56],[53,57,63,57,"config"],[53,63,63,63],[53,64,63,64,"blocksHandlers"],[53,78,63,78],[53,79,63,79],[54,4,65,2],[54,11,65,9],[55,6,66,4,"waitFor"],[55,13,66,11],[55,15,66,13,"requireToFail"],[55,28,66,26],[56,6,67,4,"simultaneousHandlers"],[56,26,67,24],[56,28,67,26,"simultaneousWith"],[56,44,67,42],[57,6,68,4,"blocksHandlers"],[57,20,68,18],[57,22,68,20,"blocksHandlers"],[58,4,69,2],[58,5,69,3],[59,2,70,0],[60,2,72,7],[60,11,72,16,"checkGestureCallbacksForWorklets"],[60,43,72,48,"checkGestureCallbacksForWorklets"],[60,44,72,49,"gesture"],[60,51,72,69],[60,53,72,71],[61,4,73,2],[61,8,73,6],[61,9,73,7,"__DEV__"],[61,16,73,14],[61,18,73,16],[62,6,74,4],[63,4,75,2],[64,4,76,2],[65,4,77,2],[66,4,78,2],[66,8,78,6,"gesture"],[66,15,78,13],[66,16,78,14,"config"],[66,22,78,20],[66,23,78,21,"runOnJS"],[66,30,78,28],[66,32,78,30],[67,6,79,4],[68,4,80,2],[69,4,82,2],[69,8,82,8,"areSomeNotWorklets"],[69,26,82,26],[69,29,82,29,"gesture"],[69,36,82,36],[69,37,82,37,"handlers"],[69,45,82,45],[69,46,82,46,"isWorklet"],[69,55,82,55],[69,56,82,56,"includes"],[69,64,82,64],[69,65,82,65],[69,70,82,70],[69,71,82,71],[70,4,83,2],[70,8,83,8,"areSomeWorklets"],[70,23,83,23],[70,26,83,26,"gesture"],[70,33,83,33],[70,34,83,34,"handlers"],[70,42,83,42],[70,43,83,43,"isWorklet"],[70,52,83,52],[70,53,83,53,"includes"],[70,61,83,61],[70,62,83,62],[70,66,83,66],[70,67,83,67],[72,4,85,2],[73,4,86,2],[74,4,87,2],[74,8,87,6,"areSomeNotWorklets"],[74,26,87,24],[74,30,87,28,"areSomeWorklets"],[74,45,87,43],[74,47,87,45],[75,6,88,4,"console"],[75,13,88,11],[75,14,88,12,"error"],[75,19,88,17],[75,20,89,6],[75,24,89,6,"tagMessage"],[75,41,89,16],[75,43,90,8],[75,310,91,6],[75,311,92,4],[75,312,92,5],[76,4,93,2],[77,4,95,2],[77,8,95,6,"Reanimated"],[77,37,95,16],[77,42,95,21,"undefined"],[77,51,95,30],[77,53,95,32],[78,6,96,4],[79,6,97,4],[80,4,98,2],[81,4,100,2],[81,8,100,8,"areAllNotWorklets"],[81,25,100,25],[81,28,100,28],[81,29,100,29,"areSomeWorklets"],[81,44,100,44],[81,48,100,48,"areSomeNotWorklets"],[81,66,100,66],[82,4,101,2],[83,4,102,2],[84,4,103,2],[84,8,103,6,"areAllNotWorklets"],[84,25,103,23],[84,29,103,27],[84,30,103,28],[84,34,103,28,"isTestEnv"],[84,50,103,37],[84,52,103,38],[84,53,103,39],[84,55,103,41],[85,6,104,4,"console"],[85,13,104,11],[85,14,104,12,"warn"],[85,18,104,16],[85,19,105,6],[85,23,105,6,"tagMessage"],[85,40,105,16],[85,42,106,8],[85,276,107,6],[85,277,108,4],[85,278,108,5],[86,4,109,2],[87,2,110,0],[89,2,112,0],[90,2,113,7],[90,11,113,16,"validateDetectorChildren"],[90,35,113,40,"validateDetectorChildren"],[90,36,113,41,"ref"],[90,39,113,49],[90,41,113,51],[91,4,114,2],[92,4,115,2],[93,4,116,2],[94,4,117,2],[95,4,118,2],[96,4,119,2],[97,4,120,2],[98,4,121,2],[99,4,122,2],[100,4,123,2],[101,4,124,2],[102,4,125,2],[103,4,126,2],[104,4,127,2],[105,4,128,2],[106,4,129,2],[107,4,130,2],[108,4,131,2],[109,4,132,2],[110,4,133,2],[111,4,134,2],[112,4,135,2],[112,8,135,6,"__DEV__"],[112,15,135,13],[112,19,135,17,"Platform"],[112,40,135,25],[112,41,135,26,"OS"],[112,43,135,28],[112,48,135,33],[112,53,135,38],[112,55,135,40],[113,6,136,4],[113,10,136,10,"REACT_NATIVE_VERSION"],[113,30,136,30],[113,33,136,33],[113,37,136,33,"getReactNativeVersion"],[113,81,136,54],[113,83,136,55],[113,84,136,56],[114,6,137,4],[115,6,138,4],[115,10,138,10,"wrapType"],[115,18,138,18],[115,21,139,6,"REACT_NATIVE_VERSION"],[115,41,139,26],[115,42,139,27,"minor"],[115,47,139,32],[115,50,139,35],[115,52,139,37],[115,56,139,41,"REACT_NATIVE_VERSION"],[115,76,139,61],[115,77,139,62,"major"],[115,82,139,67],[115,85,139,70],[115,86,139,71],[116,6,140,10],[117,6,141,10,"ref"],[117,9,141,13],[117,10,141,14,"_reactInternals"],[117,25,141,29],[117,26,141,30,"elementType"],[117,37,141,41],[118,6,142,10],[119,6,143,10,"ref"],[119,9,143,13],[119,10,143,14,"_reactInternalFiber"],[119,29,143,33],[119,30,143,34,"elementType"],[119,41,143,45],[120,6,144,4],[121,6,145,4],[121,10,145,8,"instance"],[121,18,145,16],[121,21,146,6,"RNRenderer"],[121,43,146,16],[121,44,146,17,"findHostInstance_DEPRECATED"],[121,71,146,44],[121,72,147,8,"ref"],[121,75,148,6],[121,76,148,7],[121,77,148,8,"_internalFiberInstanceHandleDEV"],[121,108,148,39],[123,6,150,4],[124,6,151,4],[124,13,151,11,"instance"],[124,21,151,19],[124,25,151,23,"instance"],[124,33,151,31],[124,34,151,32,"elementType"],[124,45,151,43],[124,50,151,48,"wrapType"],[124,58,151,56],[124,60,151,58],[125,8,152,6],[126,8,153,6],[126,12,153,10,"instance"],[126,20,153,18],[126,21,153,19,"sibling"],[126,28,153,26],[126,30,153,28],[127,10,154,8],[127,16,154,14],[127,20,154,18,"Error"],[127,25,154,23],[127,26,155,10],[127,269,156,8],[127,270,156,9],[128,8,157,6],[130,8,159,6],[131,8,160,6,"instance"],[131,16,160,14],[131,19,160,17,"instance"],[131,27,160,25],[131,28,160,26,"return"],[131,34,160,32],[132,6,161,4],[133,4,162,2],[134,2,163,0],[135,2,165,7],[135,11,165,16,"useForceRender"],[135,25,165,30,"useForceRender"],[135,26,165,30],[135,28,165,33],[136,4,166,2],[136,8,166,2,"_useState"],[136,17,166,2],[136,20,166,40],[136,24,166,40,"useState"],[136,39,166,48],[136,41,166,49],[136,46,166,54],[136,47,166,55],[137,6,166,55,"_useState2"],[137,16,166,55],[137,23,166,55,"_slicedToArray2"],[137,38,166,55],[137,39,166,55,"default"],[137,46,166,55],[137,48,166,55,"_useState"],[137,57,166,55],[138,6,166,9,"renderState"],[138,17,166,20],[138,20,166,20,"_useState2"],[138,30,166,20],[139,6,166,22,"setRenderState"],[139,20,166,36],[139,23,166,36,"_useState2"],[139,33,166,36],[140,4,167,2],[140,8,167,8,"forceRender"],[140,19,167,19],[140,22,167,22],[140,26,167,22,"useCallback"],[140,44,167,33],[140,46,167,34],[140,58,167,40],[141,6,168,4,"setRenderState"],[141,20,168,18],[141,21,168,19],[141,22,168,20,"renderState"],[141,33,168,31],[141,34,168,32],[142,4,169,2],[142,5,169,3],[142,7,169,5],[142,8,169,6,"renderState"],[142,19,169,17],[142,21,169,19,"setRenderState"],[142,35,169,33],[142,36,169,34],[142,37,169,35],[143,4,171,2],[143,11,171,9,"forceRender"],[143,22,171,20],[144,2,172,0],[145,2,174,7],[145,11,174,16,"useWebEventHandlers"],[145,30,174,35,"useWebEventHandlers"],[145,31,174,35],[145,33,174,38],[146,4,175,2],[146,11,175,9],[146,15,175,9,"useRef"],[146,28,175,15],[146,30,175,33],[147,6,176,4,"onGestureHandlerEvent"],[147,27,176,25],[147,29,176,27],[147,38,176,4,"onGestureHandlerEvent"],[147,59,176,25,"onGestureHandlerEvent"],[147,60,176,28,"e"],[147,61,176,63],[147,63,176,68],[148,8,177,6],[148,12,177,6,"onGestureHandlerEvent"],[148,48,177,27],[148,50,177,28,"e"],[148,51,177,29],[148,52,177,30,"nativeEvent"],[148,63,177,41],[148,64,177,42],[149,6,178,4],[149,7,178,5],[150,6,179,4,"onGestureHandlerStateChange"],[150,33,179,31],[150,35,179,33],[150,39,179,33,"isNewWebImplementationEnabled"],[150,96,179,62],[150,98,179,63],[150,99,179,64],[150,102,180,8],[150,112,180,9,"e"],[150,113,180,44],[150,115,180,49],[151,8,181,10],[151,12,181,10,"onGestureHandlerEvent"],[151,48,181,31],[151,50,181,32,"e"],[151,51,181,33],[151,52,181,34,"nativeEvent"],[151,63,181,45],[151,64,181,46],[152,6,182,8],[152,7,182,9],[152,10,183,8,"undefined"],[153,4,184,2],[153,5,184,3],[153,6,184,4],[154,2,185,0],[155,0,185,1],[155,3]],"functionMap":{"names":["<global>","convertToHandlerTag","extractValidHandlerTags","interactionGroup.map.filter$argument_0","extractGestureRelations","checkGestureCallbacksForWorklets","validateDetectorChildren","useForceRender","forceRender","useWebEventHandlers","useRef$argument_0.onGestureHandlerEvent","<anonymous>"],"mappings":"AAA;ACuC;CDU;AEE;uDCE,gBD;CFE;OIE;CJY;OKE;CLsC;OMG;CNkD;OOE;kCCE;GDE;CPG;OSE;2BCE;KDE;QEE;SFE;CTG"}},"type":"js/module"}]}