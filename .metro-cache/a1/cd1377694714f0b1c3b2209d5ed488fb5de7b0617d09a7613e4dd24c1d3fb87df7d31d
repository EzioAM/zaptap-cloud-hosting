{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./ExpoSMS","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":67},"end":{"line":2,"column":32,"index":99}}],"key":"ASTzgHkUNMXHoQ3+33X/d6QBjLk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isAvailableAsync = isAvailableAsync;\n  exports.sendSMSAsync = sendSMSAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _expoModulesCore = require(_dependencyMap[2]);\n  var _ExpoSMS = _interopRequireDefault(require(_dependencyMap[3]));\n  function processAttachments(attachments) {\n    if (!attachments) {\n      return null;\n    }\n    attachments = Array.isArray(attachments) ? attachments : [attachments];\n    if (attachments.length > 1) {\n      attachments = attachments.slice(0, 1);\n    }\n    return attachments;\n  }\n  // @needsAudit\n  /**\n   * Opens the default UI/app for sending SMS messages with prefilled addresses and message.\n   *\n   * @param addresses An array of addresses (phone numbers) or single address passed as strings. Those\n   * would appear as recipients of the prepared message.\n   * @param message Message to be sent.\n   * @param options A `SMSOptions` object defining additional SMS configuration options.\n   *\n   * @return Returns a Promise that fulfils with the SMS action is invoked by the user, with corresponding result:\n   * - If the user cancelled the SMS sending process: `{ result: 'cancelled' }`.\n   * - If the user has sent/scheduled message for sending: `{ result: 'sent' }`.\n   * - If the status of the SMS message cannot be determined: `{ result: 'unknown' }`.\n   *\n   * Android does not provide information about the status of the SMS message, so on Android devices\n   * the Promise will always resolve with `{ result: 'unknown' }`.\n   *\n   * > Note: The only feedback collected by this module is whether any message has been sent. That\n   * means we do not check actual content of message nor recipients list.\n   *\n   * @example\n   * ```ts\n   * const { result } = await SMS.sendSMSAsync(\n   *   ['0123456789', '9876543210'],\n   *   'My sample HelloWorld message',\n   *   {\n   *     attachments: {\n   *       uri: 'path/myfile.png',\n   *       mimeType: 'image/png',\n   *       filename: 'myfile.png',\n   *     },\n   *   }\n   * );\n   * ```\n   */\n  function sendSMSAsync(_x, _x2, _x3) {\n    return _sendSMSAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Determines whether SMS is available. Always returns `false` in the iOS simulator, and in browser.\n   *\n   * @return Returns a promise that fulfils with a `boolean`, indicating whether SMS is available on this device.\n   *\n   * @example\n   * ```ts\n   * const isAvailable = await SMS.isAvailableAsync();\n   * if (isAvailable) {\n   *   // do your SMS stuff here\n   * } else {\n   *   // misfortune... there's no SMS available on this device\n   * }\n   * ```\n   */\n  function _sendSMSAsync() {\n    _sendSMSAsync = (0, _asyncToGenerator2.default)(function* (addresses, message, options) {\n      if (!_ExpoSMS.default.sendSMSAsync) {\n        throw new _expoModulesCore.UnavailabilityError('expo-sms', 'sendSMSAsync');\n      }\n      var finalAddresses = Array.isArray(addresses) ? addresses : [addresses];\n      finalAddresses.forEach(address => {\n        if (address === null || address === undefined) {\n          throw new TypeError('undefined or null address');\n        }\n      });\n      var finalOptions = {\n        ...options\n      };\n      if (options?.attachments) {\n        finalOptions.attachments = processAttachments(options?.attachments) || undefined;\n      }\n      return _ExpoSMS.default.sendSMSAsync(finalAddresses, message, finalOptions);\n    });\n    return _sendSMSAsync.apply(this, arguments);\n  }\n  function isAvailableAsync() {\n    return _isAvailableAsync.apply(this, arguments);\n  }\n  function _isAvailableAsync() {\n    _isAvailableAsync = (0, _asyncToGenerator2.default)(function* () {\n      return _ExpoSMS.default.isAvailableAsync?.() ?? false;\n    });\n    return _isAvailableAsync.apply(this, arguments);\n  }\n});","lineCount":104,"map":[[9,2,1,0],[9,6,1,0,"_expoModulesCore"],[9,22,1,0],[9,25,1,0,"require"],[9,32,1,0],[9,33,1,0,"_dependencyMap"],[9,47,1,0],[10,2,2,0],[10,6,2,0,"_ExpoSMS"],[10,14,2,0],[10,17,2,0,"_interopRequireDefault"],[10,39,2,0],[10,40,2,0,"require"],[10,47,2,0],[10,48,2,0,"_dependencyMap"],[10,62,2,0],[11,2,3,0],[11,11,3,9,"processAttachments"],[11,29,3,27,"processAttachments"],[11,30,3,28,"attachments"],[11,41,3,39],[11,43,3,41],[12,4,4,4],[12,8,4,8],[12,9,4,9,"attachments"],[12,20,4,20],[12,22,4,22],[13,6,5,8],[13,13,5,15],[13,17,5,19],[14,4,6,4],[15,4,7,4,"attachments"],[15,15,7,15],[15,18,7,18,"Array"],[15,23,7,23],[15,24,7,24,"isArray"],[15,31,7,31],[15,32,7,32,"attachments"],[15,43,7,43],[15,44,7,44],[15,47,7,47,"attachments"],[15,58,7,58],[15,61,7,61],[15,62,7,62,"attachments"],[15,73,7,73],[15,74,7,74],[16,4,8,4],[16,8,8,37,"attachments"],[16,19,8,48],[16,20,8,49,"length"],[16,26,8,55],[16,29,8,58],[16,30,8,59],[16,32,8,61],[17,6,12,8,"attachments"],[17,17,12,19],[17,20,12,22,"attachments"],[17,31,12,33],[17,32,12,34,"slice"],[17,37,12,39],[17,38,12,40],[17,39,12,41],[17,41,12,43],[17,42,12,44],[17,43,12,45],[18,4,13,4],[19,4,14,4],[19,11,14,11,"attachments"],[19,22,14,22],[20,2,15,0],[21,2,16,0],[22,2,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,0,40,0],[46,0,41,0],[47,0,42,0],[48,0,43,0],[49,0,44,0],[50,0,45,0],[51,0,46,0],[52,0,47,0],[53,0,48,0],[54,0,49,0],[55,0,50,0],[56,2,17,0],[56,11,51,22,"sendSMSAsync"],[56,23,51,34,"sendSMSAsync"],[56,24,51,34,"_x"],[56,26,51,34],[56,28,51,34,"_x2"],[56,31,51,34],[56,33,51,34,"_x3"],[56,36,51,34],[57,4,51,34],[57,11,51,34,"_sendSMSAsync"],[57,24,51,34],[57,25,51,34,"apply"],[57,30,51,34],[57,37,51,34,"arguments"],[57,46,51,34],[58,2,51,34],[58,4,69,0],[59,2,70,0],[60,0,71,0],[61,0,72,0],[62,0,73,0],[63,0,74,0],[64,0,75,0],[65,0,76,0],[66,0,77,0],[67,0,78,0],[68,0,79,0],[69,0,80,0],[70,0,81,0],[71,0,82,0],[72,0,83,0],[73,0,84,0],[74,2,70,0],[74,11,70,0,"_sendSMSAsync"],[74,25,70,0],[75,4,70,0,"_sendSMSAsync"],[75,17,70,0],[75,24,70,0,"_asyncToGenerator2"],[75,42,70,0],[75,43,70,0,"default"],[75,50,70,0],[75,52,51,7],[75,63,51,35,"addresses"],[75,72,51,44],[75,74,51,46,"message"],[75,81,51,53],[75,83,51,55,"options"],[75,90,51,62],[75,92,51,64],[76,6,52,4],[76,10,52,8],[76,11,52,9,"ExpoSMS"],[76,27,52,16],[76,28,52,17,"sendSMSAsync"],[76,40,52,29],[76,42,52,31],[77,8,53,8],[77,14,53,14],[77,18,53,18,"UnavailabilityError"],[77,54,53,37],[77,55,53,38],[77,65,53,48],[77,67,53,50],[77,81,53,64],[77,82,53,65],[78,6,54,4],[79,6,55,4],[79,10,55,10,"finalAddresses"],[79,24,55,24],[79,27,55,27,"Array"],[79,32,55,32],[79,33,55,33,"isArray"],[79,40,55,40],[79,41,55,41,"addresses"],[79,50,55,50],[79,51,55,51],[79,54,55,54,"addresses"],[79,63,55,63],[79,66,55,66],[79,67,55,67,"addresses"],[79,76,55,76],[79,77,55,77],[80,6,56,4,"finalAddresses"],[80,20,56,18],[80,21,56,19,"forEach"],[80,28,56,26],[80,29,56,28,"address"],[80,36,56,35],[80,40,56,40],[81,8,57,8],[81,12,57,12,"address"],[81,19,57,19],[81,24,57,24],[81,28,57,28],[81,32,57,32,"address"],[81,39,57,39],[81,44,57,44,"undefined"],[81,53,57,53],[81,55,57,55],[82,10,58,12],[82,16,58,18],[82,20,58,22,"TypeError"],[82,29,58,31],[82,30,58,32],[82,57,58,59],[82,58,58,60],[83,8,59,8],[84,6,60,4],[84,7,60,5],[84,8,60,6],[85,6,61,4],[85,10,61,10,"finalOptions"],[85,22,61,22],[85,25,61,25],[86,8,62,8],[86,11,62,11,"options"],[87,6,63,4],[87,7,63,5],[88,6,64,4],[88,10,64,8,"options"],[88,17,64,15],[88,19,64,17,"attachments"],[88,30,64,28],[88,32,64,30],[89,8,65,8,"finalOptions"],[89,20,65,20],[89,21,65,21,"attachments"],[89,32,65,32],[89,35,65,35,"processAttachments"],[89,53,65,53],[89,54,65,54,"options"],[89,61,65,61],[89,63,65,63,"attachments"],[89,74,65,74],[89,75,65,75],[89,79,65,79,"undefined"],[89,88,65,88],[90,6,66,4],[91,6,67,4],[91,13,67,11,"ExpoSMS"],[91,29,67,18],[91,30,67,19,"sendSMSAsync"],[91,42,67,31],[91,43,67,32,"finalAddresses"],[91,57,67,46],[91,59,67,48,"message"],[91,66,67,55],[91,68,67,57,"finalOptions"],[91,80,67,69],[91,81,67,70],[92,4,68,0],[92,5,68,1],[93,4,68,1],[93,11,68,1,"_sendSMSAsync"],[93,24,68,1],[93,25,68,1,"apply"],[93,30,68,1],[93,37,68,1,"arguments"],[93,46,68,1],[94,2,68,1],[95,2,68,1],[95,11,85,22,"isAvailableAsync"],[95,27,85,38,"isAvailableAsync"],[95,28,85,38],[96,4,85,38],[96,11,85,38,"_isAvailableAsync"],[96,28,85,38],[96,29,85,38,"apply"],[96,34,85,38],[96,41,85,38,"arguments"],[96,50,85,38],[97,2,85,38],[98,2,85,38],[98,11,85,38,"_isAvailableAsync"],[98,29,85,38],[99,4,85,38,"_isAvailableAsync"],[99,21,85,38],[99,28,85,38,"_asyncToGenerator2"],[99,46,85,38],[99,47,85,38,"default"],[99,54,85,38],[99,56,85,7],[99,69,85,41],[100,6,86,4],[100,13,86,11,"ExpoSMS"],[100,29,86,18],[100,30,86,19,"isAvailableAsync"],[100,46,86,35],[100,49,86,38],[100,50,86,39],[100,54,86,43],[100,59,86,48],[101,4,87,0],[101,5,87,1],[102,4,87,1],[102,11,87,1,"_isAvailableAsync"],[102,28,87,1],[102,29,87,1,"apply"],[102,34,87,1],[102,41,87,1,"arguments"],[102,50,87,1],[103,2,87,1],[104,0,87,1],[104,3]],"functionMap":{"names":["<global>","processAttachments","sendSMSAsync","finalAddresses.forEach$argument_0","isAvailableAsync"],"mappings":"AAA;ACE;CDY;OEoC;2BCK;KDI;CFQ;OIiB;CJE"}},"type":"js/module"}]}