{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"../supabase/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"q3G/dBcB/lyqe2ZqsudXc9dkd4E=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":54,"index":101}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.CommentsService = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _client = require(_dependencyMap[4], \"../supabase/client\");\n  var _EventLogger = require(_dependencyMap[5], \"../../utils/EventLogger\");\n  var CommentsService = exports.CommentsService = /*#__PURE__*/function () {\n    function CommentsService() {\n      (0, _classCallCheck2.default)(this, CommentsService);\n    }\n    return (0, _createClass2.default)(CommentsService, null, [{\n      key: \"getComments\",\n      value: (\n      /**\n       * Get all comments for an automation\n       */\n      function () {\n        var _getComments = (0, _asyncToGenerator2.default)(function* (automationId) {\n          try {\n            var _yield$supabase$from$ = yield _client.supabase.from('automation_comments').select(`\n          *,\n          profiles:user_id(display_name, email, avatar_url)\n        `).eq('automation_id', automationId).order('created_at', {\n                ascending: false\n              }),\n              comments = _yield$supabase$from$.data,\n              error = _yield$supabase$from$.error;\n            if (error) throw error;\n\n            // Structure comments with replies\n            var commentsMap = new Map();\n            var rootComments = [];\n\n            // First pass: create all comment objects\n            comments == null || comments.forEach(function (comment) {\n              var commentObj = Object.assign({}, comment, {\n                user: comment.profiles,\n                replies: []\n              });\n              commentsMap.set(comment.id, commentObj);\n            });\n\n            // Second pass: organize into threads\n            commentsMap.forEach(function (comment) {\n              if (comment.parent_comment_id) {\n                // This is a reply\n                var parent = commentsMap.get(comment.parent_comment_id);\n                if (parent) {\n                  parent.replies = parent.replies || [];\n                  parent.replies.push(comment);\n                }\n              } else {\n                // This is a root comment\n                rootComments.push(comment);\n              }\n            });\n\n            // Sort replies by creation date (oldest first for conversation flow)\n            rootComments.forEach(function (comment) {\n              if (comment.replies) {\n                comment.replies.sort(function (a, b) {\n                  return new Date(a.created_at).getTime() - new Date(b.created_at).getTime();\n                });\n              }\n            });\n\n            // Check if current user liked each comment\n            var _yield$supabase$auth$ = yield _client.supabase.auth.getUser(),\n              user = _yield$supabase$auth$.data.user;\n            if (user) {\n              yield this.markUserLikes(rootComments, user.id);\n            }\n            return rootComments;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Comments', 'Failed to get comments:', error);\n            return [];\n          }\n        });\n        function getComments(_x) {\n          return _getComments.apply(this, arguments);\n        }\n        return getComments;\n      }()\n      /**\n       * Add user like information to comments\n       */\n      )\n    }, {\n      key: \"markUserLikes\",\n      value: (function () {\n        var _markUserLikes = (0, _asyncToGenerator2.default)(function* (comments, userId) {\n          try {\n            var allCommentIds = [];\n            var _collectCommentIds = function collectCommentIds(comments) {\n              comments.forEach(function (comment) {\n                allCommentIds.push(comment.id);\n                if (comment.replies) {\n                  _collectCommentIds(comment.replies);\n                }\n              });\n            };\n            _collectCommentIds(comments);\n            if (allCommentIds.length === 0) return;\n            var _yield$supabase$from$2 = yield _client.supabase.from('comment_likes').select('comment_id').eq('user_id', userId).in('comment_id', allCommentIds),\n              likes = _yield$supabase$from$2.data;\n            var likedCommentIds = new Set((likes == null ? void 0 : likes.map(function (like) {\n              return like.comment_id;\n            })) || []);\n            var _markLikes = function markLikes(comments) {\n              comments.forEach(function (comment) {\n                comment.is_liked_by_user = likedCommentIds.has(comment.id);\n                if (comment.replies) {\n                  _markLikes(comment.replies);\n                }\n              });\n            };\n            _markLikes(comments);\n          } catch (error) {\n            _EventLogger.EventLogger.error('Comments', 'Failed to mark user likes:', error);\n          }\n        });\n        function markUserLikes(_x2, _x3) {\n          return _markUserLikes.apply(this, arguments);\n        }\n        return markUserLikes;\n      }()\n      /**\n       * Add a new comment\n       */\n      )\n    }, {\n      key: \"addComment\",\n      value: (function () {\n        var _addComment = (0, _asyncToGenerator2.default)(function* (automationId, content, parentCommentId) {\n          try {\n            var _yield$supabase$auth$2 = yield _client.supabase.auth.getUser(),\n              user = _yield$supabase$auth$2.data.user,\n              authError = _yield$supabase$auth$2.error;\n            if (authError) {\n              throw new Error(`Authentication error: ${authError.message}`);\n            }\n            if (!user) {\n              throw new Error('User not authenticated. Please log in to comment.');\n            }\n\n            // Check if the automation is public\n            var _yield$supabase$from$3 = yield _client.supabase.from('automations').select('is_public').eq('id', automationId).single(),\n              automation = _yield$supabase$from$3.data,\n              automationError = _yield$supabase$from$3.error;\n            if (automationError) {\n              _EventLogger.EventLogger.error('Comments', 'Automation check error:', automationError);\n              throw new Error('Could not verify automation. It might not exist.');\n            }\n            if (!(automation != null && automation.is_public)) {\n              throw new Error('Comments are only allowed on public automations.');\n            }\n            var commentData = {\n              automation_id: automationId,\n              parent_comment_id: parentCommentId || null,\n              user_id: user.id,\n              content: content.trim()\n            };\n            _EventLogger.EventLogger.debug('Comments', 'Attempting to insert comment:', commentData);\n            var _yield$supabase$from$4 = yield _client.supabase.from('automation_comments').insert(commentData).select(`\n          *,\n          profiles:user_id(display_name, email, avatar_url)\n        `).single(),\n              data = _yield$supabase$from$4.data,\n              error = _yield$supabase$from$4.error;\n            if (error) {\n              var _error$message;\n              _EventLogger.EventLogger.error('Comments', 'Insert error details:', error);\n              if (error.code === '42P01') {\n                throw new Error('Comments table does not exist. Please run the database setup script.');\n              } else if (error.code === '42501') {\n                throw new Error('Permission denied. Check Row Level Security policies.');\n              } else if ((_error$message = error.message) != null && _error$message.includes('profiles')) {\n                throw new Error('User profile not found. Please complete your profile setup.');\n              }\n              throw new Error(`Database error: ${error.message}`);\n            }\n            if (!data) {\n              throw new Error('Comment was not created. Please try again.');\n            }\n            return Object.assign({}, data, {\n              user: data.profiles || {\n                display_name: 'Anonymous',\n                email: user.email\n              },\n              replies: [],\n              is_liked_by_user: false\n            });\n          } catch (error) {\n            _EventLogger.EventLogger.error('Comments', 'Failed to add comment:', error);\n            throw error; // Re-throw to let the UI handle it\n          }\n        });\n        function addComment(_x4, _x5, _x6) {\n          return _addComment.apply(this, arguments);\n        }\n        return addComment;\n      }()\n      /**\n       * Update a comment\n       */\n      )\n    }, {\n      key: \"updateComment\",\n      value: (function () {\n        var _updateComment = (0, _asyncToGenerator2.default)(function* (commentId, content) {\n          try {\n            var _yield$supabase$auth$3 = yield _client.supabase.auth.getUser(),\n              user = _yield$supabase$auth$3.data.user;\n            if (!user) throw new Error('User not authenticated');\n            var _yield$supabase$from$5 = yield _client.supabase.from('automation_comments').update({\n                content: content.trim(),\n                is_edited: true,\n                updated_at: new Date().toISOString()\n              }).eq('id', commentId).eq('user_id', user.id),\n              error = _yield$supabase$from$5.error; // Only allow users to edit their own comments\n\n            if (error) throw error;\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Comments', 'Failed to update comment:', error);\n            return false;\n          }\n        });\n        function updateComment(_x7, _x8) {\n          return _updateComment.apply(this, arguments);\n        }\n        return updateComment;\n      }()\n      /**\n       * Delete a comment\n       */\n      )\n    }, {\n      key: \"deleteComment\",\n      value: (function () {\n        var _deleteComment = (0, _asyncToGenerator2.default)(function* (commentId) {\n          try {\n            var _yield$supabase$auth$4 = yield _client.supabase.auth.getUser(),\n              user = _yield$supabase$auth$4.data.user;\n            if (!user) throw new Error('User not authenticated');\n            var _yield$supabase$from$6 = yield _client.supabase.from('automation_comments').delete().eq('id', commentId).eq('user_id', user.id),\n              error = _yield$supabase$from$6.error; // Only allow users to delete their own comments\n\n            if (error) throw error;\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Comments', 'Failed to delete comment:', error);\n            return false;\n          }\n        });\n        function deleteComment(_x9) {\n          return _deleteComment.apply(this, arguments);\n        }\n        return deleteComment;\n      }()\n      /**\n       * Like/unlike a comment\n       */\n      )\n    }, {\n      key: \"toggleCommentLike\",\n      value: (function () {\n        var _toggleCommentLike = (0, _asyncToGenerator2.default)(function* (commentId) {\n          try {\n            var _yield$supabase$auth$5 = yield _client.supabase.auth.getUser(),\n              user = _yield$supabase$auth$5.data.user;\n            if (!user) throw new Error('User not authenticated');\n\n            // Check if user already liked this comment\n            var _yield$supabase$from$7 = yield _client.supabase.from('comment_likes').select('id').eq('comment_id', commentId).eq('user_id', user.id).single(),\n              existingLike = _yield$supabase$from$7.data;\n            if (existingLike) {\n              // Unlike\n              var _yield$supabase$from$8 = yield _client.supabase.from('comment_likes').delete().eq('comment_id', commentId).eq('user_id', user.id),\n                error = _yield$supabase$from$8.error;\n              if (error) throw error;\n              return false; // Unliked\n            } else {\n              // Like\n              var _yield$supabase$from$9 = yield _client.supabase.from('comment_likes').insert({\n                  comment_id: commentId,\n                  user_id: user.id\n                }),\n                _error = _yield$supabase$from$9.error;\n              if (_error) throw _error;\n              return true; // Liked\n            }\n          } catch (error) {\n            _EventLogger.EventLogger.error('Comments', 'Failed to toggle comment like:', error);\n            return false;\n          }\n        });\n        function toggleCommentLike(_x0) {\n          return _toggleCommentLike.apply(this, arguments);\n        }\n        return toggleCommentLike;\n      }()\n      /**\n       * Pin/unpin a comment (for automation owners)\n       */\n      )\n    }, {\n      key: \"toggleCommentPin\",\n      value: (function () {\n        var _toggleCommentPin = (0, _asyncToGenerator2.default)(function* (commentId, automationId) {\n          try {\n            var _yield$supabase$auth$6 = yield _client.supabase.auth.getUser(),\n              user = _yield$supabase$auth$6.data.user;\n            if (!user) throw new Error('User not authenticated');\n\n            // Check if user owns the automation\n            var _yield$supabase$from$0 = yield _client.supabase.from('automations').select('created_by').eq('id', automationId).single(),\n              automation = _yield$supabase$from$0.data;\n            if (!automation || automation.created_by !== user.id) {\n              throw new Error('Only automation owners can pin comments');\n            }\n\n            // Get current pin status\n            var _yield$supabase$from$1 = yield _client.supabase.from('automation_comments').select('is_pinned').eq('id', commentId).single(),\n              comment = _yield$supabase$from$1.data;\n            if (!comment) throw new Error('Comment not found');\n\n            // Toggle pin status\n            var _yield$supabase$from$10 = yield _client.supabase.from('automation_comments').update({\n                is_pinned: !comment.is_pinned\n              }).eq('id', commentId),\n              error = _yield$supabase$from$10.error;\n            if (error) throw error;\n            return !comment.is_pinned;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Comments', 'Failed to toggle comment pin:', error);\n            return false;\n          }\n        });\n        function toggleCommentPin(_x1, _x10) {\n          return _toggleCommentPin.apply(this, arguments);\n        }\n        return toggleCommentPin;\n      }()\n      /**\n       * Get comment statistics for an automation\n       */\n      )\n    }, {\n      key: \"getCommentStats\",\n      value: (function () {\n        var _getCommentStats = (0, _asyncToGenerator2.default)(function* (automationId) {\n          try {\n            var _yield$supabase$from$11 = yield _client.supabase.from('automation_comments').select('id, user_id, parent_comment_id, likes_count, created_at').eq('automation_id', automationId),\n              comments = _yield$supabase$from$11.data,\n              error = _yield$supabase$from$11.error;\n            if (error) throw error;\n            var totalComments = (comments == null ? void 0 : comments.length) || 0;\n            var totalReplies = (comments == null ? void 0 : comments.filter(function (c) {\n              return c.parent_comment_id !== null;\n            }).length) || 0;\n            var uniqueCommenters = new Set(comments == null ? void 0 : comments.map(function (c) {\n              return c.user_id;\n            })).size;\n            var totalLikes = (comments == null ? void 0 : comments.reduce(function (sum, c) {\n              return sum + c.likes_count;\n            }, 0)) || 0;\n            var averageLikes = totalComments > 0 ? Math.round(totalLikes / totalComments * 100) / 100 : 0;\n\n            // Find most liked comment\n            var mostLikedComment = null;\n            if (comments && comments.length > 0) {\n              var mostLiked = comments.reduce(function (max, comment) {\n                return comment.likes_count > max.likes_count ? comment : max;\n              });\n              if (mostLiked.likes_count > 0) {\n                // Fetch full comment details\n                var _yield$supabase$from$12 = yield _client.supabase.from('automation_comments').select(`\n              *,\n              profiles:user_id(display_name, email, avatar_url)\n            `).eq('id', mostLiked.id).single(),\n                  fullComment = _yield$supabase$from$12.data;\n                if (fullComment) {\n                  mostLikedComment = Object.assign({}, fullComment, {\n                    user: fullComment.profiles,\n                    replies: []\n                  });\n                }\n              }\n            }\n            var recentActivity = comments && comments.length > 0 ? comments.sort(function (a, b) {\n              return new Date(b.created_at).getTime() - new Date(a.created_at).getTime();\n            })[0].created_at : null;\n            return {\n              total_comments: totalComments - totalReplies,\n              // Root comments only\n              total_replies: totalReplies,\n              unique_commenters: uniqueCommenters,\n              average_likes_per_comment: averageLikes,\n              most_liked_comment: mostLikedComment,\n              recent_activity: recentActivity\n            };\n          } catch (error) {\n            _EventLogger.EventLogger.error('Comments', 'Failed to get comment stats:', error);\n            return {\n              total_comments: 0,\n              total_replies: 0,\n              unique_commenters: 0,\n              average_likes_per_comment: 0,\n              most_liked_comment: null,\n              recent_activity: null\n            };\n          }\n        });\n        function getCommentStats(_x11) {\n          return _getCommentStats.apply(this, arguments);\n        }\n        return getCommentStats;\n      }()\n      /**\n       * Report a comment for moderation\n       */\n      )\n    }, {\n      key: \"reportComment\",\n      value: (function () {\n        var _reportComment = (0, _asyncToGenerator2.default)(function* (commentId, reason) {\n          try {\n            var _yield$supabase$auth$7 = yield _client.supabase.auth.getUser(),\n              user = _yield$supabase$auth$7.data.user;\n            if (!user) throw new Error('User not authenticated');\n\n            // Log the report (you might want a separate reports table)\n            _EventLogger.EventLogger.debug('Comments', 'Comment reported:', {\n              commentId: commentId,\n              reason: reason,\n              reportedBy: user.id\n            });\n\n            // For now, just log it. In a real app, you'd insert into a reports table\n            return true;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Comments', 'Failed to report comment:', error);\n            return false;\n          }\n        });\n        function reportComment(_x12, _x13) {\n          return _reportComment.apply(this, arguments);\n        }\n        return reportComment;\n      }())\n    }]);\n  }();\n});","lineCount":459,"map":[[10,2,1,0],[10,6,1,0,"_client"],[10,13,1,0],[10,16,1,0,"require"],[10,23,1,0],[10,24,1,0,"_dependencyMap"],[10,38,1,0],[11,2,2,0],[11,6,2,0,"_EventLogger"],[11,18,2,0],[11,21,2,0,"require"],[11,28,2,0],[11,29,2,0,"_dependencyMap"],[11,43,2,0],[12,2,2,54],[12,6,33,13,"CommentsService"],[12,21,33,28],[12,24,33,28,"exports"],[12,31,33,28],[12,32,33,28,"CommentsService"],[12,47,33,28],[13,4,33,28],[13,13,33,28,"CommentsService"],[13,29,33,28],[14,6,33,28],[14,10,33,28,"_classCallCheck2"],[14,26,33,28],[14,27,33,28,"default"],[14,34,33,28],[14,42,33,28,"CommentsService"],[14,57,33,28],[15,4,33,28],[16,4,33,28],[16,15,33,28,"_createClass2"],[16,28,33,28],[16,29,33,28,"default"],[16,36,33,28],[16,38,33,28,"CommentsService"],[16,53,33,28],[17,6,33,28,"key"],[17,9,33,28],[18,6,33,28,"value"],[18,11,33,28],[19,6,34,2],[20,0,35,0],[21,0,36,0],[22,6,34,2],[23,8,34,2],[23,12,34,2,"_getComments"],[23,24,34,2],[23,31,34,2,"_asyncToGenerator2"],[23,49,34,2],[23,50,34,2,"default"],[23,57,34,2],[23,59,37,2],[23,70,37,27,"automationId"],[23,82,37,47],[23,84,37,79],[24,10,38,4],[24,14,38,8],[25,12,39,6],[25,16,39,6,"_yield$supabase$from$"],[25,37,39,6],[25,46,39,46,"supabase"],[25,62,39,54],[25,63,40,9,"from"],[25,67,40,13],[25,68,40,14],[25,89,40,35],[25,90,40,36],[25,91,41,9,"select"],[25,97,41,15],[25,98,41,16],[26,0,42,0],[27,0,43,0],[28,0,44,0],[28,9,44,9],[28,10,44,10],[28,11,45,9,"eq"],[28,13,45,11],[28,14,45,12],[28,29,45,27],[28,31,45,29,"automationId"],[28,43,45,41],[28,44,45,42],[28,45,46,9,"order"],[28,50,46,14],[28,51,46,15],[28,63,46,27],[28,65,46,29],[29,16,46,31,"ascending"],[29,25,46,40],[29,27,46,42],[30,14,46,48],[30,15,46,49],[30,16,46,50],[31,14,39,20,"comments"],[31,22,39,28],[31,25,39,28,"_yield$supabase$from$"],[31,46,39,28],[31,47,39,14,"data"],[31,51,39,18],[32,14,39,30,"error"],[32,19,39,35],[32,22,39,35,"_yield$supabase$from$"],[32,43,39,35],[32,44,39,30,"error"],[32,49,39,35],[33,12,48,6],[33,16,48,10,"error"],[33,21,48,15],[33,23,48,17],[33,29,48,23,"error"],[33,34,48,28],[35,12,50,6],[36,12,51,6],[36,16,51,12,"commentsMap"],[36,27,51,23],[36,30,51,26],[36,34,51,30,"Map"],[36,37,51,33],[36,38,51,61],[36,39,51,62],[37,12,52,6],[37,16,52,12,"rootComments"],[37,28,52,45],[37,31,52,48],[37,33,52,50],[39,12,54,6],[40,12,55,6,"comments"],[40,20,55,14],[40,32,55,6,"comments"],[40,40,55,14],[40,41,55,16,"forEach"],[40,48,55,23],[40,49,55,24],[40,59,55,24,"comment"],[40,66,55,31],[40,68,55,35],[41,14,56,8],[41,18,56,14,"commentObj"],[41,28,56,43],[41,31,56,43,"Object"],[41,37,56,43],[41,38,56,43,"assign"],[41,44,56,43],[41,49,57,13,"comment"],[41,56,57,20],[42,16,58,10,"user"],[42,20,58,14],[42,22,58,16,"comment"],[42,29,58,23],[42,30,58,24,"profiles"],[42,38,58,32],[43,16,59,10,"replies"],[43,23,59,17],[43,25,59,19],[44,14,59,21],[44,16,60,9],[45,14,61,8,"commentsMap"],[45,25,61,19],[45,26,61,20,"set"],[45,29,61,23],[45,30,61,24,"comment"],[45,37,61,31],[45,38,61,32,"id"],[45,40,61,34],[45,42,61,36,"commentObj"],[45,52,61,46],[45,53,61,47],[46,12,62,6],[46,13,62,7],[46,14,62,8],[48,12,64,6],[49,12,65,6,"commentsMap"],[49,23,65,17],[49,24,65,18,"forEach"],[49,31,65,25],[49,32,65,26],[49,42,65,26,"comment"],[49,49,65,33],[49,51,65,37],[50,14,66,8],[50,18,66,12,"comment"],[50,25,66,19],[50,26,66,20,"parent_comment_id"],[50,43,66,37],[50,45,66,39],[51,16,67,10],[52,16,68,10],[52,20,68,16,"parent"],[52,26,68,22],[52,29,68,25,"commentsMap"],[52,40,68,36],[52,41,68,37,"get"],[52,44,68,40],[52,45,68,41,"comment"],[52,52,68,48],[52,53,68,49,"parent_comment_id"],[52,70,68,66],[52,71,68,67],[53,16,69,10],[53,20,69,14,"parent"],[53,26,69,20],[53,28,69,22],[54,18,70,12,"parent"],[54,24,70,18],[54,25,70,19,"replies"],[54,32,70,26],[54,35,70,29,"parent"],[54,41,70,35],[54,42,70,36,"replies"],[54,49,70,43],[54,53,70,47],[54,55,70,49],[55,18,71,12,"parent"],[55,24,71,18],[55,25,71,19,"replies"],[55,32,71,26],[55,33,71,27,"push"],[55,37,71,31],[55,38,71,32,"comment"],[55,45,71,39],[55,46,71,40],[56,16,72,10],[57,14,73,8],[57,15,73,9],[57,21,73,15],[58,16,74,10],[59,16,75,10,"rootComments"],[59,28,75,22],[59,29,75,23,"push"],[59,33,75,27],[59,34,75,28,"comment"],[59,41,75,35],[59,42,75,36],[60,14,76,8],[61,12,77,6],[61,13,77,7],[61,14,77,8],[63,12,79,6],[64,12,80,6,"rootComments"],[64,24,80,18],[64,25,80,19,"forEach"],[64,32,80,26],[64,33,80,27],[64,43,80,27,"comment"],[64,50,80,34],[64,52,80,38],[65,14,81,8],[65,18,81,12,"comment"],[65,25,81,19],[65,26,81,20,"replies"],[65,33,81,27],[65,35,81,29],[66,16,82,10,"comment"],[66,23,82,17],[66,24,82,18,"replies"],[66,31,82,25],[66,32,82,26,"sort"],[66,36,82,30],[66,37,82,31],[66,47,82,32,"a"],[66,48,82,33],[66,50,82,35,"b"],[66,51,82,36],[67,18,82,36],[67,25,82,41],[67,29,82,45,"Date"],[67,33,82,49],[67,34,82,50,"a"],[67,35,82,51],[67,36,82,52,"created_at"],[67,46,82,62],[67,47,82,63],[67,48,82,64,"getTime"],[67,55,82,71],[67,56,82,72],[67,57,82,73],[67,60,82,76],[67,64,82,80,"Date"],[67,68,82,84],[67,69,82,85,"b"],[67,70,82,86],[67,71,82,87,"created_at"],[67,81,82,97],[67,82,82,98],[67,83,82,99,"getTime"],[67,90,82,106],[67,91,82,107],[67,92,82,108],[68,16,82,108],[68,18,82,109],[69,14,83,8],[70,12,84,6],[70,13,84,7],[70,14,84,8],[72,12,86,6],[73,12,87,6],[73,16,87,6,"_yield$supabase$auth$"],[73,37,87,6],[73,46,87,39,"supabase"],[73,62,87,47],[73,63,87,48,"auth"],[73,67,87,52],[73,68,87,53,"getUser"],[73,75,87,60],[73,76,87,61],[73,77,87,62],[74,14,87,22,"user"],[74,18,87,26],[74,21,87,26,"_yield$supabase$auth$"],[74,42,87,26],[74,43,87,14,"data"],[74,47,87,18],[74,48,87,22,"user"],[74,52,87,26],[75,12,88,6],[75,16,88,10,"user"],[75,20,88,14],[75,22,88,16],[76,14,89,8],[76,20,89,14],[76,24,89,18],[76,25,89,19,"markUserLikes"],[76,38,89,32],[76,39,89,33,"rootComments"],[76,51,89,45],[76,53,89,47,"user"],[76,57,89,51],[76,58,89,52,"id"],[76,60,89,54],[76,61,89,55],[77,12,90,6],[78,12,92,6],[78,19,92,13,"rootComments"],[78,31,92,25],[79,10,93,4],[79,11,93,5],[79,12,93,6],[79,19,93,13,"error"],[79,24,93,18],[79,26,93,20],[80,12,94,6,"EventLogger"],[80,36,94,17],[80,37,94,18,"error"],[80,42,94,23],[80,43,94,24],[80,53,94,34],[80,55,94,36],[80,80,94,61],[80,82,94,63,"error"],[80,87,94,77],[80,88,94,78],[81,12,95,6],[81,19,95,13],[81,21,95,15],[82,10,96,4],[83,8,97,2],[83,9,97,3],[84,8,97,3],[84,17,37,15,"getComments"],[84,28,37,26,"getComments"],[84,29,37,26,"_x"],[84,31,37,26],[85,10,37,26],[85,17,37,26,"_getComments"],[85,29,37,26],[85,30,37,26,"apply"],[85,35,37,26],[85,42,37,26,"arguments"],[85,51,37,26],[86,8,37,26],[87,8,37,26],[87,15,37,15,"getComments"],[87,26,37,26],[88,6,37,26],[89,6,99,2],[90,0,100,0],[91,0,101,0],[92,6,99,2],[93,4,99,2],[94,6,99,2,"key"],[94,9,99,2],[95,6,99,2,"value"],[95,11,99,2],[96,8,99,2],[96,12,99,2,"_markUserLikes"],[96,26,99,2],[96,33,99,2,"_asyncToGenerator2"],[96,51,99,2],[96,52,99,2,"default"],[96,59,99,2],[96,61,102,2],[96,72,102,37,"comments"],[96,80,102,66],[96,82,102,68,"userId"],[96,88,102,82],[96,90,102,99],[97,10,103,4],[97,14,103,8],[98,12,104,6],[98,16,104,12,"allCommentIds"],[98,29,104,35],[98,32,104,38],[98,34,104,40],[99,12,106,6],[99,16,106,12,"collectCommentIds"],[99,34,106,29],[99,37,106,32],[99,46,106,12,"collectCommentIds"],[99,63,106,29,"collectCommentIds"],[99,64,106,33,"comments"],[99,72,106,62],[99,74,106,67],[100,14,107,8,"comments"],[100,22,107,16],[100,23,107,17,"forEach"],[100,30,107,24],[100,31,107,25],[100,41,107,25,"comment"],[100,48,107,32],[100,50,107,36],[101,16,108,10,"allCommentIds"],[101,29,108,23],[101,30,108,24,"push"],[101,34,108,28],[101,35,108,29,"comment"],[101,42,108,36],[101,43,108,37,"id"],[101,45,108,39],[101,46,108,40],[102,16,109,10],[102,20,109,14,"comment"],[102,27,109,21],[102,28,109,22,"replies"],[102,35,109,29],[102,37,109,31],[103,18,110,12,"collectCommentIds"],[103,36,110,29],[103,37,110,30,"comment"],[103,44,110,37],[103,45,110,38,"replies"],[103,52,110,45],[103,53,110,46],[104,16,111,10],[105,14,112,8],[105,15,112,9],[105,16,112,10],[106,12,113,6],[106,13,113,7],[107,12,115,6,"collectCommentIds"],[107,30,115,23],[107,31,115,24,"comments"],[107,39,115,32],[107,40,115,33],[108,12,117,6],[108,16,117,10,"allCommentIds"],[108,29,117,23],[108,30,117,24,"length"],[108,36,117,30],[108,41,117,35],[108,42,117,36],[108,44,117,38],[109,12,119,6],[109,16,119,6,"_yield$supabase$from$2"],[109,38,119,6],[109,47,119,36,"supabase"],[109,63,119,44],[109,64,120,9,"from"],[109,68,120,13],[109,69,120,14],[109,84,120,29],[109,85,120,30],[109,86,121,9,"select"],[109,92,121,15],[109,93,121,16],[109,105,121,28],[109,106,121,29],[109,107,122,9,"eq"],[109,109,122,11],[109,110,122,12],[109,119,122,21],[109,121,122,23,"userId"],[109,127,122,29],[109,128,122,30],[109,129,123,9,"in"],[109,131,123,11],[109,132,123,12],[109,144,123,24],[109,146,123,26,"allCommentIds"],[109,159,123,39],[109,160,123,40],[110,14,119,20,"likes"],[110,19,119,25],[110,22,119,25,"_yield$supabase$from$2"],[110,44,119,25],[110,45,119,14,"data"],[110,49,119,18],[111,12,125,6],[111,16,125,12,"likedCommentIds"],[111,31,125,27],[111,34,125,30],[111,38,125,34,"Set"],[111,41,125,37],[111,42,125,38],[111,43,125,38,"likes"],[111,48,125,43],[111,68,125,38,"likes"],[111,73,125,43],[111,74,125,45,"map"],[111,77,125,48],[111,78,125,49],[111,88,125,49,"like"],[111,92,125,53],[112,14,125,53],[112,21,125,57,"like"],[112,25,125,61],[112,26,125,62,"comment_id"],[112,36,125,72],[113,12,125,72],[113,14,125,73],[113,19,125,77],[113,21,125,79],[113,22,125,80],[114,12,127,6],[114,16,127,12,"markLikes"],[114,26,127,21],[114,29,127,24],[114,38,127,12,"markLikes"],[114,47,127,21,"markLikes"],[114,48,127,25,"comments"],[114,56,127,54],[114,58,127,59],[115,14,128,8,"comments"],[115,22,128,16],[115,23,128,17,"forEach"],[115,30,128,24],[115,31,128,25],[115,41,128,25,"comment"],[115,48,128,32],[115,50,128,36],[116,16,129,10,"comment"],[116,23,129,17],[116,24,129,18,"is_liked_by_user"],[116,40,129,34],[116,43,129,37,"likedCommentIds"],[116,58,129,52],[116,59,129,53,"has"],[116,62,129,56],[116,63,129,57,"comment"],[116,70,129,64],[116,71,129,65,"id"],[116,73,129,67],[116,74,129,68],[117,16,130,10],[117,20,130,14,"comment"],[117,27,130,21],[117,28,130,22,"replies"],[117,35,130,29],[117,37,130,31],[118,18,131,12,"markLikes"],[118,28,131,21],[118,29,131,22,"comment"],[118,36,131,29],[118,37,131,30,"replies"],[118,44,131,37],[118,45,131,38],[119,16,132,10],[120,14,133,8],[120,15,133,9],[120,16,133,10],[121,12,134,6],[121,13,134,7],[122,12,136,6,"markLikes"],[122,22,136,15],[122,23,136,16,"comments"],[122,31,136,24],[122,32,136,25],[123,10,137,4],[123,11,137,5],[123,12,137,6],[123,19,137,13,"error"],[123,24,137,18],[123,26,137,20],[124,12,138,6,"EventLogger"],[124,36,138,17],[124,37,138,18,"error"],[124,42,138,23],[124,43,138,24],[124,53,138,34],[124,55,138,36],[124,83,138,64],[124,85,138,66,"error"],[124,90,138,80],[124,91,138,81],[125,10,139,4],[126,8,140,2],[126,9,140,3],[127,8,140,3],[127,17,102,23,"markUserLikes"],[127,30,102,36,"markUserLikes"],[127,31,102,36,"_x2"],[127,34,102,36],[127,36,102,36,"_x3"],[127,39,102,36],[128,10,102,36],[128,17,102,36,"_markUserLikes"],[128,31,102,36],[128,32,102,36,"apply"],[128,37,102,36],[128,44,102,36,"arguments"],[128,53,102,36],[129,8,102,36],[130,8,102,36],[130,15,102,23,"markUserLikes"],[130,28,102,36],[131,6,102,36],[132,6,142,2],[133,0,143,0],[134,0,144,0],[135,6,142,2],[136,4,142,2],[137,6,142,2,"key"],[137,9,142,2],[138,6,142,2,"value"],[138,11,142,2],[139,8,142,2],[139,12,142,2,"_addComment"],[139,23,142,2],[139,30,142,2,"_asyncToGenerator2"],[139,48,142,2],[139,49,142,2,"default"],[139,56,142,2],[139,58,145,2],[139,69,146,4,"automationId"],[139,81,146,24],[139,83,147,4,"content"],[139,90,147,19],[139,92,148,4,"parentCommentId"],[139,107,148,28],[139,109,149,39],[140,10,150,4],[140,14,150,8],[141,12,151,6],[141,16,151,6,"_yield$supabase$auth$2"],[141,38,151,6],[141,47,151,57,"supabase"],[141,63,151,65],[141,64,151,66,"auth"],[141,68,151,70],[141,69,151,71,"getUser"],[141,76,151,78],[141,77,151,79],[141,78,151,80],[142,14,151,22,"user"],[142,18,151,26],[142,21,151,26,"_yield$supabase$auth$2"],[142,43,151,26],[142,44,151,14,"data"],[142,48,151,18],[142,49,151,22,"user"],[142,53,151,26],[143,14,151,37,"authError"],[143,23,151,46],[143,26,151,46,"_yield$supabase$auth$2"],[143,48,151,46],[143,49,151,30,"error"],[143,54,151,35],[144,12,153,6],[144,16,153,10,"authError"],[144,25,153,19],[144,27,153,21],[145,14,154,8],[145,20,154,14],[145,24,154,18,"Error"],[145,29,154,23],[145,30,154,24],[145,55,154,49,"authError"],[145,64,154,58],[145,65,154,59,"message"],[145,72,154,66],[145,74,154,68],[145,75,154,69],[146,12,155,6],[147,12,157,6],[147,16,157,10],[147,17,157,11,"user"],[147,21,157,15],[147,23,157,17],[148,14,158,8],[148,20,158,14],[148,24,158,18,"Error"],[148,29,158,23],[148,30,158,24],[148,81,158,75],[148,82,158,76],[149,12,159,6],[151,12,161,6],[152,12,162,6],[152,16,162,6,"_yield$supabase$from$3"],[152,38,162,6],[152,47,162,65,"supabase"],[152,63,162,73],[152,64,163,9,"from"],[152,68,163,13],[152,69,163,14],[152,82,163,27],[152,83,163,28],[152,84,164,9,"select"],[152,90,164,15],[152,91,164,16],[152,102,164,27],[152,103,164,28],[152,104,165,9,"eq"],[152,106,165,11],[152,107,165,12],[152,111,165,16],[152,113,165,18,"automationId"],[152,125,165,30],[152,126,165,31],[152,127,166,9,"single"],[152,133,166,15],[152,134,166,16],[152,135,166,17],[153,14,162,20,"automation"],[153,24,162,30],[153,27,162,30,"_yield$supabase$from$3"],[153,49,162,30],[153,50,162,14,"data"],[153,54,162,18],[154,14,162,39,"automationError"],[154,29,162,54],[154,32,162,54,"_yield$supabase$from$3"],[154,54,162,54],[154,55,162,32,"error"],[154,60,162,37],[155,12,168,6],[155,16,168,10,"automationError"],[155,31,168,25],[155,33,168,27],[156,14,169,8,"EventLogger"],[156,38,169,19],[156,39,169,20,"error"],[156,44,169,25],[156,45,169,26],[156,55,169,36],[156,57,169,38],[156,82,169,63],[156,84,169,65,"automationError"],[156,99,169,89],[156,100,169,90],[157,14,170,8],[157,20,170,14],[157,24,170,18,"Error"],[157,29,170,23],[157,30,170,24],[157,80,170,74],[157,81,170,75],[158,12,171,6],[159,12,173,6],[159,16,173,10],[159,18,173,11,"automation"],[159,28,173,21],[159,40,173,11,"automation"],[159,50,173,21],[159,51,173,23,"is_public"],[159,60,173,32],[159,63,173,34],[160,14,174,8],[160,20,174,14],[160,24,174,18,"Error"],[160,29,174,23],[160,30,174,24],[160,80,174,74],[160,81,174,75],[161,12,175,6],[162,12,177,6],[162,16,177,12,"commentData"],[162,27,177,23],[162,30,177,26],[163,14,178,8,"automation_id"],[163,27,178,21],[163,29,178,23,"automationId"],[163,41,178,35],[164,14,179,8,"parent_comment_id"],[164,31,179,25],[164,33,179,27,"parentCommentId"],[164,48,179,42],[164,52,179,46],[164,56,179,50],[165,14,180,8,"user_id"],[165,21,180,15],[165,23,180,17,"user"],[165,27,180,21],[165,28,180,22,"id"],[165,30,180,24],[166,14,181,8,"content"],[166,21,181,15],[166,23,181,17,"content"],[166,30,181,24],[166,31,181,25,"trim"],[166,35,181,29],[166,36,181,30],[167,12,182,6],[167,13,182,7],[168,12,184,6,"EventLogger"],[168,36,184,17],[168,37,184,18,"debug"],[168,42,184,23],[168,43,184,24],[168,53,184,34],[168,55,184,36],[168,86,184,67],[168,88,184,69,"commentData"],[168,99,184,80],[168,100,184,81],[169,12,186,6],[169,16,186,6,"_yield$supabase$from$4"],[169,38,186,6],[169,47,186,36,"supabase"],[169,63,186,44],[169,64,187,9,"from"],[169,68,187,13],[169,69,187,14],[169,90,187,35],[169,91,187,36],[169,92,188,9,"insert"],[169,98,188,15],[169,99,188,16,"commentData"],[169,110,188,27],[169,111,188,28],[169,112,189,9,"select"],[169,118,189,15],[169,119,189,16],[170,0,190,0],[171,0,191,0],[172,0,192,0],[172,9,192,9],[172,10,192,10],[172,11,193,9,"single"],[172,17,193,15],[172,18,193,16],[172,19,193,17],[173,14,186,14,"data"],[173,18,186,18],[173,21,186,18,"_yield$supabase$from$4"],[173,43,186,18],[173,44,186,14,"data"],[173,48,186,18],[174,14,186,20,"error"],[174,19,186,25],[174,22,186,25,"_yield$supabase$from$4"],[174,44,186,25],[174,45,186,20,"error"],[174,50,186,25],[175,12,195,6],[175,16,195,10,"error"],[175,21,195,15],[175,23,195,17],[176,14,195,17],[176,18,195,17,"_error$message"],[176,32,195,17],[177,14,196,8,"EventLogger"],[177,38,196,19],[177,39,196,20,"error"],[177,44,196,25],[177,45,196,26],[177,55,196,36],[177,57,196,38],[177,80,196,61],[177,82,196,63,"error"],[177,87,196,77],[177,88,196,78],[178,14,198,8],[178,18,198,12,"error"],[178,23,198,17],[178,24,198,18,"code"],[178,28,198,22],[178,33,198,27],[178,40,198,34],[178,42,198,36],[179,16,199,10],[179,22,199,16],[179,26,199,20,"Error"],[179,31,199,25],[179,32,199,26],[179,102,199,96],[179,103,199,97],[180,14,200,8],[180,15,200,9],[180,21,200,15],[180,25,200,19,"error"],[180,30,200,24],[180,31,200,25,"code"],[180,35,200,29],[180,40,200,34],[180,47,200,41],[180,49,200,43],[181,16,201,10],[181,22,201,16],[181,26,201,20,"Error"],[181,31,201,25],[181,32,201,26],[181,87,201,81],[181,88,201,82],[182,14,202,8],[182,15,202,9],[182,21,202,15],[182,26,202,15,"_error$message"],[182,40,202,15],[182,43,202,19,"error"],[182,48,202,24],[182,49,202,25,"message"],[182,56,202,32],[182,69,202,19,"_error$message"],[182,83,202,19],[182,84,202,34,"includes"],[182,92,202,42],[182,93,202,43],[182,103,202,53],[182,104,202,54],[182,106,202,56],[183,16,203,10],[183,22,203,16],[183,26,203,20,"Error"],[183,31,203,25],[183,32,203,26],[183,93,203,87],[183,94,203,88],[184,14,204,8],[185,14,206,8],[185,20,206,14],[185,24,206,18,"Error"],[185,29,206,23],[185,30,206,24],[185,49,206,43,"error"],[185,54,206,48],[185,55,206,49,"message"],[185,62,206,56],[185,64,206,58],[185,65,206,59],[186,12,207,6],[187,12,209,6],[187,16,209,10],[187,17,209,11,"data"],[187,21,209,15],[187,23,209,17],[188,14,210,8],[188,20,210,14],[188,24,210,18,"Error"],[188,29,210,23],[188,30,210,24],[188,74,210,68],[188,75,210,69],[189,12,211,6],[190,12,213,6],[190,19,213,6,"Object"],[190,25,213,6],[190,26,213,6,"assign"],[190,32,213,6],[190,37,214,11,"data"],[190,41,214,15],[191,14,215,8,"user"],[191,18,215,12],[191,20,215,14,"data"],[191,24,215,18],[191,25,215,19,"profiles"],[191,33,215,27],[191,37,215,31],[192,16,215,33,"display_name"],[192,28,215,45],[192,30,215,47],[192,41,215,58],[193,16,215,60,"email"],[193,21,215,65],[193,23,215,67,"user"],[193,27,215,71],[193,28,215,72,"email"],[194,14,215,78],[194,15,215,79],[195,14,216,8,"replies"],[195,21,216,15],[195,23,216,17],[195,25,216,19],[196,14,217,8,"is_liked_by_user"],[196,30,217,24],[196,32,217,26],[197,12,217,31],[198,10,219,4],[198,11,219,5],[198,12,219,6],[198,19,219,13,"error"],[198,24,219,23],[198,26,219,25],[199,12,220,6,"EventLogger"],[199,36,220,17],[199,37,220,18,"error"],[199,42,220,23],[199,43,220,24],[199,53,220,34],[199,55,220,36],[199,79,220,60],[199,81,220,62,"error"],[199,86,220,76],[199,87,220,77],[200,12,221,6],[200,18,221,12,"error"],[200,23,221,17],[200,24,221,18],[200,25,221,19],[201,10,222,4],[202,8,223,2],[202,9,223,3],[203,8,223,3],[203,17,145,15,"addComment"],[203,27,145,25,"addComment"],[203,28,145,25,"_x4"],[203,31,145,25],[203,33,145,25,"_x5"],[203,36,145,25],[203,38,145,25,"_x6"],[203,41,145,25],[204,10,145,25],[204,17,145,25,"_addComment"],[204,28,145,25],[204,29,145,25,"apply"],[204,34,145,25],[204,41,145,25,"arguments"],[204,50,145,25],[205,8,145,25],[206,8,145,25],[206,15,145,15,"addComment"],[206,25,145,25],[207,6,145,25],[208,6,225,2],[209,0,226,0],[210,0,227,0],[211,6,225,2],[212,4,225,2],[213,6,225,2,"key"],[213,9,225,2],[214,6,225,2,"value"],[214,11,225,2],[215,8,225,2],[215,12,225,2,"_updateComment"],[215,26,225,2],[215,33,225,2,"_asyncToGenerator2"],[215,51,225,2],[215,52,225,2,"default"],[215,59,225,2],[215,61,228,2],[215,72,228,29,"commentId"],[215,81,228,46],[215,83,228,48,"content"],[215,90,228,63],[215,92,228,83],[216,10,229,4],[216,14,229,8],[217,12,230,6],[217,16,230,6,"_yield$supabase$auth$3"],[217,38,230,6],[217,47,230,39,"supabase"],[217,63,230,47],[217,64,230,48,"auth"],[217,68,230,52],[217,69,230,53,"getUser"],[217,76,230,60],[217,77,230,61],[217,78,230,62],[218,14,230,22,"user"],[218,18,230,26],[218,21,230,26,"_yield$supabase$auth$3"],[218,43,230,26],[218,44,230,14,"data"],[218,48,230,18],[218,49,230,22,"user"],[218,53,230,26],[219,12,231,6],[219,16,231,10],[219,17,231,11,"user"],[219,21,231,15],[219,23,231,17],[219,29,231,23],[219,33,231,27,"Error"],[219,38,231,32],[219,39,231,33],[219,63,231,57],[219,64,231,58],[220,12,233,6],[220,16,233,6,"_yield$supabase$from$5"],[220,38,233,6],[220,47,233,30,"supabase"],[220,63,233,38],[220,64,234,9,"from"],[220,68,234,13],[220,69,234,14],[220,90,234,35],[220,91,234,36],[220,92,235,9,"update"],[220,98,235,15],[220,99,235,16],[221,16,236,10,"content"],[221,23,236,17],[221,25,236,19,"content"],[221,32,236,26],[221,33,236,27,"trim"],[221,37,236,31],[221,38,236,32],[221,39,236,33],[222,16,237,10,"is_edited"],[222,25,237,19],[222,27,237,21],[222,31,237,25],[223,16,238,10,"updated_at"],[223,26,238,20],[223,28,238,22],[223,32,238,26,"Date"],[223,36,238,30],[223,37,238,31],[223,38,238,32],[223,39,238,33,"toISOString"],[223,50,238,44],[223,51,238,45],[224,14,239,8],[224,15,239,9],[224,16,239,10],[224,17,240,9,"eq"],[224,19,240,11],[224,20,240,12],[224,24,240,16],[224,26,240,18,"commentId"],[224,35,240,27],[224,36,240,28],[224,37,241,9,"eq"],[224,39,241,11],[224,40,241,12],[224,49,241,21],[224,51,241,23,"user"],[224,55,241,27],[224,56,241,28,"id"],[224,58,241,30],[224,59,241,31],[225,14,233,14,"error"],[225,19,233,19],[225,22,233,19,"_yield$supabase$from$5"],[225,44,233,19],[225,45,233,14,"error"],[225,50,233,19],[225,51,241,32],[225,52,241,33],[227,12,243,6],[227,16,243,10,"error"],[227,21,243,15],[227,23,243,17],[227,29,243,23,"error"],[227,34,243,28],[228,12,244,6],[228,19,244,13],[228,23,244,17],[229,10,245,4],[229,11,245,5],[229,12,245,6],[229,19,245,13,"error"],[229,24,245,18],[229,26,245,20],[230,12,246,6,"EventLogger"],[230,36,246,17],[230,37,246,18,"error"],[230,42,246,23],[230,43,246,24],[230,53,246,34],[230,55,246,36],[230,82,246,63],[230,84,246,65,"error"],[230,89,246,79],[230,90,246,80],[231,12,247,6],[231,19,247,13],[231,24,247,18],[232,10,248,4],[233,8,249,2],[233,9,249,3],[234,8,249,3],[234,17,228,15,"updateComment"],[234,30,228,28,"updateComment"],[234,31,228,28,"_x7"],[234,34,228,28],[234,36,228,28,"_x8"],[234,39,228,28],[235,10,228,28],[235,17,228,28,"_updateComment"],[235,31,228,28],[235,32,228,28,"apply"],[235,37,228,28],[235,44,228,28,"arguments"],[235,53,228,28],[236,8,228,28],[237,8,228,28],[237,15,228,15,"updateComment"],[237,28,228,28],[238,6,228,28],[239,6,251,2],[240,0,252,0],[241,0,253,0],[242,6,251,2],[243,4,251,2],[244,6,251,2,"key"],[244,9,251,2],[245,6,251,2,"value"],[245,11,251,2],[246,8,251,2],[246,12,251,2,"_deleteComment"],[246,26,251,2],[246,33,251,2,"_asyncToGenerator2"],[246,51,251,2],[246,52,251,2,"default"],[246,59,251,2],[246,61,254,2],[246,72,254,29,"commentId"],[246,81,254,46],[246,83,254,66],[247,10,255,4],[247,14,255,8],[248,12,256,6],[248,16,256,6,"_yield$supabase$auth$4"],[248,38,256,6],[248,47,256,39,"supabase"],[248,63,256,47],[248,64,256,48,"auth"],[248,68,256,52],[248,69,256,53,"getUser"],[248,76,256,60],[248,77,256,61],[248,78,256,62],[249,14,256,22,"user"],[249,18,256,26],[249,21,256,26,"_yield$supabase$auth$4"],[249,43,256,26],[249,44,256,14,"data"],[249,48,256,18],[249,49,256,22,"user"],[249,53,256,26],[250,12,257,6],[250,16,257,10],[250,17,257,11,"user"],[250,21,257,15],[250,23,257,17],[250,29,257,23],[250,33,257,27,"Error"],[250,38,257,32],[250,39,257,33],[250,63,257,57],[250,64,257,58],[251,12,259,6],[251,16,259,6,"_yield$supabase$from$6"],[251,38,259,6],[251,47,259,30,"supabase"],[251,63,259,38],[251,64,260,9,"from"],[251,68,260,13],[251,69,260,14],[251,90,260,35],[251,91,260,36],[251,92,261,9,"delete"],[251,98,261,15],[251,99,261,16],[251,100,261,17],[251,101,262,9,"eq"],[251,103,262,11],[251,104,262,12],[251,108,262,16],[251,110,262,18,"commentId"],[251,119,262,27],[251,120,262,28],[251,121,263,9,"eq"],[251,123,263,11],[251,124,263,12],[251,133,263,21],[251,135,263,23,"user"],[251,139,263,27],[251,140,263,28,"id"],[251,142,263,30],[251,143,263,31],[252,14,259,14,"error"],[252,19,259,19],[252,22,259,19,"_yield$supabase$from$6"],[252,44,259,19],[252,45,259,14,"error"],[252,50,259,19],[252,51,263,32],[252,52,263,33],[254,12,265,6],[254,16,265,10,"error"],[254,21,265,15],[254,23,265,17],[254,29,265,23,"error"],[254,34,265,28],[255,12,266,6],[255,19,266,13],[255,23,266,17],[256,10,267,4],[256,11,267,5],[256,12,267,6],[256,19,267,13,"error"],[256,24,267,18],[256,26,267,20],[257,12,268,6,"EventLogger"],[257,36,268,17],[257,37,268,18,"error"],[257,42,268,23],[257,43,268,24],[257,53,268,34],[257,55,268,36],[257,82,268,63],[257,84,268,65,"error"],[257,89,268,79],[257,90,268,80],[258,12,269,6],[258,19,269,13],[258,24,269,18],[259,10,270,4],[260,8,271,2],[260,9,271,3],[261,8,271,3],[261,17,254,15,"deleteComment"],[261,30,254,28,"deleteComment"],[261,31,254,28,"_x9"],[261,34,254,28],[262,10,254,28],[262,17,254,28,"_deleteComment"],[262,31,254,28],[262,32,254,28,"apply"],[262,37,254,28],[262,44,254,28,"arguments"],[262,53,254,28],[263,8,254,28],[264,8,254,28],[264,15,254,15,"deleteComment"],[264,28,254,28],[265,6,254,28],[266,6,273,2],[267,0,274,0],[268,0,275,0],[269,6,273,2],[270,4,273,2],[271,6,273,2,"key"],[271,9,273,2],[272,6,273,2,"value"],[272,11,273,2],[273,8,273,2],[273,12,273,2,"_toggleCommentLike"],[273,30,273,2],[273,37,273,2,"_asyncToGenerator2"],[273,55,273,2],[273,56,273,2,"default"],[273,63,273,2],[273,65,276,2],[273,76,276,33,"commentId"],[273,85,276,50],[273,87,276,70],[274,10,277,4],[274,14,277,8],[275,12,278,6],[275,16,278,6,"_yield$supabase$auth$5"],[275,38,278,6],[275,47,278,39,"supabase"],[275,63,278,47],[275,64,278,48,"auth"],[275,68,278,52],[275,69,278,53,"getUser"],[275,76,278,60],[275,77,278,61],[275,78,278,62],[276,14,278,22,"user"],[276,18,278,26],[276,21,278,26,"_yield$supabase$auth$5"],[276,43,278,26],[276,44,278,14,"data"],[276,48,278,18],[276,49,278,22,"user"],[276,53,278,26],[277,12,279,6],[277,16,279,10],[277,17,279,11,"user"],[277,21,279,15],[277,23,279,17],[277,29,279,23],[277,33,279,27,"Error"],[277,38,279,32],[277,39,279,33],[277,63,279,57],[277,64,279,58],[279,12,281,6],[280,12,282,6],[280,16,282,6,"_yield$supabase$from$7"],[280,38,282,6],[280,47,282,43,"supabase"],[280,63,282,51],[280,64,283,9,"from"],[280,68,283,13],[280,69,283,14],[280,84,283,29],[280,85,283,30],[280,86,284,9,"select"],[280,92,284,15],[280,93,284,16],[280,97,284,20],[280,98,284,21],[280,99,285,9,"eq"],[280,101,285,11],[280,102,285,12],[280,114,285,24],[280,116,285,26,"commentId"],[280,125,285,35],[280,126,285,36],[280,127,286,9,"eq"],[280,129,286,11],[280,130,286,12],[280,139,286,21],[280,141,286,23,"user"],[280,145,286,27],[280,146,286,28,"id"],[280,148,286,30],[280,149,286,31],[280,150,287,9,"single"],[280,156,287,15],[280,157,287,16],[280,158,287,17],[281,14,282,20,"existingLike"],[281,26,282,32],[281,29,282,32,"_yield$supabase$from$7"],[281,51,282,32],[281,52,282,14,"data"],[281,56,282,18],[282,12,289,6],[282,16,289,10,"existingLike"],[282,28,289,22],[282,30,289,24],[283,14,290,8],[284,14,291,8],[284,18,291,8,"_yield$supabase$from$8"],[284,40,291,8],[284,49,291,32,"supabase"],[284,65,291,40],[284,66,292,11,"from"],[284,70,292,15],[284,71,292,16],[284,86,292,31],[284,87,292,32],[284,88,293,11,"delete"],[284,94,293,17],[284,95,293,18],[284,96,293,19],[284,97,294,11,"eq"],[284,99,294,13],[284,100,294,14],[284,112,294,26],[284,114,294,28,"commentId"],[284,123,294,37],[284,124,294,38],[284,125,295,11,"eq"],[284,127,295,13],[284,128,295,14],[284,137,295,23],[284,139,295,25,"user"],[284,143,295,29],[284,144,295,30,"id"],[284,146,295,32],[284,147,295,33],[285,16,291,16,"error"],[285,21,291,21],[285,24,291,21,"_yield$supabase$from$8"],[285,46,291,21],[285,47,291,16,"error"],[285,52,291,21],[286,14,297,8],[286,18,297,12,"error"],[286,23,297,17],[286,25,297,19],[286,31,297,25,"error"],[286,36,297,30],[287,14,298,8],[287,21,298,15],[287,26,298,20],[287,27,298,21],[287,28,298,22],[288,12,299,6],[288,13,299,7],[288,19,299,13],[289,14,300,8],[290,14,301,8],[290,18,301,8,"_yield$supabase$from$9"],[290,40,301,8],[290,49,301,32,"supabase"],[290,65,301,40],[290,66,302,11,"from"],[290,70,302,15],[290,71,302,16],[290,86,302,31],[290,87,302,32],[290,88,303,11,"insert"],[290,94,303,17],[290,95,303,18],[291,18,304,12,"comment_id"],[291,28,304,22],[291,30,304,24,"commentId"],[291,39,304,33],[292,18,305,12,"user_id"],[292,25,305,19],[292,27,305,21,"user"],[292,31,305,25],[292,32,305,26,"id"],[293,16,306,10],[293,17,306,11],[293,18,306,12],[294,16,301,16,"error"],[294,22,301,21],[294,25,301,21,"_yield$supabase$from$9"],[294,47,301,21],[294,48,301,16,"error"],[294,53,301,21],[295,14,308,8],[295,18,308,12,"error"],[295,24,308,17],[295,26,308,19],[295,32,308,25,"error"],[295,38,308,30],[296,14,309,8],[296,21,309,15],[296,25,309,19],[296,26,309,20],[296,27,309,21],[297,12,310,6],[298,10,311,4],[298,11,311,5],[298,12,311,6],[298,19,311,13,"error"],[298,24,311,18],[298,26,311,20],[299,12,312,6,"EventLogger"],[299,36,312,17],[299,37,312,18,"error"],[299,42,312,23],[299,43,312,24],[299,53,312,34],[299,55,312,36],[299,87,312,68],[299,89,312,70,"error"],[299,94,312,84],[299,95,312,85],[300,12,313,6],[300,19,313,13],[300,24,313,18],[301,10,314,4],[302,8,315,2],[302,9,315,3],[303,8,315,3],[303,17,276,15,"toggleCommentLike"],[303,34,276,32,"toggleCommentLike"],[303,35,276,32,"_x0"],[303,38,276,32],[304,10,276,32],[304,17,276,32,"_toggleCommentLike"],[304,35,276,32],[304,36,276,32,"apply"],[304,41,276,32],[304,48,276,32,"arguments"],[304,57,276,32],[305,8,276,32],[306,8,276,32],[306,15,276,15,"toggleCommentLike"],[306,32,276,32],[307,6,276,32],[308,6,317,2],[309,0,318,0],[310,0,319,0],[311,6,317,2],[312,4,317,2],[313,6,317,2,"key"],[313,9,317,2],[314,6,317,2,"value"],[314,11,317,2],[315,8,317,2],[315,12,317,2,"_toggleCommentPin"],[315,29,317,2],[315,36,317,2,"_asyncToGenerator2"],[315,54,317,2],[315,55,317,2,"default"],[315,62,317,2],[315,64,320,2],[315,75,320,32,"commentId"],[315,84,320,49],[315,86,320,51,"automationId"],[315,98,320,71],[315,100,320,91],[316,10,321,4],[316,14,321,8],[317,12,322,6],[317,16,322,6,"_yield$supabase$auth$6"],[317,38,322,6],[317,47,322,39,"supabase"],[317,63,322,47],[317,64,322,48,"auth"],[317,68,322,52],[317,69,322,53,"getUser"],[317,76,322,60],[317,77,322,61],[317,78,322,62],[318,14,322,22,"user"],[318,18,322,26],[318,21,322,26,"_yield$supabase$auth$6"],[318,43,322,26],[318,44,322,14,"data"],[318,48,322,18],[318,49,322,22,"user"],[318,53,322,26],[319,12,323,6],[319,16,323,10],[319,17,323,11,"user"],[319,21,323,15],[319,23,323,17],[319,29,323,23],[319,33,323,27,"Error"],[319,38,323,32],[319,39,323,33],[319,63,323,57],[319,64,323,58],[321,12,325,6],[322,12,326,6],[322,16,326,6,"_yield$supabase$from$0"],[322,38,326,6],[322,47,326,41,"supabase"],[322,63,326,49],[322,64,327,9,"from"],[322,68,327,13],[322,69,327,14],[322,82,327,27],[322,83,327,28],[322,84,328,9,"select"],[322,90,328,15],[322,91,328,16],[322,103,328,28],[322,104,328,29],[322,105,329,9,"eq"],[322,107,329,11],[322,108,329,12],[322,112,329,16],[322,114,329,18,"automationId"],[322,126,329,30],[322,127,329,31],[322,128,330,9,"single"],[322,134,330,15],[322,135,330,16],[322,136,330,17],[323,14,326,20,"automation"],[323,24,326,30],[323,27,326,30,"_yield$supabase$from$0"],[323,49,326,30],[323,50,326,14,"data"],[323,54,326,18],[324,12,332,6],[324,16,332,10],[324,17,332,11,"automation"],[324,27,332,21],[324,31,332,25,"automation"],[324,41,332,35],[324,42,332,36,"created_by"],[324,52,332,46],[324,57,332,51,"user"],[324,61,332,55],[324,62,332,56,"id"],[324,64,332,58],[324,66,332,60],[325,14,333,8],[325,20,333,14],[325,24,333,18,"Error"],[325,29,333,23],[325,30,333,24],[325,71,333,65],[325,72,333,66],[326,12,334,6],[328,12,336,6],[329,12,337,6],[329,16,337,6,"_yield$supabase$from$1"],[329,38,337,6],[329,47,337,38,"supabase"],[329,63,337,46],[329,64,338,9,"from"],[329,68,338,13],[329,69,338,14],[329,90,338,35],[329,91,338,36],[329,92,339,9,"select"],[329,98,339,15],[329,99,339,16],[329,110,339,27],[329,111,339,28],[329,112,340,9,"eq"],[329,114,340,11],[329,115,340,12],[329,119,340,16],[329,121,340,18,"commentId"],[329,130,340,27],[329,131,340,28],[329,132,341,9,"single"],[329,138,341,15],[329,139,341,16],[329,140,341,17],[330,14,337,20,"comment"],[330,21,337,27],[330,24,337,27,"_yield$supabase$from$1"],[330,46,337,27],[330,47,337,14,"data"],[330,51,337,18],[331,12,343,6],[331,16,343,10],[331,17,343,11,"comment"],[331,24,343,18],[331,26,343,20],[331,32,343,26],[331,36,343,30,"Error"],[331,41,343,35],[331,42,343,36],[331,61,343,55],[331,62,343,56],[333,12,345,6],[334,12,346,6],[334,16,346,6,"_yield$supabase$from$10"],[334,39,346,6],[334,48,346,30,"supabase"],[334,64,346,38],[334,65,347,9,"from"],[334,69,347,13],[334,70,347,14],[334,91,347,35],[334,92,347,36],[334,93,348,9,"update"],[334,99,348,15],[334,100,348,16],[335,16,348,18,"is_pinned"],[335,25,348,27],[335,27,348,29],[335,28,348,30,"comment"],[335,35,348,37],[335,36,348,38,"is_pinned"],[336,14,348,48],[336,15,348,49],[336,16,348,50],[336,17,349,9,"eq"],[336,19,349,11],[336,20,349,12],[336,24,349,16],[336,26,349,18,"commentId"],[336,35,349,27],[336,36,349,28],[337,14,346,14,"error"],[337,19,346,19],[337,22,346,19,"_yield$supabase$from$10"],[337,45,346,19],[337,46,346,14,"error"],[337,51,346,19],[338,12,351,6],[338,16,351,10,"error"],[338,21,351,15],[338,23,351,17],[338,29,351,23,"error"],[338,34,351,28],[339,12,352,6],[339,19,352,13],[339,20,352,14,"comment"],[339,27,352,21],[339,28,352,22,"is_pinned"],[339,37,352,31],[340,10,353,4],[340,11,353,5],[340,12,353,6],[340,19,353,13,"error"],[340,24,353,18],[340,26,353,20],[341,12,354,6,"EventLogger"],[341,36,354,17],[341,37,354,18,"error"],[341,42,354,23],[341,43,354,24],[341,53,354,34],[341,55,354,36],[341,86,354,67],[341,88,354,69,"error"],[341,93,354,83],[341,94,354,84],[342,12,355,6],[342,19,355,13],[342,24,355,18],[343,10,356,4],[344,8,357,2],[344,9,357,3],[345,8,357,3],[345,17,320,15,"toggleCommentPin"],[345,33,320,31,"toggleCommentPin"],[345,34,320,31,"_x1"],[345,37,320,31],[345,39,320,31,"_x10"],[345,43,320,31],[346,10,320,31],[346,17,320,31,"_toggleCommentPin"],[346,34,320,31],[346,35,320,31,"apply"],[346,40,320,31],[346,47,320,31,"arguments"],[346,56,320,31],[347,8,320,31],[348,8,320,31],[348,15,320,15,"toggleCommentPin"],[348,31,320,31],[349,6,320,31],[350,6,359,2],[351,0,360,0],[352,0,361,0],[353,6,359,2],[354,4,359,2],[355,6,359,2,"key"],[355,9,359,2],[356,6,359,2,"value"],[356,11,359,2],[357,8,359,2],[357,12,359,2,"_getCommentStats"],[357,28,359,2],[357,35,359,2,"_asyncToGenerator2"],[357,53,359,2],[357,54,359,2,"default"],[357,61,359,2],[357,63,362,2],[357,74,362,31,"automationId"],[357,86,362,51],[357,88,362,76],[358,10,363,4],[358,14,363,8],[359,12,364,6],[359,16,364,6,"_yield$supabase$from$11"],[359,39,364,6],[359,48,364,46,"supabase"],[359,64,364,54],[359,65,365,9,"from"],[359,69,365,13],[359,70,365,14],[359,91,365,35],[359,92,365,36],[359,93,366,9,"select"],[359,99,366,15],[359,100,366,16],[359,157,366,73],[359,158,366,74],[359,159,367,9,"eq"],[359,161,367,11],[359,162,367,12],[359,177,367,27],[359,179,367,29,"automationId"],[359,191,367,41],[359,192,367,42],[360,14,364,20,"comments"],[360,22,364,28],[360,25,364,28,"_yield$supabase$from$11"],[360,48,364,28],[360,49,364,14,"data"],[360,53,364,18],[361,14,364,30,"error"],[361,19,364,35],[361,22,364,35,"_yield$supabase$from$11"],[361,45,364,35],[361,46,364,30,"error"],[361,51,364,35],[362,12,369,6],[362,16,369,10,"error"],[362,21,369,15],[362,23,369,17],[362,29,369,23,"error"],[362,34,369,28],[363,12,371,6],[363,16,371,12,"totalComments"],[363,29,371,25],[363,32,371,28],[363,33,371,28,"comments"],[363,41,371,36],[363,61,371,28,"comments"],[363,69,371,36],[363,70,371,38,"length"],[363,76,371,44],[363,81,371,48],[363,82,371,49],[364,12,372,6],[364,16,372,12,"totalReplies"],[364,28,372,24],[364,31,372,27],[364,32,372,27,"comments"],[364,40,372,35],[364,60,372,27,"comments"],[364,68,372,35],[364,69,372,37,"filter"],[364,75,372,43],[364,76,372,44],[364,86,372,44,"c"],[364,87,372,45],[365,14,372,45],[365,21,372,49,"c"],[365,22,372,50],[365,23,372,51,"parent_comment_id"],[365,40,372,68],[365,45,372,73],[365,49,372,77],[366,12,372,77],[366,14,372,78],[366,15,372,79,"length"],[366,21,372,85],[366,26,372,89],[366,27,372,90],[367,12,373,6],[367,16,373,12,"uniqueCommenters"],[367,32,373,28],[367,35,373,31],[367,39,373,35,"Set"],[367,42,373,38],[367,43,373,39,"comments"],[367,51,373,47],[367,71,373,39,"comments"],[367,79,373,47],[367,80,373,49,"map"],[367,83,373,52],[367,84,373,53],[367,94,373,53,"c"],[367,95,373,54],[368,14,373,54],[368,21,373,58,"c"],[368,22,373,59],[368,23,373,60,"user_id"],[368,30,373,67],[369,12,373,67],[369,14,373,68],[369,15,373,69],[369,16,373,70,"size"],[369,20,373,74],[370,12,374,6],[370,16,374,12,"totalLikes"],[370,26,374,22],[370,29,374,25],[370,30,374,25,"comments"],[370,38,374,33],[370,58,374,25,"comments"],[370,66,374,33],[370,67,374,35,"reduce"],[370,73,374,41],[370,74,374,42],[370,84,374,43,"sum"],[370,87,374,46],[370,89,374,48,"c"],[370,90,374,49],[371,14,374,49],[371,21,374,54,"sum"],[371,24,374,57],[371,27,374,60,"c"],[371,28,374,61],[371,29,374,62,"likes_count"],[371,40,374,73],[372,12,374,73],[372,15,374,75],[372,16,374,76],[372,17,374,77],[372,22,374,81],[372,23,374,82],[373,12,375,6],[373,16,375,12,"averageLikes"],[373,28,375,24],[373,31,375,27,"totalComments"],[373,44,375,40],[373,47,375,43],[373,48,375,44],[373,51,375,47,"Math"],[373,55,375,51],[373,56,375,52,"round"],[373,61,375,57],[373,62,375,59,"totalLikes"],[373,72,375,69],[373,75,375,72,"totalComments"],[373,88,375,85],[373,91,375,89],[373,94,375,92],[373,95,375,93],[373,98,375,96],[373,101,375,99],[373,104,375,102],[373,105,375,103],[375,12,377,6],[376,12,378,6],[376,16,378,10,"mostLikedComment"],[376,32,378,52],[376,35,378,55],[376,39,378,59],[377,12,379,6],[377,16,379,10,"comments"],[377,24,379,18],[377,28,379,22,"comments"],[377,36,379,30],[377,37,379,31,"length"],[377,43,379,37],[377,46,379,40],[377,47,379,41],[377,49,379,43],[378,14,380,8],[378,18,380,14,"mostLiked"],[378,27,380,23],[378,30,380,26,"comments"],[378,38,380,34],[378,39,380,35,"reduce"],[378,45,380,41],[378,46,380,42],[378,56,380,43,"max"],[378,59,380,46],[378,61,380,48,"comment"],[378,68,380,55],[379,16,380,55],[379,23,381,10,"comment"],[379,30,381,17],[379,31,381,18,"likes_count"],[379,42,381,29],[379,45,381,32,"max"],[379,48,381,35],[379,49,381,36,"likes_count"],[379,60,381,47],[379,63,381,50,"comment"],[379,70,381,57],[379,73,381,60,"max"],[379,76,381,63],[380,14,381,63],[380,15,382,8],[380,16,382,9],[381,14,384,8],[381,18,384,12,"mostLiked"],[381,27,384,21],[381,28,384,22,"likes_count"],[381,39,384,33],[381,42,384,36],[381,43,384,37],[381,45,384,39],[382,16,385,10],[383,16,386,10],[383,20,386,10,"_yield$supabase$from$12"],[383,43,386,10],[383,52,386,46,"supabase"],[383,68,386,54],[383,69,387,13,"from"],[383,73,387,17],[383,74,387,18],[383,95,387,39],[383,96,387,40],[383,97,388,13,"select"],[383,103,388,19],[383,104,388,20],[384,0,389,0],[385,0,390,0],[386,0,391,0],[386,13,391,13],[386,14,391,14],[386,15,392,13,"eq"],[386,17,392,15],[386,18,392,16],[386,22,392,20],[386,24,392,22,"mostLiked"],[386,33,392,31],[386,34,392,32,"id"],[386,36,392,34],[386,37,392,35],[386,38,393,13,"single"],[386,44,393,19],[386,45,393,20],[386,46,393,21],[387,18,386,24,"fullComment"],[387,29,386,35],[387,32,386,35,"_yield$supabase$from$12"],[387,55,386,35],[387,56,386,18,"data"],[387,60,386,22],[388,16,395,10],[388,20,395,14,"fullComment"],[388,31,395,25],[388,33,395,27],[389,18,396,12,"mostLikedComment"],[389,34,396,28],[389,37,396,28,"Object"],[389,43,396,28],[389,44,396,28,"assign"],[389,50,396,28],[389,55,397,17,"fullComment"],[389,66,397,28],[390,20,398,14,"user"],[390,24,398,18],[390,26,398,20,"fullComment"],[390,37,398,31],[390,38,398,32,"profiles"],[390,46,398,40],[391,20,399,14,"replies"],[391,27,399,21],[391,29,399,23],[392,18,399,25],[392,20,400,13],[393,16,401,10],[394,14,402,8],[395,12,403,6],[396,12,405,6],[396,16,405,12,"recentActivity"],[396,30,405,26],[396,33,405,29,"comments"],[396,41,405,37],[396,45,405,41,"comments"],[396,53,405,49],[396,54,405,50,"length"],[396,60,405,56],[396,63,405,59],[396,64,405,60],[396,67,406,10,"comments"],[396,75,406,18],[396,76,406,19,"sort"],[396,80,406,23],[396,81,406,24],[396,91,406,25,"a"],[396,92,406,26],[396,94,406,28,"b"],[396,95,406,29],[397,14,406,29],[397,21,406,34],[397,25,406,38,"Date"],[397,29,406,42],[397,30,406,43,"b"],[397,31,406,44],[397,32,406,45,"created_at"],[397,42,406,55],[397,43,406,56],[397,44,406,57,"getTime"],[397,51,406,64],[397,52,406,65],[397,53,406,66],[397,56,406,69],[397,60,406,73,"Date"],[397,64,406,77],[397,65,406,78,"a"],[397,66,406,79],[397,67,406,80,"created_at"],[397,77,406,90],[397,78,406,91],[397,79,406,92,"getTime"],[397,86,406,99],[397,87,406,100],[397,88,406,101],[398,12,406,101],[398,14,406,102],[398,15,406,103],[398,16,406,104],[398,17,406,105],[398,18,406,106,"created_at"],[398,28,406,116],[398,31,407,10],[398,35,407,14],[399,12,409,6],[399,19,409,13],[400,14,410,8,"total_comments"],[400,28,410,22],[400,30,410,24,"totalComments"],[400,43,410,37],[400,46,410,40,"totalReplies"],[400,58,410,52],[401,14,410,54],[402,14,411,8,"total_replies"],[402,27,411,21],[402,29,411,23,"totalReplies"],[402,41,411,35],[403,14,412,8,"unique_commenters"],[403,31,412,25],[403,33,412,27,"uniqueCommenters"],[403,49,412,43],[404,14,413,8,"average_likes_per_comment"],[404,39,413,33],[404,41,413,35,"averageLikes"],[404,53,413,47],[405,14,414,8,"most_liked_comment"],[405,32,414,26],[405,34,414,28,"mostLikedComment"],[405,50,414,44],[406,14,415,8,"recent_activity"],[406,29,415,23],[406,31,415,25,"recentActivity"],[407,12,416,6],[407,13,416,7],[408,10,417,4],[408,11,417,5],[408,12,417,6],[408,19,417,13,"error"],[408,24,417,18],[408,26,417,20],[409,12,418,6,"EventLogger"],[409,36,418,17],[409,37,418,18,"error"],[409,42,418,23],[409,43,418,24],[409,53,418,34],[409,55,418,36],[409,85,418,66],[409,87,418,68,"error"],[409,92,418,82],[409,93,418,83],[410,12,419,6],[410,19,419,13],[411,14,420,8,"total_comments"],[411,28,420,22],[411,30,420,24],[411,31,420,25],[412,14,421,8,"total_replies"],[412,27,421,21],[412,29,421,23],[412,30,421,24],[413,14,422,8,"unique_commenters"],[413,31,422,25],[413,33,422,27],[413,34,422,28],[414,14,423,8,"average_likes_per_comment"],[414,39,423,33],[414,41,423,35],[414,42,423,36],[415,14,424,8,"most_liked_comment"],[415,32,424,26],[415,34,424,28],[415,38,424,32],[416,14,425,8,"recent_activity"],[416,29,425,23],[416,31,425,25],[417,12,426,6],[417,13,426,7],[418,10,427,4],[419,8,428,2],[419,9,428,3],[420,8,428,3],[420,17,362,15,"getCommentStats"],[420,32,362,30,"getCommentStats"],[420,33,362,30,"_x11"],[420,37,362,30],[421,10,362,30],[421,17,362,30,"_getCommentStats"],[421,33,362,30],[421,34,362,30,"apply"],[421,39,362,30],[421,46,362,30,"arguments"],[421,55,362,30],[422,8,362,30],[423,8,362,30],[423,15,362,15,"getCommentStats"],[423,30,362,30],[424,6,362,30],[425,6,430,2],[426,0,431,0],[427,0,432,0],[428,6,430,2],[429,4,430,2],[430,6,430,2,"key"],[430,9,430,2],[431,6,430,2,"value"],[431,11,430,2],[432,8,430,2],[432,12,430,2,"_reportComment"],[432,26,430,2],[432,33,430,2,"_asyncToGenerator2"],[432,51,430,2],[432,52,430,2,"default"],[432,59,430,2],[432,61,433,2],[432,72,433,29,"commentId"],[432,81,433,46],[432,83,433,48,"reason"],[432,89,433,62],[432,91,433,82],[433,10,434,4],[433,14,434,8],[434,12,435,6],[434,16,435,6,"_yield$supabase$auth$7"],[434,38,435,6],[434,47,435,39,"supabase"],[434,63,435,47],[434,64,435,48,"auth"],[434,68,435,52],[434,69,435,53,"getUser"],[434,76,435,60],[434,77,435,61],[434,78,435,62],[435,14,435,22,"user"],[435,18,435,26],[435,21,435,26,"_yield$supabase$auth$7"],[435,43,435,26],[435,44,435,14,"data"],[435,48,435,18],[435,49,435,22,"user"],[435,53,435,26],[436,12,436,6],[436,16,436,10],[436,17,436,11,"user"],[436,21,436,15],[436,23,436,17],[436,29,436,23],[436,33,436,27,"Error"],[436,38,436,32],[436,39,436,33],[436,63,436,57],[436,64,436,58],[438,12,438,6],[439,12,439,6,"EventLogger"],[439,36,439,17],[439,37,439,18,"debug"],[439,42,439,23],[439,43,439,24],[439,53,439,34],[439,55,439,36],[439,74,439,55],[439,76,439,57],[440,14,439,59,"commentId"],[440,23,439,68],[440,25,439,59,"commentId"],[440,34,439,68],[441,14,439,70,"reason"],[441,20,439,76],[441,22,439,70,"reason"],[441,28,439,76],[442,14,439,78,"reportedBy"],[442,24,439,88],[442,26,439,90,"user"],[442,30,439,94],[442,31,439,95,"id"],[443,12,439,98],[443,13,439,99],[443,14,439,100],[445,12,441,6],[446,12,442,6],[446,19,442,13],[446,23,442,17],[447,10,443,4],[447,11,443,5],[447,12,443,6],[447,19,443,13,"error"],[447,24,443,18],[447,26,443,20],[448,12,444,6,"EventLogger"],[448,36,444,17],[448,37,444,18,"error"],[448,42,444,23],[448,43,444,24],[448,53,444,34],[448,55,444,36],[448,82,444,63],[448,84,444,65,"error"],[448,89,444,79],[448,90,444,80],[449,12,445,6],[449,19,445,13],[449,24,445,18],[450,10,446,4],[451,8,447,2],[451,9,447,3],[452,8,447,3],[452,17,433,15,"reportComment"],[452,30,433,28,"reportComment"],[452,31,433,28,"_x12"],[452,35,433,28],[452,37,433,28,"_x13"],[452,41,433,28],[453,10,433,28],[453,17,433,28,"_reportComment"],[453,31,433,28],[453,32,433,28,"apply"],[453,37,433,28],[453,44,433,28,"arguments"],[453,53,433,28],[454,8,433,28],[455,8,433,28],[455,15,433,15,"reportComment"],[455,28,433,28],[456,6,433,28],[457,4,433,28],[458,2,433,28],[459,0,433,28],[459,3]],"functionMap":{"names":["<global>","CommentsService","getComments","comments.forEach$argument_0","commentsMap.forEach$argument_0","rootComments.forEach$argument_0","comment.replies.sort$argument_0","markUserLikes","collectCommentIds","likes.map$argument_0","markLikes","addComment","updateComment","deleteComment","toggleCommentLike","toggleCommentPin","getCommentStats","comments.filter$argument_0","comments.map$argument_0","comments.reduce$argument_0","comments.sort$argument_0","reportComment"],"mappings":"AAA;OCgC;ECI;wBCkB;ODO;0BEG;OFY;2BGG;+BCE,6ED;OHE;GDa;EMK;gCCI;yBLC;SKK;ODC;iDEY,uBF;wBGE;yBPC;SOK;OHC;GNM;EUK;GV8E;EWK;GXqB;EYK;GZiB;EaK;GbuC;EcK;GdqC;EeK;4CCU,iCD;qDEC,cF;0CGC,+BH;0CGM;+DHC;wBIyB,6EJ;GfsB;EoBK;GpBc"}},"type":"js/module"}]}