{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"./ExpoClipboardPasteButton","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":27},"end":{"line":2,"column":66,"index":93}}],"key":"eN9lJtsTwVKwb1gWXbxxisBeqBM=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ClipboardPasteButton = ClipboardPasteButton;\n  var _objectWithoutProperties2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _react = _interopRequireDefault(require(_dependencyMap[2]));\n  var _ExpoClipboardPasteButton = _interopRequireDefault(require(_dependencyMap[3]));\n  var _jsxRuntime = require(_dependencyMap[4]);\n  var _excluded = [\"onPress\"]; // @needsAudit\n  /**\n   * This component displays the `UIPasteControl` button on your screen. This allows pasting from the clipboard without requesting permission from the user.\n   *\n   * You should only attempt to render this if [`Clipboard.isPasteButtonAvailable`](#ispastebuttonavailable)\n   * is `true`. This component will render nothing if it is not available, and you will get\n   * a warning in development mode (`__DEV__ === true`).\n   *\n   * The properties of this component extend from `View`; however, you should not attempt to set\n   * `backgroundColor`, `color` or `borderRadius` with the `style` property. Apple restricts customisation of this view.\n   * Instead, you should use the backgroundColor and foregroundColor properties to set the colors of the button, the cornerStyle property to change the border radius,\n   * and the displayMode property to change the appearance of the icon and label. The word \"Paste\" is not editable and neither is the icon.\n   *\n   * Make sure to attach height and width via the style props as without these styles, the button will\n   * not appear on the screen.\n   *\n   * @see [Apple Documentation](https://developer.apple.com/documentation/uikit/uipastecontrol) for more details.\n   */\n  function ClipboardPasteButton(_ref) {\n    var onPress = _ref.onPress,\n      restProps = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n    if (!_ExpoClipboardPasteButton.default) {\n      return null;\n    }\n    var onPastePressed = _ref2 => {\n      var nativeEvent = _ref2.nativeEvent;\n      onPress(nativeEvent);\n    };\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_ExpoClipboardPasteButton.default, {\n      onPastePressed: onPastePressed,\n      ...restProps\n    });\n  }\n});","lineCount":44,"map":[[8,2,1,0],[8,6,1,0,"_react"],[8,12,1,0],[8,15,1,0,"_interopRequireDefault"],[8,37,1,0],[8,38,1,0,"require"],[8,45,1,0],[8,46,1,0,"_dependencyMap"],[8,60,1,0],[9,2,2,0],[9,6,2,0,"_ExpoClipboardPasteButton"],[9,31,2,0],[9,34,2,0,"_interopRequireDefault"],[9,56,2,0],[9,57,2,0,"require"],[9,64,2,0],[9,65,2,0,"_dependencyMap"],[9,79,2,0],[10,2,2,66],[10,6,2,66,"_jsxRuntime"],[10,17,2,66],[10,20,2,66,"require"],[10,27,2,66],[10,28,2,66,"_dependencyMap"],[10,42,2,66],[11,2,2,66],[11,6,2,66,"_excluded"],[11,15,2,66],[11,31,3,0],[12,2,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[16,0,8,0],[17,0,9,0],[18,0,10,0],[19,0,11,0],[20,0,12,0],[21,0,13,0],[22,0,14,0],[23,0,15,0],[24,0,16,0],[25,0,17,0],[26,0,18,0],[27,0,19,0],[28,0,20,0],[29,2,21,7],[29,11,21,16,"ClipboardPasteButton"],[29,31,21,36,"ClipboardPasteButton"],[29,32,21,36,"_ref"],[29,36,21,36],[29,38,21,64],[30,4,21,64],[30,8,21,39,"onPress"],[30,15,21,46],[30,18,21,46,"_ref"],[30,22,21,46],[30,23,21,39,"onPress"],[30,30,21,46],[31,6,21,51,"restProps"],[31,15,21,60],[31,22,21,60,"_objectWithoutProperties2"],[31,47,21,60],[31,48,21,60,"default"],[31,55,21,60],[31,57,21,60,"_ref"],[31,61,21,60],[31,63,21,60,"_excluded"],[31,72,21,60],[32,4,22,4],[32,8,22,8],[32,9,22,9,"ExpoClipboardPasteButton"],[32,42,22,33],[32,44,22,35],[33,6,26,8],[33,13,26,15],[33,17,26,19],[34,4,27,4],[35,4,28,4],[35,8,28,10,"onPastePressed"],[35,22,28,24],[35,25,28,27,"_ref2"],[35,30,28,27],[35,34,28,48],[36,6,28,48],[36,10,28,30,"nativeEvent"],[36,21,28,41],[36,24,28,41,"_ref2"],[36,29,28,41],[36,30,28,30,"nativeEvent"],[36,41,28,41],[37,6,29,8,"onPress"],[37,13,29,15],[37,14,29,16,"nativeEvent"],[37,25,29,27],[37,26,29,28],[38,4,30,4],[38,5,30,5],[39,4,31,4],[39,24,31,11],[39,28,31,11,"_jsxRuntime"],[39,39,31,11],[39,40,31,11,"jsx"],[39,43,31,11],[39,45,31,12,"_ExpoClipboardPasteButton"],[39,70,31,12],[39,71,31,12,"default"],[39,78,31,36],[40,6,31,37,"onPastePressed"],[40,20,31,51],[40,22,31,53,"onPastePressed"],[40,36,31,68],[41,6,31,68],[41,9,31,73,"restProps"],[42,4,31,82],[42,5,31,84],[42,6,31,85],[43,2,32,0],[44,0,32,1],[44,3]],"functionMap":{"names":["<global>","ClipboardPasteButton","onPastePressed"],"mappings":"AAA;OCoB;2BCO;KDE;CDE"}},"type":"js/module"}]}