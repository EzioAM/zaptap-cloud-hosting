{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"../config/analytics","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":167},"end":{"line":6,"column":55,"index":222}}],"key":"YGYa4Wqakz6PJ1ioH8VpeplkmtU=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.logUserAction = exports.logPerformance = exports.logNetworkRequest = exports.logError = exports.logAnalyticsEvent = exports.LogLevel = exports.EventLogger = void 0;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _toConsumableArray2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n  var _analytics = require(_dependencyMap[6], \"../config/analytics\");\n  /**\r\n   * EventLogger - Centralized logging utility for the application\r\n   * Provides structured logging with different levels and optional analytics integration\r\n   */\n  var LogLevel = exports.LogLevel = /*#__PURE__*/function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"INFO\"] = 1] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 2] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 3] = \"ERROR\";\n    LogLevel[LogLevel[\"CRITICAL\"] = 4] = \"CRITICAL\";\n    return LogLevel;\n  }({});\n  var EventLoggerService = /*#__PURE__*/function () {\n    function EventLoggerService() {\n      var _this = this;\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      (0, _classCallCheck2.default)(this, EventLoggerService);\n      this.localEntries = [];\n      this.logQueue = [];\n      this.isFlushingLogs = false;\n      this.config = Object.assign({\n        minLevel: __DEV__ ? LogLevel.DEBUG : LogLevel.INFO,\n        enableConsoleOutput: true,\n        enableRemoteLogging: _analytics.ANALYTICS_CONFIG.enabled,\n        maxLocalEntries: 1000,\n        shouldSanitizeData: true\n      }, config);\n      this.sessionId = this.generateSessionId();\n      this.setupGlobalErrorHandling();\n\n      // Flush logs periodically\n      if (this.config.enableRemoteLogging) {\n        setInterval(function () {\n          return _this.flushLogs();\n        }, 30000); // Every 30 seconds\n      }\n    }\n\n    /**\r\n     * Set user context for all future logs\r\n     */\n    return (0, _createClass2.default)(EventLoggerService, [{\n      key: \"setUser\",\n      value: function setUser(userId, properties) {\n        this.userId = userId;\n        this.debug('EventLogger', 'User context set', {\n          userId: userId,\n          properties: properties\n        });\n      }\n\n      /**\r\n       * Clear user context\r\n       */\n    }, {\n      key: \"clearUser\",\n      value: function clearUser() {\n        this.userId = undefined;\n        this.debug('EventLogger', 'User context cleared');\n      }\n\n      /**\r\n       * Debug level logging - only in development\r\n       */\n    }, {\n      key: \"debug\",\n      value: function debug(category, message, data, context) {\n        if (__DEV__) {\n          this.log(LogLevel.DEBUG, category, message, data, undefined, context);\n        }\n      }\n\n      /**\r\n       * Info level logging\r\n       */\n    }, {\n      key: \"info\",\n      value: function info(category, message, data, context) {\n        this.log(LogLevel.INFO, category, message, data, undefined, context);\n      }\n\n      /**\r\n       * Warning level logging\r\n       */\n    }, {\n      key: \"warn\",\n      value: function warn(category, message, data, context) {\n        this.log(LogLevel.WARN, category, message, data, undefined, context);\n      }\n\n      /**\r\n       * Error level logging\r\n       */\n    }, {\n      key: \"error\",\n      value: function error(category, message, _error, data, context) {\n        this.log(LogLevel.ERROR, category, message, data, _error, context);\n      }\n\n      /**\r\n       * Critical error logging\r\n       */\n    }, {\n      key: \"critical\",\n      value: function critical(category, message, error, data, context) {\n        this.log(LogLevel.CRITICAL, category, message, data, error, context);\n      }\n\n      /**\r\n       * Network request logging\r\n       */\n    }, {\n      key: \"networkRequest\",\n      value: function networkRequest(url, method, statusCode, duration, error) {\n        var data = {\n          url: url,\n          method: method,\n          statusCode: statusCode,\n          duration: duration,\n          timestamp: Date.now()\n        };\n        if (error || statusCode && statusCode >= 400) {\n          this.error('Network', `${method} ${url} failed`, error, data);\n        } else {\n          this.info('Network', `${method} ${url}`, data);\n        }\n      }\n\n      /**\r\n       * Performance logging\r\n       */\n    }, {\n      key: \"performance\",\n      value: function performance(category, operation, duration, metadata) {\n        var data = Object.assign({\n          operation: operation,\n          duration: duration\n        }, metadata);\n        if (duration > _analytics.ANALYTICS_CONFIG.performance.slowThresholdMs) {\n          this.warn('Performance', `Slow ${operation}: ${duration}ms`, data);\n        } else {\n          this.info('Performance', `${operation}: ${duration}ms`, data);\n        }\n      }\n\n      /**\r\n       * User action logging\r\n       */\n    }, {\n      key: \"userAction\",\n      value: function userAction(action, screen, data) {\n        this.info('UserAction', `${action} on ${screen}`, Object.assign({\n          action: action,\n          screen: screen\n        }, data));\n      }\n\n      /**\r\n       * Analytics event logging\r\n       */\n    }, {\n      key: \"analyticsEvent\",\n      value: function analyticsEvent(eventName, properties) {\n        this.info('Analytics', `Event: ${eventName}`, {\n          eventName: eventName,\n          properties: properties\n        });\n      }\n\n      /**\r\n       * Core logging method\r\n       */\n    }, {\n      key: \"log\",\n      value: function log(level, category, message, data, error, context) {\n        // Check minimum log level\n        if (level < this.config.minLevel) {\n          return;\n        }\n        var entry = {\n          timestamp: new Date().toISOString(),\n          level: level,\n          category: category,\n          message: message,\n          data: this.config.shouldSanitizeData ? this.sanitizeData(data) : data,\n          error: error,\n          userId: this.userId,\n          sessionId: this.sessionId,\n          context: this.config.shouldSanitizeData ? this.sanitizeData(context) : context\n        };\n\n        // Store locally\n        this.storeLogEntry(entry);\n\n        // Console output\n        if (this.config.enableConsoleOutput) {\n          this.outputToConsole(entry);\n        }\n\n        // Queue for remote logging\n        if (this.config.enableRemoteLogging && level >= LogLevel.WARN) {\n          this.queueForRemoteLogging(entry);\n        }\n      }\n\n      /**\r\n       * Store log entry locally\r\n       */\n    }, {\n      key: \"storeLogEntry\",\n      value: function storeLogEntry(entry) {\n        this.localEntries.push(entry);\n\n        // Maintain max entries limit\n        if (this.localEntries.length > this.config.maxLocalEntries) {\n          this.localEntries = this.localEntries.slice(-this.config.maxLocalEntries);\n        }\n      }\n\n      /**\r\n       * Output log entry to console with appropriate styling\r\n       */\n    }, {\n      key: \"outputToConsole\",\n      value: function outputToConsole(entry) {\n        var _entry$timestamp$spli;\n        var timestamp = ((_entry$timestamp$spli = entry.timestamp.split('T')[1]) == null ? void 0 : _entry$timestamp$spli.split('.')[0]) || '';\n        var prefix = `[${timestamp}] [${entry.category}]`;\n        switch (entry.level) {\n          case LogLevel.DEBUG:\n            console.debug(`üêõ ${prefix}`, entry.message, entry.data);\n            break;\n          case LogLevel.INFO:\n            console.info(`‚ÑπÔ∏è  ${prefix}`, entry.message, entry.data);\n            break;\n          case LogLevel.WARN:\n            console.warn(`‚ö†Ô∏è  ${prefix}`, entry.message, entry.data);\n            break;\n          case LogLevel.ERROR:\n            console.error(`‚ùå ${prefix}`, entry.message, entry.error || entry.data);\n            break;\n          case LogLevel.CRITICAL:\n            console.error(`üö® ${prefix}`, entry.message, entry.error || entry.data);\n            break;\n        }\n      }\n\n      /**\r\n       * Queue log entry for remote logging\r\n       */\n    }, {\n      key: \"queueForRemoteLogging\",\n      value: function queueForRemoteLogging(entry) {\n        this.logQueue.push(entry);\n\n        // Auto-flush if queue gets too large\n        if (this.logQueue.length >= 50) {\n          this.flushLogs();\n        }\n      }\n\n      /**\r\n       * Flush queued logs to remote service\r\n       */\n    }, {\n      key: \"flushLogs\",\n      value: (function () {\n        var _flushLogs = (0, _asyncToGenerator2.default)(function* () {\n          if (this.isFlushingLogs || this.logQueue.length === 0) {\n            return;\n          }\n          this.isFlushingLogs = true;\n          var logsToSend = (0, _toConsumableArray2.default)(this.logQueue);\n          this.logQueue = [];\n          try {\n            // In a real implementation, this would send to your logging service\n            // For now, we'll just log the intent\n            console.info(`üì§ Flushing ${logsToSend.length} log entries to remote service`);\n\n            // Example remote logging implementation:\n            // await fetch(this.config.remoteEndpoint, {\n            //   method: 'POST',\n            //   headers: {\n            //     'Content-Type': 'application/json',\n            //     'Authorization': `Bearer ${this.config.apiKey}`,\n            //   },\n            //   body: JSON.stringify({ logs: logsToSend }),\n            // });\n          } catch (error) {\n            var _this$logQueue;\n            // If remote logging fails, put logs back in queue\n            (_this$logQueue = this.logQueue).unshift.apply(_this$logQueue, (0, _toConsumableArray2.default)(logsToSend));\n            console.error('Failed to flush logs to remote service:', error);\n          } finally {\n            this.isFlushingLogs = false;\n          }\n        });\n        function flushLogs() {\n          return _flushLogs.apply(this, arguments);\n        }\n        return flushLogs;\n      }()\n      /**\r\n       * Get recent log entries\r\n       */\n      )\n    }, {\n      key: \"getRecentLogs\",\n      value: function getRecentLogs() {\n        var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n        var minLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LogLevel.INFO;\n        return this.localEntries.filter(function (entry) {\n          return entry.level >= minLevel;\n        }).slice(-count);\n      }\n\n      /**\r\n       * Get logs by category\r\n       */\n    }, {\n      key: \"getLogsByCategory\",\n      value: function getLogsByCategory(category) {\n        var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n        return this.localEntries.filter(function (entry) {\n          return entry.category === category;\n        }).slice(-count);\n      }\n\n      /**\r\n       * Search logs\r\n       */\n    }, {\n      key: \"searchLogs\",\n      value: function searchLogs(query) {\n        var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n        var normalizedQuery = query.toLowerCase();\n        return this.localEntries.filter(function (entry) {\n          return entry.message.toLowerCase().includes(normalizedQuery) || entry.category.toLowerCase().includes(normalizedQuery) || JSON.stringify(entry.data || {}).toLowerCase().includes(normalizedQuery);\n        }).slice(-count);\n      }\n\n      /**\r\n       * Export logs (for debugging or support)\r\n       */\n    }, {\n      key: \"exportLogs\",\n      value: function exportLogs() {\n        var minLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : LogLevel.INFO;\n        var logs = this.localEntries.filter(function (entry) {\n          return entry.level >= minLevel;\n        });\n        return JSON.stringify(logs, null, 2);\n      }\n\n      /**\r\n       * Clear local log entries\r\n       */\n    }, {\n      key: \"clearLogs\",\n      value: function clearLogs() {\n        this.localEntries = [];\n        this.debug('EventLogger', 'Local logs cleared');\n      }\n\n      /**\r\n       * Update configuration\r\n       */\n    }, {\n      key: \"updateConfig\",\n      value: function updateConfig(newConfig) {\n        this.config = Object.assign({}, this.config, newConfig);\n        this.info('EventLogger', 'Configuration updated', newConfig);\n      }\n\n      /**\r\n       * Setup global error handling\r\n       */\n    }, {\n      key: \"setupGlobalErrorHandling\",\n      value: function setupGlobalErrorHandling() {\n        var _global$process,\n          _this2 = this;\n        // Handle unhandled promise rejections\n        if (typeof global !== 'undefined') {\n          var originalHandler = global.onunhandledrejection;\n          var self = this;\n          global.onunhandledrejection = function (event) {\n            self.critical('UnhandledPromise', 'Unhandled promise rejection', event.reason, {\n              promise: event.promise\n            });\n            if (originalHandler) {\n              originalHandler.call(global, event);\n            }\n          };\n        }\n\n        // Handle uncaught exceptions\n        if (typeof global !== 'undefined' && (_global$process = global.process) != null && _global$process.on) {\n          global.process.on('uncaughtException', function (error) {\n            _this2.critical('UncaughtException', 'Uncaught exception', error);\n          });\n        }\n      }\n\n      /**\r\n       * Generate a unique session ID\r\n       */\n    }, {\n      key: \"generateSessionId\",\n      value: function generateSessionId() {\n        return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n      }\n\n      /**\r\n       * Sanitize data to remove sensitive information\r\n       */\n    }, {\n      key: \"sanitizeData\",\n      value: function sanitizeData(data) {\n        var _this3 = this;\n        if (!data) return data;\n        if (typeof data === 'string') {\n          // Basic sanitization for common sensitive patterns\n          return data.replace(/\\b\\d{16}\\b/g, '**** **** **** ****') // Credit card numbers\n          .replace(/\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g, '***@***.***'); // Email addresses\n        }\n        if (Array.isArray(data)) {\n          return data.map(function (item) {\n            return _this3.sanitizeData(item);\n          });\n        }\n        if (typeof data === 'object') {\n          var sanitized = {};\n          var _loop = function _loop(key) {\n            // Skip sensitive keys\n            var sensitiveKeys = ['password', 'token', 'secret', 'key', 'auth', 'credential'];\n            if (sensitiveKeys.some(function (sensitive) {\n              return key.toLowerCase().includes(sensitive);\n            })) {\n              sanitized[key] = '[REDACTED]';\n            } else {\n              sanitized[key] = _this3.sanitizeData(value);\n            }\n          };\n          for (var _ref of Object.entries(data)) {\n            var _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n            var key = _ref2[0];\n            var value = _ref2[1];\n            _loop(key);\n          }\n          return sanitized;\n        }\n        return data;\n      }\n    }]);\n  }(); // Singleton instance\n  var EventLogger = exports.EventLogger = new EventLoggerService();\n\n  // Convenience functions for common logging patterns\n  var logUserAction = exports.logUserAction = function logUserAction(action, screen, data) {\n    EventLogger.userAction(action, screen, data);\n  };\n  var logNetworkRequest = exports.logNetworkRequest = function logNetworkRequest(url, method, statusCode, duration, error) {\n    EventLogger.networkRequest(url, method, statusCode, duration, error);\n  };\n  var logPerformance = exports.logPerformance = function logPerformance(operation, duration, metadata) {\n    EventLogger.performance('Performance', operation, duration, metadata);\n  };\n  var logError = exports.logError = function logError(category, message, error, data) {\n    EventLogger.error(category, message, error, data);\n  };\n  var logAnalyticsEvent = exports.logAnalyticsEvent = function logAnalyticsEvent(eventName, properties) {\n    EventLogger.analyticsEvent(eventName, properties);\n  };\n\n  // Types are already exported at declaration\n});","lineCount":489,"map":[[12,2,6,0],[12,6,6,0,"_analytics"],[12,16,6,0],[12,19,6,0,"require"],[12,26,6,0],[12,27,6,0,"_dependencyMap"],[12,41,6,0],[13,2,1,0],[14,0,2,0],[15,0,3,0],[16,0,4,0],[17,2,1,0],[17,6,8,12,"LogLevel"],[17,14,8,20],[17,17,8,20,"exports"],[17,24,8,20],[17,25,8,20,"LogLevel"],[17,33,8,20],[17,59,8,12,"LogLevel"],[17,67,8,20],[18,4,8,12,"LogLevel"],[18,12,8,20],[18,13,8,12,"LogLevel"],[18,21,8,20],[19,4,8,12,"LogLevel"],[19,12,8,20],[19,13,8,12,"LogLevel"],[19,21,8,20],[20,4,8,12,"LogLevel"],[20,12,8,20],[20,13,8,12,"LogLevel"],[20,21,8,20],[21,4,8,12,"LogLevel"],[21,12,8,20],[21,13,8,12,"LogLevel"],[21,21,8,20],[22,4,8,12,"LogLevel"],[22,12,8,20],[22,13,8,12,"LogLevel"],[22,21,8,20],[23,4,8,20],[23,11,8,12,"LogLevel"],[23,19,8,20],[24,2,8,20],[25,2,8,20],[25,6,38,6,"EventLoggerService"],[25,24,38,24],[26,4,46,2],[26,13,46,2,"EventLoggerService"],[26,32,46,2],[26,34,46,50],[27,6,46,50],[27,10,46,50,"_this"],[27,15,46,50],[28,6,46,50],[28,10,46,14,"config"],[28,16,46,43],[28,19,46,43,"arguments"],[28,28,46,43],[28,29,46,43,"length"],[28,35,46,43],[28,43,46,43,"arguments"],[28,52,46,43],[28,60,46,43,"undefined"],[28,69,46,43],[28,72,46,43,"arguments"],[28,81,46,43],[28,87,46,46],[28,88,46,47],[28,89,46,48],[29,6,46,48],[29,10,46,48,"_classCallCheck2"],[29,26,46,48],[29,27,46,48,"default"],[29,34,46,48],[29,42,46,48,"EventLoggerService"],[29,60,46,48],[30,6,46,48],[30,11,40,10,"localEntries"],[30,23,40,22],[30,26,40,37],[30,28,40,39],[31,6,40,39],[31,11,43,10,"logQueue"],[31,19,43,18],[31,22,43,33],[31,24,43,35],[32,6,43,35],[32,11,44,10,"isFlushingLogs"],[32,25,44,24],[32,28,44,27],[32,33,44,32],[33,6,47,4],[33,10,47,8],[33,11,47,9,"config"],[33,17,47,15],[33,20,47,15,"Object"],[33,26,47,15],[33,27,47,15,"assign"],[33,33,47,15],[34,8,48,6,"minLevel"],[34,16,48,14],[34,18,48,16,"__DEV__"],[34,25,48,23],[34,28,48,26,"LogLevel"],[34,36,48,34],[34,37,48,35,"DEBUG"],[34,42,48,40],[34,45,48,43,"LogLevel"],[34,53,48,51],[34,54,48,52,"INFO"],[34,58,48,56],[35,8,49,6,"enableConsoleOutput"],[35,27,49,25],[35,29,49,27],[35,33,49,31],[36,8,50,6,"enableRemoteLogging"],[36,27,50,25],[36,29,50,27,"ANALYTICS_CONFIG"],[36,56,50,43],[36,57,50,44,"enabled"],[36,64,50,51],[37,8,51,6,"maxLocalEntries"],[37,23,51,21],[37,25,51,23],[37,29,51,27],[38,8,52,6,"shouldSanitizeData"],[38,26,52,24],[38,28,52,26],[39,6,52,30],[39,9,53,9,"config"],[39,15,53,15],[39,16,54,5],[40,6,56,4],[40,10,56,8],[40,11,56,9,"sessionId"],[40,20,56,18],[40,23,56,21],[40,27,56,25],[40,28,56,26,"generateSessionId"],[40,45,56,43],[40,46,56,44],[40,47,56,45],[41,6,57,4],[41,10,57,8],[41,11,57,9,"setupGlobalErrorHandling"],[41,35,57,33],[41,36,57,34],[41,37,57,35],[43,6,59,4],[44,6,60,4],[44,10,60,8],[44,14,60,12],[44,15,60,13,"config"],[44,21,60,19],[44,22,60,20,"enableRemoteLogging"],[44,41,60,39],[44,43,60,41],[45,8,61,6,"setInterval"],[45,19,61,17],[45,20,61,18],[46,10,61,18],[46,17,61,24,"_this"],[46,22,61,28],[46,23,61,29,"flushLogs"],[46,32,61,38],[46,33,61,39],[46,34,61,40],[47,8,61,40],[47,11,61,42],[47,16,61,47],[47,17,61,48],[47,18,61,49],[47,19,61,50],[48,6,62,4],[49,4,63,2],[51,4,65,2],[52,0,66,0],[53,0,67,0],[54,4,65,2],[54,15,65,2,"_createClass2"],[54,28,65,2],[54,29,65,2,"default"],[54,36,65,2],[54,38,65,2,"EventLoggerService"],[54,56,65,2],[55,6,65,2,"key"],[55,9,65,2],[56,6,65,2,"value"],[56,11,65,2],[56,13,68,2],[56,22,68,2,"setUser"],[56,29,68,9,"setUser"],[56,30,68,10,"userId"],[56,36,68,24],[56,38,68,26,"properties"],[56,48,68,58],[56,50,68,66],[57,8,69,4],[57,12,69,8],[57,13,69,9,"userId"],[57,19,69,15],[57,22,69,18,"userId"],[57,28,69,24],[58,8,70,4],[58,12,70,8],[58,13,70,9,"debug"],[58,18,70,14],[58,19,70,15],[58,32,70,28],[58,34,70,30],[58,52,70,48],[58,54,70,50],[59,10,70,52,"userId"],[59,16,70,58],[59,18,70,52,"userId"],[59,24,70,58],[60,10,70,60,"properties"],[60,20,70,70],[60,22,70,60,"properties"],[61,8,70,71],[61,9,70,72],[61,10,70,73],[62,6,71,2],[64,6,73,2],[65,0,74,0],[66,0,75,0],[67,4,73,2],[68,6,73,2,"key"],[68,9,73,2],[69,6,73,2,"value"],[69,11,73,2],[69,13,76,2],[69,22,76,2,"clearUser"],[69,31,76,11,"clearUser"],[69,32,76,11],[69,34,76,20],[70,8,77,4],[70,12,77,8],[70,13,77,9,"userId"],[70,19,77,15],[70,22,77,18,"undefined"],[70,31,77,27],[71,8,78,4],[71,12,78,8],[71,13,78,9,"debug"],[71,18,78,14],[71,19,78,15],[71,32,78,28],[71,34,78,30],[71,56,78,52],[71,57,78,53],[72,6,79,2],[74,6,81,2],[75,0,82,0],[76,0,83,0],[77,4,81,2],[78,6,81,2,"key"],[78,9,81,2],[79,6,81,2,"value"],[79,11,81,2],[79,13,84,2],[79,22,84,2,"debug"],[79,27,84,7,"debug"],[79,28,84,8,"category"],[79,36,84,24],[79,38,84,26,"message"],[79,45,84,41],[79,47,84,43,"data"],[79,51,84,53],[79,53,84,55,"context"],[79,60,84,84],[79,62,84,92],[80,8,85,4],[80,12,85,8,"__DEV__"],[80,19,85,15],[80,21,85,17],[81,10,86,6],[81,14,86,10],[81,15,86,11,"log"],[81,18,86,14],[81,19,86,15,"LogLevel"],[81,27,86,23],[81,28,86,24,"DEBUG"],[81,33,86,29],[81,35,86,31,"category"],[81,43,86,39],[81,45,86,41,"message"],[81,52,86,48],[81,54,86,50,"data"],[81,58,86,54],[81,60,86,56,"undefined"],[81,69,86,65],[81,71,86,67,"context"],[81,78,86,74],[81,79,86,75],[82,8,87,4],[83,6,88,2],[85,6,90,2],[86,0,91,0],[87,0,92,0],[88,4,90,2],[89,6,90,2,"key"],[89,9,90,2],[90,6,90,2,"value"],[90,11,90,2],[90,13,93,2],[90,22,93,2,"info"],[90,26,93,6,"info"],[90,27,93,7,"category"],[90,35,93,23],[90,37,93,25,"message"],[90,44,93,40],[90,46,93,42,"data"],[90,50,93,52],[90,52,93,54,"context"],[90,59,93,83],[90,61,93,91],[91,8,94,4],[91,12,94,8],[91,13,94,9,"log"],[91,16,94,12],[91,17,94,13,"LogLevel"],[91,25,94,21],[91,26,94,22,"INFO"],[91,30,94,26],[91,32,94,28,"category"],[91,40,94,36],[91,42,94,38,"message"],[91,49,94,45],[91,51,94,47,"data"],[91,55,94,51],[91,57,94,53,"undefined"],[91,66,94,62],[91,68,94,64,"context"],[91,75,94,71],[91,76,94,72],[92,6,95,2],[94,6,97,2],[95,0,98,0],[96,0,99,0],[97,4,97,2],[98,6,97,2,"key"],[98,9,97,2],[99,6,97,2,"value"],[99,11,97,2],[99,13,100,2],[99,22,100,2,"warn"],[99,26,100,6,"warn"],[99,27,100,7,"category"],[99,35,100,23],[99,37,100,25,"message"],[99,44,100,40],[99,46,100,42,"data"],[99,50,100,52],[99,52,100,54,"context"],[99,59,100,83],[99,61,100,91],[100,8,101,4],[100,12,101,8],[100,13,101,9,"log"],[100,16,101,12],[100,17,101,13,"LogLevel"],[100,25,101,21],[100,26,101,22,"WARN"],[100,30,101,26],[100,32,101,28,"category"],[100,40,101,36],[100,42,101,38,"message"],[100,49,101,45],[100,51,101,47,"data"],[100,55,101,51],[100,57,101,53,"undefined"],[100,66,101,62],[100,68,101,64,"context"],[100,75,101,71],[100,76,101,72],[101,6,102,2],[103,6,104,2],[104,0,105,0],[105,0,106,0],[106,4,104,2],[107,6,104,2,"key"],[107,9,104,2],[108,6,104,2,"value"],[108,11,104,2],[108,13,107,2],[108,22,107,2,"error"],[108,27,107,7,"error"],[108,28,107,8,"category"],[108,36,107,24],[108,38,107,26,"message"],[108,45,107,41],[108,47,107,43,"error"],[108,53,107,56],[108,55,107,58,"data"],[108,59,107,68],[108,61,107,70,"context"],[108,68,107,99],[108,70,107,107],[109,8,108,4],[109,12,108,8],[109,13,108,9,"log"],[109,16,108,12],[109,17,108,13,"LogLevel"],[109,25,108,21],[109,26,108,22,"ERROR"],[109,31,108,27],[109,33,108,29,"category"],[109,41,108,37],[109,43,108,39,"message"],[109,50,108,46],[109,52,108,48,"data"],[109,56,108,52],[109,58,108,54,"error"],[109,64,108,59],[109,66,108,61,"context"],[109,73,108,68],[109,74,108,69],[110,6,109,2],[112,6,111,2],[113,0,112,0],[114,0,113,0],[115,4,111,2],[116,6,111,2,"key"],[116,9,111,2],[117,6,111,2,"value"],[117,11,111,2],[117,13,114,2],[117,22,114,2,"critical"],[117,30,114,10,"critical"],[117,31,114,11,"category"],[117,39,114,27],[117,41,114,29,"message"],[117,48,114,44],[117,50,114,46,"error"],[117,55,114,59],[117,57,114,61,"data"],[117,61,114,71],[117,63,114,73,"context"],[117,70,114,102],[117,72,114,110],[118,8,115,4],[118,12,115,8],[118,13,115,9,"log"],[118,16,115,12],[118,17,115,13,"LogLevel"],[118,25,115,21],[118,26,115,22,"CRITICAL"],[118,34,115,30],[118,36,115,32,"category"],[118,44,115,40],[118,46,115,42,"message"],[118,53,115,49],[118,55,115,51,"data"],[118,59,115,55],[118,61,115,57,"error"],[118,66,115,62],[118,68,115,64,"context"],[118,75,115,71],[118,76,115,72],[119,6,116,2],[121,6,118,2],[122,0,119,0],[123,0,120,0],[124,4,118,2],[125,6,118,2,"key"],[125,9,118,2],[126,6,118,2,"value"],[126,11,118,2],[126,13,121,2],[126,22,121,2,"networkRequest"],[126,36,121,16,"networkRequest"],[126,37,121,17,"url"],[126,40,121,28],[126,42,121,30,"method"],[126,48,121,44],[126,50,121,46,"statusCode"],[126,60,121,65],[126,62,121,67,"duration"],[126,70,121,84],[126,72,121,86,"error"],[126,77,121,99],[126,79,121,107],[127,8,122,4],[127,12,122,10,"data"],[127,16,122,14],[127,19,122,17],[128,10,123,6,"url"],[128,13,123,9],[128,15,123,6,"url"],[128,18,123,9],[129,10,124,6,"method"],[129,16,124,12],[129,18,124,6,"method"],[129,24,124,12],[130,10,125,6,"statusCode"],[130,20,125,16],[130,22,125,6,"statusCode"],[130,32,125,16],[131,10,126,6,"duration"],[131,18,126,14],[131,20,126,6,"duration"],[131,28,126,14],[132,10,127,6,"timestamp"],[132,19,127,15],[132,21,127,17,"Date"],[132,25,127,21],[132,26,127,22,"now"],[132,29,127,25],[132,30,127,26],[133,8,128,4],[133,9,128,5],[134,8,130,4],[134,12,130,8,"error"],[134,17,130,13],[134,21,130,18,"statusCode"],[134,31,130,28],[134,35,130,32,"statusCode"],[134,45,130,42],[134,49,130,46],[134,52,130,50],[134,54,130,52],[135,10,131,6],[135,14,131,10],[135,15,131,11,"error"],[135,20,131,16],[135,21,131,17],[135,30,131,26],[135,32,131,28],[135,35,131,31,"method"],[135,41,131,37],[135,45,131,41,"url"],[135,48,131,44],[135,57,131,53],[135,59,131,55,"error"],[135,64,131,60],[135,66,131,62,"data"],[135,70,131,66],[135,71,131,67],[136,8,132,4],[136,9,132,5],[136,15,132,11],[137,10,133,6],[137,14,133,10],[137,15,133,11,"info"],[137,19,133,15],[137,20,133,16],[137,29,133,25],[137,31,133,27],[137,34,133,30,"method"],[137,40,133,36],[137,44,133,40,"url"],[137,47,133,43],[137,49,133,45],[137,51,133,47,"data"],[137,55,133,51],[137,56,133,52],[138,8,134,4],[139,6,135,2],[141,6,137,2],[142,0,138,0],[143,0,139,0],[144,4,137,2],[145,6,137,2,"key"],[145,9,137,2],[146,6,137,2,"value"],[146,11,137,2],[146,13,140,2],[146,22,140,2,"performance"],[146,33,140,13,"performance"],[146,34,140,14,"category"],[146,42,140,30],[146,44,140,32,"operation"],[146,53,140,49],[146,55,140,51,"duration"],[146,63,140,67],[146,65,140,69,"metadata"],[146,73,140,99],[146,75,140,107],[147,8,141,4],[147,12,141,10,"data"],[147,16,141,14],[147,19,141,14,"Object"],[147,25,141,14],[147,26,141,14,"assign"],[147,32,141,14],[148,10,142,6,"operation"],[148,19,142,15],[148,21,142,6,"operation"],[148,30,142,15],[149,10,143,6,"duration"],[149,18,143,14],[149,20,143,6,"duration"],[150,8,143,14],[150,11,144,9,"metadata"],[150,19,144,17],[150,20,145,5],[151,8,147,4],[151,12,147,8,"duration"],[151,20,147,16],[151,23,147,19,"ANALYTICS_CONFIG"],[151,50,147,35],[151,51,147,36,"performance"],[151,62,147,47],[151,63,147,48,"slowThresholdMs"],[151,78,147,63],[151,80,147,65],[152,10,148,6],[152,14,148,10],[152,15,148,11,"warn"],[152,19,148,15],[152,20,148,16],[152,33,148,29],[152,35,148,31],[152,43,148,39,"operation"],[152,52,148,48],[152,57,148,53,"duration"],[152,65,148,61],[152,69,148,65],[152,71,148,67,"data"],[152,75,148,71],[152,76,148,72],[153,8,149,4],[153,9,149,5],[153,15,149,11],[154,10,150,6],[154,14,150,10],[154,15,150,11,"info"],[154,19,150,15],[154,20,150,16],[154,33,150,29],[154,35,150,31],[154,38,150,34,"operation"],[154,47,150,43],[154,52,150,48,"duration"],[154,60,150,56],[154,64,150,60],[154,66,150,62,"data"],[154,70,150,66],[154,71,150,67],[155,8,151,4],[156,6,152,2],[158,6,154,2],[159,0,155,0],[160,0,156,0],[161,4,154,2],[162,6,154,2,"key"],[162,9,154,2],[163,6,154,2,"value"],[163,11,154,2],[163,13,157,2],[163,22,157,2,"userAction"],[163,32,157,12,"userAction"],[163,33,157,13,"action"],[163,39,157,27],[163,41,157,29,"screen"],[163,47,157,43],[163,49,157,45,"data"],[163,53,157,55],[163,55,157,63],[164,8,158,4],[164,12,158,8],[164,13,158,9,"info"],[164,17,158,13],[164,18,158,14],[164,30,158,26],[164,32,158,28],[164,35,158,31,"action"],[164,41,158,37],[164,48,158,44,"screen"],[164,54,158,50],[164,56,158,52],[164,58,158,52,"Object"],[164,64,158,52],[164,65,158,52,"assign"],[164,71,158,52],[165,10,159,6,"action"],[165,16,159,12],[165,18,159,6,"action"],[165,24,159,12],[166,10,160,6,"screen"],[166,16,160,12],[166,18,160,6,"screen"],[167,8,160,12],[167,11,161,9,"data"],[167,15,161,13],[167,16,162,5],[167,17,162,6],[168,6,163,2],[170,6,165,2],[171,0,166,0],[172,0,167,0],[173,4,165,2],[174,6,165,2,"key"],[174,9,165,2],[175,6,165,2,"value"],[175,11,165,2],[175,13,168,2],[175,22,168,2,"analyticsEvent"],[175,36,168,16,"analyticsEvent"],[175,37,168,17,"eventName"],[175,46,168,34],[175,48,168,36,"properties"],[175,58,168,68],[175,60,168,76],[176,8,169,4],[176,12,169,8],[176,13,169,9,"info"],[176,17,169,13],[176,18,169,14],[176,29,169,25],[176,31,169,27],[176,41,169,37,"eventName"],[176,50,169,46],[176,52,169,48],[176,54,169,50],[177,10,170,6,"eventName"],[177,19,170,15],[177,21,170,6,"eventName"],[177,30,170,15],[178,10,171,6,"properties"],[178,20,171,16],[178,22,171,6,"properties"],[179,8,172,4],[179,9,172,5],[179,10,172,6],[180,6,173,2],[182,6,175,2],[183,0,176,0],[184,0,177,0],[185,4,175,2],[186,6,175,2,"key"],[186,9,175,2],[187,6,175,2,"value"],[187,11,175,2],[187,13,178,2],[187,22,178,10,"log"],[187,25,178,13,"log"],[187,26,179,4,"level"],[187,31,179,19],[187,33,180,4,"category"],[187,41,180,20],[187,43,181,4,"message"],[187,50,181,19],[187,52,182,4,"data"],[187,56,182,14],[187,58,183,4,"error"],[187,63,183,17],[187,65,184,4,"context"],[187,72,184,33],[187,74,185,10],[188,8,186,4],[189,8,187,4],[189,12,187,8,"level"],[189,17,187,13],[189,20,187,16],[189,24,187,20],[189,25,187,21,"config"],[189,31,187,27],[189,32,187,28,"minLevel"],[189,40,187,36],[189,42,187,38],[190,10,188,6],[191,8,189,4],[192,8,191,4],[192,12,191,10,"entry"],[192,17,191,25],[192,20,191,28],[193,10,192,6,"timestamp"],[193,19,192,15],[193,21,192,17],[193,25,192,21,"Date"],[193,29,192,25],[193,30,192,26],[193,31,192,27],[193,32,192,28,"toISOString"],[193,43,192,39],[193,44,192,40],[193,45,192,41],[194,10,193,6,"level"],[194,15,193,11],[194,17,193,6,"level"],[194,22,193,11],[195,10,194,6,"category"],[195,18,194,14],[195,20,194,6,"category"],[195,28,194,14],[196,10,195,6,"message"],[196,17,195,13],[196,19,195,6,"message"],[196,26,195,13],[197,10,196,6,"data"],[197,14,196,10],[197,16,196,12],[197,20,196,16],[197,21,196,17,"config"],[197,27,196,23],[197,28,196,24,"shouldSanitizeData"],[197,46,196,42],[197,49,196,45],[197,53,196,49],[197,54,196,50,"sanitizeData"],[197,66,196,62],[197,67,196,63,"data"],[197,71,196,67],[197,72,196,68],[197,75,196,71,"data"],[197,79,196,75],[198,10,197,6,"error"],[198,15,197,11],[198,17,197,6,"error"],[198,22,197,11],[199,10,198,6,"userId"],[199,16,198,12],[199,18,198,14],[199,22,198,18],[199,23,198,19,"userId"],[199,29,198,25],[200,10,199,6,"sessionId"],[200,19,199,15],[200,21,199,17],[200,25,199,21],[200,26,199,22,"sessionId"],[200,35,199,31],[201,10,200,6,"context"],[201,17,200,13],[201,19,200,15],[201,23,200,19],[201,24,200,20,"config"],[201,30,200,26],[201,31,200,27,"shouldSanitizeData"],[201,49,200,45],[201,52,200,48],[201,56,200,52],[201,57,200,53,"sanitizeData"],[201,69,200,65],[201,70,200,66,"context"],[201,77,200,73],[201,78,200,74],[201,81,200,77,"context"],[202,8,201,4],[202,9,201,5],[204,8,203,4],[205,8,204,4],[205,12,204,8],[205,13,204,9,"storeLogEntry"],[205,26,204,22],[205,27,204,23,"entry"],[205,32,204,28],[205,33,204,29],[207,8,206,4],[208,8,207,4],[208,12,207,8],[208,16,207,12],[208,17,207,13,"config"],[208,23,207,19],[208,24,207,20,"enableConsoleOutput"],[208,43,207,39],[208,45,207,41],[209,10,208,6],[209,14,208,10],[209,15,208,11,"outputToConsole"],[209,30,208,26],[209,31,208,27,"entry"],[209,36,208,32],[209,37,208,33],[210,8,209,4],[212,8,211,4],[213,8,212,4],[213,12,212,8],[213,16,212,12],[213,17,212,13,"config"],[213,23,212,19],[213,24,212,20,"enableRemoteLogging"],[213,43,212,39],[213,47,212,43,"level"],[213,52,212,48],[213,56,212,52,"LogLevel"],[213,64,212,60],[213,65,212,61,"WARN"],[213,69,212,65],[213,71,212,67],[214,10,213,6],[214,14,213,10],[214,15,213,11,"queueForRemoteLogging"],[214,36,213,32],[214,37,213,33,"entry"],[214,42,213,38],[214,43,213,39],[215,8,214,4],[216,6,215,2],[218,6,217,2],[219,0,218,0],[220,0,219,0],[221,4,217,2],[222,6,217,2,"key"],[222,9,217,2],[223,6,217,2,"value"],[223,11,217,2],[223,13,220,2],[223,22,220,10,"storeLogEntry"],[223,35,220,23,"storeLogEntry"],[223,36,220,24,"entry"],[223,41,220,39],[223,43,220,47],[224,8,221,4],[224,12,221,8],[224,13,221,9,"localEntries"],[224,25,221,21],[224,26,221,22,"push"],[224,30,221,26],[224,31,221,27,"entry"],[224,36,221,32],[224,37,221,33],[226,8,223,4],[227,8,224,4],[227,12,224,8],[227,16,224,12],[227,17,224,13,"localEntries"],[227,29,224,25],[227,30,224,26,"length"],[227,36,224,32],[227,39,224,35],[227,43,224,39],[227,44,224,40,"config"],[227,50,224,46],[227,51,224,47,"maxLocalEntries"],[227,66,224,62],[227,68,224,64],[228,10,225,6],[228,14,225,10],[228,15,225,11,"localEntries"],[228,27,225,23],[228,30,225,26],[228,34,225,30],[228,35,225,31,"localEntries"],[228,47,225,43],[228,48,225,44,"slice"],[228,53,225,49],[228,54,225,50],[228,55,225,51],[228,59,225,55],[228,60,225,56,"config"],[228,66,225,62],[228,67,225,63,"maxLocalEntries"],[228,82,225,78],[228,83,225,79],[229,8,226,4],[230,6,227,2],[232,6,229,2],[233,0,230,0],[234,0,231,0],[235,4,229,2],[236,6,229,2,"key"],[236,9,229,2],[237,6,229,2,"value"],[237,11,229,2],[237,13,232,2],[237,22,232,10,"outputToConsole"],[237,37,232,25,"outputToConsole"],[237,38,232,26,"entry"],[237,43,232,41],[237,45,232,49],[238,8,232,49],[238,12,232,49,"_entry$timestamp$spli"],[238,33,232,49],[239,8,233,4],[239,12,233,10,"timestamp"],[239,21,233,19],[239,24,233,22],[239,26,233,22,"_entry$timestamp$spli"],[239,47,233,22],[239,50,233,22,"entry"],[239,55,233,27],[239,56,233,28,"timestamp"],[239,65,233,37],[239,66,233,38,"split"],[239,71,233,43],[239,72,233,44],[239,75,233,47],[239,76,233,48],[239,77,233,49],[239,78,233,50],[239,79,233,51],[239,100,233,22,"_entry$timestamp$spli"],[239,121,233,22],[239,122,233,53,"split"],[239,127,233,58],[239,128,233,59],[239,131,233,62],[239,132,233,63],[239,133,233,64],[239,134,233,65],[239,135,233,66],[239,140,233,70],[239,142,233,72],[240,8,234,4],[240,12,234,10,"prefix"],[240,18,234,16],[240,21,234,19],[240,25,234,23,"timestamp"],[240,34,234,32],[240,40,234,38,"entry"],[240,45,234,43],[240,46,234,44,"category"],[240,54,234,52],[240,57,234,55],[241,8,236,4],[241,16,236,12,"entry"],[241,21,236,17],[241,22,236,18,"level"],[241,27,236,23],[242,10,237,6],[242,15,237,11,"LogLevel"],[242,23,237,19],[242,24,237,20,"DEBUG"],[242,29,237,25],[243,12,238,8,"console"],[243,19,238,15],[243,20,238,16,"debug"],[243,25,238,21],[243,26,238,22],[243,32,238,28,"prefix"],[243,38,238,34],[243,40,238,36],[243,42,238,38,"entry"],[243,47,238,43],[243,48,238,44,"message"],[243,55,238,51],[243,57,238,53,"entry"],[243,62,238,58],[243,63,238,59,"data"],[243,67,238,63],[243,68,238,64],[244,12,239,8],[245,10,240,6],[245,15,240,11,"LogLevel"],[245,23,240,19],[245,24,240,20,"INFO"],[245,28,240,24],[246,12,241,8,"console"],[246,19,241,15],[246,20,241,16,"info"],[246,24,241,20],[246,25,241,21],[246,32,241,28,"prefix"],[246,38,241,34],[246,40,241,36],[246,42,241,38,"entry"],[246,47,241,43],[246,48,241,44,"message"],[246,55,241,51],[246,57,241,53,"entry"],[246,62,241,58],[246,63,241,59,"data"],[246,67,241,63],[246,68,241,64],[247,12,242,8],[248,10,243,6],[248,15,243,11,"LogLevel"],[248,23,243,19],[248,24,243,20,"WARN"],[248,28,243,24],[249,12,244,8,"console"],[249,19,244,15],[249,20,244,16,"warn"],[249,24,244,20],[249,25,244,21],[249,32,244,28,"prefix"],[249,38,244,34],[249,40,244,36],[249,42,244,38,"entry"],[249,47,244,43],[249,48,244,44,"message"],[249,55,244,51],[249,57,244,53,"entry"],[249,62,244,58],[249,63,244,59,"data"],[249,67,244,63],[249,68,244,64],[250,12,245,8],[251,10,246,6],[251,15,246,11,"LogLevel"],[251,23,246,19],[251,24,246,20,"ERROR"],[251,29,246,25],[252,12,247,8,"console"],[252,19,247,15],[252,20,247,16,"error"],[252,25,247,21],[252,26,247,22],[252,31,247,27,"prefix"],[252,37,247,33],[252,39,247,35],[252,41,247,37,"entry"],[252,46,247,42],[252,47,247,43,"message"],[252,54,247,50],[252,56,247,52,"entry"],[252,61,247,57],[252,62,247,58,"error"],[252,67,247,63],[252,71,247,67,"entry"],[252,76,247,72],[252,77,247,73,"data"],[252,81,247,77],[252,82,247,78],[253,12,248,8],[254,10,249,6],[254,15,249,11,"LogLevel"],[254,23,249,19],[254,24,249,20,"CRITICAL"],[254,32,249,28],[255,12,250,8,"console"],[255,19,250,15],[255,20,250,16,"error"],[255,25,250,21],[255,26,250,22],[255,32,250,28,"prefix"],[255,38,250,34],[255,40,250,36],[255,42,250,38,"entry"],[255,47,250,43],[255,48,250,44,"message"],[255,55,250,51],[255,57,250,53,"entry"],[255,62,250,58],[255,63,250,59,"error"],[255,68,250,64],[255,72,250,68,"entry"],[255,77,250,73],[255,78,250,74,"data"],[255,82,250,78],[255,83,250,79],[256,12,251,8],[257,8,252,4],[258,6,253,2],[260,6,255,2],[261,0,256,0],[262,0,257,0],[263,4,255,2],[264,6,255,2,"key"],[264,9,255,2],[265,6,255,2,"value"],[265,11,255,2],[265,13,258,2],[265,22,258,10,"queueForRemoteLogging"],[265,43,258,31,"queueForRemoteLogging"],[265,44,258,32,"entry"],[265,49,258,47],[265,51,258,55],[266,8,259,4],[266,12,259,8],[266,13,259,9,"logQueue"],[266,21,259,17],[266,22,259,18,"push"],[266,26,259,22],[266,27,259,23,"entry"],[266,32,259,28],[266,33,259,29],[268,8,261,4],[269,8,262,4],[269,12,262,8],[269,16,262,12],[269,17,262,13,"logQueue"],[269,25,262,21],[269,26,262,22,"length"],[269,32,262,28],[269,36,262,32],[269,38,262,34],[269,40,262,36],[270,10,263,6],[270,14,263,10],[270,15,263,11,"flushLogs"],[270,24,263,20],[270,25,263,21],[270,26,263,22],[271,8,264,4],[272,6,265,2],[274,6,267,2],[275,0,268,0],[276,0,269,0],[277,4,267,2],[278,6,267,2,"key"],[278,9,267,2],[279,6,267,2,"value"],[279,11,267,2],[280,8,267,2],[280,12,267,2,"_flushLogs"],[280,22,267,2],[280,29,267,2,"_asyncToGenerator2"],[280,47,267,2],[280,48,267,2,"default"],[280,55,267,2],[280,57,270,2],[280,70,270,43],[281,10,271,4],[281,14,271,8],[281,18,271,12],[281,19,271,13,"isFlushingLogs"],[281,33,271,27],[281,37,271,31],[281,41,271,35],[281,42,271,36,"logQueue"],[281,50,271,44],[281,51,271,45,"length"],[281,57,271,51],[281,62,271,56],[281,63,271,57],[281,65,271,59],[282,12,272,6],[283,10,273,4],[284,10,275,4],[284,14,275,8],[284,15,275,9,"isFlushingLogs"],[284,29,275,23],[284,32,275,26],[284,36,275,30],[285,10,276,4],[285,14,276,10,"logsToSend"],[285,24,276,20],[285,31,276,20,"_toConsumableArray2"],[285,50,276,20],[285,51,276,20,"default"],[285,58,276,20],[285,60,276,27],[285,64,276,31],[285,65,276,32,"logQueue"],[285,73,276,40],[285,74,276,41],[286,10,277,4],[286,14,277,8],[286,15,277,9,"logQueue"],[286,23,277,17],[286,26,277,20],[286,28,277,22],[287,10,279,4],[287,14,279,8],[288,12,280,6],[289,12,281,6],[290,12,282,6,"console"],[290,19,282,13],[290,20,282,14,"info"],[290,24,282,18],[290,25,282,19],[290,40,282,34,"logsToSend"],[290,50,282,44],[290,51,282,45,"length"],[290,57,282,51],[290,89,282,83],[290,90,282,84],[292,12,284,6],[293,12,285,6],[294,12,286,6],[295,12,287,6],[296,12,288,6],[297,12,289,6],[298,12,290,6],[299,12,291,6],[300,12,292,6],[301,10,294,4],[301,11,294,5],[301,12,294,6],[301,19,294,13,"error"],[301,24,294,18],[301,26,294,20],[302,12,294,20],[302,16,294,20,"_this$logQueue"],[302,30,294,20],[303,12,295,6],[304,12,296,6],[304,13,296,6,"_this$logQueue"],[304,27,296,6],[304,34,296,10],[304,35,296,11,"logQueue"],[304,43,296,19],[304,45,296,20,"unshift"],[304,52,296,27],[304,53,296,27,"apply"],[304,58,296,27],[304,59,296,27,"_this$logQueue"],[304,73,296,27],[304,79,296,27,"_toConsumableArray2"],[304,98,296,27],[304,99,296,27,"default"],[304,106,296,27],[304,108,296,31,"logsToSend"],[304,118,296,41],[304,120,296,42],[305,12,297,6,"console"],[305,19,297,13],[305,20,297,14,"error"],[305,25,297,19],[305,26,297,20],[305,67,297,61],[305,69,297,63,"error"],[305,74,297,68],[305,75,297,69],[306,10,298,4],[306,11,298,5],[306,20,298,14],[307,12,299,6],[307,16,299,10],[307,17,299,11,"isFlushingLogs"],[307,31,299,25],[307,34,299,28],[307,39,299,33],[308,10,300,4],[309,8,301,2],[309,9,301,3],[310,8,301,3],[310,17,270,16,"flushLogs"],[310,26,270,25,"flushLogs"],[310,27,270,25],[311,10,270,25],[311,17,270,25,"_flushLogs"],[311,27,270,25],[311,28,270,25,"apply"],[311,33,270,25],[311,40,270,25,"arguments"],[311,49,270,25],[312,8,270,25],[313,8,270,25],[313,15,270,16,"flushLogs"],[313,24,270,25],[314,6,270,25],[315,6,303,2],[316,0,304,0],[317,0,305,0],[318,6,303,2],[319,4,303,2],[320,6,303,2,"key"],[320,9,303,2],[321,6,303,2,"value"],[321,11,303,2],[321,13,306,2],[321,22,306,2,"getRecentLogs"],[321,35,306,15,"getRecentLogs"],[321,36,306,15],[321,38,306,85],[322,8,306,85],[322,12,306,16,"count"],[322,17,306,29],[322,20,306,29,"arguments"],[322,29,306,29],[322,30,306,29,"length"],[322,36,306,29],[322,44,306,29,"arguments"],[322,53,306,29],[322,61,306,29,"undefined"],[322,70,306,29],[322,73,306,29,"arguments"],[322,82,306,29],[322,88,306,32],[322,91,306,35],[323,8,306,35],[323,12,306,37,"minLevel"],[323,20,306,55],[323,23,306,55,"arguments"],[323,32,306,55],[323,33,306,55,"length"],[323,39,306,55],[323,47,306,55,"arguments"],[323,56,306,55],[323,64,306,55,"undefined"],[323,73,306,55],[323,76,306,55,"arguments"],[323,85,306,55],[323,91,306,58,"LogLevel"],[323,99,306,66],[323,100,306,67,"INFO"],[323,104,306,71],[324,8,307,4],[324,15,307,11],[324,19,307,15],[324,20,307,16,"localEntries"],[324,32,307,28],[324,33,308,7,"filter"],[324,39,308,13],[324,40,308,14],[324,50,308,14,"entry"],[324,55,308,19],[325,10,308,19],[325,17,308,23,"entry"],[325,22,308,28],[325,23,308,29,"level"],[325,28,308,34],[325,32,308,38,"minLevel"],[325,40,308,46],[326,8,308,46],[326,10,308,47],[326,11,309,7,"slice"],[326,16,309,12],[326,17,309,13],[326,18,309,14,"count"],[326,23,309,19],[326,24,309,20],[327,6,310,2],[329,6,312,2],[330,0,313,0],[331,0,314,0],[332,4,312,2],[333,6,312,2,"key"],[333,9,312,2],[334,6,312,2,"value"],[334,11,312,2],[334,13,315,2],[334,22,315,2,"getLogsByCategory"],[334,39,315,19,"getLogsByCategory"],[334,40,315,20,"category"],[334,48,315,36],[334,50,315,70],[335,8,315,70],[335,12,315,38,"count"],[335,17,315,51],[335,20,315,51,"arguments"],[335,29,315,51],[335,30,315,51,"length"],[335,36,315,51],[335,44,315,51,"arguments"],[335,53,315,51],[335,61,315,51,"undefined"],[335,70,315,51],[335,73,315,51,"arguments"],[335,82,315,51],[335,88,315,54],[335,90,315,56],[336,8,316,4],[336,15,316,11],[336,19,316,15],[336,20,316,16,"localEntries"],[336,32,316,28],[336,33,317,7,"filter"],[336,39,317,13],[336,40,317,14],[336,50,317,14,"entry"],[336,55,317,19],[337,10,317,19],[337,17,317,23,"entry"],[337,22,317,28],[337,23,317,29,"category"],[337,31,317,37],[337,36,317,42,"category"],[337,44,317,50],[338,8,317,50],[338,10,317,51],[338,11,318,7,"slice"],[338,16,318,12],[338,17,318,13],[338,18,318,14,"count"],[338,23,318,19],[338,24,318,20],[339,6,319,2],[341,6,321,2],[342,0,322,0],[343,0,323,0],[344,4,321,2],[345,6,321,2,"key"],[345,9,321,2],[346,6,321,2,"value"],[346,11,321,2],[346,13,324,2],[346,22,324,2,"searchLogs"],[346,32,324,12,"searchLogs"],[346,33,324,13,"query"],[346,38,324,26],[346,40,324,60],[347,8,324,60],[347,12,324,28,"count"],[347,17,324,41],[347,20,324,41,"arguments"],[347,29,324,41],[347,30,324,41,"length"],[347,36,324,41],[347,44,324,41,"arguments"],[347,53,324,41],[347,61,324,41,"undefined"],[347,70,324,41],[347,73,324,41,"arguments"],[347,82,324,41],[347,88,324,44],[347,90,324,46],[348,8,325,4],[348,12,325,10,"normalizedQuery"],[348,27,325,25],[348,30,325,28,"query"],[348,35,325,33],[348,36,325,34,"toLowerCase"],[348,47,325,45],[348,48,325,46],[348,49,325,47],[349,8,326,4],[349,15,326,11],[349,19,326,15],[349,20,326,16,"localEntries"],[349,32,326,28],[349,33,327,7,"filter"],[349,39,327,13],[349,40,327,14],[349,50,327,14,"entry"],[349,55,327,19],[350,10,327,19],[350,17,328,8,"entry"],[350,22,328,13],[350,23,328,14,"message"],[350,30,328,21],[350,31,328,22,"toLowerCase"],[350,42,328,33],[350,43,328,34],[350,44,328,35],[350,45,328,36,"includes"],[350,53,328,44],[350,54,328,45,"normalizedQuery"],[350,69,328,60],[350,70,328,61],[350,74,329,8,"entry"],[350,79,329,13],[350,80,329,14,"category"],[350,88,329,22],[350,89,329,23,"toLowerCase"],[350,100,329,34],[350,101,329,35],[350,102,329,36],[350,103,329,37,"includes"],[350,111,329,45],[350,112,329,46,"normalizedQuery"],[350,127,329,61],[350,128,329,62],[350,132,330,8,"JSON"],[350,136,330,12],[350,137,330,13,"stringify"],[350,146,330,22],[350,147,330,23,"entry"],[350,152,330,28],[350,153,330,29,"data"],[350,157,330,33],[350,161,330,37],[350,162,330,38],[350,163,330,39],[350,164,330,40],[350,165,330,41,"toLowerCase"],[350,176,330,52],[350,177,330,53],[350,178,330,54],[350,179,330,55,"includes"],[350,187,330,63],[350,188,330,64,"normalizedQuery"],[350,203,330,79],[350,204,330,80],[351,8,330,80],[351,9,331,6],[351,10,331,7],[351,11,332,7,"slice"],[351,16,332,12],[351,17,332,13],[351,18,332,14,"count"],[351,23,332,19],[351,24,332,20],[352,6,333,2],[354,6,335,2],[355,0,336,0],[356,0,337,0],[357,4,335,2],[358,6,335,2,"key"],[358,9,335,2],[359,6,335,2,"value"],[359,11,335,2],[359,13,338,2],[359,22,338,2,"exportLogs"],[359,32,338,12,"exportLogs"],[359,33,338,12],[359,35,338,57],[360,8,338,57],[360,12,338,13,"minLevel"],[360,20,338,31],[360,23,338,31,"arguments"],[360,32,338,31],[360,33,338,31,"length"],[360,39,338,31],[360,47,338,31,"arguments"],[360,56,338,31],[360,64,338,31,"undefined"],[360,73,338,31],[360,76,338,31,"arguments"],[360,85,338,31],[360,91,338,34,"LogLevel"],[360,99,338,42],[360,100,338,43,"INFO"],[360,104,338,47],[361,8,339,4],[361,12,339,10,"logs"],[361,16,339,14],[361,19,339,17],[361,23,339,21],[361,24,339,22,"localEntries"],[361,36,339,34],[361,37,339,35,"filter"],[361,43,339,41],[361,44,339,42],[361,54,339,42,"entry"],[361,59,339,47],[362,10,339,47],[362,17,339,51,"entry"],[362,22,339,56],[362,23,339,57,"level"],[362,28,339,62],[362,32,339,66,"minLevel"],[362,40,339,74],[363,8,339,74],[363,10,339,75],[364,8,340,4],[364,15,340,11,"JSON"],[364,19,340,15],[364,20,340,16,"stringify"],[364,29,340,25],[364,30,340,26,"logs"],[364,34,340,30],[364,36,340,32],[364,40,340,36],[364,42,340,38],[364,43,340,39],[364,44,340,40],[365,6,341,2],[367,6,343,2],[368,0,344,0],[369,0,345,0],[370,4,343,2],[371,6,343,2,"key"],[371,9,343,2],[372,6,343,2,"value"],[372,11,343,2],[372,13,346,2],[372,22,346,2,"clearLogs"],[372,31,346,11,"clearLogs"],[372,32,346,11],[372,34,346,20],[373,8,347,4],[373,12,347,8],[373,13,347,9,"localEntries"],[373,25,347,21],[373,28,347,24],[373,30,347,26],[374,8,348,4],[374,12,348,8],[374,13,348,9,"debug"],[374,18,348,14],[374,19,348,15],[374,32,348,28],[374,34,348,30],[374,54,348,50],[374,55,348,51],[375,6,349,2],[377,6,351,2],[378,0,352,0],[379,0,353,0],[380,4,351,2],[381,6,351,2,"key"],[381,9,351,2],[382,6,351,2,"value"],[382,11,351,2],[382,13,354,2],[382,22,354,2,"updateConfig"],[382,34,354,14,"updateConfig"],[382,35,354,15,"newConfig"],[382,44,354,47],[382,46,354,55],[383,8,355,4],[383,12,355,8],[383,13,355,9,"config"],[383,19,355,15],[383,22,355,15,"Object"],[383,28,355,15],[383,29,355,15,"assign"],[383,35,355,15],[383,40,355,23],[383,44,355,27],[383,45,355,28,"config"],[383,51,355,34],[383,53,355,39,"newConfig"],[383,62,355,48],[383,63,355,50],[384,8,356,4],[384,12,356,8],[384,13,356,9,"info"],[384,17,356,13],[384,18,356,14],[384,31,356,27],[384,33,356,29],[384,56,356,52],[384,58,356,54,"newConfig"],[384,67,356,63],[384,68,356,64],[385,6,357,2],[387,6,359,2],[388,0,360,0],[389,0,361,0],[390,4,359,2],[391,6,359,2,"key"],[391,9,359,2],[392,6,359,2,"value"],[392,11,359,2],[392,13,362,2],[392,22,362,10,"setupGlobalErrorHandling"],[392,46,362,34,"setupGlobalErrorHandling"],[392,47,362,34],[392,49,362,43],[393,8,362,43],[393,12,362,43,"_global$process"],[393,27,362,43],[394,10,362,43,"_this2"],[394,16,362,43],[395,8,363,4],[396,8,364,4],[396,12,364,8],[396,19,364,15,"global"],[396,25,364,21],[396,30,364,26],[396,41,364,37],[396,43,364,39],[397,10,365,6],[397,14,365,12,"originalHandler"],[397,29,365,27],[397,32,365,30,"global"],[397,38,365,36],[397,39,365,37,"onunhandledrejection"],[397,59,365,57],[398,10,366,6],[398,14,366,12,"self"],[398,18,366,16],[398,21,366,19],[398,25,366,23],[399,10,367,6,"global"],[399,16,367,12],[399,17,367,13,"onunhandledrejection"],[399,37,367,33],[399,40,367,36],[399,50,367,37,"event"],[399,55,367,47],[399,57,367,52],[400,12,368,8,"self"],[400,16,368,12],[400,17,368,13,"critical"],[400,25,368,21],[400,26,368,22],[400,44,368,40],[400,46,368,42],[400,75,368,71],[400,77,368,73,"event"],[400,82,368,78],[400,83,368,79,"reason"],[400,89,368,85],[400,91,368,87],[401,14,369,10,"promise"],[401,21,369,17],[401,23,369,19,"event"],[401,28,369,24],[401,29,369,25,"promise"],[402,12,370,8],[402,13,370,9],[402,14,370,10],[403,12,372,8],[403,16,372,12,"originalHandler"],[403,31,372,27],[403,33,372,29],[404,14,373,10,"originalHandler"],[404,29,373,25],[404,30,373,26,"call"],[404,34,373,30],[404,35,373,31,"global"],[404,41,373,37],[404,43,373,39,"event"],[404,48,373,44],[404,49,373,45],[405,12,374,8],[406,10,375,6],[406,11,375,7],[407,8,376,4],[409,8,378,4],[410,8,379,4],[410,12,379,8],[410,19,379,15,"global"],[410,25,379,21],[410,30,379,26],[410,41,379,37],[410,46,379,37,"_global$process"],[410,61,379,37],[410,64,379,41,"global"],[410,70,379,47],[410,71,379,48,"process"],[410,78,379,55],[410,91,379,41,"_global$process"],[410,106,379,41],[410,107,379,57,"on"],[410,109,379,59],[410,111,379,61],[411,10,380,6,"global"],[411,16,380,12],[411,17,380,13,"process"],[411,24,380,20],[411,25,380,21,"on"],[411,27,380,23],[411,28,380,24],[411,47,380,43],[411,49,380,45],[411,59,380,46,"error"],[411,64,380,58],[411,66,380,63],[412,12,381,8,"_this2"],[412,18,381,12],[412,19,381,13,"critical"],[412,27,381,21],[412,28,381,22],[412,47,381,41],[412,49,381,43],[412,69,381,63],[412,71,381,65,"error"],[412,76,381,70],[412,77,381,71],[413,10,382,6],[413,11,382,7],[413,12,382,8],[414,8,383,4],[415,6,384,2],[417,6,386,2],[418,0,387,0],[419,0,388,0],[420,4,386,2],[421,6,386,2,"key"],[421,9,386,2],[422,6,386,2,"value"],[422,11,386,2],[422,13,389,2],[422,22,389,10,"generateSessionId"],[422,39,389,27,"generateSessionId"],[422,40,389,27],[422,42,389,38],[423,8,390,4],[423,15,390,11],[423,18,390,14,"Date"],[423,22,390,18],[423,23,390,19,"now"],[423,26,390,22],[423,27,390,23],[423,28,390,24],[423,32,390,28,"Math"],[423,36,390,32],[423,37,390,33,"random"],[423,43,390,39],[423,44,390,40],[423,45,390,41],[423,46,390,42,"toString"],[423,54,390,50],[423,55,390,51],[423,57,390,53],[423,58,390,54],[423,59,390,55,"substr"],[423,65,390,61],[423,66,390,62],[423,67,390,63],[423,69,390,65],[423,70,390,66],[423,71,390,67],[423,73,390,69],[424,6,391,2],[426,6,393,2],[427,0,394,0],[428,0,395,0],[429,4,393,2],[430,6,393,2,"key"],[430,9,393,2],[431,6,393,2,"value"],[431,11,393,2],[431,13,396,2],[431,22,396,10,"sanitizeData"],[431,34,396,22,"sanitizeData"],[431,35,396,23,"data"],[431,39,396,32],[431,41,396,39],[432,8,396,39],[432,12,396,39,"_this3"],[432,18,396,39],[433,8,397,4],[433,12,397,8],[433,13,397,9,"data"],[433,17,397,13],[433,19,397,15],[433,26,397,22,"data"],[433,30,397,26],[434,8,399,4],[434,12,399,8],[434,19,399,15,"data"],[434,23,399,19],[434,28,399,24],[434,36,399,32],[434,38,399,34],[435,10,400,6],[436,10,401,6],[436,17,401,13,"data"],[436,21,401,17],[436,22,401,18,"replace"],[436,29,401,25],[436,30,401,26],[436,43,401,39],[436,45,401,41],[436,66,401,62],[436,67,401,63],[436,68,401,64],[437,10,401,64],[437,11,402,18,"replace"],[437,18,402,25],[437,19,402,26],[437,73,402,80],[437,75,402,82],[437,88,402,95],[437,89,402,96],[437,90,402,97],[437,91,402,98],[438,8,403,4],[439,8,405,4],[439,12,405,8,"Array"],[439,17,405,13],[439,18,405,14,"isArray"],[439,25,405,21],[439,26,405,22,"data"],[439,30,405,26],[439,31,405,27],[439,33,405,29],[440,10,406,6],[440,17,406,13,"data"],[440,21,406,17],[440,22,406,18,"map"],[440,25,406,21],[440,26,406,22],[440,36,406,22,"item"],[440,40,406,26],[441,12,406,26],[441,19,406,30,"_this3"],[441,25,406,34],[441,26,406,35,"sanitizeData"],[441,38,406,47],[441,39,406,48,"item"],[441,43,406,52],[441,44,406,53],[442,10,406,53],[442,12,406,54],[443,8,407,4],[444,8,409,4],[444,12,409,8],[444,19,409,15,"data"],[444,23,409,19],[444,28,409,24],[444,36,409,32],[444,38,409,34],[445,10,410,6],[445,14,410,12,"sanitized"],[445,23,410,26],[445,26,410,29],[445,27,410,30],[445,28,410,31],[446,10,410,32],[446,14,410,32,"_loop"],[446,19,410,32],[446,31,410,32,"_loop"],[446,37,410,32,"key"],[446,40,410,32],[446,42,411,55],[447,12,412,8],[448,12,413,8],[448,16,413,14,"sensitiveKeys"],[448,29,413,27],[448,32,413,30],[448,33,413,31],[448,43,413,41],[448,45,413,43],[448,52,413,50],[448,54,413,52],[448,62,413,60],[448,64,413,62],[448,69,413,67],[448,71,413,69],[448,77,413,75],[448,79,413,77],[448,91,413,89],[448,92,413,90],[449,12,414,8],[449,16,414,12,"sensitiveKeys"],[449,29,414,25],[449,30,414,26,"some"],[449,34,414,30],[449,35,414,31],[449,45,414,31,"sensitive"],[449,54,414,40],[450,14,414,40],[450,21,414,44,"key"],[450,24,414,47],[450,25,414,48,"toLowerCase"],[450,36,414,59],[450,37,414,60],[450,38,414,61],[450,39,414,62,"includes"],[450,47,414,70],[450,48,414,71,"sensitive"],[450,57,414,80],[450,58,414,81],[451,12,414,81],[451,14,414,82],[451,16,414,84],[452,14,415,10,"sanitized"],[452,23,415,19],[452,24,415,20,"key"],[452,27,415,23],[452,28,415,24],[452,31,415,27],[452,43,415,39],[453,12,416,8],[453,13,416,9],[453,19,416,15],[454,14,417,10,"sanitized"],[454,23,417,19],[454,24,417,20,"key"],[454,27,417,23],[454,28,417,24],[454,31,417,27,"_this3"],[454,37,417,31],[454,38,417,32,"sanitizeData"],[454,50,417,44],[454,51,417,45,"value"],[454,56,417,50],[454,57,417,51],[455,12,418,8],[456,10,419,6],[456,11,419,7],[457,10,411,6],[457,19,411,6,"_ref"],[457,23,411,6],[457,27,411,33,"Object"],[457,33,411,39],[457,34,411,40,"entries"],[457,41,411,47],[457,42,411,48,"data"],[457,46,411,52],[457,47,411,53],[458,12,411,53],[458,16,411,53,"_ref2"],[458,21,411,53],[458,28,411,53,"_slicedToArray2"],[458,43,411,53],[458,44,411,53,"default"],[458,51,411,53],[458,53,411,53,"_ref"],[458,57,411,53],[459,12,411,53],[459,16,411,18,"key"],[459,19,411,21],[459,22,411,21,"_ref2"],[459,27,411,21],[460,12,411,21],[460,16,411,23,"value"],[460,21,411,28],[460,24,411,28,"_ref2"],[460,29,411,28],[461,12,411,28,"_loop"],[461,17,411,28],[461,18,411,28,"key"],[461,21,411,28],[462,10,411,28],[463,10,420,6],[463,17,420,13,"sanitized"],[463,26,420,22],[464,8,421,4],[465,8,423,4],[465,15,423,11,"data"],[465,19,423,15],[466,6,424,2],[467,4,424,3],[468,2,424,3],[468,7,427,0],[469,2,428,7],[469,6,428,13,"EventLogger"],[469,17,428,24],[469,20,428,24,"exports"],[469,27,428,24],[469,28,428,24,"EventLogger"],[469,39,428,24],[469,42,428,27],[469,46,428,31,"EventLoggerService"],[469,64,428,49],[469,65,428,50],[469,66,428,51],[471,2,430,0],[472,2,431,7],[472,6,431,13,"logUserAction"],[472,19,431,26],[472,22,431,26,"exports"],[472,29,431,26],[472,30,431,26,"logUserAction"],[472,43,431,26],[472,46,431,29],[472,55,431,13,"logUserAction"],[472,68,431,26,"logUserAction"],[472,69,431,30,"action"],[472,75,431,44],[472,77,431,46,"screen"],[472,83,431,60],[472,85,431,62,"data"],[472,89,431,72],[472,91,431,77],[473,4,432,2,"EventLogger"],[473,15,432,13],[473,16,432,14,"userAction"],[473,26,432,24],[473,27,432,25,"action"],[473,33,432,31],[473,35,432,33,"screen"],[473,41,432,39],[473,43,432,41,"data"],[473,47,432,45],[473,48,432,46],[474,2,433,0],[474,3,433,1],[475,2,435,7],[475,6,435,13,"logNetworkRequest"],[475,23,435,30],[475,26,435,30,"exports"],[475,33,435,30],[475,34,435,30,"logNetworkRequest"],[475,51,435,30],[475,54,435,33],[475,63,435,13,"logNetworkRequest"],[475,80,435,30,"logNetworkRequest"],[475,81,435,34,"url"],[475,84,435,45],[475,86,435,47,"method"],[475,92,435,61],[475,94,435,63,"statusCode"],[475,104,435,82],[475,106,435,84,"duration"],[475,114,435,101],[475,116,435,103,"error"],[475,121,435,116],[475,123,435,121],[476,4,436,2,"EventLogger"],[476,15,436,13],[476,16,436,14,"networkRequest"],[476,30,436,28],[476,31,436,29,"url"],[476,34,436,32],[476,36,436,34,"method"],[476,42,436,40],[476,44,436,42,"statusCode"],[476,54,436,52],[476,56,436,54,"duration"],[476,64,436,62],[476,66,436,64,"error"],[476,71,436,69],[476,72,436,70],[477,2,437,0],[477,3,437,1],[478,2,439,7],[478,6,439,13,"logPerformance"],[478,20,439,27],[478,23,439,27,"exports"],[478,30,439,27],[478,31,439,27,"logPerformance"],[478,45,439,27],[478,48,439,30],[478,57,439,13,"logPerformance"],[478,71,439,27,"logPerformance"],[478,72,439,31,"operation"],[478,81,439,48],[478,83,439,50,"duration"],[478,91,439,66],[478,93,439,68,"metadata"],[478,101,439,98],[478,103,439,103],[479,4,440,2,"EventLogger"],[479,15,440,13],[479,16,440,14,"performance"],[479,27,440,25],[479,28,440,26],[479,41,440,39],[479,43,440,41,"operation"],[479,52,440,50],[479,54,440,52,"duration"],[479,62,440,60],[479,64,440,62,"metadata"],[479,72,440,70],[479,73,440,71],[480,2,441,0],[480,3,441,1],[481,2,443,7],[481,6,443,13,"logError"],[481,14,443,21],[481,17,443,21,"exports"],[481,24,443,21],[481,25,443,21,"logError"],[481,33,443,21],[481,36,443,24],[481,45,443,13,"logError"],[481,53,443,21,"logError"],[481,54,443,25,"category"],[481,62,443,41],[481,64,443,43,"message"],[481,71,443,58],[481,73,443,60,"error"],[481,78,443,73],[481,80,443,75,"data"],[481,84,443,85],[481,86,443,90],[482,4,444,2,"EventLogger"],[482,15,444,13],[482,16,444,14,"error"],[482,21,444,19],[482,22,444,20,"category"],[482,30,444,28],[482,32,444,30,"message"],[482,39,444,37],[482,41,444,39,"error"],[482,46,444,44],[482,48,444,46,"data"],[482,52,444,50],[482,53,444,51],[483,2,445,0],[483,3,445,1],[484,2,447,7],[484,6,447,13,"logAnalyticsEvent"],[484,23,447,30],[484,26,447,30,"exports"],[484,33,447,30],[484,34,447,30,"logAnalyticsEvent"],[484,51,447,30],[484,54,447,33],[484,63,447,13,"logAnalyticsEvent"],[484,80,447,30,"logAnalyticsEvent"],[484,81,447,34,"eventName"],[484,90,447,51],[484,92,447,53,"properties"],[484,102,447,85],[484,104,447,90],[485,4,448,2,"EventLogger"],[485,15,448,13],[485,16,448,14,"analyticsEvent"],[485,30,448,28],[485,31,448,29,"eventName"],[485,40,448,38],[485,42,448,40,"properties"],[485,52,448,50],[485,53,448,51],[486,2,449,0],[486,3,449,1],[488,2,451,0],[489,0,451,0],[489,3]],"functionMap":{"names":["<global>","EventLoggerService","EventLoggerService#constructor","setInterval$argument_0","EventLoggerService#setUser","EventLoggerService#clearUser","EventLoggerService#debug","EventLoggerService#info","EventLoggerService#warn","EventLoggerService#error","EventLoggerService#critical","EventLoggerService#networkRequest","EventLoggerService#performance","EventLoggerService#userAction","EventLoggerService#analyticsEvent","EventLoggerService#log","EventLoggerService#storeLogEntry","EventLoggerService#outputToConsole","EventLoggerService#queueForRemoteLogging","EventLoggerService#flushLogs","EventLoggerService#getRecentLogs","localEntries.filter$argument_0","EventLoggerService#getLogsByCategory","EventLoggerService#searchLogs","EventLoggerService#exportLogs","EventLoggerService#clearLogs","EventLoggerService#updateConfig","EventLoggerService#setupGlobalErrorHandling","global.onunhandledrejection","global.process.on$argument_1","EventLoggerService#generateSessionId","EventLoggerService#sanitizeData","data.map$argument_0","sensitiveKeys.some$argument_0","logUserAction","logNetworkRequest","logPerformance","logError","logAnalyticsEvent"],"mappings":"AAA;ACqC;ECQ;kBCe,sBD;GDE;EGK;GHG;EIK;GJG;EKK;GLI;EMK;GNE;EOK;GPE;EQK;GRE;ESK;GTE;EUK;GVc;EWK;GXY;EYK;GZM;EaK;GbK;EcK;GdqC;EeK;GfO;EgBK;GhBqB;EiBK;GjBO;EkBK;GlB+B;EmBK;cCE,gCD;GnBE;EqBK;cDE,oCC;GrBE;EsBK;cFG;gFEG;GtBG;EuBK;0CHC,gCG;GvBE;EwBK;GxBG;EyBK;GzBG;E0BK;oCCK;ODQ;6CEK;OFE;G1BE;E6BK;G7BE;E8BK;sBCU,+BD;+BEQ,kDF;G9BU;CDC;6BkCM;ClCE;iCmCE;CnCE;8BoCE;CpCE;wBqCE;CrCE;iCsCE;CtCE"}},"type":"js/module"}]}