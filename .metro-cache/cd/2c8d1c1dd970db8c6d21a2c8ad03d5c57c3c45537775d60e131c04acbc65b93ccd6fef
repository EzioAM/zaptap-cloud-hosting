{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"../supabase/client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"q3G/dBcB/lyqe2ZqsudXc9dkd4E=","exportNames":["*"]}},{"name":"../../data/sampleAutomations","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":65,"index":112}}],"key":"qovUovanueZCS1yq4TL09RiTMLU=","exportNames":["*"]}},{"name":"../../utils/EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":113},"end":{"line":3,"column":54,"index":167}}],"key":"mEVtTU9mTkJ75ffab8N2nK/i6dk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.OnboardingService = undefined;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3]));\n  var _client = require(_dependencyMap[4]);\n  var _sampleAutomations = require(_dependencyMap[5]);\n  var _EventLogger = require(_dependencyMap[6]);\n  var OnboardingService = exports.OnboardingService = /*#__PURE__*/function () {\n    function OnboardingService() {\n      (0, _classCallCheck2.default)(this, OnboardingService);\n    }\n    return (0, _createClass2.default)(OnboardingService, null, [{\n      key: \"createSampleAutomations\",\n      value: (\n      /**\n       * Create sample automations for a new user\n       */\n      function () {\n        var _createSampleAutomations = (0, _asyncToGenerator2.default)(function* (userId) {\n          try {\n            // Prepare sample automations with user ID\n            var automationsToInsert = _sampleAutomations.sampleAutomations.map(automation => ({\n              title: automation.title,\n              description: automation.description,\n              category: automation.category,\n              is_public: automation.is_public,\n              is_template: automation.is_template,\n              icon: automation.icon,\n              color: automation.color,\n              tags: automation.tags,\n              user_id: userId,\n              steps: automation.steps,\n              execution_count: 0,\n              rating: 5,\n              likes_count: Math.floor(Math.random() * 50) + 10,\n              // Random likes between 10-60\n              created_at: new Date().toISOString(),\n              updated_at: new Date().toISOString()\n            }));\n\n            // Insert automations\n            var _yield$supabase$from$ = yield _client.supabase.from('automations').insert(automationsToInsert).select(),\n              insertedAutomations = _yield$supabase$from$.data,\n              automationError = _yield$supabase$from$.error;\n            if (automationError) {\n              _EventLogger.EventLogger.error('Onboarding', 'Error creating sample automations:', automationError);\n              return {\n                success: false,\n                error: automationError\n              };\n            }\n\n            // Note: Steps are now stored as JSON in the automations table\n            // No need to insert them separately\n\n            return {\n              success: true,\n              count: insertedAutomations?.length || 0,\n              automations: insertedAutomations\n            };\n          } catch (error) {\n            _EventLogger.EventLogger.error('Onboarding', 'Failed to create sample automations:', error);\n            return {\n              success: false,\n              error\n            };\n          }\n        });\n        function createSampleAutomations(_x) {\n          return _createSampleAutomations.apply(this, arguments);\n        }\n        return createSampleAutomations;\n      }()\n      /**\n       * Check if user already has sample automations\n       */\n      )\n    }, {\n      key: \"hasSampleAutomations\",\n      value: (function () {\n        var _hasSampleAutomations = (0, _asyncToGenerator2.default)(function* (userId) {\n          try {\n            var _yield$supabase$from$2 = yield _client.supabase.from('automations').select('id').eq('user_id', userId).eq('is_template', true).limit(1),\n              data = _yield$supabase$from$2.data,\n              error = _yield$supabase$from$2.error;\n            if (error) {\n              _EventLogger.EventLogger.error('Onboarding', 'Error checking sample automations:', error);\n              return false;\n            }\n            return (data?.length || 0) > 0;\n          } catch (error) {\n            _EventLogger.EventLogger.error('Onboarding', 'Failed to check sample automations:', error);\n            return false;\n          }\n        });\n        function hasSampleAutomations(_x2) {\n          return _hasSampleAutomations.apply(this, arguments);\n        }\n        return hasSampleAutomations;\n      }()\n      /**\n       * Initialize new user with sample data\n       */\n      )\n    }, {\n      key: \"initializeNewUser\",\n      value: (function () {\n        var _initializeNewUser = (0, _asyncToGenerator2.default)(function* (userId) {\n          try {\n            // Check if user already has sample automations\n            var hasSamples = yield this.hasSampleAutomations(userId);\n            if (!hasSamples) {\n              // Create sample automations\n              var result = yield this.createSampleAutomations(userId);\n              if (result.success) {\n                _EventLogger.EventLogger.debug('Onboarding', 'Created ${result.count} sample automations for user ${userId}');\n              }\n              return result;\n            }\n            return {\n              success: true,\n              message: 'User already has sample automations'\n            };\n          } catch (error) {\n            _EventLogger.EventLogger.error('Onboarding', 'Failed to initialize new user:', error);\n            return {\n              success: false,\n              error\n            };\n          }\n        });\n        function initializeNewUser(_x3) {\n          return _initializeNewUser.apply(this, arguments);\n        }\n        return initializeNewUser;\n      }())\n    }]);\n  }();\n});","lineCount":144,"map":[[10,2,1,0],[10,6,1,0,"_client"],[10,13,1,0],[10,16,1,0,"require"],[10,23,1,0],[10,24,1,0,"_dependencyMap"],[10,38,1,0],[11,2,2,0],[11,6,2,0,"_sampleAutomations"],[11,24,2,0],[11,27,2,0,"require"],[11,34,2,0],[11,35,2,0,"_dependencyMap"],[11,49,2,0],[12,2,3,0],[12,6,3,0,"_EventLogger"],[12,18,3,0],[12,21,3,0,"require"],[12,28,3,0],[12,29,3,0,"_dependencyMap"],[12,43,3,0],[13,2,3,54],[13,6,5,13,"OnboardingService"],[13,23,5,30],[13,26,5,30,"exports"],[13,33,5,30],[13,34,5,30,"OnboardingService"],[13,51,5,30],[14,4,5,30],[14,13,5,30,"OnboardingService"],[14,31,5,30],[15,6,5,30],[15,10,5,30,"_classCallCheck2"],[15,26,5,30],[15,27,5,30,"default"],[15,34,5,30],[15,42,5,30,"OnboardingService"],[15,59,5,30],[16,4,5,30],[17,4,5,30],[17,15,5,30,"_createClass2"],[17,28,5,30],[17,29,5,30,"default"],[17,36,5,30],[17,38,5,30,"OnboardingService"],[17,55,5,30],[18,6,5,30,"key"],[18,9,5,30],[19,6,5,30,"value"],[19,11,5,30],[20,6,6,2],[21,0,7,0],[22,0,8,0],[23,6,6,2],[24,8,6,2],[24,12,6,2,"_createSampleAutomations"],[24,36,6,2],[24,43,6,2,"_asyncToGenerator2"],[24,61,6,2],[24,62,6,2,"default"],[24,69,6,2],[24,71,9,2],[24,82,9,39,"userId"],[24,88,9,53],[24,90,9,55],[25,10,10,4],[25,14,10,8],[26,12,11,6],[27,12,12,6],[27,16,12,12,"automationsToInsert"],[27,35,12,31],[27,38,12,34,"sampleAutomations"],[27,74,12,51],[27,75,12,52,"map"],[27,78,12,55],[27,79,12,56,"automation"],[27,89,12,66],[27,94,12,71],[28,14,13,8,"title"],[28,19,13,13],[28,21,13,15,"automation"],[28,31,13,25],[28,32,13,26,"title"],[28,37,13,31],[29,14,14,8,"description"],[29,25,14,19],[29,27,14,21,"automation"],[29,37,14,31],[29,38,14,32,"description"],[29,49,14,43],[30,14,15,8,"category"],[30,22,15,16],[30,24,15,18,"automation"],[30,34,15,28],[30,35,15,29,"category"],[30,43,15,37],[31,14,16,8,"is_public"],[31,23,16,17],[31,25,16,19,"automation"],[31,35,16,29],[31,36,16,30,"is_public"],[31,45,16,39],[32,14,17,8,"is_template"],[32,25,17,19],[32,27,17,21,"automation"],[32,37,17,31],[32,38,17,32,"is_template"],[32,49,17,43],[33,14,18,8,"icon"],[33,18,18,12],[33,20,18,14,"automation"],[33,30,18,24],[33,31,18,25,"icon"],[33,35,18,29],[34,14,19,8,"color"],[34,19,19,13],[34,21,19,15,"automation"],[34,31,19,25],[34,32,19,26,"color"],[34,37,19,31],[35,14,20,8,"tags"],[35,18,20,12],[35,20,20,14,"automation"],[35,30,20,24],[35,31,20,25,"tags"],[35,35,20,29],[36,14,21,8,"user_id"],[36,21,21,15],[36,23,21,17,"userId"],[36,29,21,23],[37,14,22,8,"steps"],[37,19,22,13],[37,21,22,15,"automation"],[37,31,22,25],[37,32,22,26,"steps"],[37,37,22,31],[38,14,23,8,"execution_count"],[38,29,23,23],[38,31,23,25],[38,32,23,26],[39,14,24,8,"rating"],[39,20,24,14],[39,22,24,16],[39,23,24,17],[40,14,25,8,"likes_count"],[40,25,25,19],[40,27,25,21,"Math"],[40,31,25,25],[40,32,25,26,"floor"],[40,37,25,31],[40,38,25,32,"Math"],[40,42,25,36],[40,43,25,37,"random"],[40,49,25,43],[40,50,25,44],[40,51,25,45],[40,54,25,48],[40,56,25,50],[40,57,25,51],[40,60,25,54],[40,62,25,56],[41,14,25,58],[42,14,26,8,"created_at"],[42,24,26,18],[42,26,26,20],[42,30,26,24,"Date"],[42,34,26,28],[42,35,26,29],[42,36,26,30],[42,37,26,31,"toISOString"],[42,48,26,42],[42,49,26,43],[42,50,26,44],[43,14,27,8,"updated_at"],[43,24,27,18],[43,26,27,20],[43,30,27,24,"Date"],[43,34,27,28],[43,35,27,29],[43,36,27,30],[43,37,27,31,"toISOString"],[43,48,27,42],[43,49,27,43],[44,12,28,6],[44,13,28,7],[44,14,28,8],[44,15,28,9],[46,12,30,6],[47,12,31,6],[47,16,31,6,"_yield$supabase$from$"],[47,37,31,6],[47,46,31,74,"supabase"],[47,62,31,82],[47,63,32,9,"from"],[47,67,32,13],[47,68,32,14],[47,81,32,27],[47,82,32,28],[47,83,33,9,"insert"],[47,89,33,15],[47,90,33,16,"automationsToInsert"],[47,109,33,35],[47,110,33,36],[47,111,34,9,"select"],[47,117,34,15],[47,118,34,16],[47,119,34,17],[48,14,31,20,"insertedAutomations"],[48,33,31,39],[48,36,31,39,"_yield$supabase$from$"],[48,57,31,39],[48,58,31,14,"data"],[48,62,31,18],[49,14,31,48,"automationError"],[49,29,31,63],[49,32,31,63,"_yield$supabase$from$"],[49,53,31,63],[49,54,31,41,"error"],[49,59,31,46],[50,12,36,6],[50,16,36,10,"automationError"],[50,31,36,25],[50,33,36,27],[51,14,37,8,"EventLogger"],[51,38,37,19],[51,39,37,20,"error"],[51,44,37,25],[51,45,37,26],[51,57,37,38],[51,59,37,40],[51,95,37,76],[51,97,37,78,"automationError"],[51,112,37,102],[51,113,37,103],[52,14,38,8],[52,21,38,15],[53,16,38,17,"success"],[53,23,38,24],[53,25,38,26],[53,30,38,31],[54,16,38,33,"error"],[54,21,38,38],[54,23,38,40,"automationError"],[55,14,38,56],[55,15,38,57],[56,12,39,6],[58,12,41,6],[59,12,42,6],[61,12,44,6],[61,19,44,13],[62,14,45,8,"success"],[62,21,45,15],[62,23,45,17],[62,27,45,21],[63,14,46,8,"count"],[63,19,46,13],[63,21,46,15,"insertedAutomations"],[63,40,46,34],[63,42,46,36,"length"],[63,48,46,42],[63,52,46,46],[63,53,46,47],[64,14,47,8,"automations"],[64,25,47,19],[64,27,47,21,"insertedAutomations"],[65,12,48,6],[65,13,48,7],[66,10,49,4],[66,11,49,5],[66,12,49,6],[66,19,49,13,"error"],[66,24,49,18],[66,26,49,20],[67,12,50,6,"EventLogger"],[67,36,50,17],[67,37,50,18,"error"],[67,42,50,23],[67,43,50,24],[67,55,50,36],[67,57,50,38],[67,95,50,76],[67,97,50,78,"error"],[67,102,50,92],[67,103,50,93],[68,12,51,6],[68,19,51,13],[69,14,51,15,"success"],[69,21,51,22],[69,23,51,24],[69,28,51,29],[70,14,51,31,"error"],[71,12,51,37],[71,13,51,38],[72,10,52,4],[73,8,53,2],[73,9,53,3],[74,8,53,3],[74,17,9,15,"createSampleAutomations"],[74,40,9,38,"createSampleAutomations"],[74,41,9,38,"_x"],[74,43,9,38],[75,10,9,38],[75,17,9,38,"_createSampleAutomations"],[75,41,9,38],[75,42,9,38,"apply"],[75,47,9,38],[75,54,9,38,"arguments"],[75,63,9,38],[76,8,9,38],[77,8,9,38],[77,15,9,15,"createSampleAutomations"],[77,38,9,38],[78,6,9,38],[79,6,55,2],[80,0,56,0],[81,0,57,0],[82,6,55,2],[83,4,55,2],[84,6,55,2,"key"],[84,9,55,2],[85,6,55,2,"value"],[85,11,55,2],[86,8,55,2],[86,12,55,2,"_hasSampleAutomations"],[86,33,55,2],[86,40,55,2,"_asyncToGenerator2"],[86,58,55,2],[86,59,55,2,"default"],[86,66,55,2],[86,68,58,2],[86,79,58,36,"userId"],[86,85,58,50],[86,87,58,70],[87,10,59,4],[87,14,59,8],[88,12,60,6],[88,16,60,6,"_yield$supabase$from$2"],[88,38,60,6],[88,47,60,36,"supabase"],[88,63,60,44],[88,64,61,9,"from"],[88,68,61,13],[88,69,61,14],[88,82,61,27],[88,83,61,28],[88,84,62,9,"select"],[88,90,62,15],[88,91,62,16],[88,95,62,20],[88,96,62,21],[88,97,63,9,"eq"],[88,99,63,11],[88,100,63,12],[88,109,63,21],[88,111,63,23,"userId"],[88,117,63,29],[88,118,63,30],[88,119,64,9,"eq"],[88,121,64,11],[88,122,64,12],[88,135,64,25],[88,137,64,27],[88,141,64,31],[88,142,64,32],[88,143,65,9,"limit"],[88,148,65,14],[88,149,65,15],[88,150,65,16],[88,151,65,17],[89,14,60,14,"data"],[89,18,60,18],[89,21,60,18,"_yield$supabase$from$2"],[89,43,60,18],[89,44,60,14,"data"],[89,48,60,18],[90,14,60,20,"error"],[90,19,60,25],[90,22,60,25,"_yield$supabase$from$2"],[90,44,60,25],[90,45,60,20,"error"],[90,50,60,25],[91,12,67,6],[91,16,67,10,"error"],[91,21,67,15],[91,23,67,17],[92,14,68,8,"EventLogger"],[92,38,68,19],[92,39,68,20,"error"],[92,44,68,25],[92,45,68,26],[92,57,68,38],[92,59,68,40],[92,95,68,76],[92,97,68,78,"error"],[92,102,68,92],[92,103,68,93],[93,14,69,8],[93,21,69,15],[93,26,69,20],[94,12,70,6],[95,12,72,6],[95,19,72,13],[95,20,72,14,"data"],[95,24,72,18],[95,26,72,20,"length"],[95,32,72,26],[95,36,72,30],[95,37,72,31],[95,41,72,35],[95,42,72,36],[96,10,73,4],[96,11,73,5],[96,12,73,6],[96,19,73,13,"error"],[96,24,73,18],[96,26,73,20],[97,12,74,6,"EventLogger"],[97,36,74,17],[97,37,74,18,"error"],[97,42,74,23],[97,43,74,24],[97,55,74,36],[97,57,74,38],[97,94,74,75],[97,96,74,77,"error"],[97,101,74,91],[97,102,74,92],[98,12,75,6],[98,19,75,13],[98,24,75,18],[99,10,76,4],[100,8,77,2],[100,9,77,3],[101,8,77,3],[101,17,58,15,"hasSampleAutomations"],[101,37,58,35,"hasSampleAutomations"],[101,38,58,35,"_x2"],[101,41,58,35],[102,10,58,35],[102,17,58,35,"_hasSampleAutomations"],[102,38,58,35],[102,39,58,35,"apply"],[102,44,58,35],[102,51,58,35,"arguments"],[102,60,58,35],[103,8,58,35],[104,8,58,35],[104,15,58,15,"hasSampleAutomations"],[104,35,58,35],[105,6,58,35],[106,6,79,2],[107,0,80,0],[108,0,81,0],[109,6,79,2],[110,4,79,2],[111,6,79,2,"key"],[111,9,79,2],[112,6,79,2,"value"],[112,11,79,2],[113,8,79,2],[113,12,79,2,"_initializeNewUser"],[113,30,79,2],[113,37,79,2,"_asyncToGenerator2"],[113,55,79,2],[113,56,79,2,"default"],[113,63,79,2],[113,65,82,2],[113,76,82,33,"userId"],[113,82,82,47],[113,84,82,49],[114,10,83,4],[114,14,83,8],[115,12,84,6],[116,12,85,6],[116,16,85,12,"hasSamples"],[116,26,85,22],[116,35,85,31],[116,39,85,35],[116,40,85,36,"hasSampleAutomations"],[116,60,85,56],[116,61,85,57,"userId"],[116,67,85,63],[116,68,85,64],[117,12,87,6],[117,16,87,10],[117,17,87,11,"hasSamples"],[117,27,87,21],[117,29,87,23],[118,14,88,8],[119,14,89,8],[119,18,89,14,"result"],[119,24,89,20],[119,33,89,29],[119,37,89,33],[119,38,89,34,"createSampleAutomations"],[119,61,89,57],[119,62,89,58,"userId"],[119,68,89,64],[119,69,89,65],[120,14,91,8],[120,18,91,12,"result"],[120,24,91,18],[120,25,91,19,"success"],[120,32,91,26],[120,34,91,28],[121,16,92,10,"EventLogger"],[121,40,92,21],[121,41,92,22,"debug"],[121,46,92,27],[121,47,92,28],[121,59,92,40],[121,61,92,42],[121,124,92,105],[121,125,92,106],[122,14,93,8],[123,14,95,8],[123,21,95,15,"result"],[123,27,95,21],[124,12,96,6],[125,12,98,6],[125,19,98,13],[126,14,98,15,"success"],[126,21,98,22],[126,23,98,24],[126,27,98,28],[127,14,98,30,"message"],[127,21,98,37],[127,23,98,39],[128,12,98,77],[128,13,98,78],[129,10,99,4],[129,11,99,5],[129,12,99,6],[129,19,99,13,"error"],[129,24,99,18],[129,26,99,20],[130,12,100,6,"EventLogger"],[130,36,100,17],[130,37,100,18,"error"],[130,42,100,23],[130,43,100,24],[130,55,100,36],[130,57,100,38],[130,89,100,70],[130,91,100,72,"error"],[130,96,100,86],[130,97,100,87],[131,12,101,6],[131,19,101,13],[132,14,101,15,"success"],[132,21,101,22],[132,23,101,24],[132,28,101,29],[133,14,101,31,"error"],[134,12,101,37],[134,13,101,38],[135,10,102,4],[136,8,103,2],[136,9,103,3],[137,8,103,3],[137,17,82,15,"initializeNewUser"],[137,34,82,32,"initializeNewUser"],[137,35,82,32,"_x3"],[137,38,82,32],[138,10,82,32],[138,17,82,32,"_initializeNewUser"],[138,35,82,32],[138,36,82,32,"apply"],[138,41,82,32],[138,48,82,32,"arguments"],[138,57,82,32],[139,8,82,32],[140,8,82,32],[140,15,82,15,"initializeNewUser"],[140,32,82,32],[141,6,82,32],[142,4,82,32],[143,2,82,32],[144,0,82,32],[144,3]],"functionMap":{"names":["<global>","OnboardingService","createSampleAutomations","sampleAutomations.map$argument_0","hasSampleAutomations","initializeNewUser"],"mappings":"AAA;OCI;ECI;wDCG;QDgB;GDyB;EGK;GHmB;EIK;GJqB"}},"type":"js/module"}]}