{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"aU3Lrys8xTVpYSDJal2nhppojC8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"domelementtype","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"tVJ16XfW1AI8lcfhJrZBho14ocA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Text = exports.ProcessingInstruction = exports.NodeWithChildren = exports.Node = exports.Element = exports.Document = exports.DataNode = exports.Comment = exports.CDATA = void 0;\n  exports.cloneNode = _cloneNode;\n  exports.hasChildren = hasChildren;\n  exports.isCDATA = isCDATA;\n  exports.isComment = isComment;\n  exports.isDirective = isDirective;\n  exports.isDocument = isDocument;\n  exports.isTag = isTag;\n  exports.isText = isText;\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n  var _domelementtype = require(_dependencyMap[6], \"domelementtype\");\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  /**\n   * This object will be used as the prototype for Nodes when creating a\n   * DOM-Level-1-compliant structure.\n   */\n  var Node = exports.Node = /*#__PURE__*/function () {\n    function Node() {\n      (0, _classCallCheck2.default)(this, Node);\n      /** Parent of the node */\n      this.parent = null;\n      /** Previous sibling */\n      this.prev = null;\n      /** Next sibling */\n      this.next = null;\n      /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n      this.startIndex = null;\n      /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n      this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    return (0, _createClass2.default)(Node, [{\n      key: \"parentNode\",\n      get: function get() {\n        return this.parent;\n      },\n      set: function set(parent) {\n        this.parent = parent;\n      }\n      /**\n       * Same as {@link prev}.\n       * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n       */\n    }, {\n      key: \"previousSibling\",\n      get: function get() {\n        return this.prev;\n      },\n      set: function set(prev) {\n        this.prev = prev;\n      }\n      /**\n       * Same as {@link next}.\n       * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n       */\n    }, {\n      key: \"nextSibling\",\n      get: function get() {\n        return this.next;\n      },\n      set: function set(next) {\n        this.next = next;\n      }\n      /**\n       * Clone this node, and optionally its children.\n       *\n       * @param recursive Clone child nodes as well.\n       * @returns A clone of the node.\n       */\n    }, {\n      key: \"cloneNode\",\n      value: function cloneNode() {\n        var recursive = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        return _cloneNode(this, recursive);\n      }\n    }]);\n  }();\n  /**\n   * A node that contains some data.\n   */\n  var DataNode = exports.DataNode = /*#__PURE__*/function (_Node) {\n    /**\n     * @param data The content of the data node\n     */\n    function DataNode(data) {\n      var _this;\n      (0, _classCallCheck2.default)(this, DataNode);\n      _this = _callSuper(this, DataNode);\n      _this.data = data;\n      return _this;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    (0, _inherits2.default)(DataNode, _Node);\n    return (0, _createClass2.default)(DataNode, [{\n      key: \"nodeValue\",\n      get: function get() {\n        return this.data;\n      },\n      set: function set(data) {\n        this.data = data;\n      }\n    }]);\n  }(Node);\n  /**\n   * Text within the document.\n   */\n  var Text = exports.Text = /*#__PURE__*/function (_DataNode) {\n    function Text() {\n      var _this2;\n      (0, _classCallCheck2.default)(this, Text);\n      _this2 = _callSuper(this, Text, arguments);\n      _this2.type = _domelementtype.ElementType.Text;\n      return _this2;\n    }\n    (0, _inherits2.default)(Text, _DataNode);\n    return (0, _createClass2.default)(Text, [{\n      key: \"nodeType\",\n      get: function get() {\n        return 3;\n      }\n    }]);\n  }(DataNode);\n  /**\n   * Comments within the document.\n   */\n  var Comment = exports.Comment = /*#__PURE__*/function (_DataNode2) {\n    function Comment() {\n      var _this3;\n      (0, _classCallCheck2.default)(this, Comment);\n      _this3 = _callSuper(this, Comment, arguments);\n      _this3.type = _domelementtype.ElementType.Comment;\n      return _this3;\n    }\n    (0, _inherits2.default)(Comment, _DataNode2);\n    return (0, _createClass2.default)(Comment, [{\n      key: \"nodeType\",\n      get: function get() {\n        return 8;\n      }\n    }]);\n  }(DataNode);\n  /**\n   * Processing instructions, including doc types.\n   */\n  var ProcessingInstruction = exports.ProcessingInstruction = /*#__PURE__*/function (_DataNode3) {\n    function ProcessingInstruction(name, data) {\n      var _this4;\n      (0, _classCallCheck2.default)(this, ProcessingInstruction);\n      _this4 = _callSuper(this, ProcessingInstruction, [data]);\n      _this4.name = name;\n      _this4.type = _domelementtype.ElementType.Directive;\n      return _this4;\n    }\n    (0, _inherits2.default)(ProcessingInstruction, _DataNode3);\n    return (0, _createClass2.default)(ProcessingInstruction, [{\n      key: \"nodeType\",\n      get: function get() {\n        return 1;\n      }\n    }]);\n  }(DataNode);\n  /**\n   * A `Node` that can have children.\n   */\n  var NodeWithChildren = exports.NodeWithChildren = /*#__PURE__*/function (_Node2) {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    function NodeWithChildren(children) {\n      var _this5;\n      (0, _classCallCheck2.default)(this, NodeWithChildren);\n      _this5 = _callSuper(this, NodeWithChildren);\n      _this5.children = children;\n      return _this5;\n    }\n    // Aliases\n    /** First child of the node. */\n    (0, _inherits2.default)(NodeWithChildren, _Node2);\n    return (0, _createClass2.default)(NodeWithChildren, [{\n      key: \"firstChild\",\n      get: function get() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n      }\n      /** Last child of the node. */\n    }, {\n      key: \"lastChild\",\n      get: function get() {\n        return this.children.length > 0 ? this.children[this.children.length - 1] : null;\n      }\n      /**\n       * Same as {@link children}.\n       * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n       */\n    }, {\n      key: \"childNodes\",\n      get: function get() {\n        return this.children;\n      },\n      set: function set(children) {\n        this.children = children;\n      }\n    }]);\n  }(Node);\n  var CDATA = exports.CDATA = /*#__PURE__*/function (_NodeWithChildren) {\n    function CDATA() {\n      var _this6;\n      (0, _classCallCheck2.default)(this, CDATA);\n      _this6 = _callSuper(this, CDATA, arguments);\n      _this6.type = _domelementtype.ElementType.CDATA;\n      return _this6;\n    }\n    (0, _inherits2.default)(CDATA, _NodeWithChildren);\n    return (0, _createClass2.default)(CDATA, [{\n      key: \"nodeType\",\n      get: function get() {\n        return 4;\n      }\n    }]);\n  }(NodeWithChildren);\n  /**\n   * The root node of the document.\n   */\n  var Document = exports.Document = /*#__PURE__*/function (_NodeWithChildren2) {\n    function Document() {\n      var _this7;\n      (0, _classCallCheck2.default)(this, Document);\n      _this7 = _callSuper(this, Document, arguments);\n      _this7.type = _domelementtype.ElementType.Root;\n      return _this7;\n    }\n    (0, _inherits2.default)(Document, _NodeWithChildren2);\n    return (0, _createClass2.default)(Document, [{\n      key: \"nodeType\",\n      get: function get() {\n        return 9;\n      }\n    }]);\n  }(NodeWithChildren);\n  /**\n   * An element within the DOM.\n   */\n  var Element = exports.Element = /*#__PURE__*/function (_NodeWithChildren3) {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    function Element(name, attribs) {\n      var _this8;\n      var children = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : name === \"script\" ? _domelementtype.ElementType.Script : name === \"style\" ? _domelementtype.ElementType.Style : _domelementtype.ElementType.Tag;\n      (0, _classCallCheck2.default)(this, Element);\n      _this8 = _callSuper(this, Element, [children]);\n      _this8.name = name;\n      _this8.attribs = attribs;\n      _this8.type = type;\n      return _this8;\n    }\n    (0, _inherits2.default)(Element, _NodeWithChildren3);\n    return (0, _createClass2.default)(Element, [{\n      key: \"nodeType\",\n      get: function get() {\n        return 1;\n      }\n      // DOM Level 1 aliases\n      /**\n       * Same as {@link name}.\n       * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n       */\n    }, {\n      key: \"tagName\",\n      get: function get() {\n        return this.name;\n      },\n      set: function set(name) {\n        this.name = name;\n      }\n    }, {\n      key: \"attributes\",\n      get: function get() {\n        var _this9 = this;\n        return Object.keys(this.attribs).map(function (name) {\n          var _a, _b;\n          return {\n            name: name,\n            value: _this9.attribs[name],\n            namespace: (_a = _this9[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n            prefix: (_b = _this9[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name]\n          };\n        });\n      }\n    }]);\n  }(NodeWithChildren);\n  /**\n   * @param node Node to check.\n   * @returns `true` if the node is a `Element`, `false` otherwise.\n   */\n  function isTag(node) {\n    return (0, _domelementtype.isTag)(node);\n  }\n  /**\n   * @param node Node to check.\n   * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n   */\n  function isCDATA(node) {\n    return node.type === _domelementtype.ElementType.CDATA;\n  }\n  /**\n   * @param node Node to check.\n   * @returns `true` if the node has the type `Text`, `false` otherwise.\n   */\n  function isText(node) {\n    return node.type === _domelementtype.ElementType.Text;\n  }\n  /**\n   * @param node Node to check.\n   * @returns `true` if the node has the type `Comment`, `false` otherwise.\n   */\n  function isComment(node) {\n    return node.type === _domelementtype.ElementType.Comment;\n  }\n  /**\n   * @param node Node to check.\n   * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n   */\n  function isDirective(node) {\n    return node.type === _domelementtype.ElementType.Directive;\n  }\n  /**\n   * @param node Node to check.\n   * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n   */\n  function isDocument(node) {\n    return node.type === _domelementtype.ElementType.Root;\n  }\n  /**\n   * @param node Node to check.\n   * @returns `true` if the node has children, `false` otherwise.\n   */\n  function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n  }\n  /**\n   * Clone a node, and optionally its children.\n   *\n   * @param recursive Clone child nodes as well.\n   * @returns A clone of the node.\n   */\n  function _cloneNode(node) {\n    var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var result;\n    if (isText(node)) {\n      result = new Text(node.data);\n    } else if (isComment(node)) {\n      result = new Comment(node.data);\n    } else if (isTag(node)) {\n      var children = recursive ? cloneChildren(node.children) : [];\n      var clone = new Element(node.name, Object.assign({}, node.attribs), children);\n      children.forEach(function (child) {\n        return child.parent = clone;\n      });\n      if (node.namespace != null) {\n        clone.namespace = node.namespace;\n      }\n      if (node[\"x-attribsNamespace\"]) {\n        clone[\"x-attribsNamespace\"] = Object.assign({}, node[\"x-attribsNamespace\"]);\n      }\n      if (node[\"x-attribsPrefix\"]) {\n        clone[\"x-attribsPrefix\"] = Object.assign({}, node[\"x-attribsPrefix\"]);\n      }\n      result = clone;\n    } else if (isCDATA(node)) {\n      var _children = recursive ? cloneChildren(node.children) : [];\n      var _clone = new CDATA(_children);\n      _children.forEach(function (child) {\n        return child.parent = _clone;\n      });\n      result = _clone;\n    } else if (isDocument(node)) {\n      var _children2 = recursive ? cloneChildren(node.children) : [];\n      var _clone2 = new Document(_children2);\n      _children2.forEach(function (child) {\n        return child.parent = _clone2;\n      });\n      if (node[\"x-mode\"]) {\n        _clone2[\"x-mode\"] = node[\"x-mode\"];\n      }\n      result = _clone2;\n    } else if (isDirective(node)) {\n      var instruction = new ProcessingInstruction(node.name, node.data);\n      if (node[\"x-name\"] != null) {\n        instruction[\"x-name\"] = node[\"x-name\"];\n        instruction[\"x-publicId\"] = node[\"x-publicId\"];\n        instruction[\"x-systemId\"] = node[\"x-systemId\"];\n      }\n      result = instruction;\n    } else {\n      throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n      result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n  }\n  function cloneChildren(childs) {\n    var children = childs.map(function (child) {\n      return _cloneNode(child, true);\n    });\n    for (var i = 1; i < children.length; i++) {\n      children[i].prev = children[i - 1];\n      children[i - 1].next = children[i];\n    }\n    return children;\n  }\n});","lineCount":435,"map":[[20,2,1,0],[20,6,1,0,"_domelementtype"],[20,21,1,0],[20,24,1,0,"require"],[20,31,1,0],[20,32,1,0,"_dependencyMap"],[20,46,1,0],[21,2,1,64],[21,11,1,64,"_callSuper"],[21,22,1,64,"t"],[21,23,1,64],[21,25,1,64,"o"],[21,26,1,64],[21,28,1,64,"e"],[21,29,1,64],[21,40,1,64,"o"],[21,41,1,64],[21,48,1,64,"_getPrototypeOf2"],[21,64,1,64],[21,65,1,64,"default"],[21,72,1,64],[21,74,1,64,"o"],[21,75,1,64],[21,82,1,64,"_possibleConstructorReturn2"],[21,109,1,64],[21,110,1,64,"default"],[21,117,1,64],[21,119,1,64,"t"],[21,120,1,64],[21,122,1,64,"_isNativeReflectConstruct"],[21,147,1,64],[21,152,1,64,"Reflect"],[21,159,1,64],[21,160,1,64,"construct"],[21,169,1,64],[21,170,1,64,"o"],[21,171,1,64],[21,173,1,64,"e"],[21,174,1,64],[21,186,1,64,"_getPrototypeOf2"],[21,202,1,64],[21,203,1,64,"default"],[21,210,1,64],[21,212,1,64,"t"],[21,213,1,64],[21,215,1,64,"constructor"],[21,226,1,64],[21,230,1,64,"o"],[21,231,1,64],[21,232,1,64,"apply"],[21,237,1,64],[21,238,1,64,"t"],[21,239,1,64],[21,241,1,64,"e"],[21,242,1,64],[22,2,1,64],[22,11,1,64,"_isNativeReflectConstruct"],[22,37,1,64],[22,51,1,64,"t"],[22,52,1,64],[22,56,1,64,"Boolean"],[22,63,1,64],[22,64,1,64,"prototype"],[22,73,1,64],[22,74,1,64,"valueOf"],[22,81,1,64],[22,82,1,64,"call"],[22,86,1,64],[22,87,1,64,"Reflect"],[22,94,1,64],[22,95,1,64,"construct"],[22,104,1,64],[22,105,1,64,"Boolean"],[22,112,1,64],[22,145,1,64,"t"],[22,146,1,64],[22,159,1,64,"_isNativeReflectConstruct"],[22,184,1,64],[22,196,1,64,"_isNativeReflectConstruct"],[22,222,1,64],[22,235,1,64,"t"],[22,236,1,64],[23,2,2,0],[24,0,3,0],[25,0,4,0],[26,0,5,0],[27,2,2,0],[27,6,6,13,"Node"],[27,10,6,17],[27,13,6,17,"exports"],[27,20,6,17],[27,21,6,17,"Node"],[27,25,6,17],[28,4,7,4],[28,13,7,4,"Node"],[28,18,7,4],[28,20,7,18],[29,6,7,18],[29,10,7,18,"_classCallCheck2"],[29,26,7,18],[29,27,7,18,"default"],[29,34,7,18],[29,42,7,18,"Node"],[29,46,7,18],[30,6,8,8],[31,6,9,8],[31,10,9,12],[31,11,9,13,"parent"],[31,17,9,19],[31,20,9,22],[31,24,9,26],[32,6,10,8],[33,6,11,8],[33,10,11,12],[33,11,11,13,"prev"],[33,15,11,17],[33,18,11,20],[33,22,11,24],[34,6,12,8],[35,6,13,8],[35,10,13,12],[35,11,13,13,"next"],[35,15,13,17],[35,18,13,20],[35,22,13,24],[36,6,14,8],[37,6,15,8],[37,10,15,12],[37,11,15,13,"startIndex"],[37,21,15,23],[37,24,15,26],[37,28,15,30],[38,6,16,8],[39,6,17,8],[39,10,17,12],[39,11,17,13,"endIndex"],[39,19,17,21],[39,22,17,24],[39,26,17,28],[40,4,18,4],[41,4,19,4],[42,4,20,4],[43,0,21,0],[44,0,22,0],[45,0,23,0],[46,4,20,4],[46,15,20,4,"_createClass2"],[46,28,20,4],[46,29,20,4,"default"],[46,36,20,4],[46,38,20,4,"Node"],[46,42,20,4],[47,6,20,4,"key"],[47,9,20,4],[48,6,20,4,"get"],[48,9,20,4],[48,11,24,4],[48,20,24,4,"get"],[48,24,24,4],[48,26,24,21],[49,8,25,8],[49,15,25,15],[49,19,25,19],[49,20,25,20,"parent"],[49,26,25,26],[50,6,26,4],[50,7,26,5],[51,6,26,5,"set"],[51,9,26,5],[51,11,27,4],[51,20,27,4,"set"],[51,24,27,19,"parent"],[51,30,27,25],[51,32,27,27],[52,8,28,8],[52,12,28,12],[52,13,28,13,"parent"],[52,19,28,19],[52,22,28,22,"parent"],[52,28,28,28],[53,6,29,4],[54,6,30,4],[55,0,31,0],[56,0,32,0],[57,0,33,0],[58,4,30,4],[59,6,30,4,"key"],[59,9,30,4],[60,6,30,4,"get"],[60,9,30,4],[60,11,34,4],[60,20,34,4,"get"],[60,24,34,4],[60,26,34,26],[61,8,35,8],[61,15,35,15],[61,19,35,19],[61,20,35,20,"prev"],[61,24,35,24],[62,6,36,4],[62,7,36,5],[63,6,36,5,"set"],[63,9,36,5],[63,11,37,4],[63,20,37,4,"set"],[63,24,37,24,"prev"],[63,28,37,28],[63,30,37,30],[64,8,38,8],[64,12,38,12],[64,13,38,13,"prev"],[64,17,38,17],[64,20,38,20,"prev"],[64,24,38,24],[65,6,39,4],[66,6,40,4],[67,0,41,0],[68,0,42,0],[69,0,43,0],[70,4,40,4],[71,6,40,4,"key"],[71,9,40,4],[72,6,40,4,"get"],[72,9,40,4],[72,11,44,4],[72,20,44,4,"get"],[72,24,44,4],[72,26,44,22],[73,8,45,8],[73,15,45,15],[73,19,45,19],[73,20,45,20,"next"],[73,24,45,24],[74,6,46,4],[74,7,46,5],[75,6,46,5,"set"],[75,9,46,5],[75,11,47,4],[75,20,47,4,"set"],[75,24,47,20,"next"],[75,28,47,24],[75,30,47,26],[76,8,48,8],[76,12,48,12],[76,13,48,13,"next"],[76,17,48,17],[76,20,48,20,"next"],[76,24,48,24],[77,6,49,4],[78,6,50,4],[79,0,51,0],[80,0,52,0],[81,0,53,0],[82,0,54,0],[83,0,55,0],[84,4,50,4],[85,6,50,4,"key"],[85,9,50,4],[86,6,50,4,"value"],[86,11,50,4],[86,13,56,4],[86,22,56,4,"cloneNode"],[86,31,56,13,"cloneNode"],[86,32,56,13],[86,34,56,33],[87,8,56,33],[87,12,56,14,"recursive"],[87,21,56,23],[87,24,56,23,"arguments"],[87,33,56,23],[87,34,56,23,"length"],[87,40,56,23],[87,48,56,23,"arguments"],[87,57,56,23],[87,65,56,23,"undefined"],[87,74,56,23],[87,77,56,23,"arguments"],[87,86,56,23],[87,92,56,26],[87,97,56,31],[88,8,57,8],[88,15,57,15,"cloneNode"],[88,25,57,24],[88,26,57,25],[88,30,57,29],[88,32,57,31,"recursive"],[88,41,57,40],[88,42,57,41],[89,6,58,4],[90,4,58,5],[91,2,58,5],[92,2,60,0],[93,0,61,0],[94,0,62,0],[95,2,60,0],[95,6,63,13,"DataNode"],[95,14,63,21],[95,17,63,21,"exports"],[95,24,63,21],[95,25,63,21,"DataNode"],[95,33,63,21],[95,59,63,21,"_Node"],[95,64,63,21],[96,4,64,4],[97,0,65,0],[98,0,66,0],[99,4,67,4],[99,13,67,4,"DataNode"],[99,22,67,16,"data"],[99,26,67,20],[99,28,67,22],[100,6,67,22],[100,10,67,22,"_this"],[100,15,67,22],[101,6,67,22],[101,10,67,22,"_classCallCheck2"],[101,26,67,22],[101,27,67,22,"default"],[101,34,67,22],[101,42,67,22,"DataNode"],[101,50,67,22],[102,6,68,8,"_this"],[102,11,68,8],[102,14,68,8,"_callSuper"],[102,24,68,8],[102,31,68,8,"DataNode"],[102,39,68,8],[103,6,69,8,"_this"],[103,11,69,8],[103,12,69,13,"data"],[103,16,69,17],[103,19,69,20,"data"],[103,23,69,24],[104,6,69,25],[104,13,69,25,"_this"],[104,18,69,25],[105,4,70,4],[106,4,71,4],[107,0,72,0],[108,0,73,0],[109,0,74,0],[110,4,71,4],[110,8,71,4,"_inherits2"],[110,18,71,4],[110,19,71,4,"default"],[110,26,71,4],[110,28,71,4,"DataNode"],[110,36,71,4],[110,38,71,4,"_Node"],[110,43,71,4],[111,4,71,4],[111,15,71,4,"_createClass2"],[111,28,71,4],[111,29,71,4,"default"],[111,36,71,4],[111,38,71,4,"DataNode"],[111,46,71,4],[112,6,71,4,"key"],[112,9,71,4],[113,6,71,4,"get"],[113,9,71,4],[113,11,75,4],[113,20,75,4,"get"],[113,24,75,4],[113,26,75,20],[114,8,76,8],[114,15,76,15],[114,19,76,19],[114,20,76,20,"data"],[114,24,76,24],[115,6,77,4],[115,7,77,5],[116,6,77,5,"set"],[116,9,77,5],[116,11,78,4],[116,20,78,4,"set"],[116,24,78,18,"data"],[116,28,78,22],[116,30,78,24],[117,8,79,8],[117,12,79,12],[117,13,79,13,"data"],[117,17,79,17],[117,20,79,20,"data"],[117,24,79,24],[118,6,80,4],[119,4,80,5],[120,2,80,5],[120,4,63,30,"Node"],[120,8,63,34],[121,2,82,0],[122,0,83,0],[123,0,84,0],[124,2,82,0],[124,6,85,13,"Text"],[124,10,85,17],[124,13,85,17,"exports"],[124,20,85,17],[124,21,85,17,"Text"],[124,25,85,17],[124,51,85,17,"_DataNode"],[124,60,85,17],[125,4,86,4],[125,13,86,4,"Text"],[125,18,86,4],[125,20,86,18],[126,6,86,18],[126,10,86,18,"_this2"],[126,16,86,18],[127,6,86,18],[127,10,86,18,"_classCallCheck2"],[127,26,86,18],[127,27,86,18,"default"],[127,34,86,18],[127,42,86,18,"Text"],[127,46,86,18],[128,6,87,8,"_this2"],[128,12,87,8],[128,15,87,8,"_callSuper"],[128,25,87,8],[128,32,87,8,"Text"],[128,36,87,8],[128,38,87,17,"arguments"],[128,47,87,26],[129,6,88,8,"_this2"],[129,12,88,8],[129,13,88,13,"type"],[129,17,88,17],[129,20,88,20,"ElementType"],[129,47,88,31],[129,48,88,32,"Text"],[129,52,88,36],[130,6,88,37],[130,13,88,37,"_this2"],[130,19,88,37],[131,4,89,4],[132,4,89,5],[132,8,89,5,"_inherits2"],[132,18,89,5],[132,19,89,5,"default"],[132,26,89,5],[132,28,89,5,"Text"],[132,32,89,5],[132,34,89,5,"_DataNode"],[132,43,89,5],[133,4,89,5],[133,15,89,5,"_createClass2"],[133,28,89,5],[133,29,89,5,"default"],[133,36,89,5],[133,38,89,5,"Text"],[133,42,89,5],[134,6,89,5,"key"],[134,9,89,5],[135,6,89,5,"get"],[135,9,89,5],[135,11,90,4],[135,20,90,4,"get"],[135,24,90,4],[135,26,90,19],[136,8,91,8],[136,15,91,15],[136,16,91,16],[137,6,92,4],[138,4,92,5],[139,2,92,5],[139,4,85,26,"DataNode"],[139,12,85,34],[140,2,94,0],[141,0,95,0],[142,0,96,0],[143,2,94,0],[143,6,97,13,"Comment"],[143,13,97,20],[143,16,97,20,"exports"],[143,23,97,20],[143,24,97,20,"Comment"],[143,31,97,20],[143,57,97,20,"_DataNode2"],[143,67,97,20],[144,4,98,4],[144,13,98,4,"Comment"],[144,21,98,4],[144,23,98,18],[145,6,98,18],[145,10,98,18,"_this3"],[145,16,98,18],[146,6,98,18],[146,10,98,18,"_classCallCheck2"],[146,26,98,18],[146,27,98,18,"default"],[146,34,98,18],[146,42,98,18,"Comment"],[146,49,98,18],[147,6,99,8,"_this3"],[147,12,99,8],[147,15,99,8,"_callSuper"],[147,25,99,8],[147,32,99,8,"Comment"],[147,39,99,8],[147,41,99,17,"arguments"],[147,50,99,26],[148,6,100,8,"_this3"],[148,12,100,8],[148,13,100,13,"type"],[148,17,100,17],[148,20,100,20,"ElementType"],[148,47,100,31],[148,48,100,32,"Comment"],[148,55,100,39],[149,6,100,40],[149,13,100,40,"_this3"],[149,19,100,40],[150,4,101,4],[151,4,101,5],[151,8,101,5,"_inherits2"],[151,18,101,5],[151,19,101,5,"default"],[151,26,101,5],[151,28,101,5,"Comment"],[151,35,101,5],[151,37,101,5,"_DataNode2"],[151,47,101,5],[152,4,101,5],[152,15,101,5,"_createClass2"],[152,28,101,5],[152,29,101,5,"default"],[152,36,101,5],[152,38,101,5,"Comment"],[152,45,101,5],[153,6,101,5,"key"],[153,9,101,5],[154,6,101,5,"get"],[154,9,101,5],[154,11,102,4],[154,20,102,4,"get"],[154,24,102,4],[154,26,102,19],[155,8,103,8],[155,15,103,15],[155,16,103,16],[156,6,104,4],[157,4,104,5],[158,2,104,5],[158,4,97,29,"DataNode"],[158,12,97,37],[159,2,106,0],[160,0,107,0],[161,0,108,0],[162,2,106,0],[162,6,109,13,"ProcessingInstruction"],[162,27,109,34],[162,30,109,34,"exports"],[162,37,109,34],[162,38,109,34,"ProcessingInstruction"],[162,59,109,34],[162,85,109,34,"_DataNode3"],[162,95,109,34],[163,4,110,4],[163,13,110,4,"ProcessingInstruction"],[163,35,110,16,"name"],[163,39,110,20],[163,41,110,22,"data"],[163,45,110,26],[163,47,110,28],[164,6,110,28],[164,10,110,28,"_this4"],[164,16,110,28],[165,6,110,28],[165,10,110,28,"_classCallCheck2"],[165,26,110,28],[165,27,110,28,"default"],[165,34,110,28],[165,42,110,28,"ProcessingInstruction"],[165,63,110,28],[166,6,111,8,"_this4"],[166,12,111,8],[166,15,111,8,"_callSuper"],[166,25,111,8],[166,32,111,8,"ProcessingInstruction"],[166,53,111,8],[166,56,111,14,"data"],[166,60,111,18],[167,6,112,8,"_this4"],[167,12,112,8],[167,13,112,13,"name"],[167,17,112,17],[167,20,112,20,"name"],[167,24,112,24],[168,6,113,8,"_this4"],[168,12,113,8],[168,13,113,13,"type"],[168,17,113,17],[168,20,113,20,"ElementType"],[168,47,113,31],[168,48,113,32,"Directive"],[168,57,113,41],[169,6,113,42],[169,13,113,42,"_this4"],[169,19,113,42],[170,4,114,4],[171,4,114,5],[171,8,114,5,"_inherits2"],[171,18,114,5],[171,19,114,5,"default"],[171,26,114,5],[171,28,114,5,"ProcessingInstruction"],[171,49,114,5],[171,51,114,5,"_DataNode3"],[171,61,114,5],[172,4,114,5],[172,15,114,5,"_createClass2"],[172,28,114,5],[172,29,114,5,"default"],[172,36,114,5],[172,38,114,5,"ProcessingInstruction"],[172,59,114,5],[173,6,114,5,"key"],[173,9,114,5],[174,6,114,5,"get"],[174,9,114,5],[174,11,115,4],[174,20,115,4,"get"],[174,24,115,4],[174,26,115,19],[175,8,116,8],[175,15,116,15],[175,16,116,16],[176,6,117,4],[177,4,117,5],[178,2,117,5],[178,4,109,43,"DataNode"],[178,12,109,51],[179,2,119,0],[180,0,120,0],[181,0,121,0],[182,2,119,0],[182,6,122,13,"NodeWithChildren"],[182,22,122,29],[182,25,122,29,"exports"],[182,32,122,29],[182,33,122,29,"NodeWithChildren"],[182,49,122,29],[182,75,122,29,"_Node2"],[182,81,122,29],[183,4,123,4],[184,0,124,0],[185,0,125,0],[186,4,126,4],[186,13,126,4,"NodeWithChildren"],[186,30,126,16,"children"],[186,38,126,24],[186,40,126,26],[187,6,126,26],[187,10,126,26,"_this5"],[187,16,126,26],[188,6,126,26],[188,10,126,26,"_classCallCheck2"],[188,26,126,26],[188,27,126,26,"default"],[188,34,126,26],[188,42,126,26,"NodeWithChildren"],[188,58,126,26],[189,6,127,8,"_this5"],[189,12,127,8],[189,15,127,8,"_callSuper"],[189,25,127,8],[189,32,127,8,"NodeWithChildren"],[189,48,127,8],[190,6,128,8,"_this5"],[190,12,128,8],[190,13,128,13,"children"],[190,21,128,21],[190,24,128,24,"children"],[190,32,128,32],[191,6,128,33],[191,13,128,33,"_this5"],[191,19,128,33],[192,4,129,4],[193,4,130,4],[194,4,131,4],[195,4,131,4],[195,8,131,4,"_inherits2"],[195,18,131,4],[195,19,131,4,"default"],[195,26,131,4],[195,28,131,4,"NodeWithChildren"],[195,44,131,4],[195,46,131,4,"_Node2"],[195,52,131,4],[196,4,131,4],[196,15,131,4,"_createClass2"],[196,28,131,4],[196,29,131,4,"default"],[196,36,131,4],[196,38,131,4,"NodeWithChildren"],[196,54,131,4],[197,6,131,4,"key"],[197,9,131,4],[198,6,131,4,"get"],[198,9,131,4],[198,11,132,4],[198,20,132,4,"get"],[198,24,132,4],[198,26,132,21],[199,8,133,8],[199,12,133,12,"_a"],[199,14,133,14],[200,8,134,8],[200,15,134,15],[200,16,134,16,"_a"],[200,18,134,18],[200,21,134,21],[200,25,134,25],[200,26,134,26,"children"],[200,34,134,34],[200,35,134,35],[200,36,134,36],[200,37,134,37],[200,43,134,43],[200,47,134,47],[200,51,134,51,"_a"],[200,53,134,53],[200,58,134,58],[200,63,134,63],[200,64,134,64],[200,67,134,67,"_a"],[200,69,134,69],[200,72,134,72],[200,76,134,76],[201,6,135,4],[202,6,136,4],[203,4,136,4],[204,6,136,4,"key"],[204,9,136,4],[205,6,136,4,"get"],[205,9,136,4],[205,11,137,4],[205,20,137,4,"get"],[205,24,137,4],[205,26,137,20],[206,8,138,8],[206,15,138,15],[206,19,138,19],[206,20,138,20,"children"],[206,28,138,28],[206,29,138,29,"length"],[206,35,138,35],[206,38,138,38],[206,39,138,39],[206,42,139,14],[206,46,139,18],[206,47,139,19,"children"],[206,55,139,27],[206,56,139,28],[206,60,139,32],[206,61,139,33,"children"],[206,69,139,41],[206,70,139,42,"length"],[206,76,139,48],[206,79,139,51],[206,80,139,52],[206,81,139,53],[206,84,140,14],[206,88,140,18],[207,6,141,4],[208,6,142,4],[209,0,143,0],[210,0,144,0],[211,0,145,0],[212,4,142,4],[213,6,142,4,"key"],[213,9,142,4],[214,6,142,4,"get"],[214,9,142,4],[214,11,146,4],[214,20,146,4,"get"],[214,24,146,4],[214,26,146,21],[215,8,147,8],[215,15,147,15],[215,19,147,19],[215,20,147,20,"children"],[215,28,147,28],[216,6,148,4],[216,7,148,5],[217,6,148,5,"set"],[217,9,148,5],[217,11,149,4],[217,20,149,4,"set"],[217,24,149,19,"children"],[217,32,149,27],[217,34,149,29],[218,8,150,8],[218,12,150,12],[218,13,150,13,"children"],[218,21,150,21],[218,24,150,24,"children"],[218,32,150,32],[219,6,151,4],[220,4,151,5],[221,2,151,5],[221,4,122,38,"Node"],[221,8,122,42],[222,2,122,42],[222,6,153,13,"CDATA"],[222,11,153,18],[222,14,153,18,"exports"],[222,21,153,18],[222,22,153,18,"CDATA"],[222,27,153,18],[222,53,153,18,"_NodeWithChildren"],[222,70,153,18],[223,4,154,4],[223,13,154,4,"CDATA"],[223,19,154,4],[223,21,154,18],[224,6,154,18],[224,10,154,18,"_this6"],[224,16,154,18],[225,6,154,18],[225,10,154,18,"_classCallCheck2"],[225,26,154,18],[225,27,154,18,"default"],[225,34,154,18],[225,42,154,18,"CDATA"],[225,47,154,18],[226,6,155,8,"_this6"],[226,12,155,8],[226,15,155,8,"_callSuper"],[226,25,155,8],[226,32,155,8,"CDATA"],[226,37,155,8],[226,39,155,17,"arguments"],[226,48,155,26],[227,6,156,8,"_this6"],[227,12,156,8],[227,13,156,13,"type"],[227,17,156,17],[227,20,156,20,"ElementType"],[227,47,156,31],[227,48,156,32,"CDATA"],[227,53,156,37],[228,6,156,38],[228,13,156,38,"_this6"],[228,19,156,38],[229,4,157,4],[230,4,157,5],[230,8,157,5,"_inherits2"],[230,18,157,5],[230,19,157,5,"default"],[230,26,157,5],[230,28,157,5,"CDATA"],[230,33,157,5],[230,35,157,5,"_NodeWithChildren"],[230,52,157,5],[231,4,157,5],[231,15,157,5,"_createClass2"],[231,28,157,5],[231,29,157,5,"default"],[231,36,157,5],[231,38,157,5,"CDATA"],[231,43,157,5],[232,6,157,5,"key"],[232,9,157,5],[233,6,157,5,"get"],[233,9,157,5],[233,11,158,4],[233,20,158,4,"get"],[233,24,158,4],[233,26,158,19],[234,8,159,8],[234,15,159,15],[234,16,159,16],[235,6,160,4],[236,4,160,5],[237,2,160,5],[237,4,153,27,"NodeWithChildren"],[237,20,153,43],[238,2,162,0],[239,0,163,0],[240,0,164,0],[241,2,162,0],[241,6,165,13,"Document"],[241,14,165,21],[241,17,165,21,"exports"],[241,24,165,21],[241,25,165,21,"Document"],[241,33,165,21],[241,59,165,21,"_NodeWithChildren2"],[241,77,165,21],[242,4,166,4],[242,13,166,4,"Document"],[242,22,166,4],[242,24,166,18],[243,6,166,18],[243,10,166,18,"_this7"],[243,16,166,18],[244,6,166,18],[244,10,166,18,"_classCallCheck2"],[244,26,166,18],[244,27,166,18,"default"],[244,34,166,18],[244,42,166,18,"Document"],[244,50,166,18],[245,6,167,8,"_this7"],[245,12,167,8],[245,15,167,8,"_callSuper"],[245,25,167,8],[245,32,167,8,"Document"],[245,40,167,8],[245,42,167,17,"arguments"],[245,51,167,26],[246,6,168,8,"_this7"],[246,12,168,8],[246,13,168,13,"type"],[246,17,168,17],[246,20,168,20,"ElementType"],[246,47,168,31],[246,48,168,32,"Root"],[246,52,168,36],[247,6,168,37],[247,13,168,37,"_this7"],[247,19,168,37],[248,4,169,4],[249,4,169,5],[249,8,169,5,"_inherits2"],[249,18,169,5],[249,19,169,5,"default"],[249,26,169,5],[249,28,169,5,"Document"],[249,36,169,5],[249,38,169,5,"_NodeWithChildren2"],[249,56,169,5],[250,4,169,5],[250,15,169,5,"_createClass2"],[250,28,169,5],[250,29,169,5,"default"],[250,36,169,5],[250,38,169,5,"Document"],[250,46,169,5],[251,6,169,5,"key"],[251,9,169,5],[252,6,169,5,"get"],[252,9,169,5],[252,11,170,4],[252,20,170,4,"get"],[252,24,170,4],[252,26,170,19],[253,8,171,8],[253,15,171,15],[253,16,171,16],[254,6,172,4],[255,4,172,5],[256,2,172,5],[256,4,165,30,"NodeWithChildren"],[256,20,165,46],[257,2,174,0],[258,0,175,0],[259,0,176,0],[260,2,174,0],[260,6,177,13,"Element"],[260,13,177,20],[260,16,177,20,"exports"],[260,23,177,20],[260,24,177,20,"Element"],[260,31,177,20],[260,57,177,20,"_NodeWithChildren3"],[260,75,177,20],[261,4,178,4],[262,0,179,0],[263,0,180,0],[264,0,181,0],[265,0,182,0],[266,4,183,4],[266,13,183,4,"Element"],[266,21,183,16,"name"],[266,25,183,20],[266,27,183,22,"attribs"],[266,34,183,29],[266,36,187,31],[267,6,187,31],[267,10,187,31,"_this8"],[267,16,187,31],[268,6,187,31],[268,10,183,31,"children"],[268,18,183,39],[268,21,183,39,"arguments"],[268,30,183,39],[268,31,183,39,"length"],[268,37,183,39],[268,45,183,39,"arguments"],[268,54,183,39],[268,62,183,39,"undefined"],[268,71,183,39],[268,74,183,39,"arguments"],[268,83,183,39],[268,89,183,42],[268,91,183,44],[269,6,183,44],[269,10,183,46,"type"],[269,14,183,50],[269,17,183,50,"arguments"],[269,26,183,50],[269,27,183,50,"length"],[269,33,183,50],[269,41,183,50,"arguments"],[269,50,183,50],[269,58,183,50,"undefined"],[269,67,183,50],[269,70,183,50,"arguments"],[269,79,183,50],[269,85,183,53,"name"],[269,89,183,57],[269,94,183,62],[269,102,183,70],[269,105,184,10,"ElementType"],[269,132,184,21],[269,133,184,22,"Script"],[269,139,184,28],[269,142,185,10,"name"],[269,146,185,14],[269,151,185,19],[269,158,185,26],[269,161,186,14,"ElementType"],[269,188,186,25],[269,189,186,26,"Style"],[269,194,186,31],[269,197,187,14,"ElementType"],[269,224,187,25],[269,225,187,26,"Tag"],[269,228,187,29],[270,6,187,29],[270,10,187,29,"_classCallCheck2"],[270,26,187,29],[270,27,187,29,"default"],[270,34,187,29],[270,42,187,29,"Element"],[270,49,187,29],[271,6,188,8,"_this8"],[271,12,188,8],[271,15,188,8,"_callSuper"],[271,25,188,8],[271,32,188,8,"Element"],[271,39,188,8],[271,42,188,14,"children"],[271,50,188,22],[272,6,189,8,"_this8"],[272,12,189,8],[272,13,189,13,"name"],[272,17,189,17],[272,20,189,20,"name"],[272,24,189,24],[273,6,190,8,"_this8"],[273,12,190,8],[273,13,190,13,"attribs"],[273,20,190,20],[273,23,190,23,"attribs"],[273,30,190,30],[274,6,191,8,"_this8"],[274,12,191,8],[274,13,191,13,"type"],[274,17,191,17],[274,20,191,20,"type"],[274,24,191,24],[275,6,191,25],[275,13,191,25,"_this8"],[275,19,191,25],[276,4,192,4],[277,4,192,5],[277,8,192,5,"_inherits2"],[277,18,192,5],[277,19,192,5,"default"],[277,26,192,5],[277,28,192,5,"Element"],[277,35,192,5],[277,37,192,5,"_NodeWithChildren3"],[277,55,192,5],[278,4,192,5],[278,15,192,5,"_createClass2"],[278,28,192,5],[278,29,192,5,"default"],[278,36,192,5],[278,38,192,5,"Element"],[278,45,192,5],[279,6,192,5,"key"],[279,9,192,5],[280,6,192,5,"get"],[280,9,192,5],[280,11,193,4],[280,20,193,4,"get"],[280,24,193,4],[280,26,193,19],[281,8,194,8],[281,15,194,15],[281,16,194,16],[282,6,195,4],[283,6,196,4],[284,6,197,4],[285,0,198,0],[286,0,199,0],[287,0,200,0],[288,4,197,4],[289,6,197,4,"key"],[289,9,197,4],[290,6,197,4,"get"],[290,9,197,4],[290,11,201,4],[290,20,201,4,"get"],[290,24,201,4],[290,26,201,18],[291,8,202,8],[291,15,202,15],[291,19,202,19],[291,20,202,20,"name"],[291,24,202,24],[292,6,203,4],[292,7,203,5],[293,6,203,5,"set"],[293,9,203,5],[293,11,204,4],[293,20,204,4,"set"],[293,24,204,16,"name"],[293,28,204,20],[293,30,204,22],[294,8,205,8],[294,12,205,12],[294,13,205,13,"name"],[294,17,205,17],[294,20,205,20,"name"],[294,24,205,24],[295,6,206,4],[296,4,206,5],[297,6,206,5,"key"],[297,9,206,5],[298,6,206,5,"get"],[298,9,206,5],[298,11,207,4],[298,20,207,4,"get"],[298,24,207,4],[298,26,207,21],[299,8,207,21],[299,12,207,21,"_this9"],[299,18,207,21],[300,8,208,8],[300,15,208,15,"Object"],[300,21,208,21],[300,22,208,22,"keys"],[300,26,208,26],[300,27,208,27],[300,31,208,31],[300,32,208,32,"attribs"],[300,39,208,39],[300,40,208,40],[300,41,208,41,"map"],[300,44,208,44],[300,45,208,45],[300,55,208,46,"name"],[300,59,208,50],[300,61,208,55],[301,10,209,12],[301,14,209,16,"_a"],[301,16,209,18],[301,18,209,20,"_b"],[301,20,209,22],[302,10,210,12],[302,17,210,20],[303,12,211,16,"name"],[303,16,211,20],[303,18,211,16,"name"],[303,22,211,20],[304,12,212,16,"value"],[304,17,212,21],[304,19,212,23,"_this9"],[304,25,212,27],[304,26,212,28,"attribs"],[304,33,212,35],[304,34,212,36,"name"],[304,38,212,40],[304,39,212,41],[305,12,213,16,"namespace"],[305,21,213,25],[305,23,213,27],[305,24,213,28,"_a"],[305,26,213,30],[305,29,213,33,"_this9"],[305,35,213,37],[305,36,213,38],[305,56,213,58],[305,57,213,59],[305,63,213,65],[305,67,213,69],[305,71,213,73,"_a"],[305,73,213,75],[305,78,213,80],[305,83,213,85],[305,84,213,86],[305,87,213,89],[305,92,213,94],[305,93,213,95],[305,96,213,98,"_a"],[305,98,213,100],[305,99,213,101,"name"],[305,103,213,105],[305,104,213,106],[306,12,214,16,"prefix"],[306,18,214,22],[306,20,214,24],[306,21,214,25,"_b"],[306,23,214,27],[306,26,214,30,"_this9"],[306,32,214,34],[306,33,214,35],[306,50,214,52],[306,51,214,53],[306,57,214,59],[306,61,214,63],[306,65,214,67,"_b"],[306,67,214,69],[306,72,214,74],[306,77,214,79],[306,78,214,80],[306,81,214,83],[306,86,214,88],[306,87,214,89],[306,90,214,92,"_b"],[306,92,214,94],[306,93,214,95,"name"],[306,97,214,99],[307,10,215,12],[307,11,215,13],[308,8,216,8],[308,9,216,9],[308,10,216,10],[309,6,217,4],[310,4,217,5],[311,2,217,5],[311,4,177,29,"NodeWithChildren"],[311,20,177,45],[312,2,219,0],[313,0,220,0],[314,0,221,0],[315,0,222,0],[316,2,223,7],[316,11,223,16,"isTag"],[316,16,223,21,"isTag"],[316,17,223,22,"node"],[316,21,223,26],[316,23,223,28],[317,4,224,4],[317,11,224,11],[317,15,224,11,"isTagRaw"],[317,36,224,19],[317,38,224,20,"node"],[317,42,224,24],[317,43,224,25],[318,2,225,0],[319,2,226,0],[320,0,227,0],[321,0,228,0],[322,0,229,0],[323,2,230,7],[323,11,230,16,"isCDATA"],[323,18,230,23,"isCDATA"],[323,19,230,24,"node"],[323,23,230,28],[323,25,230,30],[324,4,231,4],[324,11,231,11,"node"],[324,15,231,15],[324,16,231,16,"type"],[324,20,231,20],[324,25,231,25,"ElementType"],[324,52,231,36],[324,53,231,37,"CDATA"],[324,58,231,42],[325,2,232,0],[326,2,233,0],[327,0,234,0],[328,0,235,0],[329,0,236,0],[330,2,237,7],[330,11,237,16,"isText"],[330,17,237,22,"isText"],[330,18,237,23,"node"],[330,22,237,27],[330,24,237,29],[331,4,238,4],[331,11,238,11,"node"],[331,15,238,15],[331,16,238,16,"type"],[331,20,238,20],[331,25,238,25,"ElementType"],[331,52,238,36],[331,53,238,37,"Text"],[331,57,238,41],[332,2,239,0],[333,2,240,0],[334,0,241,0],[335,0,242,0],[336,0,243,0],[337,2,244,7],[337,11,244,16,"isComment"],[337,20,244,25,"isComment"],[337,21,244,26,"node"],[337,25,244,30],[337,27,244,32],[338,4,245,4],[338,11,245,11,"node"],[338,15,245,15],[338,16,245,16,"type"],[338,20,245,20],[338,25,245,25,"ElementType"],[338,52,245,36],[338,53,245,37,"Comment"],[338,60,245,44],[339,2,246,0],[340,2,247,0],[341,0,248,0],[342,0,249,0],[343,0,250,0],[344,2,251,7],[344,11,251,16,"isDirective"],[344,22,251,27,"isDirective"],[344,23,251,28,"node"],[344,27,251,32],[344,29,251,34],[345,4,252,4],[345,11,252,11,"node"],[345,15,252,15],[345,16,252,16,"type"],[345,20,252,20],[345,25,252,25,"ElementType"],[345,52,252,36],[345,53,252,37,"Directive"],[345,62,252,46],[346,2,253,0],[347,2,254,0],[348,0,255,0],[349,0,256,0],[350,0,257,0],[351,2,258,7],[351,11,258,16,"isDocument"],[351,21,258,26,"isDocument"],[351,22,258,27,"node"],[351,26,258,31],[351,28,258,33],[352,4,259,4],[352,11,259,11,"node"],[352,15,259,15],[352,16,259,16,"type"],[352,20,259,20],[352,25,259,25,"ElementType"],[352,52,259,36],[352,53,259,37,"Root"],[352,57,259,41],[353,2,260,0],[354,2,261,0],[355,0,262,0],[356,0,263,0],[357,0,264,0],[358,2,265,7],[358,11,265,16,"hasChildren"],[358,22,265,27,"hasChildren"],[358,23,265,28,"node"],[358,27,265,32],[358,29,265,34],[359,4,266,4],[359,11,266,11,"Object"],[359,17,266,17],[359,18,266,18,"prototype"],[359,27,266,27],[359,28,266,28,"hasOwnProperty"],[359,42,266,42],[359,43,266,43,"call"],[359,47,266,47],[359,48,266,48,"node"],[359,52,266,52],[359,54,266,54],[359,64,266,64],[359,65,266,65],[360,2,267,0],[361,2,268,0],[362,0,269,0],[363,0,270,0],[364,0,271,0],[365,0,272,0],[366,0,273,0],[367,2,274,7],[367,11,274,16,"cloneNode"],[367,21,274,25,"cloneNode"],[367,22,274,26,"node"],[367,26,274,30],[367,28,274,51],[368,4,274,51],[368,8,274,32,"recursive"],[368,17,274,41],[368,20,274,41,"arguments"],[368,29,274,41],[368,30,274,41,"length"],[368,36,274,41],[368,44,274,41,"arguments"],[368,53,274,41],[368,61,274,41,"undefined"],[368,70,274,41],[368,73,274,41,"arguments"],[368,82,274,41],[368,88,274,44],[368,93,274,49],[369,4,275,4],[369,8,275,8,"result"],[369,14,275,14],[370,4,276,4],[370,8,276,8,"isText"],[370,14,276,14],[370,15,276,15,"node"],[370,19,276,19],[370,20,276,20],[370,22,276,22],[371,6,277,8,"result"],[371,12,277,14],[371,15,277,17],[371,19,277,21,"Text"],[371,23,277,25],[371,24,277,26,"node"],[371,28,277,30],[371,29,277,31,"data"],[371,33,277,35],[371,34,277,36],[372,4,278,4],[372,5,278,5],[372,11,279,9],[372,15,279,13,"isComment"],[372,24,279,22],[372,25,279,23,"node"],[372,29,279,27],[372,30,279,28],[372,32,279,30],[373,6,280,8,"result"],[373,12,280,14],[373,15,280,17],[373,19,280,21,"Comment"],[373,26,280,28],[373,27,280,29,"node"],[373,31,280,33],[373,32,280,34,"data"],[373,36,280,38],[373,37,280,39],[374,4,281,4],[374,5,281,5],[374,11,282,9],[374,15,282,13,"isTag"],[374,20,282,18],[374,21,282,19,"node"],[374,25,282,23],[374,26,282,24],[374,28,282,26],[375,6,283,8],[375,10,283,14,"children"],[375,18,283,22],[375,21,283,25,"recursive"],[375,30,283,34],[375,33,283,37,"cloneChildren"],[375,46,283,50],[375,47,283,51,"node"],[375,51,283,55],[375,52,283,56,"children"],[375,60,283,64],[375,61,283,65],[375,64,283,68],[375,66,283,70],[376,6,284,8],[376,10,284,14,"clone"],[376,15,284,19],[376,18,284,22],[376,22,284,26,"Element"],[376,29,284,33],[376,30,284,34,"node"],[376,34,284,38],[376,35,284,39,"name"],[376,39,284,43],[376,41,284,43,"Object"],[376,47,284,43],[376,48,284,43,"assign"],[376,54,284,43],[376,59,284,50,"node"],[376,63,284,54],[376,64,284,55,"attribs"],[376,71,284,62],[376,74,284,66,"children"],[376,82,284,74],[376,83,284,75],[377,6,285,8,"children"],[377,14,285,16],[377,15,285,17,"forEach"],[377,22,285,24],[377,23,285,25],[377,33,285,26,"child"],[377,38,285,31],[378,8,285,31],[378,15,285,37,"child"],[378,20,285,42],[378,21,285,43,"parent"],[378,27,285,49],[378,30,285,52,"clone"],[378,35,285,57],[379,6,285,57],[379,7,285,58],[379,8,285,59],[380,6,286,8],[380,10,286,12,"node"],[380,14,286,16],[380,15,286,17,"namespace"],[380,24,286,26],[380,28,286,30],[380,32,286,34],[380,34,286,36],[381,8,287,12,"clone"],[381,13,287,17],[381,14,287,18,"namespace"],[381,23,287,27],[381,26,287,30,"node"],[381,30,287,34],[381,31,287,35,"namespace"],[381,40,287,44],[382,6,288,8],[383,6,289,8],[383,10,289,12,"node"],[383,14,289,16],[383,15,289,17],[383,35,289,37],[383,36,289,38],[383,38,289,40],[384,8,290,12,"clone"],[384,13,290,17],[384,14,290,18],[384,34,290,38],[384,35,290,39],[384,38,290,39,"Object"],[384,44,290,39],[384,45,290,39,"assign"],[384,51,290,39],[384,56,290,47,"node"],[384,60,290,51],[384,61,290,52],[384,81,290,72],[384,82,290,73],[384,83,290,75],[385,6,291,8],[386,6,292,8],[386,10,292,12,"node"],[386,14,292,16],[386,15,292,17],[386,32,292,34],[386,33,292,35],[386,35,292,37],[387,8,293,12,"clone"],[387,13,293,17],[387,14,293,18],[387,31,293,35],[387,32,293,36],[387,35,293,36,"Object"],[387,41,293,36],[387,42,293,36,"assign"],[387,48,293,36],[387,53,293,44,"node"],[387,57,293,48],[387,58,293,49],[387,75,293,66],[387,76,293,67],[387,77,293,69],[388,6,294,8],[389,6,295,8,"result"],[389,12,295,14],[389,15,295,17,"clone"],[389,20,295,22],[390,4,296,4],[390,5,296,5],[390,11,297,9],[390,15,297,13,"isCDATA"],[390,22,297,20],[390,23,297,21,"node"],[390,27,297,25],[390,28,297,26],[390,30,297,28],[391,6,298,8],[391,10,298,14,"children"],[391,19,298,22],[391,22,298,25,"recursive"],[391,31,298,34],[391,34,298,37,"cloneChildren"],[391,47,298,50],[391,48,298,51,"node"],[391,52,298,55],[391,53,298,56,"children"],[391,61,298,64],[391,62,298,65],[391,65,298,68],[391,67,298,70],[392,6,299,8],[392,10,299,14,"clone"],[392,16,299,19],[392,19,299,22],[392,23,299,26,"CDATA"],[392,28,299,31],[392,29,299,32,"children"],[392,38,299,40],[392,39,299,41],[393,6,300,8,"children"],[393,15,300,16],[393,16,300,17,"forEach"],[393,23,300,24],[393,24,300,25],[393,34,300,26,"child"],[393,39,300,31],[394,8,300,31],[394,15,300,37,"child"],[394,20,300,42],[394,21,300,43,"parent"],[394,27,300,49],[394,30,300,52,"clone"],[394,36,300,57],[395,6,300,57],[395,7,300,58],[395,8,300,59],[396,6,301,8,"result"],[396,12,301,14],[396,15,301,17,"clone"],[396,21,301,22],[397,4,302,4],[397,5,302,5],[397,11,303,9],[397,15,303,13,"isDocument"],[397,25,303,23],[397,26,303,24,"node"],[397,30,303,28],[397,31,303,29],[397,33,303,31],[398,6,304,8],[398,10,304,14,"children"],[398,20,304,22],[398,23,304,25,"recursive"],[398,32,304,34],[398,35,304,37,"cloneChildren"],[398,48,304,50],[398,49,304,51,"node"],[398,53,304,55],[398,54,304,56,"children"],[398,62,304,64],[398,63,304,65],[398,66,304,68],[398,68,304,70],[399,6,305,8],[399,10,305,14,"clone"],[399,17,305,19],[399,20,305,22],[399,24,305,26,"Document"],[399,32,305,34],[399,33,305,35,"children"],[399,43,305,43],[399,44,305,44],[400,6,306,8,"children"],[400,16,306,16],[400,17,306,17,"forEach"],[400,24,306,24],[400,25,306,25],[400,35,306,26,"child"],[400,40,306,31],[401,8,306,31],[401,15,306,37,"child"],[401,20,306,42],[401,21,306,43,"parent"],[401,27,306,49],[401,30,306,52,"clone"],[401,37,306,57],[402,6,306,57],[402,7,306,58],[402,8,306,59],[403,6,307,8],[403,10,307,12,"node"],[403,14,307,16],[403,15,307,17],[403,23,307,25],[403,24,307,26],[403,26,307,28],[404,8,308,12,"clone"],[404,15,308,17],[404,16,308,18],[404,24,308,26],[404,25,308,27],[404,28,308,30,"node"],[404,32,308,34],[404,33,308,35],[404,41,308,43],[404,42,308,44],[405,6,309,8],[406,6,310,8,"result"],[406,12,310,14],[406,15,310,17,"clone"],[406,22,310,22],[407,4,311,4],[407,5,311,5],[407,11,312,9],[407,15,312,13,"isDirective"],[407,26,312,24],[407,27,312,25,"node"],[407,31,312,29],[407,32,312,30],[407,34,312,32],[408,6,313,8],[408,10,313,14,"instruction"],[408,21,313,25],[408,24,313,28],[408,28,313,32,"ProcessingInstruction"],[408,49,313,53],[408,50,313,54,"node"],[408,54,313,58],[408,55,313,59,"name"],[408,59,313,63],[408,61,313,65,"node"],[408,65,313,69],[408,66,313,70,"data"],[408,70,313,74],[408,71,313,75],[409,6,314,8],[409,10,314,12,"node"],[409,14,314,16],[409,15,314,17],[409,23,314,25],[409,24,314,26],[409,28,314,30],[409,32,314,34],[409,34,314,36],[410,8,315,12,"instruction"],[410,19,315,23],[410,20,315,24],[410,28,315,32],[410,29,315,33],[410,32,315,36,"node"],[410,36,315,40],[410,37,315,41],[410,45,315,49],[410,46,315,50],[411,8,316,12,"instruction"],[411,19,316,23],[411,20,316,24],[411,32,316,36],[411,33,316,37],[411,36,316,40,"node"],[411,40,316,44],[411,41,316,45],[411,53,316,57],[411,54,316,58],[412,8,317,12,"instruction"],[412,19,317,23],[412,20,317,24],[412,32,317,36],[412,33,317,37],[412,36,317,40,"node"],[412,40,317,44],[412,41,317,45],[412,53,317,57],[412,54,317,58],[413,6,318,8],[414,6,319,8,"result"],[414,12,319,14],[414,15,319,17,"instruction"],[414,26,319,28],[415,4,320,4],[415,5,320,5],[415,11,321,9],[416,6,322,8],[416,12,322,14],[416,16,322,18,"Error"],[416,21,322,23],[416,22,322,24],[416,46,322,48,"node"],[416,50,322,52],[416,51,322,53,"type"],[416,55,322,57],[416,57,322,59],[416,58,322,60],[417,4,323,4],[418,4,324,4,"result"],[418,10,324,10],[418,11,324,11,"startIndex"],[418,21,324,21],[418,24,324,24,"node"],[418,28,324,28],[418,29,324,29,"startIndex"],[418,39,324,39],[419,4,325,4,"result"],[419,10,325,10],[419,11,325,11,"endIndex"],[419,19,325,19],[419,22,325,22,"node"],[419,26,325,26],[419,27,325,27,"endIndex"],[419,35,325,35],[420,4,326,4],[420,8,326,8,"node"],[420,12,326,12],[420,13,326,13,"sourceCodeLocation"],[420,31,326,31],[420,35,326,35],[420,39,326,39],[420,41,326,41],[421,6,327,8,"result"],[421,12,327,14],[421,13,327,15,"sourceCodeLocation"],[421,31,327,33],[421,34,327,36,"node"],[421,38,327,40],[421,39,327,41,"sourceCodeLocation"],[421,57,327,59],[422,4,328,4],[423,4,329,4],[423,11,329,11,"result"],[423,17,329,17],[424,2,330,0],[425,2,331,0],[425,11,331,9,"cloneChildren"],[425,24,331,22,"cloneChildren"],[425,25,331,23,"childs"],[425,31,331,29],[425,33,331,31],[426,4,332,4],[426,8,332,10,"children"],[426,16,332,18],[426,19,332,21,"childs"],[426,25,332,27],[426,26,332,28,"map"],[426,29,332,31],[426,30,332,32],[426,40,332,33,"child"],[426,45,332,38],[427,6,332,38],[427,13,332,43,"cloneNode"],[427,23,332,52],[427,24,332,53,"child"],[427,29,332,58],[427,31,332,60],[427,35,332,64],[427,36,332,65],[428,4,332,65],[428,6,332,66],[429,4,333,4],[429,9,333,9],[429,13,333,13,"i"],[429,14,333,14],[429,17,333,17],[429,18,333,18],[429,20,333,20,"i"],[429,21,333,21],[429,24,333,24,"children"],[429,32,333,32],[429,33,333,33,"length"],[429,39,333,39],[429,41,333,41,"i"],[429,42,333,42],[429,44,333,44],[429,46,333,46],[430,6,334,8,"children"],[430,14,334,16],[430,15,334,17,"i"],[430,16,334,18],[430,17,334,19],[430,18,334,20,"prev"],[430,22,334,24],[430,25,334,27,"children"],[430,33,334,35],[430,34,334,36,"i"],[430,35,334,37],[430,38,334,40],[430,39,334,41],[430,40,334,42],[431,6,335,8,"children"],[431,14,335,16],[431,15,335,17,"i"],[431,16,335,18],[431,19,335,21],[431,20,335,22],[431,21,335,23],[431,22,335,24,"next"],[431,26,335,28],[431,29,335,31,"children"],[431,37,335,39],[431,38,335,40,"i"],[431,39,335,41],[431,40,335,42],[432,4,336,4],[433,4,337,4],[433,11,337,11,"children"],[433,19,337,19],[434,2,338,0],[435,0,338,1],[435,3]],"functionMap":{"names":["<global>","Node","Node#constructor","Node#get__parentNode","Node#set__parentNode","Node#get__previousSibling","Node#set__previousSibling","Node#get__nextSibling","Node#set__nextSibling","Node#cloneNode","DataNode","DataNode#constructor","DataNode#get__nodeValue","DataNode#set__nodeValue","Text","Text#constructor","Text#get__nodeType","Comment","Comment#constructor","Comment#get__nodeType","ProcessingInstruction","ProcessingInstruction#constructor","ProcessingInstruction#get__nodeType","NodeWithChildren","NodeWithChildren#constructor","NodeWithChildren#get__firstChild","NodeWithChildren#get__lastChild","NodeWithChildren#get__childNodes","NodeWithChildren#set__childNodes","CDATA","CDATA#constructor","CDATA#get__nodeType","Document","Document#constructor","Document#get__nodeType","Element","Element#constructor","Element#get__nodeType","Element#get__tagName","Element#set__tagName","Element#get__attributes","Object.keys.map$argument_0","isTag","isCDATA","isText","isComment","isDirective","isDocument","hasChildren","cloneNode","children.forEach$argument_0","cloneChildren","childs.map$argument_0"],"mappings":"AAA;OCK;ICC;KDW;IEM;KFE;IGC;KHE;IIK;KJE;IKC;KLE;IMK;KNE;IOC;KPE;IQO;KRE;CDC;OUI;ICI;KDG;IEK;KFE;IGC;KHE;CVC;OcI;ICC;KDG;IEC;KFE;CdC;OiBI;ICC;KDG;IEC;KFE;CjBC;OoBI;ICC;KDI;IEC;KFE;CpBC;OuBI;ICI;KDG;IEG;KFG;IGE;KHI;IIK;KJE;IKC;KLE;CvBC;O6BC;ICC;KDG;IEC;KFE;C7BC;OgCI;ICC;KDG;IEC;KFE;ChCC;OmCI;ICM;KDS;IEC;KFE;IGM;KHE;IIC;KJE;IKC;6CCC;SDQ;KLC;CnCC;O0CK;C1CE;O2CK;C3CE;O4CK;C5CE;O6CK;C7CE;O8CK;C9CE;O+CK;C/CE;OgDK;ChDE;OiDO;yBCW,iCD;yBCe,iCD;yBCM,iCD;CjDwB;AmDC;gCCC,iCD;CnDM"}},"type":"js/module"}]}