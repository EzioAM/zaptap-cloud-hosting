{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"../EventLogger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"Hq0v9QhXB1mWTev9pwNNdCMJcv4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.errorRecoveryManager = exports.ErrorRecoveryManager = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _EventLogger = require(_dependencyMap[4], \"../EventLogger\");\n  var ErrorRecoveryManager = exports.ErrorRecoveryManager = /*#__PURE__*/function () {\n    function ErrorRecoveryManager(config) {\n      (0, _classCallCheck2.default)(this, ErrorRecoveryManager);\n      this.retryConfig = {\n        maxAttempts: 3,\n        baseDelay: 1000,\n        maxDelay: 10000,\n        backoffMultiplier: 2,\n        jitter: true\n      };\n      this.recoveryStrategies = [];\n      if (config) {\n        this.retryConfig = Object.assign({}, this.retryConfig, config);\n      }\n      this.setupDefaultStrategies();\n    }\n\n    /**\n     * Execute an operation with automatic retry and recovery\n     */\n    return (0, _createClass2.default)(ErrorRecoveryManager, [{\n      key: \"executeWithRecovery\",\n      value: (function () {\n        var _executeWithRecovery = (0, _asyncToGenerator2.default)(function* (operation, context) {\n          var operationName = context.operationName,\n            _context$category = context.category,\n            category = _context$category === void 0 ? 'Operation' : _context$category,\n            maxAttempts = context.maxAttempts,\n            _context$enableRecove = context.enableRecovery,\n            enableRecovery = _context$enableRecove === void 0 ? true : _context$enableRecove;\n          var attempts = maxAttempts || this.retryConfig.maxAttempts;\n          for (var attempt = 1; attempt <= attempts; attempt++) {\n            try {\n              var result = yield operation();\n              if (attempt > 1) {\n                _EventLogger.EventLogger.info('ErrorRecovery', `Operation succeeded after retry`, {\n                  operationName: operationName,\n                  attempt: attempt,\n                  category: category\n                });\n              }\n              return result;\n            } catch (error) {\n              var isLastAttempt = attempt === attempts;\n              _EventLogger.EventLogger.warn('ErrorRecovery', `Operation failed on attempt ${attempt}`, {\n                operationName: operationName,\n                attempt: attempt,\n                maxAttempts: attempts,\n                error: error.message\n              });\n              if (isLastAttempt) {\n                // Try recovery strategies before giving up\n                if (enableRecovery) {\n                  var recovered = yield this.attemptRecovery(error, {\n                    operationName: operationName,\n                    category: category,\n                    attempt: attempt\n                  });\n                  if (recovered) {\n                    // Retry one more time after successful recovery\n                    try {\n                      var _result = yield operation();\n                      _EventLogger.EventLogger.info('ErrorRecovery', 'Operation succeeded after recovery', {\n                        operationName: operationName,\n                        category: category\n                      });\n                      return _result;\n                    } catch (retryError) {\n                      _EventLogger.EventLogger.error('ErrorRecovery', 'Operation failed even after recovery', retryError, {\n                        operationName: operationName,\n                        category: category\n                      });\n                    }\n                  }\n                }\n\n                // Final failure\n                _EventLogger.EventLogger.error('ErrorRecovery', `Operation failed after all attempts`, error, {\n                  operationName: operationName,\n                  category: category,\n                  totalAttempts: attempts\n                });\n                throw error;\n              }\n\n              // Calculate delay for next attempt\n              var delay = this.calculateDelay(attempt);\n              _EventLogger.EventLogger.info('ErrorRecovery', `Retrying operation in ${delay}ms`, {\n                operationName: operationName,\n                attempt: attempt,\n                delay: delay\n              });\n              yield this.sleep(delay);\n            }\n          }\n          throw new Error(`Unexpected end of retry loop for ${operationName}`);\n        });\n        function executeWithRecovery(_x, _x2) {\n          return _executeWithRecovery.apply(this, arguments);\n        }\n        return executeWithRecovery;\n      }()\n      /**\n       * Register a custom recovery strategy\n       */\n      )\n    }, {\n      key: \"addRecoveryStrategy\",\n      value: function addRecoveryStrategy(strategy) {\n        this.recoveryStrategies.push(strategy);\n        this.recoveryStrategies.sort(function (a, b) {\n          return b.priority - a.priority;\n        });\n        _EventLogger.EventLogger.info('ErrorRecovery', 'Recovery strategy registered', {\n          strategyName: strategy.name,\n          priority: strategy.priority\n        });\n      }\n\n      /**\n       * Remove a recovery strategy\n       */\n    }, {\n      key: \"removeRecoveryStrategy\",\n      value: function removeRecoveryStrategy(strategyName) {\n        var index = this.recoveryStrategies.findIndex(function (s) {\n          return s.name === strategyName;\n        });\n        if (index >= 0) {\n          this.recoveryStrategies.splice(index, 1);\n          _EventLogger.EventLogger.info('ErrorRecovery', 'Recovery strategy removed', {\n            strategyName: strategyName\n          });\n        }\n      }\n\n      /**\n       * Update retry configuration\n       */\n    }, {\n      key: \"updateRetryConfig\",\n      value: function updateRetryConfig(config) {\n        this.retryConfig = Object.assign({}, this.retryConfig, config);\n        _EventLogger.EventLogger.info('ErrorRecovery', 'Retry configuration updated', {\n          config: this.retryConfig\n        });\n      }\n\n      /**\n       * Attempt to recover from an error using registered strategies\n       */\n    }, {\n      key: \"attemptRecovery\",\n      value: (function () {\n        var _attemptRecovery = (0, _asyncToGenerator2.default)(function* (error, context) {\n          _EventLogger.EventLogger.info('ErrorRecovery', 'Attempting error recovery', {\n            error: error.message,\n            strategies: this.recoveryStrategies.length\n          });\n          for (var strategy of this.recoveryStrategies) {\n            if (strategy.canRecover(error)) {\n              try {\n                _EventLogger.EventLogger.info('ErrorRecovery', `Trying recovery strategy: ${strategy.name}`, {\n                  error: error.message,\n                  strategy: strategy.name\n                });\n                var recovered = yield strategy.recover(error, context);\n                if (recovered) {\n                  _EventLogger.EventLogger.info('ErrorRecovery', `Recovery successful with strategy: ${strategy.name}`, {\n                    error: error.message,\n                    strategy: strategy.name\n                  });\n                  return true;\n                } else {\n                  _EventLogger.EventLogger.warn('ErrorRecovery', `Recovery failed with strategy: ${strategy.name}`, {\n                    error: error.message,\n                    strategy: strategy.name\n                  });\n                }\n              } catch (recoveryError) {\n                _EventLogger.EventLogger.error('ErrorRecovery', `Recovery strategy threw error: ${strategy.name}`, recoveryError, {\n                  originalError: error.message,\n                  strategy: strategy.name\n                });\n              }\n            }\n          }\n          _EventLogger.EventLogger.warn('ErrorRecovery', 'All recovery strategies failed', {\n            error: error.message,\n            strategiesAttempted: this.recoveryStrategies.length\n          });\n          return false;\n        });\n        function attemptRecovery(_x3, _x4) {\n          return _attemptRecovery.apply(this, arguments);\n        }\n        return attemptRecovery;\n      }()\n      /**\n       * Calculate delay with exponential backoff and optional jitter\n       */\n      )\n    }, {\n      key: \"calculateDelay\",\n      value: function calculateDelay(attempt) {\n        var exponentialDelay = Math.min(this.retryConfig.baseDelay * Math.pow(this.retryConfig.backoffMultiplier, attempt - 1), this.retryConfig.maxDelay);\n        if (this.retryConfig.jitter) {\n          // Add random jitter (±25% of calculated delay)\n          var jitterRange = exponentialDelay * 0.25;\n          var jitter = (Math.random() - 0.5) * 2 * jitterRange;\n          return Math.max(100, Math.round(exponentialDelay + jitter));\n        }\n        return exponentialDelay;\n      }\n\n      /**\n       * Sleep utility function\n       */\n    }, {\n      key: \"sleep\",\n      value: function sleep(ms) {\n        return new Promise(function (resolve) {\n          return setTimeout(resolve, ms);\n        });\n      }\n\n      /**\n       * Setup default recovery strategies\n       */\n    }, {\n      key: \"setupDefaultStrategies\",\n      value: function setupDefaultStrategies() {\n        var _this = this;\n        // Network error recovery\n        this.addRecoveryStrategy({\n          name: 'NetworkErrorRecovery',\n          canRecover: function canRecover(error) {\n            var networkPatterns = ['network request failed', 'fetch', 'network error', 'connection', 'timeout', 'abort'];\n            return networkPatterns.some(function (pattern) {\n              return error.message.toLowerCase().includes(pattern.toLowerCase());\n            });\n          },\n          recover: function () {\n            var _recover = (0, _asyncToGenerator2.default)(function* (error) {\n              var _navigator$onLine, _navigator;\n              // Check if network is available\n              var isOnline = (_navigator$onLine = (_navigator = navigator) == null ? void 0 : _navigator.onLine) != null ? _navigator$onLine : true;\n              if (!isOnline) {\n                _EventLogger.EventLogger.warn('ErrorRecovery', 'Device is offline, cannot recover network error');\n                return false;\n              }\n\n              // Simple network connectivity test\n              try {\n                var response = yield fetch('/ping', {\n                  method: 'HEAD',\n                  cache: 'no-cache'\n                });\n                return response.ok;\n              } catch (_unused) {\n                return false;\n              }\n            });\n            function recover(_x5) {\n              return _recover.apply(this, arguments);\n            }\n            return recover;\n          }(),\n          priority: 10\n        });\n\n        // Cache clear recovery for storage errors\n        this.addRecoveryStrategy({\n          name: 'CacheClearRecovery',\n          canRecover: function canRecover(error) {\n            var cachePatterns = ['quotaexceeded', 'storage', 'cache', 'indexeddb', 'localstorage'];\n            return cachePatterns.some(function (pattern) {\n              return error.message.toLowerCase().includes(pattern.toLowerCase());\n            });\n          },\n          recover: function () {\n            var _recover2 = (0, _asyncToGenerator2.default)(function* (error) {\n              try {\n                // Clear various cache types\n                if (typeof caches !== 'undefined') {\n                  var cacheNames = yield caches.keys();\n                  yield Promise.all(cacheNames.map(function (name) {\n                    return caches.delete(name);\n                  }));\n                }\n\n                // Clear localStorage (if quota exceeded)\n                try {\n                  localStorage.clear();\n                } catch (_unused2) {}\n                _EventLogger.EventLogger.info('ErrorRecovery', 'Caches cleared for recovery');\n                return true;\n              } catch (_unused3) {\n                return false;\n              }\n            });\n            function recover(_x6) {\n              return _recover2.apply(this, arguments);\n            }\n            return recover;\n          }(),\n          priority: 5\n        });\n\n        // Memory pressure recovery\n        this.addRecoveryStrategy({\n          name: 'MemoryRecovery',\n          canRecover: function canRecover(error) {\n            var memoryPatterns = ['out of memory', 'memory', 'heap', 'maximum call stack'];\n            return memoryPatterns.some(function (pattern) {\n              return error.message.toLowerCase().includes(pattern.toLowerCase());\n            });\n          },\n          recover: function () {\n            var _recover3 = (0, _asyncToGenerator2.default)(function* (error) {\n              try {\n                // Force garbage collection if available\n                if (window.gc) {\n                  window.gc();\n                }\n\n                // Clear any large data structures we might be holding\n                // This is app-specific and should be customized\n                _EventLogger.EventLogger.info('ErrorRecovery', 'Memory recovery attempted');\n\n                // Give it a moment to free up memory\n                yield _this.sleep(100);\n                return true;\n              } catch (_unused4) {\n                return false;\n              }\n            });\n            function recover(_x7) {\n              return _recover3.apply(this, arguments);\n            }\n            return recover;\n          }(),\n          priority: 3\n        });\n      }\n    }]);\n  }(); // Singleton instance\n  var errorRecoveryManager = exports.errorRecoveryManager = new ErrorRecoveryManager();\n});","lineCount":359,"map":[[10,2,1,0],[10,6,1,0,"_EventLogger"],[10,18,1,0],[10,21,1,0,"require"],[10,28,1,0],[10,29,1,0,"_dependencyMap"],[10,43,1,0],[11,2,1,45],[11,6,18,13,"ErrorRecoveryManager"],[11,26,18,33],[11,29,18,33,"exports"],[11,36,18,33],[11,37,18,33,"ErrorRecoveryManager"],[11,57,18,33],[12,4,29,2],[12,13,29,2,"ErrorRecoveryManager"],[12,34,29,14,"config"],[12,40,29,43],[12,42,29,45],[13,6,29,45],[13,10,29,45,"_classCallCheck2"],[13,26,29,45],[13,27,29,45,"default"],[13,34,29,45],[13,42,29,45,"ErrorRecoveryManager"],[13,62,29,45],[14,6,29,45],[14,11,19,10,"retryConfig"],[14,22,19,21],[14,25,19,37],[15,8,20,4,"maxAttempts"],[15,19,20,15],[15,21,20,17],[15,22,20,18],[16,8,21,4,"baseDelay"],[16,17,21,13],[16,19,21,15],[16,23,21,19],[17,8,22,4,"maxDelay"],[17,16,22,12],[17,18,22,14],[17,23,22,19],[18,8,23,4,"backoffMultiplier"],[18,25,23,21],[18,27,23,23],[18,28,23,24],[19,8,24,4,"jitter"],[19,14,24,10],[19,16,24,12],[20,6,25,2],[20,7,25,3],[21,6,25,3],[21,11,27,10,"recoveryStrategies"],[21,29,27,28],[21,32,27,51],[21,34,27,53],[22,6,30,4],[22,10,30,8,"config"],[22,16,30,14],[22,18,30,16],[23,8,31,6],[23,12,31,10],[23,13,31,11,"retryConfig"],[23,24,31,22],[23,27,31,22,"Object"],[23,33,31,22],[23,34,31,22,"assign"],[23,40,31,22],[23,45,31,30],[23,49,31,34],[23,50,31,35,"retryConfig"],[23,61,31,46],[23,63,31,51,"config"],[23,69,31,57],[23,70,31,59],[24,6,32,4],[25,6,34,4],[25,10,34,8],[25,11,34,9,"setupDefaultStrategies"],[25,33,34,31],[25,34,34,32],[25,35,34,33],[26,4,35,2],[28,4,37,2],[29,0,38,0],[30,0,39,0],[31,4,37,2],[31,15,37,2,"_createClass2"],[31,28,37,2],[31,29,37,2,"default"],[31,36,37,2],[31,38,37,2,"ErrorRecoveryManager"],[31,58,37,2],[32,6,37,2,"key"],[32,9,37,2],[33,6,37,2,"value"],[33,11,37,2],[34,8,37,2],[34,12,37,2,"_executeWithRecovery"],[34,32,37,2],[34,39,37,2,"_asyncToGenerator2"],[34,57,37,2],[34,58,37,2,"default"],[34,65,37,2],[34,67,40,2],[34,78,41,4,"operation"],[34,87,41,31],[34,89,42,4,"context"],[34,96,47,5],[34,98,48,16],[35,10,49,4],[35,14,49,12,"operationName"],[35,27,49,25],[35,30,49,90,"context"],[35,37,49,97],[35,38,49,12,"operationName"],[35,51,49,25],[36,12,49,25,"_context$category"],[36,29,49,25],[36,32,49,90,"context"],[36,39,49,97],[36,40,49,27,"category"],[36,48,49,35],[37,12,49,27,"category"],[37,20,49,35],[37,23,49,35,"_context$category"],[37,40,49,35],[37,54,49,38],[37,65,49,49],[37,68,49,49,"_context$category"],[37,85,49,49],[38,12,49,51,"maxAttempts"],[38,23,49,62],[38,26,49,90,"context"],[38,33,49,97],[38,34,49,51,"maxAttempts"],[38,45,49,62],[39,12,49,62,"_context$enableRecove"],[39,33,49,62],[39,36,49,90,"context"],[39,43,49,97],[39,44,49,64,"enableRecovery"],[39,58,49,78],[40,12,49,64,"enableRecovery"],[40,26,49,78],[40,29,49,78,"_context$enableRecove"],[40,50,49,78],[40,64,49,81],[40,68,49,85],[40,71,49,85,"_context$enableRecove"],[40,92,49,85],[41,10,50,4],[41,14,50,10,"attempts"],[41,22,50,18],[41,25,50,21,"maxAttempts"],[41,36,50,32],[41,40,50,36],[41,44,50,40],[41,45,50,41,"retryConfig"],[41,56,50,52],[41,57,50,53,"maxAttempts"],[41,68,50,64],[42,10,52,4],[42,15,52,9],[42,19,52,13,"attempt"],[42,26,52,20],[42,29,52,23],[42,30,52,24],[42,32,52,26,"attempt"],[42,39,52,33],[42,43,52,37,"attempts"],[42,51,52,45],[42,53,52,47,"attempt"],[42,60,52,54],[42,62,52,56],[42,64,52,58],[43,12,53,6],[43,16,53,10],[44,14,54,8],[44,18,54,14,"result"],[44,24,54,20],[44,33,54,29,"operation"],[44,42,54,38],[44,43,54,39],[44,44,54,40],[45,14,56,8],[45,18,56,12,"attempt"],[45,25,56,19],[45,28,56,22],[45,29,56,23],[45,31,56,25],[46,16,57,10,"EventLogger"],[46,40,57,21],[46,41,57,22,"info"],[46,45,57,26],[46,46,58,12],[46,61,58,27],[46,63,59,12],[46,96,59,45],[46,98,60,12],[47,18,60,14,"operationName"],[47,31,60,27],[47,33,60,14,"operationName"],[47,46,60,27],[48,18,60,29,"attempt"],[48,25,60,36],[48,27,60,29,"attempt"],[48,34,60,36],[49,18,60,38,"category"],[49,26,60,46],[49,28,60,38,"category"],[50,16,60,47],[50,17,61,10],[50,18,61,11],[51,14,62,8],[52,14,64,8],[52,21,64,15,"result"],[52,27,64,21],[53,12,65,6],[53,13,65,7],[53,14,65,8],[53,21,65,15,"error"],[53,26,65,20],[53,28,65,22],[54,14,66,8],[54,18,66,14,"isLastAttempt"],[54,31,66,27],[54,34,66,30,"attempt"],[54,41,66,37],[54,46,66,42,"attempts"],[54,54,66,50],[55,14,68,8,"EventLogger"],[55,38,68,19],[55,39,68,20,"warn"],[55,43,68,24],[55,44,69,10],[55,59,69,25],[55,61,70,10],[55,92,70,41,"attempt"],[55,99,70,48],[55,101,70,50],[55,103,71,10],[56,16,71,12,"operationName"],[56,29,71,25],[56,31,71,12,"operationName"],[56,44,71,25],[57,16,71,27,"attempt"],[57,23,71,34],[57,25,71,27,"attempt"],[57,32,71,34],[58,16,71,36,"maxAttempts"],[58,27,71,47],[58,29,71,49,"attempts"],[58,37,71,57],[59,16,71,59,"error"],[59,21,71,64],[59,23,71,66,"error"],[59,28,71,71],[59,29,71,72,"message"],[60,14,71,80],[60,15,72,8],[60,16,72,9],[61,14,74,8],[61,18,74,12,"isLastAttempt"],[61,31,74,25],[61,33,74,27],[62,16,75,10],[63,16,76,10],[63,20,76,14,"enableRecovery"],[63,34,76,28],[63,36,76,30],[64,18,77,12],[64,22,77,18,"recovered"],[64,31,77,27],[64,40,77,36],[64,44,77,40],[64,45,77,41,"attemptRecovery"],[64,60,77,56],[64,61,77,57,"error"],[64,66,77,62],[64,68,77,73],[65,20,78,14,"operationName"],[65,33,78,27],[65,35,78,14,"operationName"],[65,48,78,27],[66,20,79,14,"category"],[66,28,79,22],[66,30,79,14,"category"],[66,38,79,22],[67,20,80,14,"attempt"],[67,27,80,21],[67,29,80,14,"attempt"],[68,18,81,12],[68,19,81,13],[68,20,81,14],[69,18,83,12],[69,22,83,16,"recovered"],[69,31,83,25],[69,33,83,27],[70,20,84,14],[71,20,85,14],[71,24,85,18],[72,22,86,16],[72,26,86,22,"result"],[72,33,86,28],[72,42,86,37,"operation"],[72,51,86,46],[72,52,86,47],[72,53,86,48],[73,22,87,16,"EventLogger"],[73,46,87,27],[73,47,87,28,"info"],[73,51,87,32],[73,52,88,18],[73,67,88,33],[73,69,89,18],[73,105,89,54],[73,107,90,18],[74,24,90,20,"operationName"],[74,37,90,33],[74,39,90,20,"operationName"],[74,52,90,33],[75,24,90,35,"category"],[75,32,90,43],[75,34,90,35,"category"],[76,22,90,44],[76,23,91,16],[76,24,91,17],[77,22,92,16],[77,29,92,23,"result"],[77,36,92,29],[78,20,93,14],[78,21,93,15],[78,22,93,16],[78,29,93,23,"retryError"],[78,39,93,33],[78,41,93,35],[79,22,94,16,"EventLogger"],[79,46,94,27],[79,47,94,28,"error"],[79,52,94,33],[79,53,95,18],[79,68,95,33],[79,70,96,18],[79,108,96,56],[79,110,97,18,"retryError"],[79,120,97,28],[79,122,98,18],[80,24,98,20,"operationName"],[80,37,98,33],[80,39,98,20,"operationName"],[80,52,98,33],[81,24,98,35,"category"],[81,32,98,43],[81,34,98,35,"category"],[82,22,98,44],[82,23,99,16],[82,24,99,17],[83,20,100,14],[84,18,101,12],[85,16,102,10],[87,16,104,10],[88,16,105,10,"EventLogger"],[88,40,105,21],[88,41,105,22,"error"],[88,46,105,27],[88,47,106,12],[88,62,106,27],[88,64,107,12],[88,101,107,49],[88,103,108,12,"error"],[88,108,108,17],[88,110,109,12],[89,18,109,14,"operationName"],[89,31,109,27],[89,33,109,14,"operationName"],[89,46,109,27],[90,18,109,29,"category"],[90,26,109,37],[90,28,109,29,"category"],[90,36,109,37],[91,18,109,39,"totalAttempts"],[91,31,109,52],[91,33,109,54,"attempts"],[92,16,109,63],[92,17,110,10],[92,18,110,11],[93,16,112,10],[93,22,112,16,"error"],[93,27,112,21],[94,14,113,8],[96,14,115,8],[97,14,116,8],[97,18,116,14,"delay"],[97,23,116,19],[97,26,116,22],[97,30,116,26],[97,31,116,27,"calculateDelay"],[97,45,116,41],[97,46,116,42,"attempt"],[97,53,116,49],[97,54,116,50],[98,14,117,8,"EventLogger"],[98,38,117,19],[98,39,117,20,"info"],[98,43,117,24],[98,44,118,10],[98,59,118,25],[98,61,119,10],[98,86,119,35,"delay"],[98,91,119,40],[98,95,119,44],[98,97,120,10],[99,16,120,12,"operationName"],[99,29,120,25],[99,31,120,12,"operationName"],[99,44,120,25],[100,16,120,27,"attempt"],[100,23,120,34],[100,25,120,27,"attempt"],[100,32,120,34],[101,16,120,36,"delay"],[101,21,120,41],[101,23,120,36,"delay"],[102,14,120,42],[102,15,121,8],[102,16,121,9],[103,14,123,8],[103,20,123,14],[103,24,123,18],[103,25,123,19,"sleep"],[103,30,123,24],[103,31,123,25,"delay"],[103,36,123,30],[103,37,123,31],[104,12,124,6],[105,10,125,4],[106,10,127,4],[106,16,127,10],[106,20,127,14,"Error"],[106,25,127,19],[106,26,127,20],[106,62,127,56,"operationName"],[106,75,127,69],[106,77,127,71],[106,78,127,72],[107,8,128,2],[107,9,128,3],[108,8,128,3],[108,17,40,8,"executeWithRecovery"],[108,36,40,27,"executeWithRecovery"],[108,37,40,27,"_x"],[108,39,40,27],[108,41,40,27,"_x2"],[108,44,40,27],[109,10,40,27],[109,17,40,27,"_executeWithRecovery"],[109,37,40,27],[109,38,40,27,"apply"],[109,43,40,27],[109,50,40,27,"arguments"],[109,59,40,27],[110,8,40,27],[111,8,40,27],[111,15,40,8,"executeWithRecovery"],[111,34,40,27],[112,6,40,27],[113,6,130,2],[114,0,131,0],[115,0,132,0],[116,6,130,2],[117,4,130,2],[118,6,130,2,"key"],[118,9,130,2],[119,6,130,2,"value"],[119,11,130,2],[119,13,133,2],[119,22,133,2,"addRecoveryStrategy"],[119,41,133,21,"addRecoveryStrategy"],[119,42,133,22,"strategy"],[119,50,133,48],[119,52,133,56],[120,8,134,4],[120,12,134,8],[120,13,134,9,"recoveryStrategies"],[120,31,134,27],[120,32,134,28,"push"],[120,36,134,32],[120,37,134,33,"strategy"],[120,45,134,41],[120,46,134,42],[121,8,135,4],[121,12,135,8],[121,13,135,9,"recoveryStrategies"],[121,31,135,27],[121,32,135,28,"sort"],[121,36,135,32],[121,37,135,33],[121,47,135,34,"a"],[121,48,135,35],[121,50,135,37,"b"],[121,51,135,38],[122,10,135,38],[122,17,135,43,"b"],[122,18,135,44],[122,19,135,45,"priority"],[122,27,135,53],[122,30,135,56,"a"],[122,31,135,57],[122,32,135,58,"priority"],[122,40,135,66],[123,8,135,66],[123,10,135,67],[124,8,137,4,"EventLogger"],[124,32,137,15],[124,33,137,16,"info"],[124,37,137,20],[124,38,138,6],[124,53,138,21],[124,55,139,6],[124,85,139,36],[124,87,140,6],[125,10,140,8,"strategyName"],[125,22,140,20],[125,24,140,22,"strategy"],[125,32,140,30],[125,33,140,31,"name"],[125,37,140,35],[126,10,140,37,"priority"],[126,18,140,45],[126,20,140,47,"strategy"],[126,28,140,55],[126,29,140,56,"priority"],[127,8,140,65],[127,9,141,4],[127,10,141,5],[128,6,142,2],[130,6,144,2],[131,0,145,0],[132,0,146,0],[133,4,144,2],[134,6,144,2,"key"],[134,9,144,2],[135,6,144,2,"value"],[135,11,144,2],[135,13,147,2],[135,22,147,2,"removeRecoveryStrategy"],[135,44,147,24,"removeRecoveryStrategy"],[135,45,147,25,"strategyName"],[135,57,147,45],[135,59,147,53],[136,8,148,4],[136,12,148,10,"index"],[136,17,148,15],[136,20,148,18],[136,24,148,22],[136,25,148,23,"recoveryStrategies"],[136,43,148,41],[136,44,148,42,"findIndex"],[136,53,148,51],[136,54,148,52],[136,64,148,52,"s"],[136,65,148,53],[137,10,148,53],[137,17,148,57,"s"],[137,18,148,58],[137,19,148,59,"name"],[137,23,148,63],[137,28,148,68,"strategyName"],[137,40,148,80],[138,8,148,80],[138,10,148,81],[139,8,149,4],[139,12,149,8,"index"],[139,17,149,13],[139,21,149,17],[139,22,149,18],[139,24,149,20],[140,10,150,6],[140,14,150,10],[140,15,150,11,"recoveryStrategies"],[140,33,150,29],[140,34,150,30,"splice"],[140,40,150,36],[140,41,150,37,"index"],[140,46,150,42],[140,48,150,44],[140,49,150,45],[140,50,150,46],[141,10,151,6,"EventLogger"],[141,34,151,17],[141,35,151,18,"info"],[141,39,151,22],[141,40,152,8],[141,55,152,23],[141,57,153,8],[141,84,153,35],[141,86,154,8],[142,12,154,10,"strategyName"],[142,24,154,22],[142,26,154,10,"strategyName"],[143,10,154,23],[143,11,155,6],[143,12,155,7],[144,8,156,4],[145,6,157,2],[147,6,159,2],[148,0,160,0],[149,0,161,0],[150,4,159,2],[151,6,159,2,"key"],[151,9,159,2],[152,6,159,2,"value"],[152,11,159,2],[152,13,162,2],[152,22,162,2,"updateRetryConfig"],[152,39,162,19,"updateRetryConfig"],[152,40,162,20,"config"],[152,46,162,48],[152,48,162,56],[153,8,163,4],[153,12,163,8],[153,13,163,9,"retryConfig"],[153,24,163,20],[153,27,163,20,"Object"],[153,33,163,20],[153,34,163,20,"assign"],[153,40,163,20],[153,45,163,28],[153,49,163,32],[153,50,163,33,"retryConfig"],[153,61,163,44],[153,63,163,49,"config"],[153,69,163,55],[153,70,163,57],[154,8,164,4,"EventLogger"],[154,32,164,15],[154,33,164,16,"info"],[154,37,164,20],[154,38,165,6],[154,53,165,21],[154,55,166,6],[154,84,166,35],[154,86,167,6],[155,10,167,8,"config"],[155,16,167,14],[155,18,167,16],[155,22,167,20],[155,23,167,21,"retryConfig"],[156,8,167,33],[156,9,168,4],[156,10,168,5],[157,6,169,2],[159,6,171,2],[160,0,172,0],[161,0,173,0],[162,4,171,2],[163,6,171,2,"key"],[163,9,171,2],[164,6,171,2,"value"],[164,11,171,2],[165,8,171,2],[165,12,171,2,"_attemptRecovery"],[165,28,171,2],[165,35,171,2,"_asyncToGenerator2"],[165,53,171,2],[165,54,171,2,"default"],[165,61,171,2],[165,63,174,2],[165,74,174,32,"error"],[165,79,174,44],[165,81,174,46,"context"],[165,88,174,58],[165,90,174,78],[166,10,175,4,"EventLogger"],[166,34,175,15],[166,35,175,16,"info"],[166,39,175,20],[166,40,176,6],[166,55,176,21],[166,57,177,6],[166,84,177,33],[166,86,178,6],[167,12,178,8,"error"],[167,17,178,13],[167,19,178,15,"error"],[167,24,178,20],[167,25,178,21,"message"],[167,32,178,28],[168,12,178,30,"strategies"],[168,22,178,40],[168,24,178,42],[168,28,178,46],[168,29,178,47,"recoveryStrategies"],[168,47,178,65],[168,48,178,66,"length"],[169,10,178,73],[169,11,179,4],[169,12,179,5],[170,10,181,4],[170,15,181,9],[170,19,181,15,"strategy"],[170,27,181,23],[170,31,181,27],[170,35,181,31],[170,36,181,32,"recoveryStrategies"],[170,54,181,50],[170,56,181,52],[171,12,182,6],[171,16,182,10,"strategy"],[171,24,182,18],[171,25,182,19,"canRecover"],[171,35,182,29],[171,36,182,30,"error"],[171,41,182,35],[171,42,182,36],[171,44,182,38],[172,14,183,8],[172,18,183,12],[173,16,184,10,"EventLogger"],[173,40,184,21],[173,41,184,22,"info"],[173,45,184,26],[173,46,185,12],[173,61,185,27],[173,63,186,12],[173,92,186,41,"strategy"],[173,100,186,49],[173,101,186,50,"name"],[173,105,186,54],[173,107,186,56],[173,109,187,12],[174,18,187,14,"error"],[174,23,187,19],[174,25,187,21,"error"],[174,30,187,26],[174,31,187,27,"message"],[174,38,187,34],[175,18,187,36,"strategy"],[175,26,187,44],[175,28,187,46,"strategy"],[175,36,187,54],[175,37,187,55,"name"],[176,16,187,60],[176,17,188,10],[176,18,188,11],[177,16,190,10],[177,20,190,16,"recovered"],[177,29,190,25],[177,38,190,34,"strategy"],[177,46,190,42],[177,47,190,43,"recover"],[177,54,190,50],[177,55,190,51,"error"],[177,60,190,56],[177,62,190,58,"context"],[177,69,190,65],[177,70,190,66],[178,16,192,10],[178,20,192,14,"recovered"],[178,29,192,23],[178,31,192,25],[179,18,193,12,"EventLogger"],[179,42,193,23],[179,43,193,24,"info"],[179,47,193,28],[179,48,194,14],[179,63,194,29],[179,65,195,14],[179,103,195,52,"strategy"],[179,111,195,60],[179,112,195,61,"name"],[179,116,195,65],[179,118,195,67],[179,120,196,14],[180,20,196,16,"error"],[180,25,196,21],[180,27,196,23,"error"],[180,32,196,28],[180,33,196,29,"message"],[180,40,196,36],[181,20,196,38,"strategy"],[181,28,196,46],[181,30,196,48,"strategy"],[181,38,196,56],[181,39,196,57,"name"],[182,18,196,62],[182,19,197,12],[182,20,197,13],[183,18,198,12],[183,25,198,19],[183,29,198,23],[184,16,199,10],[184,17,199,11],[184,23,199,17],[185,18,200,12,"EventLogger"],[185,42,200,23],[185,43,200,24,"warn"],[185,47,200,28],[185,48,201,14],[185,63,201,29],[185,65,202,14],[185,99,202,48,"strategy"],[185,107,202,56],[185,108,202,57,"name"],[185,112,202,61],[185,114,202,63],[185,116,203,14],[186,20,203,16,"error"],[186,25,203,21],[186,27,203,23,"error"],[186,32,203,28],[186,33,203,29,"message"],[186,40,203,36],[187,20,203,38,"strategy"],[187,28,203,46],[187,30,203,48,"strategy"],[187,38,203,56],[187,39,203,57,"name"],[188,18,203,62],[188,19,204,12],[188,20,204,13],[189,16,205,10],[190,14,206,8],[190,15,206,9],[190,16,206,10],[190,23,206,17,"recoveryError"],[190,36,206,30],[190,38,206,32],[191,16,207,10,"EventLogger"],[191,40,207,21],[191,41,207,22,"error"],[191,46,207,27],[191,47,208,12],[191,62,208,27],[191,64,209,12],[191,98,209,46,"strategy"],[191,106,209,54],[191,107,209,55,"name"],[191,111,209,59],[191,113,209,61],[191,115,210,12,"recoveryError"],[191,128,210,25],[191,130,211,12],[192,18,211,14,"originalError"],[192,31,211,27],[192,33,211,29,"error"],[192,38,211,34],[192,39,211,35,"message"],[192,46,211,42],[193,18,211,44,"strategy"],[193,26,211,52],[193,28,211,54,"strategy"],[193,36,211,62],[193,37,211,63,"name"],[194,16,211,68],[194,17,212,10],[194,18,212,11],[195,14,213,8],[196,12,214,6],[197,10,215,4],[198,10,217,4,"EventLogger"],[198,34,217,15],[198,35,217,16,"warn"],[198,39,217,20],[198,40,218,6],[198,55,218,21],[198,57,219,6],[198,89,219,38],[198,91,220,6],[199,12,220,8,"error"],[199,17,220,13],[199,19,220,15,"error"],[199,24,220,20],[199,25,220,21,"message"],[199,32,220,28],[200,12,220,30,"strategiesAttempted"],[200,31,220,49],[200,33,220,51],[200,37,220,55],[200,38,220,56,"recoveryStrategies"],[200,56,220,74],[200,57,220,75,"length"],[201,10,220,82],[201,11,221,4],[201,12,221,5],[202,10,223,4],[202,17,223,11],[202,22,223,16],[203,8,224,2],[203,9,224,3],[204,8,224,3],[204,17,174,16,"attemptRecovery"],[204,32,174,31,"attemptRecovery"],[204,33,174,31,"_x3"],[204,36,174,31],[204,38,174,31,"_x4"],[204,41,174,31],[205,10,174,31],[205,17,174,31,"_attemptRecovery"],[205,33,174,31],[205,34,174,31,"apply"],[205,39,174,31],[205,46,174,31,"arguments"],[205,55,174,31],[206,8,174,31],[207,8,174,31],[207,15,174,16,"attemptRecovery"],[207,30,174,31],[208,6,174,31],[209,6,226,2],[210,0,227,0],[211,0,228,0],[212,6,226,2],[213,4,226,2],[214,6,226,2,"key"],[214,9,226,2],[215,6,226,2,"value"],[215,11,226,2],[215,13,229,2],[215,22,229,10,"calculateDelay"],[215,36,229,24,"calculateDelay"],[215,37,229,25,"attempt"],[215,44,229,40],[215,46,229,50],[216,8,230,4],[216,12,230,10,"exponentialDelay"],[216,28,230,26],[216,31,230,29,"Math"],[216,35,230,33],[216,36,230,34,"min"],[216,39,230,37],[216,40,231,6],[216,44,231,10],[216,45,231,11,"retryConfig"],[216,56,231,22],[216,57,231,23,"baseDelay"],[216,66,231,32],[216,69,231,35,"Math"],[216,73,231,39],[216,74,231,40,"pow"],[216,77,231,43],[216,78,231,44],[216,82,231,48],[216,83,231,49,"retryConfig"],[216,94,231,60],[216,95,231,61,"backoffMultiplier"],[216,112,231,78],[216,114,231,80,"attempt"],[216,121,231,87],[216,124,231,90],[216,125,231,91],[216,126,231,92],[216,128,232,6],[216,132,232,10],[216,133,232,11,"retryConfig"],[216,144,232,22],[216,145,232,23,"maxDelay"],[216,153,233,4],[216,154,233,5],[217,8,235,4],[217,12,235,8],[217,16,235,12],[217,17,235,13,"retryConfig"],[217,28,235,24],[217,29,235,25,"jitter"],[217,35,235,31],[217,37,235,33],[218,10,236,6],[219,10,237,6],[219,14,237,12,"jitterRange"],[219,25,237,23],[219,28,237,26,"exponentialDelay"],[219,44,237,42],[219,47,237,45],[219,51,237,49],[220,10,238,6],[220,14,238,12,"jitter"],[220,20,238,18],[220,23,238,21],[220,24,238,22,"Math"],[220,28,238,26],[220,29,238,27,"random"],[220,35,238,33],[220,36,238,34],[220,37,238,35],[220,40,238,38],[220,43,238,41],[220,47,238,45],[220,48,238,46],[220,51,238,49,"jitterRange"],[220,62,238,60],[221,10,239,6],[221,17,239,13,"Math"],[221,21,239,17],[221,22,239,18,"max"],[221,25,239,21],[221,26,239,22],[221,29,239,25],[221,31,239,27,"Math"],[221,35,239,31],[221,36,239,32,"round"],[221,41,239,37],[221,42,239,38,"exponentialDelay"],[221,58,239,54],[221,61,239,57,"jitter"],[221,67,239,63],[221,68,239,64],[221,69,239,65],[222,8,240,4],[223,8,242,4],[223,15,242,11,"exponentialDelay"],[223,31,242,27],[224,6,243,2],[226,6,245,2],[227,0,246,0],[228,0,247,0],[229,4,245,2],[230,6,245,2,"key"],[230,9,245,2],[231,6,245,2,"value"],[231,11,245,2],[231,13,248,2],[231,22,248,10,"sleep"],[231,27,248,15,"sleep"],[231,28,248,16,"ms"],[231,30,248,26],[231,32,248,43],[232,8,249,4],[232,15,249,11],[232,19,249,15,"Promise"],[232,26,249,22],[232,27,249,23],[232,37,249,23,"resolve"],[232,44,249,30],[233,10,249,30],[233,17,249,34,"setTimeout"],[233,27,249,44],[233,28,249,45,"resolve"],[233,35,249,52],[233,37,249,54,"ms"],[233,39,249,56],[233,40,249,57],[234,8,249,57],[234,10,249,58],[235,6,250,2],[237,6,252,2],[238,0,253,0],[239,0,254,0],[240,4,252,2],[241,6,252,2,"key"],[241,9,252,2],[242,6,252,2,"value"],[242,11,252,2],[242,13,255,2],[242,22,255,10,"setupDefaultStrategies"],[242,44,255,32,"setupDefaultStrategies"],[242,45,255,32],[242,47,255,41],[243,8,255,41],[243,12,255,41,"_this"],[243,17,255,41],[244,8,256,4],[245,8,257,4],[245,12,257,8],[245,13,257,9,"addRecoveryStrategy"],[245,32,257,28],[245,33,257,29],[246,10,258,6,"name"],[246,14,258,10],[246,16,258,12],[246,38,258,34],[247,10,259,6,"canRecover"],[247,20,259,16],[247,22,259,18],[247,31,259,6,"canRecover"],[247,41,259,16,"canRecover"],[247,42,259,19,"error"],[247,47,259,31],[247,49,259,36],[248,12,260,8],[248,16,260,14,"networkPatterns"],[248,31,260,29],[248,34,260,32],[248,35,261,10],[248,59,261,34],[248,61,262,10],[248,68,262,17],[248,70,263,10],[248,85,263,25],[248,87,264,10],[248,99,264,22],[248,101,265,10],[248,110,265,19],[248,112,266,10],[248,119,266,17],[248,120,267,9],[249,12,268,8],[249,19,268,15,"networkPatterns"],[249,34,268,30],[249,35,268,31,"some"],[249,39,268,35],[249,40,268,36],[249,50,268,36,"pattern"],[249,57,268,43],[250,14,268,43],[250,21,269,10,"error"],[250,26,269,15],[250,27,269,16,"message"],[250,34,269,23],[250,35,269,24,"toLowerCase"],[250,46,269,35],[250,47,269,36],[250,48,269,37],[250,49,269,38,"includes"],[250,57,269,46],[250,58,269,47,"pattern"],[250,65,269,54],[250,66,269,55,"toLowerCase"],[250,77,269,66],[250,78,269,67],[250,79,269,68],[250,80,269,69],[251,12,269,69],[251,13,270,8],[251,14,270,9],[252,10,271,6],[252,11,271,7],[253,10,272,6,"recover"],[253,17,272,13],[254,12,272,13],[254,16,272,13,"_recover"],[254,24,272,13],[254,31,272,13,"_asyncToGenerator2"],[254,49,272,13],[254,50,272,13,"default"],[254,57,272,13],[254,59,272,15],[254,70,272,22,"error"],[254,75,272,34],[254,77,272,39],[255,14,272,39],[255,18,272,39,"_navigator$onLine"],[255,35,272,39],[255,37,272,39,"_navigator"],[255,47,272,39],[256,14,273,8],[257,14,274,8],[257,18,274,14,"isOnline"],[257,26,274,22],[257,30,274,22,"_navigator$onLine"],[257,47,274,22],[257,51,274,22,"_navigator"],[257,61,274,22],[257,64,274,25,"navigator"],[257,73,274,34],[257,94,274,25,"_navigator"],[257,104,274,25],[257,105,274,36,"onLine"],[257,111,274,42],[257,123,274,42,"_navigator$onLine"],[257,140,274,42],[257,143,274,46],[257,147,274,50],[258,14,275,8],[258,18,275,12],[258,19,275,13,"isOnline"],[258,27,275,21],[258,29,275,23],[259,16,276,10,"EventLogger"],[259,40,276,21],[259,41,276,22,"warn"],[259,45,276,26],[259,46,276,27],[259,61,276,42],[259,63,276,44],[259,112,276,93],[259,113,276,94],[260,16,277,10],[260,23,277,17],[260,28,277,22],[261,14,278,8],[263,14,280,8],[264,14,281,8],[264,18,281,12],[265,16,282,10],[265,20,282,16,"response"],[265,28,282,24],[265,37,282,33,"fetch"],[265,42,282,38],[265,43,282,39],[265,50,282,46],[265,52,282,48],[266,18,283,12,"method"],[266,24,283,18],[266,26,283,20],[266,32,283,26],[267,18,284,12,"cache"],[267,23,284,17],[267,25,284,19],[268,16,285,10],[268,17,285,11],[268,18,285,12],[269,16,286,10],[269,23,286,17,"response"],[269,31,286,25],[269,32,286,26,"ok"],[269,34,286,28],[270,14,287,8],[270,15,287,9],[270,16,287,10],[270,23,287,10,"_unused"],[270,30,287,10],[270,32,287,16],[271,16,288,10],[271,23,288,17],[271,28,288,22],[272,14,289,8],[273,12,290,6],[273,13,290,7],[274,12,290,7],[274,21,272,6,"recover"],[274,28,272,13,"recover"],[274,29,272,13,"_x5"],[274,32,272,13],[275,14,272,13],[275,21,272,13,"_recover"],[275,29,272,13],[275,30,272,13,"apply"],[275,35,272,13],[275,42,272,13,"arguments"],[275,51,272,13],[276,12,272,13],[277,12,272,13],[277,19,272,6,"recover"],[277,26,272,13],[278,10,272,13],[278,13,290,7],[279,10,291,6,"priority"],[279,18,291,14],[279,20,291,16],[280,8,292,4],[280,9,292,5],[280,10,292,6],[282,8,294,4],[283,8,295,4],[283,12,295,8],[283,13,295,9,"addRecoveryStrategy"],[283,32,295,28],[283,33,295,29],[284,10,296,6,"name"],[284,14,296,10],[284,16,296,12],[284,36,296,32],[285,10,297,6,"canRecover"],[285,20,297,16],[285,22,297,18],[285,31,297,6,"canRecover"],[285,41,297,16,"canRecover"],[285,42,297,19,"error"],[285,47,297,31],[285,49,297,36],[286,12,298,8],[286,16,298,14,"cachePatterns"],[286,29,298,27],[286,32,298,30],[286,33,299,10],[286,48,299,25],[286,50,300,10],[286,59,300,19],[286,61,301,10],[286,68,301,17],[286,70,302,10],[286,81,302,21],[286,83,303,10],[286,97,303,24],[286,98,304,9],[287,12,305,8],[287,19,305,15,"cachePatterns"],[287,32,305,28],[287,33,305,29,"some"],[287,37,305,33],[287,38,305,34],[287,48,305,34,"pattern"],[287,55,305,41],[288,14,305,41],[288,21,306,10,"error"],[288,26,306,15],[288,27,306,16,"message"],[288,34,306,23],[288,35,306,24,"toLowerCase"],[288,46,306,35],[288,47,306,36],[288,48,306,37],[288,49,306,38,"includes"],[288,57,306,46],[288,58,306,47,"pattern"],[288,65,306,54],[288,66,306,55,"toLowerCase"],[288,77,306,66],[288,78,306,67],[288,79,306,68],[288,80,306,69],[289,12,306,69],[289,13,307,8],[289,14,307,9],[290,10,308,6],[290,11,308,7],[291,10,309,6,"recover"],[291,17,309,13],[292,12,309,13],[292,16,309,13,"_recover2"],[292,25,309,13],[292,32,309,13,"_asyncToGenerator2"],[292,50,309,13],[292,51,309,13,"default"],[292,58,309,13],[292,60,309,15],[292,71,309,22,"error"],[292,76,309,34],[292,78,309,39],[293,14,310,8],[293,18,310,12],[294,16,311,10],[295,16,312,10],[295,20,312,14],[295,27,312,21,"caches"],[295,33,312,27],[295,38,312,32],[295,49,312,43],[295,51,312,45],[296,18,313,12],[296,22,313,18,"cacheNames"],[296,32,313,28],[296,41,313,37,"caches"],[296,47,313,43],[296,48,313,44,"keys"],[296,52,313,48],[296,53,313,49],[296,54,313,50],[297,18,314,12],[297,24,314,18,"Promise"],[297,31,314,25],[297,32,314,26,"all"],[297,35,314,29],[297,36,314,30,"cacheNames"],[297,46,314,40],[297,47,314,41,"map"],[297,50,314,44],[297,51,314,45],[297,61,314,45,"name"],[297,65,314,49],[298,20,314,49],[298,27,314,53,"caches"],[298,33,314,59],[298,34,314,60,"delete"],[298,40,314,66],[298,41,314,67,"name"],[298,45,314,71],[298,46,314,72],[299,18,314,72],[299,20,314,73],[299,21,314,74],[300,16,315,10],[302,16,317,10],[303,16,318,10],[303,20,318,14],[304,18,319,12,"localStorage"],[304,30,319,24],[304,31,319,25,"clear"],[304,36,319,30],[304,37,319,31],[304,38,319,32],[305,16,320,10],[305,17,320,11],[305,18,320,12],[305,25,320,12,"_unused2"],[305,33,320,12],[305,35,320,18],[305,36,320,19],[306,16,322,10,"EventLogger"],[306,40,322,21],[306,41,322,22,"info"],[306,45,322,26],[306,46,322,27],[306,61,322,42],[306,63,322,44],[306,92,322,73],[306,93,322,74],[307,16,323,10],[307,23,323,17],[307,27,323,21],[308,14,324,8],[308,15,324,9],[308,16,324,10],[308,23,324,10,"_unused3"],[308,31,324,10],[308,33,324,16],[309,16,325,10],[309,23,325,17],[309,28,325,22],[310,14,326,8],[311,12,327,6],[311,13,327,7],[312,12,327,7],[312,21,309,6,"recover"],[312,28,309,13,"recover"],[312,29,309,13,"_x6"],[312,32,309,13],[313,14,309,13],[313,21,309,13,"_recover2"],[313,30,309,13],[313,31,309,13,"apply"],[313,36,309,13],[313,43,309,13,"arguments"],[313,52,309,13],[314,12,309,13],[315,12,309,13],[315,19,309,6,"recover"],[315,26,309,13],[316,10,309,13],[316,13,327,7],[317,10,328,6,"priority"],[317,18,328,14],[317,20,328,16],[318,8,329,4],[318,9,329,5],[318,10,329,6],[320,8,331,4],[321,8,332,4],[321,12,332,8],[321,13,332,9,"addRecoveryStrategy"],[321,32,332,28],[321,33,332,29],[322,10,333,6,"name"],[322,14,333,10],[322,16,333,12],[322,32,333,28],[323,10,334,6,"canRecover"],[323,20,334,16],[323,22,334,18],[323,31,334,6,"canRecover"],[323,41,334,16,"canRecover"],[323,42,334,19,"error"],[323,47,334,31],[323,49,334,36],[324,12,335,8],[324,16,335,14,"memoryPatterns"],[324,30,335,28],[324,33,335,31],[324,34,336,10],[324,49,336,25],[324,51,337,10],[324,59,337,18],[324,61,338,10],[324,67,338,16],[324,69,339,10],[324,89,339,30],[324,90,340,9],[325,12,341,8],[325,19,341,15,"memoryPatterns"],[325,33,341,29],[325,34,341,30,"some"],[325,38,341,34],[325,39,341,35],[325,49,341,35,"pattern"],[325,56,341,42],[326,14,341,42],[326,21,342,10,"error"],[326,26,342,15],[326,27,342,16,"message"],[326,34,342,23],[326,35,342,24,"toLowerCase"],[326,46,342,35],[326,47,342,36],[326,48,342,37],[326,49,342,38,"includes"],[326,57,342,46],[326,58,342,47,"pattern"],[326,65,342,54],[326,66,342,55,"toLowerCase"],[326,77,342,66],[326,78,342,67],[326,79,342,68],[326,80,342,69],[327,12,342,69],[327,13,343,8],[327,14,343,9],[328,10,344,6],[328,11,344,7],[329,10,345,6,"recover"],[329,17,345,13],[330,12,345,13],[330,16,345,13,"_recover3"],[330,25,345,13],[330,32,345,13,"_asyncToGenerator2"],[330,50,345,13],[330,51,345,13,"default"],[330,58,345,13],[330,60,345,15],[330,71,345,22,"error"],[330,76,345,34],[330,78,345,39],[331,14,346,8],[331,18,346,12],[332,16,347,10],[333,16,348,10],[333,20,348,15,"window"],[333,26,348,21],[333,27,348,30,"gc"],[333,29,348,32],[333,31,348,34],[334,18,349,13,"window"],[334,24,349,19],[334,25,349,28,"gc"],[334,27,349,30],[334,28,349,31],[334,29,349,32],[335,16,350,10],[337,16,352,10],[338,16,353,10],[339,16,354,10,"EventLogger"],[339,40,354,21],[339,41,354,22,"info"],[339,45,354,26],[339,46,354,27],[339,61,354,42],[339,63,354,44],[339,90,354,71],[339,91,354,72],[341,16,356,10],[342,16,357,10],[342,22,357,16,"_this"],[342,27,357,20],[342,28,357,21,"sleep"],[342,33,357,26],[342,34,357,27],[342,37,357,30],[342,38,357,31],[343,16,358,10],[343,23,358,17],[343,27,358,21],[344,14,359,8],[344,15,359,9],[344,16,359,10],[344,23,359,10,"_unused4"],[344,31,359,10],[344,33,359,16],[345,16,360,10],[345,23,360,17],[345,28,360,22],[346,14,361,8],[347,12,362,6],[347,13,362,7],[348,12,362,7],[348,21,345,6,"recover"],[348,28,345,13,"recover"],[348,29,345,13,"_x7"],[348,32,345,13],[349,14,345,13],[349,21,345,13,"_recover3"],[349,30,345,13],[349,31,345,13,"apply"],[349,36,345,13],[349,43,345,13,"arguments"],[349,52,345,13],[350,12,345,13],[351,12,345,13],[351,19,345,6,"recover"],[351,26,345,13],[352,10,345,13],[352,13,362,7],[353,10,363,6,"priority"],[353,18,363,14],[353,20,363,16],[354,8,364,4],[354,9,364,5],[354,10,364,6],[355,6,365,2],[356,4,365,3],[357,2,365,3],[357,7,368,0],[358,2,369,7],[358,6,369,13,"errorRecoveryManager"],[358,26,369,33],[358,29,369,33,"exports"],[358,36,369,33],[358,37,369,33,"errorRecoveryManager"],[358,57,369,33],[358,60,369,36],[358,64,369,40,"ErrorRecoveryManager"],[358,84,369,60],[358,85,369,61],[358,86,369,62],[359,0,369,63],[359,3]],"functionMap":{"names":["<global>","ErrorRecoveryManager","constructor","executeWithRecovery","addRecoveryStrategy","recoveryStrategies.sort$argument_0","removeRecoveryStrategy","recoveryStrategies.findIndex$argument_0","updateRetryConfig","attemptRecovery","calculateDelay","sleep","Promise$argument_0","setupDefaultStrategies","addRecoveryStrategy$argument_0.canRecover","networkPatterns.some$argument_0","addRecoveryStrategy$argument_0.recover","cachePatterns.some$argument_0","cacheNames.map$argument_0","memoryPatterns.some$argument_0"],"mappings":"AAA;OCiB;ECW;GDM;EEK;GFwF;EGK;iCCE,iCD;GHO;EKK;oDCC,4BD;GLS;EOK;GPO;EQK;GRkD;ESK;GTc;EUK;uBCC,kCD;GVC;EYK;kBCI;oCCS;qEDC;ODE;eGC;OHkB;kBCO;kCGQ;qEHC;ODE;eGC;6CEK,2BF;OHa;kBCO;mCKO;qELC;ODE;eGC;OHiB;GZG;CDC"}},"type":"js/module"}]}