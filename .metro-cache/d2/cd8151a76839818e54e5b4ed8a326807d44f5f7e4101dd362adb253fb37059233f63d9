{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"./GoTrueAdminApi","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":41,"index":257},"end":{"line":6,"column":68,"index":284}}],"key":"i76uMxXVdWAA3Rph0eWK7LoaO/w=","exportNames":["*"]}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":20,"index":307},"end":{"line":7,"column":46,"index":333}}],"key":"Tozkr70n9lVAcLLAJew2JSVOK9Y=","exportNames":["*"]}},{"name":"./lib/errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":352},"end":{"line":8,"column":40,"index":375}}],"key":"Hvlclxpmmg311e5qhG3wYodSjVs=","exportNames":["*"]}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":393},"end":{"line":9,"column":38,"index":415}}],"key":"R6LkNjEOXDiLQ/+hwj6jDUhuOC4=","exportNames":["*"]}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":18,"index":435},"end":{"line":10,"column":42,"index":459}},{"start":{"line":16,"column":18,"index":715},"end":{"line":16,"column":42,"index":739}}],"key":"WC5jlm7KwiIsdJM6jCtPN6iFk4U=","exportNames":["*"]}},{"name":"./lib/local-storage","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":24,"index":485},"end":{"line":11,"column":54,"index":515}}],"key":"28e7FuPaeGJTeNMVDStJkLK21ZQ=","exportNames":["*"]}},{"name":"./lib/polyfills","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":20,"index":537},"end":{"line":12,"column":46,"index":563}}],"key":"H1na6Pv39nAwh4LAnhORLuVehnY=","exportNames":["*"]}},{"name":"./lib/version","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":18,"index":583},"end":{"line":13,"column":42,"index":607}}],"key":"be4aTMTsFhd78/kHR0JbG8rudXE=","exportNames":["*"]}},{"name":"./lib/locks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":16,"index":625},"end":{"line":14,"column":38,"index":647}}],"key":"30OMvxA5kFoj+Fk30l1b7z+Cmv4=","exportNames":["*"]}},{"name":"./lib/base64url","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":20,"index":669},"end":{"line":15,"column":46,"index":695}}],"key":"A8ay9+wpIpGL0Q6K/yfIViI8mrc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0]);\n  var _classCallCheck = require(_dependencyMap[1]);\n  var _createClass = require(_dependencyMap[2]);\n  var _asyncToGenerator = require(_dependencyMap[3]);\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var GoTrueAdminApi_1 = __importDefault(require(_dependencyMap[4]));\n  var constants_1 = require(_dependencyMap[5]);\n  var errors_1 = require(_dependencyMap[6]);\n  var fetch_1 = require(_dependencyMap[7]);\n  var helpers_1 = require(_dependencyMap[8]);\n  var local_storage_1 = require(_dependencyMap[9]);\n  var polyfills_1 = require(_dependencyMap[10]);\n  var version_1 = require(_dependencyMap[11]);\n  var locks_1 = require(_dependencyMap[12]);\n  var base64url_1 = require(_dependencyMap[13]);\n  var helpers_2 = require(_dependencyMap[8]);\n  (0, polyfills_1.polyfillGlobalThis)(); // Make \"globalThis\" available\n  var DEFAULT_OPTIONS = {\n    url: constants_1.GOTRUE_URL,\n    storageKey: constants_1.STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: constants_1.DEFAULT_HEADERS,\n    flowType: 'implicit',\n    debug: false,\n    hasCustomAuthorizationHeader: false\n  };\n  function lockNoOp(_x, _x2, _x3) {\n    return _lockNoOp.apply(this, arguments);\n  }\n  /**\n   * Caches JWKS values for all clients created in the same environment. This is\n   * especially useful for shared-memory execution environments such as Vercel's\n   * Fluid Compute, AWS Lambda or Supabase's Edge Functions. Regardless of how\n   * many clients are created, if they share the same storage key they will use\n   * the same JWKS cache, significantly speeding up getClaims() with asymmetric\n   * JWTs.\n   */\n  function _lockNoOp() {\n    _lockNoOp = _asyncToGenerator(function* (name, acquireTimeout, fn) {\n      return yield fn();\n    });\n    return _lockNoOp.apply(this, arguments);\n  }\n  var GLOBAL_JWKS = {};\n  var GoTrueClient = /*#__PURE__*/function () {\n    /**\n     * Create a new client for use in the browser.\n     */\n    function GoTrueClient(options) {\n      var _this = this;\n      _classCallCheck(this, GoTrueClient);\n      var _a, _b;\n      /**\n       * @experimental\n       */\n      this.userStorage = null;\n      this.memoryStorage = null;\n      this.stateChangeEmitters = new Map();\n      this.autoRefreshTicker = null;\n      this.visibilityChangedCallback = null;\n      this.refreshingDeferred = null;\n      /**\n       * Keeps track of the async client initialization.\n       * When null or not yet resolved the auth state is `unknown`\n       * Once resolved the the auth state is known and it's save to call any further client methods.\n       * Keep extra care to never reject or throw uncaught errors\n       */\n      this.initializePromise = null;\n      this.detectSessionInUrl = true;\n      this.hasCustomAuthorizationHeader = false;\n      this.suppressGetSessionWarning = false;\n      this.lockAcquired = false;\n      this.pendingInLock = [];\n      /**\n       * Used to broadcast state change events to other tabs listening.\n       */\n      this.broadcastChannel = null;\n      this.logger = function () {};\n      this.instanceID = GoTrueClient.nextInstanceID;\n      GoTrueClient.nextInstanceID += 1;\n      if (this.instanceID > 0 && (0, helpers_1.isBrowser)()) {}\n      var settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n      this.logDebugMessages = !!settings.debug;\n      if (typeof settings.debug === 'function') {\n        this.logger = settings.debug;\n      }\n      this.persistSession = settings.persistSession;\n      this.storageKey = settings.storageKey;\n      this.autoRefreshToken = settings.autoRefreshToken;\n      this.admin = new GoTrueAdminApi_1.default({\n        url: settings.url,\n        headers: settings.headers,\n        fetch: settings.fetch\n      });\n      this.url = settings.url;\n      this.headers = settings.headers;\n      this.fetch = (0, helpers_1.resolveFetch)(settings.fetch);\n      this.lock = settings.lock || lockNoOp;\n      this.detectSessionInUrl = settings.detectSessionInUrl;\n      this.flowType = settings.flowType;\n      this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n      if (settings.lock) {\n        this.lock = settings.lock;\n      } else if ((0, helpers_1.isBrowser)() && ((_a = globalThis === null || globalThis === undefined ? undefined : globalThis.navigator) === null || _a === undefined ? undefined : _a.locks)) {\n        this.lock = locks_1.navigatorLock;\n      } else {\n        this.lock = lockNoOp;\n      }\n      if (!this.jwks) {\n        this.jwks = {\n          keys: []\n        };\n        this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\n      }\n      this.mfa = {\n        verify: this._verify.bind(this),\n        enroll: this._enroll.bind(this),\n        unenroll: this._unenroll.bind(this),\n        challenge: this._challenge.bind(this),\n        listFactors: this._listFactors.bind(this),\n        challengeAndVerify: this._challengeAndVerify.bind(this),\n        getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this)\n      };\n      if (this.persistSession) {\n        if (settings.storage) {\n          this.storage = settings.storage;\n        } else {\n          if ((0, helpers_1.supportsLocalStorage)()) {\n            this.storage = globalThis.localStorage;\n          } else {\n            this.memoryStorage = {};\n            this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n          }\n        }\n        if (settings.userStorage) {\n          this.userStorage = settings.userStorage;\n        }\n      } else {\n        this.memoryStorage = {};\n        this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n      }\n      if ((0, helpers_1.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n        try {\n          this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n        } catch (e) {}\n        (_b = this.broadcastChannel) === null || _b === undefined ? undefined : _b.addEventListener('message', /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (event) {\n            _this._debug('received broadcast notification from other tab or client', event);\n            yield _this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n          });\n          return function (_x4) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n      this.initialize();\n    }\n    /**\n     * The JWKS used for verifying asymmetric JWTs\n     */\n    return _createClass(GoTrueClient, [{\n      key: \"jwks\",\n      get: function () {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === undefined ? undefined : _a.jwks) !== null && _b !== undefined ? _b : {\n          keys: []\n        };\n      },\n      set: function (value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n          jwks: value\n        });\n      }\n    }, {\n      key: \"jwks_cached_at\",\n      get: function () {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === undefined ? undefined : _a.cachedAt) !== null && _b !== undefined ? _b : Number.MIN_SAFE_INTEGER;\n      },\n      set: function (value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n          cachedAt: value\n        });\n      }\n    }, {\n      key: \"_debug\",\n      value: function _debug() {\n        if (this.logDebugMessages) {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          this.logger(`GoTrueClient@${this.instanceID} (${version_1.version}) ${new Date().toISOString()}`, ...args);\n        }\n        return this;\n      }\n      /**\n       * Initializes the client session either from the url or from storage.\n       * This method is automatically called when instantiating the client, but should also be called\n       * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n       */\n    }, {\n      key: \"initialize\",\n      value: (function () {\n        var _initialize2 = _asyncToGenerator(function* () {\n          var _this2 = this;\n          if (this.initializePromise) {\n            return yield this.initializePromise;\n          }\n          this.initializePromise = _asyncToGenerator(function* () {\n            return yield _this2._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n              return yield _this2._initialize();\n            }));\n          })();\n          return yield this.initializePromise;\n        });\n        function initialize() {\n          return _initialize2.apply(this, arguments);\n        }\n        return initialize;\n      }()\n      /**\n       * IMPORTANT:\n       * 1. Never throw in this method, as it is called from the constructor\n       * 2. Never return a session from this method as it would be cached over\n       *    the whole lifetime of the client\n       */\n      )\n    }, {\n      key: \"_initialize\",\n      value: (function () {\n        var _initialize3 = _asyncToGenerator(function* () {\n          var _this3 = this;\n          var _a;\n          try {\n            var params = (0, helpers_1.parseParametersFromURL)(window.location.href);\n            var callbackUrlType = 'none';\n            if (this._isImplicitGrantCallback(params)) {\n              callbackUrlType = 'implicit';\n            } else if (yield this._isPKCECallback(params)) {\n              callbackUrlType = 'pkce';\n            }\n            /**\n             * Attempt to get the session from the URL only if these conditions are fulfilled\n             *\n             * Note: If the URL isn't one of the callback url types (implicit or pkce),\n             * then there could be an existing session so we don't want to prematurely remove it\n             */\n            if ((0, helpers_1.isBrowser)() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n              var _yield$this$_getSessi = yield this._getSessionFromURL(params, callbackUrlType),\n                data = _yield$this$_getSessi.data,\n                error = _yield$this$_getSessi.error;\n              if (error) {\n                this._debug('#_initialize()', 'error detecting session from URL', error);\n                if ((0, errors_1.isAuthImplicitGrantRedirectError)(error)) {\n                  var errorCode = (_a = error.details) === null || _a === undefined ? undefined : _a.code;\n                  if (errorCode === 'identity_already_exists' || errorCode === 'identity_not_found' || errorCode === 'single_identity_not_deletable') {\n                    return {\n                      error\n                    };\n                  }\n                }\n                // failed login attempt via url,\n                // remove old session as in verifyOtp, signUp and signInWith*\n                yield this._removeSession();\n                return {\n                  error\n                };\n              }\n              var session = data.session,\n                redirectType = data.redirectType;\n              this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n              yield this._saveSession(session);\n              setTimeout(/*#__PURE__*/_asyncToGenerator(function* () {\n                if (redirectType === 'recovery') {\n                  yield _this3._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                } else {\n                  yield _this3._notifyAllSubscribers('SIGNED_IN', session);\n                }\n              }), 0);\n              return {\n                error: null\n              };\n            }\n            // no login attempt via callback url try to recover session from storage\n            yield this._recoverAndRefresh();\n            return {\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                error\n              };\n            }\n            return {\n              error: new errors_1.AuthUnknownError('Unexpected error during initialization', error)\n            };\n          } finally {\n            yield this._handleVisibilityChange();\n            this._debug('#_initialize()', 'end');\n          }\n        });\n        function _initialize() {\n          return _initialize3.apply(this, arguments);\n        }\n        return _initialize;\n      }()\n      /**\n       * Creates a new anonymous user.\n       *\n       * @returns A session where the is_anonymous claim in the access token JWT set to true\n       */\n      )\n    }, {\n      key: \"signInAnonymously\",\n      value: (function () {\n        var _signInAnonymously = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c;\n          try {\n            var res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n              headers: this.headers,\n              body: {\n                data: (_b = (_a = credentials === null || credentials === undefined ? undefined : credentials.options) === null || _a === undefined ? undefined : _a.data) !== null && _b !== undefined ? _b : {},\n                gotrue_meta_security: {\n                  captcha_token: (_c = credentials === null || credentials === undefined ? undefined : credentials.options) === null || _c === undefined ? undefined : _c.captchaToken\n                }\n              },\n              xform: fetch_1._sessionResponse\n            });\n            var data = res.data,\n              error = res.error;\n            if (error || !data) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            var session = data.session;\n            var user = data.user;\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInAnonymously(_x5) {\n          return _signInAnonymously.apply(this, arguments);\n        }\n        return signInAnonymously;\n      }()\n      /**\n       * Creates a new user.\n       *\n       * Be aware that if a user account exists in the system you may get back an\n       * error message that attempts to hide this information from the user.\n       * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n       *\n       * @returns A logged-in session if the server has \"autoconfirm\" ON\n       * @returns A user if the server has \"autoconfirm\" OFF\n       */\n      )\n    }, {\n      key: \"signUp\",\n      value: (function () {\n        var _signUp = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c;\n          try {\n            var res;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                password = credentials.password,\n                options = credentials.options;\n              var codeChallenge = null;\n              var codeChallengeMethod = null;\n              if (this.flowType === 'pkce') {\n                ;\n                var _yield = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                var _yield2 = _slicedToArray(_yield, 2);\n                codeChallenge = _yield2[0];\n                codeChallengeMethod = _yield2[1];\n              }\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                redirectTo: options === null || options === undefined ? undefined : options.emailRedirectTo,\n                body: {\n                  email,\n                  password,\n                  data: (_a = options === null || options === undefined ? undefined : options.data) !== null && _a !== undefined ? _a : {},\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === undefined ? undefined : options.captchaToken\n                  },\n                  code_challenge: codeChallenge,\n                  code_challenge_method: codeChallengeMethod\n                },\n                xform: fetch_1._sessionResponse\n              });\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _password = credentials.password,\n                _options = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                body: {\n                  phone,\n                  password: _password,\n                  data: (_b = _options === null || _options === undefined ? undefined : _options.data) !== null && _b !== undefined ? _b : {},\n                  channel: (_c = _options === null || _options === undefined ? undefined : _options.channel) !== null && _c !== undefined ? _c : 'sms',\n                  gotrue_meta_security: {\n                    captcha_token: _options === null || _options === undefined ? undefined : _options.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponse\n              });\n            } else {\n              throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            var _res = res,\n              data = _res.data,\n              error = _res.error;\n            if (error || !data) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            var session = data.session;\n            var user = data.user;\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signUp(_x6) {\n          return _signUp.apply(this, arguments);\n        }\n        return signUp;\n      }()\n      /**\n       * Log in an existing user with an email and password or phone and password.\n       *\n       * Be aware that you may get back an error message that will not distinguish\n       * between the cases where the account does not exist or that the\n       * email/phone and password combination is wrong or that the account can only\n       * be accessed via social login.\n       */\n      )\n    }, {\n      key: \"signInWithPassword\",\n      value: (function () {\n        var _signInWithPassword = _asyncToGenerator(function* (credentials) {\n          try {\n            var res;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                password = credentials.password,\n                options = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                headers: this.headers,\n                body: {\n                  email,\n                  password,\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === undefined ? undefined : options.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponsePassword\n              });\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _password2 = credentials.password,\n                _options2 = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                headers: this.headers,\n                body: {\n                  phone,\n                  password: _password2,\n                  gotrue_meta_security: {\n                    captcha_token: _options2 === null || _options2 === undefined ? undefined : _options2.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponsePassword\n              });\n            } else {\n              throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            var _res2 = res,\n              data = _res2.data,\n              error = _res2.error;\n            if (error) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            } else if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign({\n                user: data.user,\n                session: data.session\n              }, data.weak_password ? {\n                weakPassword: data.weak_password\n              } : null),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithPassword(_x7) {\n          return _signInWithPassword.apply(this, arguments);\n        }\n        return signInWithPassword;\n      }()\n      /**\n       * Log in an existing user via a third-party provider.\n       * This method supports the PKCE flow.\n       */\n      )\n    }, {\n      key: \"signInWithOAuth\",\n      value: (function () {\n        var _signInWithOAuth = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d;\n          return yield this._handleProviderSignIn(credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === undefined ? undefined : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === undefined ? undefined : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === undefined ? undefined : _c.queryParams,\n            skipBrowserRedirect: (_d = credentials.options) === null || _d === undefined ? undefined : _d.skipBrowserRedirect\n          });\n        });\n        function signInWithOAuth(_x8) {\n          return _signInWithOAuth.apply(this, arguments);\n        }\n        return signInWithOAuth;\n      }()\n      /**\n       * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n       */\n      )\n    }, {\n      key: \"exchangeCodeForSession\",\n      value: (function () {\n        var _exchangeCodeForSession2 = _asyncToGenerator(function* (authCode) {\n          var _this4 = this;\n          yield this.initializePromise;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return _this4._exchangeCodeForSession(authCode);\n          }));\n        });\n        function exchangeCodeForSession(_x9) {\n          return _exchangeCodeForSession2.apply(this, arguments);\n        }\n        return exchangeCodeForSession;\n      }()\n      /**\n       * Signs in a user by verifying a message signed by the user's private key.\n       * Only Solana supported at this time, using the Sign in with Solana standard.\n       */\n      )\n    }, {\n      key: \"signInWithWeb3\",\n      value: (function () {\n        var _signInWithWeb = _asyncToGenerator(function* (credentials) {\n          var chain = credentials.chain;\n          if (chain === 'solana') {\n            return yield this.signInWithSolana(credentials);\n          }\n          throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\n        });\n        function signInWithWeb3(_x0) {\n          return _signInWithWeb.apply(this, arguments);\n        }\n        return signInWithWeb3;\n      }())\n    }, {\n      key: \"signInWithSolana\",\n      value: function () {\n        var _signInWithSolana = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n          var message;\n          var signature;\n          if ('message' in credentials) {\n            message = credentials.message;\n            signature = credentials.signature;\n          } else {\n            var chain = credentials.chain,\n              wallet = credentials.wallet,\n              statement = credentials.statement,\n              options = credentials.options;\n            var resolvedWallet;\n            if (!(0, helpers_1.isBrowser)()) {\n              if (typeof wallet !== 'object' || !(options === null || options === undefined ? undefined : options.url)) {\n                throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n              }\n              resolvedWallet = wallet;\n            } else if (typeof wallet === 'object') {\n              resolvedWallet = wallet;\n            } else {\n              var windowAny = window;\n              if ('solana' in windowAny && typeof windowAny.solana === 'object' && ('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function' || 'signMessage' in windowAny.solana && typeof windowAny.solana.signMessage === 'function')) {\n                resolvedWallet = windowAny.solana;\n              } else {\n                throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\n              }\n            }\n            var url = new URL((_a = options === null || options === undefined ? undefined : options.url) !== null && _a !== undefined ? _a : window.location.href);\n            if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\n              var output = yield resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({\n                issuedAt: new Date().toISOString()\n              }, options === null || options === undefined ? undefined : options.signInWithSolana), {\n                // non-overridable properties\n                version: '1',\n                domain: url.host,\n                uri: url.href\n              }), statement ? {\n                statement\n              } : null));\n              var outputToProcess;\n              if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\n                outputToProcess = output[0];\n              } else if (output && typeof output === 'object' && 'signedMessage' in output && 'signature' in output) {\n                outputToProcess = output;\n              } else {\n                throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\n              }\n              if ('signedMessage' in outputToProcess && 'signature' in outputToProcess && (typeof outputToProcess.signedMessage === 'string' || outputToProcess.signedMessage instanceof Uint8Array) && outputToProcess.signature instanceof Uint8Array) {\n                message = typeof outputToProcess.signedMessage === 'string' ? outputToProcess.signedMessage : new TextDecoder().decode(outputToProcess.signedMessage);\n                signature = outputToProcess.signature;\n              } else {\n                throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\n              }\n            } else {\n              if (!('signMessage' in resolvedWallet) || typeof resolvedWallet.signMessage !== 'function' || !('publicKey' in resolvedWallet) || typeof resolvedWallet !== 'object' || !resolvedWallet.publicKey || !('toBase58' in resolvedWallet.publicKey) || typeof resolvedWallet.publicKey.toBase58 !== 'function') {\n                throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\n              }\n              message = [`${url.host} wants you to sign in with your Solana account:`, resolvedWallet.publicKey.toBase58(), ...(statement ? ['', statement, ''] : ['']), 'Version: 1', `URI: ${url.href}`, `Issued At: ${(_c = (_b = options === null || options === undefined ? undefined : options.signInWithSolana) === null || _b === undefined ? undefined : _b.issuedAt) !== null && _c !== undefined ? _c : new Date().toISOString()}`, ...(((_d = options === null || options === undefined ? undefined : options.signInWithSolana) === null || _d === undefined ? undefined : _d.notBefore) ? [`Not Before: ${options.signInWithSolana.notBefore}`] : []), ...(((_e = options === null || options === undefined ? undefined : options.signInWithSolana) === null || _e === undefined ? undefined : _e.expirationTime) ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`] : []), ...(((_f = options === null || options === undefined ? undefined : options.signInWithSolana) === null || _f === undefined ? undefined : _f.chainId) ? [`Chain ID: ${options.signInWithSolana.chainId}`] : []), ...(((_g = options === null || options === undefined ? undefined : options.signInWithSolana) === null || _g === undefined ? undefined : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []), ...(((_h = options === null || options === undefined ? undefined : options.signInWithSolana) === null || _h === undefined ? undefined : _h.requestId) ? [`Request ID: ${options.signInWithSolana.requestId}`] : []), ...(((_k = (_j = options === null || options === undefined ? undefined : options.signInWithSolana) === null || _j === undefined ? undefined : _j.resources) === null || _k === undefined ? undefined : _k.length) ? ['Resources', ...options.signInWithSolana.resources.map(resource => `- ${resource}`)] : [])].join('\\n');\n              var maybeSignature = yield resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\n              if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\n                throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\n              }\n              signature = maybeSignature;\n            }\n          }\n          try {\n            var _yield3 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n                headers: this.headers,\n                body: Object.assign({\n                  chain: 'solana',\n                  message,\n                  signature: (0, base64url_1.bytesToBase64URL)(signature)\n                }, ((_l = credentials.options) === null || _l === undefined ? undefined : _l.captchaToken) ? {\n                  gotrue_meta_security: {\n                    captcha_token: (_m = credentials.options) === null || _m === undefined ? undefined : _m.captchaToken\n                  }\n                } : null),\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield3.data,\n              error = _yield3.error;\n            if (error) {\n              throw error;\n            }\n            if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign({}, data),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithSolana(_x1) {\n          return _signInWithSolana.apply(this, arguments);\n        }\n        return signInWithSolana;\n      }()\n    }, {\n      key: \"_exchangeCodeForSession\",\n      value: function () {\n        var _exchangeCodeForSession3 = _asyncToGenerator(function* (authCode) {\n          var storageItem = yield (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          var _split = (storageItem !== null && storageItem !== undefined ? storageItem : '').split('/'),\n            _split2 = _slicedToArray(_split, 2),\n            codeVerifier = _split2[0],\n            redirectType = _split2[1];\n          try {\n            var _yield4 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n                headers: this.headers,\n                body: {\n                  auth_code: authCode,\n                  code_verifier: codeVerifier\n                },\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield4.data,\n              error = _yield4.error;\n            yield (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n            if (error) {\n              throw error;\n            }\n            if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  redirectType: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign(Object.assign({}, data), {\n                redirectType: redirectType !== null && redirectType !== undefined ? redirectType : null\n              }),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  redirectType: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _exchangeCodeForSession(_x10) {\n          return _exchangeCodeForSession3.apply(this, arguments);\n        }\n        return _exchangeCodeForSession;\n      }()\n      /**\n       * Allows signing in with an OIDC ID token. The authentication provider used\n       * should be enabled and configured.\n       */\n    }, {\n      key: \"signInWithIdToken\",\n      value: (function () {\n        var _signInWithIdToken = _asyncToGenerator(function* (credentials) {\n          try {\n            var options = credentials.options,\n              provider = credentials.provider,\n              token = credentials.token,\n              access_token = credentials.access_token,\n              nonce = credentials.nonce;\n            var res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n              headers: this.headers,\n              body: {\n                provider,\n                id_token: token,\n                access_token,\n                nonce,\n                gotrue_meta_security: {\n                  captcha_token: options === null || options === undefined ? undefined : options.captchaToken\n                }\n              },\n              xform: fetch_1._sessionResponse\n            });\n            var data = res.data,\n              error = res.error;\n            if (error) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            } else if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data,\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithIdToken(_x11) {\n          return _signInWithIdToken.apply(this, arguments);\n        }\n        return signInWithIdToken;\n      }()\n      /**\n       * Log in a user using magiclink or a one-time password (OTP).\n       *\n       * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n       * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n       * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n       *\n       * Be aware that you may get back an error message that will not distinguish\n       * between the cases where the account does not exist or, that the account\n       * can only be accessed via social login.\n       *\n       * Do note that you will need to configure a Whatsapp sender on Twilio\n       * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n       * channel is not supported on other providers\n       * at this time.\n       * This method supports PKCE when an email is passed.\n       */\n      )\n    }, {\n      key: \"signInWithOtp\",\n      value: (function () {\n        var _signInWithOtp = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d, _e;\n          try {\n            if ('email' in credentials) {\n              var email = credentials.email,\n                options = credentials.options;\n              var codeChallenge = null;\n              var codeChallengeMethod = null;\n              if (this.flowType === 'pkce') {\n                ;\n                var _yield5 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                var _yield6 = _slicedToArray(_yield5, 2);\n                codeChallenge = _yield6[0];\n                codeChallengeMethod = _yield6[1];\n              }\n              var _yield7 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                  headers: this.headers,\n                  body: {\n                    email,\n                    data: (_a = options === null || options === undefined ? undefined : options.data) !== null && _a !== undefined ? _a : {},\n                    create_user: (_b = options === null || options === undefined ? undefined : options.shouldCreateUser) !== null && _b !== undefined ? _b : true,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === undefined ? undefined : options.captchaToken\n                    },\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod\n                  },\n                  redirectTo: options === null || options === undefined ? undefined : options.emailRedirectTo\n                }),\n                error = _yield7.error;\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _options3 = credentials.options;\n              var _yield8 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                  headers: this.headers,\n                  body: {\n                    phone,\n                    data: (_c = _options3 === null || _options3 === undefined ? undefined : _options3.data) !== null && _c !== undefined ? _c : {},\n                    create_user: (_d = _options3 === null || _options3 === undefined ? undefined : _options3.shouldCreateUser) !== null && _d !== undefined ? _d : true,\n                    gotrue_meta_security: {\n                      captcha_token: _options3 === null || _options3 === undefined ? undefined : _options3.captchaToken\n                    },\n                    channel: (_e = _options3 === null || _options3 === undefined ? undefined : _options3.channel) !== null && _e !== undefined ? _e : 'sms'\n                  }\n                }),\n                data = _yield8.data,\n                _error = _yield8.error;\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === undefined ? undefined : data.message_id\n                },\n                error: _error\n              };\n            }\n            throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number.');\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithOtp(_x12) {\n          return _signInWithOtp.apply(this, arguments);\n        }\n        return signInWithOtp;\n      }()\n      /**\n       * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n       */\n      )\n    }, {\n      key: \"verifyOtp\",\n      value: (function () {\n        var _verifyOtp = _asyncToGenerator(function* (params) {\n          var _a, _b;\n          try {\n            var redirectTo = undefined;\n            var captchaToken = undefined;\n            if ('options' in params) {\n              redirectTo = (_a = params.options) === null || _a === undefined ? undefined : _a.redirectTo;\n              captchaToken = (_b = params.options) === null || _b === undefined ? undefined : _b.captchaToken;\n            }\n            var _yield9 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/verify`, {\n                headers: this.headers,\n                body: Object.assign(Object.assign({}, params), {\n                  gotrue_meta_security: {\n                    captcha_token: captchaToken\n                  }\n                }),\n                redirectTo,\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield9.data,\n              error = _yield9.error;\n            if (error) {\n              throw error;\n            }\n            if (!data) {\n              throw new Error('An error occurred on token verification.');\n            }\n            var session = data.session;\n            var user = data.user;\n            if (session === null || session === undefined ? undefined : session.access_token) {\n              yield this._saveSession(session);\n              yield this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function verifyOtp(_x13) {\n          return _verifyOtp.apply(this, arguments);\n        }\n        return verifyOtp;\n      }()\n      /**\n       * Attempts a single-sign on using an enterprise Identity Provider. A\n       * successful SSO attempt will redirect the current page to the identity\n       * provider authorization page. The redirect URL is implementation and SSO\n       * protocol specific.\n       *\n       * You can use it by providing a SSO domain. Typically you can extract this\n       * domain by asking users for their email address. If this domain is\n       * registered on the Auth instance the redirect will use that organization's\n       * currently active SSO Identity Provider for the login.\n       *\n       * If you have built an organization-specific login page, you can use the\n       * organization's SSO Identity Provider UUID directly instead.\n       */\n      )\n    }, {\n      key: \"signInWithSSO\",\n      value: (function () {\n        var _signInWithSSO = _asyncToGenerator(function* (params) {\n          var _a, _b, _c;\n          try {\n            var codeChallenge = null;\n            var codeChallengeMethod = null;\n            if (this.flowType === 'pkce') {\n              ;\n              var _yield0 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n              var _yield1 = _slicedToArray(_yield0, 2);\n              codeChallenge = _yield1[0];\n              codeChallengeMethod = _yield1[1];\n            }\n            return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/sso`, {\n              body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, 'providerId' in params ? {\n                provider_id: params.providerId\n              } : null), 'domain' in params ? {\n                domain: params.domain\n              } : null), {\n                redirect_to: (_b = (_a = params.options) === null || _a === undefined ? undefined : _a.redirectTo) !== null && _b !== undefined ? _b : undefined\n              }), ((_c = params === null || params === undefined ? undefined : params.options) === null || _c === undefined ? undefined : _c.captchaToken) ? {\n                gotrue_meta_security: {\n                  captcha_token: params.options.captchaToken\n                }\n              } : null), {\n                skip_http_redirect: true,\n                code_challenge: codeChallenge,\n                code_challenge_method: codeChallengeMethod\n              }),\n              headers: this.headers,\n              xform: fetch_1._ssoResponse\n            });\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithSSO(_x14) {\n          return _signInWithSSO.apply(this, arguments);\n        }\n        return signInWithSSO;\n      }()\n      /**\n       * Sends a reauthentication OTP to the user's email or phone number.\n       * Requires the user to be signed-in.\n       */\n      )\n    }, {\n      key: \"reauthenticate\",\n      value: (function () {\n        var _reauthenticate2 = _asyncToGenerator(function* () {\n          var _this5 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this5._reauthenticate();\n          }));\n        });\n        function reauthenticate() {\n          return _reauthenticate2.apply(this, arguments);\n        }\n        return reauthenticate;\n      }())\n    }, {\n      key: \"_reauthenticate\",\n      value: function () {\n        var _reauthenticate3 = _asyncToGenerator(function* () {\n          var _this6 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator(function* (result) {\n                var session = result.data.session,\n                  sessionError = result.error;\n                if (sessionError) throw sessionError;\n                if (!session) throw new errors_1.AuthSessionMissingError();\n                var _yield10 = yield (0, fetch_1._request)(_this6.fetch, 'GET', `${_this6.url}/reauthenticate`, {\n                    headers: _this6.headers,\n                    jwt: session.access_token\n                  }),\n                  error = _yield10.error;\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error\n                };\n              });\n              return function (_x15) {\n                return _ref7.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _reauthenticate() {\n          return _reauthenticate3.apply(this, arguments);\n        }\n        return _reauthenticate;\n      }()\n      /**\n       * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n       */\n    }, {\n      key: \"resend\",\n      value: (function () {\n        var _resend = _asyncToGenerator(function* (credentials) {\n          try {\n            var endpoint = `${this.url}/resend`;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                type = credentials.type,\n                options = credentials.options;\n              var _yield11 = yield (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n                  headers: this.headers,\n                  body: {\n                    email,\n                    type,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === undefined ? undefined : options.captchaToken\n                    }\n                  },\n                  redirectTo: options === null || options === undefined ? undefined : options.emailRedirectTo\n                }),\n                error = _yield11.error;\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _type = credentials.type,\n                _options4 = credentials.options;\n              var _yield12 = yield (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n                  headers: this.headers,\n                  body: {\n                    phone,\n                    type: _type,\n                    gotrue_meta_security: {\n                      captcha_token: _options4 === null || _options4 === undefined ? undefined : _options4.captchaToken\n                    }\n                  }\n                }),\n                data = _yield12.data,\n                _error2 = _yield12.error;\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === undefined ? undefined : data.message_id\n                },\n                error: _error2\n              };\n            }\n            throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function resend(_x16) {\n          return _resend.apply(this, arguments);\n        }\n        return resend;\n      }()\n      /**\n       * Returns the session, refreshing it if necessary.\n       *\n       * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n       *\n       * **IMPORTANT:** This method loads values directly from the storage attached\n       * to the client. If that storage is based on request cookies for example,\n       * the values in it may not be authentic and therefore it's strongly advised\n       * against using this method and its results in such circumstances. A warning\n       * will be emitted if this is detected. Use {@link #getUser()} instead.\n       */\n      )\n    }, {\n      key: \"getSession\",\n      value: (function () {\n        var _getSession = _asyncToGenerator(function* () {\n          var _this7 = this;\n          yield this.initializePromise;\n          var result = yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return _this7._useSession(/*#__PURE__*/function () {\n              var _ref9 = _asyncToGenerator(function* (result) {\n                return result;\n              });\n              return function (_x17) {\n                return _ref9.apply(this, arguments);\n              };\n            }());\n          }));\n          return result;\n        });\n        function getSession() {\n          return _getSession.apply(this, arguments);\n        }\n        return getSession;\n      }()\n      /**\n       * Acquires a global lock based on the storage key.\n       */\n      )\n    }, {\n      key: \"_acquireLock\",\n      value: (function () {\n        var _acquireLock2 = _asyncToGenerator(function* (acquireTimeout, fn) {\n          var _this8 = this;\n          this._debug('#_acquireLock', 'begin', acquireTimeout);\n          try {\n            if (this.lockAcquired) {\n              var last = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve();\n              var result = _asyncToGenerator(function* () {\n                yield last;\n                return yield fn();\n              })();\n              this.pendingInLock.push(_asyncToGenerator(function* () {\n                try {\n                  yield result;\n                } catch (e) {\n                  // we just care if it finished\n                }\n              })());\n              return result;\n            }\n            return yield this.lock(`lock:${this.storageKey}`, acquireTimeout, /*#__PURE__*/_asyncToGenerator(function* () {\n              _this8._debug('#_acquireLock', 'lock acquired for storage key', _this8.storageKey);\n              try {\n                _this8.lockAcquired = true;\n                var _result = fn();\n                _this8.pendingInLock.push(_asyncToGenerator(function* () {\n                  try {\n                    yield _result;\n                  } catch (e) {\n                    // we just care if it finished\n                  }\n                })());\n                yield _result;\n                // keep draining the queue until there's nothing to wait on\n                while (_this8.pendingInLock.length) {\n                  var waitOn = [..._this8.pendingInLock];\n                  yield Promise.all(waitOn);\n                  _this8.pendingInLock.splice(0, waitOn.length);\n                }\n                return yield _result;\n              } finally {\n                _this8._debug('#_acquireLock', 'lock released for storage key', _this8.storageKey);\n                _this8.lockAcquired = false;\n              }\n            }));\n          } finally {\n            this._debug('#_acquireLock', 'end');\n          }\n        });\n        function _acquireLock(_x18, _x19) {\n          return _acquireLock2.apply(this, arguments);\n        }\n        return _acquireLock;\n      }()\n      /**\n       * Use instead of {@link #getSession} inside the library. It is\n       * semantically usually what you want, as getting a session involves some\n       * processing afterwards that requires only one client operating on the\n       * session at once across multiple tabs or processes.\n       */\n      )\n    }, {\n      key: \"_useSession\",\n      value: (function () {\n        var _useSession2 = _asyncToGenerator(function* (fn) {\n          this._debug('#_useSession', 'begin');\n          try {\n            // the use of __loadSession here is the only correct use of the function!\n            var result = yield this.__loadSession();\n            return yield fn(result);\n          } finally {\n            this._debug('#_useSession', 'end');\n          }\n        });\n        function _useSession(_x20) {\n          return _useSession2.apply(this, arguments);\n        }\n        return _useSession;\n      }()\n      /**\n       * NEVER USE DIRECTLY!\n       *\n       * Always use {@link #_useSession}.\n       */\n      )\n    }, {\n      key: \"__loadSession\",\n      value: (function () {\n        var _loadSession = _asyncToGenerator(function* () {\n          this._debug('#__loadSession()', 'begin');\n          if (!this.lockAcquired) {\n            this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n          }\n          try {\n            var currentSession = null;\n            var maybeSession = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n            this._debug('#getSession()', 'session from storage', maybeSession);\n            if (maybeSession !== null) {\n              if (this._isValidSession(maybeSession)) {\n                currentSession = maybeSession;\n              } else {\n                this._debug('#getSession()', 'session from storage is not valid');\n                yield this._removeSession();\n              }\n            }\n            if (!currentSession) {\n              return {\n                data: {\n                  session: null\n                },\n                error: null\n              };\n            }\n            // A session is considered expired before the access token _actually_\n            // expires. When the autoRefreshToken option is off (or when the tab is\n            // in the background), very eager users of getSession() -- like\n            // realtime-js -- might send a valid JWT which will expire by the time it\n            // reaches the server.\n            var hasExpired = currentSession.expires_at ? currentSession.expires_at * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS : false;\n            this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\n            if (!hasExpired) {\n              if (this.userStorage) {\n                var maybeUser = yield (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n                if (maybeUser === null || maybeUser === undefined ? undefined : maybeUser.user) {\n                  currentSession.user = maybeUser.user;\n                } else {\n                  currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n                }\n              }\n              if (this.storage.isServer && currentSession.user) {\n                var suppressWarning = this.suppressGetSessionWarning;\n                var proxySession = new Proxy(currentSession, {\n                  get: (target, prop, receiver) => {\n                    if (!suppressWarning && prop === 'user') {\n                      // only show warning when the user object is being accessed from the server\n\n                      suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                      this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                    }\n                    return Reflect.get(target, prop, receiver);\n                  }\n                });\n                currentSession = proxySession;\n              }\n              return {\n                data: {\n                  session: currentSession\n                },\n                error: null\n              };\n            }\n            var _yield$this$_callRefr = yield this._callRefreshToken(currentSession.refresh_token),\n              session = _yield$this$_callRefr.session,\n              error = _yield$this$_callRefr.error;\n            if (error) {\n              return {\n                data: {\n                  session: null\n                },\n                error\n              };\n            }\n            return {\n              data: {\n                session\n              },\n              error: null\n            };\n          } finally {\n            this._debug('#__loadSession()', 'end');\n          }\n        });\n        function __loadSession() {\n          return _loadSession.apply(this, arguments);\n        }\n        return __loadSession;\n      }()\n      /**\n       * Gets the current user details if there is an existing session. This method\n       * performs a network request to the Supabase Auth server, so the returned\n       * value is authentic and can be used to base authorization rules on.\n       *\n       * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n       */\n      )\n    }, {\n      key: \"getUser\",\n      value: (function () {\n        var _getUser2 = _asyncToGenerator(function* (jwt) {\n          var _this9 = this;\n          if (jwt) {\n            return yield this._getUser(jwt);\n          }\n          yield this.initializePromise;\n          var result = yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this9._getUser();\n          }));\n          return result;\n        });\n        function getUser(_x21) {\n          return _getUser2.apply(this, arguments);\n        }\n        return getUser;\n      }())\n    }, {\n      key: \"_getUser\",\n      value: function () {\n        var _getUser3 = _asyncToGenerator(function* (jwt) {\n          var _this0 = this;\n          try {\n            if (jwt) {\n              return yield (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/user`, {\n                headers: this.headers,\n                jwt: jwt,\n                xform: fetch_1._userResponse\n              });\n            }\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref13 = _asyncToGenerator(function* (result) {\n                var _a, _b, _c;\n                var data = result.data,\n                  error = result.error;\n                if (error) {\n                  throw error;\n                }\n                // returns an error if there is no access_token or custom authorization header\n                if (!((_a = data.session) === null || _a === undefined ? undefined : _a.access_token) && !_this0.hasCustomAuthorizationHeader) {\n                  return {\n                    data: {\n                      user: null\n                    },\n                    error: new errors_1.AuthSessionMissingError()\n                  };\n                }\n                return yield (0, fetch_1._request)(_this0.fetch, 'GET', `${_this0.url}/user`, {\n                  headers: _this0.headers,\n                  jwt: (_c = (_b = data.session) === null || _b === undefined ? undefined : _b.access_token) !== null && _c !== undefined ? _c : undefined,\n                  xform: fetch_1._userResponse\n                });\n              });\n              return function (_x23) {\n                return _ref13.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              if ((0, errors_1.isAuthSessionMissingError)(error)) {\n                // JWT contains a `session_id` which does not correspond to an active\n                // session in the database, indicating the user is signed out.\n                yield this._removeSession();\n                yield (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n              }\n              return {\n                data: {\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _getUser(_x22) {\n          return _getUser3.apply(this, arguments);\n        }\n        return _getUser;\n      }()\n      /**\n       * Updates user data for a logged in user.\n       */\n    }, {\n      key: \"updateUser\",\n      value: (function () {\n        var _updateUser2 = _asyncToGenerator(function* (attributes) {\n          var _this1 = this;\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this1._updateUser(attributes, options);\n          }));\n        });\n        function updateUser(_x24) {\n          return _updateUser2.apply(this, arguments);\n        }\n        return updateUser;\n      }())\n    }, {\n      key: \"_updateUser\",\n      value: function () {\n        var _updateUser3 = _asyncToGenerator(function* (attributes) {\n          var _this10 = this;\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref15 = _asyncToGenerator(function* (result) {\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  throw sessionError;\n                }\n                if (!sessionData.session) {\n                  throw new errors_1.AuthSessionMissingError();\n                }\n                var session = sessionData.session;\n                var codeChallenge = null;\n                var codeChallengeMethod = null;\n                if (_this10.flowType === 'pkce' && attributes.email != null) {\n                  ;\n                  var _yield13 = yield (0, helpers_1.getCodeChallengeAndMethod)(_this10.storage, _this10.storageKey);\n                  var _yield14 = _slicedToArray(_yield13, 2);\n                  codeChallenge = _yield14[0];\n                  codeChallengeMethod = _yield14[1];\n                }\n                var _yield15 = yield (0, fetch_1._request)(_this10.fetch, 'PUT', `${_this10.url}/user`, {\n                    headers: _this10.headers,\n                    redirectTo: options === null || options === undefined ? undefined : options.emailRedirectTo,\n                    body: Object.assign(Object.assign({}, attributes), {\n                      code_challenge: codeChallenge,\n                      code_challenge_method: codeChallengeMethod\n                    }),\n                    jwt: session.access_token,\n                    xform: fetch_1._userResponse\n                  }),\n                  data = _yield15.data,\n                  userError = _yield15.error;\n                if (userError) throw userError;\n                session.user = data.user;\n                yield _this10._saveSession(session);\n                yield _this10._notifyAllSubscribers('USER_UPDATED', session);\n                return {\n                  data: {\n                    user: session.user\n                  },\n                  error: null\n                };\n              });\n              return function (_x26) {\n                return _ref15.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _updateUser(_x25) {\n          return _updateUser3.apply(this, arguments);\n        }\n        return _updateUser;\n      }()\n      /**\n       * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n       * If the refresh token or access token in the current session is invalid, an error will be thrown.\n       * @param currentSession The current session that minimally contains an access token and refresh token.\n       */\n    }, {\n      key: \"setSession\",\n      value: (function () {\n        var _setSession2 = _asyncToGenerator(function* (currentSession) {\n          var _this11 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this11._setSession(currentSession);\n          }));\n        });\n        function setSession(_x27) {\n          return _setSession2.apply(this, arguments);\n        }\n        return setSession;\n      }())\n    }, {\n      key: \"_setSession\",\n      value: function () {\n        var _setSession3 = _asyncToGenerator(function* (currentSession) {\n          try {\n            if (!currentSession.access_token || !currentSession.refresh_token) {\n              throw new errors_1.AuthSessionMissingError();\n            }\n            var timeNow = Date.now() / 1000;\n            var expiresAt = timeNow;\n            var hasExpired = true;\n            var session = null;\n            var _ref17 = (0, helpers_1.decodeJWT)(currentSession.access_token),\n              payload = _ref17.payload;\n            if (payload.exp) {\n              expiresAt = payload.exp;\n              hasExpired = expiresAt <= timeNow;\n            }\n            if (hasExpired) {\n              var _yield$this$_callRefr2 = yield this._callRefreshToken(currentSession.refresh_token),\n                refreshedSession = _yield$this$_callRefr2.session,\n                error = _yield$this$_callRefr2.error;\n              if (error) {\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: error\n                };\n              }\n              if (!refreshedSession) {\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: null\n                };\n              }\n              session = refreshedSession;\n            } else {\n              var _yield$this$_getUser = yield this._getUser(currentSession.access_token),\n                data = _yield$this$_getUser.data,\n                _error3 = _yield$this$_getUser.error;\n              if (_error3) {\n                throw _error3;\n              }\n              session = {\n                access_token: currentSession.access_token,\n                refresh_token: currentSession.refresh_token,\n                user: data.user,\n                token_type: 'bearer',\n                expires_in: expiresAt - timeNow,\n                expires_at: expiresAt\n              };\n              yield this._saveSession(session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user: session.user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _setSession(_x28) {\n          return _setSession3.apply(this, arguments);\n        }\n        return _setSession;\n      }()\n      /**\n       * Returns a new session, regardless of expiry status.\n       * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n       * If the current session's refresh token is invalid, an error will be thrown.\n       * @param currentSession The current session. If passed in, it must contain a refresh token.\n       */\n    }, {\n      key: \"refreshSession\",\n      value: (function () {\n        var _refreshSession2 = _asyncToGenerator(function* (currentSession) {\n          var _this12 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this12._refreshSession(currentSession);\n          }));\n        });\n        function refreshSession(_x29) {\n          return _refreshSession2.apply(this, arguments);\n        }\n        return refreshSession;\n      }())\n    }, {\n      key: \"_refreshSession\",\n      value: function () {\n        var _refreshSession3 = _asyncToGenerator(function* (currentSession) {\n          var _this13 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref19 = _asyncToGenerator(function* (result) {\n                var _a;\n                if (!currentSession) {\n                  var data = result.data,\n                    _error4 = result.error;\n                  if (_error4) {\n                    throw _error4;\n                  }\n                  currentSession = (_a = data.session) !== null && _a !== undefined ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === undefined ? undefined : currentSession.refresh_token)) {\n                  throw new errors_1.AuthSessionMissingError();\n                }\n                var _yield$_this13$_callR = yield _this13._callRefreshToken(currentSession.refresh_token),\n                  session = _yield$_this13$_callR.session,\n                  error = _yield$_this13$_callR.error;\n                if (error) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error: error\n                  };\n                }\n                if (!session) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error: null\n                  };\n                }\n                return {\n                  data: {\n                    user: session.user,\n                    session\n                  },\n                  error: null\n                };\n              });\n              return function (_x31) {\n                return _ref19.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _refreshSession(_x30) {\n          return _refreshSession3.apply(this, arguments);\n        }\n        return _refreshSession;\n      }()\n      /**\n       * Gets the session data from a URL string\n       */\n    }, {\n      key: \"_getSessionFromURL\",\n      value: (function () {\n        var _getSessionFromURL2 = _asyncToGenerator(function* (params, callbackUrlType) {\n          try {\n            if (!(0, helpers_1.isBrowser)()) throw new errors_1.AuthImplicitGrantRedirectError('No browser detected.');\n            // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n            if (params.error || params.error_description || params.error_code) {\n              // The error class returned implies that the redirect is from an implicit grant flow\n              // but it could also be from a redirect error from a PKCE flow.\n              throw new errors_1.AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n                error: params.error || 'unspecified_error',\n                code: params.error_code || 'unspecified_code'\n              });\n            }\n            // Checks for mismatches between the flowType initialised in the client and the URL parameters\n            switch (callbackUrlType) {\n              case 'implicit':\n                if (this.flowType === 'pkce') {\n                  throw new errors_1.AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n                }\n                break;\n              case 'pkce':\n                if (this.flowType === 'implicit') {\n                  throw new errors_1.AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                }\n                break;\n              default:\n              // there's no mismatch so we continue\n            }\n            // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n            if (callbackUrlType === 'pkce') {\n              this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\n              if (!params.code) throw new errors_1.AuthPKCEGrantCodeExchangeError('No code detected.');\n              var _yield$this$_exchange = yield this._exchangeCodeForSession(params.code),\n                _data = _yield$this$_exchange.data,\n                _error5 = _yield$this$_exchange.error;\n              if (_error5) throw _error5;\n              var url = new URL(window.location.href);\n              url.searchParams.delete('code');\n              window.history.replaceState(window.history.state, '', url.toString());\n              return {\n                data: {\n                  session: _data.session,\n                  redirectType: null\n                },\n                error: null\n              };\n            }\n            var provider_token = params.provider_token,\n              provider_refresh_token = params.provider_refresh_token,\n              access_token = params.access_token,\n              refresh_token = params.refresh_token,\n              expires_in = params.expires_in,\n              expires_at = params.expires_at,\n              token_type = params.token_type;\n            if (!access_token || !expires_in || !refresh_token || !token_type) {\n              throw new errors_1.AuthImplicitGrantRedirectError('No session defined in URL');\n            }\n            var timeNow = Math.round(Date.now() / 1000);\n            var expiresIn = parseInt(expires_in);\n            var expiresAt = timeNow + expiresIn;\n            if (expires_at) {\n              expiresAt = parseInt(expires_at);\n            }\n            var actuallyExpiresIn = expiresAt - timeNow;\n            if (actuallyExpiresIn * 1000 <= constants_1.AUTO_REFRESH_TICK_DURATION_MS) {}\n            var issuedAt = expiresAt - expiresIn;\n            if (timeNow - issuedAt >= 120) {} else if (timeNow - issuedAt < 0) {}\n            var _yield$this$_getUser2 = yield this._getUser(access_token),\n              data = _yield$this$_getUser2.data,\n              error = _yield$this$_getUser2.error;\n            if (error) throw error;\n            var session = {\n              provider_token,\n              provider_refresh_token,\n              access_token,\n              expires_in: expiresIn,\n              expires_at: expiresAt,\n              refresh_token,\n              token_type,\n              user: data.user\n            };\n            // Remove tokens from URL\n            window.location.hash = '';\n            this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n            return {\n              data: {\n                session,\n                redirectType: params.type\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  redirectType: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _getSessionFromURL(_x32, _x33) {\n          return _getSessionFromURL2.apply(this, arguments);\n        }\n        return _getSessionFromURL;\n      }()\n      /**\n       * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n       */\n      )\n    }, {\n      key: \"_isImplicitGrantCallback\",\n      value: function _isImplicitGrantCallback(params) {\n        return Boolean(params.access_token || params.error_description);\n      }\n      /**\n       * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n       */\n    }, {\n      key: \"_isPKCECallback\",\n      value: (function () {\n        var _isPKCECallback2 = _asyncToGenerator(function* (params) {\n          var currentStorageContent = yield (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          return !!(params.code && currentStorageContent);\n        });\n        function _isPKCECallback(_x34) {\n          return _isPKCECallback2.apply(this, arguments);\n        }\n        return _isPKCECallback;\n      }()\n      /**\n       * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n       *\n       * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n       * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n       *\n       * If using `others` scope, no `SIGNED_OUT` event is fired!\n       */\n      )\n    }, {\n      key: \"signOut\",\n      value: (function () {\n        var _signOut2 = _asyncToGenerator(function* () {\n          var _this14 = this;\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n            scope: 'global'\n          };\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this14._signOut(options);\n          }));\n        });\n        function signOut() {\n          return _signOut2.apply(this, arguments);\n        }\n        return signOut;\n      }())\n    }, {\n      key: \"_signOut\",\n      value: function () {\n        var _signOut3 = _asyncToGenerator(function* () {\n          var _this15 = this;\n          var _ref21 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n              scope: 'global'\n            },\n            scope = _ref21.scope;\n          return yield this._useSession(/*#__PURE__*/function () {\n            var _ref22 = _asyncToGenerator(function* (result) {\n              var _a;\n              var data = result.data,\n                sessionError = result.error;\n              if (sessionError) {\n                return {\n                  error: sessionError\n                };\n              }\n              var accessToken = (_a = data.session) === null || _a === undefined ? undefined : _a.access_token;\n              if (accessToken) {\n                var _yield$_this15$admin$ = yield _this15.admin.signOut(accessToken, scope),\n                  error = _yield$_this15$admin$.error;\n                if (error) {\n                  // ignore 404s since user might not exist anymore\n                  // ignore 401s since an invalid or expired JWT should sign out the current session\n                  if (!((0, errors_1.isAuthApiError)(error) && (error.status === 404 || error.status === 401 || error.status === 403))) {\n                    return {\n                      error\n                    };\n                  }\n                }\n              }\n              if (scope !== 'others') {\n                yield _this15._removeSession();\n                yield (0, helpers_1.removeItemAsync)(_this15.storage, `${_this15.storageKey}-code-verifier`);\n              }\n              return {\n                error: null\n              };\n            });\n            return function (_x35) {\n              return _ref22.apply(this, arguments);\n            };\n          }());\n        });\n        function _signOut() {\n          return _signOut3.apply(this, arguments);\n        }\n        return _signOut;\n      }()\n      /**\n       * Receive a notification every time an auth event happens.\n       * @param callback A callback function to be invoked when an auth event happens.\n       */\n    }, {\n      key: \"onAuthStateChange\",\n      value: function onAuthStateChange(callback) {\n        var _this16 = this;\n        var id = (0, helpers_1.uuid)();\n        var subscription = {\n          id,\n          callback,\n          unsubscribe: () => {\n            this._debug('#unsubscribe()', 'state change callback with id removed', id);\n            this.stateChangeEmitters.delete(id);\n          }\n        };\n        this._debug('#onAuthStateChange()', 'registered callback with id', id);\n        this.stateChangeEmitters.set(id, subscription);\n        _asyncToGenerator(function* () {\n          yield _this16.initializePromise;\n          yield _this16._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            _this16._emitInitialSession(id);\n          }));\n        })();\n        return {\n          data: {\n            subscription\n          }\n        };\n      }\n    }, {\n      key: \"_emitInitialSession\",\n      value: function () {\n        var _emitInitialSession2 = _asyncToGenerator(function* (id) {\n          var _this17 = this;\n          return yield this._useSession(/*#__PURE__*/function () {\n            var _ref25 = _asyncToGenerator(function* (result) {\n              var _a, _b;\n              try {\n                var session = result.data.session,\n                  error = result.error;\n                if (error) throw error;\n                yield (_a = _this17.stateChangeEmitters.get(id)) === null || _a === undefined ? undefined : _a.callback('INITIAL_SESSION', session);\n                _this17._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n              } catch (err) {\n                yield (_b = _this17.stateChangeEmitters.get(id)) === null || _b === undefined ? undefined : _b.callback('INITIAL_SESSION', null);\n                _this17._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\n              }\n            });\n            return function (_x37) {\n              return _ref25.apply(this, arguments);\n            };\n          }());\n        });\n        function _emitInitialSession(_x36) {\n          return _emitInitialSession2.apply(this, arguments);\n        }\n        return _emitInitialSession;\n      }()\n      /**\n       * Sends a password reset request to an email address. This method supports the PKCE flow.\n       *\n       * @param email The email address of the user.\n       * @param options.redirectTo The URL to send the user to after they click the password reset link.\n       * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n       */\n    }, {\n      key: \"resetPasswordForEmail\",\n      value: (function () {\n        var _resetPasswordForEmail = _asyncToGenerator(function* (email) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          var codeChallenge = null;\n          var codeChallengeMethod = null;\n          if (this.flowType === 'pkce') {\n            ;\n            var _yield16 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey, true // isPasswordRecovery\n            );\n            var _yield17 = _slicedToArray(_yield16, 2);\n            codeChallenge = _yield17[0];\n            codeChallengeMethod = _yield17[1];\n          }\n          try {\n            return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/recover`, {\n              body: {\n                email,\n                code_challenge: codeChallenge,\n                code_challenge_method: codeChallengeMethod,\n                gotrue_meta_security: {\n                  captcha_token: options.captchaToken\n                }\n              },\n              headers: this.headers,\n              redirectTo: options.redirectTo\n            });\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function resetPasswordForEmail(_x38) {\n          return _resetPasswordForEmail.apply(this, arguments);\n        }\n        return resetPasswordForEmail;\n      }()\n      /**\n       * Gets all the identities linked to a user.\n       */\n      )\n    }, {\n      key: \"getUserIdentities\",\n      value: (function () {\n        var _getUserIdentities = _asyncToGenerator(function* () {\n          var _a;\n          try {\n            var _yield$this$getUser = yield this.getUser(),\n              data = _yield$this$getUser.data,\n              error = _yield$this$getUser.error;\n            if (error) throw error;\n            return {\n              data: {\n                identities: (_a = data.user.identities) !== null && _a !== undefined ? _a : []\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function getUserIdentities() {\n          return _getUserIdentities.apply(this, arguments);\n        }\n        return getUserIdentities;\n      }()\n      /**\n       * Links an oauth identity to an existing user.\n       * This method supports the PKCE flow.\n       */\n      )\n    }, {\n      key: \"linkIdentity\",\n      value: (function () {\n        var _linkIdentity = _asyncToGenerator(function* (credentials) {\n          var _this18 = this;\n          var _a;\n          try {\n            var _yield$this$_useSessi = yield this._useSession(/*#__PURE__*/function () {\n                var _ref26 = _asyncToGenerator(function* (result) {\n                  var _a, _b, _c, _d, _e;\n                  var data = result.data,\n                    error = result.error;\n                  if (error) throw error;\n                  var url = yield _this18._getUrlForProvider(`${_this18.url}/user/identities/authorize`, credentials.provider, {\n                    redirectTo: (_a = credentials.options) === null || _a === undefined ? undefined : _a.redirectTo,\n                    scopes: (_b = credentials.options) === null || _b === undefined ? undefined : _b.scopes,\n                    queryParams: (_c = credentials.options) === null || _c === undefined ? undefined : _c.queryParams,\n                    skipBrowserRedirect: true\n                  });\n                  return yield (0, fetch_1._request)(_this18.fetch, 'GET', url, {\n                    headers: _this18.headers,\n                    jwt: (_e = (_d = data.session) === null || _d === undefined ? undefined : _d.access_token) !== null && _e !== undefined ? _e : undefined\n                  });\n                });\n                return function (_x40) {\n                  return _ref26.apply(this, arguments);\n                };\n              }()),\n              data = _yield$this$_useSessi.data,\n              error = _yield$this$_useSessi.error;\n            if (error) throw error;\n            if ((0, helpers_1.isBrowser)() && !((_a = credentials.options) === null || _a === undefined ? undefined : _a.skipBrowserRedirect)) {\n              window.location.assign(data === null || data === undefined ? undefined : data.url);\n            }\n            return {\n              data: {\n                provider: credentials.provider,\n                url: data === null || data === undefined ? undefined : data.url\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  provider: credentials.provider,\n                  url: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function linkIdentity(_x39) {\n          return _linkIdentity.apply(this, arguments);\n        }\n        return linkIdentity;\n      }()\n      /**\n       * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n       */\n      )\n    }, {\n      key: \"unlinkIdentity\",\n      value: (function () {\n        var _unlinkIdentity = _asyncToGenerator(function* (identity) {\n          var _this19 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref27 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var data = result.data,\n                  error = result.error;\n                if (error) {\n                  throw error;\n                }\n                return yield (0, fetch_1._request)(_this19.fetch, 'DELETE', `${_this19.url}/user/identities/${identity.identity_id}`, {\n                  headers: _this19.headers,\n                  jwt: (_b = (_a = data.session) === null || _a === undefined ? undefined : _a.access_token) !== null && _b !== undefined ? _b : undefined\n                });\n              });\n              return function (_x42) {\n                return _ref27.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function unlinkIdentity(_x41) {\n          return _unlinkIdentity.apply(this, arguments);\n        }\n        return unlinkIdentity;\n      }()\n      /**\n       * Generates a new JWT.\n       * @param refreshToken A valid refresh token that was returned on login.\n       */\n      )\n    }, {\n      key: \"_refreshAccessToken\",\n      value: (function () {\n        var _refreshAccessToken2 = _asyncToGenerator(function* (refreshToken) {\n          var _this20 = this;\n          var debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\n          this._debug(debugName, 'begin');\n          try {\n            var startedAt = Date.now();\n            // will attempt to refresh the token with exponential backoff\n            return yield (0, helpers_1.retryable)(/*#__PURE__*/function () {\n              var _ref28 = _asyncToGenerator(function* (attempt) {\n                if (attempt > 0) {\n                  yield (0, helpers_1.sleep)(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n                }\n                _this20._debug(debugName, 'refreshing attempt', attempt);\n                return yield (0, fetch_1._request)(_this20.fetch, 'POST', `${_this20.url}/token?grant_type=refresh_token`, {\n                  body: {\n                    refresh_token: refreshToken\n                  },\n                  headers: _this20.headers,\n                  xform: fetch_1._sessionResponse\n                });\n              });\n              return function (_x44) {\n                return _ref28.apply(this, arguments);\n              };\n            }(), (attempt, error) => {\n              var nextBackOffInterval = 200 * Math.pow(2, attempt);\n              return error && (0, errors_1.isAuthRetryableFetchError)(error) &&\n              // retryable only if the request can be sent before the backoff overflows the tick duration\n              Date.now() + nextBackOffInterval - startedAt < constants_1.AUTO_REFRESH_TICK_DURATION_MS;\n            });\n          } catch (error) {\n            this._debug(debugName, 'error', error);\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _refreshAccessToken(_x43) {\n          return _refreshAccessToken2.apply(this, arguments);\n        }\n        return _refreshAccessToken;\n      }())\n    }, {\n      key: \"_isValidSession\",\n      value: function _isValidSession(maybeSession) {\n        var isValidSession = typeof maybeSession === 'object' && maybeSession !== null && 'access_token' in maybeSession && 'refresh_token' in maybeSession && 'expires_at' in maybeSession;\n        return isValidSession;\n      }\n    }, {\n      key: \"_handleProviderSignIn\",\n      value: function () {\n        var _handleProviderSignIn2 = _asyncToGenerator(function* (provider, options) {\n          var url = yield this._getUrlForProvider(`${this.url}/authorize`, provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams\n          });\n          this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n          // try to open on the browser\n          if ((0, helpers_1.isBrowser)() && !options.skipBrowserRedirect) {\n            window.location.assign(url);\n          }\n          return {\n            data: {\n              provider,\n              url\n            },\n            error: null\n          };\n        });\n        function _handleProviderSignIn(_x45, _x46) {\n          return _handleProviderSignIn2.apply(this, arguments);\n        }\n        return _handleProviderSignIn;\n      }()\n      /**\n       * Recovers the session from LocalStorage and refreshes the token\n       * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n       */\n    }, {\n      key: \"_recoverAndRefresh\",\n      value: (function () {\n        var _recoverAndRefresh2 = _asyncToGenerator(function* () {\n          var _a, _b;\n          var debugName = '#_recoverAndRefresh()';\n          this._debug(debugName, 'begin');\n          try {\n            var currentSession = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n            if (currentSession && this.userStorage) {\n              var maybeUser = yield (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n              if (!this.storage.isServer && Object.is(this.storage, this.userStorage) && !maybeUser) {\n                // storage and userStorage are the same storage medium, for example\n                // window.localStorage if userStorage does not have the user from\n                // storage stored, store it first thereby migrating the user object\n                // from storage -> userStorage\n                maybeUser = {\n                  user: currentSession.user\n                };\n                yield (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', maybeUser);\n              }\n              currentSession.user = (_a = maybeUser === null || maybeUser === undefined ? undefined : maybeUser.user) !== null && _a !== undefined ? _a : (0, helpers_1.userNotAvailableProxy)();\n            } else if (currentSession && !currentSession.user) {\n              // user storage is not set, let's check if it was previously enabled so\n              // we bring back the storage as it should be\n              if (!currentSession.user) {\n                // test if userStorage was previously enabled and the storage medium was the same, to move the user back under the same key\n                var separateUser = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey + '-user');\n                if (separateUser && (separateUser === null || separateUser === undefined ? undefined : separateUser.user)) {\n                  currentSession.user = separateUser.user;\n                  yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n                  yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, currentSession);\n                } else {\n                  currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n                }\n              }\n            }\n            this._debug(debugName, 'session from storage', currentSession);\n            if (!this._isValidSession(currentSession)) {\n              this._debug(debugName, 'session is not valid');\n              if (currentSession !== null) {\n                yield this._removeSession();\n              }\n              return;\n            }\n            var expiresWithMargin = ((_b = currentSession.expires_at) !== null && _b !== undefined ? _b : Infinity) * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS;\n            this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${constants_1.EXPIRY_MARGIN_MS}s`);\n            if (expiresWithMargin) {\n              if (this.autoRefreshToken && currentSession.refresh_token) {\n                var _yield$this$_callRefr3 = yield this._callRefreshToken(currentSession.refresh_token),\n                  error = _yield$this$_callRefr3.error;\n                if (error) {\n                  if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n                    this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n                    yield this._removeSession();\n                  }\n                }\n              }\n            } else if (currentSession.user && currentSession.user.__isUserNotAvailableProxy === true) {\n              // If we have a proxy user, try to get the real user data\n              try {\n                var _yield$this$_getUser3 = yield this._getUser(currentSession.access_token),\n                  data = _yield$this$_getUser3.data,\n                  userError = _yield$this$_getUser3.error;\n                if (!userError && (data === null || data === undefined ? undefined : data.user)) {\n                  currentSession.user = data.user;\n                  yield this._saveSession(currentSession);\n                  yield this._notifyAllSubscribers('SIGNED_IN', currentSession);\n                } else {\n                  this._debug(debugName, 'could not get user data, skipping SIGNED_IN notification');\n                }\n              } catch (getUserError) {\n                this._debug(debugName, 'error getting user data, skipping SIGNED_IN notification', getUserError);\n              }\n            } else {\n              // no need to persist currentSession again, as we just loaded it from\n              // local storage; persisting it again may overwrite a value saved by\n              // another client with access to the same local storage\n              yield this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            }\n          } catch (err) {\n            this._debug(debugName, 'error', err);\n            return;\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _recoverAndRefresh() {\n          return _recoverAndRefresh2.apply(this, arguments);\n        }\n        return _recoverAndRefresh;\n      }())\n    }, {\n      key: \"_callRefreshToken\",\n      value: function () {\n        var _callRefreshToken2 = _asyncToGenerator(function* (refreshToken) {\n          var _a, _b;\n          if (!refreshToken) {\n            throw new errors_1.AuthSessionMissingError();\n          }\n          // refreshing is already in progress\n          if (this.refreshingDeferred) {\n            return this.refreshingDeferred.promise;\n          }\n          var debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\n          this._debug(debugName, 'begin');\n          try {\n            this.refreshingDeferred = new helpers_1.Deferred();\n            var _yield$this$_refreshA = yield this._refreshAccessToken(refreshToken),\n              data = _yield$this$_refreshA.data,\n              error = _yield$this$_refreshA.error;\n            if (error) throw error;\n            if (!data.session) throw new errors_1.AuthSessionMissingError();\n            yield this._saveSession(data.session);\n            yield this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n            var result = {\n              session: data.session,\n              error: null\n            };\n            this.refreshingDeferred.resolve(result);\n            return result;\n          } catch (error) {\n            this._debug(debugName, 'error', error);\n            if ((0, errors_1.isAuthError)(error)) {\n              var _result2 = {\n                session: null,\n                error\n              };\n              if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n                yield this._removeSession();\n              }\n              (_a = this.refreshingDeferred) === null || _a === undefined ? undefined : _a.resolve(_result2);\n              return _result2;\n            }\n            (_b = this.refreshingDeferred) === null || _b === undefined ? undefined : _b.reject(error);\n            throw error;\n          } finally {\n            this.refreshingDeferred = null;\n            this._debug(debugName, 'end');\n          }\n        });\n        function _callRefreshToken(_x47) {\n          return _callRefreshToken2.apply(this, arguments);\n        }\n        return _callRefreshToken;\n      }()\n    }, {\n      key: \"_notifyAllSubscribers\",\n      value: function () {\n        var _notifyAllSubscribers2 = _asyncToGenerator(function* (event, session) {\n          var broadcast = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n          var debugName = `#_notifyAllSubscribers(${event})`;\n          this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\n          try {\n            if (this.broadcastChannel && broadcast) {\n              this.broadcastChannel.postMessage({\n                event,\n                session\n              });\n            }\n            var errors = [];\n            var promises = Array.from(this.stateChangeEmitters.values()).map(/*#__PURE__*/function () {\n              var _ref29 = _asyncToGenerator(function* (x) {\n                try {\n                  yield x.callback(event, session);\n                } catch (e) {\n                  errors.push(e);\n                }\n              });\n              return function (_x50) {\n                return _ref29.apply(this, arguments);\n              };\n            }());\n            yield Promise.all(promises);\n            if (errors.length > 0) {\n              for (var i = 0; i < errors.length; i += 1) {}\n              throw errors[0];\n            }\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _notifyAllSubscribers(_x48, _x49) {\n          return _notifyAllSubscribers2.apply(this, arguments);\n        }\n        return _notifyAllSubscribers;\n      }()\n      /**\n       * set currentSession and currentUser\n       * process to _startAutoRefreshToken if possible\n       */\n    }, {\n      key: \"_saveSession\",\n      value: (function () {\n        var _saveSession2 = _asyncToGenerator(function* (session) {\n          this._debug('#_saveSession()', session);\n          // _saveSession is always called whenever a new session has been acquired\n          // so we can safely suppress the warning returned by future getSession calls\n          this.suppressGetSessionWarning = true;\n          // Create a shallow copy to work with, to avoid mutating the original session object if it's used elsewhere\n          var sessionToProcess = Object.assign({}, session);\n          var userIsProxy = sessionToProcess.user && sessionToProcess.user.__isUserNotAvailableProxy === true;\n          if (this.userStorage) {\n            if (!userIsProxy && sessionToProcess.user) {\n              // If it's a real user object, save it to userStorage.\n              yield (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', {\n                user: sessionToProcess.user\n              });\n            } else if (userIsProxy) {\n              // If it's the proxy, it means user was not found in userStorage.\n              // We should ensure no stale user data for this key exists in userStorage if we were to save null,\n              // or simply not save the proxy. For now, we don't save the proxy here.\n              // If there's a need to clear userStorage if user becomes proxy, that logic would go here.\n            }\n            // Prepare the main session data for primary storage: remove the user property before cloning\n            // This is important because the original session.user might be the proxy\n            var mainSessionData = Object.assign({}, sessionToProcess);\n            delete mainSessionData.user; // Remove user (real or proxy) before cloning for main storage\n            var clonedMainSessionData = (0, helpers_2.deepClone)(mainSessionData);\n            yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedMainSessionData);\n          } else {\n            // No userStorage is configured.\n            // In this case, session.user should ideally not be a proxy.\n            // If it were, structuredClone would fail. This implies an issue elsewhere if user is a proxy here\n            var clonedSession = (0, helpers_2.deepClone)(sessionToProcess); // sessionToProcess still has its original user property\n            yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedSession);\n          }\n        });\n        function _saveSession(_x51) {\n          return _saveSession2.apply(this, arguments);\n        }\n        return _saveSession;\n      }())\n    }, {\n      key: \"_removeSession\",\n      value: function () {\n        var _removeSession2 = _asyncToGenerator(function* () {\n          this._debug('#_removeSession()');\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey);\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-code-verifier');\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n          if (this.userStorage) {\n            yield (0, helpers_1.removeItemAsync)(this.userStorage, this.storageKey + '-user');\n          }\n          yield this._notifyAllSubscribers('SIGNED_OUT', null);\n        });\n        function _removeSession() {\n          return _removeSession2.apply(this, arguments);\n        }\n        return _removeSession;\n      }()\n      /**\n       * Removes any registered visibilitychange callback.\n       *\n       * {@see #startAutoRefresh}\n       * {@see #stopAutoRefresh}\n       */\n    }, {\n      key: \"_removeVisibilityChangedCallback\",\n      value: function _removeVisibilityChangedCallback() {\n        this._debug('#_removeVisibilityChangedCallback()');\n        var callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n          if (callback && (0, helpers_1.isBrowser)() && (window === null || window === undefined ? undefined : window.removeEventListener)) {\n            window.removeEventListener('visibilitychange', callback);\n          }\n        } catch (e) {}\n      }\n      /**\n       * This is the private implementation of {@link #startAutoRefresh}. Use this\n       * within the library.\n       */\n    }, {\n      key: \"_startAutoRefresh\",\n      value: (function () {\n        var _startAutoRefresh2 = _asyncToGenerator(function* () {\n          var _this21 = this;\n          yield this._stopAutoRefresh();\n          this._debug('#_startAutoRefresh()');\n          var ticker = setInterval(() => this._autoRefreshTokenTick(), constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n          this.autoRefreshTicker = ticker;\n          if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n            // ticker is a NodeJS Timeout object that has an `unref` method\n            // https://nodejs.org/api/timers.html#timeoutunref\n            // When auto refresh is used in NodeJS (like for testing) the\n            // `setInterval` is preventing the process from being marked as\n            // finished and tests run endlessly. This can be prevented by calling\n            // `unref()` on the returned object.\n            ticker.unref();\n            // @ts-expect-error TS has no context of Deno\n          } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n            // similar like for NodeJS, but with the Deno API\n            // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n            // @ts-expect-error TS has no context of Deno\n            Deno.unrefTimer(ticker);\n          }\n          // run the tick immediately, but in the next pass of the event loop so that\n          // #_initialize can be allowed to complete without recursively waiting on\n          // itself\n          setTimeout(/*#__PURE__*/_asyncToGenerator(function* () {\n            yield _this21.initializePromise;\n            yield _this21._autoRefreshTokenTick();\n          }), 0);\n        });\n        function _startAutoRefresh() {\n          return _startAutoRefresh2.apply(this, arguments);\n        }\n        return _startAutoRefresh;\n      }()\n      /**\n       * This is the private implementation of {@link #stopAutoRefresh}. Use this\n       * within the library.\n       */\n      )\n    }, {\n      key: \"_stopAutoRefresh\",\n      value: (function () {\n        var _stopAutoRefresh2 = _asyncToGenerator(function* () {\n          this._debug('#_stopAutoRefresh()');\n          var ticker = this.autoRefreshTicker;\n          this.autoRefreshTicker = null;\n          if (ticker) {\n            clearInterval(ticker);\n          }\n        });\n        function _stopAutoRefresh() {\n          return _stopAutoRefresh2.apply(this, arguments);\n        }\n        return _stopAutoRefresh;\n      }()\n      /**\n       * Starts an auto-refresh process in the background. The session is checked\n       * every few seconds. Close to the time of expiration a process is started to\n       * refresh the session. If refreshing fails it will be retried for as long as\n       * necessary.\n       *\n       * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n       * to call this function, it will be called for you.\n       *\n       * On browsers the refresh process works only when the tab/window is in the\n       * foreground to conserve resources as well as prevent race conditions and\n       * flooding auth with requests. If you call this method any managed\n       * visibility change callback will be removed and you must manage visibility\n       * changes on your own.\n       *\n       * On non-browser platforms the refresh process works *continuously* in the\n       * background, which may not be desirable. You should hook into your\n       * platform's foreground indication mechanism and call these methods\n       * appropriately to conserve resources.\n       *\n       * {@see #stopAutoRefresh}\n       */\n      )\n    }, {\n      key: \"startAutoRefresh\",\n      value: (function () {\n        var _startAutoRefresh3 = _asyncToGenerator(function* () {\n          this._removeVisibilityChangedCallback();\n          yield this._startAutoRefresh();\n        });\n        function startAutoRefresh() {\n          return _startAutoRefresh3.apply(this, arguments);\n        }\n        return startAutoRefresh;\n      }()\n      /**\n       * Stops an active auto refresh process running in the background (if any).\n       *\n       * If you call this method any managed visibility change callback will be\n       * removed and you must manage visibility changes on your own.\n       *\n       * See {@link #startAutoRefresh} for more details.\n       */\n      )\n    }, {\n      key: \"stopAutoRefresh\",\n      value: (function () {\n        var _stopAutoRefresh3 = _asyncToGenerator(function* () {\n          this._removeVisibilityChangedCallback();\n          yield this._stopAutoRefresh();\n        });\n        function stopAutoRefresh() {\n          return _stopAutoRefresh3.apply(this, arguments);\n        }\n        return stopAutoRefresh;\n      }()\n      /**\n       * Runs the auto refresh token tick.\n       */\n      )\n    }, {\n      key: \"_autoRefreshTokenTick\",\n      value: (function () {\n        var _autoRefreshTokenTick2 = _asyncToGenerator(function* () {\n          var _this22 = this;\n          this._debug('#_autoRefreshTokenTick()', 'begin');\n          try {\n            yield this._acquireLock(0, /*#__PURE__*/_asyncToGenerator(function* () {\n              try {\n                var now = Date.now();\n                try {\n                  return yield _this22._useSession(/*#__PURE__*/function () {\n                    var _ref32 = _asyncToGenerator(function* (result) {\n                      var session = result.data.session;\n                      if (!session || !session.refresh_token || !session.expires_at) {\n                        _this22._debug('#_autoRefreshTokenTick()', 'no session');\n                        return;\n                      }\n                      // session will expire in this many ticks (or has already expired if <= 0)\n                      var expiresInTicks = Math.floor((session.expires_at * 1000 - now) / constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n                      _this22._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${constants_1.AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${constants_1.AUTO_REFRESH_TICK_THRESHOLD} ticks`);\n                      if (expiresInTicks <= constants_1.AUTO_REFRESH_TICK_THRESHOLD) {\n                        yield _this22._callRefreshToken(session.refresh_token);\n                      }\n                    });\n                    return function (_x52) {\n                      return _ref32.apply(this, arguments);\n                    };\n                  }());\n                } catch (e) {}\n              } finally {\n                _this22._debug('#_autoRefreshTokenTick()', 'end');\n              }\n            }));\n          } catch (e) {\n            if (e.isAcquireTimeout || e instanceof locks_1.LockAcquireTimeoutError) {\n              this._debug('auto refresh token tick lock not available');\n            } else {\n              throw e;\n            }\n          }\n        });\n        function _autoRefreshTokenTick() {\n          return _autoRefreshTokenTick2.apply(this, arguments);\n        }\n        return _autoRefreshTokenTick;\n      }()\n      /**\n       * Registers callbacks on the browser / platform, which in-turn run\n       * algorithms when the browser window/tab are in foreground. On non-browser\n       * platforms it assumes always foreground.\n       */\n      )\n    }, {\n      key: \"_handleVisibilityChange\",\n      value: (function () {\n        var _handleVisibilityChange2 = _asyncToGenerator(function* () {\n          var _this23 = this;\n          this._debug('#_handleVisibilityChange()');\n          if (!(0, helpers_1.isBrowser)() || !(window === null || window === undefined ? undefined : window.addEventListener)) {\n            if (this.autoRefreshToken) {\n              // in non-browser environments the refresh token ticker runs always\n              this.startAutoRefresh();\n            }\n            return false;\n          }\n          try {\n            this.visibilityChangedCallback = /*#__PURE__*/_asyncToGenerator(function* () {\n              return yield _this23._onVisibilityChanged(false);\n            });\n            window === null || window === undefined ? undefined : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n            // now immediately call the visbility changed callback to setup with the\n            // current visbility state\n            yield this._onVisibilityChanged(true); // initial call\n          } catch (error) {}\n        });\n        function _handleVisibilityChange() {\n          return _handleVisibilityChange2.apply(this, arguments);\n        }\n        return _handleVisibilityChange;\n      }()\n      /**\n       * Callback registered with `window.addEventListener('visibilitychange')`.\n       */\n      )\n    }, {\n      key: \"_onVisibilityChanged\",\n      value: (function () {\n        var _onVisibilityChanged2 = _asyncToGenerator(function* (calledFromInitialize) {\n          var _this24 = this;\n          var methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\n          this._debug(methodName, 'visibilityState', document.visibilityState);\n          if (document.visibilityState === 'visible') {\n            if (this.autoRefreshToken) {\n              // in browser environments the refresh token ticker runs only on focused tabs\n              // which prevents race conditions\n              this._startAutoRefresh();\n            }\n            if (!calledFromInitialize) {\n              // called when the visibility has changed, i.e. the browser\n              // transitioned from hidden -> visible so we need to see if the session\n              // should be recovered immediately... but to do that we need to acquire\n              // the lock first asynchronously\n              yield this.initializePromise;\n              yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n                if (document.visibilityState !== 'visible') {\n                  _this24._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n                  // visibility has changed while waiting for the lock, abort\n                  return;\n                }\n                // recover the session\n                yield _this24._recoverAndRefresh();\n              }));\n            }\n          } else if (document.visibilityState === 'hidden') {\n            if (this.autoRefreshToken) {\n              this._stopAutoRefresh();\n            }\n          }\n        });\n        function _onVisibilityChanged(_x53) {\n          return _onVisibilityChanged2.apply(this, arguments);\n        }\n        return _onVisibilityChanged;\n      }()\n      /**\n       * Generates the relevant login URL for a third-party provider.\n       * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n       * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n       * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n       */\n      )\n    }, {\n      key: \"_getUrlForProvider\",\n      value: (function () {\n        var _getUrlForProvider2 = _asyncToGenerator(function* (url, provider, options) {\n          var urlParams = [`provider=${encodeURIComponent(provider)}`];\n          if (options === null || options === undefined ? undefined : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n          }\n          if (options === null || options === undefined ? undefined : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n          }\n          if (this.flowType === 'pkce') {\n            var _yield18 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey),\n              _yield19 = _slicedToArray(_yield18, 2),\n              codeChallenge = _yield19[0],\n              codeChallengeMethod = _yield19[1];\n            var flowParams = new URLSearchParams({\n              code_challenge: `${encodeURIComponent(codeChallenge)}`,\n              code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`\n            });\n            urlParams.push(flowParams.toString());\n          }\n          if (options === null || options === undefined ? undefined : options.queryParams) {\n            var query = new URLSearchParams(options.queryParams);\n            urlParams.push(query.toString());\n          }\n          if (options === null || options === undefined ? undefined : options.skipBrowserRedirect) {\n            urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\n          }\n          return `${url}?${urlParams.join('&')}`;\n        });\n        function _getUrlForProvider(_x54, _x55, _x56) {\n          return _getUrlForProvider2.apply(this, arguments);\n        }\n        return _getUrlForProvider;\n      }())\n    }, {\n      key: \"_unenroll\",\n      value: function () {\n        var _unenroll2 = _asyncToGenerator(function* (params) {\n          var _this25 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref35 = _asyncToGenerator(function* (result) {\n                var _a;\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                return yield (0, fetch_1._request)(_this25.fetch, 'DELETE', `${_this25.url}/factors/${params.factorId}`, {\n                  headers: _this25.headers,\n                  jwt: (_a = sessionData === null || sessionData === undefined ? undefined : sessionData.session) === null || _a === undefined ? undefined : _a.access_token\n                });\n              });\n              return function (_x58) {\n                return _ref35.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _unenroll(_x57) {\n          return _unenroll2.apply(this, arguments);\n        }\n        return _unenroll;\n      }()\n    }, {\n      key: \"_enroll\",\n      value: function () {\n        var _enroll2 = _asyncToGenerator(function* (params) {\n          var _this26 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref36 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                var body = Object.assign({\n                  friendly_name: params.friendlyName,\n                  factor_type: params.factorType\n                }, params.factorType === 'phone' ? {\n                  phone: params.phone\n                } : {\n                  issuer: params.issuer\n                });\n                var _yield20 = yield (0, fetch_1._request)(_this26.fetch, 'POST', `${_this26.url}/factors`, {\n                    body,\n                    headers: _this26.headers,\n                    jwt: (_a = sessionData === null || sessionData === undefined ? undefined : sessionData.session) === null || _a === undefined ? undefined : _a.access_token\n                  }),\n                  data = _yield20.data,\n                  error = _yield20.error;\n                if (error) {\n                  return {\n                    data: null,\n                    error\n                  };\n                }\n                if (params.factorType === 'totp' && ((_b = data === null || data === undefined ? undefined : data.totp) === null || _b === undefined ? undefined : _b.qr_code)) {\n                  data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return {\n                  data,\n                  error: null\n                };\n              });\n              return function (_x60) {\n                return _ref36.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _enroll(_x59) {\n          return _enroll2.apply(this, arguments);\n        }\n        return _enroll;\n      }()\n      /**\n       * {@see GoTrueMFAApi#verify}\n       */\n    }, {\n      key: \"_verify\",\n      value: (function () {\n        var _verify2 = _asyncToGenerator(function* (params) {\n          var _this27 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            try {\n              return yield _this27._useSession(/*#__PURE__*/function () {\n                var _ref38 = _asyncToGenerator(function* (result) {\n                  var _a;\n                  var sessionData = result.data,\n                    sessionError = result.error;\n                  if (sessionError) {\n                    return {\n                      data: null,\n                      error: sessionError\n                    };\n                  }\n                  var _yield21 = yield (0, fetch_1._request)(_this27.fetch, 'POST', `${_this27.url}/factors/${params.factorId}/verify`, {\n                      body: {\n                        code: params.code,\n                        challenge_id: params.challengeId\n                      },\n                      headers: _this27.headers,\n                      jwt: (_a = sessionData === null || sessionData === undefined ? undefined : sessionData.session) === null || _a === undefined ? undefined : _a.access_token\n                    }),\n                    data = _yield21.data,\n                    error = _yield21.error;\n                  if (error) {\n                    return {\n                      data: null,\n                      error\n                    };\n                  }\n                  yield _this27._saveSession(Object.assign({\n                    expires_at: Math.round(Date.now() / 1000) + data.expires_in\n                  }, data));\n                  yield _this27._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                  return {\n                    data,\n                    error\n                  };\n                });\n                return function (_x62) {\n                  return _ref38.apply(this, arguments);\n                };\n              }());\n            } catch (error) {\n              if ((0, errors_1.isAuthError)(error)) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              throw error;\n            }\n          }));\n        });\n        function _verify(_x61) {\n          return _verify2.apply(this, arguments);\n        }\n        return _verify;\n      }()\n      /**\n       * {@see GoTrueMFAApi#challenge}\n       */\n      )\n    }, {\n      key: \"_challenge\",\n      value: (function () {\n        var _challenge2 = _asyncToGenerator(function* (params) {\n          var _this28 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            try {\n              return yield _this28._useSession(/*#__PURE__*/function () {\n                var _ref40 = _asyncToGenerator(function* (result) {\n                  var _a;\n                  var sessionData = result.data,\n                    sessionError = result.error;\n                  if (sessionError) {\n                    return {\n                      data: null,\n                      error: sessionError\n                    };\n                  }\n                  return yield (0, fetch_1._request)(_this28.fetch, 'POST', `${_this28.url}/factors/${params.factorId}/challenge`, {\n                    body: {\n                      channel: params.channel\n                    },\n                    headers: _this28.headers,\n                    jwt: (_a = sessionData === null || sessionData === undefined ? undefined : sessionData.session) === null || _a === undefined ? undefined : _a.access_token\n                  });\n                });\n                return function (_x64) {\n                  return _ref40.apply(this, arguments);\n                };\n              }());\n            } catch (error) {\n              if ((0, errors_1.isAuthError)(error)) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              throw error;\n            }\n          }));\n        });\n        function _challenge(_x63) {\n          return _challenge2.apply(this, arguments);\n        }\n        return _challenge;\n      }()\n      /**\n       * {@see GoTrueMFAApi#challengeAndVerify}\n       */\n      )\n    }, {\n      key: \"_challengeAndVerify\",\n      value: (function () {\n        var _challengeAndVerify2 = _asyncToGenerator(function* (params) {\n          // both _challenge and _verify independently acquire the lock, so no need\n          // to acquire it here\n          var _yield$this$_challeng = yield this._challenge({\n              factorId: params.factorId\n            }),\n            challengeData = _yield$this$_challeng.data,\n            challengeError = _yield$this$_challeng.error;\n          if (challengeError) {\n            return {\n              data: null,\n              error: challengeError\n            };\n          }\n          return yield this._verify({\n            factorId: params.factorId,\n            challengeId: challengeData.id,\n            code: params.code\n          });\n        });\n        function _challengeAndVerify(_x65) {\n          return _challengeAndVerify2.apply(this, arguments);\n        }\n        return _challengeAndVerify;\n      }()\n      /**\n       * {@see GoTrueMFAApi#listFactors}\n       */\n      )\n    }, {\n      key: \"_listFactors\",\n      value: (function () {\n        var _listFactors2 = _asyncToGenerator(function* () {\n          // use #getUser instead of #_getUser as the former acquires a lock\n          var _yield$this$getUser2 = yield this.getUser(),\n            user = _yield$this$getUser2.data.user,\n            userError = _yield$this$getUser2.error;\n          if (userError) {\n            return {\n              data: null,\n              error: userError\n            };\n          }\n          var factors = (user === null || user === undefined ? undefined : user.factors) || [];\n          var totp = factors.filter(factor => factor.factor_type === 'totp' && factor.status === 'verified');\n          var phone = factors.filter(factor => factor.factor_type === 'phone' && factor.status === 'verified');\n          return {\n            data: {\n              all: factors,\n              totp,\n              phone\n            },\n            error: null\n          };\n        });\n        function _listFactors() {\n          return _listFactors2.apply(this, arguments);\n        }\n        return _listFactors;\n      }()\n      /**\n       * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n       */\n      )\n    }, {\n      key: \"_getAuthenticatorAssuranceLevel\",\n      value: (function () {\n        var _getAuthenticatorAssuranceLevel2 = _asyncToGenerator(function* () {\n          var _this29 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this29._useSession(/*#__PURE__*/function () {\n              var _ref42 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var session = result.data.session,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                if (!session) {\n                  return {\n                    data: {\n                      currentLevel: null,\n                      nextLevel: null,\n                      currentAuthenticationMethods: []\n                    },\n                    error: null\n                  };\n                }\n                var _ref43 = (0, helpers_1.decodeJWT)(session.access_token),\n                  payload = _ref43.payload;\n                var currentLevel = null;\n                if (payload.aal) {\n                  currentLevel = payload.aal;\n                }\n                var nextLevel = currentLevel;\n                var verifiedFactors = (_b = (_a = session.user.factors) === null || _a === undefined ? undefined : _a.filter(factor => factor.status === 'verified')) !== null && _b !== undefined ? _b : [];\n                if (verifiedFactors.length > 0) {\n                  nextLevel = 'aal2';\n                }\n                var currentAuthenticationMethods = payload.amr || [];\n                return {\n                  data: {\n                    currentLevel,\n                    nextLevel,\n                    currentAuthenticationMethods\n                  },\n                  error: null\n                };\n              });\n              return function (_x66) {\n                return _ref42.apply(this, arguments);\n              };\n            }());\n          }));\n        });\n        function _getAuthenticatorAssuranceLevel() {\n          return _getAuthenticatorAssuranceLevel2.apply(this, arguments);\n        }\n        return _getAuthenticatorAssuranceLevel;\n      }())\n    }, {\n      key: \"fetchJwk\",\n      value: function () {\n        var _fetchJwk = _asyncToGenerator(function* (kid) {\n          var jwks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n            keys: []\n          };\n          // try fetching from the supplied jwks\n          var jwk = jwks.keys.find(key => key.kid === kid);\n          if (jwk) {\n            return jwk;\n          }\n          var now = Date.now();\n          // try fetching from cache\n          jwk = this.jwks.keys.find(key => key.kid === kid);\n          // jwk exists and jwks isn't stale\n          if (jwk && this.jwks_cached_at + constants_1.JWKS_TTL > now) {\n            return jwk;\n          }\n          // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n          var _yield22 = yield (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\n              headers: this.headers\n            }),\n            data = _yield22.data,\n            error = _yield22.error;\n          if (error) {\n            throw error;\n          }\n          if (!data.keys || data.keys.length === 0) {\n            return null;\n          }\n          this.jwks = data;\n          this.jwks_cached_at = now;\n          // Find the signing key\n          jwk = data.keys.find(key => key.kid === kid);\n          if (!jwk) {\n            return null;\n          }\n          return jwk;\n        });\n        function fetchJwk(_x67) {\n          return _fetchJwk.apply(this, arguments);\n        }\n        return fetchJwk;\n      }()\n      /**\n       * Extracts the JWT claims present in the access token by first verifying the\n       * JWT against the server's JSON Web Key Set endpoint\n       * `/.well-known/jwks.json` which is often cached, resulting in significantly\n       * faster responses. Prefer this method over {@link #getUser} which always\n       * sends a request to the Auth server for each JWT.\n       *\n       * If the project is not using an asymmetric JWT signing key (like ECC or\n       * RSA) it always sends a request to the Auth server (similar to {@link\n       * #getUser}) to verify the JWT.\n       *\n       * @param jwt An optional specific JWT you wish to verify, not the one you\n       *            can obtain from {@link #getSession}.\n       * @param options Various additional options that allow you to customize the\n       *                behavior of this method.\n       */\n    }, {\n      key: \"getClaims\",\n      value: (function () {\n        var _getClaims = _asyncToGenerator(function* (jwt) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          try {\n            var token = jwt;\n            if (!token) {\n              var _yield$this$getSessio = yield this.getSession(),\n                data = _yield$this$getSessio.data,\n                error = _yield$this$getSessio.error;\n              if (error || !data.session) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              token = data.session.access_token;\n            }\n            var _ref44 = (0, helpers_1.decodeJWT)(token),\n              header = _ref44.header,\n              payload = _ref44.payload,\n              signature = _ref44.signature,\n              _ref44$raw = _ref44.raw,\n              rawHeader = _ref44$raw.header,\n              rawPayload = _ref44$raw.payload;\n            if (!(options === null || options === undefined ? undefined : options.allowExpired)) {\n              // Reject expired JWTs should only happen if jwt argument was passed\n              (0, helpers_1.validateExp)(payload.exp);\n            }\n            var signingKey = !header.alg || header.alg.startsWith('HS') || !header.kid || !('crypto' in globalThis && 'subtle' in globalThis.crypto) ? null : yield this.fetchJwk(header.kid, (options === null || options === undefined ? undefined : options.keys) ? {\n              keys: options.keys\n            } : options === null || options === undefined ? undefined : options.jwks);\n            // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n            if (!signingKey) {\n              var _yield$this$getUser3 = yield this.getUser(token),\n                _error6 = _yield$this$getUser3.error;\n              if (_error6) {\n                throw _error6;\n              }\n              // getUser succeeds so the claims in the JWT can be trusted\n              return {\n                data: {\n                  claims: payload,\n                  header,\n                  signature\n                },\n                error: null\n              };\n            }\n            var algorithm = (0, helpers_1.getAlgorithm)(header.alg);\n            // Convert JWK to CryptoKey\n            var publicKey = yield crypto.subtle.importKey('jwk', signingKey, algorithm, true, ['verify']);\n            // Verify the signature\n            var isValid = yield crypto.subtle.verify(algorithm, publicKey, signature, (0, base64url_1.stringToUint8Array)(`${rawHeader}.${rawPayload}`));\n            if (!isValid) {\n              throw new errors_1.AuthInvalidJwtError('Invalid JWT signature');\n            }\n            // If verification succeeds, decode and return claims\n            return {\n              data: {\n                claims: payload,\n                header,\n                signature\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function getClaims(_x68) {\n          return _getClaims.apply(this, arguments);\n        }\n        return getClaims;\n      }())\n    }]);\n  }();\n  exports.default = GoTrueClient;\n  GoTrueClient.nextInstanceID = 0;\n});","lineCount":3502,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"require"],[6,28,1,13],[6,29,1,13,"_dependencyMap"],[6,43,1,13],[7,2,1,13],[7,6,1,13,"_asyncToGenerator"],[7,23,1,13],[7,26,1,13,"require"],[7,33,1,13],[7,34,1,13,"_dependencyMap"],[7,48,1,13],[8,2,2,0],[8,6,2,4,"__importDefault"],[8,21,2,19],[8,24,2,23],[8,28,2,27],[8,32,2,31],[8,36,2,35],[8,37,2,36,"__importDefault"],[8,52,2,51],[8,56,2,56],[8,66,2,66,"mod"],[8,69,2,69],[8,71,2,71],[9,4,3,4],[9,11,3,12,"mod"],[9,14,3,15],[9,18,3,19,"mod"],[9,21,3,22],[9,22,3,23,"__esModule"],[9,32,3,33],[9,35,3,37,"mod"],[9,38,3,40],[9,41,3,43],[10,6,3,45],[10,15,3,54],[10,17,3,56,"mod"],[11,4,3,60],[11,5,3,61],[12,2,4,0],[12,3,4,1],[13,2,5,0,"Object"],[13,8,5,6],[13,9,5,7,"defineProperty"],[13,23,5,21],[13,24,5,22,"exports"],[13,31,5,29],[13,33,5,31],[13,45,5,43],[13,47,5,45],[14,4,5,47,"value"],[14,9,5,52],[14,11,5,54],[15,2,5,59],[15,3,5,60],[15,4,5,61],[16,2,6,0],[16,6,6,6,"GoTrueAdminApi_1"],[16,22,6,22],[16,25,6,25,"__importDefault"],[16,40,6,40],[16,41,6,41,"require"],[16,48,6,48],[16,49,6,48,"_dependencyMap"],[16,63,6,48],[16,66,6,67],[16,67,6,68],[16,68,6,69],[17,2,7,0],[17,6,7,6,"constants_1"],[17,17,7,17],[17,20,7,20,"require"],[17,27,7,27],[17,28,7,27,"_dependencyMap"],[17,42,7,27],[17,45,7,45],[17,46,7,46],[18,2,8,0],[18,6,8,6,"errors_1"],[18,14,8,14],[18,17,8,17,"require"],[18,24,8,24],[18,25,8,24,"_dependencyMap"],[18,39,8,24],[18,42,8,39],[18,43,8,40],[19,2,9,0],[19,6,9,6,"fetch_1"],[19,13,9,13],[19,16,9,16,"require"],[19,23,9,23],[19,24,9,23,"_dependencyMap"],[19,38,9,23],[19,41,9,37],[19,42,9,38],[20,2,10,0],[20,6,10,6,"helpers_1"],[20,15,10,15],[20,18,10,18,"require"],[20,25,10,25],[20,26,10,25,"_dependencyMap"],[20,40,10,25],[20,43,10,41],[20,44,10,42],[21,2,11,0],[21,6,11,6,"local_storage_1"],[21,21,11,21],[21,24,11,24,"require"],[21,31,11,31],[21,32,11,31,"_dependencyMap"],[21,46,11,31],[21,49,11,53],[21,50,11,54],[22,2,12,0],[22,6,12,6,"polyfills_1"],[22,17,12,17],[22,20,12,20,"require"],[22,27,12,27],[22,28,12,27,"_dependencyMap"],[22,42,12,27],[22,46,12,45],[22,47,12,46],[23,2,13,0],[23,6,13,6,"version_1"],[23,15,13,15],[23,18,13,18,"require"],[23,25,13,25],[23,26,13,25,"_dependencyMap"],[23,40,13,25],[23,44,13,41],[23,45,13,42],[24,2,14,0],[24,6,14,6,"locks_1"],[24,13,14,13],[24,16,14,16,"require"],[24,23,14,23],[24,24,14,23,"_dependencyMap"],[24,38,14,23],[24,42,14,37],[24,43,14,38],[25,2,15,0],[25,6,15,6,"base64url_1"],[25,17,15,17],[25,20,15,20,"require"],[25,27,15,27],[25,28,15,27,"_dependencyMap"],[25,42,15,27],[25,46,15,45],[25,47,15,46],[26,2,16,0],[26,6,16,6,"helpers_2"],[26,15,16,15],[26,18,16,18,"require"],[26,25,16,25],[26,26,16,25,"_dependencyMap"],[26,40,16,25],[26,43,16,41],[26,44,16,42],[27,2,17,0],[27,3,17,1],[27,4,17,2],[27,6,17,4,"polyfills_1"],[27,17,17,15],[27,18,17,16,"polyfillGlobalThis"],[27,36,17,34],[27,38,17,36],[27,39,17,37],[27,40,17,38],[27,41,17,39],[28,2,18,0],[28,6,18,6,"DEFAULT_OPTIONS"],[28,21,18,21],[28,24,18,24],[29,4,19,4,"url"],[29,7,19,7],[29,9,19,9,"constants_1"],[29,20,19,20],[29,21,19,21,"GOTRUE_URL"],[29,31,19,31],[30,4,20,4,"storageKey"],[30,14,20,14],[30,16,20,16,"constants_1"],[30,27,20,27],[30,28,20,28,"STORAGE_KEY"],[30,39,20,39],[31,4,21,4,"autoRefreshToken"],[31,20,21,20],[31,22,21,22],[31,26,21,26],[32,4,22,4,"persistSession"],[32,18,22,18],[32,20,22,20],[32,24,22,24],[33,4,23,4,"detectSessionInUrl"],[33,22,23,22],[33,24,23,24],[33,28,23,28],[34,4,24,4,"headers"],[34,11,24,11],[34,13,24,13,"constants_1"],[34,24,24,24],[34,25,24,25,"DEFAULT_HEADERS"],[34,40,24,40],[35,4,25,4,"flowType"],[35,12,25,12],[35,14,25,14],[35,24,25,24],[36,4,26,4,"debug"],[36,9,26,9],[36,11,26,11],[36,16,26,16],[37,4,27,4,"hasCustomAuthorizationHeader"],[37,32,27,32],[37,34,27,34],[38,2,28,0],[38,3,28,1],[39,2,28,2],[39,11,29,15,"lockNoOp"],[39,19,29,23,"lockNoOp"],[39,20,29,23,"_x"],[39,22,29,23],[39,24,29,23,"_x2"],[39,27,29,23],[39,29,29,23,"_x3"],[39,32,29,23],[40,4,29,23],[40,11,29,23,"_lockNoOp"],[40,20,29,23],[40,21,29,23,"apply"],[40,26,29,23],[40,33,29,23,"arguments"],[40,42,29,23],[41,2,29,23],[42,2,32,0],[43,0,33,0],[44,0,34,0],[45,0,35,0],[46,0,36,0],[47,0,37,0],[48,0,38,0],[49,0,39,0],[50,2,32,0],[50,11,32,0,"_lockNoOp"],[50,21,32,0],[51,4,32,0,"_lockNoOp"],[51,13,32,0],[51,16,32,0,"_asyncToGenerator"],[51,33,32,0],[51,34,29,0],[51,45,29,24,"name"],[51,49,29,28],[51,51,29,30,"acquireTimeout"],[51,65,29,44],[51,67,29,46,"fn"],[51,69,29,48],[51,71,29,50],[52,6,30,4],[52,19,30,17,"fn"],[52,21,30,19],[52,22,30,20],[52,23,30,21],[53,4,31,0],[53,5,31,1],[54,4,31,1],[54,11,31,1,"_lockNoOp"],[54,20,31,1],[54,21,31,1,"apply"],[54,26,31,1],[54,33,31,1,"arguments"],[54,42,31,1],[55,2,31,1],[56,2,40,0],[56,6,40,6,"GLOBAL_JWKS"],[56,17,40,17],[56,20,40,20],[56,21,40,21],[56,22,40,22],[57,2,40,23],[57,6,41,6,"GoTrueClient"],[57,18,41,18],[58,4,42,4],[59,0,43,0],[60,0,44,0],[61,4,45,4],[61,13,45,4,"GoTrueClient"],[61,26,45,16,"options"],[61,33,45,23],[61,35,45,25],[62,6,45,25],[62,10,45,25,"_this"],[62,15,45,25],[63,6,45,25,"_classCallCheck"],[63,21,45,25],[63,28,45,25,"GoTrueClient"],[63,40,45,25],[64,6,46,8],[64,10,46,12,"_a"],[64,12,46,14],[64,14,46,16,"_b"],[64,16,46,18],[65,6,47,8],[66,0,48,0],[67,0,49,0],[68,6,50,8],[68,10,50,12],[68,11,50,13,"userStorage"],[68,22,50,24],[68,25,50,27],[68,29,50,31],[69,6,51,8],[69,10,51,12],[69,11,51,13,"memoryStorage"],[69,24,51,26],[69,27,51,29],[69,31,51,33],[70,6,52,8],[70,10,52,12],[70,11,52,13,"stateChangeEmitters"],[70,30,52,32],[70,33,52,35],[70,37,52,39,"Map"],[70,40,52,42],[70,41,52,43],[70,42,52,44],[71,6,53,8],[71,10,53,12],[71,11,53,13,"autoRefreshTicker"],[71,28,53,30],[71,31,53,33],[71,35,53,37],[72,6,54,8],[72,10,54,12],[72,11,54,13,"visibilityChangedCallback"],[72,36,54,38],[72,39,54,41],[72,43,54,45],[73,6,55,8],[73,10,55,12],[73,11,55,13,"refreshingDeferred"],[73,29,55,31],[73,32,55,34],[73,36,55,38],[74,6,56,8],[75,0,57,0],[76,0,58,0],[77,0,59,0],[78,0,60,0],[79,0,61,0],[80,6,62,8],[80,10,62,12],[80,11,62,13,"initializePromise"],[80,28,62,30],[80,31,62,33],[80,35,62,37],[81,6,63,8],[81,10,63,12],[81,11,63,13,"detectSessionInUrl"],[81,29,63,31],[81,32,63,34],[81,36,63,38],[82,6,64,8],[82,10,64,12],[82,11,64,13,"hasCustomAuthorizationHeader"],[82,39,64,41],[82,42,64,44],[82,47,64,49],[83,6,65,8],[83,10,65,12],[83,11,65,13,"suppressGetSessionWarning"],[83,36,65,38],[83,39,65,41],[83,44,65,46],[84,6,66,8],[84,10,66,12],[84,11,66,13,"lockAcquired"],[84,23,66,25],[84,26,66,28],[84,31,66,33],[85,6,67,8],[85,10,67,12],[85,11,67,13,"pendingInLock"],[85,24,67,26],[85,27,67,29],[85,29,67,31],[86,6,68,8],[87,0,69,0],[88,0,70,0],[89,6,71,8],[89,10,71,12],[89,11,71,13,"broadcastChannel"],[89,27,71,29],[89,30,71,32],[89,34,71,36],[90,6,72,8],[90,10,72,12],[90,11,72,13,"logger"],[90,17,72,19],[90,34,72,33],[91,6,73,8],[91,10,73,12],[91,11,73,13,"instanceID"],[91,21,73,23],[91,24,73,26,"GoTrueClient"],[91,36,73,38],[91,37,73,39,"nextInstanceID"],[91,51,73,53],[92,6,74,8,"GoTrueClient"],[92,18,74,20],[92,19,74,21,"nextInstanceID"],[92,33,74,35],[92,37,74,39],[92,38,74,40],[93,6,75,8],[93,10,75,12],[93,14,75,16],[93,15,75,17,"instanceID"],[93,25,75,27],[93,28,75,30],[93,29,75,31],[93,33,75,35],[93,34,75,36],[93,35,75,37],[93,37,75,39,"helpers_1"],[93,46,75,48],[93,47,75,49,"isBrowser"],[93,56,75,58],[93,58,75,60],[93,59,75,61],[93,61,75,63],[93,62,77,8],[94,6,78,8],[94,10,78,14,"settings"],[94,18,78,22],[94,21,78,25,"Object"],[94,27,78,31],[94,28,78,32,"assign"],[94,34,78,38],[94,35,78,39,"Object"],[94,41,78,45],[94,42,78,46,"assign"],[94,48,78,52],[94,49,78,53],[94,50,78,54],[94,51,78,55],[94,53,78,57,"DEFAULT_OPTIONS"],[94,68,78,72],[94,69,78,73],[94,71,78,75,"options"],[94,78,78,82],[94,79,78,83],[95,6,79,8],[95,10,79,12],[95,11,79,13,"logDebugMessages"],[95,27,79,29],[95,30,79,32],[95,31,79,33],[95,32,79,34,"settings"],[95,40,79,42],[95,41,79,43,"debug"],[95,46,79,48],[96,6,80,8],[96,10,80,12],[96,17,80,19,"settings"],[96,25,80,27],[96,26,80,28,"debug"],[96,31,80,33],[96,36,80,38],[96,46,80,48],[96,48,80,50],[97,8,81,12],[97,12,81,16],[97,13,81,17,"logger"],[97,19,81,23],[97,22,81,26,"settings"],[97,30,81,34],[97,31,81,35,"debug"],[97,36,81,40],[98,6,82,8],[99,6,83,8],[99,10,83,12],[99,11,83,13,"persistSession"],[99,25,83,27],[99,28,83,30,"settings"],[99,36,83,38],[99,37,83,39,"persistSession"],[99,51,83,53],[100,6,84,8],[100,10,84,12],[100,11,84,13,"storageKey"],[100,21,84,23],[100,24,84,26,"settings"],[100,32,84,34],[100,33,84,35,"storageKey"],[100,43,84,45],[101,6,85,8],[101,10,85,12],[101,11,85,13,"autoRefreshToken"],[101,27,85,29],[101,30,85,32,"settings"],[101,38,85,40],[101,39,85,41,"autoRefreshToken"],[101,55,85,57],[102,6,86,8],[102,10,86,12],[102,11,86,13,"admin"],[102,16,86,18],[102,19,86,21],[102,23,86,25,"GoTrueAdminApi_1"],[102,39,86,41],[102,40,86,42,"default"],[102,47,86,49],[102,48,86,50],[103,8,87,12,"url"],[103,11,87,15],[103,13,87,17,"settings"],[103,21,87,25],[103,22,87,26,"url"],[103,25,87,29],[104,8,88,12,"headers"],[104,15,88,19],[104,17,88,21,"settings"],[104,25,88,29],[104,26,88,30,"headers"],[104,33,88,37],[105,8,89,12,"fetch"],[105,13,89,17],[105,15,89,19,"settings"],[105,23,89,27],[105,24,89,28,"fetch"],[106,6,90,8],[106,7,90,9],[106,8,90,10],[107,6,91,8],[107,10,91,12],[107,11,91,13,"url"],[107,14,91,16],[107,17,91,19,"settings"],[107,25,91,27],[107,26,91,28,"url"],[107,29,91,31],[108,6,92,8],[108,10,92,12],[108,11,92,13,"headers"],[108,18,92,20],[108,21,92,23,"settings"],[108,29,92,31],[108,30,92,32,"headers"],[108,37,92,39],[109,6,93,8],[109,10,93,12],[109,11,93,13,"fetch"],[109,16,93,18],[109,19,93,21],[109,20,93,22],[109,21,93,23],[109,23,93,25,"helpers_1"],[109,32,93,34],[109,33,93,35,"resolveFetch"],[109,45,93,47],[109,47,93,49,"settings"],[109,55,93,57],[109,56,93,58,"fetch"],[109,61,93,63],[109,62,93,64],[110,6,94,8],[110,10,94,12],[110,11,94,13,"lock"],[110,15,94,17],[110,18,94,20,"settings"],[110,26,94,28],[110,27,94,29,"lock"],[110,31,94,33],[110,35,94,37,"lockNoOp"],[110,43,94,45],[111,6,95,8],[111,10,95,12],[111,11,95,13,"detectSessionInUrl"],[111,29,95,31],[111,32,95,34,"settings"],[111,40,95,42],[111,41,95,43,"detectSessionInUrl"],[111,59,95,61],[112,6,96,8],[112,10,96,12],[112,11,96,13,"flowType"],[112,19,96,21],[112,22,96,24,"settings"],[112,30,96,32],[112,31,96,33,"flowType"],[112,39,96,41],[113,6,97,8],[113,10,97,12],[113,11,97,13,"hasCustomAuthorizationHeader"],[113,39,97,41],[113,42,97,44,"settings"],[113,50,97,52],[113,51,97,53,"hasCustomAuthorizationHeader"],[113,79,97,81],[114,6,98,8],[114,10,98,12,"settings"],[114,18,98,20],[114,19,98,21,"lock"],[114,23,98,25],[114,25,98,27],[115,8,99,12],[115,12,99,16],[115,13,99,17,"lock"],[115,17,99,21],[115,20,99,24,"settings"],[115,28,99,32],[115,29,99,33,"lock"],[115,33,99,37],[116,6,100,8],[116,7,100,9],[116,13,101,13],[116,17,101,17],[116,18,101,18],[116,19,101,19],[116,21,101,21,"helpers_1"],[116,30,101,30],[116,31,101,31,"isBrowser"],[116,40,101,40],[116,42,101,42],[116,43,101,43],[116,48,101,48],[116,49,101,49,"_a"],[116,51,101,51],[116,54,101,54,"globalThis"],[116,64,101,64],[116,69,101,69],[116,73,101,73],[116,77,101,77,"globalThis"],[116,87,101,87],[116,92,101,87,"undefined"],[116,101,101,98],[116,104,101,98,"undefined"],[116,113,101,98],[116,116,101,110,"globalThis"],[116,126,101,120],[116,127,101,121,"navigator"],[116,136,101,130],[116,142,101,136],[116,146,101,140],[116,150,101,144,"_a"],[116,152,101,146],[116,157,101,146,"undefined"],[116,166,101,157],[116,169,101,157,"undefined"],[116,178,101,157],[116,181,101,169,"_a"],[116,183,101,171],[116,184,101,172,"locks"],[116,189,101,177],[116,190,101,178],[116,192,101,180],[117,8,102,12],[117,12,102,16],[117,13,102,17,"lock"],[117,17,102,21],[117,20,102,24,"locks_1"],[117,27,102,31],[117,28,102,32,"navigatorLock"],[117,41,102,45],[118,6,103,8],[118,7,103,9],[118,13,104,13],[119,8,105,12],[119,12,105,16],[119,13,105,17,"lock"],[119,17,105,21],[119,20,105,24,"lockNoOp"],[119,28,105,32],[120,6,106,8],[121,6,107,8],[121,10,107,12],[121,11,107,13],[121,15,107,17],[121,16,107,18,"jwks"],[121,20,107,22],[121,22,107,24],[122,8,108,12],[122,12,108,16],[122,13,108,17,"jwks"],[122,17,108,21],[122,20,108,24],[123,10,108,26,"keys"],[123,14,108,30],[123,16,108,32],[124,8,108,35],[124,9,108,36],[125,8,109,12],[125,12,109,16],[125,13,109,17,"jwks_cached_at"],[125,27,109,31],[125,30,109,34,"Number"],[125,36,109,40],[125,37,109,41,"MIN_SAFE_INTEGER"],[125,53,109,57],[126,6,110,8],[127,6,111,8],[127,10,111,12],[127,11,111,13,"mfa"],[127,14,111,16],[127,17,111,19],[128,8,112,12,"verify"],[128,14,112,18],[128,16,112,20],[128,20,112,24],[128,21,112,25,"_verify"],[128,28,112,32],[128,29,112,33,"bind"],[128,33,112,37],[128,34,112,38],[128,38,112,42],[128,39,112,43],[129,8,113,12,"enroll"],[129,14,113,18],[129,16,113,20],[129,20,113,24],[129,21,113,25,"_enroll"],[129,28,113,32],[129,29,113,33,"bind"],[129,33,113,37],[129,34,113,38],[129,38,113,42],[129,39,113,43],[130,8,114,12,"unenroll"],[130,16,114,20],[130,18,114,22],[130,22,114,26],[130,23,114,27,"_unenroll"],[130,32,114,36],[130,33,114,37,"bind"],[130,37,114,41],[130,38,114,42],[130,42,114,46],[130,43,114,47],[131,8,115,12,"challenge"],[131,17,115,21],[131,19,115,23],[131,23,115,27],[131,24,115,28,"_challenge"],[131,34,115,38],[131,35,115,39,"bind"],[131,39,115,43],[131,40,115,44],[131,44,115,48],[131,45,115,49],[132,8,116,12,"listFactors"],[132,19,116,23],[132,21,116,25],[132,25,116,29],[132,26,116,30,"_listFactors"],[132,38,116,42],[132,39,116,43,"bind"],[132,43,116,47],[132,44,116,48],[132,48,116,52],[132,49,116,53],[133,8,117,12,"challengeAndVerify"],[133,26,117,30],[133,28,117,32],[133,32,117,36],[133,33,117,37,"_challengeAndVerify"],[133,52,117,56],[133,53,117,57,"bind"],[133,57,117,61],[133,58,117,62],[133,62,117,66],[133,63,117,67],[134,8,118,12,"getAuthenticatorAssuranceLevel"],[134,38,118,42],[134,40,118,44],[134,44,118,48],[134,45,118,49,"_getAuthenticatorAssuranceLevel"],[134,76,118,80],[134,77,118,81,"bind"],[134,81,118,85],[134,82,118,86],[134,86,118,90],[135,6,119,8],[135,7,119,9],[136,6,120,8],[136,10,120,12],[136,14,120,16],[136,15,120,17,"persistSession"],[136,29,120,31],[136,31,120,33],[137,8,121,12],[137,12,121,16,"settings"],[137,20,121,24],[137,21,121,25,"storage"],[137,28,121,32],[137,30,121,34],[138,10,122,16],[138,14,122,20],[138,15,122,21,"storage"],[138,22,122,28],[138,25,122,31,"settings"],[138,33,122,39],[138,34,122,40,"storage"],[138,41,122,47],[139,8,123,12],[139,9,123,13],[139,15,124,17],[140,10,125,16],[140,14,125,20],[140,15,125,21],[140,16,125,22],[140,18,125,24,"helpers_1"],[140,27,125,33],[140,28,125,34,"supportsLocalStorage"],[140,48,125,54],[140,50,125,56],[140,51,125,57],[140,53,125,59],[141,12,126,20],[141,16,126,24],[141,17,126,25,"storage"],[141,24,126,32],[141,27,126,35,"globalThis"],[141,37,126,45],[141,38,126,46,"localStorage"],[141,50,126,58],[142,10,127,16],[142,11,127,17],[142,17,128,21],[143,12,129,20],[143,16,129,24],[143,17,129,25,"memoryStorage"],[143,30,129,38],[143,33,129,41],[143,34,129,42],[143,35,129,43],[144,12,130,20],[144,16,130,24],[144,17,130,25,"storage"],[144,24,130,32],[144,27,130,35],[144,28,130,36],[144,29,130,37],[144,31,130,39,"local_storage_1"],[144,46,130,54],[144,47,130,55,"memoryLocalStorageAdapter"],[144,72,130,80],[144,74,130,82],[144,78,130,86],[144,79,130,87,"memoryStorage"],[144,92,130,100],[144,93,130,101],[145,10,131,16],[146,8,132,12],[147,8,133,12],[147,12,133,16,"settings"],[147,20,133,24],[147,21,133,25,"userStorage"],[147,32,133,36],[147,34,133,38],[148,10,134,16],[148,14,134,20],[148,15,134,21,"userStorage"],[148,26,134,32],[148,29,134,35,"settings"],[148,37,134,43],[148,38,134,44,"userStorage"],[148,49,134,55],[149,8,135,12],[150,6,136,8],[150,7,136,9],[150,13,137,13],[151,8,138,12],[151,12,138,16],[151,13,138,17,"memoryStorage"],[151,26,138,30],[151,29,138,33],[151,30,138,34],[151,31,138,35],[152,8,139,12],[152,12,139,16],[152,13,139,17,"storage"],[152,20,139,24],[152,23,139,27],[152,24,139,28],[152,25,139,29],[152,27,139,31,"local_storage_1"],[152,42,139,46],[152,43,139,47,"memoryLocalStorageAdapter"],[152,68,139,72],[152,70,139,74],[152,74,139,78],[152,75,139,79,"memoryStorage"],[152,88,139,92],[152,89,139,93],[153,6,140,8],[154,6,141,8],[154,10,141,12],[154,11,141,13],[154,12,141,14],[154,14,141,16,"helpers_1"],[154,23,141,25],[154,24,141,26,"isBrowser"],[154,33,141,35],[154,35,141,37],[154,36,141,38],[154,40,141,42,"globalThis"],[154,50,141,52],[154,51,141,53,"BroadcastChannel"],[154,67,141,69],[154,71,141,73],[154,75,141,77],[154,76,141,78,"persistSession"],[154,90,141,92],[154,94,141,96],[154,98,141,100],[154,99,141,101,"storageKey"],[154,109,141,111],[154,111,141,113],[155,8,142,12],[155,12,142,16],[156,10,143,16],[156,14,143,20],[156,15,143,21,"broadcastChannel"],[156,31,143,37],[156,34,143,40],[156,38,143,44,"globalThis"],[156,48,143,54],[156,49,143,55,"BroadcastChannel"],[156,65,143,71],[156,66,143,72],[156,70,143,76],[156,71,143,77,"storageKey"],[156,81,143,87],[156,82,143,88],[157,8,144,12],[157,9,144,13],[157,10,145,12],[157,17,145,19,"e"],[157,18,145,20],[157,20,145,22],[157,21,147,12],[158,8,148,12],[158,9,148,13,"_b"],[158,11,148,15],[158,14,148,18],[158,18,148,22],[158,19,148,23,"broadcastChannel"],[158,35,148,39],[158,41,148,45],[158,45,148,49],[158,49,148,53,"_b"],[158,51,148,55],[158,56,148,55,"undefined"],[158,65,148,66],[158,68,148,66,"undefined"],[158,77,148,66],[158,80,148,78,"_b"],[158,82,148,80],[158,83,148,81,"addEventListener"],[158,99,148,97],[158,100,148,98],[158,109,148,107],[159,10,148,107],[159,14,148,107,"_ref"],[159,18,148,107],[159,21,148,107,"_asyncToGenerator"],[159,38,148,107],[159,39,148,109],[159,50,148,116,"event"],[159,55,148,121],[159,57,148,126],[160,12,149,16,"_this"],[160,17,149,20],[160,18,149,21,"_debug"],[160,24,149,27],[160,25,149,28],[160,83,149,86],[160,85,149,88,"event"],[160,90,149,93],[160,91,149,94],[161,12,150,16],[161,18,150,22,"_this"],[161,23,150,26],[161,24,150,27,"_notifyAllSubscribers"],[161,45,150,48],[161,46,150,49,"event"],[161,51,150,54],[161,52,150,55,"data"],[161,56,150,59],[161,57,150,60,"event"],[161,62,150,65],[161,64,150,67,"event"],[161,69,150,72],[161,70,150,73,"data"],[161,74,150,77],[161,75,150,78,"session"],[161,82,150,85],[161,84,150,87],[161,89,150,92],[161,90,150,93],[161,91,150,94],[161,92,150,95],[162,10,151,12],[162,11,151,13],[163,10,151,13],[163,27,151,13,"_x4"],[163,30,151,13],[164,12,151,13],[164,19,151,13,"_ref"],[164,23,151,13],[164,24,151,13,"apply"],[164,29,151,13],[164,36,151,13,"arguments"],[164,45,151,13],[165,10,151,13],[166,8,151,13],[166,12,151,14],[167,6,152,8],[168,6,153,8],[168,10,153,12],[168,11,153,13,"initialize"],[168,21,153,23],[168,22,153,24],[168,23,153,25],[169,4,154,4],[170,4,155,4],[171,0,156,0],[172,0,157,0],[173,4,155,4],[173,11,155,4,"_createClass"],[173,23,155,4],[173,24,155,4,"GoTrueClient"],[173,36,155,4],[174,6,155,4,"key"],[174,9,155,4],[175,6,155,4,"get"],[175,9,155,4],[175,11,158,4],[175,20,158,4,"get"],[175,21,158,4],[175,23,158,15],[176,8,159,8],[176,12,159,12,"_a"],[176,14,159,14],[176,16,159,16,"_b"],[176,18,159,18],[177,8,160,8],[177,15,160,15],[177,16,160,16,"_b"],[177,18,160,18],[177,21,160,21],[177,22,160,22,"_a"],[177,24,160,24],[177,27,160,27,"GLOBAL_JWKS"],[177,38,160,38],[177,39,160,39],[177,43,160,43],[177,44,160,44,"storageKey"],[177,54,160,54],[177,55,160,55],[177,61,160,61],[177,65,160,65],[177,69,160,69,"_a"],[177,71,160,71],[177,76,160,71,"undefined"],[177,85,160,82],[177,88,160,82,"undefined"],[177,97,160,82],[177,100,160,94,"_a"],[177,102,160,96],[177,103,160,97,"jwks"],[177,107,160,101],[177,113,160,107],[177,117,160,111],[177,121,160,115,"_b"],[177,123,160,117],[177,128,160,117,"undefined"],[177,137,160,128],[177,140,160,131,"_b"],[177,142,160,133],[177,145,160,136],[178,10,160,138,"keys"],[178,14,160,142],[178,16,160,144],[179,8,160,147],[179,9,160,148],[180,6,161,4],[180,7,161,5],[181,6,161,5,"set"],[181,9,161,5],[181,11,162,4],[181,20,162,4,"set"],[181,21,162,13,"value"],[181,26,162,18],[181,28,162,20],[182,8,163,8,"GLOBAL_JWKS"],[182,19,163,19],[182,20,163,20],[182,24,163,24],[182,25,163,25,"storageKey"],[182,35,163,35],[182,36,163,36],[182,39,163,39,"Object"],[182,45,163,45],[182,46,163,46,"assign"],[182,52,163,52],[182,53,163,53,"Object"],[182,59,163,59],[182,60,163,60,"assign"],[182,66,163,66],[182,67,163,67],[182,68,163,68],[182,69,163,69],[182,71,163,71,"GLOBAL_JWKS"],[182,82,163,82],[182,83,163,83],[182,87,163,87],[182,88,163,88,"storageKey"],[182,98,163,98],[182,99,163,99],[182,100,163,100],[182,102,163,102],[183,10,163,104,"jwks"],[183,14,163,108],[183,16,163,110,"value"],[184,8,163,116],[184,9,163,117],[184,10,163,118],[185,6,164,4],[186,4,164,5],[187,6,164,5,"key"],[187,9,164,5],[188,6,164,5,"get"],[188,9,164,5],[188,11,165,4],[188,20,165,4,"get"],[188,21,165,4],[188,23,165,25],[189,8,166,8],[189,12,166,12,"_a"],[189,14,166,14],[189,16,166,16,"_b"],[189,18,166,18],[190,8,167,8],[190,15,167,15],[190,16,167,16,"_b"],[190,18,167,18],[190,21,167,21],[190,22,167,22,"_a"],[190,24,167,24],[190,27,167,27,"GLOBAL_JWKS"],[190,38,167,38],[190,39,167,39],[190,43,167,43],[190,44,167,44,"storageKey"],[190,54,167,54],[190,55,167,55],[190,61,167,61],[190,65,167,65],[190,69,167,69,"_a"],[190,71,167,71],[190,76,167,71,"undefined"],[190,85,167,82],[190,88,167,82,"undefined"],[190,97,167,82],[190,100,167,94,"_a"],[190,102,167,96],[190,103,167,97,"cachedAt"],[190,111,167,105],[190,117,167,111],[190,121,167,115],[190,125,167,119,"_b"],[190,127,167,121],[190,132,167,121,"undefined"],[190,141,167,132],[190,144,167,135,"_b"],[190,146,167,137],[190,149,167,140,"Number"],[190,155,167,146],[190,156,167,147,"MIN_SAFE_INTEGER"],[190,172,167,163],[191,6,168,4],[191,7,168,5],[192,6,168,5,"set"],[192,9,168,5],[192,11,169,4],[192,20,169,4,"set"],[192,21,169,23,"value"],[192,26,169,28],[192,28,169,30],[193,8,170,8,"GLOBAL_JWKS"],[193,19,170,19],[193,20,170,20],[193,24,170,24],[193,25,170,25,"storageKey"],[193,35,170,35],[193,36,170,36],[193,39,170,39,"Object"],[193,45,170,45],[193,46,170,46,"assign"],[193,52,170,52],[193,53,170,53,"Object"],[193,59,170,59],[193,60,170,60,"assign"],[193,66,170,66],[193,67,170,67],[193,68,170,68],[193,69,170,69],[193,71,170,71,"GLOBAL_JWKS"],[193,82,170,82],[193,83,170,83],[193,87,170,87],[193,88,170,88,"storageKey"],[193,98,170,98],[193,99,170,99],[193,100,170,100],[193,102,170,102],[194,10,170,104,"cachedAt"],[194,18,170,112],[194,20,170,114,"value"],[195,8,170,120],[195,9,170,121],[195,10,170,122],[196,6,171,4],[197,4,171,5],[198,6,171,5,"key"],[198,9,171,5],[199,6,171,5,"value"],[199,11,171,5],[199,13,172,4],[199,22,172,4,"_debug"],[199,28,172,10,"_debug"],[199,29,172,10],[199,31,172,20],[200,8,173,8],[200,12,173,12],[200,16,173,16],[200,17,173,17,"logDebugMessages"],[200,33,173,33],[200,35,173,35],[201,10,173,35],[201,19,173,35,"_len"],[201,23,173,35],[201,26,173,35,"arguments"],[201,35,173,35],[201,36,173,35,"length"],[201,42,173,35],[201,44,172,14,"args"],[201,48,172,18],[201,55,172,18,"Array"],[201,60,172,18],[201,61,172,18,"_len"],[201,65,172,18],[201,68,172,18,"_key"],[201,72,172,18],[201,78,172,18,"_key"],[201,82,172,18],[201,85,172,18,"_len"],[201,89,172,18],[201,91,172,18,"_key"],[201,95,172,18],[202,12,172,14,"args"],[202,16,172,18],[202,17,172,18,"_key"],[202,21,172,18],[202,25,172,18,"arguments"],[202,34,172,18],[202,35,172,18,"_key"],[202,39,172,18],[203,10,172,18],[204,10,174,12],[204,14,174,16],[204,15,174,17,"logger"],[204,21,174,23],[204,22,174,24],[204,38,174,40],[204,42,174,44],[204,43,174,45,"instanceID"],[204,53,174,55],[204,58,174,60,"version_1"],[204,67,174,69],[204,68,174,70,"version"],[204,75,174,77],[204,80,174,82],[204,84,174,86,"Date"],[204,88,174,90],[204,89,174,91],[204,90,174,92],[204,91,174,93,"toISOString"],[204,102,174,104],[204,103,174,105],[204,104,174,106],[204,106,174,108],[204,108,174,110],[204,111,174,113,"args"],[204,115,174,117],[204,116,174,118],[205,8,175,8],[206,8,176,8],[206,15,176,15],[206,19,176,19],[207,6,177,4],[208,6,178,4],[209,0,179,0],[210,0,180,0],[211,0,181,0],[212,0,182,0],[213,4,178,4],[214,6,178,4,"key"],[214,9,178,4],[215,6,178,4,"value"],[215,11,178,4],[216,8,178,4],[216,12,178,4,"_initialize2"],[216,24,178,4],[216,27,178,4,"_asyncToGenerator"],[216,44,178,4],[216,45,183,4],[216,58,183,23],[217,10,183,23],[217,14,183,23,"_this2"],[217,20,183,23],[218,10,184,8],[218,14,184,12],[218,18,184,16],[218,19,184,17,"initializePromise"],[218,36,184,34],[218,38,184,36],[219,12,185,12],[219,25,185,25],[219,29,185,29],[219,30,185,30,"initializePromise"],[219,47,185,47],[220,10,186,8],[221,10,187,8],[221,14,187,12],[221,15,187,13,"initializePromise"],[221,32,187,30],[221,35,187,33,"_asyncToGenerator"],[221,52,187,33],[221,53,187,34],[221,66,187,46],[222,12,188,12],[222,25,188,25,"_this2"],[222,31,188,29],[222,32,188,30,"_acquireLock"],[222,44,188,42],[222,62,188,42,"_asyncToGenerator"],[222,79,188,42],[222,80,188,47],[222,93,188,59],[223,14,189,16],[223,27,189,29,"_this2"],[223,33,189,33],[223,34,189,34,"_initialize"],[223,45,189,45],[223,46,189,46],[223,47,189,47],[224,12,190,12],[224,13,190,13],[224,15,190,14],[225,10,191,8],[225,11,191,9],[225,13,191,11],[225,14,191,12],[226,10,192,8],[226,23,192,21],[226,27,192,25],[226,28,192,26,"initializePromise"],[226,45,192,43],[227,8,193,4],[227,9,193,5],[228,8,193,5],[228,17,183,10,"initialize"],[228,27,183,20,"initialize"],[228,28,183,20],[229,10,183,20],[229,17,183,20,"_initialize2"],[229,29,183,20],[229,30,183,20,"apply"],[229,35,183,20],[229,42,183,20,"arguments"],[229,51,183,20],[230,8,183,20],[231,8,183,20],[231,15,183,10,"initialize"],[231,25,183,20],[232,6,183,20],[233,6,194,4],[234,0,195,0],[235,0,196,0],[236,0,197,0],[237,0,198,0],[238,0,199,0],[239,6,194,4],[240,4,194,4],[241,6,194,4,"key"],[241,9,194,4],[242,6,194,4,"value"],[242,11,194,4],[243,8,194,4],[243,12,194,4,"_initialize3"],[243,24,194,4],[243,27,194,4,"_asyncToGenerator"],[243,44,194,4],[243,45,200,4],[243,58,200,24],[244,10,200,24],[244,14,200,24,"_this3"],[244,20,200,24],[245,10,201,8],[245,14,201,12,"_a"],[245,16,201,14],[246,10,202,8],[246,14,202,12],[247,12,203,12],[247,16,203,18,"params"],[247,22,203,24],[247,25,203,27],[247,26,203,28],[247,27,203,29],[247,29,203,31,"helpers_1"],[247,38,203,40],[247,39,203,41,"parseParametersFromURL"],[247,61,203,63],[247,63,203,65,"window"],[247,69,203,71],[247,70,203,72,"location"],[247,78,203,80],[247,79,203,81,"href"],[247,83,203,85],[247,84,203,86],[248,12,204,12],[248,16,204,16,"callbackUrlType"],[248,31,204,31],[248,34,204,34],[248,40,204,40],[249,12,205,12],[249,16,205,16],[249,20,205,20],[249,21,205,21,"_isImplicitGrantCallback"],[249,45,205,45],[249,46,205,46,"params"],[249,52,205,52],[249,53,205,53],[249,55,205,55],[250,14,206,16,"callbackUrlType"],[250,29,206,31],[250,32,206,34],[250,42,206,44],[251,12,207,12],[251,13,207,13],[251,19,208,17],[251,29,208,27],[251,33,208,31],[251,34,208,32,"_isPKCECallback"],[251,49,208,47],[251,50,208,48,"params"],[251,56,208,54],[251,57,208,55],[251,59,208,57],[252,14,209,16,"callbackUrlType"],[252,29,209,31],[252,32,209,34],[252,38,209,40],[253,12,210,12],[254,12,211,12],[255,0,212,0],[256,0,213,0],[257,0,214,0],[258,0,215,0],[259,0,216,0],[260,12,217,12],[260,16,217,16],[260,17,217,17],[260,18,217,18],[260,20,217,20,"helpers_1"],[260,29,217,29],[260,30,217,30,"isBrowser"],[260,39,217,39],[260,41,217,41],[260,42,217,42],[260,46,217,46],[260,50,217,50],[260,51,217,51,"detectSessionInUrl"],[260,69,217,69],[260,73,217,73,"callbackUrlType"],[260,88,217,88],[260,93,217,93],[260,99,217,99],[260,101,217,101],[261,14,218,16],[261,18,218,16,"_yield$this$_getSessi"],[261,39,218,16],[261,48,218,46],[261,52,218,50],[261,53,218,51,"_getSessionFromURL"],[261,71,218,69],[261,72,218,70,"params"],[261,78,218,76],[261,80,218,78,"callbackUrlType"],[261,95,218,93],[261,96,218,94],[262,16,218,24,"data"],[262,20,218,28],[262,23,218,28,"_yield$this$_getSessi"],[262,44,218,28],[262,45,218,24,"data"],[262,49,218,28],[263,16,218,30,"error"],[263,21,218,35],[263,24,218,35,"_yield$this$_getSessi"],[263,45,218,35],[263,46,218,30,"error"],[263,51,218,35],[264,14,219,16],[264,18,219,20,"error"],[264,23,219,25],[264,25,219,27],[265,16,220,20],[265,20,220,24],[265,21,220,25,"_debug"],[265,27,220,31],[265,28,220,32],[265,44,220,48],[265,46,220,50],[265,80,220,84],[265,82,220,86,"error"],[265,87,220,91],[265,88,220,92],[266,16,221,20],[266,20,221,24],[266,21,221,25],[266,22,221,26],[266,24,221,28,"errors_1"],[266,32,221,36],[266,33,221,37,"isAuthImplicitGrantRedirectError"],[266,65,221,69],[266,67,221,71,"error"],[266,72,221,76],[266,73,221,77],[266,75,221,79],[267,18,222,24],[267,22,222,30,"errorCode"],[267,31,222,39],[267,34,222,42],[267,35,222,43,"_a"],[267,37,222,45],[267,40,222,48,"error"],[267,45,222,53],[267,46,222,54,"details"],[267,53,222,61],[267,59,222,67],[267,63,222,71],[267,67,222,75,"_a"],[267,69,222,77],[267,74,222,77,"undefined"],[267,83,222,88],[267,86,222,88,"undefined"],[267,95,222,88],[267,98,222,100,"_a"],[267,100,222,102],[267,101,222,103,"code"],[267,105,222,107],[268,18,223,24],[268,22,223,28,"errorCode"],[268,31,223,37],[268,36,223,42],[268,61,223,67],[268,65,224,28,"errorCode"],[268,74,224,37],[268,79,224,42],[268,99,224,62],[268,103,225,28,"errorCode"],[268,112,225,37],[268,117,225,42],[268,148,225,73],[268,150,225,75],[269,20,226,28],[269,27,226,35],[270,22,226,37,"error"],[271,20,226,43],[271,21,226,44],[272,18,227,24],[273,16,228,20],[274,16,229,20],[275,16,230,20],[276,16,231,20],[276,22,231,26],[276,26,231,30],[276,27,231,31,"_removeSession"],[276,41,231,45],[276,42,231,46],[276,43,231,47],[277,16,232,20],[277,23,232,27],[278,18,232,29,"error"],[279,16,232,35],[279,17,232,36],[280,14,233,16],[281,14,234,16],[281,18,234,24,"session"],[281,25,234,31],[281,28,234,50,"data"],[281,32,234,54],[281,33,234,24,"session"],[281,40,234,31],[282,16,234,33,"redirectType"],[282,28,234,45],[282,31,234,50,"data"],[282,35,234,54],[282,36,234,33,"redirectType"],[282,48,234,45],[283,14,235,16],[283,18,235,20],[283,19,235,21,"_debug"],[283,25,235,27],[283,26,235,28],[283,42,235,44],[283,44,235,46],[283,69,235,71],[283,71,235,73,"session"],[283,78,235,80],[283,80,235,82],[283,95,235,97],[283,97,235,99,"redirectType"],[283,109,235,111],[283,110,235,112],[284,14,236,16],[284,20,236,22],[284,24,236,26],[284,25,236,27,"_saveSession"],[284,37,236,39],[284,38,236,40,"session"],[284,45,236,47],[284,46,236,48],[285,14,237,16,"setTimeout"],[285,24,237,26],[285,38,237,26,"_asyncToGenerator"],[285,55,237,26],[285,56,237,27],[285,69,237,39],[286,16,238,20],[286,20,238,24,"redirectType"],[286,32,238,36],[286,37,238,41],[286,47,238,51],[286,49,238,53],[287,18,239,24],[287,24,239,30,"_this3"],[287,30,239,34],[287,31,239,35,"_notifyAllSubscribers"],[287,52,239,56],[287,53,239,57],[287,72,239,76],[287,74,239,78,"session"],[287,81,239,85],[287,82,239,86],[288,16,240,20],[288,17,240,21],[288,23,241,25],[289,18,242,24],[289,24,242,30,"_this3"],[289,30,242,34],[289,31,242,35,"_notifyAllSubscribers"],[289,52,242,56],[289,53,242,57],[289,64,242,68],[289,66,242,70,"session"],[289,73,242,77],[289,74,242,78],[290,16,243,20],[291,14,244,16],[291,15,244,17],[291,18,244,19],[291,19,244,20],[291,20,244,21],[292,14,245,16],[292,21,245,23],[293,16,245,25,"error"],[293,21,245,30],[293,23,245,32],[294,14,245,37],[294,15,245,38],[295,12,246,12],[296,12,247,12],[297,12,248,12],[297,18,248,18],[297,22,248,22],[297,23,248,23,"_recoverAndRefresh"],[297,41,248,41],[297,42,248,42],[297,43,248,43],[298,12,249,12],[298,19,249,19],[299,14,249,21,"error"],[299,19,249,26],[299,21,249,28],[300,12,249,33],[300,13,249,34],[301,10,250,8],[301,11,250,9],[301,12,251,8],[301,19,251,15,"error"],[301,24,251,20],[301,26,251,22],[302,12,252,12],[302,16,252,16],[302,17,252,17],[302,18,252,18],[302,20,252,20,"errors_1"],[302,28,252,28],[302,29,252,29,"isAuthError"],[302,40,252,40],[302,42,252,42,"error"],[302,47,252,47],[302,48,252,48],[302,50,252,50],[303,14,253,16],[303,21,253,23],[304,16,253,25,"error"],[305,14,253,31],[305,15,253,32],[306,12,254,12],[307,12,255,12],[307,19,255,19],[308,14,256,16,"error"],[308,19,256,21],[308,21,256,23],[308,25,256,27,"errors_1"],[308,33,256,35],[308,34,256,36,"AuthUnknownError"],[308,50,256,52],[308,51,256,53],[308,91,256,93],[308,93,256,95,"error"],[308,98,256,100],[309,12,257,12],[309,13,257,13],[310,10,258,8],[310,11,258,9],[310,20,259,16],[311,12,260,12],[311,18,260,18],[311,22,260,22],[311,23,260,23,"_handleVisibilityChange"],[311,46,260,46],[311,47,260,47],[311,48,260,48],[312,12,261,12],[312,16,261,16],[312,17,261,17,"_debug"],[312,23,261,23],[312,24,261,24],[312,40,261,40],[312,42,261,42],[312,47,261,47],[312,48,261,48],[313,10,262,8],[314,8,263,4],[314,9,263,5],[315,8,263,5],[315,17,200,10,"_initialize"],[315,28,200,21,"_initialize"],[315,29,200,21],[316,10,200,21],[316,17,200,21,"_initialize3"],[316,29,200,21],[316,30,200,21,"apply"],[316,35,200,21],[316,42,200,21,"arguments"],[316,51,200,21],[317,8,200,21],[318,8,200,21],[318,15,200,10,"_initialize"],[318,26,200,21],[319,6,200,21],[320,6,264,4],[321,0,265,0],[322,0,266,0],[323,0,267,0],[324,0,268,0],[325,6,264,4],[326,4,264,4],[327,6,264,4,"key"],[327,9,264,4],[328,6,264,4,"value"],[328,11,264,4],[329,8,264,4],[329,12,264,4,"_signInAnonymously"],[329,30,264,4],[329,33,264,4,"_asyncToGenerator"],[329,50,264,4],[329,51,269,4],[329,62,269,28,"credentials"],[329,73,269,39],[329,75,269,41],[330,10,270,8],[330,14,270,12,"_a"],[330,16,270,14],[330,18,270,16,"_b"],[330,20,270,18],[330,22,270,20,"_c"],[330,24,270,22],[331,10,271,8],[331,14,271,12],[332,12,272,12],[332,16,272,18,"res"],[332,19,272,21],[332,28,272,30],[332,29,272,31],[332,30,272,32],[332,32,272,34,"fetch_1"],[332,39,272,41],[332,40,272,42,"_request"],[332,48,272,50],[332,50,272,52],[332,54,272,56],[332,55,272,57,"fetch"],[332,60,272,62],[332,62,272,64],[332,68,272,70],[332,70,272,72],[332,73,272,75],[332,77,272,79],[332,78,272,80,"url"],[332,81,272,83],[332,90,272,92],[332,92,272,94],[333,14,273,16,"headers"],[333,21,273,23],[333,23,273,25],[333,27,273,29],[333,28,273,30,"headers"],[333,35,273,37],[334,14,274,16,"body"],[334,18,274,20],[334,20,274,22],[335,16,275,20,"data"],[335,20,275,24],[335,22,275,26],[335,23,275,27,"_b"],[335,25,275,29],[335,28,275,32],[335,29,275,33,"_a"],[335,31,275,35],[335,34,275,38,"credentials"],[335,45,275,49],[335,50,275,54],[335,54,275,58],[335,58,275,62,"credentials"],[335,69,275,73],[335,74,275,73,"undefined"],[335,83,275,84],[335,86,275,84,"undefined"],[335,95,275,84],[335,98,275,96,"credentials"],[335,109,275,107],[335,110,275,108,"options"],[335,117,275,115],[335,123,275,121],[335,127,275,125],[335,131,275,129,"_a"],[335,133,275,131],[335,138,275,131,"undefined"],[335,147,275,142],[335,150,275,142,"undefined"],[335,159,275,142],[335,162,275,154,"_a"],[335,164,275,156],[335,165,275,157,"data"],[335,169,275,161],[335,175,275,167],[335,179,275,171],[335,183,275,175,"_b"],[335,185,275,177],[335,190,275,177,"undefined"],[335,199,275,188],[335,202,275,191,"_b"],[335,204,275,193],[335,207,275,196],[335,208,275,197],[335,209,275,198],[336,16,276,20,"gotrue_meta_security"],[336,36,276,40],[336,38,276,42],[337,18,276,44,"captcha_token"],[337,31,276,57],[337,33,276,59],[337,34,276,60,"_c"],[337,36,276,62],[337,39,276,65,"credentials"],[337,50,276,76],[337,55,276,81],[337,59,276,85],[337,63,276,89,"credentials"],[337,74,276,100],[337,79,276,100,"undefined"],[337,88,276,111],[337,91,276,111,"undefined"],[337,100,276,111],[337,103,276,123,"credentials"],[337,114,276,134],[337,115,276,135,"options"],[337,122,276,142],[337,128,276,148],[337,132,276,152],[337,136,276,156,"_c"],[337,138,276,158],[337,143,276,158,"undefined"],[337,152,276,169],[337,155,276,169,"undefined"],[337,164,276,169],[337,167,276,181,"_c"],[337,169,276,183],[337,170,276,184,"captchaToken"],[338,16,276,197],[339,14,277,16],[339,15,277,17],[340,14,278,16,"xform"],[340,19,278,21],[340,21,278,23,"fetch_1"],[340,28,278,30],[340,29,278,31,"_sessionResponse"],[341,12,279,12],[341,13,279,13],[341,14,279,14],[342,12,280,12],[342,16,280,20,"data"],[342,20,280,24],[342,23,280,36,"res"],[342,26,280,39],[342,27,280,20,"data"],[342,31,280,24],[343,14,280,26,"error"],[343,19,280,31],[343,22,280,36,"res"],[343,25,280,39],[343,26,280,26,"error"],[343,31,280,31],[344,12,281,12],[344,16,281,16,"error"],[344,21,281,21],[344,25,281,25],[344,26,281,26,"data"],[344,30,281,30],[344,32,281,32],[345,14,282,16],[345,21,282,23],[346,16,282,25,"data"],[346,20,282,29],[346,22,282,31],[347,18,282,33,"user"],[347,22,282,37],[347,24,282,39],[347,28,282,43],[348,18,282,45,"session"],[348,25,282,52],[348,27,282,54],[349,16,282,59],[349,17,282,60],[350,16,282,62,"error"],[350,21,282,67],[350,23,282,69,"error"],[351,14,282,75],[351,15,282,76],[352,12,283,12],[353,12,284,12],[353,16,284,18,"session"],[353,23,284,25],[353,26,284,28,"data"],[353,30,284,32],[353,31,284,33,"session"],[353,38,284,40],[354,12,285,12],[354,16,285,18,"user"],[354,20,285,22],[354,23,285,25,"data"],[354,27,285,29],[354,28,285,30,"user"],[354,32,285,34],[355,12,286,12],[355,16,286,16,"data"],[355,20,286,20],[355,21,286,21,"session"],[355,28,286,28],[355,30,286,30],[356,14,287,16],[356,20,287,22],[356,24,287,26],[356,25,287,27,"_saveSession"],[356,37,287,39],[356,38,287,40,"data"],[356,42,287,44],[356,43,287,45,"session"],[356,50,287,52],[356,51,287,53],[357,14,288,16],[357,20,288,22],[357,24,288,26],[357,25,288,27,"_notifyAllSubscribers"],[357,46,288,48],[357,47,288,49],[357,58,288,60],[357,60,288,62,"session"],[357,67,288,69],[357,68,288,70],[358,12,289,12],[359,12,290,12],[359,19,290,19],[360,14,290,21,"data"],[360,18,290,25],[360,20,290,27],[361,16,290,29,"user"],[361,20,290,33],[362,16,290,35,"session"],[363,14,290,43],[363,15,290,44],[364,14,290,46,"error"],[364,19,290,51],[364,21,290,53],[365,12,290,58],[365,13,290,59],[366,10,291,8],[366,11,291,9],[366,12,292,8],[366,19,292,15,"error"],[366,24,292,20],[366,26,292,22],[367,12,293,12],[367,16,293,16],[367,17,293,17],[367,18,293,18],[367,20,293,20,"errors_1"],[367,28,293,28],[367,29,293,29,"isAuthError"],[367,40,293,40],[367,42,293,42,"error"],[367,47,293,47],[367,48,293,48],[367,50,293,50],[368,14,294,16],[368,21,294,23],[369,16,294,25,"data"],[369,20,294,29],[369,22,294,31],[370,18,294,33,"user"],[370,22,294,37],[370,24,294,39],[370,28,294,43],[371,18,294,45,"session"],[371,25,294,52],[371,27,294,54],[372,16,294,59],[372,17,294,60],[373,16,294,62,"error"],[374,14,294,68],[374,15,294,69],[375,12,295,12],[376,12,296,12],[376,18,296,18,"error"],[376,23,296,23],[377,10,297,8],[378,8,298,4],[378,9,298,5],[379,8,298,5],[379,17,269,10,"signInAnonymously"],[379,34,269,27,"signInAnonymously"],[379,35,269,27,"_x5"],[379,38,269,27],[380,10,269,27],[380,17,269,27,"_signInAnonymously"],[380,35,269,27],[380,36,269,27,"apply"],[380,41,269,27],[380,48,269,27,"arguments"],[380,57,269,27],[381,8,269,27],[382,8,269,27],[382,15,269,10,"signInAnonymously"],[382,32,269,27],[383,6,269,27],[384,6,299,4],[385,0,300,0],[386,0,301,0],[387,0,302,0],[388,0,303,0],[389,0,304,0],[390,0,305,0],[391,0,306,0],[392,0,307,0],[393,0,308,0],[394,6,299,4],[395,4,299,4],[396,6,299,4,"key"],[396,9,299,4],[397,6,299,4,"value"],[397,11,299,4],[398,8,299,4],[398,12,299,4,"_signUp"],[398,19,299,4],[398,22,299,4,"_asyncToGenerator"],[398,39,299,4],[398,40,309,4],[398,51,309,17,"credentials"],[398,62,309,28],[398,64,309,30],[399,10,310,8],[399,14,310,12,"_a"],[399,16,310,14],[399,18,310,16,"_b"],[399,20,310,18],[399,22,310,20,"_c"],[399,24,310,22],[400,10,311,8],[400,14,311,12],[401,12,312,12],[401,16,312,16,"res"],[401,19,312,19],[402,12,313,12],[402,16,313,16],[402,23,313,23],[402,27,313,27,"credentials"],[402,38,313,38],[402,40,313,40],[403,14,314,16],[403,18,314,24,"email"],[403,23,314,29],[403,26,314,53,"credentials"],[403,37,314,64],[403,38,314,24,"email"],[403,43,314,29],[404,16,314,31,"password"],[404,24,314,39],[404,27,314,53,"credentials"],[404,38,314,64],[404,39,314,31,"password"],[404,47,314,39],[405,16,314,41,"options"],[405,23,314,48],[405,26,314,53,"credentials"],[405,37,314,64],[405,38,314,41,"options"],[405,45,314,48],[406,14,315,16],[406,18,315,20,"codeChallenge"],[406,31,315,33],[406,34,315,36],[406,38,315,40],[407,14,316,16],[407,18,316,20,"codeChallengeMethod"],[407,37,316,39],[407,40,316,42],[407,44,316,46],[408,14,317,16],[408,18,317,20],[408,22,317,24],[408,23,317,25,"flowType"],[408,31,317,33],[408,36,317,38],[408,42,317,44],[408,44,317,46],[409,16,318,20],[410,16,318,21],[410,20,318,21,"_yield"],[410,26,318,21],[410,35,319,65],[410,36,319,66],[410,37,319,67],[410,39,319,69,"helpers_1"],[410,48,319,78],[410,49,319,79,"getCodeChallengeAndMethod"],[410,74,319,104],[410,76,319,106],[410,80,319,110],[410,81,319,111,"storage"],[410,88,319,118],[410,90,319,120],[410,94,319,124],[410,95,319,125,"storageKey"],[410,105,319,135],[410,106,319,136],[411,16,319,136],[411,20,319,136,"_yield2"],[411,27,319,136],[411,30,319,136,"_slicedToArray"],[411,44,319,136],[411,45,319,136,"_yield"],[411,51,319,136],[412,16,319,21,"codeChallenge"],[412,29,319,34],[412,32,319,34,"_yield2"],[412,39,319,34],[413,16,319,36,"codeChallengeMethod"],[413,35,319,55],[413,38,319,55,"_yield2"],[413,45,319,55],[414,14,320,16],[415,14,321,16,"res"],[415,17,321,19],[415,26,321,28],[415,27,321,29],[415,28,321,30],[415,30,321,32,"fetch_1"],[415,37,321,39],[415,38,321,40,"_request"],[415,46,321,48],[415,48,321,50],[415,52,321,54],[415,53,321,55,"fetch"],[415,58,321,60],[415,60,321,62],[415,66,321,68],[415,68,321,70],[415,71,321,73],[415,75,321,77],[415,76,321,78,"url"],[415,79,321,81],[415,88,321,90],[415,90,321,92],[416,16,322,20,"headers"],[416,23,322,27],[416,25,322,29],[416,29,322,33],[416,30,322,34,"headers"],[416,37,322,41],[417,16,323,20,"redirectTo"],[417,26,323,30],[417,28,323,32,"options"],[417,35,323,39],[417,40,323,44],[417,44,323,48],[417,48,323,52,"options"],[417,55,323,59],[417,60,323,59,"undefined"],[417,69,323,70],[417,72,323,70,"undefined"],[417,81,323,70],[417,84,323,82,"options"],[417,91,323,89],[417,92,323,90,"emailRedirectTo"],[417,107,323,105],[418,16,324,20,"body"],[418,20,324,24],[418,22,324,26],[419,18,325,24,"email"],[419,23,325,29],[420,18,326,24,"password"],[420,26,326,32],[421,18,327,24,"data"],[421,22,327,28],[421,24,327,30],[421,25,327,31,"_a"],[421,27,327,33],[421,30,327,36,"options"],[421,37,327,43],[421,42,327,48],[421,46,327,52],[421,50,327,56,"options"],[421,57,327,63],[421,62,327,63,"undefined"],[421,71,327,74],[421,74,327,74,"undefined"],[421,83,327,74],[421,86,327,86,"options"],[421,93,327,93],[421,94,327,94,"data"],[421,98,327,98],[421,104,327,104],[421,108,327,108],[421,112,327,112,"_a"],[421,114,327,114],[421,119,327,114,"undefined"],[421,128,327,125],[421,131,327,128,"_a"],[421,133,327,130],[421,136,327,133],[421,137,327,134],[421,138,327,135],[422,18,328,24,"gotrue_meta_security"],[422,38,328,44],[422,40,328,46],[423,20,328,48,"captcha_token"],[423,33,328,61],[423,35,328,63,"options"],[423,42,328,70],[423,47,328,75],[423,51,328,79],[423,55,328,83,"options"],[423,62,328,90],[423,67,328,90,"undefined"],[423,76,328,101],[423,79,328,101,"undefined"],[423,88,328,101],[423,91,328,113,"options"],[423,98,328,120],[423,99,328,121,"captchaToken"],[424,18,328,134],[424,19,328,135],[425,18,329,24,"code_challenge"],[425,32,329,38],[425,34,329,40,"codeChallenge"],[425,47,329,53],[426,18,330,24,"code_challenge_method"],[426,39,330,45],[426,41,330,47,"codeChallengeMethod"],[427,16,331,20],[427,17,331,21],[428,16,332,20,"xform"],[428,21,332,25],[428,23,332,27,"fetch_1"],[428,30,332,34],[428,31,332,35,"_sessionResponse"],[429,14,333,16],[429,15,333,17],[429,16,333,18],[430,12,334,12],[430,13,334,13],[430,19,335,17],[430,23,335,21],[430,30,335,28],[430,34,335,32,"credentials"],[430,45,335,43],[430,47,335,45],[431,14,336,16],[431,18,336,24,"phone"],[431,23,336,29],[431,26,336,53,"credentials"],[431,37,336,64],[431,38,336,24,"phone"],[431,43,336,29],[432,16,336,31,"password"],[432,25,336,39],[432,28,336,53,"credentials"],[432,39,336,64],[432,40,336,31,"password"],[432,48,336,39],[433,16,336,41,"options"],[433,24,336,48],[433,27,336,53,"credentials"],[433,38,336,64],[433,39,336,41,"options"],[433,46,336,48],[434,14,337,16,"res"],[434,17,337,19],[434,26,337,28],[434,27,337,29],[434,28,337,30],[434,30,337,32,"fetch_1"],[434,37,337,39],[434,38,337,40,"_request"],[434,46,337,48],[434,48,337,50],[434,52,337,54],[434,53,337,55,"fetch"],[434,58,337,60],[434,60,337,62],[434,66,337,68],[434,68,337,70],[434,71,337,73],[434,75,337,77],[434,76,337,78,"url"],[434,79,337,81],[434,88,337,90],[434,90,337,92],[435,16,338,20,"headers"],[435,23,338,27],[435,25,338,29],[435,29,338,33],[435,30,338,34,"headers"],[435,37,338,41],[436,16,339,20,"body"],[436,20,339,24],[436,22,339,26],[437,18,340,24,"phone"],[437,23,340,29],[438,18,341,24,"password"],[438,26,341,32],[438,28,341,24,"password"],[438,37,341,32],[439,18,342,24,"data"],[439,22,342,28],[439,24,342,30],[439,25,342,31,"_b"],[439,27,342,33],[439,30,342,36,"options"],[439,38,342,43],[439,43,342,48],[439,47,342,52],[439,51,342,56,"options"],[439,59,342,63],[439,64,342,63,"undefined"],[439,73,342,74],[439,76,342,74,"undefined"],[439,85,342,74],[439,88,342,86,"options"],[439,96,342,93],[439,97,342,94,"data"],[439,101,342,98],[439,107,342,104],[439,111,342,108],[439,115,342,112,"_b"],[439,117,342,114],[439,122,342,114,"undefined"],[439,131,342,125],[439,134,342,128,"_b"],[439,136,342,130],[439,139,342,133],[439,140,342,134],[439,141,342,135],[440,18,343,24,"channel"],[440,25,343,31],[440,27,343,33],[440,28,343,34,"_c"],[440,30,343,36],[440,33,343,39,"options"],[440,41,343,46],[440,46,343,51],[440,50,343,55],[440,54,343,59,"options"],[440,62,343,66],[440,67,343,66,"undefined"],[440,76,343,77],[440,79,343,77,"undefined"],[440,88,343,77],[440,91,343,89,"options"],[440,99,343,96],[440,100,343,97,"channel"],[440,107,343,104],[440,113,343,110],[440,117,343,114],[440,121,343,118,"_c"],[440,123,343,120],[440,128,343,120,"undefined"],[440,137,343,131],[440,140,343,134,"_c"],[440,142,343,136],[440,145,343,139],[440,150,343,144],[441,18,344,24,"gotrue_meta_security"],[441,38,344,44],[441,40,344,46],[442,20,344,48,"captcha_token"],[442,33,344,61],[442,35,344,63,"options"],[442,43,344,70],[442,48,344,75],[442,52,344,79],[442,56,344,83,"options"],[442,64,344,90],[442,69,344,90,"undefined"],[442,78,344,101],[442,81,344,101,"undefined"],[442,90,344,101],[442,93,344,113,"options"],[442,101,344,120],[442,102,344,121,"captchaToken"],[443,18,344,134],[444,16,345,20],[444,17,345,21],[445,16,346,20,"xform"],[445,21,346,25],[445,23,346,27,"fetch_1"],[445,30,346,34],[445,31,346,35,"_sessionResponse"],[446,14,347,16],[446,15,347,17],[446,16,347,18],[447,12,348,12],[447,13,348,13],[447,19,349,17],[448,14,350,16],[448,20,350,22],[448,24,350,26,"errors_1"],[448,32,350,34],[448,33,350,35,"AuthInvalidCredentialsError"],[448,60,350,62],[448,61,350,63],[448,126,350,128],[448,127,350,129],[449,12,351,12],[450,12,352,12],[450,16,352,12,"_res"],[450,20,352,12],[450,23,352,36,"res"],[450,26,352,39],[451,14,352,20,"data"],[451,18,352,24],[451,21,352,24,"_res"],[451,25,352,24],[451,26,352,20,"data"],[451,30,352,24],[452,14,352,26,"error"],[452,19,352,31],[452,22,352,31,"_res"],[452,26,352,31],[452,27,352,26,"error"],[452,32,352,31],[453,12,353,12],[453,16,353,16,"error"],[453,21,353,21],[453,25,353,25],[453,26,353,26,"data"],[453,30,353,30],[453,32,353,32],[454,14,354,16],[454,21,354,23],[455,16,354,25,"data"],[455,20,354,29],[455,22,354,31],[456,18,354,33,"user"],[456,22,354,37],[456,24,354,39],[456,28,354,43],[457,18,354,45,"session"],[457,25,354,52],[457,27,354,54],[458,16,354,59],[458,17,354,60],[459,16,354,62,"error"],[459,21,354,67],[459,23,354,69,"error"],[460,14,354,75],[460,15,354,76],[461,12,355,12],[462,12,356,12],[462,16,356,18,"session"],[462,23,356,25],[462,26,356,28,"data"],[462,30,356,32],[462,31,356,33,"session"],[462,38,356,40],[463,12,357,12],[463,16,357,18,"user"],[463,20,357,22],[463,23,357,25,"data"],[463,27,357,29],[463,28,357,30,"user"],[463,32,357,34],[464,12,358,12],[464,16,358,16,"data"],[464,20,358,20],[464,21,358,21,"session"],[464,28,358,28],[464,30,358,30],[465,14,359,16],[465,20,359,22],[465,24,359,26],[465,25,359,27,"_saveSession"],[465,37,359,39],[465,38,359,40,"data"],[465,42,359,44],[465,43,359,45,"session"],[465,50,359,52],[465,51,359,53],[466,14,360,16],[466,20,360,22],[466,24,360,26],[466,25,360,27,"_notifyAllSubscribers"],[466,46,360,48],[466,47,360,49],[466,58,360,60],[466,60,360,62,"session"],[466,67,360,69],[466,68,360,70],[467,12,361,12],[468,12,362,12],[468,19,362,19],[469,14,362,21,"data"],[469,18,362,25],[469,20,362,27],[470,16,362,29,"user"],[470,20,362,33],[471,16,362,35,"session"],[472,14,362,43],[472,15,362,44],[473,14,362,46,"error"],[473,19,362,51],[473,21,362,53],[474,12,362,58],[474,13,362,59],[475,10,363,8],[475,11,363,9],[475,12,364,8],[475,19,364,15,"error"],[475,24,364,20],[475,26,364,22],[476,12,365,12],[476,16,365,16],[476,17,365,17],[476,18,365,18],[476,20,365,20,"errors_1"],[476,28,365,28],[476,29,365,29,"isAuthError"],[476,40,365,40],[476,42,365,42,"error"],[476,47,365,47],[476,48,365,48],[476,50,365,50],[477,14,366,16],[477,21,366,23],[478,16,366,25,"data"],[478,20,366,29],[478,22,366,31],[479,18,366,33,"user"],[479,22,366,37],[479,24,366,39],[479,28,366,43],[480,18,366,45,"session"],[480,25,366,52],[480,27,366,54],[481,16,366,59],[481,17,366,60],[482,16,366,62,"error"],[483,14,366,68],[483,15,366,69],[484,12,367,12],[485,12,368,12],[485,18,368,18,"error"],[485,23,368,23],[486,10,369,8],[487,8,370,4],[487,9,370,5],[488,8,370,5],[488,17,309,10,"signUp"],[488,23,309,16,"signUp"],[488,24,309,16,"_x6"],[488,27,309,16],[489,10,309,16],[489,17,309,16,"_signUp"],[489,24,309,16],[489,25,309,16,"apply"],[489,30,309,16],[489,37,309,16,"arguments"],[489,46,309,16],[490,8,309,16],[491,8,309,16],[491,15,309,10,"signUp"],[491,21,309,16],[492,6,309,16],[493,6,371,4],[494,0,372,0],[495,0,373,0],[496,0,374,0],[497,0,375,0],[498,0,376,0],[499,0,377,0],[500,0,378,0],[501,6,371,4],[502,4,371,4],[503,6,371,4,"key"],[503,9,371,4],[504,6,371,4,"value"],[504,11,371,4],[505,8,371,4],[505,12,371,4,"_signInWithPassword"],[505,31,371,4],[505,34,371,4,"_asyncToGenerator"],[505,51,371,4],[505,52,379,4],[505,63,379,29,"credentials"],[505,74,379,40],[505,76,379,42],[506,10,380,8],[506,14,380,12],[507,12,381,12],[507,16,381,16,"res"],[507,19,381,19],[508,12,382,12],[508,16,382,16],[508,23,382,23],[508,27,382,27,"credentials"],[508,38,382,38],[508,40,382,40],[509,14,383,16],[509,18,383,24,"email"],[509,23,383,29],[509,26,383,53,"credentials"],[509,37,383,64],[509,38,383,24,"email"],[509,43,383,29],[510,16,383,31,"password"],[510,24,383,39],[510,27,383,53,"credentials"],[510,38,383,64],[510,39,383,31,"password"],[510,47,383,39],[511,16,383,41,"options"],[511,23,383,48],[511,26,383,53,"credentials"],[511,37,383,64],[511,38,383,41,"options"],[511,45,383,48],[512,14,384,16,"res"],[512,17,384,19],[512,26,384,28],[512,27,384,29],[512,28,384,30],[512,30,384,32,"fetch_1"],[512,37,384,39],[512,38,384,40,"_request"],[512,46,384,48],[512,48,384,50],[512,52,384,54],[512,53,384,55,"fetch"],[512,58,384,60],[512,60,384,62],[512,66,384,68],[512,68,384,70],[512,71,384,73],[512,75,384,77],[512,76,384,78,"url"],[512,79,384,81],[512,107,384,109],[512,109,384,111],[513,16,385,20,"headers"],[513,23,385,27],[513,25,385,29],[513,29,385,33],[513,30,385,34,"headers"],[513,37,385,41],[514,16,386,20,"body"],[514,20,386,24],[514,22,386,26],[515,18,387,24,"email"],[515,23,387,29],[516,18,388,24,"password"],[516,26,388,32],[517,18,389,24,"gotrue_meta_security"],[517,38,389,44],[517,40,389,46],[518,20,389,48,"captcha_token"],[518,33,389,61],[518,35,389,63,"options"],[518,42,389,70],[518,47,389,75],[518,51,389,79],[518,55,389,83,"options"],[518,62,389,90],[518,67,389,90,"undefined"],[518,76,389,101],[518,79,389,101,"undefined"],[518,88,389,101],[518,91,389,113,"options"],[518,98,389,120],[518,99,389,121,"captchaToken"],[519,18,389,134],[520,16,390,20],[520,17,390,21],[521,16,391,20,"xform"],[521,21,391,25],[521,23,391,27,"fetch_1"],[521,30,391,34],[521,31,391,35,"_sessionResponsePassword"],[522,14,392,16],[522,15,392,17],[522,16,392,18],[523,12,393,12],[523,13,393,13],[523,19,394,17],[523,23,394,21],[523,30,394,28],[523,34,394,32,"credentials"],[523,45,394,43],[523,47,394,45],[524,14,395,16],[524,18,395,24,"phone"],[524,23,395,29],[524,26,395,53,"credentials"],[524,37,395,64],[524,38,395,24,"phone"],[524,43,395,29],[525,16,395,31,"password"],[525,26,395,39],[525,29,395,53,"credentials"],[525,40,395,64],[525,41,395,31,"password"],[525,49,395,39],[526,16,395,41,"options"],[526,25,395,48],[526,28,395,53,"credentials"],[526,39,395,64],[526,40,395,41,"options"],[526,47,395,48],[527,14,396,16,"res"],[527,17,396,19],[527,26,396,28],[527,27,396,29],[527,28,396,30],[527,30,396,32,"fetch_1"],[527,37,396,39],[527,38,396,40,"_request"],[527,46,396,48],[527,48,396,50],[527,52,396,54],[527,53,396,55,"fetch"],[527,58,396,60],[527,60,396,62],[527,66,396,68],[527,68,396,70],[527,71,396,73],[527,75,396,77],[527,76,396,78,"url"],[527,79,396,81],[527,107,396,109],[527,109,396,111],[528,16,397,20,"headers"],[528,23,397,27],[528,25,397,29],[528,29,397,33],[528,30,397,34,"headers"],[528,37,397,41],[529,16,398,20,"body"],[529,20,398,24],[529,22,398,26],[530,18,399,24,"phone"],[530,23,399,29],[531,18,400,24,"password"],[531,26,400,32],[531,28,400,24,"password"],[531,38,400,32],[532,18,401,24,"gotrue_meta_security"],[532,38,401,44],[532,40,401,46],[533,20,401,48,"captcha_token"],[533,33,401,61],[533,35,401,63,"options"],[533,44,401,70],[533,49,401,75],[533,53,401,79],[533,57,401,83,"options"],[533,66,401,90],[533,71,401,90,"undefined"],[533,80,401,101],[533,83,401,101,"undefined"],[533,92,401,101],[533,95,401,113,"options"],[533,104,401,120],[533,105,401,121,"captchaToken"],[534,18,401,134],[535,16,402,20],[535,17,402,21],[536,16,403,20,"xform"],[536,21,403,25],[536,23,403,27,"fetch_1"],[536,30,403,34],[536,31,403,35,"_sessionResponsePassword"],[537,14,404,16],[537,15,404,17],[537,16,404,18],[538,12,405,12],[538,13,405,13],[538,19,406,17],[539,14,407,16],[539,20,407,22],[539,24,407,26,"errors_1"],[539,32,407,34],[539,33,407,35,"AuthInvalidCredentialsError"],[539,60,407,62],[539,61,407,63],[539,126,407,128],[539,127,407,129],[540,12,408,12],[541,12,409,12],[541,16,409,12,"_res2"],[541,21,409,12],[541,24,409,36,"res"],[541,27,409,39],[542,14,409,20,"data"],[542,18,409,24],[542,21,409,24,"_res2"],[542,26,409,24],[542,27,409,20,"data"],[542,31,409,24],[543,14,409,26,"error"],[543,19,409,31],[543,22,409,31,"_res2"],[543,27,409,31],[543,28,409,26,"error"],[543,33,409,31],[544,12,410,12],[544,16,410,16,"error"],[544,21,410,21],[544,23,410,23],[545,14,411,16],[545,21,411,23],[546,16,411,25,"data"],[546,20,411,29],[546,22,411,31],[547,18,411,33,"user"],[547,22,411,37],[547,24,411,39],[547,28,411,43],[548,18,411,45,"session"],[548,25,411,52],[548,27,411,54],[549,16,411,59],[549,17,411,60],[550,16,411,62,"error"],[551,14,411,68],[551,15,411,69],[552,12,412,12],[552,13,412,13],[552,19,413,17],[552,23,413,21],[552,24,413,22,"data"],[552,28,413,26],[552,32,413,30],[552,33,413,31,"data"],[552,37,413,35],[552,38,413,36,"session"],[552,45,413,43],[552,49,413,47],[552,50,413,48,"data"],[552,54,413,52],[552,55,413,53,"user"],[552,59,413,57],[552,61,413,59],[553,14,414,16],[553,21,414,23],[554,16,414,25,"data"],[554,20,414,29],[554,22,414,31],[555,18,414,33,"user"],[555,22,414,37],[555,24,414,39],[555,28,414,43],[556,18,414,45,"session"],[556,25,414,52],[556,27,414,54],[557,16,414,59],[557,17,414,60],[558,16,414,62,"error"],[558,21,414,67],[558,23,414,69],[558,27,414,73,"errors_1"],[558,35,414,81],[558,36,414,82,"AuthInvalidTokenResponseError"],[558,65,414,111],[558,66,414,112],[559,14,414,114],[559,15,414,115],[560,12,415,12],[561,12,416,12],[561,16,416,16,"data"],[561,20,416,20],[561,21,416,21,"session"],[561,28,416,28],[561,30,416,30],[562,14,417,16],[562,20,417,22],[562,24,417,26],[562,25,417,27,"_saveSession"],[562,37,417,39],[562,38,417,40,"data"],[562,42,417,44],[562,43,417,45,"session"],[562,50,417,52],[562,51,417,53],[563,14,418,16],[563,20,418,22],[563,24,418,26],[563,25,418,27,"_notifyAllSubscribers"],[563,46,418,48],[563,47,418,49],[563,58,418,60],[563,60,418,62,"data"],[563,64,418,66],[563,65,418,67,"session"],[563,72,418,74],[563,73,418,75],[564,12,419,12],[565,12,420,12],[565,19,420,19],[566,14,421,16,"data"],[566,18,421,20],[566,20,421,22,"Object"],[566,26,421,28],[566,27,421,29,"assign"],[566,33,421,35],[566,34,421,36],[567,16,421,38,"user"],[567,20,421,42],[567,22,421,44,"data"],[567,26,421,48],[567,27,421,49,"user"],[567,31,421,53],[568,16,421,55,"session"],[568,23,421,62],[568,25,421,64,"data"],[568,29,421,68],[568,30,421,69,"session"],[569,14,421,77],[569,15,421,78],[569,17,421,81,"data"],[569,21,421,85],[569,22,421,86,"weak_password"],[569,35,421,99],[569,38,421,102],[570,16,421,104,"weakPassword"],[570,28,421,116],[570,30,421,118,"data"],[570,34,421,122],[570,35,421,123,"weak_password"],[571,14,421,137],[571,15,421,138],[571,18,421,141],[571,22,421,146],[571,23,421,147],[572,14,422,16,"error"],[573,12,423,12],[573,13,423,13],[574,10,424,8],[574,11,424,9],[574,12,425,8],[574,19,425,15,"error"],[574,24,425,20],[574,26,425,22],[575,12,426,12],[575,16,426,16],[575,17,426,17],[575,18,426,18],[575,20,426,20,"errors_1"],[575,28,426,28],[575,29,426,29,"isAuthError"],[575,40,426,40],[575,42,426,42,"error"],[575,47,426,47],[575,48,426,48],[575,50,426,50],[576,14,427,16],[576,21,427,23],[577,16,427,25,"data"],[577,20,427,29],[577,22,427,31],[578,18,427,33,"user"],[578,22,427,37],[578,24,427,39],[578,28,427,43],[579,18,427,45,"session"],[579,25,427,52],[579,27,427,54],[580,16,427,59],[580,17,427,60],[581,16,427,62,"error"],[582,14,427,68],[582,15,427,69],[583,12,428,12],[584,12,429,12],[584,18,429,18,"error"],[584,23,429,23],[585,10,430,8],[586,8,431,4],[586,9,431,5],[587,8,431,5],[587,17,379,10,"signInWithPassword"],[587,35,379,28,"signInWithPassword"],[587,36,379,28,"_x7"],[587,39,379,28],[588,10,379,28],[588,17,379,28,"_signInWithPassword"],[588,36,379,28],[588,37,379,28,"apply"],[588,42,379,28],[588,49,379,28,"arguments"],[588,58,379,28],[589,8,379,28],[590,8,379,28],[590,15,379,10,"signInWithPassword"],[590,33,379,28],[591,6,379,28],[592,6,432,4],[593,0,433,0],[594,0,434,0],[595,0,435,0],[596,6,432,4],[597,4,432,4],[598,6,432,4,"key"],[598,9,432,4],[599,6,432,4,"value"],[599,11,432,4],[600,8,432,4],[600,12,432,4,"_signInWithOAuth"],[600,28,432,4],[600,31,432,4,"_asyncToGenerator"],[600,48,432,4],[600,49,436,4],[600,60,436,26,"credentials"],[600,71,436,37],[600,73,436,39],[601,10,437,8],[601,14,437,12,"_a"],[601,16,437,14],[601,18,437,16,"_b"],[601,20,437,18],[601,22,437,20,"_c"],[601,24,437,22],[601,26,437,24,"_d"],[601,28,437,26],[602,10,438,8],[602,23,438,21],[602,27,438,25],[602,28,438,26,"_handleProviderSignIn"],[602,49,438,47],[602,50,438,48,"credentials"],[602,61,438,59],[602,62,438,60,"provider"],[602,70,438,68],[602,72,438,70],[603,12,439,12,"redirectTo"],[603,22,439,22],[603,24,439,24],[603,25,439,25,"_a"],[603,27,439,27],[603,30,439,30,"credentials"],[603,41,439,41],[603,42,439,42,"options"],[603,49,439,49],[603,55,439,55],[603,59,439,59],[603,63,439,63,"_a"],[603,65,439,65],[603,70,439,65,"undefined"],[603,79,439,76],[603,82,439,76,"undefined"],[603,91,439,76],[603,94,439,88,"_a"],[603,96,439,90],[603,97,439,91,"redirectTo"],[603,107,439,101],[604,12,440,12,"scopes"],[604,18,440,18],[604,20,440,20],[604,21,440,21,"_b"],[604,23,440,23],[604,26,440,26,"credentials"],[604,37,440,37],[604,38,440,38,"options"],[604,45,440,45],[604,51,440,51],[604,55,440,55],[604,59,440,59,"_b"],[604,61,440,61],[604,66,440,61,"undefined"],[604,75,440,72],[604,78,440,72,"undefined"],[604,87,440,72],[604,90,440,84,"_b"],[604,92,440,86],[604,93,440,87,"scopes"],[604,99,440,93],[605,12,441,12,"queryParams"],[605,23,441,23],[605,25,441,25],[605,26,441,26,"_c"],[605,28,441,28],[605,31,441,31,"credentials"],[605,42,441,42],[605,43,441,43,"options"],[605,50,441,50],[605,56,441,56],[605,60,441,60],[605,64,441,64,"_c"],[605,66,441,66],[605,71,441,66,"undefined"],[605,80,441,77],[605,83,441,77,"undefined"],[605,92,441,77],[605,95,441,89,"_c"],[605,97,441,91],[605,98,441,92,"queryParams"],[605,109,441,103],[606,12,442,12,"skipBrowserRedirect"],[606,31,442,31],[606,33,442,33],[606,34,442,34,"_d"],[606,36,442,36],[606,39,442,39,"credentials"],[606,50,442,50],[606,51,442,51,"options"],[606,58,442,58],[606,64,442,64],[606,68,442,68],[606,72,442,72,"_d"],[606,74,442,74],[606,79,442,74,"undefined"],[606,88,442,85],[606,91,442,85,"undefined"],[606,100,442,85],[606,103,442,97,"_d"],[606,105,442,99],[606,106,442,100,"skipBrowserRedirect"],[607,10,443,8],[607,11,443,9],[607,12,443,10],[608,8,444,4],[608,9,444,5],[609,8,444,5],[609,17,436,10,"signInWithOAuth"],[609,32,436,25,"signInWithOAuth"],[609,33,436,25,"_x8"],[609,36,436,25],[610,10,436,25],[610,17,436,25,"_signInWithOAuth"],[610,33,436,25],[610,34,436,25,"apply"],[610,39,436,25],[610,46,436,25,"arguments"],[610,55,436,25],[611,8,436,25],[612,8,436,25],[612,15,436,10,"signInWithOAuth"],[612,30,436,25],[613,6,436,25],[614,6,445,4],[615,0,446,0],[616,0,447,0],[617,6,445,4],[618,4,445,4],[619,6,445,4,"key"],[619,9,445,4],[620,6,445,4,"value"],[620,11,445,4],[621,8,445,4],[621,12,445,4,"_exchangeCodeForSession2"],[621,36,445,4],[621,39,445,4,"_asyncToGenerator"],[621,56,445,4],[621,57,448,4],[621,68,448,33,"authCode"],[621,76,448,41],[621,78,448,43],[622,10,448,43],[622,14,448,43,"_this4"],[622,20,448,43],[623,10,449,8],[623,16,449,14],[623,20,449,18],[623,21,449,19,"initializePromise"],[623,38,449,36],[624,10,450,8],[624,17,450,15],[624,21,450,19],[624,22,450,20,"_acquireLock"],[624,34,450,32],[624,52,450,32,"_asyncToGenerator"],[624,69,450,32],[624,70,450,37],[624,83,450,49],[625,12,451,12],[625,19,451,19,"_this4"],[625,25,451,23],[625,26,451,24,"_exchangeCodeForSession"],[625,49,451,47],[625,50,451,48,"authCode"],[625,58,451,56],[625,59,451,57],[626,10,452,8],[626,11,452,9],[626,13,452,10],[627,8,453,4],[627,9,453,5],[628,8,453,5],[628,17,448,10,"exchangeCodeForSession"],[628,39,448,32,"exchangeCodeForSession"],[628,40,448,32,"_x9"],[628,43,448,32],[629,10,448,32],[629,17,448,32,"_exchangeCodeForSession2"],[629,41,448,32],[629,42,448,32,"apply"],[629,47,448,32],[629,54,448,32,"arguments"],[629,63,448,32],[630,8,448,32],[631,8,448,32],[631,15,448,10,"exchangeCodeForSession"],[631,37,448,32],[632,6,448,32],[633,6,454,4],[634,0,455,0],[635,0,456,0],[636,0,457,0],[637,6,454,4],[638,4,454,4],[639,6,454,4,"key"],[639,9,454,4],[640,6,454,4,"value"],[640,11,454,4],[641,8,454,4],[641,12,454,4,"_signInWithWeb"],[641,26,454,4],[641,29,454,4,"_asyncToGenerator"],[641,46,454,4],[641,47,458,4],[641,58,458,25,"credentials"],[641,69,458,36],[641,71,458,38],[642,10,459,8],[642,14,459,16,"chain"],[642,19,459,21],[642,22,459,26,"credentials"],[642,33,459,37],[642,34,459,16,"chain"],[642,39,459,21],[643,10,460,8],[643,14,460,12,"chain"],[643,19,460,17],[643,24,460,22],[643,32,460,30],[643,34,460,32],[644,12,461,12],[644,25,461,25],[644,29,461,29],[644,30,461,30,"signInWithSolana"],[644,46,461,46],[644,47,461,47,"credentials"],[644,58,461,58],[644,59,461,59],[645,10,462,8],[646,10,463,8],[646,16,463,14],[646,20,463,18,"Error"],[646,25,463,23],[646,26,463,24],[646,67,463,65,"chain"],[646,72,463,70],[646,75,463,73],[646,76,463,74],[647,8,464,4],[647,9,464,5],[648,8,464,5],[648,17,458,10,"signInWithWeb3"],[648,31,458,24,"signInWithWeb3"],[648,32,458,24,"_x0"],[648,35,458,24],[649,10,458,24],[649,17,458,24,"_signInWithWeb"],[649,31,458,24],[649,32,458,24,"apply"],[649,37,458,24],[649,44,458,24,"arguments"],[649,53,458,24],[650,8,458,24],[651,8,458,24],[651,15,458,10,"signInWithWeb3"],[651,29,458,24],[652,6,458,24],[653,4,458,24],[654,6,458,24,"key"],[654,9,458,24],[655,6,458,24,"value"],[655,11,458,24],[656,8,458,24],[656,12,458,24,"_signInWithSolana"],[656,29,458,24],[656,32,458,24,"_asyncToGenerator"],[656,49,458,24],[656,50,465,4],[656,61,465,27,"credentials"],[656,72,465,38],[656,74,465,40],[657,10,466,8],[657,14,466,12,"_a"],[657,16,466,14],[657,18,466,16,"_b"],[657,20,466,18],[657,22,466,20,"_c"],[657,24,466,22],[657,26,466,24,"_d"],[657,28,466,26],[657,30,466,28,"_e"],[657,32,466,30],[657,34,466,32,"_f"],[657,36,466,34],[657,38,466,36,"_g"],[657,40,466,38],[657,42,466,40,"_h"],[657,44,466,42],[657,46,466,44,"_j"],[657,48,466,46],[657,50,466,48,"_k"],[657,52,466,50],[657,54,466,52,"_l"],[657,56,466,54],[657,58,466,56,"_m"],[657,60,466,58],[658,10,467,8],[658,14,467,12,"message"],[658,21,467,19],[659,10,468,8],[659,14,468,12,"signature"],[659,23,468,21],[660,10,469,8],[660,14,469,12],[660,23,469,21],[660,27,469,25,"credentials"],[660,38,469,36],[660,40,469,38],[661,12,470,12,"message"],[661,19,470,19],[661,22,470,22,"credentials"],[661,33,470,33],[661,34,470,34,"message"],[661,41,470,41],[662,12,471,12,"signature"],[662,21,471,21],[662,24,471,24,"credentials"],[662,35,471,35],[662,36,471,36,"signature"],[662,45,471,45],[663,10,472,8],[663,11,472,9],[663,17,473,13],[664,12,474,12],[664,16,474,20,"chain"],[664,21,474,25],[664,24,474,58,"credentials"],[664,35,474,69],[664,36,474,20,"chain"],[664,41,474,25],[665,14,474,27,"wallet"],[665,20,474,33],[665,23,474,58,"credentials"],[665,34,474,69],[665,35,474,27,"wallet"],[665,41,474,33],[666,14,474,35,"statement"],[666,23,474,44],[666,26,474,58,"credentials"],[666,37,474,69],[666,38,474,35,"statement"],[666,47,474,44],[667,14,474,46,"options"],[667,21,474,53],[667,24,474,58,"credentials"],[667,35,474,69],[667,36,474,46,"options"],[667,43,474,53],[668,12,475,12],[668,16,475,16,"resolvedWallet"],[668,30,475,30],[669,12,476,12],[669,16,476,16],[669,17,476,17],[669,18,476,18],[669,19,476,19],[669,21,476,21,"helpers_1"],[669,30,476,30],[669,31,476,31,"isBrowser"],[669,40,476,40],[669,42,476,42],[669,43,476,43],[669,45,476,45],[670,14,477,16],[670,18,477,20],[670,25,477,27,"wallet"],[670,31,477,33],[670,36,477,38],[670,44,477,46],[670,48,477,50],[670,50,477,52,"options"],[670,57,477,59],[670,62,477,64],[670,66,477,68],[670,70,477,72,"options"],[670,77,477,79],[670,82,477,79,"undefined"],[670,91,477,90],[670,94,477,90,"undefined"],[670,103,477,90],[670,106,477,102,"options"],[670,113,477,109],[670,114,477,110,"url"],[670,117,477,113],[670,118,477,114],[670,120,477,116],[671,16,478,20],[671,22,478,26],[671,26,478,30,"Error"],[671,31,478,35],[671,32,478,36],[671,119,478,123],[671,120,478,124],[672,14,479,16],[673,14,480,16,"resolvedWallet"],[673,28,480,30],[673,31,480,33,"wallet"],[673,37,480,39],[674,12,481,12],[674,13,481,13],[674,19,482,17],[674,23,482,21],[674,30,482,28,"wallet"],[674,36,482,34],[674,41,482,39],[674,49,482,47],[674,51,482,49],[675,14,483,16,"resolvedWallet"],[675,28,483,30],[675,31,483,33,"wallet"],[675,37,483,39],[676,12,484,12],[676,13,484,13],[676,19,485,17],[677,14,486,16],[677,18,486,22,"windowAny"],[677,27,486,31],[677,30,486,34,"window"],[677,36,486,40],[678,14,487,16],[678,18,487,20],[678,26,487,28],[678,30,487,32,"windowAny"],[678,39,487,41],[678,43,488,20],[678,50,488,27,"windowAny"],[678,59,488,36],[678,60,488,37,"solana"],[678,66,488,43],[678,71,488,48],[678,79,488,56],[678,84,489,22],[678,92,489,30],[678,96,489,34,"windowAny"],[678,105,489,43],[678,106,489,44,"solana"],[678,112,489,50],[678,116,489,54],[678,123,489,61,"windowAny"],[678,132,489,70],[678,133,489,71,"solana"],[678,139,489,77],[678,140,489,78,"signIn"],[678,146,489,84],[678,151,489,89],[678,161,489,99],[678,165,490,25],[678,178,490,38],[678,182,490,42,"windowAny"],[678,191,490,51],[678,192,490,52,"solana"],[678,198,490,58],[678,202,491,28],[678,209,491,35,"windowAny"],[678,218,491,44],[678,219,491,45,"solana"],[678,225,491,51],[678,226,491,52,"signMessage"],[678,237,491,63],[678,242,491,68],[678,252,491,79],[678,253,491,80],[678,255,491,82],[679,16,492,20,"resolvedWallet"],[679,30,492,34],[679,33,492,37,"windowAny"],[679,42,492,46],[679,43,492,47,"solana"],[679,49,492,53],[680,14,493,16],[680,15,493,17],[680,21,494,21],[681,16,495,20],[681,22,495,26],[681,26,495,30,"Error"],[681,31,495,35],[681,32,495,36],[681,343,495,347],[681,344,495,348],[682,14,496,16],[683,12,497,12],[684,12,498,12],[684,16,498,18,"url"],[684,19,498,21],[684,22,498,24],[684,26,498,28,"URL"],[684,29,498,31],[684,30,498,32],[684,31,498,33,"_a"],[684,33,498,35],[684,36,498,38,"options"],[684,43,498,45],[684,48,498,50],[684,52,498,54],[684,56,498,58,"options"],[684,63,498,65],[684,68,498,65,"undefined"],[684,77,498,76],[684,80,498,76,"undefined"],[684,89,498,76],[684,92,498,88,"options"],[684,99,498,95],[684,100,498,96,"url"],[684,103,498,99],[684,109,498,105],[684,113,498,109],[684,117,498,113,"_a"],[684,119,498,115],[684,124,498,115,"undefined"],[684,133,498,126],[684,136,498,129,"_a"],[684,138,498,131],[684,141,498,134,"window"],[684,147,498,140],[684,148,498,141,"location"],[684,156,498,149],[684,157,498,150,"href"],[684,161,498,154],[684,162,498,155],[685,12,499,12],[685,16,499,16],[685,24,499,24],[685,28,499,28,"resolvedWallet"],[685,42,499,42],[685,46,499,46,"resolvedWallet"],[685,60,499,60],[685,61,499,61,"signIn"],[685,67,499,67],[685,69,499,69],[686,14,500,16],[686,18,500,22,"output"],[686,24,500,28],[686,33,500,37,"resolvedWallet"],[686,47,500,51],[686,48,500,52,"signIn"],[686,54,500,58],[686,55,500,59,"Object"],[686,61,500,65],[686,62,500,66,"assign"],[686,68,500,72],[686,69,500,73,"Object"],[686,75,500,79],[686,76,500,80,"assign"],[686,82,500,86],[686,83,500,87,"Object"],[686,89,500,93],[686,90,500,94,"assign"],[686,96,500,100],[686,97,500,101],[687,16,500,103,"issuedAt"],[687,24,500,111],[687,26,500,113],[687,30,500,117,"Date"],[687,34,500,121],[687,35,500,122],[687,36,500,123],[687,37,500,124,"toISOString"],[687,48,500,135],[687,49,500,136],[688,14,500,138],[688,15,500,139],[688,17,500,141,"options"],[688,24,500,148],[688,29,500,153],[688,33,500,157],[688,37,500,161,"options"],[688,44,500,168],[688,49,500,168,"undefined"],[688,58,500,179],[688,61,500,179,"undefined"],[688,70,500,179],[688,73,500,191,"options"],[688,80,500,198],[688,81,500,199,"signInWithSolana"],[688,97,500,215],[688,98,500,216],[688,100,500,218],[689,16,501,20],[690,16,502,20,"version"],[690,23,502,27],[690,25,502,29],[690,28,502,32],[691,16,502,34,"domain"],[691,22,502,40],[691,24,502,42,"url"],[691,27,502,45],[691,28,502,46,"host"],[691,32,502,50],[692,16,502,52,"uri"],[692,19,502,55],[692,21,502,57,"url"],[692,24,502,60],[692,25,502,61,"href"],[693,14,502,66],[693,15,502,67],[693,16,502,68],[693,18,502,71,"statement"],[693,27,502,80],[693,30,502,83],[694,16,502,85,"statement"],[695,14,502,95],[695,15,502,96],[695,18,502,99],[695,22,502,104],[695,23,502,105],[695,24,502,106],[696,14,503,16],[696,18,503,20,"outputToProcess"],[696,33,503,35],[697,14,504,16],[697,18,504,20,"Array"],[697,23,504,25],[697,24,504,26,"isArray"],[697,31,504,33],[697,32,504,34,"output"],[697,38,504,40],[697,39,504,41],[697,43,504,45,"output"],[697,49,504,51],[697,50,504,52],[697,51,504,53],[697,52,504,54],[697,56,504,58],[697,63,504,65,"output"],[697,69,504,71],[697,70,504,72],[697,71,504,73],[697,72,504,74],[697,77,504,79],[697,85,504,87],[697,87,504,89],[698,16,505,20,"outputToProcess"],[698,31,505,35],[698,34,505,38,"output"],[698,40,505,44],[698,41,505,45],[698,42,505,46],[698,43,505,47],[699,14,506,16],[699,15,506,17],[699,21,507,21],[699,25,507,25,"output"],[699,31,507,31],[699,35,508,20],[699,42,508,27,"output"],[699,48,508,33],[699,53,508,38],[699,61,508,46],[699,65,509,20],[699,80,509,35],[699,84,509,39,"output"],[699,90,509,45],[699,94,510,20],[699,105,510,31],[699,109,510,35,"output"],[699,115,510,41],[699,117,510,43],[700,16,511,20,"outputToProcess"],[700,31,511,35],[700,34,511,38,"output"],[700,40,511,44],[701,14,512,16],[701,15,512,17],[701,21,513,21],[702,16,514,20],[702,22,514,26],[702,26,514,30,"Error"],[702,31,514,35],[702,32,514,36],[702,103,514,107],[702,104,514,108],[703,14,515,16],[704,14,516,16],[704,18,516,20],[704,33,516,35],[704,37,516,39,"outputToProcess"],[704,52,516,54],[704,56,517,20],[704,67,517,31],[704,71,517,35,"outputToProcess"],[704,86,517,50],[704,91,518,21],[704,98,518,28,"outputToProcess"],[704,113,518,43],[704,114,518,44,"signedMessage"],[704,127,518,57],[704,132,518,62],[704,140,518,70],[704,144,519,24,"outputToProcess"],[704,159,519,39],[704,160,519,40,"signedMessage"],[704,173,519,53],[704,185,519,65,"Uint8Array"],[704,195,519,75],[704,196,519,76],[704,200,520,20,"outputToProcess"],[704,215,520,35],[704,216,520,36,"signature"],[704,225,520,45],[704,237,520,57,"Uint8Array"],[704,247,520,67],[704,249,520,69],[705,16,521,20,"message"],[705,23,521,27],[705,26,522,24],[705,33,522,31,"outputToProcess"],[705,48,522,46],[705,49,522,47,"signedMessage"],[705,62,522,60],[705,67,522,65],[705,75,522,73],[705,78,523,30,"outputToProcess"],[705,93,523,45],[705,94,523,46,"signedMessage"],[705,107,523,59],[705,110,524,30],[705,114,524,34,"TextDecoder"],[705,125,524,45],[705,126,524,46],[705,127,524,47],[705,128,524,48,"decode"],[705,134,524,54],[705,135,524,55,"outputToProcess"],[705,150,524,70],[705,151,524,71,"signedMessage"],[705,164,524,84],[705,165,524,85],[706,16,525,20,"signature"],[706,25,525,29],[706,28,525,32,"outputToProcess"],[706,43,525,47],[706,44,525,48,"signature"],[706,53,525,57],[707,14,526,16],[707,15,526,17],[707,21,527,21],[708,16,528,20],[708,22,528,26],[708,26,528,30,"Error"],[708,31,528,35],[708,32,528,36],[708,138,528,142],[708,139,528,143],[709,14,529,16],[710,12,530,12],[710,13,530,13],[710,19,531,17],[711,14,532,16],[711,18,532,20],[711,20,532,22],[711,33,532,35],[711,37,532,39,"resolvedWallet"],[711,51,532,53],[711,52,532,54],[711,56,533,20],[711,63,533,27,"resolvedWallet"],[711,77,533,41],[711,78,533,42,"signMessage"],[711,89,533,53],[711,94,533,58],[711,104,533,68],[711,108,534,20],[711,110,534,22],[711,121,534,33],[711,125,534,37,"resolvedWallet"],[711,139,534,51],[711,140,534,52],[711,144,535,20],[711,151,535,27,"resolvedWallet"],[711,165,535,41],[711,170,535,46],[711,178,535,54],[711,182,536,20],[711,183,536,21,"resolvedWallet"],[711,197,536,35],[711,198,536,36,"publicKey"],[711,207,536,45],[711,211,537,20],[711,213,537,22],[711,223,537,32],[711,227,537,36,"resolvedWallet"],[711,241,537,50],[711,242,537,51,"publicKey"],[711,251,537,60],[711,252,537,61],[711,256,538,20],[711,263,538,27,"resolvedWallet"],[711,277,538,41],[711,278,538,42,"publicKey"],[711,287,538,51],[711,288,538,52,"toBase58"],[711,296,538,60],[711,301,538,65],[711,311,538,75],[711,313,538,77],[712,16,539,20],[712,22,539,26],[712,26,539,30,"Error"],[712,31,539,35],[712,32,539,36],[712,129,539,133],[712,130,539,134],[713,14,540,16],[714,14,541,16,"message"],[714,21,541,23],[714,24,541,26],[714,25,542,20],[714,28,542,23,"url"],[714,31,542,26],[714,32,542,27,"host"],[714,36,542,31],[714,85,542,80],[714,87,543,20,"resolvedWallet"],[714,101,543,34],[714,102,543,35,"publicKey"],[714,111,543,44],[714,112,543,45,"toBase58"],[714,120,543,53],[714,121,543,54],[714,122,543,55],[714,124,544,20],[714,128,544,24,"statement"],[714,137,544,33],[714,140,544,36],[714,141,544,37],[714,143,544,39],[714,145,544,41,"statement"],[714,154,544,50],[714,156,544,52],[714,158,544,54],[714,159,544,55],[714,162,544,58],[714,163,544,59],[714,165,544,61],[714,166,544,62],[714,167,544,63],[714,169,545,20],[714,181,545,32],[714,183,546,20],[714,191,546,28,"url"],[714,194,546,31],[714,195,546,32,"href"],[714,199,546,36],[714,201,546,38],[714,203,547,20],[714,217,547,34],[714,218,547,35,"_c"],[714,220,547,37],[714,223,547,40],[714,224,547,41,"_b"],[714,226,547,43],[714,229,547,46,"options"],[714,236,547,53],[714,241,547,58],[714,245,547,62],[714,249,547,66,"options"],[714,256,547,73],[714,261,547,73,"undefined"],[714,270,547,84],[714,273,547,84,"undefined"],[714,282,547,84],[714,285,547,96,"options"],[714,292,547,103],[714,293,547,104,"signInWithSolana"],[714,309,547,120],[714,315,547,126],[714,319,547,130],[714,323,547,134,"_b"],[714,325,547,136],[714,330,547,136,"undefined"],[714,339,547,147],[714,342,547,147,"undefined"],[714,351,547,147],[714,354,547,159,"_b"],[714,356,547,161],[714,357,547,162,"issuedAt"],[714,365,547,170],[714,371,547,176],[714,375,547,180],[714,379,547,184,"_c"],[714,381,547,186],[714,386,547,186,"undefined"],[714,395,547,197],[714,398,547,200,"_c"],[714,400,547,202],[714,403,547,205],[714,407,547,209,"Date"],[714,411,547,213],[714,412,547,214],[714,413,547,215],[714,414,547,216,"toISOString"],[714,425,547,227],[714,426,547,228],[714,427,547,229],[714,429,547,231],[714,431,548,20],[714,435,548,24],[714,436,548,25],[714,437,548,26,"_d"],[714,439,548,28],[714,442,548,31,"options"],[714,449,548,38],[714,454,548,43],[714,458,548,47],[714,462,548,51,"options"],[714,469,548,58],[714,474,548,58,"undefined"],[714,483,548,69],[714,486,548,69,"undefined"],[714,495,548,69],[714,498,548,81,"options"],[714,505,548,88],[714,506,548,89,"signInWithSolana"],[714,522,548,105],[714,528,548,111],[714,532,548,115],[714,536,548,119,"_d"],[714,538,548,121],[714,543,548,121,"undefined"],[714,552,548,132],[714,555,548,132,"undefined"],[714,564,548,132],[714,567,548,144,"_d"],[714,569,548,146],[714,570,548,147,"notBefore"],[714,579,548,156],[714,583,549,26],[714,584,549,27],[714,599,549,42,"options"],[714,606,549,49],[714,607,549,50,"signInWithSolana"],[714,623,549,66],[714,624,549,67,"notBefore"],[714,633,549,76],[714,635,549,78],[714,636,549,79],[714,639,550,26],[714,641,550,28],[714,642,550,29],[714,644,551,20],[714,648,551,24],[714,649,551,25],[714,650,551,26,"_e"],[714,652,551,28],[714,655,551,31,"options"],[714,662,551,38],[714,667,551,43],[714,671,551,47],[714,675,551,51,"options"],[714,682,551,58],[714,687,551,58,"undefined"],[714,696,551,69],[714,699,551,69,"undefined"],[714,708,551,69],[714,711,551,81,"options"],[714,718,551,88],[714,719,551,89,"signInWithSolana"],[714,735,551,105],[714,741,551,111],[714,745,551,115],[714,749,551,119,"_e"],[714,751,551,121],[714,756,551,121,"undefined"],[714,765,551,132],[714,768,551,132,"undefined"],[714,777,551,132],[714,780,551,144,"_e"],[714,782,551,146],[714,783,551,147,"expirationTime"],[714,797,551,161],[714,801,552,26],[714,802,552,27],[714,822,552,47,"options"],[714,829,552,54],[714,830,552,55,"signInWithSolana"],[714,846,552,71],[714,847,552,72,"expirationTime"],[714,861,552,86],[714,863,552,88],[714,864,552,89],[714,867,553,26],[714,869,553,28],[714,870,553,29],[714,872,554,20],[714,876,554,24],[714,877,554,25],[714,878,554,26,"_f"],[714,880,554,28],[714,883,554,31,"options"],[714,890,554,38],[714,895,554,43],[714,899,554,47],[714,903,554,51,"options"],[714,910,554,58],[714,915,554,58,"undefined"],[714,924,554,69],[714,927,554,69,"undefined"],[714,936,554,69],[714,939,554,81,"options"],[714,946,554,88],[714,947,554,89,"signInWithSolana"],[714,963,554,105],[714,969,554,111],[714,973,554,115],[714,977,554,119,"_f"],[714,979,554,121],[714,984,554,121,"undefined"],[714,993,554,132],[714,996,554,132,"undefined"],[714,1005,554,132],[714,1008,554,144,"_f"],[714,1010,554,146],[714,1011,554,147,"chainId"],[714,1018,554,154],[714,1022,555,26],[714,1023,555,27],[714,1036,555,40,"options"],[714,1043,555,47],[714,1044,555,48,"signInWithSolana"],[714,1060,555,64],[714,1061,555,65,"chainId"],[714,1068,555,72],[714,1070,555,74],[714,1071,555,75],[714,1074,556,26],[714,1076,556,28],[714,1077,556,29],[714,1079,557,20],[714,1083,557,24],[714,1084,557,25],[714,1085,557,26,"_g"],[714,1087,557,28],[714,1090,557,31,"options"],[714,1097,557,38],[714,1102,557,43],[714,1106,557,47],[714,1110,557,51,"options"],[714,1117,557,58],[714,1122,557,58,"undefined"],[714,1131,557,69],[714,1134,557,69,"undefined"],[714,1143,557,69],[714,1146,557,81,"options"],[714,1153,557,88],[714,1154,557,89,"signInWithSolana"],[714,1170,557,105],[714,1176,557,111],[714,1180,557,115],[714,1184,557,119,"_g"],[714,1186,557,121],[714,1191,557,121,"undefined"],[714,1200,557,132],[714,1203,557,132,"undefined"],[714,1212,557,132],[714,1215,557,144,"_g"],[714,1217,557,146],[714,1218,557,147,"nonce"],[714,1223,557,152],[714,1227,557,156],[714,1228,557,157],[714,1238,557,167,"options"],[714,1245,557,174],[714,1246,557,175,"signInWithSolana"],[714,1262,557,191],[714,1263,557,192,"nonce"],[714,1268,557,197],[714,1270,557,199],[714,1271,557,200],[714,1274,557,203],[714,1276,557,205],[714,1277,557,206],[714,1279,558,20],[714,1283,558,24],[714,1284,558,25],[714,1285,558,26,"_h"],[714,1287,558,28],[714,1290,558,31,"options"],[714,1297,558,38],[714,1302,558,43],[714,1306,558,47],[714,1310,558,51,"options"],[714,1317,558,58],[714,1322,558,58,"undefined"],[714,1331,558,69],[714,1334,558,69,"undefined"],[714,1343,558,69],[714,1346,558,81,"options"],[714,1353,558,88],[714,1354,558,89,"signInWithSolana"],[714,1370,558,105],[714,1376,558,111],[714,1380,558,115],[714,1384,558,119,"_h"],[714,1386,558,121],[714,1391,558,121,"undefined"],[714,1400,558,132],[714,1403,558,132,"undefined"],[714,1412,558,132],[714,1415,558,144,"_h"],[714,1417,558,146],[714,1418,558,147,"requestId"],[714,1427,558,156],[714,1431,559,26],[714,1432,559,27],[714,1447,559,42,"options"],[714,1454,559,49],[714,1455,559,50,"signInWithSolana"],[714,1471,559,66],[714,1472,559,67,"requestId"],[714,1481,559,76],[714,1483,559,78],[714,1484,559,79],[714,1487,560,26],[714,1489,560,28],[714,1490,560,29],[714,1492,561,20],[714,1496,561,24],[714,1497,561,25],[714,1498,561,26,"_k"],[714,1500,561,28],[714,1503,561,31],[714,1504,561,32,"_j"],[714,1506,561,34],[714,1509,561,37,"options"],[714,1516,561,44],[714,1521,561,49],[714,1525,561,53],[714,1529,561,57,"options"],[714,1536,561,64],[714,1541,561,64,"undefined"],[714,1550,561,75],[714,1553,561,75,"undefined"],[714,1562,561,75],[714,1565,561,87,"options"],[714,1572,561,94],[714,1573,561,95,"signInWithSolana"],[714,1589,561,111],[714,1595,561,117],[714,1599,561,121],[714,1603,561,125,"_j"],[714,1605,561,127],[714,1610,561,127,"undefined"],[714,1619,561,138],[714,1622,561,138,"undefined"],[714,1631,561,138],[714,1634,561,150,"_j"],[714,1636,561,152],[714,1637,561,153,"resources"],[714,1646,561,162],[714,1652,561,168],[714,1656,561,172],[714,1660,561,176,"_k"],[714,1662,561,178],[714,1667,561,178,"undefined"],[714,1676,561,189],[714,1679,561,189,"undefined"],[714,1688,561,189],[714,1691,561,201,"_k"],[714,1693,561,203],[714,1694,561,204,"length"],[714,1700,561,210],[714,1704,562,26],[714,1705,563,28],[714,1716,563,39],[714,1718,564,28],[714,1721,564,31,"options"],[714,1728,564,38],[714,1729,564,39,"signInWithSolana"],[714,1745,564,55],[714,1746,564,56,"resources"],[714,1755,564,65],[714,1756,564,66,"map"],[714,1759,564,69],[714,1760,564,71,"resource"],[714,1768,564,79],[714,1772,564,84],[714,1777,564,89,"resource"],[714,1785,564,97],[714,1787,564,99],[714,1788,564,100],[714,1789,565,25],[714,1792,566,26],[714,1794,566,28],[714,1795,566,29],[714,1796,567,17],[714,1797,567,18,"join"],[714,1801,567,22],[714,1802,567,23],[714,1806,567,27],[714,1807,567,28],[715,14,568,16],[715,18,568,22,"maybeSignature"],[715,32,568,36],[715,41,568,45,"resolvedWallet"],[715,55,568,59],[715,56,568,60,"signMessage"],[715,67,568,71],[715,68,568,72],[715,72,568,76,"TextEncoder"],[715,83,568,87],[715,84,568,88],[715,85,568,89],[715,86,568,90,"encode"],[715,92,568,96],[715,93,568,97,"message"],[715,100,568,104],[715,101,568,105],[715,103,568,107],[715,109,568,113],[715,110,568,114],[716,14,569,16],[716,18,569,20],[716,19,569,21,"maybeSignature"],[716,33,569,35],[716,37,569,39],[716,39,569,41,"maybeSignature"],[716,53,569,55],[716,65,569,67,"Uint8Array"],[716,75,569,77],[716,76,569,78],[716,78,569,80],[717,16,570,20],[717,22,570,26],[717,26,570,30,"Error"],[717,31,570,35],[717,32,570,36],[717,106,570,110],[717,107,570,111],[718,14,571,16],[719,14,572,16,"signature"],[719,23,572,25],[719,26,572,28,"maybeSignature"],[719,40,572,42],[720,12,573,12],[721,10,574,8],[722,10,575,8],[722,14,575,12],[723,12,576,12],[723,16,576,12,"_yield3"],[723,23,576,12],[723,32,576,42],[723,33,576,43],[723,34,576,44],[723,36,576,46,"fetch_1"],[723,43,576,53],[723,44,576,54,"_request"],[723,52,576,62],[723,54,576,64],[723,58,576,68],[723,59,576,69,"fetch"],[723,64,576,74],[723,66,576,76],[723,72,576,82],[723,74,576,84],[723,77,576,87],[723,81,576,91],[723,82,576,92,"url"],[723,85,576,95],[723,109,576,119],[723,111,576,121],[724,16,577,16,"headers"],[724,23,577,23],[724,25,577,25],[724,29,577,29],[724,30,577,30,"headers"],[724,37,577,37],[725,16,578,16,"body"],[725,20,578,20],[725,22,578,22,"Object"],[725,28,578,28],[725,29,578,29,"assign"],[725,35,578,35],[725,36,578,36],[726,18,578,38,"chain"],[726,23,578,43],[726,25,578,45],[726,33,578,53],[727,18,578,55,"message"],[727,25,578,62],[728,18,578,64,"signature"],[728,27,578,73],[728,29,578,75],[728,30,578,76],[728,31,578,77],[728,33,578,79,"base64url_1"],[728,44,578,90],[728,45,578,91,"bytesToBase64URL"],[728,61,578,107],[728,63,578,109,"signature"],[728,72,578,118],[729,16,578,120],[729,17,578,121],[729,19,578,124],[729,20,578,125],[729,21,578,126,"_l"],[729,23,578,128],[729,26,578,131,"credentials"],[729,37,578,142],[729,38,578,143,"options"],[729,45,578,150],[729,51,578,156],[729,55,578,160],[729,59,578,164,"_l"],[729,61,578,166],[729,66,578,166,"undefined"],[729,75,578,177],[729,78,578,177,"undefined"],[729,87,578,177],[729,90,578,189,"_l"],[729,92,578,191],[729,93,578,192,"captchaToken"],[729,105,578,204],[729,109,579,22],[730,18,579,24,"gotrue_meta_security"],[730,38,579,44],[730,40,579,46],[731,20,579,48,"captcha_token"],[731,33,579,61],[731,35,579,63],[731,36,579,64,"_m"],[731,38,579,66],[731,41,579,69,"credentials"],[731,52,579,80],[731,53,579,81,"options"],[731,60,579,88],[731,66,579,94],[731,70,579,98],[731,74,579,102,"_m"],[731,76,579,104],[731,81,579,104,"undefined"],[731,90,579,115],[731,93,579,115,"undefined"],[731,102,579,115],[731,105,579,127,"_m"],[731,107,579,129],[731,108,579,130,"captchaToken"],[732,18,579,143],[733,16,579,145],[733,17,579,146],[733,20,580,22],[733,24,580,27],[733,25,580,28],[734,16,581,16,"xform"],[734,21,581,21],[734,23,581,23,"fetch_1"],[734,30,581,30],[734,31,581,31,"_sessionResponse"],[735,14,582,12],[735,15,582,13],[735,16,582,14],[736,14,576,20,"data"],[736,18,576,24],[736,21,576,24,"_yield3"],[736,28,576,24],[736,29,576,20,"data"],[736,33,576,24],[737,14,576,26,"error"],[737,19,576,31],[737,22,576,31,"_yield3"],[737,29,576,31],[737,30,576,26,"error"],[737,35,576,31],[738,12,583,12],[738,16,583,16,"error"],[738,21,583,21],[738,23,583,23],[739,14,584,16],[739,20,584,22,"error"],[739,25,584,27],[740,12,585,12],[741,12,586,12],[741,16,586,16],[741,17,586,17,"data"],[741,21,586,21],[741,25,586,25],[741,26,586,26,"data"],[741,30,586,30],[741,31,586,31,"session"],[741,38,586,38],[741,42,586,42],[741,43,586,43,"data"],[741,47,586,47],[741,48,586,48,"user"],[741,52,586,52],[741,54,586,54],[742,14,587,16],[742,21,587,23],[743,16,588,20,"data"],[743,20,588,24],[743,22,588,26],[744,18,588,28,"user"],[744,22,588,32],[744,24,588,34],[744,28,588,38],[745,18,588,40,"session"],[745,25,588,47],[745,27,588,49],[746,16,588,54],[746,17,588,55],[747,16,589,20,"error"],[747,21,589,25],[747,23,589,27],[747,27,589,31,"errors_1"],[747,35,589,39],[747,36,589,40,"AuthInvalidTokenResponseError"],[747,65,589,69],[747,66,589,70],[748,14,590,16],[748,15,590,17],[749,12,591,12],[750,12,592,12],[750,16,592,16,"data"],[750,20,592,20],[750,21,592,21,"session"],[750,28,592,28],[750,30,592,30],[751,14,593,16],[751,20,593,22],[751,24,593,26],[751,25,593,27,"_saveSession"],[751,37,593,39],[751,38,593,40,"data"],[751,42,593,44],[751,43,593,45,"session"],[751,50,593,52],[751,51,593,53],[752,14,594,16],[752,20,594,22],[752,24,594,26],[752,25,594,27,"_notifyAllSubscribers"],[752,46,594,48],[752,47,594,49],[752,58,594,60],[752,60,594,62,"data"],[752,64,594,66],[752,65,594,67,"session"],[752,72,594,74],[752,73,594,75],[753,12,595,12],[754,12,596,12],[754,19,596,19],[755,14,596,21,"data"],[755,18,596,25],[755,20,596,27,"Object"],[755,26,596,33],[755,27,596,34,"assign"],[755,33,596,40],[755,34,596,41],[755,35,596,42],[755,36,596,43],[755,38,596,45,"data"],[755,42,596,49],[755,43,596,50],[756,14,596,52,"error"],[757,12,596,58],[757,13,596,59],[758,10,597,8],[758,11,597,9],[758,12,598,8],[758,19,598,15,"error"],[758,24,598,20],[758,26,598,22],[759,12,599,12],[759,16,599,16],[759,17,599,17],[759,18,599,18],[759,20,599,20,"errors_1"],[759,28,599,28],[759,29,599,29,"isAuthError"],[759,40,599,40],[759,42,599,42,"error"],[759,47,599,47],[759,48,599,48],[759,50,599,50],[760,14,600,16],[760,21,600,23],[761,16,600,25,"data"],[761,20,600,29],[761,22,600,31],[762,18,600,33,"user"],[762,22,600,37],[762,24,600,39],[762,28,600,43],[763,18,600,45,"session"],[763,25,600,52],[763,27,600,54],[764,16,600,59],[764,17,600,60],[765,16,600,62,"error"],[766,14,600,68],[766,15,600,69],[767,12,601,12],[768,12,602,12],[768,18,602,18,"error"],[768,23,602,23],[769,10,603,8],[770,8,604,4],[770,9,604,5],[771,8,604,5],[771,17,465,10,"signInWithSolana"],[771,33,465,26,"signInWithSolana"],[771,34,465,26,"_x1"],[771,37,465,26],[772,10,465,26],[772,17,465,26,"_signInWithSolana"],[772,34,465,26],[772,35,465,26,"apply"],[772,40,465,26],[772,47,465,26,"arguments"],[772,56,465,26],[773,8,465,26],[774,8,465,26],[774,15,465,10,"signInWithSolana"],[774,31,465,26],[775,6,465,26],[776,4,465,26],[777,6,465,26,"key"],[777,9,465,26],[778,6,465,26,"value"],[778,11,465,26],[779,8,465,26],[779,12,465,26,"_exchangeCodeForSession3"],[779,36,465,26],[779,39,465,26,"_asyncToGenerator"],[779,56,465,26],[779,57,605,4],[779,68,605,34,"authCode"],[779,76,605,42],[779,78,605,44],[780,10,606,8],[780,14,606,14,"storageItem"],[780,25,606,25],[780,34,606,34],[780,35,606,35],[780,36,606,36],[780,38,606,38,"helpers_1"],[780,47,606,47],[780,48,606,48,"getItemAsync"],[780,60,606,60],[780,62,606,62],[780,66,606,66],[780,67,606,67,"storage"],[780,74,606,74],[780,76,606,76],[780,79,606,79],[780,83,606,83],[780,84,606,84,"storageKey"],[780,94,606,94],[780,110,606,110],[780,111,606,111],[781,10,607,8],[781,14,607,8,"_split"],[781,20,607,8],[781,23,607,45],[781,24,607,46,"storageItem"],[781,35,607,57],[781,40,607,62],[781,44,607,66],[781,48,607,70,"storageItem"],[781,59,607,81],[781,64,607,81,"undefined"],[781,73,607,92],[781,76,607,95,"storageItem"],[781,87,607,106],[781,90,607,109],[781,92,607,111],[781,94,607,113,"split"],[781,99,607,118],[781,100,607,119],[781,103,607,122],[781,104,607,123],[782,12,607,123,"_split2"],[782,19,607,123],[782,22,607,123,"_slicedToArray"],[782,36,607,123],[782,37,607,123,"_split"],[782,43,607,123],[783,12,607,15,"codeVerifier"],[783,24,607,27],[783,27,607,27,"_split2"],[783,34,607,27],[784,12,607,29,"redirectType"],[784,24,607,41],[784,27,607,41,"_split2"],[784,34,607,41],[785,10,608,8],[785,14,608,12],[786,12,609,12],[786,16,609,12,"_yield4"],[786,23,609,12],[786,32,609,42],[786,33,609,43],[786,34,609,44],[786,36,609,46,"fetch_1"],[786,43,609,53],[786,44,609,54,"_request"],[786,52,609,62],[786,54,609,64],[786,58,609,68],[786,59,609,69,"fetch"],[786,64,609,74],[786,66,609,76],[786,72,609,82],[786,74,609,84],[786,77,609,87],[786,81,609,91],[786,82,609,92,"url"],[786,85,609,95],[786,109,609,119],[786,111,609,121],[787,16,610,16,"headers"],[787,23,610,23],[787,25,610,25],[787,29,610,29],[787,30,610,30,"headers"],[787,37,610,37],[788,16,611,16,"body"],[788,20,611,20],[788,22,611,22],[789,18,612,20,"auth_code"],[789,27,612,29],[789,29,612,31,"authCode"],[789,37,612,39],[790,18,613,20,"code_verifier"],[790,31,613,33],[790,33,613,35,"codeVerifier"],[791,16,614,16],[791,17,614,17],[792,16,615,16,"xform"],[792,21,615,21],[792,23,615,23,"fetch_1"],[792,30,615,30],[792,31,615,31,"_sessionResponse"],[793,14,616,12],[793,15,616,13],[793,16,616,14],[794,14,609,20,"data"],[794,18,609,24],[794,21,609,24,"_yield4"],[794,28,609,24],[794,29,609,20,"data"],[794,33,609,24],[795,14,609,26,"error"],[795,19,609,31],[795,22,609,31,"_yield4"],[795,29,609,31],[795,30,609,26,"error"],[795,35,609,31],[796,12,617,12],[796,18,617,18],[796,19,617,19],[796,20,617,20],[796,22,617,22,"helpers_1"],[796,31,617,31],[796,32,617,32,"removeItemAsync"],[796,47,617,47],[796,49,617,49],[796,53,617,53],[796,54,617,54,"storage"],[796,61,617,61],[796,63,617,63],[796,66,617,66],[796,70,617,70],[796,71,617,71,"storageKey"],[796,81,617,81],[796,97,617,97],[796,98,617,98],[797,12,618,12],[797,16,618,16,"error"],[797,21,618,21],[797,23,618,23],[798,14,619,16],[798,20,619,22,"error"],[798,25,619,27],[799,12,620,12],[800,12,621,12],[800,16,621,16],[800,17,621,17,"data"],[800,21,621,21],[800,25,621,25],[800,26,621,26,"data"],[800,30,621,30],[800,31,621,31,"session"],[800,38,621,38],[800,42,621,42],[800,43,621,43,"data"],[800,47,621,47],[800,48,621,48,"user"],[800,52,621,52],[800,54,621,54],[801,14,622,16],[801,21,622,23],[802,16,623,20,"data"],[802,20,623,24],[802,22,623,26],[803,18,623,28,"user"],[803,22,623,32],[803,24,623,34],[803,28,623,38],[804,18,623,40,"session"],[804,25,623,47],[804,27,623,49],[804,31,623,53],[805,18,623,55,"redirectType"],[805,30,623,67],[805,32,623,69],[806,16,623,74],[806,17,623,75],[807,16,624,20,"error"],[807,21,624,25],[807,23,624,27],[807,27,624,31,"errors_1"],[807,35,624,39],[807,36,624,40,"AuthInvalidTokenResponseError"],[807,65,624,69],[807,66,624,70],[808,14,625,16],[808,15,625,17],[809,12,626,12],[810,12,627,12],[810,16,627,16,"data"],[810,20,627,20],[810,21,627,21,"session"],[810,28,627,28],[810,30,627,30],[811,14,628,16],[811,20,628,22],[811,24,628,26],[811,25,628,27,"_saveSession"],[811,37,628,39],[811,38,628,40,"data"],[811,42,628,44],[811,43,628,45,"session"],[811,50,628,52],[811,51,628,53],[812,14,629,16],[812,20,629,22],[812,24,629,26],[812,25,629,27,"_notifyAllSubscribers"],[812,46,629,48],[812,47,629,49],[812,58,629,60],[812,60,629,62,"data"],[812,64,629,66],[812,65,629,67,"session"],[812,72,629,74],[812,73,629,75],[813,12,630,12],[814,12,631,12],[814,19,631,19],[815,14,631,21,"data"],[815,18,631,25],[815,20,631,27,"Object"],[815,26,631,33],[815,27,631,34,"assign"],[815,33,631,40],[815,34,631,41,"Object"],[815,40,631,47],[815,41,631,48,"assign"],[815,47,631,54],[815,48,631,55],[815,49,631,56],[815,50,631,57],[815,52,631,59,"data"],[815,56,631,63],[815,57,631,64],[815,59,631,66],[816,16,631,68,"redirectType"],[816,28,631,80],[816,30,631,82,"redirectType"],[816,42,631,94],[816,47,631,99],[816,51,631,103],[816,55,631,107,"redirectType"],[816,67,631,119],[816,72,631,119,"undefined"],[816,81,631,130],[816,84,631,133,"redirectType"],[816,96,631,145],[816,99,631,148],[817,14,631,153],[817,15,631,154],[817,16,631,155],[818,14,631,157,"error"],[819,12,631,163],[819,13,631,164],[820,10,632,8],[820,11,632,9],[820,12,633,8],[820,19,633,15,"error"],[820,24,633,20],[820,26,633,22],[821,12,634,12],[821,16,634,16],[821,17,634,17],[821,18,634,18],[821,20,634,20,"errors_1"],[821,28,634,28],[821,29,634,29,"isAuthError"],[821,40,634,40],[821,42,634,42,"error"],[821,47,634,47],[821,48,634,48],[821,50,634,50],[822,14,635,16],[822,21,635,23],[823,16,635,25,"data"],[823,20,635,29],[823,22,635,31],[824,18,635,33,"user"],[824,22,635,37],[824,24,635,39],[824,28,635,43],[825,18,635,45,"session"],[825,25,635,52],[825,27,635,54],[825,31,635,58],[826,18,635,60,"redirectType"],[826,30,635,72],[826,32,635,74],[827,16,635,79],[827,17,635,80],[828,16,635,82,"error"],[829,14,635,88],[829,15,635,89],[830,12,636,12],[831,12,637,12],[831,18,637,18,"error"],[831,23,637,23],[832,10,638,8],[833,8,639,4],[833,9,639,5],[834,8,639,5],[834,17,605,10,"_exchangeCodeForSession"],[834,40,605,33,"_exchangeCodeForSession"],[834,41,605,33,"_x10"],[834,45,605,33],[835,10,605,33],[835,17,605,33,"_exchangeCodeForSession3"],[835,41,605,33],[835,42,605,33,"apply"],[835,47,605,33],[835,54,605,33,"arguments"],[835,63,605,33],[836,8,605,33],[837,8,605,33],[837,15,605,10,"_exchangeCodeForSession"],[837,38,605,33],[838,6,605,33],[839,6,640,4],[840,0,641,0],[841,0,642,0],[842,0,643,0],[843,4,640,4],[844,6,640,4,"key"],[844,9,640,4],[845,6,640,4,"value"],[845,11,640,4],[846,8,640,4],[846,12,640,4,"_signInWithIdToken"],[846,30,640,4],[846,33,640,4,"_asyncToGenerator"],[846,50,640,4],[846,51,644,4],[846,62,644,28,"credentials"],[846,73,644,39],[846,75,644,41],[847,10,645,8],[847,14,645,12],[848,12,646,12],[848,16,646,20,"options"],[848,23,646,27],[848,26,646,70,"credentials"],[848,37,646,81],[848,38,646,20,"options"],[848,45,646,27],[849,14,646,29,"provider"],[849,22,646,37],[849,25,646,70,"credentials"],[849,36,646,81],[849,37,646,29,"provider"],[849,45,646,37],[850,14,646,39,"token"],[850,19,646,44],[850,22,646,70,"credentials"],[850,33,646,81],[850,34,646,39,"token"],[850,39,646,44],[851,14,646,46,"access_token"],[851,26,646,58],[851,29,646,70,"credentials"],[851,40,646,81],[851,41,646,46,"access_token"],[851,53,646,58],[852,14,646,60,"nonce"],[852,19,646,65],[852,22,646,70,"credentials"],[852,33,646,81],[852,34,646,60,"nonce"],[852,39,646,65],[853,12,647,12],[853,16,647,18,"res"],[853,19,647,21],[853,28,647,30],[853,29,647,31],[853,30,647,32],[853,32,647,34,"fetch_1"],[853,39,647,41],[853,40,647,42,"_request"],[853,48,647,50],[853,50,647,52],[853,54,647,56],[853,55,647,57,"fetch"],[853,60,647,62],[853,62,647,64],[853,68,647,70],[853,70,647,72],[853,73,647,75],[853,77,647,79],[853,78,647,80,"url"],[853,81,647,83],[853,109,647,111],[853,111,647,113],[854,14,648,16,"headers"],[854,21,648,23],[854,23,648,25],[854,27,648,29],[854,28,648,30,"headers"],[854,35,648,37],[855,14,649,16,"body"],[855,18,649,20],[855,20,649,22],[856,16,650,20,"provider"],[856,24,650,28],[857,16,651,20,"id_token"],[857,24,651,28],[857,26,651,30,"token"],[857,31,651,35],[858,16,652,20,"access_token"],[858,28,652,32],[859,16,653,20,"nonce"],[859,21,653,25],[860,16,654,20,"gotrue_meta_security"],[860,36,654,40],[860,38,654,42],[861,18,654,44,"captcha_token"],[861,31,654,57],[861,33,654,59,"options"],[861,40,654,66],[861,45,654,71],[861,49,654,75],[861,53,654,79,"options"],[861,60,654,86],[861,65,654,86,"undefined"],[861,74,654,97],[861,77,654,97,"undefined"],[861,86,654,97],[861,89,654,109,"options"],[861,96,654,116],[861,97,654,117,"captchaToken"],[862,16,654,130],[863,14,655,16],[863,15,655,17],[864,14,656,16,"xform"],[864,19,656,21],[864,21,656,23,"fetch_1"],[864,28,656,30],[864,29,656,31,"_sessionResponse"],[865,12,657,12],[865,13,657,13],[865,14,657,14],[866,12,658,12],[866,16,658,20,"data"],[866,20,658,24],[866,23,658,36,"res"],[866,26,658,39],[866,27,658,20,"data"],[866,31,658,24],[867,14,658,26,"error"],[867,19,658,31],[867,22,658,36,"res"],[867,25,658,39],[867,26,658,26,"error"],[867,31,658,31],[868,12,659,12],[868,16,659,16,"error"],[868,21,659,21],[868,23,659,23],[869,14,660,16],[869,21,660,23],[870,16,660,25,"data"],[870,20,660,29],[870,22,660,31],[871,18,660,33,"user"],[871,22,660,37],[871,24,660,39],[871,28,660,43],[872,18,660,45,"session"],[872,25,660,52],[872,27,660,54],[873,16,660,59],[873,17,660,60],[874,16,660,62,"error"],[875,14,660,68],[875,15,660,69],[876,12,661,12],[876,13,661,13],[876,19,662,17],[876,23,662,21],[876,24,662,22,"data"],[876,28,662,26],[876,32,662,30],[876,33,662,31,"data"],[876,37,662,35],[876,38,662,36,"session"],[876,45,662,43],[876,49,662,47],[876,50,662,48,"data"],[876,54,662,52],[876,55,662,53,"user"],[876,59,662,57],[876,61,662,59],[877,14,663,16],[877,21,663,23],[878,16,664,20,"data"],[878,20,664,24],[878,22,664,26],[879,18,664,28,"user"],[879,22,664,32],[879,24,664,34],[879,28,664,38],[880,18,664,40,"session"],[880,25,664,47],[880,27,664,49],[881,16,664,54],[881,17,664,55],[882,16,665,20,"error"],[882,21,665,25],[882,23,665,27],[882,27,665,31,"errors_1"],[882,35,665,39],[882,36,665,40,"AuthInvalidTokenResponseError"],[882,65,665,69],[882,66,665,70],[883,14,666,16],[883,15,666,17],[884,12,667,12],[885,12,668,12],[885,16,668,16,"data"],[885,20,668,20],[885,21,668,21,"session"],[885,28,668,28],[885,30,668,30],[886,14,669,16],[886,20,669,22],[886,24,669,26],[886,25,669,27,"_saveSession"],[886,37,669,39],[886,38,669,40,"data"],[886,42,669,44],[886,43,669,45,"session"],[886,50,669,52],[886,51,669,53],[887,14,670,16],[887,20,670,22],[887,24,670,26],[887,25,670,27,"_notifyAllSubscribers"],[887,46,670,48],[887,47,670,49],[887,58,670,60],[887,60,670,62,"data"],[887,64,670,66],[887,65,670,67,"session"],[887,72,670,74],[887,73,670,75],[888,12,671,12],[889,12,672,12],[889,19,672,19],[890,14,672,21,"data"],[890,18,672,25],[891,14,672,27,"error"],[892,12,672,33],[892,13,672,34],[893,10,673,8],[893,11,673,9],[893,12,674,8],[893,19,674,15,"error"],[893,24,674,20],[893,26,674,22],[894,12,675,12],[894,16,675,16],[894,17,675,17],[894,18,675,18],[894,20,675,20,"errors_1"],[894,28,675,28],[894,29,675,29,"isAuthError"],[894,40,675,40],[894,42,675,42,"error"],[894,47,675,47],[894,48,675,48],[894,50,675,50],[895,14,676,16],[895,21,676,23],[896,16,676,25,"data"],[896,20,676,29],[896,22,676,31],[897,18,676,33,"user"],[897,22,676,37],[897,24,676,39],[897,28,676,43],[898,18,676,45,"session"],[898,25,676,52],[898,27,676,54],[899,16,676,59],[899,17,676,60],[900,16,676,62,"error"],[901,14,676,68],[901,15,676,69],[902,12,677,12],[903,12,678,12],[903,18,678,18,"error"],[903,23,678,23],[904,10,679,8],[905,8,680,4],[905,9,680,5],[906,8,680,5],[906,17,644,10,"signInWithIdToken"],[906,34,644,27,"signInWithIdToken"],[906,35,644,27,"_x11"],[906,39,644,27],[907,10,644,27],[907,17,644,27,"_signInWithIdToken"],[907,35,644,27],[907,36,644,27,"apply"],[907,41,644,27],[907,48,644,27,"arguments"],[907,57,644,27],[908,8,644,27],[909,8,644,27],[909,15,644,10,"signInWithIdToken"],[909,32,644,27],[910,6,644,27],[911,6,681,4],[912,0,682,0],[913,0,683,0],[914,0,684,0],[915,0,685,0],[916,0,686,0],[917,0,687,0],[918,0,688,0],[919,0,689,0],[920,0,690,0],[921,0,691,0],[922,0,692,0],[923,0,693,0],[924,0,694,0],[925,0,695,0],[926,0,696,0],[927,0,697,0],[928,6,681,4],[929,4,681,4],[930,6,681,4,"key"],[930,9,681,4],[931,6,681,4,"value"],[931,11,681,4],[932,8,681,4],[932,12,681,4,"_signInWithOtp"],[932,26,681,4],[932,29,681,4,"_asyncToGenerator"],[932,46,681,4],[932,47,698,4],[932,58,698,24,"credentials"],[932,69,698,35],[932,71,698,37],[933,10,699,8],[933,14,699,12,"_a"],[933,16,699,14],[933,18,699,16,"_b"],[933,20,699,18],[933,22,699,20,"_c"],[933,24,699,22],[933,26,699,24,"_d"],[933,28,699,26],[933,30,699,28,"_e"],[933,32,699,30],[934,10,700,8],[934,14,700,12],[935,12,701,12],[935,16,701,16],[935,23,701,23],[935,27,701,27,"credentials"],[935,38,701,38],[935,40,701,40],[936,14,702,16],[936,18,702,24,"email"],[936,23,702,29],[936,26,702,43,"credentials"],[936,37,702,54],[936,38,702,24,"email"],[936,43,702,29],[937,16,702,31,"options"],[937,23,702,38],[937,26,702,43,"credentials"],[937,37,702,54],[937,38,702,31,"options"],[937,45,702,38],[938,14,703,16],[938,18,703,20,"codeChallenge"],[938,31,703,33],[938,34,703,36],[938,38,703,40],[939,14,704,16],[939,18,704,20,"codeChallengeMethod"],[939,37,704,39],[939,40,704,42],[939,44,704,46],[940,14,705,16],[940,18,705,20],[940,22,705,24],[940,23,705,25,"flowType"],[940,31,705,33],[940,36,705,38],[940,42,705,44],[940,44,705,46],[941,16,706,20],[942,16,706,21],[942,20,706,21,"_yield5"],[942,27,706,21],[942,36,707,65],[942,37,707,66],[942,38,707,67],[942,40,707,69,"helpers_1"],[942,49,707,78],[942,50,707,79,"getCodeChallengeAndMethod"],[942,75,707,104],[942,77,707,106],[942,81,707,110],[942,82,707,111,"storage"],[942,89,707,118],[942,91,707,120],[942,95,707,124],[942,96,707,125,"storageKey"],[942,106,707,135],[942,107,707,136],[943,16,707,136],[943,20,707,136,"_yield6"],[943,27,707,136],[943,30,707,136,"_slicedToArray"],[943,44,707,136],[943,45,707,136,"_yield5"],[943,52,707,136],[944,16,707,21,"codeChallenge"],[944,29,707,34],[944,32,707,34,"_yield6"],[944,39,707,34],[945,16,707,36,"codeChallengeMethod"],[945,35,707,55],[945,38,707,55,"_yield6"],[945,45,707,55],[946,14,708,16],[947,14,709,16],[947,18,709,16,"_yield7"],[947,25,709,16],[947,34,709,40],[947,35,709,41],[947,36,709,42],[947,38,709,44,"fetch_1"],[947,45,709,51],[947,46,709,52,"_request"],[947,54,709,60],[947,56,709,62],[947,60,709,66],[947,61,709,67,"fetch"],[947,66,709,72],[947,68,709,74],[947,74,709,80],[947,76,709,82],[947,79,709,85],[947,83,709,89],[947,84,709,90,"url"],[947,87,709,93],[947,93,709,99],[947,95,709,101],[948,18,710,20,"headers"],[948,25,710,27],[948,27,710,29],[948,31,710,33],[948,32,710,34,"headers"],[948,39,710,41],[949,18,711,20,"body"],[949,22,711,24],[949,24,711,26],[950,20,712,24,"email"],[950,25,712,29],[951,20,713,24,"data"],[951,24,713,28],[951,26,713,30],[951,27,713,31,"_a"],[951,29,713,33],[951,32,713,36,"options"],[951,39,713,43],[951,44,713,48],[951,48,713,52],[951,52,713,56,"options"],[951,59,713,63],[951,64,713,63,"undefined"],[951,73,713,74],[951,76,713,74,"undefined"],[951,85,713,74],[951,88,713,86,"options"],[951,95,713,93],[951,96,713,94,"data"],[951,100,713,98],[951,106,713,104],[951,110,713,108],[951,114,713,112,"_a"],[951,116,713,114],[951,121,713,114,"undefined"],[951,130,713,125],[951,133,713,128,"_a"],[951,135,713,130],[951,138,713,133],[951,139,713,134],[951,140,713,135],[952,20,714,24,"create_user"],[952,31,714,35],[952,33,714,37],[952,34,714,38,"_b"],[952,36,714,40],[952,39,714,43,"options"],[952,46,714,50],[952,51,714,55],[952,55,714,59],[952,59,714,63,"options"],[952,66,714,70],[952,71,714,70,"undefined"],[952,80,714,81],[952,83,714,81,"undefined"],[952,92,714,81],[952,95,714,93,"options"],[952,102,714,100],[952,103,714,101,"shouldCreateUser"],[952,119,714,117],[952,125,714,123],[952,129,714,127],[952,133,714,131,"_b"],[952,135,714,133],[952,140,714,133,"undefined"],[952,149,714,144],[952,152,714,147,"_b"],[952,154,714,149],[952,157,714,152],[952,161,714,156],[953,20,715,24,"gotrue_meta_security"],[953,40,715,44],[953,42,715,46],[954,22,715,48,"captcha_token"],[954,35,715,61],[954,37,715,63,"options"],[954,44,715,70],[954,49,715,75],[954,53,715,79],[954,57,715,83,"options"],[954,64,715,90],[954,69,715,90,"undefined"],[954,78,715,101],[954,81,715,101,"undefined"],[954,90,715,101],[954,93,715,113,"options"],[954,100,715,120],[954,101,715,121,"captchaToken"],[955,20,715,134],[955,21,715,135],[956,20,716,24,"code_challenge"],[956,34,716,38],[956,36,716,40,"codeChallenge"],[956,49,716,53],[957,20,717,24,"code_challenge_method"],[957,41,717,45],[957,43,717,47,"codeChallengeMethod"],[958,18,718,20],[958,19,718,21],[959,18,719,20,"redirectTo"],[959,28,719,30],[959,30,719,32,"options"],[959,37,719,39],[959,42,719,44],[959,46,719,48],[959,50,719,52,"options"],[959,57,719,59],[959,62,719,59,"undefined"],[959,71,719,70],[959,74,719,70,"undefined"],[959,83,719,70],[959,86,719,82,"options"],[959,93,719,89],[959,94,719,90,"emailRedirectTo"],[960,16,720,16],[960,17,720,17],[960,18,720,18],[961,16,709,24,"error"],[961,21,709,29],[961,24,709,29,"_yield7"],[961,31,709,29],[961,32,709,24,"error"],[961,37,709,29],[962,14,721,16],[962,21,721,23],[963,16,721,25,"data"],[963,20,721,29],[963,22,721,31],[964,18,721,33,"user"],[964,22,721,37],[964,24,721,39],[964,28,721,43],[965,18,721,45,"session"],[965,25,721,52],[965,27,721,54],[966,16,721,59],[966,17,721,60],[967,16,721,62,"error"],[968,14,721,68],[968,15,721,69],[969,12,722,12],[970,12,723,12],[970,16,723,16],[970,23,723,23],[970,27,723,27,"credentials"],[970,38,723,38],[970,40,723,40],[971,14,724,16],[971,18,724,24,"phone"],[971,23,724,29],[971,26,724,43,"credentials"],[971,37,724,54],[971,38,724,24,"phone"],[971,43,724,29],[972,16,724,31,"options"],[972,25,724,38],[972,28,724,43,"credentials"],[972,39,724,54],[972,40,724,31,"options"],[972,47,724,38],[973,14,725,16],[973,18,725,16,"_yield8"],[973,25,725,16],[973,34,725,46],[973,35,725,47],[973,36,725,48],[973,38,725,50,"fetch_1"],[973,45,725,57],[973,46,725,58,"_request"],[973,54,725,66],[973,56,725,68],[973,60,725,72],[973,61,725,73,"fetch"],[973,66,725,78],[973,68,725,80],[973,74,725,86],[973,76,725,88],[973,79,725,91],[973,83,725,95],[973,84,725,96,"url"],[973,87,725,99],[973,93,725,105],[973,95,725,107],[974,18,726,20,"headers"],[974,25,726,27],[974,27,726,29],[974,31,726,33],[974,32,726,34,"headers"],[974,39,726,41],[975,18,727,20,"body"],[975,22,727,24],[975,24,727,26],[976,20,728,24,"phone"],[976,25,728,29],[977,20,729,24,"data"],[977,24,729,28],[977,26,729,30],[977,27,729,31,"_c"],[977,29,729,33],[977,32,729,36,"options"],[977,41,729,43],[977,46,729,48],[977,50,729,52],[977,54,729,56,"options"],[977,63,729,63],[977,68,729,63,"undefined"],[977,77,729,74],[977,80,729,74,"undefined"],[977,89,729,74],[977,92,729,86,"options"],[977,101,729,93],[977,102,729,94,"data"],[977,106,729,98],[977,112,729,104],[977,116,729,108],[977,120,729,112,"_c"],[977,122,729,114],[977,127,729,114,"undefined"],[977,136,729,125],[977,139,729,128,"_c"],[977,141,729,130],[977,144,729,133],[977,145,729,134],[977,146,729,135],[978,20,730,24,"create_user"],[978,31,730,35],[978,33,730,37],[978,34,730,38,"_d"],[978,36,730,40],[978,39,730,43,"options"],[978,48,730,50],[978,53,730,55],[978,57,730,59],[978,61,730,63,"options"],[978,70,730,70],[978,75,730,70,"undefined"],[978,84,730,81],[978,87,730,81,"undefined"],[978,96,730,81],[978,99,730,93,"options"],[978,108,730,100],[978,109,730,101,"shouldCreateUser"],[978,125,730,117],[978,131,730,123],[978,135,730,127],[978,139,730,131,"_d"],[978,141,730,133],[978,146,730,133,"undefined"],[978,155,730,144],[978,158,730,147,"_d"],[978,160,730,149],[978,163,730,152],[978,167,730,156],[979,20,731,24,"gotrue_meta_security"],[979,40,731,44],[979,42,731,46],[980,22,731,48,"captcha_token"],[980,35,731,61],[980,37,731,63,"options"],[980,46,731,70],[980,51,731,75],[980,55,731,79],[980,59,731,83,"options"],[980,68,731,90],[980,73,731,90,"undefined"],[980,82,731,101],[980,85,731,101,"undefined"],[980,94,731,101],[980,97,731,113,"options"],[980,106,731,120],[980,107,731,121,"captchaToken"],[981,20,731,134],[981,21,731,135],[982,20,732,24,"channel"],[982,27,732,31],[982,29,732,33],[982,30,732,34,"_e"],[982,32,732,36],[982,35,732,39,"options"],[982,44,732,46],[982,49,732,51],[982,53,732,55],[982,57,732,59,"options"],[982,66,732,66],[982,71,732,66,"undefined"],[982,80,732,77],[982,83,732,77,"undefined"],[982,92,732,77],[982,95,732,89,"options"],[982,104,732,96],[982,105,732,97,"channel"],[982,112,732,104],[982,118,732,110],[982,122,732,114],[982,126,732,118,"_e"],[982,128,732,120],[982,133,732,120,"undefined"],[982,142,732,131],[982,145,732,134,"_e"],[982,147,732,136],[982,150,732,139],[983,18,733,20],[984,16,734,16],[984,17,734,17],[984,18,734,18],[985,16,725,24,"data"],[985,20,725,28],[985,23,725,28,"_yield8"],[985,30,725,28],[985,31,725,24,"data"],[985,35,725,28],[986,16,725,30,"error"],[986,22,725,35],[986,25,725,35,"_yield8"],[986,32,725,35],[986,33,725,30,"error"],[986,38,725,35],[987,14,735,16],[987,21,735,23],[988,16,735,25,"data"],[988,20,735,29],[988,22,735,31],[989,18,735,33,"user"],[989,22,735,37],[989,24,735,39],[989,28,735,43],[990,18,735,45,"session"],[990,25,735,52],[990,27,735,54],[990,31,735,58],[991,18,735,60,"messageId"],[991,27,735,69],[991,29,735,71,"data"],[991,33,735,75],[991,38,735,80],[991,42,735,84],[991,46,735,88,"data"],[991,50,735,92],[991,55,735,92,"undefined"],[991,64,735,103],[991,67,735,103,"undefined"],[991,76,735,103],[991,79,735,115,"data"],[991,83,735,119],[991,84,735,120,"message_id"],[992,16,735,131],[992,17,735,132],[993,16,735,134,"error"],[993,21,735,139],[993,23,735,134,"error"],[994,14,735,140],[994,15,735,141],[995,12,736,12],[996,12,737,12],[996,18,737,18],[996,22,737,22,"errors_1"],[996,30,737,30],[996,31,737,31,"AuthInvalidCredentialsError"],[996,58,737,58],[996,59,737,59],[996,110,737,110],[996,111,737,111],[997,10,738,8],[997,11,738,9],[997,12,739,8],[997,19,739,15,"error"],[997,24,739,20],[997,26,739,22],[998,12,740,12],[998,16,740,16],[998,17,740,17],[998,18,740,18],[998,20,740,20,"errors_1"],[998,28,740,28],[998,29,740,29,"isAuthError"],[998,40,740,40],[998,42,740,42,"error"],[998,47,740,47],[998,48,740,48],[998,50,740,50],[999,14,741,16],[999,21,741,23],[1000,16,741,25,"data"],[1000,20,741,29],[1000,22,741,31],[1001,18,741,33,"user"],[1001,22,741,37],[1001,24,741,39],[1001,28,741,43],[1002,18,741,45,"session"],[1002,25,741,52],[1002,27,741,54],[1003,16,741,59],[1003,17,741,60],[1004,16,741,62,"error"],[1005,14,741,68],[1005,15,741,69],[1006,12,742,12],[1007,12,743,12],[1007,18,743,18,"error"],[1007,23,743,23],[1008,10,744,8],[1009,8,745,4],[1009,9,745,5],[1010,8,745,5],[1010,17,698,10,"signInWithOtp"],[1010,30,698,23,"signInWithOtp"],[1010,31,698,23,"_x12"],[1010,35,698,23],[1011,10,698,23],[1011,17,698,23,"_signInWithOtp"],[1011,31,698,23],[1011,32,698,23,"apply"],[1011,37,698,23],[1011,44,698,23,"arguments"],[1011,53,698,23],[1012,8,698,23],[1013,8,698,23],[1013,15,698,10,"signInWithOtp"],[1013,28,698,23],[1014,6,698,23],[1015,6,746,4],[1016,0,747,0],[1017,0,748,0],[1018,6,746,4],[1019,4,746,4],[1020,6,746,4,"key"],[1020,9,746,4],[1021,6,746,4,"value"],[1021,11,746,4],[1022,8,746,4],[1022,12,746,4,"_verifyOtp"],[1022,22,746,4],[1022,25,746,4,"_asyncToGenerator"],[1022,42,746,4],[1022,43,749,4],[1022,54,749,20,"params"],[1022,60,749,26],[1022,62,749,28],[1023,10,750,8],[1023,14,750,12,"_a"],[1023,16,750,14],[1023,18,750,16,"_b"],[1023,20,750,18],[1024,10,751,8],[1024,14,751,12],[1025,12,752,12],[1025,16,752,16,"redirectTo"],[1025,26,752,26],[1025,29,752,29,"undefined"],[1025,38,752,38],[1026,12,753,12],[1026,16,753,16,"captchaToken"],[1026,28,753,28],[1026,31,753,31,"undefined"],[1026,40,753,40],[1027,12,754,12],[1027,16,754,16],[1027,25,754,25],[1027,29,754,29,"params"],[1027,35,754,35],[1027,37,754,37],[1028,14,755,16,"redirectTo"],[1028,24,755,26],[1028,27,755,29],[1028,28,755,30,"_a"],[1028,30,755,32],[1028,33,755,35,"params"],[1028,39,755,41],[1028,40,755,42,"options"],[1028,47,755,49],[1028,53,755,55],[1028,57,755,59],[1028,61,755,63,"_a"],[1028,63,755,65],[1028,68,755,65,"undefined"],[1028,77,755,76],[1028,80,755,76,"undefined"],[1028,89,755,76],[1028,92,755,88,"_a"],[1028,94,755,90],[1028,95,755,91,"redirectTo"],[1028,105,755,101],[1029,14,756,16,"captchaToken"],[1029,26,756,28],[1029,29,756,31],[1029,30,756,32,"_b"],[1029,32,756,34],[1029,35,756,37,"params"],[1029,41,756,43],[1029,42,756,44,"options"],[1029,49,756,51],[1029,55,756,57],[1029,59,756,61],[1029,63,756,65,"_b"],[1029,65,756,67],[1029,70,756,67,"undefined"],[1029,79,756,78],[1029,82,756,78,"undefined"],[1029,91,756,78],[1029,94,756,90,"_b"],[1029,96,756,92],[1029,97,756,93,"captchaToken"],[1029,109,756,105],[1030,12,757,12],[1031,12,758,12],[1031,16,758,12,"_yield9"],[1031,23,758,12],[1031,32,758,42],[1031,33,758,43],[1031,34,758,44],[1031,36,758,46,"fetch_1"],[1031,43,758,53],[1031,44,758,54,"_request"],[1031,52,758,62],[1031,54,758,64],[1031,58,758,68],[1031,59,758,69,"fetch"],[1031,64,758,74],[1031,66,758,76],[1031,72,758,82],[1031,74,758,84],[1031,77,758,87],[1031,81,758,91],[1031,82,758,92,"url"],[1031,85,758,95],[1031,94,758,104],[1031,96,758,106],[1032,16,759,16,"headers"],[1032,23,759,23],[1032,25,759,25],[1032,29,759,29],[1032,30,759,30,"headers"],[1032,37,759,37],[1033,16,760,16,"body"],[1033,20,760,20],[1033,22,760,22,"Object"],[1033,28,760,28],[1033,29,760,29,"assign"],[1033,35,760,35],[1033,36,760,36,"Object"],[1033,42,760,42],[1033,43,760,43,"assign"],[1033,49,760,49],[1033,50,760,50],[1033,51,760,51],[1033,52,760,52],[1033,54,760,54,"params"],[1033,60,760,60],[1033,61,760,61],[1033,63,760,63],[1034,18,760,65,"gotrue_meta_security"],[1034,38,760,85],[1034,40,760,87],[1035,20,760,89,"captcha_token"],[1035,33,760,102],[1035,35,760,104,"captchaToken"],[1036,18,760,117],[1037,16,760,119],[1037,17,760,120],[1037,18,760,121],[1038,16,761,16,"redirectTo"],[1038,26,761,26],[1039,16,762,16,"xform"],[1039,21,762,21],[1039,23,762,23,"fetch_1"],[1039,30,762,30],[1039,31,762,31,"_sessionResponse"],[1040,14,763,12],[1040,15,763,13],[1040,16,763,14],[1041,14,758,20,"data"],[1041,18,758,24],[1041,21,758,24,"_yield9"],[1041,28,758,24],[1041,29,758,20,"data"],[1041,33,758,24],[1042,14,758,26,"error"],[1042,19,758,31],[1042,22,758,31,"_yield9"],[1042,29,758,31],[1042,30,758,26,"error"],[1042,35,758,31],[1043,12,764,12],[1043,16,764,16,"error"],[1043,21,764,21],[1043,23,764,23],[1044,14,765,16],[1044,20,765,22,"error"],[1044,25,765,27],[1045,12,766,12],[1046,12,767,12],[1046,16,767,16],[1046,17,767,17,"data"],[1046,21,767,21],[1046,23,767,23],[1047,14,768,16],[1047,20,768,22],[1047,24,768,26,"Error"],[1047,29,768,31],[1047,30,768,32],[1047,72,768,74],[1047,73,768,75],[1048,12,769,12],[1049,12,770,12],[1049,16,770,18,"session"],[1049,23,770,25],[1049,26,770,28,"data"],[1049,30,770,32],[1049,31,770,33,"session"],[1049,38,770,40],[1050,12,771,12],[1050,16,771,18,"user"],[1050,20,771,22],[1050,23,771,25,"data"],[1050,27,771,29],[1050,28,771,30,"user"],[1050,32,771,34],[1051,12,772,12],[1051,16,772,16,"session"],[1051,23,772,23],[1051,28,772,28],[1051,32,772,32],[1051,36,772,36,"session"],[1051,43,772,43],[1051,48,772,43,"undefined"],[1051,57,772,54],[1051,60,772,54,"undefined"],[1051,69,772,54],[1051,72,772,66,"session"],[1051,79,772,73],[1051,80,772,74,"access_token"],[1051,92,772,86],[1051,94,772,88],[1052,14,773,16],[1052,20,773,22],[1052,24,773,26],[1052,25,773,27,"_saveSession"],[1052,37,773,39],[1052,38,773,40,"session"],[1052,45,773,47],[1052,46,773,48],[1053,14,774,16],[1053,20,774,22],[1053,24,774,26],[1053,25,774,27,"_notifyAllSubscribers"],[1053,46,774,48],[1053,47,774,49,"params"],[1053,53,774,55],[1053,54,774,56,"type"],[1053,58,774,60],[1053,62,774,64],[1053,72,774,74],[1053,75,774,77],[1053,94,774,96],[1053,97,774,99],[1053,108,774,110],[1053,110,774,112,"session"],[1053,117,774,119],[1053,118,774,120],[1054,12,775,12],[1055,12,776,12],[1055,19,776,19],[1056,14,776,21,"data"],[1056,18,776,25],[1056,20,776,27],[1057,16,776,29,"user"],[1057,20,776,33],[1058,16,776,35,"session"],[1059,14,776,43],[1059,15,776,44],[1060,14,776,46,"error"],[1060,19,776,51],[1060,21,776,53],[1061,12,776,58],[1061,13,776,59],[1062,10,777,8],[1062,11,777,9],[1062,12,778,8],[1062,19,778,15,"error"],[1062,24,778,20],[1062,26,778,22],[1063,12,779,12],[1063,16,779,16],[1063,17,779,17],[1063,18,779,18],[1063,20,779,20,"errors_1"],[1063,28,779,28],[1063,29,779,29,"isAuthError"],[1063,40,779,40],[1063,42,779,42,"error"],[1063,47,779,47],[1063,48,779,48],[1063,50,779,50],[1064,14,780,16],[1064,21,780,23],[1065,16,780,25,"data"],[1065,20,780,29],[1065,22,780,31],[1066,18,780,33,"user"],[1066,22,780,37],[1066,24,780,39],[1066,28,780,43],[1067,18,780,45,"session"],[1067,25,780,52],[1067,27,780,54],[1068,16,780,59],[1068,17,780,60],[1069,16,780,62,"error"],[1070,14,780,68],[1070,15,780,69],[1071,12,781,12],[1072,12,782,12],[1072,18,782,18,"error"],[1072,23,782,23],[1073,10,783,8],[1074,8,784,4],[1074,9,784,5],[1075,8,784,5],[1075,17,749,10,"verifyOtp"],[1075,26,749,19,"verifyOtp"],[1075,27,749,19,"_x13"],[1075,31,749,19],[1076,10,749,19],[1076,17,749,19,"_verifyOtp"],[1076,27,749,19],[1076,28,749,19,"apply"],[1076,33,749,19],[1076,40,749,19,"arguments"],[1076,49,749,19],[1077,8,749,19],[1078,8,749,19],[1078,15,749,10,"verifyOtp"],[1078,24,749,19],[1079,6,749,19],[1080,6,785,4],[1081,0,786,0],[1082,0,787,0],[1083,0,788,0],[1084,0,789,0],[1085,0,790,0],[1086,0,791,0],[1087,0,792,0],[1088,0,793,0],[1089,0,794,0],[1090,0,795,0],[1091,0,796,0],[1092,0,797,0],[1093,0,798,0],[1094,6,785,4],[1095,4,785,4],[1096,6,785,4,"key"],[1096,9,785,4],[1097,6,785,4,"value"],[1097,11,785,4],[1098,8,785,4],[1098,12,785,4,"_signInWithSSO"],[1098,26,785,4],[1098,29,785,4,"_asyncToGenerator"],[1098,46,785,4],[1098,47,799,4],[1098,58,799,24,"params"],[1098,64,799,30],[1098,66,799,32],[1099,10,800,8],[1099,14,800,12,"_a"],[1099,16,800,14],[1099,18,800,16,"_b"],[1099,20,800,18],[1099,22,800,20,"_c"],[1099,24,800,22],[1100,10,801,8],[1100,14,801,12],[1101,12,802,12],[1101,16,802,16,"codeChallenge"],[1101,29,802,29],[1101,32,802,32],[1101,36,802,36],[1102,12,803,12],[1102,16,803,16,"codeChallengeMethod"],[1102,35,803,35],[1102,38,803,38],[1102,42,803,42],[1103,12,804,12],[1103,16,804,16],[1103,20,804,20],[1103,21,804,21,"flowType"],[1103,29,804,29],[1103,34,804,34],[1103,40,804,40],[1103,42,804,42],[1104,14,805,16],[1105,14,805,17],[1105,18,805,17,"_yield0"],[1105,25,805,17],[1105,34,806,61],[1105,35,806,62],[1105,36,806,63],[1105,38,806,65,"helpers_1"],[1105,47,806,74],[1105,48,806,75,"getCodeChallengeAndMethod"],[1105,73,806,100],[1105,75,806,102],[1105,79,806,106],[1105,80,806,107,"storage"],[1105,87,806,114],[1105,89,806,116],[1105,93,806,120],[1105,94,806,121,"storageKey"],[1105,104,806,131],[1105,105,806,132],[1106,14,806,132],[1106,18,806,132,"_yield1"],[1106,25,806,132],[1106,28,806,132,"_slicedToArray"],[1106,42,806,132],[1106,43,806,132,"_yield0"],[1106,50,806,132],[1107,14,806,17,"codeChallenge"],[1107,27,806,30],[1107,30,806,30,"_yield1"],[1107,37,806,30],[1108,14,806,32,"codeChallengeMethod"],[1108,33,806,51],[1108,36,806,51,"_yield1"],[1108,43,806,51],[1109,12,807,12],[1110,12,808,12],[1110,25,808,25],[1110,26,808,26],[1110,27,808,27],[1110,29,808,29,"fetch_1"],[1110,36,808,36],[1110,37,808,37,"_request"],[1110,45,808,45],[1110,47,808,47],[1110,51,808,51],[1110,52,808,52,"fetch"],[1110,57,808,57],[1110,59,808,59],[1110,65,808,65],[1110,67,808,67],[1110,70,808,70],[1110,74,808,74],[1110,75,808,75,"url"],[1110,78,808,78],[1110,84,808,84],[1110,86,808,86],[1111,14,809,16,"body"],[1111,18,809,20],[1111,20,809,22,"Object"],[1111,26,809,28],[1111,27,809,29,"assign"],[1111,33,809,35],[1111,34,809,36,"Object"],[1111,40,809,42],[1111,41,809,43,"assign"],[1111,47,809,49],[1111,48,809,50,"Object"],[1111,54,809,56],[1111,55,809,57,"assign"],[1111,61,809,63],[1111,62,809,64,"Object"],[1111,68,809,70],[1111,69,809,71,"assign"],[1111,75,809,77],[1111,76,809,78,"Object"],[1111,82,809,84],[1111,83,809,85,"assign"],[1111,89,809,91],[1111,90,809,92],[1111,91,809,93],[1111,92,809,94],[1111,94,809,97],[1111,106,809,109],[1111,110,809,113,"params"],[1111,116,809,119],[1111,119,809,122],[1112,16,809,124,"provider_id"],[1112,27,809,135],[1112,29,809,137,"params"],[1112,35,809,143],[1112,36,809,144,"providerId"],[1113,14,809,155],[1113,15,809,156],[1113,18,809,159],[1113,22,809,164],[1113,23,809,165],[1113,25,809,168],[1113,33,809,176],[1113,37,809,180,"params"],[1113,43,809,186],[1113,46,809,189],[1114,16,809,191,"domain"],[1114,22,809,197],[1114,24,809,199,"params"],[1114,30,809,205],[1114,31,809,206,"domain"],[1115,14,809,213],[1115,15,809,214],[1115,18,809,217],[1115,22,809,222],[1115,23,809,223],[1115,25,809,225],[1116,16,809,227,"redirect_to"],[1116,27,809,238],[1116,29,809,240],[1116,30,809,241,"_b"],[1116,32,809,243],[1116,35,809,246],[1116,36,809,247,"_a"],[1116,38,809,249],[1116,41,809,252,"params"],[1116,47,809,258],[1116,48,809,259,"options"],[1116,55,809,266],[1116,61,809,272],[1116,65,809,276],[1116,69,809,280,"_a"],[1116,71,809,282],[1116,76,809,282,"undefined"],[1116,85,809,293],[1116,88,809,293,"undefined"],[1116,97,809,293],[1116,100,809,305,"_a"],[1116,102,809,307],[1116,103,809,308,"redirectTo"],[1116,113,809,318],[1116,119,809,324],[1116,123,809,328],[1116,127,809,332,"_b"],[1116,129,809,334],[1116,134,809,334,"undefined"],[1116,143,809,345],[1116,146,809,348,"_b"],[1116,148,809,350],[1116,151,809,353,"undefined"],[1117,14,809,363],[1117,15,809,364],[1117,16,809,365],[1117,18,809,368],[1117,19,809,369],[1117,20,809,370,"_c"],[1117,22,809,372],[1117,25,809,375,"params"],[1117,31,809,381],[1117,36,809,386],[1117,40,809,390],[1117,44,809,394,"params"],[1117,50,809,400],[1117,55,809,400,"undefined"],[1117,64,809,411],[1117,67,809,411,"undefined"],[1117,76,809,411],[1117,79,809,423,"params"],[1117,85,809,429],[1117,86,809,430,"options"],[1117,93,809,437],[1117,99,809,443],[1117,103,809,447],[1117,107,809,451,"_c"],[1117,109,809,453],[1117,114,809,453,"undefined"],[1117,123,809,464],[1117,126,809,464,"undefined"],[1117,135,809,464],[1117,138,809,476,"_c"],[1117,140,809,478],[1117,141,809,479,"captchaToken"],[1117,153,809,491],[1117,157,810,22],[1118,16,810,24,"gotrue_meta_security"],[1118,36,810,44],[1118,38,810,46],[1119,18,810,48,"captcha_token"],[1119,31,810,61],[1119,33,810,63,"params"],[1119,39,810,69],[1119,40,810,70,"options"],[1119,47,810,77],[1119,48,810,78,"captchaToken"],[1120,16,810,91],[1121,14,810,93],[1121,15,810,94],[1121,18,811,22],[1121,22,811,27],[1121,23,811,28],[1121,25,811,30],[1122,16,811,32,"skip_http_redirect"],[1122,34,811,50],[1122,36,811,52],[1122,40,811,56],[1123,16,811,58,"code_challenge"],[1123,30,811,72],[1123,32,811,74,"codeChallenge"],[1123,45,811,87],[1124,16,811,89,"code_challenge_method"],[1124,37,811,110],[1124,39,811,112,"codeChallengeMethod"],[1125,14,811,132],[1125,15,811,133],[1125,16,811,134],[1126,14,812,16,"headers"],[1126,21,812,23],[1126,23,812,25],[1126,27,812,29],[1126,28,812,30,"headers"],[1126,35,812,37],[1127,14,813,16,"xform"],[1127,19,813,21],[1127,21,813,23,"fetch_1"],[1127,28,813,30],[1127,29,813,31,"_ssoResponse"],[1128,12,814,12],[1128,13,814,13],[1128,14,814,14],[1129,10,815,8],[1129,11,815,9],[1129,12,816,8],[1129,19,816,15,"error"],[1129,24,816,20],[1129,26,816,22],[1130,12,817,12],[1130,16,817,16],[1130,17,817,17],[1130,18,817,18],[1130,20,817,20,"errors_1"],[1130,28,817,28],[1130,29,817,29,"isAuthError"],[1130,40,817,40],[1130,42,817,42,"error"],[1130,47,817,47],[1130,48,817,48],[1130,50,817,50],[1131,14,818,16],[1131,21,818,23],[1132,16,818,25,"data"],[1132,20,818,29],[1132,22,818,31],[1132,26,818,35],[1133,16,818,37,"error"],[1134,14,818,43],[1134,15,818,44],[1135,12,819,12],[1136,12,820,12],[1136,18,820,18,"error"],[1136,23,820,23],[1137,10,821,8],[1138,8,822,4],[1138,9,822,5],[1139,8,822,5],[1139,17,799,10,"signInWithSSO"],[1139,30,799,23,"signInWithSSO"],[1139,31,799,23,"_x14"],[1139,35,799,23],[1140,10,799,23],[1140,17,799,23,"_signInWithSSO"],[1140,31,799,23],[1140,32,799,23,"apply"],[1140,37,799,23],[1140,44,799,23,"arguments"],[1140,53,799,23],[1141,8,799,23],[1142,8,799,23],[1142,15,799,10,"signInWithSSO"],[1142,28,799,23],[1143,6,799,23],[1144,6,823,4],[1145,0,824,0],[1146,0,825,0],[1147,0,826,0],[1148,6,823,4],[1149,4,823,4],[1150,6,823,4,"key"],[1150,9,823,4],[1151,6,823,4,"value"],[1151,11,823,4],[1152,8,823,4],[1152,12,823,4,"_reauthenticate2"],[1152,28,823,4],[1152,31,823,4,"_asyncToGenerator"],[1152,48,823,4],[1152,49,827,4],[1152,62,827,27],[1153,10,827,27],[1153,14,827,27,"_this5"],[1153,20,827,27],[1154,10,828,8],[1154,16,828,14],[1154,20,828,18],[1154,21,828,19,"initializePromise"],[1154,38,828,36],[1155,10,829,8],[1155,23,829,21],[1155,27,829,25],[1155,28,829,26,"_acquireLock"],[1155,40,829,38],[1155,58,829,38,"_asyncToGenerator"],[1155,75,829,38],[1155,76,829,43],[1155,89,829,55],[1156,12,830,12],[1156,25,830,25,"_this5"],[1156,31,830,29],[1156,32,830,30,"_reauthenticate"],[1156,47,830,45],[1156,48,830,46],[1156,49,830,47],[1157,10,831,8],[1157,11,831,9],[1157,13,831,10],[1158,8,832,4],[1158,9,832,5],[1159,8,832,5],[1159,17,827,10,"reauthenticate"],[1159,31,827,24,"reauthenticate"],[1159,32,827,24],[1160,10,827,24],[1160,17,827,24,"_reauthenticate2"],[1160,33,827,24],[1160,34,827,24,"apply"],[1160,39,827,24],[1160,46,827,24,"arguments"],[1160,55,827,24],[1161,8,827,24],[1162,8,827,24],[1162,15,827,10,"reauthenticate"],[1162,29,827,24],[1163,6,827,24],[1164,4,827,24],[1165,6,827,24,"key"],[1165,9,827,24],[1166,6,827,24,"value"],[1166,11,827,24],[1167,8,827,24],[1167,12,827,24,"_reauthenticate3"],[1167,28,827,24],[1167,31,827,24,"_asyncToGenerator"],[1167,48,827,24],[1167,49,833,4],[1167,62,833,28],[1168,10,833,28],[1168,14,833,28,"_this6"],[1168,20,833,28],[1169,10,834,8],[1169,14,834,12],[1170,12,835,12],[1170,25,835,25],[1170,29,835,29],[1170,30,835,30,"_useSession"],[1170,41,835,41],[1171,14,835,41],[1171,18,835,41,"_ref7"],[1171,23,835,41],[1171,26,835,41,"_asyncToGenerator"],[1171,43,835,41],[1171,44,835,42],[1171,55,835,49,"result"],[1171,61,835,55],[1171,63,835,60],[1172,16,836,16],[1172,20,836,32,"session"],[1172,27,836,39],[1172,30,836,68,"result"],[1172,36,836,74],[1172,37,836,24,"data"],[1172,41,836,28],[1172,42,836,32,"session"],[1172,49,836,39],[1173,18,836,50,"sessionError"],[1173,30,836,62],[1173,33,836,68,"result"],[1173,39,836,74],[1173,40,836,43,"error"],[1173,45,836,48],[1174,16,837,16],[1174,20,837,20,"sessionError"],[1174,32,837,32],[1174,34,838,20],[1174,40,838,26,"sessionError"],[1174,52,838,38],[1175,16,839,16],[1175,20,839,20],[1175,21,839,21,"session"],[1175,28,839,28],[1175,30,840,20],[1175,36,840,26],[1175,40,840,30,"errors_1"],[1175,48,840,38],[1175,49,840,39,"AuthSessionMissingError"],[1175,72,840,62],[1175,73,840,63],[1175,74,840,64],[1176,16,841,16],[1176,20,841,16,"_yield10"],[1176,28,841,16],[1176,37,841,40],[1176,38,841,41],[1176,39,841,42],[1176,41,841,44,"fetch_1"],[1176,48,841,51],[1176,49,841,52,"_request"],[1176,57,841,60],[1176,59,841,62,"_this6"],[1176,65,841,66],[1176,66,841,67,"fetch"],[1176,71,841,72],[1176,73,841,74],[1176,78,841,79],[1176,80,841,81],[1176,83,841,84,"_this6"],[1176,89,841,88],[1176,90,841,89,"url"],[1176,93,841,92],[1176,110,841,109],[1176,112,841,111],[1177,20,842,20,"headers"],[1177,27,842,27],[1177,29,842,29,"_this6"],[1177,35,842,33],[1177,36,842,34,"headers"],[1177,43,842,41],[1178,20,843,20,"jwt"],[1178,23,843,23],[1178,25,843,25,"session"],[1178,32,843,32],[1178,33,843,33,"access_token"],[1179,18,844,16],[1179,19,844,17],[1179,20,844,18],[1180,18,841,24,"error"],[1180,23,841,29],[1180,26,841,29,"_yield10"],[1180,34,841,29],[1180,35,841,24,"error"],[1180,40,841,29],[1181,16,845,16],[1181,23,845,23],[1182,18,845,25,"data"],[1182,22,845,29],[1182,24,845,31],[1183,20,845,33,"user"],[1183,24,845,37],[1183,26,845,39],[1183,30,845,43],[1184,20,845,45,"session"],[1184,27,845,52],[1184,29,845,54],[1185,18,845,59],[1185,19,845,60],[1186,18,845,62,"error"],[1187,16,845,68],[1187,17,845,69],[1188,14,846,12],[1188,15,846,13],[1189,14,846,13],[1189,31,846,13,"_x15"],[1189,35,846,13],[1190,16,846,13],[1190,23,846,13,"_ref7"],[1190,28,846,13],[1190,29,846,13,"apply"],[1190,34,846,13],[1190,41,846,13,"arguments"],[1190,50,846,13],[1191,14,846,13],[1192,12,846,13],[1192,16,846,14],[1193,10,847,8],[1193,11,847,9],[1193,12,848,8],[1193,19,848,15,"error"],[1193,24,848,20],[1193,26,848,22],[1194,12,849,12],[1194,16,849,16],[1194,17,849,17],[1194,18,849,18],[1194,20,849,20,"errors_1"],[1194,28,849,28],[1194,29,849,29,"isAuthError"],[1194,40,849,40],[1194,42,849,42,"error"],[1194,47,849,47],[1194,48,849,48],[1194,50,849,50],[1195,14,850,16],[1195,21,850,23],[1196,16,850,25,"data"],[1196,20,850,29],[1196,22,850,31],[1197,18,850,33,"user"],[1197,22,850,37],[1197,24,850,39],[1197,28,850,43],[1198,18,850,45,"session"],[1198,25,850,52],[1198,27,850,54],[1199,16,850,59],[1199,17,850,60],[1200,16,850,62,"error"],[1201,14,850,68],[1201,15,850,69],[1202,12,851,12],[1203,12,852,12],[1203,18,852,18,"error"],[1203,23,852,23],[1204,10,853,8],[1205,8,854,4],[1205,9,854,5],[1206,8,854,5],[1206,17,833,10,"_reauthenticate"],[1206,32,833,25,"_reauthenticate"],[1206,33,833,25],[1207,10,833,25],[1207,17,833,25,"_reauthenticate3"],[1207,33,833,25],[1207,34,833,25,"apply"],[1207,39,833,25],[1207,46,833,25,"arguments"],[1207,55,833,25],[1208,8,833,25],[1209,8,833,25],[1209,15,833,10,"_reauthenticate"],[1209,30,833,25],[1210,6,833,25],[1211,6,855,4],[1212,0,856,0],[1213,0,857,0],[1214,4,855,4],[1215,6,855,4,"key"],[1215,9,855,4],[1216,6,855,4,"value"],[1216,11,855,4],[1217,8,855,4],[1217,12,855,4,"_resend"],[1217,19,855,4],[1217,22,855,4,"_asyncToGenerator"],[1217,39,855,4],[1217,40,858,4],[1217,51,858,17,"credentials"],[1217,62,858,28],[1217,64,858,30],[1218,10,859,8],[1218,14,859,12],[1219,12,860,12],[1219,16,860,18,"endpoint"],[1219,24,860,26],[1219,27,860,29],[1219,30,860,32],[1219,34,860,36],[1219,35,860,37,"url"],[1219,38,860,40],[1219,47,860,49],[1220,12,861,12],[1220,16,861,16],[1220,23,861,23],[1220,27,861,27,"credentials"],[1220,38,861,38],[1220,40,861,40],[1221,14,862,16],[1221,18,862,24,"email"],[1221,23,862,29],[1221,26,862,49,"credentials"],[1221,37,862,60],[1221,38,862,24,"email"],[1221,43,862,29],[1222,16,862,31,"type"],[1222,20,862,35],[1222,23,862,49,"credentials"],[1222,34,862,60],[1222,35,862,31,"type"],[1222,39,862,35],[1223,16,862,37,"options"],[1223,23,862,44],[1223,26,862,49,"credentials"],[1223,37,862,60],[1223,38,862,37,"options"],[1223,45,862,44],[1224,14,863,16],[1224,18,863,16,"_yield11"],[1224,26,863,16],[1224,35,863,40],[1224,36,863,41],[1224,37,863,42],[1224,39,863,44,"fetch_1"],[1224,46,863,51],[1224,47,863,52,"_request"],[1224,55,863,60],[1224,57,863,62],[1224,61,863,66],[1224,62,863,67,"fetch"],[1224,67,863,72],[1224,69,863,74],[1224,75,863,80],[1224,77,863,82,"endpoint"],[1224,85,863,90],[1224,87,863,92],[1225,18,864,20,"headers"],[1225,25,864,27],[1225,27,864,29],[1225,31,864,33],[1225,32,864,34,"headers"],[1225,39,864,41],[1226,18,865,20,"body"],[1226,22,865,24],[1226,24,865,26],[1227,20,866,24,"email"],[1227,25,866,29],[1228,20,867,24,"type"],[1228,24,867,28],[1229,20,868,24,"gotrue_meta_security"],[1229,40,868,44],[1229,42,868,46],[1230,22,868,48,"captcha_token"],[1230,35,868,61],[1230,37,868,63,"options"],[1230,44,868,70],[1230,49,868,75],[1230,53,868,79],[1230,57,868,83,"options"],[1230,64,868,90],[1230,69,868,90,"undefined"],[1230,78,868,101],[1230,81,868,101,"undefined"],[1230,90,868,101],[1230,93,868,113,"options"],[1230,100,868,120],[1230,101,868,121,"captchaToken"],[1231,20,868,134],[1232,18,869,20],[1232,19,869,21],[1233,18,870,20,"redirectTo"],[1233,28,870,30],[1233,30,870,32,"options"],[1233,37,870,39],[1233,42,870,44],[1233,46,870,48],[1233,50,870,52,"options"],[1233,57,870,59],[1233,62,870,59,"undefined"],[1233,71,870,70],[1233,74,870,70,"undefined"],[1233,83,870,70],[1233,86,870,82,"options"],[1233,93,870,89],[1233,94,870,90,"emailRedirectTo"],[1234,16,871,16],[1234,17,871,17],[1234,18,871,18],[1235,16,863,24,"error"],[1235,21,863,29],[1235,24,863,29,"_yield11"],[1235,32,863,29],[1235,33,863,24,"error"],[1235,38,863,29],[1236,14,872,16],[1236,21,872,23],[1237,16,872,25,"data"],[1237,20,872,29],[1237,22,872,31],[1238,18,872,33,"user"],[1238,22,872,37],[1238,24,872,39],[1238,28,872,43],[1239,18,872,45,"session"],[1239,25,872,52],[1239,27,872,54],[1240,16,872,59],[1240,17,872,60],[1241,16,872,62,"error"],[1242,14,872,68],[1242,15,872,69],[1243,12,873,12],[1243,13,873,13],[1243,19,874,17],[1243,23,874,21],[1243,30,874,28],[1243,34,874,32,"credentials"],[1243,45,874,43],[1243,47,874,45],[1244,14,875,16],[1244,18,875,24,"phone"],[1244,23,875,29],[1244,26,875,49,"credentials"],[1244,37,875,60],[1244,38,875,24,"phone"],[1244,43,875,29],[1245,16,875,31,"type"],[1245,21,875,35],[1245,24,875,49,"credentials"],[1245,35,875,60],[1245,36,875,31,"type"],[1245,40,875,35],[1246,16,875,37,"options"],[1246,25,875,44],[1246,28,875,49,"credentials"],[1246,39,875,60],[1246,40,875,37,"options"],[1246,47,875,44],[1247,14,876,16],[1247,18,876,16,"_yield12"],[1247,26,876,16],[1247,35,876,46],[1247,36,876,47],[1247,37,876,48],[1247,39,876,50,"fetch_1"],[1247,46,876,57],[1247,47,876,58,"_request"],[1247,55,876,66],[1247,57,876,68],[1247,61,876,72],[1247,62,876,73,"fetch"],[1247,67,876,78],[1247,69,876,80],[1247,75,876,86],[1247,77,876,88,"endpoint"],[1247,85,876,96],[1247,87,876,98],[1248,18,877,20,"headers"],[1248,25,877,27],[1248,27,877,29],[1248,31,877,33],[1248,32,877,34,"headers"],[1248,39,877,41],[1249,18,878,20,"body"],[1249,22,878,24],[1249,24,878,26],[1250,20,879,24,"phone"],[1250,25,879,29],[1251,20,880,24,"type"],[1251,24,880,28],[1251,26,880,24,"type"],[1251,31,880,28],[1252,20,881,24,"gotrue_meta_security"],[1252,40,881,44],[1252,42,881,46],[1253,22,881,48,"captcha_token"],[1253,35,881,61],[1253,37,881,63,"options"],[1253,46,881,70],[1253,51,881,75],[1253,55,881,79],[1253,59,881,83,"options"],[1253,68,881,90],[1253,73,881,90,"undefined"],[1253,82,881,101],[1253,85,881,101,"undefined"],[1253,94,881,101],[1253,97,881,113,"options"],[1253,106,881,120],[1253,107,881,121,"captchaToken"],[1254,20,881,134],[1255,18,882,20],[1256,16,883,16],[1256,17,883,17],[1256,18,883,18],[1257,16,876,24,"data"],[1257,20,876,28],[1257,23,876,28,"_yield12"],[1257,31,876,28],[1257,32,876,24,"data"],[1257,36,876,28],[1258,16,876,30,"error"],[1258,23,876,35],[1258,26,876,35,"_yield12"],[1258,34,876,35],[1258,35,876,30,"error"],[1258,40,876,35],[1259,14,884,16],[1259,21,884,23],[1260,16,884,25,"data"],[1260,20,884,29],[1260,22,884,31],[1261,18,884,33,"user"],[1261,22,884,37],[1261,24,884,39],[1261,28,884,43],[1262,18,884,45,"session"],[1262,25,884,52],[1262,27,884,54],[1262,31,884,58],[1263,18,884,60,"messageId"],[1263,27,884,69],[1263,29,884,71,"data"],[1263,33,884,75],[1263,38,884,80],[1263,42,884,84],[1263,46,884,88,"data"],[1263,50,884,92],[1263,55,884,92,"undefined"],[1263,64,884,103],[1263,67,884,103,"undefined"],[1263,76,884,103],[1263,79,884,115,"data"],[1263,83,884,119],[1263,84,884,120,"message_id"],[1264,16,884,131],[1264,17,884,132],[1265,16,884,134,"error"],[1265,21,884,139],[1265,23,884,134,"error"],[1266,14,884,140],[1266,15,884,141],[1267,12,885,12],[1268,12,886,12],[1268,18,886,18],[1268,22,886,22,"errors_1"],[1268,30,886,30],[1268,31,886,31,"AuthInvalidCredentialsError"],[1268,58,886,58],[1268,59,886,59],[1268,120,886,120],[1268,121,886,121],[1269,10,887,8],[1269,11,887,9],[1269,12,888,8],[1269,19,888,15,"error"],[1269,24,888,20],[1269,26,888,22],[1270,12,889,12],[1270,16,889,16],[1270,17,889,17],[1270,18,889,18],[1270,20,889,20,"errors_1"],[1270,28,889,28],[1270,29,889,29,"isAuthError"],[1270,40,889,40],[1270,42,889,42,"error"],[1270,47,889,47],[1270,48,889,48],[1270,50,889,50],[1271,14,890,16],[1271,21,890,23],[1272,16,890,25,"data"],[1272,20,890,29],[1272,22,890,31],[1273,18,890,33,"user"],[1273,22,890,37],[1273,24,890,39],[1273,28,890,43],[1274,18,890,45,"session"],[1274,25,890,52],[1274,27,890,54],[1275,16,890,59],[1275,17,890,60],[1276,16,890,62,"error"],[1277,14,890,68],[1277,15,890,69],[1278,12,891,12],[1279,12,892,12],[1279,18,892,18,"error"],[1279,23,892,23],[1280,10,893,8],[1281,8,894,4],[1281,9,894,5],[1282,8,894,5],[1282,17,858,10,"resend"],[1282,23,858,16,"resend"],[1282,24,858,16,"_x16"],[1282,28,858,16],[1283,10,858,16],[1283,17,858,16,"_resend"],[1283,24,858,16],[1283,25,858,16,"apply"],[1283,30,858,16],[1283,37,858,16,"arguments"],[1283,46,858,16],[1284,8,858,16],[1285,8,858,16],[1285,15,858,10,"resend"],[1285,21,858,16],[1286,6,858,16],[1287,6,895,4],[1288,0,896,0],[1289,0,897,0],[1290,0,898,0],[1291,0,899,0],[1292,0,900,0],[1293,0,901,0],[1294,0,902,0],[1295,0,903,0],[1296,0,904,0],[1297,0,905,0],[1298,6,895,4],[1299,4,895,4],[1300,6,895,4,"key"],[1300,9,895,4],[1301,6,895,4,"value"],[1301,11,895,4],[1302,8,895,4],[1302,12,895,4,"_getSession"],[1302,23,895,4],[1302,26,895,4,"_asyncToGenerator"],[1302,43,895,4],[1302,44,906,4],[1302,57,906,23],[1303,10,906,23],[1303,14,906,23,"_this7"],[1303,20,906,23],[1304,10,907,8],[1304,16,907,14],[1304,20,907,18],[1304,21,907,19,"initializePromise"],[1304,38,907,36],[1305,10,908,8],[1305,14,908,14,"result"],[1305,20,908,20],[1305,29,908,29],[1305,33,908,33],[1305,34,908,34,"_acquireLock"],[1305,46,908,46],[1305,64,908,46,"_asyncToGenerator"],[1305,81,908,46],[1305,82,908,51],[1305,95,908,63],[1306,12,909,12],[1306,19,909,19,"_this7"],[1306,25,909,23],[1306,26,909,24,"_useSession"],[1306,37,909,35],[1307,14,909,35],[1307,18,909,35,"_ref9"],[1307,23,909,35],[1307,26,909,35,"_asyncToGenerator"],[1307,43,909,35],[1307,44,909,36],[1307,55,909,43,"result"],[1307,61,909,49],[1307,63,909,54],[1308,16,910,16],[1308,23,910,23,"result"],[1308,29,910,29],[1309,14,911,12],[1309,15,911,13],[1310,14,911,13],[1310,31,911,13,"_x17"],[1310,35,911,13],[1311,16,911,13],[1311,23,911,13,"_ref9"],[1311,28,911,13],[1311,29,911,13,"apply"],[1311,34,911,13],[1311,41,911,13,"arguments"],[1311,50,911,13],[1312,14,911,13],[1313,12,911,13],[1313,16,911,14],[1314,10,912,8],[1314,11,912,9],[1314,13,912,10],[1315,10,913,8],[1315,17,913,15,"result"],[1315,23,913,21],[1316,8,914,4],[1316,9,914,5],[1317,8,914,5],[1317,17,906,10,"getSession"],[1317,27,906,20,"getSession"],[1317,28,906,20],[1318,10,906,20],[1318,17,906,20,"_getSession"],[1318,28,906,20],[1318,29,906,20,"apply"],[1318,34,906,20],[1318,41,906,20,"arguments"],[1318,50,906,20],[1319,8,906,20],[1320,8,906,20],[1320,15,906,10,"getSession"],[1320,25,906,20],[1321,6,906,20],[1322,6,915,4],[1323,0,916,0],[1324,0,917,0],[1325,6,915,4],[1326,4,915,4],[1327,6,915,4,"key"],[1327,9,915,4],[1328,6,915,4,"value"],[1328,11,915,4],[1329,8,915,4],[1329,12,915,4,"_acquireLock2"],[1329,25,915,4],[1329,28,915,4,"_asyncToGenerator"],[1329,45,915,4],[1329,46,918,4],[1329,57,918,23,"acquireTimeout"],[1329,71,918,37],[1329,73,918,39,"fn"],[1329,75,918,41],[1329,77,918,43],[1330,10,918,43],[1330,14,918,43,"_this8"],[1330,20,918,43],[1331,10,919,8],[1331,14,919,12],[1331,15,919,13,"_debug"],[1331,21,919,19],[1331,22,919,20],[1331,37,919,35],[1331,39,919,37],[1331,46,919,44],[1331,48,919,46,"acquireTimeout"],[1331,62,919,60],[1331,63,919,61],[1332,10,920,8],[1332,14,920,12],[1333,12,921,12],[1333,16,921,16],[1333,20,921,20],[1333,21,921,21,"lockAcquired"],[1333,33,921,33],[1333,35,921,35],[1334,14,922,16],[1334,18,922,22,"last"],[1334,22,922,26],[1334,25,922,29],[1334,29,922,33],[1334,30,922,34,"pendingInLock"],[1334,43,922,47],[1334,44,922,48,"length"],[1334,50,922,54],[1334,53,923,22],[1334,57,923,26],[1334,58,923,27,"pendingInLock"],[1334,71,923,40],[1334,72,923,41],[1334,76,923,45],[1334,77,923,46,"pendingInLock"],[1334,90,923,59],[1334,91,923,60,"length"],[1334,97,923,66],[1334,100,923,69],[1334,101,923,70],[1334,102,923,71],[1334,105,924,22,"Promise"],[1334,112,924,29],[1334,113,924,30,"resolve"],[1334,120,924,37],[1334,121,924,38],[1334,122,924,39],[1335,14,925,16],[1335,18,925,22,"result"],[1335,24,925,28],[1335,27,925,31,"_asyncToGenerator"],[1335,44,925,31],[1335,45,925,32],[1335,58,925,44],[1336,16,926,20],[1336,22,926,26,"last"],[1336,26,926,30],[1337,16,927,20],[1337,29,927,33,"fn"],[1337,31,927,35],[1337,32,927,36],[1337,33,927,37],[1338,14,928,16],[1338,15,928,17],[1338,17,928,19],[1338,18,928,20],[1339,14,929,16],[1339,18,929,20],[1339,19,929,21,"pendingInLock"],[1339,32,929,34],[1339,33,929,35,"push"],[1339,37,929,39],[1339,38,929,40,"_asyncToGenerator"],[1339,55,929,40],[1339,56,929,41],[1339,69,929,53],[1340,16,930,20],[1340,20,930,24],[1341,18,931,24],[1341,24,931,30,"result"],[1341,30,931,36],[1342,16,932,20],[1342,17,932,21],[1342,18,933,20],[1342,25,933,27,"e"],[1342,26,933,28],[1342,28,933,30],[1343,18,934,24],[1344,16,934,24],[1345,14,936,16],[1345,15,936,17],[1345,17,936,19],[1345,18,936,20],[1345,19,936,21],[1346,14,937,16],[1346,21,937,23,"result"],[1346,27,937,29],[1347,12,938,12],[1348,12,939,12],[1348,25,939,25],[1348,29,939,29],[1348,30,939,30,"lock"],[1348,34,939,34],[1348,35,939,35],[1348,43,939,43],[1348,47,939,47],[1348,48,939,48,"storageKey"],[1348,58,939,58],[1348,60,939,60],[1348,62,939,62,"acquireTimeout"],[1348,76,939,76],[1348,91,939,76,"_asyncToGenerator"],[1348,108,939,76],[1348,109,939,78],[1348,122,939,90],[1349,14,940,16,"_this8"],[1349,20,940,20],[1349,21,940,21,"_debug"],[1349,27,940,27],[1349,28,940,28],[1349,43,940,43],[1349,45,940,45],[1349,76,940,76],[1349,78,940,78,"_this8"],[1349,84,940,82],[1349,85,940,83,"storageKey"],[1349,95,940,93],[1349,96,940,94],[1350,14,941,16],[1350,18,941,20],[1351,16,942,20,"_this8"],[1351,22,942,24],[1351,23,942,25,"lockAcquired"],[1351,35,942,37],[1351,38,942,40],[1351,42,942,44],[1352,16,943,20],[1352,20,943,26,"result"],[1352,27,943,32],[1352,30,943,35,"fn"],[1352,32,943,37],[1352,33,943,38],[1352,34,943,39],[1353,16,944,20,"_this8"],[1353,22,944,24],[1353,23,944,25,"pendingInLock"],[1353,36,944,38],[1353,37,944,39,"push"],[1353,41,944,43],[1353,42,944,44,"_asyncToGenerator"],[1353,59,944,44],[1353,60,944,45],[1353,73,944,57],[1354,18,945,24],[1354,22,945,28],[1355,20,946,28],[1355,26,946,34,"result"],[1355,33,946,40],[1356,18,947,24],[1356,19,947,25],[1356,20,948,24],[1356,27,948,31,"e"],[1356,28,948,32],[1356,30,948,34],[1357,20,949,28],[1358,18,949,28],[1359,16,951,20],[1359,17,951,21],[1359,19,951,23],[1359,20,951,24],[1359,21,951,25],[1360,16,952,20],[1360,22,952,26,"result"],[1360,29,952,32],[1361,16,953,20],[1362,16,954,20],[1362,23,954,27,"_this8"],[1362,29,954,31],[1362,30,954,32,"pendingInLock"],[1362,43,954,45],[1362,44,954,46,"length"],[1362,50,954,52],[1362,52,954,54],[1363,18,955,24],[1363,22,955,30,"waitOn"],[1363,28,955,36],[1363,31,955,39],[1363,32,955,40],[1363,35,955,43,"_this8"],[1363,41,955,47],[1363,42,955,48,"pendingInLock"],[1363,55,955,61],[1363,56,955,62],[1364,18,956,24],[1364,24,956,30,"Promise"],[1364,31,956,37],[1364,32,956,38,"all"],[1364,35,956,41],[1364,36,956,42,"waitOn"],[1364,42,956,48],[1364,43,956,49],[1365,18,957,24,"_this8"],[1365,24,957,28],[1365,25,957,29,"pendingInLock"],[1365,38,957,42],[1365,39,957,43,"splice"],[1365,45,957,49],[1365,46,957,50],[1365,47,957,51],[1365,49,957,53,"waitOn"],[1365,55,957,59],[1365,56,957,60,"length"],[1365,62,957,66],[1365,63,957,67],[1366,16,958,20],[1367,16,959,20],[1367,29,959,33,"result"],[1367,36,959,39],[1368,14,960,16],[1368,15,960,17],[1368,24,961,24],[1369,16,962,20,"_this8"],[1369,22,962,24],[1369,23,962,25,"_debug"],[1369,29,962,31],[1369,30,962,32],[1369,45,962,47],[1369,47,962,49],[1369,78,962,80],[1369,80,962,82,"_this8"],[1369,86,962,86],[1369,87,962,87,"storageKey"],[1369,97,962,97],[1369,98,962,98],[1370,16,963,20,"_this8"],[1370,22,963,24],[1370,23,963,25,"lockAcquired"],[1370,35,963,37],[1370,38,963,40],[1370,43,963,45],[1371,14,964,16],[1372,12,965,12],[1372,13,965,13],[1372,15,965,14],[1373,10,966,8],[1373,11,966,9],[1373,20,967,16],[1374,12,968,12],[1374,16,968,16],[1374,17,968,17,"_debug"],[1374,23,968,23],[1374,24,968,24],[1374,39,968,39],[1374,41,968,41],[1374,46,968,46],[1374,47,968,47],[1375,10,969,8],[1376,8,970,4],[1376,9,970,5],[1377,8,970,5],[1377,17,918,10,"_acquireLock"],[1377,29,918,22,"_acquireLock"],[1377,30,918,22,"_x18"],[1377,34,918,22],[1377,36,918,22,"_x19"],[1377,40,918,22],[1378,10,918,22],[1378,17,918,22,"_acquireLock2"],[1378,30,918,22],[1378,31,918,22,"apply"],[1378,36,918,22],[1378,43,918,22,"arguments"],[1378,52,918,22],[1379,8,918,22],[1380,8,918,22],[1380,15,918,10,"_acquireLock"],[1380,27,918,22],[1381,6,918,22],[1382,6,971,4],[1383,0,972,0],[1384,0,973,0],[1385,0,974,0],[1386,0,975,0],[1387,0,976,0],[1388,6,971,4],[1389,4,971,4],[1390,6,971,4,"key"],[1390,9,971,4],[1391,6,971,4,"value"],[1391,11,971,4],[1392,8,971,4],[1392,12,971,4,"_useSession2"],[1392,24,971,4],[1392,27,971,4,"_asyncToGenerator"],[1392,44,971,4],[1392,45,977,4],[1392,56,977,22,"fn"],[1392,58,977,24],[1392,60,977,26],[1393,10,978,8],[1393,14,978,12],[1393,15,978,13,"_debug"],[1393,21,978,19],[1393,22,978,20],[1393,36,978,34],[1393,38,978,36],[1393,45,978,43],[1393,46,978,44],[1394,10,979,8],[1394,14,979,12],[1395,12,980,12],[1396,12,981,12],[1396,16,981,18,"result"],[1396,22,981,24],[1396,31,981,33],[1396,35,981,37],[1396,36,981,38,"__loadSession"],[1396,49,981,51],[1396,50,981,52],[1396,51,981,53],[1397,12,982,12],[1397,25,982,25,"fn"],[1397,27,982,27],[1397,28,982,28,"result"],[1397,34,982,34],[1397,35,982,35],[1398,10,983,8],[1398,11,983,9],[1398,20,984,16],[1399,12,985,12],[1399,16,985,16],[1399,17,985,17,"_debug"],[1399,23,985,23],[1399,24,985,24],[1399,38,985,38],[1399,40,985,40],[1399,45,985,45],[1399,46,985,46],[1400,10,986,8],[1401,8,987,4],[1401,9,987,5],[1402,8,987,5],[1402,17,977,10,"_useSession"],[1402,28,977,21,"_useSession"],[1402,29,977,21,"_x20"],[1402,33,977,21],[1403,10,977,21],[1403,17,977,21,"_useSession2"],[1403,29,977,21],[1403,30,977,21,"apply"],[1403,35,977,21],[1403,42,977,21,"arguments"],[1403,51,977,21],[1404,8,977,21],[1405,8,977,21],[1405,15,977,10,"_useSession"],[1405,26,977,21],[1406,6,977,21],[1407,6,988,4],[1408,0,989,0],[1409,0,990,0],[1410,0,991,0],[1411,0,992,0],[1412,6,988,4],[1413,4,988,4],[1414,6,988,4,"key"],[1414,9,988,4],[1415,6,988,4,"value"],[1415,11,988,4],[1416,8,988,4],[1416,12,988,4,"_loadSession"],[1416,24,988,4],[1416,27,988,4,"_asyncToGenerator"],[1416,44,988,4],[1416,45,993,4],[1416,58,993,26],[1417,10,994,8],[1417,14,994,12],[1417,15,994,13,"_debug"],[1417,21,994,19],[1417,22,994,20],[1417,40,994,38],[1417,42,994,40],[1417,49,994,47],[1417,50,994,48],[1418,10,995,8],[1418,14,995,12],[1418,15,995,13],[1418,19,995,17],[1418,20,995,18,"lockAcquired"],[1418,32,995,30],[1418,34,995,32],[1419,12,996,12],[1419,16,996,16],[1419,17,996,17,"_debug"],[1419,23,996,23],[1419,24,996,24],[1419,42,996,42],[1419,44,996,44],[1419,79,996,79],[1419,81,996,81],[1419,85,996,85,"Error"],[1419,90,996,90],[1419,91,996,91],[1419,92,996,92],[1419,93,996,93,"stack"],[1419,98,996,98],[1419,99,996,99],[1420,10,997,8],[1421,10,998,8],[1421,14,998,12],[1422,12,999,12],[1422,16,999,16,"currentSession"],[1422,30,999,30],[1422,33,999,33],[1422,37,999,37],[1423,12,1000,12],[1423,16,1000,18,"maybeSession"],[1423,28,1000,30],[1423,37,1000,39],[1423,38,1000,40],[1423,39,1000,41],[1423,41,1000,43,"helpers_1"],[1423,50,1000,52],[1423,51,1000,53,"getItemAsync"],[1423,63,1000,65],[1423,65,1000,67],[1423,69,1000,71],[1423,70,1000,72,"storage"],[1423,77,1000,79],[1423,79,1000,81],[1423,83,1000,85],[1423,84,1000,86,"storageKey"],[1423,94,1000,96],[1423,95,1000,97],[1424,12,1001,12],[1424,16,1001,16],[1424,17,1001,17,"_debug"],[1424,23,1001,23],[1424,24,1001,24],[1424,39,1001,39],[1424,41,1001,41],[1424,63,1001,63],[1424,65,1001,65,"maybeSession"],[1424,77,1001,77],[1424,78,1001,78],[1425,12,1002,12],[1425,16,1002,16,"maybeSession"],[1425,28,1002,28],[1425,33,1002,33],[1425,37,1002,37],[1425,39,1002,39],[1426,14,1003,16],[1426,18,1003,20],[1426,22,1003,24],[1426,23,1003,25,"_isValidSession"],[1426,38,1003,40],[1426,39,1003,41,"maybeSession"],[1426,51,1003,53],[1426,52,1003,54],[1426,54,1003,56],[1427,16,1004,20,"currentSession"],[1427,30,1004,34],[1427,33,1004,37,"maybeSession"],[1427,45,1004,49],[1428,14,1005,16],[1428,15,1005,17],[1428,21,1006,21],[1429,16,1007,20],[1429,20,1007,24],[1429,21,1007,25,"_debug"],[1429,27,1007,31],[1429,28,1007,32],[1429,43,1007,47],[1429,45,1007,49],[1429,80,1007,84],[1429,81,1007,85],[1430,16,1008,20],[1430,22,1008,26],[1430,26,1008,30],[1430,27,1008,31,"_removeSession"],[1430,41,1008,45],[1430,42,1008,46],[1430,43,1008,47],[1431,14,1009,16],[1432,12,1010,12],[1433,12,1011,12],[1433,16,1011,16],[1433,17,1011,17,"currentSession"],[1433,31,1011,31],[1433,33,1011,33],[1434,14,1012,16],[1434,21,1012,23],[1435,16,1012,25,"data"],[1435,20,1012,29],[1435,22,1012,31],[1436,18,1012,33,"session"],[1436,25,1012,40],[1436,27,1012,42],[1437,16,1012,47],[1437,17,1012,48],[1438,16,1012,50,"error"],[1438,21,1012,55],[1438,23,1012,57],[1439,14,1012,62],[1439,15,1012,63],[1440,12,1013,12],[1441,12,1014,12],[1442,12,1015,12],[1443,12,1016,12],[1444,12,1017,12],[1445,12,1018,12],[1446,12,1019,12],[1446,16,1019,18,"hasExpired"],[1446,26,1019,28],[1446,29,1019,31,"currentSession"],[1446,43,1019,45],[1446,44,1019,46,"expires_at"],[1446,54,1019,56],[1446,57,1020,18,"currentSession"],[1446,71,1020,32],[1446,72,1020,33,"expires_at"],[1446,82,1020,43],[1446,85,1020,46],[1446,89,1020,50],[1446,92,1020,53,"Date"],[1446,96,1020,57],[1446,97,1020,58,"now"],[1446,100,1020,61],[1446,101,1020,62],[1446,102,1020,63],[1446,105,1020,66,"constants_1"],[1446,116,1020,77],[1446,117,1020,78,"EXPIRY_MARGIN_MS"],[1446,133,1020,94],[1446,136,1021,18],[1446,141,1021,23],[1447,12,1022,12],[1447,16,1022,16],[1447,17,1022,17,"_debug"],[1447,23,1022,23],[1447,24,1022,24],[1447,42,1022,42],[1447,44,1022,44],[1447,58,1022,58,"hasExpired"],[1447,68,1022,68],[1447,71,1022,71],[1447,73,1022,73],[1447,76,1022,76],[1447,82,1022,82],[1447,92,1022,92],[1447,94,1022,94],[1447,106,1022,106],[1447,108,1022,108,"currentSession"],[1447,122,1022,122],[1447,123,1022,123,"expires_at"],[1447,133,1022,133],[1447,134,1022,134],[1448,12,1023,12],[1448,16,1023,16],[1448,17,1023,17,"hasExpired"],[1448,27,1023,27],[1448,29,1023,29],[1449,14,1024,16],[1449,18,1024,20],[1449,22,1024,24],[1449,23,1024,25,"userStorage"],[1449,34,1024,36],[1449,36,1024,38],[1450,16,1025,20],[1450,20,1025,26,"maybeUser"],[1450,29,1025,35],[1450,38,1025,45],[1450,39,1025,46],[1450,40,1025,47],[1450,42,1025,49,"helpers_1"],[1450,51,1025,58],[1450,52,1025,59,"getItemAsync"],[1450,64,1025,71],[1450,66,1025,73],[1450,70,1025,77],[1450,71,1025,78,"userStorage"],[1450,82,1025,89],[1450,84,1025,91],[1450,88,1025,95],[1450,89,1025,96,"storageKey"],[1450,99,1025,106],[1450,102,1025,109],[1450,109,1025,116],[1450,110,1025,118],[1451,16,1026,20],[1451,20,1026,24,"maybeUser"],[1451,29,1026,33],[1451,34,1026,38],[1451,38,1026,42],[1451,42,1026,46,"maybeUser"],[1451,51,1026,55],[1451,56,1026,55,"undefined"],[1451,65,1026,66],[1451,68,1026,66,"undefined"],[1451,77,1026,66],[1451,80,1026,78,"maybeUser"],[1451,89,1026,87],[1451,90,1026,88,"user"],[1451,94,1026,92],[1451,96,1026,94],[1452,18,1027,24,"currentSession"],[1452,32,1027,38],[1452,33,1027,39,"user"],[1452,37,1027,43],[1452,40,1027,46,"maybeUser"],[1452,49,1027,55],[1452,50,1027,56,"user"],[1452,54,1027,60],[1453,16,1028,20],[1453,17,1028,21],[1453,23,1029,25],[1454,18,1030,24,"currentSession"],[1454,32,1030,38],[1454,33,1030,39,"user"],[1454,37,1030,43],[1454,40,1030,46],[1454,41,1030,47],[1454,42,1030,48],[1454,44,1030,50,"helpers_1"],[1454,53,1030,59],[1454,54,1030,60,"userNotAvailableProxy"],[1454,75,1030,81],[1454,77,1030,83],[1454,78,1030,84],[1455,16,1031,20],[1456,14,1032,16],[1457,14,1033,16],[1457,18,1033,20],[1457,22,1033,24],[1457,23,1033,25,"storage"],[1457,30,1033,32],[1457,31,1033,33,"isServer"],[1457,39,1033,41],[1457,43,1033,45,"currentSession"],[1457,57,1033,59],[1457,58,1033,60,"user"],[1457,62,1033,64],[1457,64,1033,66],[1458,16,1034,20],[1458,20,1034,24,"suppressWarning"],[1458,35,1034,39],[1458,38,1034,42],[1458,42,1034,46],[1458,43,1034,47,"suppressGetSessionWarning"],[1458,68,1034,72],[1459,16,1035,20],[1459,20,1035,26,"proxySession"],[1459,32,1035,38],[1459,35,1035,41],[1459,39,1035,45,"Proxy"],[1459,44,1035,50],[1459,45,1035,51,"currentSession"],[1459,59,1035,65],[1459,61,1035,67],[1460,18,1036,24,"get"],[1460,21,1036,27],[1460,23,1036,29,"get"],[1460,24,1036,30,"target"],[1460,30,1036,36],[1460,32,1036,38,"prop"],[1460,36,1036,42],[1460,38,1036,44,"receiver"],[1460,46,1036,52],[1460,51,1036,57],[1461,20,1037,28],[1461,24,1037,32],[1461,25,1037,33,"suppressWarning"],[1461,40,1037,48],[1461,44,1037,52,"prop"],[1461,48,1037,56],[1461,53,1037,61],[1461,59,1037,67],[1461,61,1037,69],[1462,22,1038,32],[1464,22,1040,32,"suppressWarning"],[1464,37,1040,47],[1464,40,1040,50],[1464,44,1040,54],[1464,45,1040,55],[1464,46,1040,56],[1465,22,1041,32],[1465,26,1041,36],[1465,27,1041,37,"suppressGetSessionWarning"],[1465,52,1041,62],[1465,55,1041,65],[1465,59,1041,69],[1465,60,1041,70],[1465,61,1041,71],[1466,20,1042,28],[1467,20,1043,28],[1467,27,1043,35,"Reflect"],[1467,34,1043,42],[1467,35,1043,43,"get"],[1467,38,1043,46],[1467,39,1043,47,"target"],[1467,45,1043,53],[1467,47,1043,55,"prop"],[1467,51,1043,59],[1467,53,1043,61,"receiver"],[1467,61,1043,69],[1467,62,1043,70],[1468,18,1044,24],[1469,16,1045,20],[1469,17,1045,21],[1469,18,1045,22],[1470,16,1046,20,"currentSession"],[1470,30,1046,34],[1470,33,1046,37,"proxySession"],[1470,45,1046,49],[1471,14,1047,16],[1472,14,1048,16],[1472,21,1048,23],[1473,16,1048,25,"data"],[1473,20,1048,29],[1473,22,1048,31],[1474,18,1048,33,"session"],[1474,25,1048,40],[1474,27,1048,42,"currentSession"],[1475,16,1048,57],[1475,17,1048,58],[1476,16,1048,60,"error"],[1476,21,1048,65],[1476,23,1048,67],[1477,14,1048,72],[1477,15,1048,73],[1478,12,1049,12],[1479,12,1050,12],[1479,16,1050,12,"_yield$this$_callRefr"],[1479,37,1050,12],[1479,46,1050,45],[1479,50,1050,49],[1479,51,1050,50,"_callRefreshToken"],[1479,68,1050,67],[1479,69,1050,68,"currentSession"],[1479,83,1050,82],[1479,84,1050,83,"refresh_token"],[1479,97,1050,96],[1479,98,1050,97],[1480,14,1050,20,"session"],[1480,21,1050,27],[1480,24,1050,27,"_yield$this$_callRefr"],[1480,45,1050,27],[1480,46,1050,20,"session"],[1480,53,1050,27],[1481,14,1050,29,"error"],[1481,19,1050,34],[1481,22,1050,34,"_yield$this$_callRefr"],[1481,43,1050,34],[1481,44,1050,29,"error"],[1481,49,1050,34],[1482,12,1051,12],[1482,16,1051,16,"error"],[1482,21,1051,21],[1482,23,1051,23],[1483,14,1052,16],[1483,21,1052,23],[1484,16,1052,25,"data"],[1484,20,1052,29],[1484,22,1052,31],[1485,18,1052,33,"session"],[1485,25,1052,40],[1485,27,1052,42],[1486,16,1052,47],[1486,17,1052,48],[1487,16,1052,50,"error"],[1488,14,1052,56],[1488,15,1052,57],[1489,12,1053,12],[1490,12,1054,12],[1490,19,1054,19],[1491,14,1054,21,"data"],[1491,18,1054,25],[1491,20,1054,27],[1492,16,1054,29,"session"],[1493,14,1054,37],[1493,15,1054,38],[1494,14,1054,40,"error"],[1494,19,1054,45],[1494,21,1054,47],[1495,12,1054,52],[1495,13,1054,53],[1496,10,1055,8],[1496,11,1055,9],[1496,20,1056,16],[1497,12,1057,12],[1497,16,1057,16],[1497,17,1057,17,"_debug"],[1497,23,1057,23],[1497,24,1057,24],[1497,42,1057,42],[1497,44,1057,44],[1497,49,1057,49],[1497,50,1057,50],[1498,10,1058,8],[1499,8,1059,4],[1499,9,1059,5],[1500,8,1059,5],[1500,17,993,10,"__loadSession"],[1500,30,993,23,"__loadSession"],[1500,31,993,23],[1501,10,993,23],[1501,17,993,23,"_loadSession"],[1501,29,993,23],[1501,30,993,23,"apply"],[1501,35,993,23],[1501,42,993,23,"arguments"],[1501,51,993,23],[1502,8,993,23],[1503,8,993,23],[1503,15,993,10,"__loadSession"],[1503,28,993,23],[1504,6,993,23],[1505,6,1060,4],[1506,0,1061,0],[1507,0,1062,0],[1508,0,1063,0],[1509,0,1064,0],[1510,0,1065,0],[1511,0,1066,0],[1512,6,1060,4],[1513,4,1060,4],[1514,6,1060,4,"key"],[1514,9,1060,4],[1515,6,1060,4,"value"],[1515,11,1060,4],[1516,8,1060,4],[1516,12,1060,4,"_getUser2"],[1516,21,1060,4],[1516,24,1060,4,"_asyncToGenerator"],[1516,41,1060,4],[1516,42,1067,4],[1516,53,1067,18,"jwt"],[1516,56,1067,21],[1516,58,1067,23],[1517,10,1067,23],[1517,14,1067,23,"_this9"],[1517,20,1067,23],[1518,10,1068,8],[1518,14,1068,12,"jwt"],[1518,17,1068,15],[1518,19,1068,17],[1519,12,1069,12],[1519,25,1069,25],[1519,29,1069,29],[1519,30,1069,30,"_getUser"],[1519,38,1069,38],[1519,39,1069,39,"jwt"],[1519,42,1069,42],[1519,43,1069,43],[1520,10,1070,8],[1521,10,1071,8],[1521,16,1071,14],[1521,20,1071,18],[1521,21,1071,19,"initializePromise"],[1521,38,1071,36],[1522,10,1072,8],[1522,14,1072,14,"result"],[1522,20,1072,20],[1522,29,1072,29],[1522,33,1072,33],[1522,34,1072,34,"_acquireLock"],[1522,46,1072,46],[1522,64,1072,46,"_asyncToGenerator"],[1522,81,1072,46],[1522,82,1072,51],[1522,95,1072,63],[1523,12,1073,12],[1523,25,1073,25,"_this9"],[1523,31,1073,29],[1523,32,1073,30,"_getUser"],[1523,40,1073,38],[1523,41,1073,39],[1523,42,1073,40],[1524,10,1074,8],[1524,11,1074,9],[1524,13,1074,10],[1525,10,1075,8],[1525,17,1075,15,"result"],[1525,23,1075,21],[1526,8,1076,4],[1526,9,1076,5],[1527,8,1076,5],[1527,17,1067,10,"getUser"],[1527,24,1067,17,"getUser"],[1527,25,1067,17,"_x21"],[1527,29,1067,17],[1528,10,1067,17],[1528,17,1067,17,"_getUser2"],[1528,26,1067,17],[1528,27,1067,17,"apply"],[1528,32,1067,17],[1528,39,1067,17,"arguments"],[1528,48,1067,17],[1529,8,1067,17],[1530,8,1067,17],[1530,15,1067,10,"getUser"],[1530,22,1067,17],[1531,6,1067,17],[1532,4,1067,17],[1533,6,1067,17,"key"],[1533,9,1067,17],[1534,6,1067,17,"value"],[1534,11,1067,17],[1535,8,1067,17],[1535,12,1067,17,"_getUser3"],[1535,21,1067,17],[1535,24,1067,17,"_asyncToGenerator"],[1535,41,1067,17],[1535,42,1077,4],[1535,53,1077,19,"jwt"],[1535,56,1077,22],[1535,58,1077,24],[1536,10,1077,24],[1536,14,1077,24,"_this0"],[1536,20,1077,24],[1537,10,1078,8],[1537,14,1078,12],[1538,12,1079,12],[1538,16,1079,16,"jwt"],[1538,19,1079,19],[1538,21,1079,21],[1539,14,1080,16],[1539,27,1080,29],[1539,28,1080,30],[1539,29,1080,31],[1539,31,1080,33,"fetch_1"],[1539,38,1080,40],[1539,39,1080,41,"_request"],[1539,47,1080,49],[1539,49,1080,51],[1539,53,1080,55],[1539,54,1080,56,"fetch"],[1539,59,1080,61],[1539,61,1080,63],[1539,66,1080,68],[1539,68,1080,70],[1539,71,1080,73],[1539,75,1080,77],[1539,76,1080,78,"url"],[1539,79,1080,81],[1539,86,1080,88],[1539,88,1080,90],[1540,16,1081,20,"headers"],[1540,23,1081,27],[1540,25,1081,29],[1540,29,1081,33],[1540,30,1081,34,"headers"],[1540,37,1081,41],[1541,16,1082,20,"jwt"],[1541,19,1082,23],[1541,21,1082,25,"jwt"],[1541,24,1082,28],[1542,16,1083,20,"xform"],[1542,21,1083,25],[1542,23,1083,27,"fetch_1"],[1542,30,1083,34],[1542,31,1083,35,"_userResponse"],[1543,14,1084,16],[1543,15,1084,17],[1543,16,1084,18],[1544,12,1085,12],[1545,12,1086,12],[1545,25,1086,25],[1545,29,1086,29],[1545,30,1086,30,"_useSession"],[1545,41,1086,41],[1546,14,1086,41],[1546,18,1086,41,"_ref13"],[1546,24,1086,41],[1546,27,1086,41,"_asyncToGenerator"],[1546,44,1086,41],[1546,45,1086,42],[1546,56,1086,49,"result"],[1546,62,1086,55],[1546,64,1086,60],[1547,16,1087,16],[1547,20,1087,20,"_a"],[1547,22,1087,22],[1547,24,1087,24,"_b"],[1547,26,1087,26],[1547,28,1087,28,"_c"],[1547,30,1087,30],[1548,16,1088,16],[1548,20,1088,24,"data"],[1548,24,1088,28],[1548,27,1088,40,"result"],[1548,33,1088,46],[1548,34,1088,24,"data"],[1548,38,1088,28],[1549,18,1088,30,"error"],[1549,23,1088,35],[1549,26,1088,40,"result"],[1549,32,1088,46],[1549,33,1088,30,"error"],[1549,38,1088,35],[1550,16,1089,16],[1550,20,1089,20,"error"],[1550,25,1089,25],[1550,27,1089,27],[1551,18,1090,20],[1551,24,1090,26,"error"],[1551,29,1090,31],[1552,16,1091,16],[1553,16,1092,16],[1554,16,1093,16],[1554,20,1093,20],[1554,22,1093,22],[1554,23,1093,23,"_a"],[1554,25,1093,25],[1554,28,1093,28,"data"],[1554,32,1093,32],[1554,33,1093,33,"session"],[1554,40,1093,40],[1554,46,1093,46],[1554,50,1093,50],[1554,54,1093,54,"_a"],[1554,56,1093,56],[1554,61,1093,56,"undefined"],[1554,70,1093,67],[1554,73,1093,67,"undefined"],[1554,82,1093,67],[1554,85,1093,79,"_a"],[1554,87,1093,81],[1554,88,1093,82,"access_token"],[1554,100,1093,94],[1554,101,1093,95],[1554,105,1093,99],[1554,106,1093,100,"_this0"],[1554,112,1093,104],[1554,113,1093,105,"hasCustomAuthorizationHeader"],[1554,141,1093,133],[1554,143,1093,135],[1555,18,1094,20],[1555,25,1094,27],[1556,20,1094,29,"data"],[1556,24,1094,33],[1556,26,1094,35],[1557,22,1094,37,"user"],[1557,26,1094,41],[1557,28,1094,43],[1558,20,1094,48],[1558,21,1094,49],[1559,20,1094,51,"error"],[1559,25,1094,56],[1559,27,1094,58],[1559,31,1094,62,"errors_1"],[1559,39,1094,70],[1559,40,1094,71,"AuthSessionMissingError"],[1559,63,1094,94],[1559,64,1094,95],[1560,18,1094,97],[1560,19,1094,98],[1561,16,1095,16],[1562,16,1096,16],[1562,29,1096,29],[1562,30,1096,30],[1562,31,1096,31],[1562,33,1096,33,"fetch_1"],[1562,40,1096,40],[1562,41,1096,41,"_request"],[1562,49,1096,49],[1562,51,1096,51,"_this0"],[1562,57,1096,55],[1562,58,1096,56,"fetch"],[1562,63,1096,61],[1562,65,1096,63],[1562,70,1096,68],[1562,72,1096,70],[1562,75,1096,73,"_this0"],[1562,81,1096,77],[1562,82,1096,78,"url"],[1562,85,1096,81],[1562,92,1096,88],[1562,94,1096,90],[1563,18,1097,20,"headers"],[1563,25,1097,27],[1563,27,1097,29,"_this0"],[1563,33,1097,33],[1563,34,1097,34,"headers"],[1563,41,1097,41],[1564,18,1098,20,"jwt"],[1564,21,1098,23],[1564,23,1098,25],[1564,24,1098,26,"_c"],[1564,26,1098,28],[1564,29,1098,31],[1564,30,1098,32,"_b"],[1564,32,1098,34],[1564,35,1098,37,"data"],[1564,39,1098,41],[1564,40,1098,42,"session"],[1564,47,1098,49],[1564,53,1098,55],[1564,57,1098,59],[1564,61,1098,63,"_b"],[1564,63,1098,65],[1564,68,1098,65,"undefined"],[1564,77,1098,76],[1564,80,1098,76,"undefined"],[1564,89,1098,76],[1564,92,1098,88,"_b"],[1564,94,1098,90],[1564,95,1098,91,"access_token"],[1564,107,1098,103],[1564,113,1098,109],[1564,117,1098,113],[1564,121,1098,117,"_c"],[1564,123,1098,119],[1564,128,1098,119,"undefined"],[1564,137,1098,130],[1564,140,1098,133,"_c"],[1564,142,1098,135],[1564,145,1098,138,"undefined"],[1564,154,1098,147],[1565,18,1099,20,"xform"],[1565,23,1099,25],[1565,25,1099,27,"fetch_1"],[1565,32,1099,34],[1565,33,1099,35,"_userResponse"],[1566,16,1100,16],[1566,17,1100,17],[1566,18,1100,18],[1567,14,1101,12],[1567,15,1101,13],[1568,14,1101,13],[1568,31,1101,13,"_x23"],[1568,35,1101,13],[1569,16,1101,13],[1569,23,1101,13,"_ref13"],[1569,29,1101,13],[1569,30,1101,13,"apply"],[1569,35,1101,13],[1569,42,1101,13,"arguments"],[1569,51,1101,13],[1570,14,1101,13],[1571,12,1101,13],[1571,16,1101,14],[1572,10,1102,8],[1572,11,1102,9],[1572,12,1103,8],[1572,19,1103,15,"error"],[1572,24,1103,20],[1572,26,1103,22],[1573,12,1104,12],[1573,16,1104,16],[1573,17,1104,17],[1573,18,1104,18],[1573,20,1104,20,"errors_1"],[1573,28,1104,28],[1573,29,1104,29,"isAuthError"],[1573,40,1104,40],[1573,42,1104,42,"error"],[1573,47,1104,47],[1573,48,1104,48],[1573,50,1104,50],[1574,14,1105,16],[1574,18,1105,20],[1574,19,1105,21],[1574,20,1105,22],[1574,22,1105,24,"errors_1"],[1574,30,1105,32],[1574,31,1105,33,"isAuthSessionMissingError"],[1574,56,1105,58],[1574,58,1105,60,"error"],[1574,63,1105,65],[1574,64,1105,66],[1574,66,1105,68],[1575,16,1106,20],[1576,16,1107,20],[1577,16,1108,20],[1577,22,1108,26],[1577,26,1108,30],[1577,27,1108,31,"_removeSession"],[1577,41,1108,45],[1577,42,1108,46],[1577,43,1108,47],[1578,16,1109,20],[1578,22,1109,26],[1578,23,1109,27],[1578,24,1109,28],[1578,26,1109,30,"helpers_1"],[1578,35,1109,39],[1578,36,1109,40,"removeItemAsync"],[1578,51,1109,55],[1578,53,1109,57],[1578,57,1109,61],[1578,58,1109,62,"storage"],[1578,65,1109,69],[1578,67,1109,71],[1578,70,1109,74],[1578,74,1109,78],[1578,75,1109,79,"storageKey"],[1578,85,1109,89],[1578,101,1109,105],[1578,102,1109,106],[1579,14,1110,16],[1580,14,1111,16],[1580,21,1111,23],[1581,16,1111,25,"data"],[1581,20,1111,29],[1581,22,1111,31],[1582,18,1111,33,"user"],[1582,22,1111,37],[1582,24,1111,39],[1583,16,1111,44],[1583,17,1111,45],[1584,16,1111,47,"error"],[1585,14,1111,53],[1585,15,1111,54],[1586,12,1112,12],[1587,12,1113,12],[1587,18,1113,18,"error"],[1587,23,1113,23],[1588,10,1114,8],[1589,8,1115,4],[1589,9,1115,5],[1590,8,1115,5],[1590,17,1077,10,"_getUser"],[1590,25,1077,18,"_getUser"],[1590,26,1077,18,"_x22"],[1590,30,1077,18],[1591,10,1077,18],[1591,17,1077,18,"_getUser3"],[1591,26,1077,18],[1591,27,1077,18,"apply"],[1591,32,1077,18],[1591,39,1077,18,"arguments"],[1591,48,1077,18],[1592,8,1077,18],[1593,8,1077,18],[1593,15,1077,10,"_getUser"],[1593,23,1077,18],[1594,6,1077,18],[1595,6,1116,4],[1596,0,1117,0],[1597,0,1118,0],[1598,4,1116,4],[1599,6,1116,4,"key"],[1599,9,1116,4],[1600,6,1116,4,"value"],[1600,11,1116,4],[1601,8,1116,4],[1601,12,1116,4,"_updateUser2"],[1601,24,1116,4],[1601,27,1116,4,"_asyncToGenerator"],[1601,44,1116,4],[1601,45,1119,4],[1601,56,1119,21,"attributes"],[1601,66,1119,31],[1601,68,1119,47],[1602,10,1119,47],[1602,14,1119,47,"_this1"],[1602,20,1119,47],[1603,10,1119,47],[1603,14,1119,33,"options"],[1603,21,1119,40],[1603,24,1119,40,"arguments"],[1603,33,1119,40],[1603,34,1119,40,"length"],[1603,40,1119,40],[1603,48,1119,40,"arguments"],[1603,57,1119,40],[1603,65,1119,40,"undefined"],[1603,74,1119,40],[1603,77,1119,40,"arguments"],[1603,86,1119,40],[1603,92,1119,43],[1603,93,1119,44],[1603,94,1119,45],[1604,10,1120,8],[1604,16,1120,14],[1604,20,1120,18],[1604,21,1120,19,"initializePromise"],[1604,38,1120,36],[1605,10,1121,8],[1605,23,1121,21],[1605,27,1121,25],[1605,28,1121,26,"_acquireLock"],[1605,40,1121,38],[1605,58,1121,38,"_asyncToGenerator"],[1605,75,1121,38],[1605,76,1121,43],[1605,89,1121,55],[1606,12,1122,12],[1606,25,1122,25,"_this1"],[1606,31,1122,29],[1606,32,1122,30,"_updateUser"],[1606,43,1122,41],[1606,44,1122,42,"attributes"],[1606,54,1122,52],[1606,56,1122,54,"options"],[1606,63,1122,61],[1606,64,1122,62],[1607,10,1123,8],[1607,11,1123,9],[1607,13,1123,10],[1608,8,1124,4],[1608,9,1124,5],[1609,8,1124,5],[1609,17,1119,10,"updateUser"],[1609,27,1119,20,"updateUser"],[1609,28,1119,20,"_x24"],[1609,32,1119,20],[1610,10,1119,20],[1610,17,1119,20,"_updateUser2"],[1610,29,1119,20],[1610,30,1119,20,"apply"],[1610,35,1119,20],[1610,42,1119,20,"arguments"],[1610,51,1119,20],[1611,8,1119,20],[1612,8,1119,20],[1612,15,1119,10,"updateUser"],[1612,25,1119,20],[1613,6,1119,20],[1614,4,1119,20],[1615,6,1119,20,"key"],[1615,9,1119,20],[1616,6,1119,20,"value"],[1616,11,1119,20],[1617,8,1119,20],[1617,12,1119,20,"_updateUser3"],[1617,24,1119,20],[1617,27,1119,20,"_asyncToGenerator"],[1617,44,1119,20],[1617,45,1125,4],[1617,56,1125,22,"attributes"],[1617,66,1125,32],[1617,68,1125,48],[1618,10,1125,48],[1618,14,1125,48,"_this10"],[1618,21,1125,48],[1619,10,1125,48],[1619,14,1125,34,"options"],[1619,21,1125,41],[1619,24,1125,41,"arguments"],[1619,33,1125,41],[1619,34,1125,41,"length"],[1619,40,1125,41],[1619,48,1125,41,"arguments"],[1619,57,1125,41],[1619,65,1125,41,"undefined"],[1619,74,1125,41],[1619,77,1125,41,"arguments"],[1619,86,1125,41],[1619,92,1125,44],[1619,93,1125,45],[1619,94,1125,46],[1620,10,1126,8],[1620,14,1126,12],[1621,12,1127,12],[1621,25,1127,25],[1621,29,1127,29],[1621,30,1127,30,"_useSession"],[1621,41,1127,41],[1622,14,1127,41],[1622,18,1127,41,"_ref15"],[1622,24,1127,41],[1622,27,1127,41,"_asyncToGenerator"],[1622,44,1127,41],[1622,45,1127,42],[1622,56,1127,49,"result"],[1622,62,1127,55],[1622,64,1127,60],[1623,16,1128,16],[1623,20,1128,30,"sessionData"],[1623,31,1128,41],[1623,34,1128,67,"result"],[1623,40,1128,73],[1623,41,1128,24,"data"],[1623,45,1128,28],[1624,18,1128,50,"sessionError"],[1624,30,1128,62],[1624,33,1128,67,"result"],[1624,39,1128,73],[1624,40,1128,43,"error"],[1624,45,1128,48],[1625,16,1129,16],[1625,20,1129,20,"sessionError"],[1625,32,1129,32],[1625,34,1129,34],[1626,18,1130,20],[1626,24,1130,26,"sessionError"],[1626,36,1130,38],[1627,16,1131,16],[1628,16,1132,16],[1628,20,1132,20],[1628,21,1132,21,"sessionData"],[1628,32,1132,32],[1628,33,1132,33,"session"],[1628,40,1132,40],[1628,42,1132,42],[1629,18,1133,20],[1629,24,1133,26],[1629,28,1133,30,"errors_1"],[1629,36,1133,38],[1629,37,1133,39,"AuthSessionMissingError"],[1629,60,1133,62],[1629,61,1133,63],[1629,62,1133,64],[1630,16,1134,16],[1631,16,1135,16],[1631,20,1135,22,"session"],[1631,27,1135,29],[1631,30,1135,32,"sessionData"],[1631,41,1135,43],[1631,42,1135,44,"session"],[1631,49,1135,51],[1632,16,1136,16],[1632,20,1136,20,"codeChallenge"],[1632,33,1136,33],[1632,36,1136,36],[1632,40,1136,40],[1633,16,1137,16],[1633,20,1137,20,"codeChallengeMethod"],[1633,39,1137,39],[1633,42,1137,42],[1633,46,1137,46],[1634,16,1138,16],[1634,20,1138,20,"_this10"],[1634,27,1138,24],[1634,28,1138,25,"flowType"],[1634,36,1138,33],[1634,41,1138,38],[1634,47,1138,44],[1634,51,1138,48,"attributes"],[1634,61,1138,58],[1634,62,1138,59,"email"],[1634,67,1138,64],[1634,71,1138,68],[1634,75,1138,72],[1634,77,1138,74],[1635,18,1139,20],[1636,18,1139,21],[1636,22,1139,21,"_yield13"],[1636,30,1139,21],[1636,39,1140,65],[1636,40,1140,66],[1636,41,1140,67],[1636,43,1140,69,"helpers_1"],[1636,52,1140,78],[1636,53,1140,79,"getCodeChallengeAndMethod"],[1636,78,1140,104],[1636,80,1140,106,"_this10"],[1636,87,1140,110],[1636,88,1140,111,"storage"],[1636,95,1140,118],[1636,97,1140,120,"_this10"],[1636,104,1140,124],[1636,105,1140,125,"storageKey"],[1636,115,1140,135],[1636,116,1140,136],[1637,18,1140,136],[1637,22,1140,136,"_yield14"],[1637,30,1140,136],[1637,33,1140,136,"_slicedToArray"],[1637,47,1140,136],[1637,48,1140,136,"_yield13"],[1637,56,1140,136],[1638,18,1140,21,"codeChallenge"],[1638,31,1140,34],[1638,34,1140,34,"_yield14"],[1638,42,1140,34],[1639,18,1140,36,"codeChallengeMethod"],[1639,37,1140,55],[1639,40,1140,55,"_yield14"],[1639,48,1140,55],[1640,16,1141,16],[1641,16,1142,16],[1641,20,1142,16,"_yield15"],[1641,28,1142,16],[1641,37,1142,57],[1641,38,1142,58],[1641,39,1142,59],[1641,41,1142,61,"fetch_1"],[1641,48,1142,68],[1641,49,1142,69,"_request"],[1641,57,1142,77],[1641,59,1142,79,"_this10"],[1641,66,1142,83],[1641,67,1142,84,"fetch"],[1641,72,1142,89],[1641,74,1142,91],[1641,79,1142,96],[1641,81,1142,98],[1641,84,1142,101,"_this10"],[1641,91,1142,105],[1641,92,1142,106,"url"],[1641,95,1142,109],[1641,102,1142,116],[1641,104,1142,118],[1642,20,1143,20,"headers"],[1642,27,1143,27],[1642,29,1143,29,"_this10"],[1642,36,1143,33],[1642,37,1143,34,"headers"],[1642,44,1143,41],[1643,20,1144,20,"redirectTo"],[1643,30,1144,30],[1643,32,1144,32,"options"],[1643,39,1144,39],[1643,44,1144,44],[1643,48,1144,48],[1643,52,1144,52,"options"],[1643,59,1144,59],[1643,64,1144,59,"undefined"],[1643,73,1144,70],[1643,76,1144,70,"undefined"],[1643,85,1144,70],[1643,88,1144,82,"options"],[1643,95,1144,89],[1643,96,1144,90,"emailRedirectTo"],[1643,111,1144,105],[1644,20,1145,20,"body"],[1644,24,1145,24],[1644,26,1145,26,"Object"],[1644,32,1145,32],[1644,33,1145,33,"assign"],[1644,39,1145,39],[1644,40,1145,40,"Object"],[1644,46,1145,46],[1644,47,1145,47,"assign"],[1644,53,1145,53],[1644,54,1145,54],[1644,55,1145,55],[1644,56,1145,56],[1644,58,1145,58,"attributes"],[1644,68,1145,68],[1644,69,1145,69],[1644,71,1145,71],[1645,22,1145,73,"code_challenge"],[1645,36,1145,87],[1645,38,1145,89,"codeChallenge"],[1645,51,1145,102],[1646,22,1145,104,"code_challenge_method"],[1646,43,1145,125],[1646,45,1145,127,"codeChallengeMethod"],[1647,20,1145,147],[1647,21,1145,148],[1647,22,1145,149],[1648,20,1146,20,"jwt"],[1648,23,1146,23],[1648,25,1146,25,"session"],[1648,32,1146,32],[1648,33,1146,33,"access_token"],[1648,45,1146,45],[1649,20,1147,20,"xform"],[1649,25,1147,25],[1649,27,1147,27,"fetch_1"],[1649,34,1147,34],[1649,35,1147,35,"_userResponse"],[1650,18,1148,16],[1650,19,1148,17],[1650,20,1148,18],[1651,18,1142,24,"data"],[1651,22,1142,28],[1651,25,1142,28,"_yield15"],[1651,33,1142,28],[1651,34,1142,24,"data"],[1651,38,1142,28],[1652,18,1142,37,"userError"],[1652,27,1142,46],[1652,30,1142,46,"_yield15"],[1652,38,1142,46],[1652,39,1142,30,"error"],[1652,44,1142,35],[1653,16,1149,16],[1653,20,1149,20,"userError"],[1653,29,1149,29],[1653,31,1150,20],[1653,37,1150,26,"userError"],[1653,46,1150,35],[1654,16,1151,16,"session"],[1654,23,1151,23],[1654,24,1151,24,"user"],[1654,28,1151,28],[1654,31,1151,31,"data"],[1654,35,1151,35],[1654,36,1151,36,"user"],[1654,40,1151,40],[1655,16,1152,16],[1655,22,1152,22,"_this10"],[1655,29,1152,26],[1655,30,1152,27,"_saveSession"],[1655,42,1152,39],[1655,43,1152,40,"session"],[1655,50,1152,47],[1655,51,1152,48],[1656,16,1153,16],[1656,22,1153,22,"_this10"],[1656,29,1153,26],[1656,30,1153,27,"_notifyAllSubscribers"],[1656,51,1153,48],[1656,52,1153,49],[1656,66,1153,63],[1656,68,1153,65,"session"],[1656,75,1153,72],[1656,76,1153,73],[1657,16,1154,16],[1657,23,1154,23],[1658,18,1154,25,"data"],[1658,22,1154,29],[1658,24,1154,31],[1659,20,1154,33,"user"],[1659,24,1154,37],[1659,26,1154,39,"session"],[1659,33,1154,46],[1659,34,1154,47,"user"],[1660,18,1154,52],[1660,19,1154,53],[1661,18,1154,55,"error"],[1661,23,1154,60],[1661,25,1154,62],[1662,16,1154,67],[1662,17,1154,68],[1663,14,1155,12],[1663,15,1155,13],[1664,14,1155,13],[1664,31,1155,13,"_x26"],[1664,35,1155,13],[1665,16,1155,13],[1665,23,1155,13,"_ref15"],[1665,29,1155,13],[1665,30,1155,13,"apply"],[1665,35,1155,13],[1665,42,1155,13,"arguments"],[1665,51,1155,13],[1666,14,1155,13],[1667,12,1155,13],[1667,16,1155,14],[1668,10,1156,8],[1668,11,1156,9],[1668,12,1157,8],[1668,19,1157,15,"error"],[1668,24,1157,20],[1668,26,1157,22],[1669,12,1158,12],[1669,16,1158,16],[1669,17,1158,17],[1669,18,1158,18],[1669,20,1158,20,"errors_1"],[1669,28,1158,28],[1669,29,1158,29,"isAuthError"],[1669,40,1158,40],[1669,42,1158,42,"error"],[1669,47,1158,47],[1669,48,1158,48],[1669,50,1158,50],[1670,14,1159,16],[1670,21,1159,23],[1671,16,1159,25,"data"],[1671,20,1159,29],[1671,22,1159,31],[1672,18,1159,33,"user"],[1672,22,1159,37],[1672,24,1159,39],[1673,16,1159,44],[1673,17,1159,45],[1674,16,1159,47,"error"],[1675,14,1159,53],[1675,15,1159,54],[1676,12,1160,12],[1677,12,1161,12],[1677,18,1161,18,"error"],[1677,23,1161,23],[1678,10,1162,8],[1679,8,1163,4],[1679,9,1163,5],[1680,8,1163,5],[1680,17,1125,10,"_updateUser"],[1680,28,1125,21,"_updateUser"],[1680,29,1125,21,"_x25"],[1680,33,1125,21],[1681,10,1125,21],[1681,17,1125,21,"_updateUser3"],[1681,29,1125,21],[1681,30,1125,21,"apply"],[1681,35,1125,21],[1681,42,1125,21,"arguments"],[1681,51,1125,21],[1682,8,1125,21],[1683,8,1125,21],[1683,15,1125,10,"_updateUser"],[1683,26,1125,21],[1684,6,1125,21],[1685,6,1164,4],[1686,0,1165,0],[1687,0,1166,0],[1688,0,1167,0],[1689,0,1168,0],[1690,4,1164,4],[1691,6,1164,4,"key"],[1691,9,1164,4],[1692,6,1164,4,"value"],[1692,11,1164,4],[1693,8,1164,4],[1693,12,1164,4,"_setSession2"],[1693,24,1164,4],[1693,27,1164,4,"_asyncToGenerator"],[1693,44,1164,4],[1693,45,1169,4],[1693,56,1169,21,"currentSession"],[1693,70,1169,35],[1693,72,1169,37],[1694,10,1169,37],[1694,14,1169,37,"_this11"],[1694,21,1169,37],[1695,10,1170,8],[1695,16,1170,14],[1695,20,1170,18],[1695,21,1170,19,"initializePromise"],[1695,38,1170,36],[1696,10,1171,8],[1696,23,1171,21],[1696,27,1171,25],[1696,28,1171,26,"_acquireLock"],[1696,40,1171,38],[1696,58,1171,38,"_asyncToGenerator"],[1696,75,1171,38],[1696,76,1171,43],[1696,89,1171,55],[1697,12,1172,12],[1697,25,1172,25,"_this11"],[1697,32,1172,29],[1697,33,1172,30,"_setSession"],[1697,44,1172,41],[1697,45,1172,42,"currentSession"],[1697,59,1172,56],[1697,60,1172,57],[1698,10,1173,8],[1698,11,1173,9],[1698,13,1173,10],[1699,8,1174,4],[1699,9,1174,5],[1700,8,1174,5],[1700,17,1169,10,"setSession"],[1700,27,1169,20,"setSession"],[1700,28,1169,20,"_x27"],[1700,32,1169,20],[1701,10,1169,20],[1701,17,1169,20,"_setSession2"],[1701,29,1169,20],[1701,30,1169,20,"apply"],[1701,35,1169,20],[1701,42,1169,20,"arguments"],[1701,51,1169,20],[1702,8,1169,20],[1703,8,1169,20],[1703,15,1169,10,"setSession"],[1703,25,1169,20],[1704,6,1169,20],[1705,4,1169,20],[1706,6,1169,20,"key"],[1706,9,1169,20],[1707,6,1169,20,"value"],[1707,11,1169,20],[1708,8,1169,20],[1708,12,1169,20,"_setSession3"],[1708,24,1169,20],[1708,27,1169,20,"_asyncToGenerator"],[1708,44,1169,20],[1708,45,1175,4],[1708,56,1175,22,"currentSession"],[1708,70,1175,36],[1708,72,1175,38],[1709,10,1176,8],[1709,14,1176,12],[1710,12,1177,12],[1710,16,1177,16],[1710,17,1177,17,"currentSession"],[1710,31,1177,31],[1710,32,1177,32,"access_token"],[1710,44,1177,44],[1710,48,1177,48],[1710,49,1177,49,"currentSession"],[1710,63,1177,63],[1710,64,1177,64,"refresh_token"],[1710,77,1177,77],[1710,79,1177,79],[1711,14,1178,16],[1711,20,1178,22],[1711,24,1178,26,"errors_1"],[1711,32,1178,34],[1711,33,1178,35,"AuthSessionMissingError"],[1711,56,1178,58],[1711,57,1178,59],[1711,58,1178,60],[1712,12,1179,12],[1713,12,1180,12],[1713,16,1180,18,"timeNow"],[1713,23,1180,25],[1713,26,1180,28,"Date"],[1713,30,1180,32],[1713,31,1180,33,"now"],[1713,34,1180,36],[1713,35,1180,37],[1713,36,1180,38],[1713,39,1180,41],[1713,43,1180,45],[1714,12,1181,12],[1714,16,1181,16,"expiresAt"],[1714,25,1181,25],[1714,28,1181,28,"timeNow"],[1714,35,1181,35],[1715,12,1182,12],[1715,16,1182,16,"hasExpired"],[1715,26,1182,26],[1715,29,1182,29],[1715,33,1182,33],[1716,12,1183,12],[1716,16,1183,16,"session"],[1716,23,1183,23],[1716,26,1183,26],[1716,30,1183,30],[1717,12,1184,12],[1717,16,1184,12,"_ref17"],[1717,22,1184,12],[1717,25,1184,32],[1717,26,1184,33],[1717,27,1184,34],[1717,29,1184,36,"helpers_1"],[1717,38,1184,45],[1717,39,1184,46,"decodeJWT"],[1717,48,1184,55],[1717,50,1184,57,"currentSession"],[1717,64,1184,71],[1717,65,1184,72,"access_token"],[1717,77,1184,84],[1717,78,1184,85],[1718,14,1184,20,"payload"],[1718,21,1184,27],[1718,24,1184,27,"_ref17"],[1718,30,1184,27],[1718,31,1184,20,"payload"],[1718,38,1184,27],[1719,12,1185,12],[1719,16,1185,16,"payload"],[1719,23,1185,23],[1719,24,1185,24,"exp"],[1719,27,1185,27],[1719,29,1185,29],[1720,14,1186,16,"expiresAt"],[1720,23,1186,25],[1720,26,1186,28,"payload"],[1720,33,1186,35],[1720,34,1186,36,"exp"],[1720,37,1186,39],[1721,14,1187,16,"hasExpired"],[1721,24,1187,26],[1721,27,1187,29,"expiresAt"],[1721,36,1187,38],[1721,40,1187,42,"timeNow"],[1721,47,1187,49],[1722,12,1188,12],[1723,12,1189,12],[1723,16,1189,16,"hasExpired"],[1723,26,1189,26],[1723,28,1189,28],[1724,14,1190,16],[1724,18,1190,16,"_yield$this$_callRefr2"],[1724,40,1190,16],[1724,49,1190,67],[1724,53,1190,71],[1724,54,1190,72,"_callRefreshToken"],[1724,71,1190,89],[1724,72,1190,90,"currentSession"],[1724,86,1190,104],[1724,87,1190,105,"refresh_token"],[1724,100,1190,118],[1724,101,1190,119],[1725,16,1190,33,"refreshedSession"],[1725,32,1190,49],[1725,35,1190,49,"_yield$this$_callRefr2"],[1725,57,1190,49],[1725,58,1190,24,"session"],[1725,65,1190,31],[1726,16,1190,51,"error"],[1726,21,1190,56],[1726,24,1190,56,"_yield$this$_callRefr2"],[1726,46,1190,56],[1726,47,1190,51,"error"],[1726,52,1190,56],[1727,14,1191,16],[1727,18,1191,20,"error"],[1727,23,1191,25],[1727,25,1191,27],[1728,16,1192,20],[1728,23,1192,27],[1729,18,1192,29,"data"],[1729,22,1192,33],[1729,24,1192,35],[1730,20,1192,37,"user"],[1730,24,1192,41],[1730,26,1192,43],[1730,30,1192,47],[1731,20,1192,49,"session"],[1731,27,1192,56],[1731,29,1192,58],[1732,18,1192,63],[1732,19,1192,64],[1733,18,1192,66,"error"],[1733,23,1192,71],[1733,25,1192,73,"error"],[1734,16,1192,79],[1734,17,1192,80],[1735,14,1193,16],[1736,14,1194,16],[1736,18,1194,20],[1736,19,1194,21,"refreshedSession"],[1736,35,1194,37],[1736,37,1194,39],[1737,16,1195,20],[1737,23,1195,27],[1738,18,1195,29,"data"],[1738,22,1195,33],[1738,24,1195,35],[1739,20,1195,37,"user"],[1739,24,1195,41],[1739,26,1195,43],[1739,30,1195,47],[1740,20,1195,49,"session"],[1740,27,1195,56],[1740,29,1195,58],[1741,18,1195,63],[1741,19,1195,64],[1742,18,1195,66,"error"],[1742,23,1195,71],[1742,25,1195,73],[1743,16,1195,78],[1743,17,1195,79],[1744,14,1196,16],[1745,14,1197,16,"session"],[1745,21,1197,23],[1745,24,1197,26,"refreshedSession"],[1745,40,1197,42],[1746,12,1198,12],[1746,13,1198,13],[1746,19,1199,17],[1747,14,1200,16],[1747,18,1200,16,"_yield$this$_getUser"],[1747,38,1200,16],[1747,47,1200,46],[1747,51,1200,50],[1747,52,1200,51,"_getUser"],[1747,60,1200,59],[1747,61,1200,60,"currentSession"],[1747,75,1200,74],[1747,76,1200,75,"access_token"],[1747,88,1200,87],[1747,89,1200,88],[1748,16,1200,24,"data"],[1748,20,1200,28],[1748,23,1200,28,"_yield$this$_getUser"],[1748,43,1200,28],[1748,44,1200,24,"data"],[1748,48,1200,28],[1749,16,1200,30,"error"],[1749,23,1200,35],[1749,26,1200,35,"_yield$this$_getUser"],[1749,46,1200,35],[1749,47,1200,30,"error"],[1749,52,1200,35],[1750,14,1201,16],[1750,18,1201,20,"error"],[1750,25,1201,25],[1750,27,1201,27],[1751,16,1202,20],[1751,22,1202,26,"error"],[1751,29,1202,31],[1752,14,1203,16],[1753,14,1204,16,"session"],[1753,21,1204,23],[1753,24,1204,26],[1754,16,1205,20,"access_token"],[1754,28,1205,32],[1754,30,1205,34,"currentSession"],[1754,44,1205,48],[1754,45,1205,49,"access_token"],[1754,57,1205,61],[1755,16,1206,20,"refresh_token"],[1755,29,1206,33],[1755,31,1206,35,"currentSession"],[1755,45,1206,49],[1755,46,1206,50,"refresh_token"],[1755,59,1206,63],[1756,16,1207,20,"user"],[1756,20,1207,24],[1756,22,1207,26,"data"],[1756,26,1207,30],[1756,27,1207,31,"user"],[1756,31,1207,35],[1757,16,1208,20,"token_type"],[1757,26,1208,30],[1757,28,1208,32],[1757,36,1208,40],[1758,16,1209,20,"expires_in"],[1758,26,1209,30],[1758,28,1209,32,"expiresAt"],[1758,37,1209,41],[1758,40,1209,44,"timeNow"],[1758,47,1209,51],[1759,16,1210,20,"expires_at"],[1759,26,1210,30],[1759,28,1210,32,"expiresAt"],[1760,14,1211,16],[1760,15,1211,17],[1761,14,1212,16],[1761,20,1212,22],[1761,24,1212,26],[1761,25,1212,27,"_saveSession"],[1761,37,1212,39],[1761,38,1212,40,"session"],[1761,45,1212,47],[1761,46,1212,48],[1762,14,1213,16],[1762,20,1213,22],[1762,24,1213,26],[1762,25,1213,27,"_notifyAllSubscribers"],[1762,46,1213,48],[1762,47,1213,49],[1762,58,1213,60],[1762,60,1213,62,"session"],[1762,67,1213,69],[1762,68,1213,70],[1763,12,1214,12],[1764,12,1215,12],[1764,19,1215,19],[1765,14,1215,21,"data"],[1765,18,1215,25],[1765,20,1215,27],[1766,16,1215,29,"user"],[1766,20,1215,33],[1766,22,1215,35,"session"],[1766,29,1215,42],[1766,30,1215,43,"user"],[1766,34,1215,47],[1767,16,1215,49,"session"],[1768,14,1215,57],[1768,15,1215,58],[1769,14,1215,60,"error"],[1769,19,1215,65],[1769,21,1215,67],[1770,12,1215,72],[1770,13,1215,73],[1771,10,1216,8],[1771,11,1216,9],[1771,12,1217,8],[1771,19,1217,15,"error"],[1771,24,1217,20],[1771,26,1217,22],[1772,12,1218,12],[1772,16,1218,16],[1772,17,1218,17],[1772,18,1218,18],[1772,20,1218,20,"errors_1"],[1772,28,1218,28],[1772,29,1218,29,"isAuthError"],[1772,40,1218,40],[1772,42,1218,42,"error"],[1772,47,1218,47],[1772,48,1218,48],[1772,50,1218,50],[1773,14,1219,16],[1773,21,1219,23],[1774,16,1219,25,"data"],[1774,20,1219,29],[1774,22,1219,31],[1775,18,1219,33,"session"],[1775,25,1219,40],[1775,27,1219,42],[1775,31,1219,46],[1776,18,1219,48,"user"],[1776,22,1219,52],[1776,24,1219,54],[1777,16,1219,59],[1777,17,1219,60],[1778,16,1219,62,"error"],[1779,14,1219,68],[1779,15,1219,69],[1780,12,1220,12],[1781,12,1221,12],[1781,18,1221,18,"error"],[1781,23,1221,23],[1782,10,1222,8],[1783,8,1223,4],[1783,9,1223,5],[1784,8,1223,5],[1784,17,1175,10,"_setSession"],[1784,28,1175,21,"_setSession"],[1784,29,1175,21,"_x28"],[1784,33,1175,21],[1785,10,1175,21],[1785,17,1175,21,"_setSession3"],[1785,29,1175,21],[1785,30,1175,21,"apply"],[1785,35,1175,21],[1785,42,1175,21,"arguments"],[1785,51,1175,21],[1786,8,1175,21],[1787,8,1175,21],[1787,15,1175,10,"_setSession"],[1787,26,1175,21],[1788,6,1175,21],[1789,6,1224,4],[1790,0,1225,0],[1791,0,1226,0],[1792,0,1227,0],[1793,0,1228,0],[1794,0,1229,0],[1795,4,1224,4],[1796,6,1224,4,"key"],[1796,9,1224,4],[1797,6,1224,4,"value"],[1797,11,1224,4],[1798,8,1224,4],[1798,12,1224,4,"_refreshSession2"],[1798,28,1224,4],[1798,31,1224,4,"_asyncToGenerator"],[1798,48,1224,4],[1798,49,1230,4],[1798,60,1230,25,"currentSession"],[1798,74,1230,39],[1798,76,1230,41],[1799,10,1230,41],[1799,14,1230,41,"_this12"],[1799,21,1230,41],[1800,10,1231,8],[1800,16,1231,14],[1800,20,1231,18],[1800,21,1231,19,"initializePromise"],[1800,38,1231,36],[1801,10,1232,8],[1801,23,1232,21],[1801,27,1232,25],[1801,28,1232,26,"_acquireLock"],[1801,40,1232,38],[1801,58,1232,38,"_asyncToGenerator"],[1801,75,1232,38],[1801,76,1232,43],[1801,89,1232,55],[1802,12,1233,12],[1802,25,1233,25,"_this12"],[1802,32,1233,29],[1802,33,1233,30,"_refreshSession"],[1802,48,1233,45],[1802,49,1233,46,"currentSession"],[1802,63,1233,60],[1802,64,1233,61],[1803,10,1234,8],[1803,11,1234,9],[1803,13,1234,10],[1804,8,1235,4],[1804,9,1235,5],[1805,8,1235,5],[1805,17,1230,10,"refreshSession"],[1805,31,1230,24,"refreshSession"],[1805,32,1230,24,"_x29"],[1805,36,1230,24],[1806,10,1230,24],[1806,17,1230,24,"_refreshSession2"],[1806,33,1230,24],[1806,34,1230,24,"apply"],[1806,39,1230,24],[1806,46,1230,24,"arguments"],[1806,55,1230,24],[1807,8,1230,24],[1808,8,1230,24],[1808,15,1230,10,"refreshSession"],[1808,29,1230,24],[1809,6,1230,24],[1810,4,1230,24],[1811,6,1230,24,"key"],[1811,9,1230,24],[1812,6,1230,24,"value"],[1812,11,1230,24],[1813,8,1230,24],[1813,12,1230,24,"_refreshSession3"],[1813,28,1230,24],[1813,31,1230,24,"_asyncToGenerator"],[1813,48,1230,24],[1813,49,1236,4],[1813,60,1236,26,"currentSession"],[1813,74,1236,40],[1813,76,1236,42],[1814,10,1236,42],[1814,14,1236,42,"_this13"],[1814,21,1236,42],[1815,10,1237,8],[1815,14,1237,12],[1816,12,1238,12],[1816,25,1238,25],[1816,29,1238,29],[1816,30,1238,30,"_useSession"],[1816,41,1238,41],[1817,14,1238,41],[1817,18,1238,41,"_ref19"],[1817,24,1238,41],[1817,27,1238,41,"_asyncToGenerator"],[1817,44,1238,41],[1817,45,1238,42],[1817,56,1238,49,"result"],[1817,62,1238,55],[1817,64,1238,60],[1818,16,1239,16],[1818,20,1239,20,"_a"],[1818,22,1239,22],[1819,16,1240,16],[1819,20,1240,20],[1819,21,1240,21,"currentSession"],[1819,35,1240,35],[1819,37,1240,37],[1820,18,1241,20],[1820,22,1241,28,"data"],[1820,26,1241,32],[1820,29,1241,44,"result"],[1820,35,1241,50],[1820,36,1241,28,"data"],[1820,40,1241,32],[1821,20,1241,34,"error"],[1821,27,1241,39],[1821,30,1241,44,"result"],[1821,36,1241,50],[1821,37,1241,34,"error"],[1821,42,1241,39],[1822,18,1242,20],[1822,22,1242,24,"error"],[1822,29,1242,29],[1822,31,1242,31],[1823,20,1243,24],[1823,26,1243,30,"error"],[1823,33,1243,35],[1824,18,1244,20],[1825,18,1245,20,"currentSession"],[1825,32,1245,34],[1825,35,1245,37],[1825,36,1245,38,"_a"],[1825,38,1245,40],[1825,41,1245,43,"data"],[1825,45,1245,47],[1825,46,1245,48,"session"],[1825,53,1245,55],[1825,59,1245,61],[1825,63,1245,65],[1825,67,1245,69,"_a"],[1825,69,1245,71],[1825,74,1245,71,"undefined"],[1825,83,1245,82],[1825,86,1245,85,"_a"],[1825,88,1245,87],[1825,91,1245,90,"undefined"],[1825,100,1245,99],[1826,16,1246,16],[1827,16,1247,16],[1827,20,1247,20],[1827,22,1247,22,"currentSession"],[1827,36,1247,36],[1827,41,1247,41],[1827,45,1247,45],[1827,49,1247,49,"currentSession"],[1827,63,1247,63],[1827,68,1247,63,"undefined"],[1827,77,1247,74],[1827,80,1247,74,"undefined"],[1827,89,1247,74],[1827,92,1247,86,"currentSession"],[1827,106,1247,100],[1827,107,1247,101,"refresh_token"],[1827,120,1247,114],[1827,121,1247,115],[1827,123,1247,117],[1828,18,1248,20],[1828,24,1248,26],[1828,28,1248,30,"errors_1"],[1828,36,1248,38],[1828,37,1248,39,"AuthSessionMissingError"],[1828,60,1248,62],[1828,61,1248,63],[1828,62,1248,64],[1829,16,1249,16],[1830,16,1250,16],[1830,20,1250,16,"_yield$_this13$_callR"],[1830,41,1250,16],[1830,50,1250,49,"_this13"],[1830,57,1250,53],[1830,58,1250,54,"_callRefreshToken"],[1830,75,1250,71],[1830,76,1250,72,"currentSession"],[1830,90,1250,86],[1830,91,1250,87,"refresh_token"],[1830,104,1250,100],[1830,105,1250,101],[1831,18,1250,24,"session"],[1831,25,1250,31],[1831,28,1250,31,"_yield$_this13$_callR"],[1831,49,1250,31],[1831,50,1250,24,"session"],[1831,57,1250,31],[1832,18,1250,33,"error"],[1832,23,1250,38],[1832,26,1250,38,"_yield$_this13$_callR"],[1832,47,1250,38],[1832,48,1250,33,"error"],[1832,53,1250,38],[1833,16,1251,16],[1833,20,1251,20,"error"],[1833,25,1251,25],[1833,27,1251,27],[1834,18,1252,20],[1834,25,1252,27],[1835,20,1252,29,"data"],[1835,24,1252,33],[1835,26,1252,35],[1836,22,1252,37,"user"],[1836,26,1252,41],[1836,28,1252,43],[1836,32,1252,47],[1837,22,1252,49,"session"],[1837,29,1252,56],[1837,31,1252,58],[1838,20,1252,63],[1838,21,1252,64],[1839,20,1252,66,"error"],[1839,25,1252,71],[1839,27,1252,73,"error"],[1840,18,1252,79],[1840,19,1252,80],[1841,16,1253,16],[1842,16,1254,16],[1842,20,1254,20],[1842,21,1254,21,"session"],[1842,28,1254,28],[1842,30,1254,30],[1843,18,1255,20],[1843,25,1255,27],[1844,20,1255,29,"data"],[1844,24,1255,33],[1844,26,1255,35],[1845,22,1255,37,"user"],[1845,26,1255,41],[1845,28,1255,43],[1845,32,1255,47],[1846,22,1255,49,"session"],[1846,29,1255,56],[1846,31,1255,58],[1847,20,1255,63],[1847,21,1255,64],[1848,20,1255,66,"error"],[1848,25,1255,71],[1848,27,1255,73],[1849,18,1255,78],[1849,19,1255,79],[1850,16,1256,16],[1851,16,1257,16],[1851,23,1257,23],[1852,18,1257,25,"data"],[1852,22,1257,29],[1852,24,1257,31],[1853,20,1257,33,"user"],[1853,24,1257,37],[1853,26,1257,39,"session"],[1853,33,1257,46],[1853,34,1257,47,"user"],[1853,38,1257,51],[1854,20,1257,53,"session"],[1855,18,1257,61],[1855,19,1257,62],[1856,18,1257,64,"error"],[1856,23,1257,69],[1856,25,1257,71],[1857,16,1257,76],[1857,17,1257,77],[1858,14,1258,12],[1858,15,1258,13],[1859,14,1258,13],[1859,31,1258,13,"_x31"],[1859,35,1258,13],[1860,16,1258,13],[1860,23,1258,13,"_ref19"],[1860,29,1258,13],[1860,30,1258,13,"apply"],[1860,35,1258,13],[1860,42,1258,13,"arguments"],[1860,51,1258,13],[1861,14,1258,13],[1862,12,1258,13],[1862,16,1258,14],[1863,10,1259,8],[1863,11,1259,9],[1863,12,1260,8],[1863,19,1260,15,"error"],[1863,24,1260,20],[1863,26,1260,22],[1864,12,1261,12],[1864,16,1261,16],[1864,17,1261,17],[1864,18,1261,18],[1864,20,1261,20,"errors_1"],[1864,28,1261,28],[1864,29,1261,29,"isAuthError"],[1864,40,1261,40],[1864,42,1261,42,"error"],[1864,47,1261,47],[1864,48,1261,48],[1864,50,1261,50],[1865,14,1262,16],[1865,21,1262,23],[1866,16,1262,25,"data"],[1866,20,1262,29],[1866,22,1262,31],[1867,18,1262,33,"user"],[1867,22,1262,37],[1867,24,1262,39],[1867,28,1262,43],[1868,18,1262,45,"session"],[1868,25,1262,52],[1868,27,1262,54],[1869,16,1262,59],[1869,17,1262,60],[1870,16,1262,62,"error"],[1871,14,1262,68],[1871,15,1262,69],[1872,12,1263,12],[1873,12,1264,12],[1873,18,1264,18,"error"],[1873,23,1264,23],[1874,10,1265,8],[1875,8,1266,4],[1875,9,1266,5],[1876,8,1266,5],[1876,17,1236,10,"_refreshSession"],[1876,32,1236,25,"_refreshSession"],[1876,33,1236,25,"_x30"],[1876,37,1236,25],[1877,10,1236,25],[1877,17,1236,25,"_refreshSession3"],[1877,33,1236,25],[1877,34,1236,25,"apply"],[1877,39,1236,25],[1877,46,1236,25,"arguments"],[1877,55,1236,25],[1878,8,1236,25],[1879,8,1236,25],[1879,15,1236,10,"_refreshSession"],[1879,30,1236,25],[1880,6,1236,25],[1881,6,1267,4],[1882,0,1268,0],[1883,0,1269,0],[1884,4,1267,4],[1885,6,1267,4,"key"],[1885,9,1267,4],[1886,6,1267,4,"value"],[1886,11,1267,4],[1887,8,1267,4],[1887,12,1267,4,"_getSessionFromURL2"],[1887,31,1267,4],[1887,34,1267,4,"_asyncToGenerator"],[1887,51,1267,4],[1887,52,1270,4],[1887,63,1270,29,"params"],[1887,69,1270,35],[1887,71,1270,37,"callbackUrlType"],[1887,86,1270,52],[1887,88,1270,54],[1888,10,1271,8],[1888,14,1271,12],[1889,12,1272,12],[1889,16,1272,16],[1889,17,1272,17],[1889,18,1272,18],[1889,19,1272,19],[1889,21,1272,21,"helpers_1"],[1889,30,1272,30],[1889,31,1272,31,"isBrowser"],[1889,40,1272,40],[1889,42,1272,42],[1889,43,1272,43],[1889,45,1273,16],[1889,51,1273,22],[1889,55,1273,26,"errors_1"],[1889,63,1273,34],[1889,64,1273,35,"AuthImplicitGrantRedirectError"],[1889,94,1273,65],[1889,95,1273,66],[1889,117,1273,88],[1889,118,1273,89],[1890,12,1274,12],[1891,12,1275,12],[1891,16,1275,16,"params"],[1891,22,1275,22],[1891,23,1275,23,"error"],[1891,28,1275,28],[1891,32,1275,32,"params"],[1891,38,1275,38],[1891,39,1275,39,"error_description"],[1891,56,1275,56],[1891,60,1275,60,"params"],[1891,66,1275,66],[1891,67,1275,67,"error_code"],[1891,77,1275,77],[1891,79,1275,79],[1892,14,1276,16],[1893,14,1277,16],[1894,14,1278,16],[1894,20,1278,22],[1894,24,1278,26,"errors_1"],[1894,32,1278,34],[1894,33,1278,35,"AuthImplicitGrantRedirectError"],[1894,63,1278,65],[1894,64,1278,66,"params"],[1894,70,1278,72],[1894,71,1278,73,"error_description"],[1894,88,1278,90],[1894,92,1278,94],[1894,141,1278,143],[1894,143,1278,145],[1895,16,1279,20,"error"],[1895,21,1279,25],[1895,23,1279,27,"params"],[1895,29,1279,33],[1895,30,1279,34,"error"],[1895,35,1279,39],[1895,39,1279,43],[1895,58,1279,62],[1896,16,1280,20,"code"],[1896,20,1280,24],[1896,22,1280,26,"params"],[1896,28,1280,32],[1896,29,1280,33,"error_code"],[1896,39,1280,43],[1896,43,1280,47],[1897,14,1281,16],[1897,15,1281,17],[1897,16,1281,18],[1898,12,1282,12],[1899,12,1283,12],[1900,12,1284,12],[1900,20,1284,20,"callbackUrlType"],[1900,35,1284,35],[1901,14,1285,16],[1901,19,1285,21],[1901,29,1285,31],[1902,16,1286,20],[1902,20,1286,24],[1902,24,1286,28],[1902,25,1286,29,"flowType"],[1902,33,1286,37],[1902,38,1286,42],[1902,44,1286,48],[1902,46,1286,50],[1903,18,1287,24],[1903,24,1287,30],[1903,28,1287,34,"errors_1"],[1903,36,1287,42],[1903,37,1287,43,"AuthPKCEGrantCodeExchangeError"],[1903,67,1287,73],[1903,68,1287,74],[1903,96,1287,102],[1903,97,1287,103],[1904,16,1288,20],[1905,16,1289,20],[1906,14,1290,16],[1906,19,1290,21],[1906,25,1290,27],[1907,16,1291,20],[1907,20,1291,24],[1907,24,1291,28],[1907,25,1291,29,"flowType"],[1907,33,1291,37],[1907,38,1291,42],[1907,48,1291,52],[1907,50,1291,54],[1908,18,1292,24],[1908,24,1292,30],[1908,28,1292,34,"errors_1"],[1908,36,1292,42],[1908,37,1292,43,"AuthImplicitGrantRedirectError"],[1908,67,1292,73],[1908,68,1292,74],[1908,106,1292,112],[1908,107,1292,113],[1909,16,1293,20],[1910,16,1294,20],[1911,14,1295,16],[1912,14,1296,16],[1913,12,1297,12],[1914,12,1298,12],[1915,12,1299,12],[1915,16,1299,16,"callbackUrlType"],[1915,31,1299,31],[1915,36,1299,36],[1915,42,1299,42],[1915,44,1299,44],[1916,14,1300,16],[1916,18,1300,20],[1916,19,1300,21,"_debug"],[1916,25,1300,27],[1916,26,1300,28],[1916,42,1300,44],[1916,44,1300,46],[1916,51,1300,53],[1916,53,1300,55],[1916,67,1300,69],[1916,69,1300,71],[1916,73,1300,75],[1916,74,1300,76],[1917,14,1301,16],[1917,18,1301,20],[1917,19,1301,21,"params"],[1917,25,1301,27],[1917,26,1301,28,"code"],[1917,30,1301,32],[1917,32,1302,20],[1917,38,1302,26],[1917,42,1302,30,"errors_1"],[1917,50,1302,38],[1917,51,1302,39,"AuthPKCEGrantCodeExchangeError"],[1917,81,1302,69],[1917,82,1302,70],[1917,101,1302,89],[1917,102,1302,90],[1918,14,1303,16],[1918,18,1303,16,"_yield$this$_exchange"],[1918,39,1303,16],[1918,48,1303,46],[1918,52,1303,50],[1918,53,1303,51,"_exchangeCodeForSession"],[1918,76,1303,74],[1918,77,1303,75,"params"],[1918,83,1303,81],[1918,84,1303,82,"code"],[1918,88,1303,86],[1918,89,1303,87],[1919,16,1303,24,"data"],[1919,21,1303,28],[1919,24,1303,28,"_yield$this$_exchange"],[1919,45,1303,28],[1919,46,1303,24,"data"],[1919,50,1303,28],[1920,16,1303,30,"error"],[1920,23,1303,35],[1920,26,1303,35,"_yield$this$_exchange"],[1920,47,1303,35],[1920,48,1303,30,"error"],[1920,53,1303,35],[1921,14,1304,16],[1921,18,1304,20,"error"],[1921,25,1304,25],[1921,27,1305,20],[1921,33,1305,26,"error"],[1921,40,1305,31],[1922,14,1306,16],[1922,18,1306,22,"url"],[1922,21,1306,25],[1922,24,1306,28],[1922,28,1306,32,"URL"],[1922,31,1306,35],[1922,32,1306,36,"window"],[1922,38,1306,42],[1922,39,1306,43,"location"],[1922,47,1306,51],[1922,48,1306,52,"href"],[1922,52,1306,56],[1922,53,1306,57],[1923,14,1307,16,"url"],[1923,17,1307,19],[1923,18,1307,20,"searchParams"],[1923,30,1307,32],[1923,31,1307,33,"delete"],[1923,37,1307,39],[1923,38,1307,40],[1923,44,1307,46],[1923,45,1307,47],[1924,14,1308,16,"window"],[1924,20,1308,22],[1924,21,1308,23,"history"],[1924,28,1308,30],[1924,29,1308,31,"replaceState"],[1924,41,1308,43],[1924,42,1308,44,"window"],[1924,48,1308,50],[1924,49,1308,51,"history"],[1924,56,1308,58],[1924,57,1308,59,"state"],[1924,62,1308,64],[1924,64,1308,66],[1924,66,1308,68],[1924,68,1308,70,"url"],[1924,71,1308,73],[1924,72,1308,74,"toString"],[1924,80,1308,82],[1924,81,1308,83],[1924,82,1308,84],[1924,83,1308,85],[1925,14,1309,16],[1925,21,1309,23],[1926,16,1309,25,"data"],[1926,20,1309,29],[1926,22,1309,31],[1927,18,1309,33,"session"],[1927,25,1309,40],[1927,27,1309,42,"data"],[1927,32,1309,46],[1927,33,1309,47,"session"],[1927,40,1309,54],[1928,18,1309,56,"redirectType"],[1928,30,1309,68],[1928,32,1309,70],[1929,16,1309,75],[1929,17,1309,76],[1930,16,1309,78,"error"],[1930,21,1309,83],[1930,23,1309,85],[1931,14,1309,90],[1931,15,1309,91],[1932,12,1310,12],[1933,12,1311,12],[1933,16,1311,20,"provider_token"],[1933,30,1311,34],[1933,33,1311,129,"params"],[1933,39,1311,135],[1933,40,1311,20,"provider_token"],[1933,54,1311,34],[1934,14,1311,36,"provider_refresh_token"],[1934,36,1311,58],[1934,39,1311,129,"params"],[1934,45,1311,135],[1934,46,1311,36,"provider_refresh_token"],[1934,68,1311,58],[1935,14,1311,60,"access_token"],[1935,26,1311,72],[1935,29,1311,129,"params"],[1935,35,1311,135],[1935,36,1311,60,"access_token"],[1935,48,1311,72],[1936,14,1311,74,"refresh_token"],[1936,27,1311,87],[1936,30,1311,129,"params"],[1936,36,1311,135],[1936,37,1311,74,"refresh_token"],[1936,50,1311,87],[1937,14,1311,89,"expires_in"],[1937,24,1311,99],[1937,27,1311,129,"params"],[1937,33,1311,135],[1937,34,1311,89,"expires_in"],[1937,44,1311,99],[1938,14,1311,101,"expires_at"],[1938,24,1311,111],[1938,27,1311,129,"params"],[1938,33,1311,135],[1938,34,1311,101,"expires_at"],[1938,44,1311,111],[1939,14,1311,113,"token_type"],[1939,24,1311,123],[1939,27,1311,129,"params"],[1939,33,1311,135],[1939,34,1311,113,"token_type"],[1939,44,1311,123],[1940,12,1312,12],[1940,16,1312,16],[1940,17,1312,17,"access_token"],[1940,29,1312,29],[1940,33,1312,33],[1940,34,1312,34,"expires_in"],[1940,44,1312,44],[1940,48,1312,48],[1940,49,1312,49,"refresh_token"],[1940,62,1312,62],[1940,66,1312,66],[1940,67,1312,67,"token_type"],[1940,77,1312,77],[1940,79,1312,79],[1941,14,1313,16],[1941,20,1313,22],[1941,24,1313,26,"errors_1"],[1941,32,1313,34],[1941,33,1313,35,"AuthImplicitGrantRedirectError"],[1941,63,1313,65],[1941,64,1313,66],[1941,91,1313,93],[1941,92,1313,94],[1942,12,1314,12],[1943,12,1315,12],[1943,16,1315,18,"timeNow"],[1943,23,1315,25],[1943,26,1315,28,"Math"],[1943,30,1315,32],[1943,31,1315,33,"round"],[1943,36,1315,38],[1943,37,1315,39,"Date"],[1943,41,1315,43],[1943,42,1315,44,"now"],[1943,45,1315,47],[1943,46,1315,48],[1943,47,1315,49],[1943,50,1315,52],[1943,54,1315,56],[1943,55,1315,57],[1944,12,1316,12],[1944,16,1316,18,"expiresIn"],[1944,25,1316,27],[1944,28,1316,30,"parseInt"],[1944,36,1316,38],[1944,37,1316,39,"expires_in"],[1944,47,1316,49],[1944,48,1316,50],[1945,12,1317,12],[1945,16,1317,16,"expiresAt"],[1945,25,1317,25],[1945,28,1317,28,"timeNow"],[1945,35,1317,35],[1945,38,1317,38,"expiresIn"],[1945,47,1317,47],[1946,12,1318,12],[1946,16,1318,16,"expires_at"],[1946,26,1318,26],[1946,28,1318,28],[1947,14,1319,16,"expiresAt"],[1947,23,1319,25],[1947,26,1319,28,"parseInt"],[1947,34,1319,36],[1947,35,1319,37,"expires_at"],[1947,45,1319,47],[1947,46,1319,48],[1948,12,1320,12],[1949,12,1321,12],[1949,16,1321,18,"actuallyExpiresIn"],[1949,33,1321,35],[1949,36,1321,38,"expiresAt"],[1949,45,1321,47],[1949,48,1321,50,"timeNow"],[1949,55,1321,57],[1950,12,1322,12],[1950,16,1322,16,"actuallyExpiresIn"],[1950,33,1322,33],[1950,36,1322,36],[1950,40,1322,40],[1950,44,1322,44,"constants_1"],[1950,55,1322,55],[1950,56,1322,56,"AUTO_REFRESH_TICK_DURATION_MS"],[1950,85,1322,85],[1950,87,1322,87],[1950,88,1324,12],[1951,12,1325,12],[1951,16,1325,18,"issuedAt"],[1951,24,1325,26],[1951,27,1325,29,"expiresAt"],[1951,36,1325,38],[1951,39,1325,41,"expiresIn"],[1951,48,1325,50],[1952,12,1326,12],[1952,16,1326,16,"timeNow"],[1952,23,1326,23],[1952,26,1326,26,"issuedAt"],[1952,34,1326,34],[1952,38,1326,38],[1952,41,1326,41],[1952,43,1326,43],[1952,44,1328,12],[1952,45,1328,13],[1952,51,1329,17],[1952,55,1329,21,"timeNow"],[1952,62,1329,28],[1952,65,1329,31,"issuedAt"],[1952,73,1329,39],[1952,76,1329,42],[1952,77,1329,43],[1952,79,1329,45],[1952,80,1331,12],[1953,12,1332,12],[1953,16,1332,12,"_yield$this$_getUser2"],[1953,37,1332,12],[1953,46,1332,42],[1953,50,1332,46],[1953,51,1332,47,"_getUser"],[1953,59,1332,55],[1953,60,1332,56,"access_token"],[1953,72,1332,68],[1953,73,1332,69],[1954,14,1332,20,"data"],[1954,18,1332,24],[1954,21,1332,24,"_yield$this$_getUser2"],[1954,42,1332,24],[1954,43,1332,20,"data"],[1954,47,1332,24],[1955,14,1332,26,"error"],[1955,19,1332,31],[1955,22,1332,31,"_yield$this$_getUser2"],[1955,43,1332,31],[1955,44,1332,26,"error"],[1955,49,1332,31],[1956,12,1333,12],[1956,16,1333,16,"error"],[1956,21,1333,21],[1956,23,1334,16],[1956,29,1334,22,"error"],[1956,34,1334,27],[1957,12,1335,12],[1957,16,1335,18,"session"],[1957,23,1335,25],[1957,26,1335,28],[1958,14,1336,16,"provider_token"],[1958,28,1336,30],[1959,14,1337,16,"provider_refresh_token"],[1959,36,1337,38],[1960,14,1338,16,"access_token"],[1960,26,1338,28],[1961,14,1339,16,"expires_in"],[1961,24,1339,26],[1961,26,1339,28,"expiresIn"],[1961,35,1339,37],[1962,14,1340,16,"expires_at"],[1962,24,1340,26],[1962,26,1340,28,"expiresAt"],[1962,35,1340,37],[1963,14,1341,16,"refresh_token"],[1963,27,1341,29],[1964,14,1342,16,"token_type"],[1964,24,1342,26],[1965,14,1343,16,"user"],[1965,18,1343,20],[1965,20,1343,22,"data"],[1965,24,1343,26],[1965,25,1343,27,"user"],[1966,12,1344,12],[1966,13,1344,13],[1967,12,1345,12],[1968,12,1346,12,"window"],[1968,18,1346,18],[1968,19,1346,19,"location"],[1968,27,1346,27],[1968,28,1346,28,"hash"],[1968,32,1346,32],[1968,35,1346,35],[1968,37,1346,37],[1969,12,1347,12],[1969,16,1347,16],[1969,17,1347,17,"_debug"],[1969,23,1347,23],[1969,24,1347,24],[1969,47,1347,47],[1969,49,1347,49],[1969,80,1347,80],[1969,81,1347,81],[1970,12,1348,12],[1970,19,1348,19],[1971,14,1348,21,"data"],[1971,18,1348,25],[1971,20,1348,27],[1972,16,1348,29,"session"],[1972,23,1348,36],[1973,16,1348,38,"redirectType"],[1973,28,1348,50],[1973,30,1348,52,"params"],[1973,36,1348,58],[1973,37,1348,59,"type"],[1974,14,1348,64],[1974,15,1348,65],[1975,14,1348,67,"error"],[1975,19,1348,72],[1975,21,1348,74],[1976,12,1348,79],[1976,13,1348,80],[1977,10,1349,8],[1977,11,1349,9],[1977,12,1350,8],[1977,19,1350,15,"error"],[1977,24,1350,20],[1977,26,1350,22],[1978,12,1351,12],[1978,16,1351,16],[1978,17,1351,17],[1978,18,1351,18],[1978,20,1351,20,"errors_1"],[1978,28,1351,28],[1978,29,1351,29,"isAuthError"],[1978,40,1351,40],[1978,42,1351,42,"error"],[1978,47,1351,47],[1978,48,1351,48],[1978,50,1351,50],[1979,14,1352,16],[1979,21,1352,23],[1980,16,1352,25,"data"],[1980,20,1352,29],[1980,22,1352,31],[1981,18,1352,33,"session"],[1981,25,1352,40],[1981,27,1352,42],[1981,31,1352,46],[1982,18,1352,48,"redirectType"],[1982,30,1352,60],[1982,32,1352,62],[1983,16,1352,67],[1983,17,1352,68],[1984,16,1352,70,"error"],[1985,14,1352,76],[1985,15,1352,77],[1986,12,1353,12],[1987,12,1354,12],[1987,18,1354,18,"error"],[1987,23,1354,23],[1988,10,1355,8],[1989,8,1356,4],[1989,9,1356,5],[1990,8,1356,5],[1990,17,1270,10,"_getSessionFromURL"],[1990,35,1270,28,"_getSessionFromURL"],[1990,36,1270,28,"_x32"],[1990,40,1270,28],[1990,42,1270,28,"_x33"],[1990,46,1270,28],[1991,10,1270,28],[1991,17,1270,28,"_getSessionFromURL2"],[1991,36,1270,28],[1991,37,1270,28,"apply"],[1991,42,1270,28],[1991,49,1270,28,"arguments"],[1991,58,1270,28],[1992,8,1270,28],[1993,8,1270,28],[1993,15,1270,10,"_getSessionFromURL"],[1993,33,1270,28],[1994,6,1270,28],[1995,6,1357,4],[1996,0,1358,0],[1997,0,1359,0],[1998,6,1357,4],[1999,4,1357,4],[2000,6,1357,4,"key"],[2000,9,1357,4],[2001,6,1357,4,"value"],[2001,11,1357,4],[2001,13,1360,4],[2001,22,1360,4,"_isImplicitGrantCallback"],[2001,46,1360,28,"_isImplicitGrantCallback"],[2001,47,1360,29,"params"],[2001,53,1360,35],[2001,55,1360,37],[2002,8,1361,8],[2002,15,1361,15,"Boolean"],[2002,22,1361,22],[2002,23,1361,23,"params"],[2002,29,1361,29],[2002,30,1361,30,"access_token"],[2002,42,1361,42],[2002,46,1361,46,"params"],[2002,52,1361,52],[2002,53,1361,53,"error_description"],[2002,70,1361,70],[2002,71,1361,71],[2003,6,1362,4],[2004,6,1363,4],[2005,0,1364,0],[2006,0,1365,0],[2007,4,1363,4],[2008,6,1363,4,"key"],[2008,9,1363,4],[2009,6,1363,4,"value"],[2009,11,1363,4],[2010,8,1363,4],[2010,12,1363,4,"_isPKCECallback2"],[2010,28,1363,4],[2010,31,1363,4,"_asyncToGenerator"],[2010,48,1363,4],[2010,49,1366,4],[2010,60,1366,26,"params"],[2010,66,1366,32],[2010,68,1366,34],[2011,10,1367,8],[2011,14,1367,14,"currentStorageContent"],[2011,35,1367,35],[2011,44,1367,44],[2011,45,1367,45],[2011,46,1367,46],[2011,48,1367,48,"helpers_1"],[2011,57,1367,57],[2011,58,1367,58,"getItemAsync"],[2011,70,1367,70],[2011,72,1367,72],[2011,76,1367,76],[2011,77,1367,77,"storage"],[2011,84,1367,84],[2011,86,1367,86],[2011,89,1367,89],[2011,93,1367,93],[2011,94,1367,94,"storageKey"],[2011,104,1367,104],[2011,120,1367,120],[2011,121,1367,121],[2012,10,1368,8],[2012,17,1368,15],[2012,18,1368,16],[2012,20,1368,18,"params"],[2012,26,1368,24],[2012,27,1368,25,"code"],[2012,31,1368,29],[2012,35,1368,33,"currentStorageContent"],[2012,56,1368,54],[2012,57,1368,55],[2013,8,1369,4],[2013,9,1369,5],[2014,8,1369,5],[2014,17,1366,10,"_isPKCECallback"],[2014,32,1366,25,"_isPKCECallback"],[2014,33,1366,25,"_x34"],[2014,37,1366,25],[2015,10,1366,25],[2015,17,1366,25,"_isPKCECallback2"],[2015,33,1366,25],[2015,34,1366,25,"apply"],[2015,39,1366,25],[2015,46,1366,25,"arguments"],[2015,55,1366,25],[2016,8,1366,25],[2017,8,1366,25],[2017,15,1366,10,"_isPKCECallback"],[2017,30,1366,25],[2018,6,1366,25],[2019,6,1370,4],[2020,0,1371,0],[2021,0,1372,0],[2022,0,1373,0],[2023,0,1374,0],[2024,0,1375,0],[2025,0,1376,0],[2026,0,1377,0],[2027,6,1370,4],[2028,4,1370,4],[2029,6,1370,4,"key"],[2029,9,1370,4],[2030,6,1370,4,"value"],[2030,11,1370,4],[2031,8,1370,4],[2031,12,1370,4,"_signOut2"],[2031,21,1370,4],[2031,24,1370,4,"_asyncToGenerator"],[2031,41,1370,4],[2031,42,1378,4],[2031,55,1378,49],[2032,10,1378,49],[2032,14,1378,49,"_this14"],[2032,21,1378,49],[2033,10,1378,49],[2033,14,1378,18,"options"],[2033,21,1378,25],[2033,24,1378,25,"arguments"],[2033,33,1378,25],[2033,34,1378,25,"length"],[2033,40,1378,25],[2033,48,1378,25,"arguments"],[2033,57,1378,25],[2033,65,1378,25,"undefined"],[2033,74,1378,25],[2033,77,1378,25,"arguments"],[2033,86,1378,25],[2033,92,1378,28],[2034,12,1378,30,"scope"],[2034,17,1378,35],[2034,19,1378,37],[2035,10,1378,46],[2035,11,1378,47],[2036,10,1379,8],[2036,16,1379,14],[2036,20,1379,18],[2036,21,1379,19,"initializePromise"],[2036,38,1379,36],[2037,10,1380,8],[2037,23,1380,21],[2037,27,1380,25],[2037,28,1380,26,"_acquireLock"],[2037,40,1380,38],[2037,58,1380,38,"_asyncToGenerator"],[2037,75,1380,38],[2037,76,1380,43],[2037,89,1380,55],[2038,12,1381,12],[2038,25,1381,25,"_this14"],[2038,32,1381,29],[2038,33,1381,30,"_signOut"],[2038,41,1381,38],[2038,42,1381,39,"options"],[2038,49,1381,46],[2038,50,1381,47],[2039,10,1382,8],[2039,11,1382,9],[2039,13,1382,10],[2040,8,1383,4],[2040,9,1383,5],[2041,8,1383,5],[2041,17,1378,10,"signOut"],[2041,24,1378,17,"signOut"],[2041,25,1378,17],[2042,10,1378,17],[2042,17,1378,17,"_signOut2"],[2042,26,1378,17],[2042,27,1378,17,"apply"],[2042,32,1378,17],[2042,39,1378,17,"arguments"],[2042,48,1378,17],[2043,8,1378,17],[2044,8,1378,17],[2044,15,1378,10,"signOut"],[2044,22,1378,17],[2045,6,1378,17],[2046,4,1378,17],[2047,6,1378,17,"key"],[2047,9,1378,17],[2048,6,1378,17,"value"],[2048,11,1378,17],[2049,8,1378,17],[2049,12,1378,17,"_signOut3"],[2049,21,1378,17],[2049,24,1378,17,"_asyncToGenerator"],[2049,41,1378,17],[2049,42,1384,4],[2049,55,1384,52],[2050,10,1384,52],[2050,14,1384,52,"_this15"],[2050,21,1384,52],[2051,10,1384,52],[2051,14,1384,52,"_ref21"],[2051,20,1384,52],[2051,23,1384,52,"arguments"],[2051,32,1384,52],[2051,33,1384,52,"length"],[2051,39,1384,52],[2051,47,1384,52,"arguments"],[2051,56,1384,52],[2051,64,1384,52,"undefined"],[2051,73,1384,52],[2051,76,1384,52,"arguments"],[2051,85,1384,52],[2051,91,1384,31],[2052,14,1384,33,"scope"],[2052,19,1384,38],[2052,21,1384,40],[2053,12,1384,49],[2053,13,1384,50],[2054,12,1384,21,"scope"],[2054,17,1384,26],[2054,20,1384,26,"_ref21"],[2054,26,1384,26],[2054,27,1384,21,"scope"],[2054,32,1384,26],[2055,10,1385,8],[2055,23,1385,21],[2055,27,1385,25],[2055,28,1385,26,"_useSession"],[2055,39,1385,37],[2056,12,1385,37],[2056,16,1385,37,"_ref22"],[2056,22,1385,37],[2056,25,1385,37,"_asyncToGenerator"],[2056,42,1385,37],[2056,43,1385,38],[2056,54,1385,45,"result"],[2056,60,1385,51],[2056,62,1385,56],[2057,14,1386,12],[2057,18,1386,16,"_a"],[2057,20,1386,18],[2058,14,1387,12],[2058,18,1387,20,"data"],[2058,22,1387,24],[2058,25,1387,50,"result"],[2058,31,1387,56],[2058,32,1387,20,"data"],[2058,36,1387,24],[2059,16,1387,33,"sessionError"],[2059,28,1387,45],[2059,31,1387,50,"result"],[2059,37,1387,56],[2059,38,1387,26,"error"],[2059,43,1387,31],[2060,14,1388,12],[2060,18,1388,16,"sessionError"],[2060,30,1388,28],[2060,32,1388,30],[2061,16,1389,16],[2061,23,1389,23],[2062,18,1389,25,"error"],[2062,23,1389,30],[2062,25,1389,32,"sessionError"],[2063,16,1389,45],[2063,17,1389,46],[2064,14,1390,12],[2065,14,1391,12],[2065,18,1391,18,"accessToken"],[2065,29,1391,29],[2065,32,1391,32],[2065,33,1391,33,"_a"],[2065,35,1391,35],[2065,38,1391,38,"data"],[2065,42,1391,42],[2065,43,1391,43,"session"],[2065,50,1391,50],[2065,56,1391,56],[2065,60,1391,60],[2065,64,1391,64,"_a"],[2065,66,1391,66],[2065,71,1391,66,"undefined"],[2065,80,1391,77],[2065,83,1391,77,"undefined"],[2065,92,1391,77],[2065,95,1391,89,"_a"],[2065,97,1391,91],[2065,98,1391,92,"access_token"],[2065,110,1391,104],[2066,14,1392,12],[2066,18,1392,16,"accessToken"],[2066,29,1392,27],[2066,31,1392,29],[2067,16,1393,16],[2067,20,1393,16,"_yield$_this15$admin$"],[2067,41,1393,16],[2067,50,1393,40,"_this15"],[2067,57,1393,44],[2067,58,1393,45,"admin"],[2067,63,1393,50],[2067,64,1393,51,"signOut"],[2067,71,1393,58],[2067,72,1393,59,"accessToken"],[2067,83,1393,70],[2067,85,1393,72,"scope"],[2067,90,1393,77],[2067,91,1393,78],[2068,18,1393,24,"error"],[2068,23,1393,29],[2068,26,1393,29,"_yield$_this15$admin$"],[2068,47,1393,29],[2068,48,1393,24,"error"],[2068,53,1393,29],[2069,16,1394,16],[2069,20,1394,20,"error"],[2069,25,1394,25],[2069,27,1394,27],[2070,18,1395,20],[2071,18,1396,20],[2072,18,1397,20],[2072,22,1397,24],[2072,24,1397,26],[2072,25,1397,27],[2072,26,1397,28],[2072,28,1397,30,"errors_1"],[2072,36,1397,38],[2072,37,1397,39,"isAuthApiError"],[2072,51,1397,53],[2072,53,1397,55,"error"],[2072,58,1397,60],[2072,59,1397,61],[2072,64,1398,25,"error"],[2072,69,1398,30],[2072,70,1398,31,"status"],[2072,76,1398,37],[2072,81,1398,42],[2072,84,1398,45],[2072,88,1398,49,"error"],[2072,93,1398,54],[2072,94,1398,55,"status"],[2072,100,1398,61],[2072,105,1398,66],[2072,108,1398,69],[2072,112,1398,73,"error"],[2072,117,1398,78],[2072,118,1398,79,"status"],[2072,124,1398,85],[2072,129,1398,90],[2072,132,1398,93],[2072,133,1398,94],[2072,134,1398,95],[2072,136,1398,97],[2073,20,1399,24],[2073,27,1399,31],[2074,22,1399,33,"error"],[2075,20,1399,39],[2075,21,1399,40],[2076,18,1400,20],[2077,16,1401,16],[2078,14,1402,12],[2079,14,1403,12],[2079,18,1403,16,"scope"],[2079,23,1403,21],[2079,28,1403,26],[2079,36,1403,34],[2079,38,1403,36],[2080,16,1404,16],[2080,22,1404,22,"_this15"],[2080,29,1404,26],[2080,30,1404,27,"_removeSession"],[2080,44,1404,41],[2080,45,1404,42],[2080,46,1404,43],[2081,16,1405,16],[2081,22,1405,22],[2081,23,1405,23],[2081,24,1405,24],[2081,26,1405,26,"helpers_1"],[2081,35,1405,35],[2081,36,1405,36,"removeItemAsync"],[2081,51,1405,51],[2081,53,1405,53,"_this15"],[2081,60,1405,57],[2081,61,1405,58,"storage"],[2081,68,1405,65],[2081,70,1405,67],[2081,73,1405,70,"_this15"],[2081,80,1405,74],[2081,81,1405,75,"storageKey"],[2081,91,1405,85],[2081,107,1405,101],[2081,108,1405,102],[2082,14,1406,12],[2083,14,1407,12],[2083,21,1407,19],[2084,16,1407,21,"error"],[2084,21,1407,26],[2084,23,1407,28],[2085,14,1407,33],[2085,15,1407,34],[2086,12,1408,8],[2086,13,1408,9],[2087,12,1408,9],[2087,29,1408,9,"_x35"],[2087,33,1408,9],[2088,14,1408,9],[2088,21,1408,9,"_ref22"],[2088,27,1408,9],[2088,28,1408,9,"apply"],[2088,33,1408,9],[2088,40,1408,9,"arguments"],[2088,49,1408,9],[2089,12,1408,9],[2090,10,1408,9],[2090,14,1408,10],[2091,8,1409,4],[2091,9,1409,5],[2092,8,1409,5],[2092,17,1384,10,"_signOut"],[2092,25,1384,18,"_signOut"],[2092,26,1384,18],[2093,10,1384,18],[2093,17,1384,18,"_signOut3"],[2093,26,1384,18],[2093,27,1384,18,"apply"],[2093,32,1384,18],[2093,39,1384,18,"arguments"],[2093,48,1384,18],[2094,8,1384,18],[2095,8,1384,18],[2095,15,1384,10,"_signOut"],[2095,23,1384,18],[2096,6,1384,18],[2097,6,1410,4],[2098,0,1411,0],[2099,0,1412,0],[2100,0,1413,0],[2101,4,1410,4],[2102,6,1410,4,"key"],[2102,9,1410,4],[2103,6,1410,4,"value"],[2103,11,1410,4],[2103,13,1414,4],[2103,22,1414,4,"onAuthStateChange"],[2103,39,1414,21,"onAuthStateChange"],[2103,40,1414,22,"callback"],[2103,48,1414,30],[2103,50,1414,32],[2104,8,1414,32],[2104,12,1414,32,"_this16"],[2104,19,1414,32],[2105,8,1415,8],[2105,12,1415,14,"id"],[2105,14,1415,16],[2105,17,1415,19],[2105,18,1415,20],[2105,19,1415,21],[2105,21,1415,23,"helpers_1"],[2105,30,1415,32],[2105,31,1415,33,"uuid"],[2105,35,1415,37],[2105,37,1415,39],[2105,38,1415,40],[2106,8,1416,8],[2106,12,1416,14,"subscription"],[2106,24,1416,26],[2106,27,1416,29],[2107,10,1417,12,"id"],[2107,12,1417,14],[2108,10,1418,12,"callback"],[2108,18,1418,20],[2109,10,1419,12,"unsubscribe"],[2109,21,1419,23],[2109,23,1419,25,"unsubscribe"],[2109,24,1419,25],[2109,29,1419,31],[2110,12,1420,16],[2110,16,1420,20],[2110,17,1420,21,"_debug"],[2110,23,1420,27],[2110,24,1420,28],[2110,40,1420,44],[2110,42,1420,46],[2110,81,1420,85],[2110,83,1420,87,"id"],[2110,85,1420,89],[2110,86,1420,90],[2111,12,1421,16],[2111,16,1421,20],[2111,17,1421,21,"stateChangeEmitters"],[2111,36,1421,40],[2111,37,1421,41,"delete"],[2111,43,1421,47],[2111,44,1421,48,"id"],[2111,46,1421,50],[2111,47,1421,51],[2112,10,1422,12],[2113,8,1423,8],[2113,9,1423,9],[2114,8,1424,8],[2114,12,1424,12],[2114,13,1424,13,"_debug"],[2114,19,1424,19],[2114,20,1424,20],[2114,42,1424,42],[2114,44,1424,44],[2114,73,1424,73],[2114,75,1424,75,"id"],[2114,77,1424,77],[2114,78,1424,78],[2115,8,1425,8],[2115,12,1425,12],[2115,13,1425,13,"stateChangeEmitters"],[2115,32,1425,32],[2115,33,1425,33,"set"],[2115,36,1425,36],[2115,37,1425,37,"id"],[2115,39,1425,39],[2115,41,1425,41,"subscription"],[2115,53,1425,53],[2115,54,1425,54],[2116,8,1426,8,"_asyncToGenerator"],[2116,25,1426,8],[2116,26,1426,9],[2116,39,1426,21],[2117,10,1427,12],[2117,16,1427,18,"_this16"],[2117,23,1427,22],[2117,24,1427,23,"initializePromise"],[2117,41,1427,40],[2118,10,1428,12],[2118,16,1428,18,"_this16"],[2118,23,1428,22],[2118,24,1428,23,"_acquireLock"],[2118,36,1428,35],[2118,54,1428,35,"_asyncToGenerator"],[2118,71,1428,35],[2118,72,1428,40],[2118,85,1428,52],[2119,12,1429,16,"_this16"],[2119,19,1429,20],[2119,20,1429,21,"_emitInitialSession"],[2119,39,1429,40],[2119,40,1429,41,"id"],[2119,42,1429,43],[2119,43,1429,44],[2120,10,1430,12],[2120,11,1430,13],[2120,13,1430,14],[2121,8,1431,8],[2121,9,1431,9],[2121,11,1431,11],[2121,12,1431,12],[2122,8,1432,8],[2122,15,1432,15],[2123,10,1432,17,"data"],[2123,14,1432,21],[2123,16,1432,23],[2124,12,1432,25,"subscription"],[2125,10,1432,38],[2126,8,1432,40],[2126,9,1432,41],[2127,6,1433,4],[2128,4,1433,5],[2129,6,1433,5,"key"],[2129,9,1433,5],[2130,6,1433,5,"value"],[2130,11,1433,5],[2131,8,1433,5],[2131,12,1433,5,"_emitInitialSession2"],[2131,32,1433,5],[2131,35,1433,5,"_asyncToGenerator"],[2131,52,1433,5],[2131,53,1434,4],[2131,64,1434,30,"id"],[2131,66,1434,32],[2131,68,1434,34],[2132,10,1434,34],[2132,14,1434,34,"_this17"],[2132,21,1434,34],[2133,10,1435,8],[2133,23,1435,21],[2133,27,1435,25],[2133,28,1435,26,"_useSession"],[2133,39,1435,37],[2134,12,1435,37],[2134,16,1435,37,"_ref25"],[2134,22,1435,37],[2134,25,1435,37,"_asyncToGenerator"],[2134,42,1435,37],[2134,43,1435,38],[2134,54,1435,45,"result"],[2134,60,1435,51],[2134,62,1435,56],[2135,14,1436,12],[2135,18,1436,16,"_a"],[2135,20,1436,18],[2135,22,1436,20,"_b"],[2135,24,1436,22],[2136,14,1437,12],[2136,18,1437,16],[2137,16,1438,16],[2137,20,1438,32,"session"],[2137,27,1438,39],[2137,30,1438,54,"result"],[2137,36,1438,60],[2137,37,1438,24,"data"],[2137,41,1438,28],[2137,42,1438,32,"session"],[2137,49,1438,39],[2138,18,1438,43,"error"],[2138,23,1438,48],[2138,26,1438,54,"result"],[2138,32,1438,60],[2138,33,1438,43,"error"],[2138,38,1438,48],[2139,16,1439,16],[2139,20,1439,20,"error"],[2139,25,1439,25],[2139,27,1440,20],[2139,33,1440,26,"error"],[2139,38,1440,31],[2140,16,1441,16],[2140,22,1441,23],[2140,23,1441,24,"_a"],[2140,25,1441,26],[2140,28,1441,29,"_this17"],[2140,35,1441,33],[2140,36,1441,34,"stateChangeEmitters"],[2140,55,1441,53],[2140,56,1441,54,"get"],[2140,59,1441,57],[2140,60,1441,58,"id"],[2140,62,1441,60],[2140,63,1441,61],[2140,69,1441,67],[2140,73,1441,71],[2140,77,1441,75,"_a"],[2140,79,1441,77],[2140,84,1441,77,"undefined"],[2140,93,1441,88],[2140,96,1441,88,"undefined"],[2140,105,1441,88],[2140,108,1441,100,"_a"],[2140,110,1441,102],[2140,111,1441,103,"callback"],[2140,119,1441,111],[2140,120,1441,112],[2140,137,1441,129],[2140,139,1441,131,"session"],[2140,146,1441,138],[2140,147,1441,139],[2141,16,1442,16,"_this17"],[2141,23,1442,20],[2141,24,1442,21,"_debug"],[2141,30,1442,27],[2141,31,1442,28],[2141,48,1442,45],[2141,50,1442,47],[2141,63,1442,60],[2141,65,1442,62,"id"],[2141,67,1442,64],[2141,69,1442,66],[2141,78,1442,75],[2141,80,1442,77,"session"],[2141,87,1442,84],[2141,88,1442,85],[2142,14,1443,12],[2142,15,1443,13],[2142,16,1444,12],[2142,23,1444,19,"err"],[2142,26,1444,22],[2142,28,1444,24],[2143,16,1445,16],[2143,22,1445,23],[2143,23,1445,24,"_b"],[2143,25,1445,26],[2143,28,1445,29,"_this17"],[2143,35,1445,33],[2143,36,1445,34,"stateChangeEmitters"],[2143,55,1445,53],[2143,56,1445,54,"get"],[2143,59,1445,57],[2143,60,1445,58,"id"],[2143,62,1445,60],[2143,63,1445,61],[2143,69,1445,67],[2143,73,1445,71],[2143,77,1445,75,"_b"],[2143,79,1445,77],[2143,84,1445,77,"undefined"],[2143,93,1445,88],[2143,96,1445,88,"undefined"],[2143,105,1445,88],[2143,108,1445,100,"_b"],[2143,110,1445,102],[2143,111,1445,103,"callback"],[2143,119,1445,111],[2143,120,1445,112],[2143,137,1445,129],[2143,139,1445,131],[2143,143,1445,135],[2143,144,1445,136],[2144,16,1446,16,"_this17"],[2144,23,1446,20],[2144,24,1446,21,"_debug"],[2144,30,1446,27],[2144,31,1446,28],[2144,48,1446,45],[2144,50,1446,47],[2144,63,1446,60],[2144,65,1446,62,"id"],[2144,67,1446,64],[2144,69,1446,66],[2144,76,1446,73],[2144,78,1446,75,"err"],[2144,81,1446,78],[2144,82,1446,79],[2145,14,1448,12],[2146,12,1449,8],[2146,13,1449,9],[2147,12,1449,9],[2147,29,1449,9,"_x37"],[2147,33,1449,9],[2148,14,1449,9],[2148,21,1449,9,"_ref25"],[2148,27,1449,9],[2148,28,1449,9,"apply"],[2148,33,1449,9],[2148,40,1449,9,"arguments"],[2148,49,1449,9],[2149,12,1449,9],[2150,10,1449,9],[2150,14,1449,10],[2151,8,1450,4],[2151,9,1450,5],[2152,8,1450,5],[2152,17,1434,10,"_emitInitialSession"],[2152,36,1434,29,"_emitInitialSession"],[2152,37,1434,29,"_x36"],[2152,41,1434,29],[2153,10,1434,29],[2153,17,1434,29,"_emitInitialSession2"],[2153,37,1434,29],[2153,38,1434,29,"apply"],[2153,43,1434,29],[2153,50,1434,29,"arguments"],[2153,59,1434,29],[2154,8,1434,29],[2155,8,1434,29],[2155,15,1434,10,"_emitInitialSession"],[2155,34,1434,29],[2156,6,1434,29],[2157,6,1451,4],[2158,0,1452,0],[2159,0,1453,0],[2160,0,1454,0],[2161,0,1455,0],[2162,0,1456,0],[2163,0,1457,0],[2164,4,1451,4],[2165,6,1451,4,"key"],[2165,9,1451,4],[2166,6,1451,4,"value"],[2166,11,1451,4],[2167,8,1451,4],[2167,12,1451,4,"_resetPasswordForEmail"],[2167,34,1451,4],[2167,37,1451,4,"_asyncToGenerator"],[2167,54,1451,4],[2167,55,1458,4],[2167,66,1458,32,"email"],[2167,71,1458,37],[2167,73,1458,53],[2168,10,1458,53],[2168,14,1458,39,"options"],[2168,21,1458,46],[2168,24,1458,46,"arguments"],[2168,33,1458,46],[2168,34,1458,46,"length"],[2168,40,1458,46],[2168,48,1458,46,"arguments"],[2168,57,1458,46],[2168,65,1458,46,"undefined"],[2168,74,1458,46],[2168,77,1458,46,"arguments"],[2168,86,1458,46],[2168,92,1458,49],[2168,93,1458,50],[2168,94,1458,51],[2169,10,1459,8],[2169,14,1459,12,"codeChallenge"],[2169,27,1459,25],[2169,30,1459,28],[2169,34,1459,32],[2170,10,1460,8],[2170,14,1460,12,"codeChallengeMethod"],[2170,33,1460,31],[2170,36,1460,34],[2170,40,1460,38],[2171,10,1461,8],[2171,14,1461,12],[2171,18,1461,16],[2171,19,1461,17,"flowType"],[2171,27,1461,25],[2171,32,1461,30],[2171,38,1461,36],[2171,40,1461,38],[2172,12,1462,12],[2173,12,1462,13],[2173,16,1462,13,"_yield16"],[2173,24,1462,13],[2173,33,1463,57],[2173,34,1463,58],[2173,35,1463,59],[2173,37,1463,61,"helpers_1"],[2173,46,1463,70],[2173,47,1463,71,"getCodeChallengeAndMethod"],[2173,72,1463,96],[2173,74,1463,98],[2173,78,1463,102],[2173,79,1463,103,"storage"],[2173,86,1463,110],[2173,88,1463,112],[2173,92,1463,116],[2173,93,1463,117,"storageKey"],[2173,103,1463,127],[2173,105,1463,129],[2173,109,1463,133],[2173,110,1463,134],[2174,12,1464,12],[2174,13,1464,13],[2175,12,1464,13],[2175,16,1464,13,"_yield17"],[2175,24,1464,13],[2175,27,1464,13,"_slicedToArray"],[2175,41,1464,13],[2175,42,1464,13,"_yield16"],[2175,50,1464,13],[2176,12,1463,13,"codeChallenge"],[2176,25,1463,26],[2176,28,1463,26,"_yield17"],[2176,36,1463,26],[2177,12,1463,28,"codeChallengeMethod"],[2177,31,1463,47],[2177,34,1463,47,"_yield17"],[2177,42,1463,47],[2178,10,1465,8],[2179,10,1466,8],[2179,14,1466,12],[2180,12,1467,12],[2180,25,1467,25],[2180,26,1467,26],[2180,27,1467,27],[2180,29,1467,29,"fetch_1"],[2180,36,1467,36],[2180,37,1467,37,"_request"],[2180,45,1467,45],[2180,47,1467,47],[2180,51,1467,51],[2180,52,1467,52,"fetch"],[2180,57,1467,57],[2180,59,1467,59],[2180,65,1467,65],[2180,67,1467,67],[2180,70,1467,70],[2180,74,1467,74],[2180,75,1467,75,"url"],[2180,78,1467,78],[2180,88,1467,88],[2180,90,1467,90],[2181,14,1468,16,"body"],[2181,18,1468,20],[2181,20,1468,22],[2182,16,1469,20,"email"],[2182,21,1469,25],[2183,16,1470,20,"code_challenge"],[2183,30,1470,34],[2183,32,1470,36,"codeChallenge"],[2183,45,1470,49],[2184,16,1471,20,"code_challenge_method"],[2184,37,1471,41],[2184,39,1471,43,"codeChallengeMethod"],[2184,58,1471,62],[2185,16,1472,20,"gotrue_meta_security"],[2185,36,1472,40],[2185,38,1472,42],[2186,18,1472,44,"captcha_token"],[2186,31,1472,57],[2186,33,1472,59,"options"],[2186,40,1472,66],[2186,41,1472,67,"captchaToken"],[2187,16,1472,80],[2188,14,1473,16],[2188,15,1473,17],[2189,14,1474,16,"headers"],[2189,21,1474,23],[2189,23,1474,25],[2189,27,1474,29],[2189,28,1474,30,"headers"],[2189,35,1474,37],[2190,14,1475,16,"redirectTo"],[2190,24,1475,26],[2190,26,1475,28,"options"],[2190,33,1475,35],[2190,34,1475,36,"redirectTo"],[2191,12,1476,12],[2191,13,1476,13],[2191,14,1476,14],[2192,10,1477,8],[2192,11,1477,9],[2192,12,1478,8],[2192,19,1478,15,"error"],[2192,24,1478,20],[2192,26,1478,22],[2193,12,1479,12],[2193,16,1479,16],[2193,17,1479,17],[2193,18,1479,18],[2193,20,1479,20,"errors_1"],[2193,28,1479,28],[2193,29,1479,29,"isAuthError"],[2193,40,1479,40],[2193,42,1479,42,"error"],[2193,47,1479,47],[2193,48,1479,48],[2193,50,1479,50],[2194,14,1480,16],[2194,21,1480,23],[2195,16,1480,25,"data"],[2195,20,1480,29],[2195,22,1480,31],[2195,26,1480,35],[2196,16,1480,37,"error"],[2197,14,1480,43],[2197,15,1480,44],[2198,12,1481,12],[2199,12,1482,12],[2199,18,1482,18,"error"],[2199,23,1482,23],[2200,10,1483,8],[2201,8,1484,4],[2201,9,1484,5],[2202,8,1484,5],[2202,17,1458,10,"resetPasswordForEmail"],[2202,38,1458,31,"resetPasswordForEmail"],[2202,39,1458,31,"_x38"],[2202,43,1458,31],[2203,10,1458,31],[2203,17,1458,31,"_resetPasswordForEmail"],[2203,39,1458,31],[2203,40,1458,31,"apply"],[2203,45,1458,31],[2203,52,1458,31,"arguments"],[2203,61,1458,31],[2204,8,1458,31],[2205,8,1458,31],[2205,15,1458,10,"resetPasswordForEmail"],[2205,36,1458,31],[2206,6,1458,31],[2207,6,1485,4],[2208,0,1486,0],[2209,0,1487,0],[2210,6,1485,4],[2211,4,1485,4],[2212,6,1485,4,"key"],[2212,9,1485,4],[2213,6,1485,4,"value"],[2213,11,1485,4],[2214,8,1485,4],[2214,12,1485,4,"_getUserIdentities"],[2214,30,1485,4],[2214,33,1485,4,"_asyncToGenerator"],[2214,50,1485,4],[2214,51,1488,4],[2214,64,1488,30],[2215,10,1489,8],[2215,14,1489,12,"_a"],[2215,16,1489,14],[2216,10,1490,8],[2216,14,1490,12],[2217,12,1491,12],[2217,16,1491,12,"_yield$this$getUser"],[2217,35,1491,12],[2217,44,1491,42],[2217,48,1491,46],[2217,49,1491,47,"getUser"],[2217,56,1491,54],[2217,57,1491,55],[2217,58,1491,56],[2218,14,1491,20,"data"],[2218,18,1491,24],[2218,21,1491,24,"_yield$this$getUser"],[2218,40,1491,24],[2218,41,1491,20,"data"],[2218,45,1491,24],[2219,14,1491,26,"error"],[2219,19,1491,31],[2219,22,1491,31,"_yield$this$getUser"],[2219,41,1491,31],[2219,42,1491,26,"error"],[2219,47,1491,31],[2220,12,1492,12],[2220,16,1492,16,"error"],[2220,21,1492,21],[2220,23,1493,16],[2220,29,1493,22,"error"],[2220,34,1493,27],[2221,12,1494,12],[2221,19,1494,19],[2222,14,1494,21,"data"],[2222,18,1494,25],[2222,20,1494,27],[2223,16,1494,29,"identities"],[2223,26,1494,39],[2223,28,1494,41],[2223,29,1494,42,"_a"],[2223,31,1494,44],[2223,34,1494,47,"data"],[2223,38,1494,51],[2223,39,1494,52,"user"],[2223,43,1494,56],[2223,44,1494,57,"identities"],[2223,54,1494,67],[2223,60,1494,73],[2223,64,1494,77],[2223,68,1494,81,"_a"],[2223,70,1494,83],[2223,75,1494,83,"undefined"],[2223,84,1494,94],[2223,87,1494,97,"_a"],[2223,89,1494,99],[2223,92,1494,102],[2224,14,1494,105],[2224,15,1494,106],[2225,14,1494,108,"error"],[2225,19,1494,113],[2225,21,1494,115],[2226,12,1494,120],[2226,13,1494,121],[2227,10,1495,8],[2227,11,1495,9],[2227,12,1496,8],[2227,19,1496,15,"error"],[2227,24,1496,20],[2227,26,1496,22],[2228,12,1497,12],[2228,16,1497,16],[2228,17,1497,17],[2228,18,1497,18],[2228,20,1497,20,"errors_1"],[2228,28,1497,28],[2228,29,1497,29,"isAuthError"],[2228,40,1497,40],[2228,42,1497,42,"error"],[2228,47,1497,47],[2228,48,1497,48],[2228,50,1497,50],[2229,14,1498,16],[2229,21,1498,23],[2230,16,1498,25,"data"],[2230,20,1498,29],[2230,22,1498,31],[2230,26,1498,35],[2231,16,1498,37,"error"],[2232,14,1498,43],[2232,15,1498,44],[2233,12,1499,12],[2234,12,1500,12],[2234,18,1500,18,"error"],[2234,23,1500,23],[2235,10,1501,8],[2236,8,1502,4],[2236,9,1502,5],[2237,8,1502,5],[2237,17,1488,10,"getUserIdentities"],[2237,34,1488,27,"getUserIdentities"],[2237,35,1488,27],[2238,10,1488,27],[2238,17,1488,27,"_getUserIdentities"],[2238,35,1488,27],[2238,36,1488,27,"apply"],[2238,41,1488,27],[2238,48,1488,27,"arguments"],[2238,57,1488,27],[2239,8,1488,27],[2240,8,1488,27],[2240,15,1488,10,"getUserIdentities"],[2240,32,1488,27],[2241,6,1488,27],[2242,6,1503,4],[2243,0,1504,0],[2244,0,1505,0],[2245,0,1506,0],[2246,6,1503,4],[2247,4,1503,4],[2248,6,1503,4,"key"],[2248,9,1503,4],[2249,6,1503,4,"value"],[2249,11,1503,4],[2250,8,1503,4],[2250,12,1503,4,"_linkIdentity"],[2250,25,1503,4],[2250,28,1503,4,"_asyncToGenerator"],[2250,45,1503,4],[2250,46,1507,4],[2250,57,1507,23,"credentials"],[2250,68,1507,34],[2250,70,1507,36],[2251,10,1507,36],[2251,14,1507,36,"_this18"],[2251,21,1507,36],[2252,10,1508,8],[2252,14,1508,12,"_a"],[2252,16,1508,14],[2253,10,1509,8],[2253,14,1509,12],[2254,12,1510,12],[2254,16,1510,12,"_yield$this$_useSessi"],[2254,37,1510,12],[2254,46,1510,42],[2254,50,1510,46],[2254,51,1510,47,"_useSession"],[2254,62,1510,58],[2255,16,1510,58],[2255,20,1510,58,"_ref26"],[2255,26,1510,58],[2255,29,1510,58,"_asyncToGenerator"],[2255,46,1510,58],[2255,47,1510,59],[2255,58,1510,66,"result"],[2255,64,1510,72],[2255,66,1510,77],[2256,18,1511,16],[2256,22,1511,20,"_a"],[2256,24,1511,22],[2256,26,1511,24,"_b"],[2256,28,1511,26],[2256,30,1511,28,"_c"],[2256,32,1511,30],[2256,34,1511,32,"_d"],[2256,36,1511,34],[2256,38,1511,36,"_e"],[2256,40,1511,38],[2257,18,1512,16],[2257,22,1512,24,"data"],[2257,26,1512,28],[2257,29,1512,40,"result"],[2257,35,1512,46],[2257,36,1512,24,"data"],[2257,40,1512,28],[2258,20,1512,30,"error"],[2258,25,1512,35],[2258,28,1512,40,"result"],[2258,34,1512,46],[2258,35,1512,30,"error"],[2258,40,1512,35],[2259,18,1513,16],[2259,22,1513,20,"error"],[2259,27,1513,25],[2259,29,1514,20],[2259,35,1514,26,"error"],[2259,40,1514,31],[2260,18,1515,16],[2260,22,1515,22,"url"],[2260,25,1515,25],[2260,34,1515,34,"_this18"],[2260,41,1515,38],[2260,42,1515,39,"_getUrlForProvider"],[2260,60,1515,57],[2260,61,1515,58],[2260,64,1515,61,"_this18"],[2260,71,1515,65],[2260,72,1515,66,"url"],[2260,75,1515,69],[2260,103,1515,97],[2260,105,1515,99,"credentials"],[2260,116,1515,110],[2260,117,1515,111,"provider"],[2260,125,1515,119],[2260,127,1515,121],[2261,20,1516,20,"redirectTo"],[2261,30,1516,30],[2261,32,1516,32],[2261,33,1516,33,"_a"],[2261,35,1516,35],[2261,38,1516,38,"credentials"],[2261,49,1516,49],[2261,50,1516,50,"options"],[2261,57,1516,57],[2261,63,1516,63],[2261,67,1516,67],[2261,71,1516,71,"_a"],[2261,73,1516,73],[2261,78,1516,73,"undefined"],[2261,87,1516,84],[2261,90,1516,84,"undefined"],[2261,99,1516,84],[2261,102,1516,96,"_a"],[2261,104,1516,98],[2261,105,1516,99,"redirectTo"],[2261,115,1516,109],[2262,20,1517,20,"scopes"],[2262,26,1517,26],[2262,28,1517,28],[2262,29,1517,29,"_b"],[2262,31,1517,31],[2262,34,1517,34,"credentials"],[2262,45,1517,45],[2262,46,1517,46,"options"],[2262,53,1517,53],[2262,59,1517,59],[2262,63,1517,63],[2262,67,1517,67,"_b"],[2262,69,1517,69],[2262,74,1517,69,"undefined"],[2262,83,1517,80],[2262,86,1517,80,"undefined"],[2262,95,1517,80],[2262,98,1517,92,"_b"],[2262,100,1517,94],[2262,101,1517,95,"scopes"],[2262,107,1517,101],[2263,20,1518,20,"queryParams"],[2263,31,1518,31],[2263,33,1518,33],[2263,34,1518,34,"_c"],[2263,36,1518,36],[2263,39,1518,39,"credentials"],[2263,50,1518,50],[2263,51,1518,51,"options"],[2263,58,1518,58],[2263,64,1518,64],[2263,68,1518,68],[2263,72,1518,72,"_c"],[2263,74,1518,74],[2263,79,1518,74,"undefined"],[2263,88,1518,85],[2263,91,1518,85,"undefined"],[2263,100,1518,85],[2263,103,1518,97,"_c"],[2263,105,1518,99],[2263,106,1518,100,"queryParams"],[2263,117,1518,111],[2264,20,1519,20,"skipBrowserRedirect"],[2264,39,1519,39],[2264,41,1519,41],[2265,18,1520,16],[2265,19,1520,17],[2265,20,1520,18],[2266,18,1521,16],[2266,31,1521,29],[2266,32,1521,30],[2266,33,1521,31],[2266,35,1521,33,"fetch_1"],[2266,42,1521,40],[2266,43,1521,41,"_request"],[2266,51,1521,49],[2266,53,1521,51,"_this18"],[2266,60,1521,55],[2266,61,1521,56,"fetch"],[2266,66,1521,61],[2266,68,1521,63],[2266,73,1521,68],[2266,75,1521,70,"url"],[2266,78,1521,73],[2266,80,1521,75],[2267,20,1522,20,"headers"],[2267,27,1522,27],[2267,29,1522,29,"_this18"],[2267,36,1522,33],[2267,37,1522,34,"headers"],[2267,44,1522,41],[2268,20,1523,20,"jwt"],[2268,23,1523,23],[2268,25,1523,25],[2268,26,1523,26,"_e"],[2268,28,1523,28],[2268,31,1523,31],[2268,32,1523,32,"_d"],[2268,34,1523,34],[2268,37,1523,37,"data"],[2268,41,1523,41],[2268,42,1523,42,"session"],[2268,49,1523,49],[2268,55,1523,55],[2268,59,1523,59],[2268,63,1523,63,"_d"],[2268,65,1523,65],[2268,70,1523,65,"undefined"],[2268,79,1523,76],[2268,82,1523,76,"undefined"],[2268,91,1523,76],[2268,94,1523,88,"_d"],[2268,96,1523,90],[2268,97,1523,91,"access_token"],[2268,109,1523,103],[2268,115,1523,109],[2268,119,1523,113],[2268,123,1523,117,"_e"],[2268,125,1523,119],[2268,130,1523,119,"undefined"],[2268,139,1523,130],[2268,142,1523,133,"_e"],[2268,144,1523,135],[2268,147,1523,138,"undefined"],[2269,18,1524,16],[2269,19,1524,17],[2269,20,1524,18],[2270,16,1525,12],[2270,17,1525,13],[2271,16,1525,13],[2271,33,1525,13,"_x40"],[2271,37,1525,13],[2272,18,1525,13],[2272,25,1525,13,"_ref26"],[2272,31,1525,13],[2272,32,1525,13,"apply"],[2272,37,1525,13],[2272,44,1525,13,"arguments"],[2272,53,1525,13],[2273,16,1525,13],[2274,14,1525,13],[2274,18,1525,14],[2275,14,1510,20,"data"],[2275,18,1510,24],[2275,21,1510,24,"_yield$this$_useSessi"],[2275,42,1510,24],[2275,43,1510,20,"data"],[2275,47,1510,24],[2276,14,1510,26,"error"],[2276,19,1510,31],[2276,22,1510,31,"_yield$this$_useSessi"],[2276,43,1510,31],[2276,44,1510,26,"error"],[2276,49,1510,31],[2277,12,1526,12],[2277,16,1526,16,"error"],[2277,21,1526,21],[2277,23,1527,16],[2277,29,1527,22,"error"],[2277,34,1527,27],[2278,12,1528,12],[2278,16,1528,16],[2278,17,1528,17],[2278,18,1528,18],[2278,20,1528,20,"helpers_1"],[2278,29,1528,29],[2278,30,1528,30,"isBrowser"],[2278,39,1528,39],[2278,41,1528,41],[2278,42,1528,42],[2278,46,1528,46],[2278,48,1528,48],[2278,49,1528,49,"_a"],[2278,51,1528,51],[2278,54,1528,54,"credentials"],[2278,65,1528,65],[2278,66,1528,66,"options"],[2278,73,1528,73],[2278,79,1528,79],[2278,83,1528,83],[2278,87,1528,87,"_a"],[2278,89,1528,89],[2278,94,1528,89,"undefined"],[2278,103,1528,100],[2278,106,1528,100,"undefined"],[2278,115,1528,100],[2278,118,1528,112,"_a"],[2278,120,1528,114],[2278,121,1528,115,"skipBrowserRedirect"],[2278,140,1528,134],[2278,141,1528,135],[2278,143,1528,137],[2279,14,1529,16,"window"],[2279,20,1529,22],[2279,21,1529,23,"location"],[2279,29,1529,31],[2279,30,1529,32,"assign"],[2279,36,1529,38],[2279,37,1529,39,"data"],[2279,41,1529,43],[2279,46,1529,48],[2279,50,1529,52],[2279,54,1529,56,"data"],[2279,58,1529,60],[2279,63,1529,60,"undefined"],[2279,72,1529,71],[2279,75,1529,71,"undefined"],[2279,84,1529,71],[2279,87,1529,83,"data"],[2279,91,1529,87],[2279,92,1529,88,"url"],[2279,95,1529,91],[2279,96,1529,92],[2280,12,1530,12],[2281,12,1531,12],[2281,19,1531,19],[2282,14,1531,21,"data"],[2282,18,1531,25],[2282,20,1531,27],[2283,16,1531,29,"provider"],[2283,24,1531,37],[2283,26,1531,39,"credentials"],[2283,37,1531,50],[2283,38,1531,51,"provider"],[2283,46,1531,59],[2284,16,1531,61,"url"],[2284,19,1531,64],[2284,21,1531,66,"data"],[2284,25,1531,70],[2284,30,1531,75],[2284,34,1531,79],[2284,38,1531,83,"data"],[2284,42,1531,87],[2284,47,1531,87,"undefined"],[2284,56,1531,98],[2284,59,1531,98,"undefined"],[2284,68,1531,98],[2284,71,1531,110,"data"],[2284,75,1531,114],[2284,76,1531,115,"url"],[2285,14,1531,119],[2285,15,1531,120],[2286,14,1531,122,"error"],[2286,19,1531,127],[2286,21,1531,129],[2287,12,1531,134],[2287,13,1531,135],[2288,10,1532,8],[2288,11,1532,9],[2288,12,1533,8],[2288,19,1533,15,"error"],[2288,24,1533,20],[2288,26,1533,22],[2289,12,1534,12],[2289,16,1534,16],[2289,17,1534,17],[2289,18,1534,18],[2289,20,1534,20,"errors_1"],[2289,28,1534,28],[2289,29,1534,29,"isAuthError"],[2289,40,1534,40],[2289,42,1534,42,"error"],[2289,47,1534,47],[2289,48,1534,48],[2289,50,1534,50],[2290,14,1535,16],[2290,21,1535,23],[2291,16,1535,25,"data"],[2291,20,1535,29],[2291,22,1535,31],[2292,18,1535,33,"provider"],[2292,26,1535,41],[2292,28,1535,43,"credentials"],[2292,39,1535,54],[2292,40,1535,55,"provider"],[2292,48,1535,63],[2293,18,1535,65,"url"],[2293,21,1535,68],[2293,23,1535,70],[2294,16,1535,75],[2294,17,1535,76],[2295,16,1535,78,"error"],[2296,14,1535,84],[2296,15,1535,85],[2297,12,1536,12],[2298,12,1537,12],[2298,18,1537,18,"error"],[2298,23,1537,23],[2299,10,1538,8],[2300,8,1539,4],[2300,9,1539,5],[2301,8,1539,5],[2301,17,1507,10,"linkIdentity"],[2301,29,1507,22,"linkIdentity"],[2301,30,1507,22,"_x39"],[2301,34,1507,22],[2302,10,1507,22],[2302,17,1507,22,"_linkIdentity"],[2302,30,1507,22],[2302,31,1507,22,"apply"],[2302,36,1507,22],[2302,43,1507,22,"arguments"],[2302,52,1507,22],[2303,8,1507,22],[2304,8,1507,22],[2304,15,1507,10,"linkIdentity"],[2304,27,1507,22],[2305,6,1507,22],[2306,6,1540,4],[2307,0,1541,0],[2308,0,1542,0],[2309,6,1540,4],[2310,4,1540,4],[2311,6,1540,4,"key"],[2311,9,1540,4],[2312,6,1540,4,"value"],[2312,11,1540,4],[2313,8,1540,4],[2313,12,1540,4,"_unlinkIdentity"],[2313,27,1540,4],[2313,30,1540,4,"_asyncToGenerator"],[2313,47,1540,4],[2313,48,1543,4],[2313,59,1543,25,"identity"],[2313,67,1543,33],[2313,69,1543,35],[2314,10,1543,35],[2314,14,1543,35,"_this19"],[2314,21,1543,35],[2315,10,1544,8],[2315,14,1544,12],[2316,12,1545,12],[2316,25,1545,25],[2316,29,1545,29],[2316,30,1545,30,"_useSession"],[2316,41,1545,41],[2317,14,1545,41],[2317,18,1545,41,"_ref27"],[2317,24,1545,41],[2317,27,1545,41,"_asyncToGenerator"],[2317,44,1545,41],[2317,45,1545,42],[2317,56,1545,49,"result"],[2317,62,1545,55],[2317,64,1545,60],[2318,16,1546,16],[2318,20,1546,20,"_a"],[2318,22,1546,22],[2318,24,1546,24,"_b"],[2318,26,1546,26],[2319,16,1547,16],[2319,20,1547,24,"data"],[2319,24,1547,28],[2319,27,1547,40,"result"],[2319,33,1547,46],[2319,34,1547,24,"data"],[2319,38,1547,28],[2320,18,1547,30,"error"],[2320,23,1547,35],[2320,26,1547,40,"result"],[2320,32,1547,46],[2320,33,1547,30,"error"],[2320,38,1547,35],[2321,16,1548,16],[2321,20,1548,20,"error"],[2321,25,1548,25],[2321,27,1548,27],[2322,18,1549,20],[2322,24,1549,26,"error"],[2322,29,1549,31],[2323,16,1550,16],[2324,16,1551,16],[2324,29,1551,29],[2324,30,1551,30],[2324,31,1551,31],[2324,33,1551,33,"fetch_1"],[2324,40,1551,40],[2324,41,1551,41,"_request"],[2324,49,1551,49],[2324,51,1551,51,"_this19"],[2324,58,1551,55],[2324,59,1551,56,"fetch"],[2324,64,1551,61],[2324,66,1551,63],[2324,74,1551,71],[2324,76,1551,73],[2324,79,1551,76,"_this19"],[2324,86,1551,80],[2324,87,1551,81,"url"],[2324,90,1551,84],[2324,110,1551,104,"identity"],[2324,118,1551,112],[2324,119,1551,113,"identity_id"],[2324,130,1551,124],[2324,132,1551,126],[2324,134,1551,128],[2325,18,1552,20,"headers"],[2325,25,1552,27],[2325,27,1552,29,"_this19"],[2325,34,1552,33],[2325,35,1552,34,"headers"],[2325,42,1552,41],[2326,18,1553,20,"jwt"],[2326,21,1553,23],[2326,23,1553,25],[2326,24,1553,26,"_b"],[2326,26,1553,28],[2326,29,1553,31],[2326,30,1553,32,"_a"],[2326,32,1553,34],[2326,35,1553,37,"data"],[2326,39,1553,41],[2326,40,1553,42,"session"],[2326,47,1553,49],[2326,53,1553,55],[2326,57,1553,59],[2326,61,1553,63,"_a"],[2326,63,1553,65],[2326,68,1553,65,"undefined"],[2326,77,1553,76],[2326,80,1553,76,"undefined"],[2326,89,1553,76],[2326,92,1553,88,"_a"],[2326,94,1553,90],[2326,95,1553,91,"access_token"],[2326,107,1553,103],[2326,113,1553,109],[2326,117,1553,113],[2326,121,1553,117,"_b"],[2326,123,1553,119],[2326,128,1553,119,"undefined"],[2326,137,1553,130],[2326,140,1553,133,"_b"],[2326,142,1553,135],[2326,145,1553,138,"undefined"],[2327,16,1554,16],[2327,17,1554,17],[2327,18,1554,18],[2328,14,1555,12],[2328,15,1555,13],[2329,14,1555,13],[2329,31,1555,13,"_x42"],[2329,35,1555,13],[2330,16,1555,13],[2330,23,1555,13,"_ref27"],[2330,29,1555,13],[2330,30,1555,13,"apply"],[2330,35,1555,13],[2330,42,1555,13,"arguments"],[2330,51,1555,13],[2331,14,1555,13],[2332,12,1555,13],[2332,16,1555,14],[2333,10,1556,8],[2333,11,1556,9],[2333,12,1557,8],[2333,19,1557,15,"error"],[2333,24,1557,20],[2333,26,1557,22],[2334,12,1558,12],[2334,16,1558,16],[2334,17,1558,17],[2334,18,1558,18],[2334,20,1558,20,"errors_1"],[2334,28,1558,28],[2334,29,1558,29,"isAuthError"],[2334,40,1558,40],[2334,42,1558,42,"error"],[2334,47,1558,47],[2334,48,1558,48],[2334,50,1558,50],[2335,14,1559,16],[2335,21,1559,23],[2336,16,1559,25,"data"],[2336,20,1559,29],[2336,22,1559,31],[2336,26,1559,35],[2337,16,1559,37,"error"],[2338,14,1559,43],[2338,15,1559,44],[2339,12,1560,12],[2340,12,1561,12],[2340,18,1561,18,"error"],[2340,23,1561,23],[2341,10,1562,8],[2342,8,1563,4],[2342,9,1563,5],[2343,8,1563,5],[2343,17,1543,10,"unlinkIdentity"],[2343,31,1543,24,"unlinkIdentity"],[2343,32,1543,24,"_x41"],[2343,36,1543,24],[2344,10,1543,24],[2344,17,1543,24,"_unlinkIdentity"],[2344,32,1543,24],[2344,33,1543,24,"apply"],[2344,38,1543,24],[2344,45,1543,24,"arguments"],[2344,54,1543,24],[2345,8,1543,24],[2346,8,1543,24],[2346,15,1543,10,"unlinkIdentity"],[2346,29,1543,24],[2347,6,1543,24],[2348,6,1564,4],[2349,0,1565,0],[2350,0,1566,0],[2351,0,1567,0],[2352,6,1564,4],[2353,4,1564,4],[2354,6,1564,4,"key"],[2354,9,1564,4],[2355,6,1564,4,"value"],[2355,11,1564,4],[2356,8,1564,4],[2356,12,1564,4,"_refreshAccessToken2"],[2356,32,1564,4],[2356,35,1564,4,"_asyncToGenerator"],[2356,52,1564,4],[2356,53,1568,4],[2356,64,1568,30,"refreshToken"],[2356,76,1568,42],[2356,78,1568,44],[2357,10,1568,44],[2357,14,1568,44,"_this20"],[2357,21,1568,44],[2358,10,1569,8],[2358,14,1569,14,"debugName"],[2358,23,1569,23],[2358,26,1569,26],[2358,50,1569,50,"refreshToken"],[2358,62,1569,62],[2358,63,1569,63,"substring"],[2358,72,1569,72],[2358,73,1569,73],[2358,74,1569,74],[2358,76,1569,76],[2358,77,1569,77],[2358,78,1569,78],[2358,84,1569,84],[2359,10,1570,8],[2359,14,1570,12],[2359,15,1570,13,"_debug"],[2359,21,1570,19],[2359,22,1570,20,"debugName"],[2359,31,1570,29],[2359,33,1570,31],[2359,40,1570,38],[2359,41,1570,39],[2360,10,1571,8],[2360,14,1571,12],[2361,12,1572,12],[2361,16,1572,18,"startedAt"],[2361,25,1572,27],[2361,28,1572,30,"Date"],[2361,32,1572,34],[2361,33,1572,35,"now"],[2361,36,1572,38],[2361,37,1572,39],[2361,38,1572,40],[2362,12,1573,12],[2363,12,1574,12],[2363,25,1574,25],[2363,26,1574,26],[2363,27,1574,27],[2363,29,1574,29,"helpers_1"],[2363,38,1574,38],[2363,39,1574,39,"retryable"],[2363,48,1574,48],[2364,14,1574,48],[2364,18,1574,48,"_ref28"],[2364,24,1574,48],[2364,27,1574,48,"_asyncToGenerator"],[2364,44,1574,48],[2364,45,1574,50],[2364,56,1574,57,"attempt"],[2364,63,1574,64],[2364,65,1574,69],[2365,16,1575,16],[2365,20,1575,20,"attempt"],[2365,27,1575,27],[2365,30,1575,30],[2365,31,1575,31],[2365,33,1575,33],[2366,18,1576,20],[2366,24,1576,26],[2366,25,1576,27],[2366,26,1576,28],[2366,28,1576,30,"helpers_1"],[2366,37,1576,39],[2366,38,1576,40,"sleep"],[2366,43,1576,45],[2366,45,1576,47],[2366,48,1576,50],[2366,51,1576,53,"Math"],[2366,55,1576,57],[2366,56,1576,58,"pow"],[2366,59,1576,61],[2366,60,1576,62],[2366,61,1576,63],[2366,63,1576,65,"attempt"],[2366,70,1576,72],[2366,73,1576,75],[2366,74,1576,76],[2366,75,1576,77],[2366,76,1576,78],[2366,77,1576,79],[2366,78,1576,80],[2367,16,1577,16],[2368,16,1578,16,"_this20"],[2368,23,1578,20],[2368,24,1578,21,"_debug"],[2368,30,1578,27],[2368,31,1578,28,"debugName"],[2368,40,1578,37],[2368,42,1578,39],[2368,62,1578,59],[2368,64,1578,61,"attempt"],[2368,71,1578,68],[2368,72,1578,69],[2369,16,1579,16],[2369,29,1579,29],[2369,30,1579,30],[2369,31,1579,31],[2369,33,1579,33,"fetch_1"],[2369,40,1579,40],[2369,41,1579,41,"_request"],[2369,49,1579,49],[2369,51,1579,51,"_this20"],[2369,58,1579,55],[2369,59,1579,56,"fetch"],[2369,64,1579,61],[2369,66,1579,63],[2369,72,1579,69],[2369,74,1579,71],[2369,77,1579,74,"_this20"],[2369,84,1579,78],[2369,85,1579,79,"url"],[2369,88,1579,82],[2369,121,1579,115],[2369,123,1579,117],[2370,18,1580,20,"body"],[2370,22,1580,24],[2370,24,1580,26],[2371,20,1580,28,"refresh_token"],[2371,33,1580,41],[2371,35,1580,43,"refreshToken"],[2372,18,1580,56],[2372,19,1580,57],[2373,18,1581,20,"headers"],[2373,25,1581,27],[2373,27,1581,29,"_this20"],[2373,34,1581,33],[2373,35,1581,34,"headers"],[2373,42,1581,41],[2374,18,1582,20,"xform"],[2374,23,1582,25],[2374,25,1582,27,"fetch_1"],[2374,32,1582,34],[2374,33,1582,35,"_sessionResponse"],[2375,16,1583,16],[2375,17,1583,17],[2375,18,1583,18],[2376,14,1584,12],[2376,15,1584,13],[2377,14,1584,13],[2377,31,1584,13,"_x44"],[2377,35,1584,13],[2378,16,1584,13],[2378,23,1584,13,"_ref28"],[2378,29,1584,13],[2378,30,1584,13,"apply"],[2378,35,1584,13],[2378,42,1584,13,"arguments"],[2378,51,1584,13],[2379,14,1584,13],[2380,12,1584,13],[2380,17,1584,15],[2380,18,1584,16,"attempt"],[2380,25,1584,23],[2380,27,1584,25,"error"],[2380,32,1584,30],[2380,37,1584,35],[2381,14,1585,16],[2381,18,1585,22,"nextBackOffInterval"],[2381,37,1585,41],[2381,40,1585,44],[2381,43,1585,47],[2381,46,1585,50,"Math"],[2381,50,1585,54],[2381,51,1585,55,"pow"],[2381,54,1585,58],[2381,55,1585,59],[2381,56,1585,60],[2381,58,1585,62,"attempt"],[2381,65,1585,69],[2381,66,1585,70],[2382,14,1586,16],[2382,21,1586,24,"error"],[2382,26,1586,29],[2382,30,1587,20],[2382,31,1587,21],[2382,32,1587,22],[2382,34,1587,24,"errors_1"],[2382,42,1587,32],[2382,43,1587,33,"isAuthRetryableFetchError"],[2382,68,1587,58],[2382,70,1587,60,"error"],[2382,75,1587,65],[2382,76,1587,66],[2383,14,1588,20],[2384,14,1589,20,"Date"],[2384,18,1589,24],[2384,19,1589,25,"now"],[2384,22,1589,28],[2384,23,1589,29],[2384,24,1589,30],[2384,27,1589,33,"nextBackOffInterval"],[2384,46,1589,52],[2384,49,1589,55,"startedAt"],[2384,58,1589,64],[2384,61,1589,67,"constants_1"],[2384,72,1589,78],[2384,73,1589,79,"AUTO_REFRESH_TICK_DURATION_MS"],[2384,102,1589,108],[2385,12,1590,12],[2385,13,1590,13],[2385,14,1590,14],[2386,10,1591,8],[2386,11,1591,9],[2386,12,1592,8],[2386,19,1592,15,"error"],[2386,24,1592,20],[2386,26,1592,22],[2387,12,1593,12],[2387,16,1593,16],[2387,17,1593,17,"_debug"],[2387,23,1593,23],[2387,24,1593,24,"debugName"],[2387,33,1593,33],[2387,35,1593,35],[2387,42,1593,42],[2387,44,1593,44,"error"],[2387,49,1593,49],[2387,50,1593,50],[2388,12,1594,12],[2388,16,1594,16],[2388,17,1594,17],[2388,18,1594,18],[2388,20,1594,20,"errors_1"],[2388,28,1594,28],[2388,29,1594,29,"isAuthError"],[2388,40,1594,40],[2388,42,1594,42,"error"],[2388,47,1594,47],[2388,48,1594,48],[2388,50,1594,50],[2389,14,1595,16],[2389,21,1595,23],[2390,16,1595,25,"data"],[2390,20,1595,29],[2390,22,1595,31],[2391,18,1595,33,"session"],[2391,25,1595,40],[2391,27,1595,42],[2391,31,1595,46],[2392,18,1595,48,"user"],[2392,22,1595,52],[2392,24,1595,54],[2393,16,1595,59],[2393,17,1595,60],[2394,16,1595,62,"error"],[2395,14,1595,68],[2395,15,1595,69],[2396,12,1596,12],[2397,12,1597,12],[2397,18,1597,18,"error"],[2397,23,1597,23],[2398,10,1598,8],[2398,11,1598,9],[2398,20,1599,16],[2399,12,1600,12],[2399,16,1600,16],[2399,17,1600,17,"_debug"],[2399,23,1600,23],[2399,24,1600,24,"debugName"],[2399,33,1600,33],[2399,35,1600,35],[2399,40,1600,40],[2399,41,1600,41],[2400,10,1601,8],[2401,8,1602,4],[2401,9,1602,5],[2402,8,1602,5],[2402,17,1568,10,"_refreshAccessToken"],[2402,36,1568,29,"_refreshAccessToken"],[2402,37,1568,29,"_x43"],[2402,41,1568,29],[2403,10,1568,29],[2403,17,1568,29,"_refreshAccessToken2"],[2403,37,1568,29],[2403,38,1568,29,"apply"],[2403,43,1568,29],[2403,50,1568,29,"arguments"],[2403,59,1568,29],[2404,8,1568,29],[2405,8,1568,29],[2405,15,1568,10,"_refreshAccessToken"],[2405,34,1568,29],[2406,6,1568,29],[2407,4,1568,29],[2408,6,1568,29,"key"],[2408,9,1568,29],[2409,6,1568,29,"value"],[2409,11,1568,29],[2409,13,1603,4],[2409,22,1603,4,"_isValidSession"],[2409,37,1603,19,"_isValidSession"],[2409,38,1603,20,"maybeSession"],[2409,50,1603,32],[2409,52,1603,34],[2410,8,1604,8],[2410,12,1604,14,"isValidSession"],[2410,26,1604,28],[2410,29,1604,31],[2410,36,1604,38,"maybeSession"],[2410,48,1604,50],[2410,53,1604,55],[2410,61,1604,63],[2410,65,1605,12,"maybeSession"],[2410,77,1605,24],[2410,82,1605,29],[2410,86,1605,33],[2410,90,1606,12],[2410,104,1606,26],[2410,108,1606,30,"maybeSession"],[2410,120,1606,42],[2410,124,1607,12],[2410,139,1607,27],[2410,143,1607,31,"maybeSession"],[2410,155,1607,43],[2410,159,1608,12],[2410,171,1608,24],[2410,175,1608,28,"maybeSession"],[2410,187,1608,40],[2411,8,1609,8],[2411,15,1609,15,"isValidSession"],[2411,29,1609,29],[2412,6,1610,4],[2413,4,1610,5],[2414,6,1610,5,"key"],[2414,9,1610,5],[2415,6,1610,5,"value"],[2415,11,1610,5],[2416,8,1610,5],[2416,12,1610,5,"_handleProviderSignIn2"],[2416,34,1610,5],[2416,37,1610,5,"_asyncToGenerator"],[2416,54,1610,5],[2416,55,1611,4],[2416,66,1611,32,"provider"],[2416,74,1611,40],[2416,76,1611,42,"options"],[2416,83,1611,49],[2416,85,1611,51],[2417,10,1612,8],[2417,14,1612,14,"url"],[2417,17,1612,17],[2417,26,1612,26],[2417,30,1612,30],[2417,31,1612,31,"_getUrlForProvider"],[2417,49,1612,49],[2417,50,1612,50],[2417,53,1612,53],[2417,57,1612,57],[2417,58,1612,58,"url"],[2417,61,1612,61],[2417,73,1612,73],[2417,75,1612,75,"provider"],[2417,83,1612,83],[2417,85,1612,85],[2418,12,1613,12,"redirectTo"],[2418,22,1613,22],[2418,24,1613,24,"options"],[2418,31,1613,31],[2418,32,1613,32,"redirectTo"],[2418,42,1613,42],[2419,12,1614,12,"scopes"],[2419,18,1614,18],[2419,20,1614,20,"options"],[2419,27,1614,27],[2419,28,1614,28,"scopes"],[2419,34,1614,34],[2420,12,1615,12,"queryParams"],[2420,23,1615,23],[2420,25,1615,25,"options"],[2420,32,1615,32],[2420,33,1615,33,"queryParams"],[2421,10,1616,8],[2421,11,1616,9],[2421,12,1616,10],[2422,10,1617,8],[2422,14,1617,12],[2422,15,1617,13,"_debug"],[2422,21,1617,19],[2422,22,1617,20],[2422,48,1617,46],[2422,50,1617,48],[2422,60,1617,58],[2422,62,1617,60,"provider"],[2422,70,1617,68],[2422,72,1617,70],[2422,81,1617,79],[2422,83,1617,81,"options"],[2422,90,1617,88],[2422,92,1617,90],[2422,97,1617,95],[2422,99,1617,97,"url"],[2422,102,1617,100],[2422,103,1617,101],[2423,10,1618,8],[2424,10,1619,8],[2424,14,1619,12],[2424,15,1619,13],[2424,16,1619,14],[2424,18,1619,16,"helpers_1"],[2424,27,1619,25],[2424,28,1619,26,"isBrowser"],[2424,37,1619,35],[2424,39,1619,37],[2424,40,1619,38],[2424,44,1619,42],[2424,45,1619,43,"options"],[2424,52,1619,50],[2424,53,1619,51,"skipBrowserRedirect"],[2424,72,1619,70],[2424,74,1619,72],[2425,12,1620,12,"window"],[2425,18,1620,18],[2425,19,1620,19,"location"],[2425,27,1620,27],[2425,28,1620,28,"assign"],[2425,34,1620,34],[2425,35,1620,35,"url"],[2425,38,1620,38],[2425,39,1620,39],[2426,10,1621,8],[2427,10,1622,8],[2427,17,1622,15],[2428,12,1622,17,"data"],[2428,16,1622,21],[2428,18,1622,23],[2429,14,1622,25,"provider"],[2429,22,1622,33],[2430,14,1622,35,"url"],[2431,12,1622,39],[2431,13,1622,40],[2432,12,1622,42,"error"],[2432,17,1622,47],[2432,19,1622,49],[2433,10,1622,54],[2433,11,1622,55],[2434,8,1623,4],[2434,9,1623,5],[2435,8,1623,5],[2435,17,1611,10,"_handleProviderSignIn"],[2435,38,1611,31,"_handleProviderSignIn"],[2435,39,1611,31,"_x45"],[2435,43,1611,31],[2435,45,1611,31,"_x46"],[2435,49,1611,31],[2436,10,1611,31],[2436,17,1611,31,"_handleProviderSignIn2"],[2436,39,1611,31],[2436,40,1611,31,"apply"],[2436,45,1611,31],[2436,52,1611,31,"arguments"],[2436,61,1611,31],[2437,8,1611,31],[2438,8,1611,31],[2438,15,1611,10,"_handleProviderSignIn"],[2438,36,1611,31],[2439,6,1611,31],[2440,6,1624,4],[2441,0,1625,0],[2442,0,1626,0],[2443,0,1627,0],[2444,4,1624,4],[2445,6,1624,4,"key"],[2445,9,1624,4],[2446,6,1624,4,"value"],[2446,11,1624,4],[2447,8,1624,4],[2447,12,1624,4,"_recoverAndRefresh2"],[2447,31,1624,4],[2447,34,1624,4,"_asyncToGenerator"],[2447,51,1624,4],[2447,52,1628,4],[2447,65,1628,31],[2448,10,1629,8],[2448,14,1629,12,"_a"],[2448,16,1629,14],[2448,18,1629,16,"_b"],[2448,20,1629,18],[2449,10,1630,8],[2449,14,1630,14,"debugName"],[2449,23,1630,23],[2449,26,1630,26],[2449,49,1630,49],[2450,10,1631,8],[2450,14,1631,12],[2450,15,1631,13,"_debug"],[2450,21,1631,19],[2450,22,1631,20,"debugName"],[2450,31,1631,29],[2450,33,1631,31],[2450,40,1631,38],[2450,41,1631,39],[2451,10,1632,8],[2451,14,1632,12],[2452,12,1633,12],[2452,16,1633,18,"currentSession"],[2452,30,1633,32],[2452,39,1633,42],[2452,40,1633,43],[2452,41,1633,44],[2452,43,1633,46,"helpers_1"],[2452,52,1633,55],[2452,53,1633,56,"getItemAsync"],[2452,65,1633,68],[2452,67,1633,70],[2452,71,1633,74],[2452,72,1633,75,"storage"],[2452,79,1633,82],[2452,81,1633,84],[2452,85,1633,88],[2452,86,1633,89,"storageKey"],[2452,96,1633,99],[2452,97,1633,101],[2453,12,1634,12],[2453,16,1634,16,"currentSession"],[2453,30,1634,30],[2453,34,1634,34],[2453,38,1634,38],[2453,39,1634,39,"userStorage"],[2453,50,1634,50],[2453,52,1634,52],[2454,14,1635,16],[2454,18,1635,20,"maybeUser"],[2454,27,1635,29],[2454,36,1635,39],[2454,37,1635,40],[2454,38,1635,41],[2454,40,1635,43,"helpers_1"],[2454,49,1635,52],[2454,50,1635,53,"getItemAsync"],[2454,62,1635,65],[2454,64,1635,67],[2454,68,1635,71],[2454,69,1635,72,"userStorage"],[2454,80,1635,83],[2454,82,1635,85],[2454,86,1635,89],[2454,87,1635,90,"storageKey"],[2454,97,1635,100],[2454,100,1635,103],[2454,107,1635,110],[2454,108,1635,112],[2455,14,1636,16],[2455,18,1636,20],[2455,19,1636,21],[2455,23,1636,25],[2455,24,1636,26,"storage"],[2455,31,1636,33],[2455,32,1636,34,"isServer"],[2455,40,1636,42],[2455,44,1636,46,"Object"],[2455,50,1636,52],[2455,51,1636,53,"is"],[2455,53,1636,55],[2455,54,1636,56],[2455,58,1636,60],[2455,59,1636,61,"storage"],[2455,66,1636,68],[2455,68,1636,70],[2455,72,1636,74],[2455,73,1636,75,"userStorage"],[2455,84,1636,86],[2455,85,1636,87],[2455,89,1636,91],[2455,90,1636,92,"maybeUser"],[2455,99,1636,101],[2455,101,1636,103],[2456,16,1637,20],[2457,16,1638,20],[2458,16,1639,20],[2459,16,1640,20],[2460,16,1641,20,"maybeUser"],[2460,25,1641,29],[2460,28,1641,32],[2461,18,1641,34,"user"],[2461,22,1641,38],[2461,24,1641,40,"currentSession"],[2461,38,1641,54],[2461,39,1641,55,"user"],[2462,16,1641,60],[2462,17,1641,61],[2463,16,1642,20],[2463,22,1642,26],[2463,23,1642,27],[2463,24,1642,28],[2463,26,1642,30,"helpers_1"],[2463,35,1642,39],[2463,36,1642,40,"setItemAsync"],[2463,48,1642,52],[2463,50,1642,54],[2463,54,1642,58],[2463,55,1642,59,"userStorage"],[2463,66,1642,70],[2463,68,1642,72],[2463,72,1642,76],[2463,73,1642,77,"storageKey"],[2463,83,1642,87],[2463,86,1642,90],[2463,93,1642,97],[2463,95,1642,99,"maybeUser"],[2463,104,1642,108],[2463,105,1642,109],[2464,14,1643,16],[2465,14,1644,16,"currentSession"],[2465,28,1644,30],[2465,29,1644,31,"user"],[2465,33,1644,35],[2465,36,1644,38],[2465,37,1644,39,"_a"],[2465,39,1644,41],[2465,42,1644,44,"maybeUser"],[2465,51,1644,53],[2465,56,1644,58],[2465,60,1644,62],[2465,64,1644,66,"maybeUser"],[2465,73,1644,75],[2465,78,1644,75,"undefined"],[2465,87,1644,86],[2465,90,1644,86,"undefined"],[2465,99,1644,86],[2465,102,1644,98,"maybeUser"],[2465,111,1644,107],[2465,112,1644,108,"user"],[2465,116,1644,112],[2465,122,1644,118],[2465,126,1644,122],[2465,130,1644,126,"_a"],[2465,132,1644,128],[2465,137,1644,128,"undefined"],[2465,146,1644,139],[2465,149,1644,142,"_a"],[2465,151,1644,144],[2465,154,1644,147],[2465,155,1644,148],[2465,156,1644,149],[2465,158,1644,151,"helpers_1"],[2465,167,1644,160],[2465,168,1644,161,"userNotAvailableProxy"],[2465,189,1644,182],[2465,191,1644,184],[2465,192,1644,185],[2466,12,1645,12],[2466,13,1645,13],[2466,19,1646,17],[2466,23,1646,21,"currentSession"],[2466,37,1646,35],[2466,41,1646,39],[2466,42,1646,40,"currentSession"],[2466,56,1646,54],[2466,57,1646,55,"user"],[2466,61,1646,59],[2466,63,1646,61],[2467,14,1647,16],[2468,14,1648,16],[2469,14,1649,16],[2469,18,1649,20],[2469,19,1649,21,"currentSession"],[2469,33,1649,35],[2469,34,1649,36,"user"],[2469,38,1649,40],[2469,40,1649,42],[2470,16,1650,20],[2471,16,1651,20],[2471,20,1651,26,"separateUser"],[2471,32,1651,38],[2471,41,1651,48],[2471,42,1651,49],[2471,43,1651,50],[2471,45,1651,52,"helpers_1"],[2471,54,1651,61],[2471,55,1651,62,"getItemAsync"],[2471,67,1651,74],[2471,69,1651,76],[2471,73,1651,80],[2471,74,1651,81,"storage"],[2471,81,1651,88],[2471,83,1651,90],[2471,87,1651,94],[2471,88,1651,95,"storageKey"],[2471,98,1651,105],[2471,101,1651,108],[2471,108,1651,115],[2471,109,1651,117],[2472,16,1652,20],[2472,20,1652,24,"separateUser"],[2472,32,1652,36],[2472,37,1652,41,"separateUser"],[2472,49,1652,53],[2472,54,1652,58],[2472,58,1652,62],[2472,62,1652,66,"separateUser"],[2472,74,1652,78],[2472,79,1652,78,"undefined"],[2472,88,1652,89],[2472,91,1652,89,"undefined"],[2472,100,1652,89],[2472,103,1652,101,"separateUser"],[2472,115,1652,113],[2472,116,1652,114,"user"],[2472,120,1652,118],[2472,121,1652,119],[2472,123,1652,121],[2473,18,1653,24,"currentSession"],[2473,32,1653,38],[2473,33,1653,39,"user"],[2473,37,1653,43],[2473,40,1653,46,"separateUser"],[2473,52,1653,58],[2473,53,1653,59,"user"],[2473,57,1653,63],[2474,18,1654,24],[2474,24,1654,30],[2474,25,1654,31],[2474,26,1654,32],[2474,28,1654,34,"helpers_1"],[2474,37,1654,43],[2474,38,1654,44,"removeItemAsync"],[2474,53,1654,59],[2474,55,1654,61],[2474,59,1654,65],[2474,60,1654,66,"storage"],[2474,67,1654,73],[2474,69,1654,75],[2474,73,1654,79],[2474,74,1654,80,"storageKey"],[2474,84,1654,90],[2474,87,1654,93],[2474,94,1654,100],[2474,95,1654,101],[2475,18,1655,24],[2475,24,1655,30],[2475,25,1655,31],[2475,26,1655,32],[2475,28,1655,34,"helpers_1"],[2475,37,1655,43],[2475,38,1655,44,"setItemAsync"],[2475,50,1655,56],[2475,52,1655,58],[2475,56,1655,62],[2475,57,1655,63,"storage"],[2475,64,1655,70],[2475,66,1655,72],[2475,70,1655,76],[2475,71,1655,77,"storageKey"],[2475,81,1655,87],[2475,83,1655,89,"currentSession"],[2475,97,1655,103],[2475,98,1655,104],[2476,16,1656,20],[2476,17,1656,21],[2476,23,1657,25],[2477,18,1658,24,"currentSession"],[2477,32,1658,38],[2477,33,1658,39,"user"],[2477,37,1658,43],[2477,40,1658,46],[2477,41,1658,47],[2477,42,1658,48],[2477,44,1658,50,"helpers_1"],[2477,53,1658,59],[2477,54,1658,60,"userNotAvailableProxy"],[2477,75,1658,81],[2477,77,1658,83],[2477,78,1658,84],[2478,16,1659,20],[2479,14,1660,16],[2480,12,1661,12],[2481,12,1662,12],[2481,16,1662,16],[2481,17,1662,17,"_debug"],[2481,23,1662,23],[2481,24,1662,24,"debugName"],[2481,33,1662,33],[2481,35,1662,35],[2481,57,1662,57],[2481,59,1662,59,"currentSession"],[2481,73,1662,73],[2481,74,1662,74],[2482,12,1663,12],[2482,16,1663,16],[2482,17,1663,17],[2482,21,1663,21],[2482,22,1663,22,"_isValidSession"],[2482,37,1663,37],[2482,38,1663,38,"currentSession"],[2482,52,1663,52],[2482,53,1663,53],[2482,55,1663,55],[2483,14,1664,16],[2483,18,1664,20],[2483,19,1664,21,"_debug"],[2483,25,1664,27],[2483,26,1664,28,"debugName"],[2483,35,1664,37],[2483,37,1664,39],[2483,59,1664,61],[2483,60,1664,62],[2484,14,1665,16],[2484,18,1665,20,"currentSession"],[2484,32,1665,34],[2484,37,1665,39],[2484,41,1665,43],[2484,43,1665,45],[2485,16,1666,20],[2485,22,1666,26],[2485,26,1666,30],[2485,27,1666,31,"_removeSession"],[2485,41,1666,45],[2485,42,1666,46],[2485,43,1666,47],[2486,14,1667,16],[2487,14,1668,16],[2488,12,1669,12],[2489,12,1670,12],[2489,16,1670,18,"expiresWithMargin"],[2489,33,1670,35],[2489,36,1670,38],[2489,37,1670,39],[2489,38,1670,40,"_b"],[2489,40,1670,42],[2489,43,1670,45,"currentSession"],[2489,57,1670,59],[2489,58,1670,60,"expires_at"],[2489,68,1670,70],[2489,74,1670,76],[2489,78,1670,80],[2489,82,1670,84,"_b"],[2489,84,1670,86],[2489,89,1670,86,"undefined"],[2489,98,1670,97],[2489,101,1670,100,"_b"],[2489,103,1670,102],[2489,106,1670,105,"Infinity"],[2489,114,1670,113],[2489,118,1670,117],[2489,122,1670,121],[2489,125,1670,124,"Date"],[2489,129,1670,128],[2489,130,1670,129,"now"],[2489,133,1670,132],[2489,134,1670,133],[2489,135,1670,134],[2489,138,1670,137,"constants_1"],[2489,149,1670,148],[2489,150,1670,149,"EXPIRY_MARGIN_MS"],[2489,166,1670,165],[2490,12,1671,12],[2490,16,1671,16],[2490,17,1671,17,"_debug"],[2490,23,1671,23],[2490,24,1671,24,"debugName"],[2490,33,1671,33],[2490,35,1671,35],[2490,49,1671,49,"expiresWithMargin"],[2490,66,1671,66],[2490,69,1671,69],[2490,71,1671,71],[2490,74,1671,74],[2490,80,1671,80],[2490,107,1671,107,"constants_1"],[2490,118,1671,118],[2490,119,1671,119,"EXPIRY_MARGIN_MS"],[2490,135,1671,135],[2490,138,1671,138],[2490,139,1671,139],[2491,12,1672,12],[2491,16,1672,16,"expiresWithMargin"],[2491,33,1672,33],[2491,35,1672,35],[2492,14,1673,16],[2492,18,1673,20],[2492,22,1673,24],[2492,23,1673,25,"autoRefreshToken"],[2492,39,1673,41],[2492,43,1673,45,"currentSession"],[2492,57,1673,59],[2492,58,1673,60,"refresh_token"],[2492,71,1673,73],[2492,73,1673,75],[2493,16,1674,20],[2493,20,1674,20,"_yield$this$_callRefr3"],[2493,42,1674,20],[2493,51,1674,44],[2493,55,1674,48],[2493,56,1674,49,"_callRefreshToken"],[2493,73,1674,66],[2493,74,1674,67,"currentSession"],[2493,88,1674,81],[2493,89,1674,82,"refresh_token"],[2493,102,1674,95],[2493,103,1674,96],[2494,18,1674,28,"error"],[2494,23,1674,33],[2494,26,1674,33,"_yield$this$_callRefr3"],[2494,48,1674,33],[2494,49,1674,28,"error"],[2494,54,1674,33],[2495,16,1675,20],[2495,20,1675,24,"error"],[2495,25,1675,29],[2495,27,1675,31],[2496,18,1677,24],[2496,22,1677,28],[2496,23,1677,29],[2496,24,1677,30],[2496,25,1677,31],[2496,27,1677,33,"errors_1"],[2496,35,1677,41],[2496,36,1677,42,"isAuthRetryableFetchError"],[2496,61,1677,67],[2496,63,1677,69,"error"],[2496,68,1677,74],[2496,69,1677,75],[2496,71,1677,77],[2497,20,1678,28],[2497,24,1678,32],[2497,25,1678,33,"_debug"],[2497,31,1678,39],[2497,32,1678,40,"debugName"],[2497,41,1678,49],[2497,43,1678,51],[2497,108,1678,116],[2497,110,1678,118,"error"],[2497,115,1678,123],[2497,116,1678,124],[2498,20,1679,28],[2498,26,1679,34],[2498,30,1679,38],[2498,31,1679,39,"_removeSession"],[2498,45,1679,53],[2498,46,1679,54],[2498,47,1679,55],[2499,18,1680,24],[2500,16,1681,20],[2501,14,1682,16],[2502,12,1683,12],[2502,13,1683,13],[2502,19,1684,17],[2502,23,1684,21,"currentSession"],[2502,37,1684,35],[2502,38,1684,36,"user"],[2502,42,1684,40],[2502,46,1685,16,"currentSession"],[2502,60,1685,30],[2502,61,1685,31,"user"],[2502,65,1685,35],[2502,66,1685,36,"__isUserNotAvailableProxy"],[2502,91,1685,61],[2502,96,1685,66],[2502,100,1685,70],[2502,102,1685,72],[2503,14,1686,16],[2504,14,1687,16],[2504,18,1687,20],[2505,16,1688,20],[2505,20,1688,20,"_yield$this$_getUser3"],[2505,41,1688,20],[2505,50,1688,61],[2505,54,1688,65],[2505,55,1688,66,"_getUser"],[2505,63,1688,74],[2505,64,1688,75,"currentSession"],[2505,78,1688,89],[2505,79,1688,90,"access_token"],[2505,91,1688,102],[2505,92,1688,103],[2506,18,1688,28,"data"],[2506,22,1688,32],[2506,25,1688,32,"_yield$this$_getUser3"],[2506,46,1688,32],[2506,47,1688,28,"data"],[2506,51,1688,32],[2507,18,1688,41,"userError"],[2507,27,1688,50],[2507,30,1688,50,"_yield$this$_getUser3"],[2507,51,1688,50],[2507,52,1688,34,"error"],[2507,57,1688,39],[2508,16,1689,20],[2508,20,1689,24],[2508,21,1689,25,"userError"],[2508,30,1689,34],[2508,35,1689,39,"data"],[2508,39,1689,43],[2508,44,1689,48],[2508,48,1689,52],[2508,52,1689,56,"data"],[2508,56,1689,60],[2508,61,1689,60,"undefined"],[2508,70,1689,71],[2508,73,1689,71,"undefined"],[2508,82,1689,71],[2508,85,1689,83,"data"],[2508,89,1689,87],[2508,90,1689,88,"user"],[2508,94,1689,92],[2508,95,1689,93],[2508,97,1689,95],[2509,18,1690,24,"currentSession"],[2509,32,1690,38],[2509,33,1690,39,"user"],[2509,37,1690,43],[2509,40,1690,46,"data"],[2509,44,1690,50],[2509,45,1690,51,"user"],[2509,49,1690,55],[2510,18,1691,24],[2510,24,1691,30],[2510,28,1691,34],[2510,29,1691,35,"_saveSession"],[2510,41,1691,47],[2510,42,1691,48,"currentSession"],[2510,56,1691,62],[2510,57,1691,63],[2511,18,1692,24],[2511,24,1692,30],[2511,28,1692,34],[2511,29,1692,35,"_notifyAllSubscribers"],[2511,50,1692,56],[2511,51,1692,57],[2511,62,1692,68],[2511,64,1692,70,"currentSession"],[2511,78,1692,84],[2511,79,1692,85],[2512,16,1693,20],[2512,17,1693,21],[2512,23,1694,25],[2513,18,1695,24],[2513,22,1695,28],[2513,23,1695,29,"_debug"],[2513,29,1695,35],[2513,30,1695,36,"debugName"],[2513,39,1695,45],[2513,41,1695,47],[2513,99,1695,105],[2513,100,1695,106],[2514,16,1696,20],[2515,14,1697,16],[2515,15,1697,17],[2515,16,1698,16],[2515,23,1698,23,"getUserError"],[2515,35,1698,35],[2515,37,1698,37],[2516,16,1700,20],[2516,20,1700,24],[2516,21,1700,25,"_debug"],[2516,27,1700,31],[2516,28,1700,32,"debugName"],[2516,37,1700,41],[2516,39,1700,43],[2516,97,1700,101],[2516,99,1700,103,"getUserError"],[2516,111,1700,115],[2516,112,1700,116],[2517,14,1701,16],[2518,12,1702,12],[2518,13,1702,13],[2518,19,1703,17],[2519,14,1704,16],[2520,14,1705,16],[2521,14,1706,16],[2522,14,1707,16],[2522,20,1707,22],[2522,24,1707,26],[2522,25,1707,27,"_notifyAllSubscribers"],[2522,46,1707,48],[2522,47,1707,49],[2522,58,1707,60],[2522,60,1707,62,"currentSession"],[2522,74,1707,76],[2522,75,1707,77],[2523,12,1708,12],[2524,10,1709,8],[2524,11,1709,9],[2524,12,1710,8],[2524,19,1710,15,"err"],[2524,22,1710,18],[2524,24,1710,20],[2525,12,1711,12],[2525,16,1711,16],[2525,17,1711,17,"_debug"],[2525,23,1711,23],[2525,24,1711,24,"debugName"],[2525,33,1711,33],[2525,35,1711,35],[2525,42,1711,42],[2525,44,1711,44,"err"],[2525,47,1711,47],[2525,48,1711,48],[2526,12,1713,12],[2527,10,1714,8],[2527,11,1714,9],[2527,20,1715,16],[2528,12,1716,12],[2528,16,1716,16],[2528,17,1716,17,"_debug"],[2528,23,1716,23],[2528,24,1716,24,"debugName"],[2528,33,1716,33],[2528,35,1716,35],[2528,40,1716,40],[2528,41,1716,41],[2529,10,1717,8],[2530,8,1718,4],[2530,9,1718,5],[2531,8,1718,5],[2531,17,1628,10,"_recoverAndRefresh"],[2531,35,1628,28,"_recoverAndRefresh"],[2531,36,1628,28],[2532,10,1628,28],[2532,17,1628,28,"_recoverAndRefresh2"],[2532,36,1628,28],[2532,37,1628,28,"apply"],[2532,42,1628,28],[2532,49,1628,28,"arguments"],[2532,58,1628,28],[2533,8,1628,28],[2534,8,1628,28],[2534,15,1628,10,"_recoverAndRefresh"],[2534,33,1628,28],[2535,6,1628,28],[2536,4,1628,28],[2537,6,1628,28,"key"],[2537,9,1628,28],[2538,6,1628,28,"value"],[2538,11,1628,28],[2539,8,1628,28],[2539,12,1628,28,"_callRefreshToken2"],[2539,30,1628,28],[2539,33,1628,28,"_asyncToGenerator"],[2539,50,1628,28],[2539,51,1719,4],[2539,62,1719,28,"refreshToken"],[2539,74,1719,40],[2539,76,1719,42],[2540,10,1720,8],[2540,14,1720,12,"_a"],[2540,16,1720,14],[2540,18,1720,16,"_b"],[2540,20,1720,18],[2541,10,1721,8],[2541,14,1721,12],[2541,15,1721,13,"refreshToken"],[2541,27,1721,25],[2541,29,1721,27],[2542,12,1722,12],[2542,18,1722,18],[2542,22,1722,22,"errors_1"],[2542,30,1722,30],[2542,31,1722,31,"AuthSessionMissingError"],[2542,54,1722,54],[2542,55,1722,55],[2542,56,1722,56],[2543,10,1723,8],[2544,10,1724,8],[2545,10,1725,8],[2545,14,1725,12],[2545,18,1725,16],[2545,19,1725,17,"refreshingDeferred"],[2545,37,1725,35],[2545,39,1725,37],[2546,12,1726,12],[2546,19,1726,19],[2546,23,1726,23],[2546,24,1726,24,"refreshingDeferred"],[2546,42,1726,42],[2546,43,1726,43,"promise"],[2546,50,1726,50],[2547,10,1727,8],[2548,10,1728,8],[2548,14,1728,14,"debugName"],[2548,23,1728,23],[2548,26,1728,26],[2548,48,1728,48,"refreshToken"],[2548,60,1728,60],[2548,61,1728,61,"substring"],[2548,70,1728,70],[2548,71,1728,71],[2548,72,1728,72],[2548,74,1728,74],[2548,75,1728,75],[2548,76,1728,76],[2548,82,1728,82],[2549,10,1729,8],[2549,14,1729,12],[2549,15,1729,13,"_debug"],[2549,21,1729,19],[2549,22,1729,20,"debugName"],[2549,31,1729,29],[2549,33,1729,31],[2549,40,1729,38],[2549,41,1729,39],[2550,10,1730,8],[2550,14,1730,12],[2551,12,1731,12],[2551,16,1731,16],[2551,17,1731,17,"refreshingDeferred"],[2551,35,1731,35],[2551,38,1731,38],[2551,42,1731,42,"helpers_1"],[2551,51,1731,51],[2551,52,1731,52,"Deferred"],[2551,60,1731,60],[2551,61,1731,61],[2551,62,1731,62],[2552,12,1732,12],[2552,16,1732,12,"_yield$this$_refreshA"],[2552,37,1732,12],[2552,46,1732,42],[2552,50,1732,46],[2552,51,1732,47,"_refreshAccessToken"],[2552,70,1732,66],[2552,71,1732,67,"refreshToken"],[2552,83,1732,79],[2552,84,1732,80],[2553,14,1732,20,"data"],[2553,18,1732,24],[2553,21,1732,24,"_yield$this$_refreshA"],[2553,42,1732,24],[2553,43,1732,20,"data"],[2553,47,1732,24],[2554,14,1732,26,"error"],[2554,19,1732,31],[2554,22,1732,31,"_yield$this$_refreshA"],[2554,43,1732,31],[2554,44,1732,26,"error"],[2554,49,1732,31],[2555,12,1733,12],[2555,16,1733,16,"error"],[2555,21,1733,21],[2555,23,1734,16],[2555,29,1734,22,"error"],[2555,34,1734,27],[2556,12,1735,12],[2556,16,1735,16],[2556,17,1735,17,"data"],[2556,21,1735,21],[2556,22,1735,22,"session"],[2556,29,1735,29],[2556,31,1736,16],[2556,37,1736,22],[2556,41,1736,26,"errors_1"],[2556,49,1736,34],[2556,50,1736,35,"AuthSessionMissingError"],[2556,73,1736,58],[2556,74,1736,59],[2556,75,1736,60],[2557,12,1737,12],[2557,18,1737,18],[2557,22,1737,22],[2557,23,1737,23,"_saveSession"],[2557,35,1737,35],[2557,36,1737,36,"data"],[2557,40,1737,40],[2557,41,1737,41,"session"],[2557,48,1737,48],[2557,49,1737,49],[2558,12,1738,12],[2558,18,1738,18],[2558,22,1738,22],[2558,23,1738,23,"_notifyAllSubscribers"],[2558,44,1738,44],[2558,45,1738,45],[2558,62,1738,62],[2558,64,1738,64,"data"],[2558,68,1738,68],[2558,69,1738,69,"session"],[2558,76,1738,76],[2558,77,1738,77],[2559,12,1739,12],[2559,16,1739,18,"result"],[2559,22,1739,24],[2559,25,1739,27],[2560,14,1739,29,"session"],[2560,21,1739,36],[2560,23,1739,38,"data"],[2560,27,1739,42],[2560,28,1739,43,"session"],[2560,35,1739,50],[2561,14,1739,52,"error"],[2561,19,1739,57],[2561,21,1739,59],[2562,12,1739,64],[2562,13,1739,65],[2563,12,1740,12],[2563,16,1740,16],[2563,17,1740,17,"refreshingDeferred"],[2563,35,1740,35],[2563,36,1740,36,"resolve"],[2563,43,1740,43],[2563,44,1740,44,"result"],[2563,50,1740,50],[2563,51,1740,51],[2564,12,1741,12],[2564,19,1741,19,"result"],[2564,25,1741,25],[2565,10,1742,8],[2565,11,1742,9],[2565,12,1743,8],[2565,19,1743,15,"error"],[2565,24,1743,20],[2565,26,1743,22],[2566,12,1744,12],[2566,16,1744,16],[2566,17,1744,17,"_debug"],[2566,23,1744,23],[2566,24,1744,24,"debugName"],[2566,33,1744,33],[2566,35,1744,35],[2566,42,1744,42],[2566,44,1744,44,"error"],[2566,49,1744,49],[2566,50,1744,50],[2567,12,1745,12],[2567,16,1745,16],[2567,17,1745,17],[2567,18,1745,18],[2567,20,1745,20,"errors_1"],[2567,28,1745,28],[2567,29,1745,29,"isAuthError"],[2567,40,1745,40],[2567,42,1745,42,"error"],[2567,47,1745,47],[2567,48,1745,48],[2567,50,1745,50],[2568,14,1746,16],[2568,18,1746,22,"result"],[2568,26,1746,28],[2568,29,1746,31],[2569,16,1746,33,"session"],[2569,23,1746,40],[2569,25,1746,42],[2569,29,1746,46],[2570,16,1746,48,"error"],[2571,14,1746,54],[2571,15,1746,55],[2572,14,1747,16],[2572,18,1747,20],[2572,19,1747,21],[2572,20,1747,22],[2572,21,1747,23],[2572,23,1747,25,"errors_1"],[2572,31,1747,33],[2572,32,1747,34,"isAuthRetryableFetchError"],[2572,57,1747,59],[2572,59,1747,61,"error"],[2572,64,1747,66],[2572,65,1747,67],[2572,67,1747,69],[2573,16,1748,20],[2573,22,1748,26],[2573,26,1748,30],[2573,27,1748,31,"_removeSession"],[2573,41,1748,45],[2573,42,1748,46],[2573,43,1748,47],[2574,14,1749,16],[2575,14,1750,16],[2575,15,1750,17,"_a"],[2575,17,1750,19],[2575,20,1750,22],[2575,24,1750,26],[2575,25,1750,27,"refreshingDeferred"],[2575,43,1750,45],[2575,49,1750,51],[2575,53,1750,55],[2575,57,1750,59,"_a"],[2575,59,1750,61],[2575,64,1750,61,"undefined"],[2575,73,1750,72],[2575,76,1750,72,"undefined"],[2575,85,1750,72],[2575,88,1750,84,"_a"],[2575,90,1750,86],[2575,91,1750,87,"resolve"],[2575,98,1750,94],[2575,99,1750,95,"result"],[2575,107,1750,101],[2575,108,1750,102],[2576,14,1751,16],[2576,21,1751,23,"result"],[2576,29,1751,29],[2577,12,1752,12],[2578,12,1753,12],[2578,13,1753,13,"_b"],[2578,15,1753,15],[2578,18,1753,18],[2578,22,1753,22],[2578,23,1753,23,"refreshingDeferred"],[2578,41,1753,41],[2578,47,1753,47],[2578,51,1753,51],[2578,55,1753,55,"_b"],[2578,57,1753,57],[2578,62,1753,57,"undefined"],[2578,71,1753,68],[2578,74,1753,68,"undefined"],[2578,83,1753,68],[2578,86,1753,80,"_b"],[2578,88,1753,82],[2578,89,1753,83,"reject"],[2578,95,1753,89],[2578,96,1753,90,"error"],[2578,101,1753,95],[2578,102,1753,96],[2579,12,1754,12],[2579,18,1754,18,"error"],[2579,23,1754,23],[2580,10,1755,8],[2580,11,1755,9],[2580,20,1756,16],[2581,12,1757,12],[2581,16,1757,16],[2581,17,1757,17,"refreshingDeferred"],[2581,35,1757,35],[2581,38,1757,38],[2581,42,1757,42],[2582,12,1758,12],[2582,16,1758,16],[2582,17,1758,17,"_debug"],[2582,23,1758,23],[2582,24,1758,24,"debugName"],[2582,33,1758,33],[2582,35,1758,35],[2582,40,1758,40],[2582,41,1758,41],[2583,10,1759,8],[2584,8,1760,4],[2584,9,1760,5],[2585,8,1760,5],[2585,17,1719,10,"_callRefreshToken"],[2585,34,1719,27,"_callRefreshToken"],[2585,35,1719,27,"_x47"],[2585,39,1719,27],[2586,10,1719,27],[2586,17,1719,27,"_callRefreshToken2"],[2586,35,1719,27],[2586,36,1719,27,"apply"],[2586,41,1719,27],[2586,48,1719,27,"arguments"],[2586,57,1719,27],[2587,8,1719,27],[2588,8,1719,27],[2588,15,1719,10,"_callRefreshToken"],[2588,32,1719,27],[2589,6,1719,27],[2590,4,1719,27],[2591,6,1719,27,"key"],[2591,9,1719,27],[2592,6,1719,27,"value"],[2592,11,1719,27],[2593,8,1719,27],[2593,12,1719,27,"_notifyAllSubscribers2"],[2593,34,1719,27],[2593,37,1719,27,"_asyncToGenerator"],[2593,54,1719,27],[2593,55,1761,4],[2593,66,1761,32,"event"],[2593,71,1761,37],[2593,73,1761,39,"session"],[2593,80,1761,46],[2593,82,1761,66],[2594,10,1761,66],[2594,14,1761,48,"broadcast"],[2594,23,1761,57],[2594,26,1761,57,"arguments"],[2594,35,1761,57],[2594,36,1761,57,"length"],[2594,42,1761,57],[2594,50,1761,57,"arguments"],[2594,59,1761,57],[2594,67,1761,57,"undefined"],[2594,76,1761,57],[2594,79,1761,57,"arguments"],[2594,88,1761,57],[2594,94,1761,60],[2594,98,1761,64],[2595,10,1762,8],[2595,14,1762,14,"debugName"],[2595,23,1762,23],[2595,26,1762,26],[2595,52,1762,52,"event"],[2595,57,1762,57],[2595,60,1762,60],[2596,10,1763,8],[2596,14,1763,12],[2596,15,1763,13,"_debug"],[2596,21,1763,19],[2596,22,1763,20,"debugName"],[2596,31,1763,29],[2596,33,1763,31],[2596,40,1763,38],[2596,42,1763,40,"session"],[2596,49,1763,47],[2596,51,1763,49],[2596,66,1763,64,"broadcast"],[2596,75,1763,73],[2596,77,1763,75],[2596,78,1763,76],[2597,10,1764,8],[2597,14,1764,12],[2598,12,1765,12],[2598,16,1765,16],[2598,20,1765,20],[2598,21,1765,21,"broadcastChannel"],[2598,37,1765,37],[2598,41,1765,41,"broadcast"],[2598,50,1765,50],[2598,52,1765,52],[2599,14,1766,16],[2599,18,1766,20],[2599,19,1766,21,"broadcastChannel"],[2599,35,1766,37],[2599,36,1766,38,"postMessage"],[2599,47,1766,49],[2599,48,1766,50],[2600,16,1766,52,"event"],[2600,21,1766,57],[2601,16,1766,59,"session"],[2602,14,1766,67],[2602,15,1766,68],[2602,16,1766,69],[2603,12,1767,12],[2604,12,1768,12],[2604,16,1768,18,"errors"],[2604,22,1768,24],[2604,25,1768,27],[2604,27,1768,29],[2605,12,1769,12],[2605,16,1769,18,"promises"],[2605,24,1769,26],[2605,27,1769,29,"Array"],[2605,32,1769,34],[2605,33,1769,35,"from"],[2605,37,1769,39],[2605,38,1769,40],[2605,42,1769,44],[2605,43,1769,45,"stateChangeEmitters"],[2605,62,1769,64],[2605,63,1769,65,"values"],[2605,69,1769,71],[2605,70,1769,72],[2605,71,1769,73],[2605,72,1769,74],[2605,73,1769,75,"map"],[2605,76,1769,78],[2606,14,1769,78],[2606,18,1769,78,"_ref29"],[2606,24,1769,78],[2606,27,1769,78,"_asyncToGenerator"],[2606,44,1769,78],[2606,45,1769,79],[2606,56,1769,86,"x"],[2606,57,1769,87],[2606,59,1769,92],[2607,16,1770,16],[2607,20,1770,20],[2608,18,1771,20],[2608,24,1771,26,"x"],[2608,25,1771,27],[2608,26,1771,28,"callback"],[2608,34,1771,36],[2608,35,1771,37,"event"],[2608,40,1771,42],[2608,42,1771,44,"session"],[2608,49,1771,51],[2608,50,1771,52],[2609,16,1772,16],[2609,17,1772,17],[2609,18,1773,16],[2609,25,1773,23,"e"],[2609,26,1773,24],[2609,28,1773,26],[2610,18,1774,20,"errors"],[2610,24,1774,26],[2610,25,1774,27,"push"],[2610,29,1774,31],[2610,30,1774,32,"e"],[2610,31,1774,33],[2610,32,1774,34],[2611,16,1775,16],[2612,14,1776,12],[2612,15,1776,13],[2613,14,1776,13],[2613,31,1776,13,"_x50"],[2613,35,1776,13],[2614,16,1776,13],[2614,23,1776,13,"_ref29"],[2614,29,1776,13],[2614,30,1776,13,"apply"],[2614,35,1776,13],[2614,42,1776,13,"arguments"],[2614,51,1776,13],[2615,14,1776,13],[2616,12,1776,13],[2616,16,1776,14],[2617,12,1777,12],[2617,18,1777,18,"Promise"],[2617,25,1777,25],[2617,26,1777,26,"all"],[2617,29,1777,29],[2617,30,1777,30,"promises"],[2617,38,1777,38],[2617,39,1777,39],[2618,12,1778,12],[2618,16,1778,16,"errors"],[2618,22,1778,22],[2618,23,1778,23,"length"],[2618,29,1778,29],[2618,32,1778,32],[2618,33,1778,33],[2618,35,1778,35],[2619,14,1779,16],[2619,19,1779,21],[2619,23,1779,25,"i"],[2619,24,1779,26],[2619,27,1779,29],[2619,28,1779,30],[2619,30,1779,32,"i"],[2619,31,1779,33],[2619,34,1779,36,"errors"],[2619,40,1779,42],[2619,41,1779,43,"length"],[2619,47,1779,49],[2619,49,1779,51,"i"],[2619,50,1779,52],[2619,54,1779,56],[2619,55,1779,57],[2619,57,1779,59],[2619,58,1781,16],[2620,14,1782,16],[2620,20,1782,22,"errors"],[2620,26,1782,28],[2620,27,1782,29],[2620,28,1782,30],[2620,29,1782,31],[2621,12,1783,12],[2622,10,1784,8],[2622,11,1784,9],[2622,20,1785,16],[2623,12,1786,12],[2623,16,1786,16],[2623,17,1786,17,"_debug"],[2623,23,1786,23],[2623,24,1786,24,"debugName"],[2623,33,1786,33],[2623,35,1786,35],[2623,40,1786,40],[2623,41,1786,41],[2624,10,1787,8],[2625,8,1788,4],[2625,9,1788,5],[2626,8,1788,5],[2626,17,1761,10,"_notifyAllSubscribers"],[2626,38,1761,31,"_notifyAllSubscribers"],[2626,39,1761,31,"_x48"],[2626,43,1761,31],[2626,45,1761,31,"_x49"],[2626,49,1761,31],[2627,10,1761,31],[2627,17,1761,31,"_notifyAllSubscribers2"],[2627,39,1761,31],[2627,40,1761,31,"apply"],[2627,45,1761,31],[2627,52,1761,31,"arguments"],[2627,61,1761,31],[2628,8,1761,31],[2629,8,1761,31],[2629,15,1761,10,"_notifyAllSubscribers"],[2629,36,1761,31],[2630,6,1761,31],[2631,6,1789,4],[2632,0,1790,0],[2633,0,1791,0],[2634,0,1792,0],[2635,4,1789,4],[2636,6,1789,4,"key"],[2636,9,1789,4],[2637,6,1789,4,"value"],[2637,11,1789,4],[2638,8,1789,4],[2638,12,1789,4,"_saveSession2"],[2638,25,1789,4],[2638,28,1789,4,"_asyncToGenerator"],[2638,45,1789,4],[2638,46,1793,4],[2638,57,1793,23,"session"],[2638,64,1793,30],[2638,66,1793,32],[2639,10,1794,8],[2639,14,1794,12],[2639,15,1794,13,"_debug"],[2639,21,1794,19],[2639,22,1794,20],[2639,39,1794,37],[2639,41,1794,39,"session"],[2639,48,1794,46],[2639,49,1794,47],[2640,10,1795,8],[2641,10,1796,8],[2642,10,1797,8],[2642,14,1797,12],[2642,15,1797,13,"suppressGetSessionWarning"],[2642,40,1797,38],[2642,43,1797,41],[2642,47,1797,45],[2643,10,1798,8],[2644,10,1799,8],[2644,14,1799,14,"sessionToProcess"],[2644,30,1799,30],[2644,33,1799,33,"Object"],[2644,39,1799,39],[2644,40,1799,40,"assign"],[2644,46,1799,46],[2644,47,1799,47],[2644,48,1799,48],[2644,49,1799,49],[2644,51,1799,51,"session"],[2644,58,1799,58],[2644,59,1799,59],[2645,10,1800,8],[2645,14,1800,14,"userIsProxy"],[2645,25,1800,25],[2645,28,1800,28,"sessionToProcess"],[2645,44,1800,44],[2645,45,1800,45,"user"],[2645,49,1800,49],[2645,53,1800,53,"sessionToProcess"],[2645,69,1800,69],[2645,70,1800,70,"user"],[2645,74,1800,74],[2645,75,1800,75,"__isUserNotAvailableProxy"],[2645,100,1800,100],[2645,105,1800,105],[2645,109,1800,109],[2646,10,1801,8],[2646,14,1801,12],[2646,18,1801,16],[2646,19,1801,17,"userStorage"],[2646,30,1801,28],[2646,32,1801,30],[2647,12,1802,12],[2647,16,1802,16],[2647,17,1802,17,"userIsProxy"],[2647,28,1802,28],[2647,32,1802,32,"sessionToProcess"],[2647,48,1802,48],[2647,49,1802,49,"user"],[2647,53,1802,53],[2647,55,1802,55],[2648,14,1803,16],[2649,14,1804,16],[2649,20,1804,22],[2649,21,1804,23],[2649,22,1804,24],[2649,24,1804,26,"helpers_1"],[2649,33,1804,35],[2649,34,1804,36,"setItemAsync"],[2649,46,1804,48],[2649,48,1804,50],[2649,52,1804,54],[2649,53,1804,55,"userStorage"],[2649,64,1804,66],[2649,66,1804,68],[2649,70,1804,72],[2649,71,1804,73,"storageKey"],[2649,81,1804,83],[2649,84,1804,86],[2649,91,1804,93],[2649,93,1804,95],[2650,16,1805,20,"user"],[2650,20,1805,24],[2650,22,1805,26,"sessionToProcess"],[2650,38,1805,42],[2650,39,1805,43,"user"],[2651,14,1806,16],[2651,15,1806,17],[2651,16,1806,18],[2652,12,1807,12],[2652,13,1807,13],[2652,19,1808,17],[2652,23,1808,21,"userIsProxy"],[2652,34,1808,32],[2652,36,1808,34],[2653,14,1809,16],[2654,14,1810,16],[2655,14,1811,16],[2656,14,1812,16],[2657,12,1812,16],[2658,12,1814,12],[2659,12,1815,12],[2660,12,1816,12],[2660,16,1816,18,"mainSessionData"],[2660,31,1816,33],[2660,34,1816,36,"Object"],[2660,40,1816,42],[2660,41,1816,43,"assign"],[2660,47,1816,49],[2660,48,1816,50],[2660,49,1816,51],[2660,50,1816,52],[2660,52,1816,54,"sessionToProcess"],[2660,68,1816,70],[2660,69,1816,71],[2661,12,1817,12],[2661,19,1817,19,"mainSessionData"],[2661,34,1817,34],[2661,35,1817,35,"user"],[2661,39,1817,39],[2661,40,1817,40],[2661,41,1817,41],[2662,12,1818,12],[2662,16,1818,18,"clonedMainSessionData"],[2662,37,1818,39],[2662,40,1818,42],[2662,41,1818,43],[2662,42,1818,44],[2662,44,1818,46,"helpers_2"],[2662,53,1818,55],[2662,54,1818,56,"deepClone"],[2662,63,1818,65],[2662,65,1818,67,"mainSessionData"],[2662,80,1818,82],[2662,81,1818,83],[2663,12,1819,12],[2663,18,1819,18],[2663,19,1819,19],[2663,20,1819,20],[2663,22,1819,22,"helpers_1"],[2663,31,1819,31],[2663,32,1819,32,"setItemAsync"],[2663,44,1819,44],[2663,46,1819,46],[2663,50,1819,50],[2663,51,1819,51,"storage"],[2663,58,1819,58],[2663,60,1819,60],[2663,64,1819,64],[2663,65,1819,65,"storageKey"],[2663,75,1819,75],[2663,77,1819,77,"clonedMainSessionData"],[2663,98,1819,98],[2663,99,1819,99],[2664,10,1820,8],[2664,11,1820,9],[2664,17,1821,13],[2665,12,1822,12],[2666,12,1823,12],[2667,12,1824,12],[2668,12,1825,12],[2668,16,1825,18,"clonedSession"],[2668,29,1825,31],[2668,32,1825,34],[2668,33,1825,35],[2668,34,1825,36],[2668,36,1825,38,"helpers_2"],[2668,45,1825,47],[2668,46,1825,48,"deepClone"],[2668,55,1825,57],[2668,57,1825,59,"sessionToProcess"],[2668,73,1825,75],[2668,74,1825,76],[2668,75,1825,77],[2668,76,1825,78],[2669,12,1826,12],[2669,18,1826,18],[2669,19,1826,19],[2669,20,1826,20],[2669,22,1826,22,"helpers_1"],[2669,31,1826,31],[2669,32,1826,32,"setItemAsync"],[2669,44,1826,44],[2669,46,1826,46],[2669,50,1826,50],[2669,51,1826,51,"storage"],[2669,58,1826,58],[2669,60,1826,60],[2669,64,1826,64],[2669,65,1826,65,"storageKey"],[2669,75,1826,75],[2669,77,1826,77,"clonedSession"],[2669,90,1826,90],[2669,91,1826,91],[2670,10,1827,8],[2671,8,1828,4],[2671,9,1828,5],[2672,8,1828,5],[2672,17,1793,10,"_saveSession"],[2672,29,1793,22,"_saveSession"],[2672,30,1793,22,"_x51"],[2672,34,1793,22],[2673,10,1793,22],[2673,17,1793,22,"_saveSession2"],[2673,30,1793,22],[2673,31,1793,22,"apply"],[2673,36,1793,22],[2673,43,1793,22,"arguments"],[2673,52,1793,22],[2674,8,1793,22],[2675,8,1793,22],[2675,15,1793,10,"_saveSession"],[2675,27,1793,22],[2676,6,1793,22],[2677,4,1793,22],[2678,6,1793,22,"key"],[2678,9,1793,22],[2679,6,1793,22,"value"],[2679,11,1793,22],[2680,8,1793,22],[2680,12,1793,22,"_removeSession2"],[2680,27,1793,22],[2680,30,1793,22,"_asyncToGenerator"],[2680,47,1793,22],[2680,48,1829,4],[2680,61,1829,27],[2681,10,1830,8],[2681,14,1830,12],[2681,15,1830,13,"_debug"],[2681,21,1830,19],[2681,22,1830,20],[2681,41,1830,39],[2681,42,1830,40],[2682,10,1831,8],[2682,16,1831,14],[2682,17,1831,15],[2682,18,1831,16],[2682,20,1831,18,"helpers_1"],[2682,29,1831,27],[2682,30,1831,28,"removeItemAsync"],[2682,45,1831,43],[2682,47,1831,45],[2682,51,1831,49],[2682,52,1831,50,"storage"],[2682,59,1831,57],[2682,61,1831,59],[2682,65,1831,63],[2682,66,1831,64,"storageKey"],[2682,76,1831,74],[2682,77,1831,75],[2683,10,1832,8],[2683,16,1832,14],[2683,17,1832,15],[2683,18,1832,16],[2683,20,1832,18,"helpers_1"],[2683,29,1832,27],[2683,30,1832,28,"removeItemAsync"],[2683,45,1832,43],[2683,47,1832,45],[2683,51,1832,49],[2683,52,1832,50,"storage"],[2683,59,1832,57],[2683,61,1832,59],[2683,65,1832,63],[2683,66,1832,64,"storageKey"],[2683,76,1832,74],[2683,79,1832,77],[2683,95,1832,93],[2683,96,1832,94],[2684,10,1833,8],[2684,16,1833,14],[2684,17,1833,15],[2684,18,1833,16],[2684,20,1833,18,"helpers_1"],[2684,29,1833,27],[2684,30,1833,28,"removeItemAsync"],[2684,45,1833,43],[2684,47,1833,45],[2684,51,1833,49],[2684,52,1833,50,"storage"],[2684,59,1833,57],[2684,61,1833,59],[2684,65,1833,63],[2684,66,1833,64,"storageKey"],[2684,76,1833,74],[2684,79,1833,77],[2684,86,1833,84],[2684,87,1833,85],[2685,10,1834,8],[2685,14,1834,12],[2685,18,1834,16],[2685,19,1834,17,"userStorage"],[2685,30,1834,28],[2685,32,1834,30],[2686,12,1835,12],[2686,18,1835,18],[2686,19,1835,19],[2686,20,1835,20],[2686,22,1835,22,"helpers_1"],[2686,31,1835,31],[2686,32,1835,32,"removeItemAsync"],[2686,47,1835,47],[2686,49,1835,49],[2686,53,1835,53],[2686,54,1835,54,"userStorage"],[2686,65,1835,65],[2686,67,1835,67],[2686,71,1835,71],[2686,72,1835,72,"storageKey"],[2686,82,1835,82],[2686,85,1835,85],[2686,92,1835,92],[2686,93,1835,93],[2687,10,1836,8],[2688,10,1837,8],[2688,16,1837,14],[2688,20,1837,18],[2688,21,1837,19,"_notifyAllSubscribers"],[2688,42,1837,40],[2688,43,1837,41],[2688,55,1837,53],[2688,57,1837,55],[2688,61,1837,59],[2688,62,1837,60],[2689,8,1838,4],[2689,9,1838,5],[2690,8,1838,5],[2690,17,1829,10,"_removeSession"],[2690,31,1829,24,"_removeSession"],[2690,32,1829,24],[2691,10,1829,24],[2691,17,1829,24,"_removeSession2"],[2691,32,1829,24],[2691,33,1829,24,"apply"],[2691,38,1829,24],[2691,45,1829,24,"arguments"],[2691,54,1829,24],[2692,8,1829,24],[2693,8,1829,24],[2693,15,1829,10,"_removeSession"],[2693,29,1829,24],[2694,6,1829,24],[2695,6,1839,4],[2696,0,1840,0],[2697,0,1841,0],[2698,0,1842,0],[2699,0,1843,0],[2700,0,1844,0],[2701,4,1839,4],[2702,6,1839,4,"key"],[2702,9,1839,4],[2703,6,1839,4,"value"],[2703,11,1839,4],[2703,13,1845,4],[2703,22,1845,4,"_removeVisibilityChangedCallback"],[2703,54,1845,36,"_removeVisibilityChangedCallback"],[2703,55,1845,36],[2703,57,1845,39],[2704,8,1846,8],[2704,12,1846,12],[2704,13,1846,13,"_debug"],[2704,19,1846,19],[2704,20,1846,20],[2704,57,1846,57],[2704,58,1846,58],[2705,8,1847,8],[2705,12,1847,14,"callback"],[2705,20,1847,22],[2705,23,1847,25],[2705,27,1847,29],[2705,28,1847,30,"visibilityChangedCallback"],[2705,53,1847,55],[2706,8,1848,8],[2706,12,1848,12],[2706,13,1848,13,"visibilityChangedCallback"],[2706,38,1848,38],[2706,41,1848,41],[2706,45,1848,45],[2707,8,1849,8],[2707,12,1849,12],[2708,10,1850,12],[2708,14,1850,16,"callback"],[2708,22,1850,24],[2708,26,1850,28],[2708,27,1850,29],[2708,28,1850,30],[2708,30,1850,32,"helpers_1"],[2708,39,1850,41],[2708,40,1850,42,"isBrowser"],[2708,49,1850,51],[2708,51,1850,53],[2708,52,1850,54],[2708,57,1850,59,"window"],[2708,63,1850,65],[2708,68,1850,70],[2708,72,1850,74],[2708,76,1850,78,"window"],[2708,82,1850,84],[2708,87,1850,84,"undefined"],[2708,96,1850,95],[2708,99,1850,95,"undefined"],[2708,108,1850,95],[2708,111,1850,107,"window"],[2708,117,1850,113],[2708,118,1850,114,"removeEventListener"],[2708,137,1850,133],[2708,138,1850,134],[2708,140,1850,136],[2709,12,1851,16,"window"],[2709,18,1851,22],[2709,19,1851,23,"removeEventListener"],[2709,38,1851,42],[2709,39,1851,43],[2709,57,1851,61],[2709,59,1851,63,"callback"],[2709,67,1851,71],[2709,68,1851,72],[2710,10,1852,12],[2711,8,1853,8],[2711,9,1853,9],[2711,10,1854,8],[2711,17,1854,15,"e"],[2711,18,1854,16],[2711,20,1854,18],[2711,21,1856,8],[2712,6,1857,4],[2713,6,1858,4],[2714,0,1859,0],[2715,0,1860,0],[2716,0,1861,0],[2717,4,1858,4],[2718,6,1858,4,"key"],[2718,9,1858,4],[2719,6,1858,4,"value"],[2719,11,1858,4],[2720,8,1858,4],[2720,12,1858,4,"_startAutoRefresh2"],[2720,30,1858,4],[2720,33,1858,4,"_asyncToGenerator"],[2720,50,1858,4],[2720,51,1862,4],[2720,64,1862,30],[2721,10,1862,30],[2721,14,1862,30,"_this21"],[2721,21,1862,30],[2722,10,1863,8],[2722,16,1863,14],[2722,20,1863,18],[2722,21,1863,19,"_stopAutoRefresh"],[2722,37,1863,35],[2722,38,1863,36],[2722,39,1863,37],[2723,10,1864,8],[2723,14,1864,12],[2723,15,1864,13,"_debug"],[2723,21,1864,19],[2723,22,1864,20],[2723,44,1864,42],[2723,45,1864,43],[2724,10,1865,8],[2724,14,1865,14,"ticker"],[2724,20,1865,20],[2724,23,1865,23,"setInterval"],[2724,34,1865,34],[2724,35,1865,35],[2724,41,1865,41],[2724,45,1865,45],[2724,46,1865,46,"_autoRefreshTokenTick"],[2724,67,1865,67],[2724,68,1865,68],[2724,69,1865,69],[2724,71,1865,71,"constants_1"],[2724,82,1865,82],[2724,83,1865,83,"AUTO_REFRESH_TICK_DURATION_MS"],[2724,112,1865,112],[2724,113,1865,113],[2725,10,1866,8],[2725,14,1866,12],[2725,15,1866,13,"autoRefreshTicker"],[2725,32,1866,30],[2725,35,1866,33,"ticker"],[2725,41,1866,39],[2726,10,1867,8],[2726,14,1867,12,"ticker"],[2726,20,1867,18],[2726,24,1867,22],[2726,31,1867,29,"ticker"],[2726,37,1867,35],[2726,42,1867,40],[2726,50,1867,48],[2726,54,1867,52],[2726,61,1867,59,"ticker"],[2726,67,1867,65],[2726,68,1867,66,"unref"],[2726,73,1867,71],[2726,78,1867,76],[2726,88,1867,86],[2726,90,1867,88],[2727,12,1868,12],[2728,12,1869,12],[2729,12,1870,12],[2730,12,1871,12],[2731,12,1872,12],[2732,12,1873,12],[2733,12,1874,12,"ticker"],[2733,18,1874,18],[2733,19,1874,19,"unref"],[2733,24,1874,24],[2733,25,1874,25],[2733,26,1874,26],[2734,12,1875,12],[2735,10,1876,8],[2735,11,1876,9],[2735,17,1877,13],[2735,21,1877,17],[2735,28,1877,24,"Deno"],[2735,32,1877,28],[2735,37,1877,33],[2735,48,1877,44],[2735,52,1877,48],[2735,59,1877,55,"Deno"],[2735,63,1877,59],[2735,64,1877,60,"unrefTimer"],[2735,74,1877,70],[2735,79,1877,75],[2735,89,1877,85],[2735,91,1877,87],[2736,12,1878,12],[2737,12,1879,12],[2738,12,1880,12],[2739,12,1881,12,"Deno"],[2739,16,1881,16],[2739,17,1881,17,"unrefTimer"],[2739,27,1881,27],[2739,28,1881,28,"ticker"],[2739,34,1881,34],[2739,35,1881,35],[2740,10,1882,8],[2741,10,1883,8],[2742,10,1884,8],[2743,10,1885,8],[2744,10,1886,8,"setTimeout"],[2744,20,1886,18],[2744,34,1886,18,"_asyncToGenerator"],[2744,51,1886,18],[2744,52,1886,19],[2744,65,1886,31],[2745,12,1887,12],[2745,18,1887,18,"_this21"],[2745,25,1887,22],[2745,26,1887,23,"initializePromise"],[2745,43,1887,40],[2746,12,1888,12],[2746,18,1888,18,"_this21"],[2746,25,1888,22],[2746,26,1888,23,"_autoRefreshTokenTick"],[2746,47,1888,44],[2746,48,1888,45],[2746,49,1888,46],[2747,10,1889,8],[2747,11,1889,9],[2747,14,1889,11],[2747,15,1889,12],[2747,16,1889,13],[2748,8,1890,4],[2748,9,1890,5],[2749,8,1890,5],[2749,17,1862,10,"_startAutoRefresh"],[2749,34,1862,27,"_startAutoRefresh"],[2749,35,1862,27],[2750,10,1862,27],[2750,17,1862,27,"_startAutoRefresh2"],[2750,35,1862,27],[2750,36,1862,27,"apply"],[2750,41,1862,27],[2750,48,1862,27,"arguments"],[2750,57,1862,27],[2751,8,1862,27],[2752,8,1862,27],[2752,15,1862,10,"_startAutoRefresh"],[2752,32,1862,27],[2753,6,1862,27],[2754,6,1891,4],[2755,0,1892,0],[2756,0,1893,0],[2757,0,1894,0],[2758,6,1891,4],[2759,4,1891,4],[2760,6,1891,4,"key"],[2760,9,1891,4],[2761,6,1891,4,"value"],[2761,11,1891,4],[2762,8,1891,4],[2762,12,1891,4,"_stopAutoRefresh2"],[2762,29,1891,4],[2762,32,1891,4,"_asyncToGenerator"],[2762,49,1891,4],[2762,50,1895,4],[2762,63,1895,29],[2763,10,1896,8],[2763,14,1896,12],[2763,15,1896,13,"_debug"],[2763,21,1896,19],[2763,22,1896,20],[2763,43,1896,41],[2763,44,1896,42],[2764,10,1897,8],[2764,14,1897,14,"ticker"],[2764,20,1897,20],[2764,23,1897,23],[2764,27,1897,27],[2764,28,1897,28,"autoRefreshTicker"],[2764,45,1897,45],[2765,10,1898,8],[2765,14,1898,12],[2765,15,1898,13,"autoRefreshTicker"],[2765,32,1898,30],[2765,35,1898,33],[2765,39,1898,37],[2766,10,1899,8],[2766,14,1899,12,"ticker"],[2766,20,1899,18],[2766,22,1899,20],[2767,12,1900,12,"clearInterval"],[2767,25,1900,25],[2767,26,1900,26,"ticker"],[2767,32,1900,32],[2767,33,1900,33],[2768,10,1901,8],[2769,8,1902,4],[2769,9,1902,5],[2770,8,1902,5],[2770,17,1895,10,"_stopAutoRefresh"],[2770,33,1895,26,"_stopAutoRefresh"],[2770,34,1895,26],[2771,10,1895,26],[2771,17,1895,26,"_stopAutoRefresh2"],[2771,34,1895,26],[2771,35,1895,26,"apply"],[2771,40,1895,26],[2771,47,1895,26,"arguments"],[2771,56,1895,26],[2772,8,1895,26],[2773,8,1895,26],[2773,15,1895,10,"_stopAutoRefresh"],[2773,31,1895,26],[2774,6,1895,26],[2775,6,1903,4],[2776,0,1904,0],[2777,0,1905,0],[2778,0,1906,0],[2779,0,1907,0],[2780,0,1908,0],[2781,0,1909,0],[2782,0,1910,0],[2783,0,1911,0],[2784,0,1912,0],[2785,0,1913,0],[2786,0,1914,0],[2787,0,1915,0],[2788,0,1916,0],[2789,0,1917,0],[2790,0,1918,0],[2791,0,1919,0],[2792,0,1920,0],[2793,0,1921,0],[2794,0,1922,0],[2795,0,1923,0],[2796,0,1924,0],[2797,6,1903,4],[2798,4,1903,4],[2799,6,1903,4,"key"],[2799,9,1903,4],[2800,6,1903,4,"value"],[2800,11,1903,4],[2801,8,1903,4],[2801,12,1903,4,"_startAutoRefresh3"],[2801,30,1903,4],[2801,33,1903,4,"_asyncToGenerator"],[2801,50,1903,4],[2801,51,1925,4],[2801,64,1925,29],[2802,10,1926,8],[2802,14,1926,12],[2802,15,1926,13,"_removeVisibilityChangedCallback"],[2802,47,1926,45],[2802,48,1926,46],[2802,49,1926,47],[2803,10,1927,8],[2803,16,1927,14],[2803,20,1927,18],[2803,21,1927,19,"_startAutoRefresh"],[2803,38,1927,36],[2803,39,1927,37],[2803,40,1927,38],[2804,8,1928,4],[2804,9,1928,5],[2805,8,1928,5],[2805,17,1925,10,"startAutoRefresh"],[2805,33,1925,26,"startAutoRefresh"],[2805,34,1925,26],[2806,10,1925,26],[2806,17,1925,26,"_startAutoRefresh3"],[2806,35,1925,26],[2806,36,1925,26,"apply"],[2806,41,1925,26],[2806,48,1925,26,"arguments"],[2806,57,1925,26],[2807,8,1925,26],[2808,8,1925,26],[2808,15,1925,10,"startAutoRefresh"],[2808,31,1925,26],[2809,6,1925,26],[2810,6,1929,4],[2811,0,1930,0],[2812,0,1931,0],[2813,0,1932,0],[2814,0,1933,0],[2815,0,1934,0],[2816,0,1935,0],[2817,0,1936,0],[2818,6,1929,4],[2819,4,1929,4],[2820,6,1929,4,"key"],[2820,9,1929,4],[2821,6,1929,4,"value"],[2821,11,1929,4],[2822,8,1929,4],[2822,12,1929,4,"_stopAutoRefresh3"],[2822,29,1929,4],[2822,32,1929,4,"_asyncToGenerator"],[2822,49,1929,4],[2822,50,1937,4],[2822,63,1937,28],[2823,10,1938,8],[2823,14,1938,12],[2823,15,1938,13,"_removeVisibilityChangedCallback"],[2823,47,1938,45],[2823,48,1938,46],[2823,49,1938,47],[2824,10,1939,8],[2824,16,1939,14],[2824,20,1939,18],[2824,21,1939,19,"_stopAutoRefresh"],[2824,37,1939,35],[2824,38,1939,36],[2824,39,1939,37],[2825,8,1940,4],[2825,9,1940,5],[2826,8,1940,5],[2826,17,1937,10,"stopAutoRefresh"],[2826,32,1937,25,"stopAutoRefresh"],[2826,33,1937,25],[2827,10,1937,25],[2827,17,1937,25,"_stopAutoRefresh3"],[2827,34,1937,25],[2827,35,1937,25,"apply"],[2827,40,1937,25],[2827,47,1937,25,"arguments"],[2827,56,1937,25],[2828,8,1937,25],[2829,8,1937,25],[2829,15,1937,10,"stopAutoRefresh"],[2829,30,1937,25],[2830,6,1937,25],[2831,6,1941,4],[2832,0,1942,0],[2833,0,1943,0],[2834,6,1941,4],[2835,4,1941,4],[2836,6,1941,4,"key"],[2836,9,1941,4],[2837,6,1941,4,"value"],[2837,11,1941,4],[2838,8,1941,4],[2838,12,1941,4,"_autoRefreshTokenTick2"],[2838,34,1941,4],[2838,37,1941,4,"_asyncToGenerator"],[2838,54,1941,4],[2838,55,1944,4],[2838,68,1944,34],[2839,10,1944,34],[2839,14,1944,34,"_this22"],[2839,21,1944,34],[2840,10,1945,8],[2840,14,1945,12],[2840,15,1945,13,"_debug"],[2840,21,1945,19],[2840,22,1945,20],[2840,48,1945,46],[2840,50,1945,48],[2840,57,1945,55],[2840,58,1945,56],[2841,10,1946,8],[2841,14,1946,12],[2842,12,1947,12],[2842,18,1947,18],[2842,22,1947,22],[2842,23,1947,23,"_acquireLock"],[2842,35,1947,35],[2842,36,1947,36],[2842,37,1947,37],[2842,52,1947,37,"_asyncToGenerator"],[2842,69,1947,37],[2842,70,1947,39],[2842,83,1947,51],[2843,14,1948,16],[2843,18,1948,20],[2844,16,1949,20],[2844,20,1949,26,"now"],[2844,23,1949,29],[2844,26,1949,32,"Date"],[2844,30,1949,36],[2844,31,1949,37,"now"],[2844,34,1949,40],[2844,35,1949,41],[2844,36,1949,42],[2845,16,1950,20],[2845,20,1950,24],[2846,18,1951,24],[2846,31,1951,37,"_this22"],[2846,38,1951,41],[2846,39,1951,42,"_useSession"],[2846,50,1951,53],[2847,20,1951,53],[2847,24,1951,53,"_ref32"],[2847,30,1951,53],[2847,33,1951,53,"_asyncToGenerator"],[2847,50,1951,53],[2847,51,1951,54],[2847,62,1951,61,"result"],[2847,68,1951,67],[2847,70,1951,72],[2848,22,1952,28],[2848,26,1952,44,"session"],[2848,33,1952,51],[2848,36,1952,59,"result"],[2848,42,1952,65],[2848,43,1952,36,"data"],[2848,47,1952,40],[2848,48,1952,44,"session"],[2848,55,1952,51],[2849,22,1953,28],[2849,26,1953,32],[2849,27,1953,33,"session"],[2849,34,1953,40],[2849,38,1953,44],[2849,39,1953,45,"session"],[2849,46,1953,52],[2849,47,1953,53,"refresh_token"],[2849,60,1953,66],[2849,64,1953,70],[2849,65,1953,71,"session"],[2849,72,1953,78],[2849,73,1953,79,"expires_at"],[2849,83,1953,89],[2849,85,1953,91],[2850,24,1954,32,"_this22"],[2850,31,1954,36],[2850,32,1954,37,"_debug"],[2850,38,1954,43],[2850,39,1954,44],[2850,65,1954,70],[2850,67,1954,72],[2850,79,1954,84],[2850,80,1954,85],[2851,24,1955,32],[2852,22,1956,28],[2853,22,1957,28],[2854,22,1958,28],[2854,26,1958,34,"expiresInTicks"],[2854,40,1958,48],[2854,43,1958,51,"Math"],[2854,47,1958,55],[2854,48,1958,56,"floor"],[2854,53,1958,61],[2854,54,1958,62],[2854,55,1958,63,"session"],[2854,62,1958,70],[2854,63,1958,71,"expires_at"],[2854,73,1958,81],[2854,76,1958,84],[2854,80,1958,88],[2854,83,1958,91,"now"],[2854,86,1958,94],[2854,90,1958,98,"constants_1"],[2854,101,1958,109],[2854,102,1958,110,"AUTO_REFRESH_TICK_DURATION_MS"],[2854,131,1958,139],[2854,132,1958,140],[2855,22,1959,28,"_this22"],[2855,29,1959,32],[2855,30,1959,33,"_debug"],[2855,36,1959,39],[2855,37,1959,40],[2855,63,1959,66],[2855,65,1959,68],[2855,92,1959,95,"expiresInTicks"],[2855,106,1959,109],[2855,130,1959,133,"constants_1"],[2855,141,1959,144],[2855,142,1959,145,"AUTO_REFRESH_TICK_DURATION_MS"],[2855,171,1959,174],[2855,199,1959,202,"constants_1"],[2855,210,1959,213],[2855,211,1959,214,"AUTO_REFRESH_TICK_THRESHOLD"],[2855,238,1959,241],[2855,246,1959,249],[2855,247,1959,250],[2856,22,1960,28],[2856,26,1960,32,"expiresInTicks"],[2856,40,1960,46],[2856,44,1960,50,"constants_1"],[2856,55,1960,61],[2856,56,1960,62,"AUTO_REFRESH_TICK_THRESHOLD"],[2856,83,1960,89],[2856,85,1960,91],[2857,24,1961,32],[2857,30,1961,38,"_this22"],[2857,37,1961,42],[2857,38,1961,43,"_callRefreshToken"],[2857,55,1961,60],[2857,56,1961,61,"session"],[2857,63,1961,68],[2857,64,1961,69,"refresh_token"],[2857,77,1961,82],[2857,78,1961,83],[2858,22,1962,28],[2859,20,1963,24],[2859,21,1963,25],[2860,20,1963,25],[2860,37,1963,25,"_x52"],[2860,41,1963,25],[2861,22,1963,25],[2861,29,1963,25,"_ref32"],[2861,35,1963,25],[2861,36,1963,25,"apply"],[2861,41,1963,25],[2861,48,1963,25,"arguments"],[2861,57,1963,25],[2862,20,1963,25],[2863,18,1963,25],[2863,22,1963,26],[2864,16,1964,20],[2864,17,1964,21],[2864,18,1965,20],[2864,25,1965,27,"e"],[2864,26,1965,28],[2864,28,1965,30],[2864,29,1967,20],[2865,14,1968,16],[2865,15,1968,17],[2865,24,1969,24],[2866,16,1970,20,"_this22"],[2866,23,1970,24],[2866,24,1970,25,"_debug"],[2866,30,1970,31],[2866,31,1970,32],[2866,57,1970,58],[2866,59,1970,60],[2866,64,1970,65],[2866,65,1970,66],[2867,14,1971,16],[2868,12,1972,12],[2868,13,1972,13],[2868,15,1972,14],[2869,10,1973,8],[2869,11,1973,9],[2869,12,1974,8],[2869,19,1974,15,"e"],[2869,20,1974,16],[2869,22,1974,18],[2870,12,1975,12],[2870,16,1975,16,"e"],[2870,17,1975,17],[2870,18,1975,18,"isAcquireTimeout"],[2870,34,1975,34],[2870,38,1975,38,"e"],[2870,39,1975,39],[2870,51,1975,51,"locks_1"],[2870,58,1975,58],[2870,59,1975,59,"LockAcquireTimeoutError"],[2870,82,1975,82],[2870,84,1975,84],[2871,14,1976,16],[2871,18,1976,20],[2871,19,1976,21,"_debug"],[2871,25,1976,27],[2871,26,1976,28],[2871,70,1976,72],[2871,71,1976,73],[2872,12,1977,12],[2872,13,1977,13],[2872,19,1978,17],[2873,14,1979,16],[2873,20,1979,22,"e"],[2873,21,1979,23],[2874,12,1980,12],[2875,10,1981,8],[2876,8,1982,4],[2876,9,1982,5],[2877,8,1982,5],[2877,17,1944,10,"_autoRefreshTokenTick"],[2877,38,1944,31,"_autoRefreshTokenTick"],[2877,39,1944,31],[2878,10,1944,31],[2878,17,1944,31,"_autoRefreshTokenTick2"],[2878,39,1944,31],[2878,40,1944,31,"apply"],[2878,45,1944,31],[2878,52,1944,31,"arguments"],[2878,61,1944,31],[2879,8,1944,31],[2880,8,1944,31],[2880,15,1944,10,"_autoRefreshTokenTick"],[2880,36,1944,31],[2881,6,1944,31],[2882,6,1983,4],[2883,0,1984,0],[2884,0,1985,0],[2885,0,1986,0],[2886,0,1987,0],[2887,6,1983,4],[2888,4,1983,4],[2889,6,1983,4,"key"],[2889,9,1983,4],[2890,6,1983,4,"value"],[2890,11,1983,4],[2891,8,1983,4],[2891,12,1983,4,"_handleVisibilityChange2"],[2891,36,1983,4],[2891,39,1983,4,"_asyncToGenerator"],[2891,56,1983,4],[2891,57,1988,4],[2891,70,1988,36],[2892,10,1988,36],[2892,14,1988,36,"_this23"],[2892,21,1988,36],[2893,10,1989,8],[2893,14,1989,12],[2893,15,1989,13,"_debug"],[2893,21,1989,19],[2893,22,1989,20],[2893,50,1989,48],[2893,51,1989,49],[2894,10,1990,8],[2894,14,1990,12],[2894,15,1990,13],[2894,16,1990,14],[2894,17,1990,15],[2894,19,1990,17,"helpers_1"],[2894,28,1990,26],[2894,29,1990,27,"isBrowser"],[2894,38,1990,36],[2894,40,1990,38],[2894,41,1990,39],[2894,45,1990,43],[2894,47,1990,45,"window"],[2894,53,1990,51],[2894,58,1990,56],[2894,62,1990,60],[2894,66,1990,64,"window"],[2894,72,1990,70],[2894,77,1990,70,"undefined"],[2894,86,1990,81],[2894,89,1990,81,"undefined"],[2894,98,1990,81],[2894,101,1990,93,"window"],[2894,107,1990,99],[2894,108,1990,100,"addEventListener"],[2894,124,1990,116],[2894,125,1990,117],[2894,127,1990,119],[2895,12,1991,12],[2895,16,1991,16],[2895,20,1991,20],[2895,21,1991,21,"autoRefreshToken"],[2895,37,1991,37],[2895,39,1991,39],[2896,14,1992,16],[2897,14,1993,16],[2897,18,1993,20],[2897,19,1993,21,"startAutoRefresh"],[2897,35,1993,37],[2897,36,1993,38],[2897,37,1993,39],[2898,12,1994,12],[2899,12,1995,12],[2899,19,1995,19],[2899,24,1995,24],[2900,10,1996,8],[2901,10,1997,8],[2901,14,1997,12],[2902,12,1998,12],[2902,16,1998,16],[2902,17,1998,17,"visibilityChangedCallback"],[2902,42,1998,42],[2902,58,1998,42,"_asyncToGenerator"],[2902,75,1998,42],[2902,76,1998,45],[2903,14,1998,45],[2903,27,1998,63,"_this23"],[2903,34,1998,67],[2903,35,1998,68,"_onVisibilityChanged"],[2903,55,1998,88],[2903,56,1998,89],[2903,61,1998,94],[2903,62,1998,95],[2904,12,1998,95],[2905,12,1999,12,"window"],[2905,18,1999,18],[2905,23,1999,23],[2905,27,1999,27],[2905,31,1999,31,"window"],[2905,37,1999,37],[2905,42,1999,37,"undefined"],[2905,51,1999,48],[2905,54,1999,48,"undefined"],[2905,63,1999,48],[2905,66,1999,60,"window"],[2905,72,1999,66],[2905,73,1999,67,"addEventListener"],[2905,89,1999,83],[2905,90,1999,84],[2905,108,1999,102],[2905,110,1999,104],[2905,114,1999,108],[2905,115,1999,109,"visibilityChangedCallback"],[2905,140,1999,134],[2905,141,1999,135],[2906,12,2000,12],[2907,12,2001,12],[2908,12,2002,12],[2908,18,2002,18],[2908,22,2002,22],[2908,23,2002,23,"_onVisibilityChanged"],[2908,43,2002,43],[2908,44,2002,44],[2908,48,2002,48],[2908,49,2002,49],[2908,50,2002,50],[2908,51,2002,51],[2909,10,2003,8],[2909,11,2003,9],[2909,12,2004,8],[2909,19,2004,15,"error"],[2909,24,2004,20],[2909,26,2004,22],[2909,27,2006,8],[2910,8,2007,4],[2910,9,2007,5],[2911,8,2007,5],[2911,17,1988,10,"_handleVisibilityChange"],[2911,40,1988,33,"_handleVisibilityChange"],[2911,41,1988,33],[2912,10,1988,33],[2912,17,1988,33,"_handleVisibilityChange2"],[2912,41,1988,33],[2912,42,1988,33,"apply"],[2912,47,1988,33],[2912,54,1988,33,"arguments"],[2912,63,1988,33],[2913,8,1988,33],[2914,8,1988,33],[2914,15,1988,10,"_handleVisibilityChange"],[2914,38,1988,33],[2915,6,1988,33],[2916,6,2008,4],[2917,0,2009,0],[2918,0,2010,0],[2919,6,2008,4],[2920,4,2008,4],[2921,6,2008,4,"key"],[2921,9,2008,4],[2922,6,2008,4,"value"],[2922,11,2008,4],[2923,8,2008,4],[2923,12,2008,4,"_onVisibilityChanged2"],[2923,33,2008,4],[2923,36,2008,4,"_asyncToGenerator"],[2923,53,2008,4],[2923,54,2011,4],[2923,65,2011,31,"calledFromInitialize"],[2923,85,2011,51],[2923,87,2011,53],[2924,10,2011,53],[2924,14,2011,53,"_this24"],[2924,21,2011,53],[2925,10,2012,8],[2925,14,2012,14,"methodName"],[2925,24,2012,24],[2925,27,2012,27],[2925,52,2012,52,"calledFromInitialize"],[2925,72,2012,72],[2925,75,2012,75],[2926,10,2013,8],[2926,14,2013,12],[2926,15,2013,13,"_debug"],[2926,21,2013,19],[2926,22,2013,20,"methodName"],[2926,32,2013,30],[2926,34,2013,32],[2926,51,2013,49],[2926,53,2013,51,"document"],[2926,61,2013,59],[2926,62,2013,60,"visibilityState"],[2926,77,2013,75],[2926,78,2013,76],[2927,10,2014,8],[2927,14,2014,12,"document"],[2927,22,2014,20],[2927,23,2014,21,"visibilityState"],[2927,38,2014,36],[2927,43,2014,41],[2927,52,2014,50],[2927,54,2014,52],[2928,12,2015,12],[2928,16,2015,16],[2928,20,2015,20],[2928,21,2015,21,"autoRefreshToken"],[2928,37,2015,37],[2928,39,2015,39],[2929,14,2016,16],[2930,14,2017,16],[2931,14,2018,16],[2931,18,2018,20],[2931,19,2018,21,"_startAutoRefresh"],[2931,36,2018,38],[2931,37,2018,39],[2931,38,2018,40],[2932,12,2019,12],[2933,12,2020,12],[2933,16,2020,16],[2933,17,2020,17,"calledFromInitialize"],[2933,37,2020,37],[2933,39,2020,39],[2934,14,2021,16],[2935,14,2022,16],[2936,14,2023,16],[2937,14,2024,16],[2938,14,2025,16],[2938,20,2025,22],[2938,24,2025,26],[2938,25,2025,27,"initializePromise"],[2938,42,2025,44],[2939,14,2026,16],[2939,20,2026,22],[2939,24,2026,26],[2939,25,2026,27,"_acquireLock"],[2939,37,2026,39],[2939,55,2026,39,"_asyncToGenerator"],[2939,72,2026,39],[2939,73,2026,44],[2939,86,2026,56],[2940,16,2027,20],[2940,20,2027,24,"document"],[2940,28,2027,32],[2940,29,2027,33,"visibilityState"],[2940,44,2027,48],[2940,49,2027,53],[2940,58,2027,62],[2940,60,2027,64],[2941,18,2028,24,"_this24"],[2941,25,2028,28],[2941,26,2028,29,"_debug"],[2941,32,2028,35],[2941,33,2028,36,"methodName"],[2941,43,2028,46],[2941,45,2028,48],[2941,151,2028,154],[2941,152,2028,155],[2942,18,2029,24],[2943,18,2030,24],[2944,16,2031,20],[2945,16,2032,20],[2946,16,2033,20],[2946,22,2033,26,"_this24"],[2946,29,2033,30],[2946,30,2033,31,"_recoverAndRefresh"],[2946,48,2033,49],[2946,49,2033,50],[2946,50,2033,51],[2947,14,2034,16],[2947,15,2034,17],[2947,17,2034,18],[2948,12,2035,12],[2949,10,2036,8],[2949,11,2036,9],[2949,17,2037,13],[2949,21,2037,17,"document"],[2949,29,2037,25],[2949,30,2037,26,"visibilityState"],[2949,45,2037,41],[2949,50,2037,46],[2949,58,2037,54],[2949,60,2037,56],[2950,12,2038,12],[2950,16,2038,16],[2950,20,2038,20],[2950,21,2038,21,"autoRefreshToken"],[2950,37,2038,37],[2950,39,2038,39],[2951,14,2039,16],[2951,18,2039,20],[2951,19,2039,21,"_stopAutoRefresh"],[2951,35,2039,37],[2951,36,2039,38],[2951,37,2039,39],[2952,12,2040,12],[2953,10,2041,8],[2954,8,2042,4],[2954,9,2042,5],[2955,8,2042,5],[2955,17,2011,10,"_onVisibilityChanged"],[2955,37,2011,30,"_onVisibilityChanged"],[2955,38,2011,30,"_x53"],[2955,42,2011,30],[2956,10,2011,30],[2956,17,2011,30,"_onVisibilityChanged2"],[2956,38,2011,30],[2956,39,2011,30,"apply"],[2956,44,2011,30],[2956,51,2011,30,"arguments"],[2956,60,2011,30],[2957,8,2011,30],[2958,8,2011,30],[2958,15,2011,10,"_onVisibilityChanged"],[2958,35,2011,30],[2959,6,2011,30],[2960,6,2043,4],[2961,0,2044,0],[2962,0,2045,0],[2963,0,2046,0],[2964,0,2047,0],[2965,0,2048,0],[2966,6,2043,4],[2967,4,2043,4],[2968,6,2043,4,"key"],[2968,9,2043,4],[2969,6,2043,4,"value"],[2969,11,2043,4],[2970,8,2043,4],[2970,12,2043,4,"_getUrlForProvider2"],[2970,31,2043,4],[2970,34,2043,4,"_asyncToGenerator"],[2970,51,2043,4],[2970,52,2049,4],[2970,63,2049,29,"url"],[2970,66,2049,32],[2970,68,2049,34,"provider"],[2970,76,2049,42],[2970,78,2049,44,"options"],[2970,85,2049,51],[2970,87,2049,53],[2971,10,2050,8],[2971,14,2050,14,"urlParams"],[2971,23,2050,23],[2971,26,2050,26],[2971,27,2050,27],[2971,39,2050,39,"encodeURIComponent"],[2971,57,2050,57],[2971,58,2050,58,"provider"],[2971,66,2050,66],[2971,67,2050,67],[2971,69,2050,69],[2971,70,2050,70],[2972,10,2051,8],[2972,14,2051,12,"options"],[2972,21,2051,19],[2972,26,2051,24],[2972,30,2051,28],[2972,34,2051,32,"options"],[2972,41,2051,39],[2972,46,2051,39,"undefined"],[2972,55,2051,50],[2972,58,2051,50,"undefined"],[2972,67,2051,50],[2972,70,2051,62,"options"],[2972,77,2051,69],[2972,78,2051,70,"redirectTo"],[2972,88,2051,80],[2972,90,2051,82],[2973,12,2052,12,"urlParams"],[2973,21,2052,21],[2973,22,2052,22,"push"],[2973,26,2052,26],[2973,27,2052,27],[2973,42,2052,42,"encodeURIComponent"],[2973,60,2052,60],[2973,61,2052,61,"options"],[2973,68,2052,68],[2973,69,2052,69,"redirectTo"],[2973,79,2052,79],[2973,80,2052,80],[2973,82,2052,82],[2973,83,2052,83],[2974,10,2053,8],[2975,10,2054,8],[2975,14,2054,12,"options"],[2975,21,2054,19],[2975,26,2054,24],[2975,30,2054,28],[2975,34,2054,32,"options"],[2975,41,2054,39],[2975,46,2054,39,"undefined"],[2975,55,2054,50],[2975,58,2054,50,"undefined"],[2975,67,2054,50],[2975,70,2054,62,"options"],[2975,77,2054,69],[2975,78,2054,70,"scopes"],[2975,84,2054,76],[2975,86,2054,78],[2976,12,2055,12,"urlParams"],[2976,21,2055,21],[2976,22,2055,22,"push"],[2976,26,2055,26],[2976,27,2055,27],[2976,37,2055,37,"encodeURIComponent"],[2976,55,2055,55],[2976,56,2055,56,"options"],[2976,63,2055,63],[2976,64,2055,64,"scopes"],[2976,70,2055,70],[2976,71,2055,71],[2976,73,2055,73],[2976,74,2055,74],[2977,10,2056,8],[2978,10,2057,8],[2978,14,2057,12],[2978,18,2057,16],[2978,19,2057,17,"flowType"],[2978,27,2057,25],[2978,32,2057,30],[2978,38,2057,36],[2978,40,2057,38],[2979,12,2058,12],[2979,16,2058,12,"_yield18"],[2979,24,2058,12],[2979,33,2058,63],[2979,34,2058,64],[2979,35,2058,65],[2979,37,2058,67,"helpers_1"],[2979,46,2058,76],[2979,47,2058,77,"getCodeChallengeAndMethod"],[2979,72,2058,102],[2979,74,2058,104],[2979,78,2058,108],[2979,79,2058,109,"storage"],[2979,86,2058,116],[2979,88,2058,118],[2979,92,2058,122],[2979,93,2058,123,"storageKey"],[2979,103,2058,133],[2979,104,2058,134],[2980,14,2058,134,"_yield19"],[2980,22,2058,134],[2980,25,2058,134,"_slicedToArray"],[2980,39,2058,134],[2980,40,2058,134,"_yield18"],[2980,48,2058,134],[2981,14,2058,19,"codeChallenge"],[2981,27,2058,32],[2981,30,2058,32,"_yield19"],[2981,38,2058,32],[2982,14,2058,34,"codeChallengeMethod"],[2982,33,2058,53],[2982,36,2058,53,"_yield19"],[2982,44,2058,53],[2983,12,2059,12],[2983,16,2059,18,"flowParams"],[2983,26,2059,28],[2983,29,2059,31],[2983,33,2059,35,"URLSearchParams"],[2983,48,2059,50],[2983,49,2059,51],[2984,14,2060,16,"code_challenge"],[2984,28,2060,30],[2984,30,2060,32],[2984,33,2060,35,"encodeURIComponent"],[2984,51,2060,53],[2984,52,2060,54,"codeChallenge"],[2984,65,2060,67],[2984,66,2060,68],[2984,68,2060,70],[2985,14,2061,16,"code_challenge_method"],[2985,35,2061,37],[2985,37,2061,39],[2985,40,2061,42,"encodeURIComponent"],[2985,58,2061,60],[2985,59,2061,61,"codeChallengeMethod"],[2985,78,2061,80],[2985,79,2061,81],[2986,12,2062,12],[2986,13,2062,13],[2986,14,2062,14],[2987,12,2063,12,"urlParams"],[2987,21,2063,21],[2987,22,2063,22,"push"],[2987,26,2063,26],[2987,27,2063,27,"flowParams"],[2987,37,2063,37],[2987,38,2063,38,"toString"],[2987,46,2063,46],[2987,47,2063,47],[2987,48,2063,48],[2987,49,2063,49],[2988,10,2064,8],[2989,10,2065,8],[2989,14,2065,12,"options"],[2989,21,2065,19],[2989,26,2065,24],[2989,30,2065,28],[2989,34,2065,32,"options"],[2989,41,2065,39],[2989,46,2065,39,"undefined"],[2989,55,2065,50],[2989,58,2065,50,"undefined"],[2989,67,2065,50],[2989,70,2065,62,"options"],[2989,77,2065,69],[2989,78,2065,70,"queryParams"],[2989,89,2065,81],[2989,91,2065,83],[2990,12,2066,12],[2990,16,2066,18,"query"],[2990,21,2066,23],[2990,24,2066,26],[2990,28,2066,30,"URLSearchParams"],[2990,43,2066,45],[2990,44,2066,46,"options"],[2990,51,2066,53],[2990,52,2066,54,"queryParams"],[2990,63,2066,65],[2990,64,2066,66],[2991,12,2067,12,"urlParams"],[2991,21,2067,21],[2991,22,2067,22,"push"],[2991,26,2067,26],[2991,27,2067,27,"query"],[2991,32,2067,32],[2991,33,2067,33,"toString"],[2991,41,2067,41],[2991,42,2067,42],[2991,43,2067,43],[2991,44,2067,44],[2992,10,2068,8],[2993,10,2069,8],[2993,14,2069,12,"options"],[2993,21,2069,19],[2993,26,2069,24],[2993,30,2069,28],[2993,34,2069,32,"options"],[2993,41,2069,39],[2993,46,2069,39,"undefined"],[2993,55,2069,50],[2993,58,2069,50,"undefined"],[2993,67,2069,50],[2993,70,2069,62,"options"],[2993,77,2069,69],[2993,78,2069,70,"skipBrowserRedirect"],[2993,97,2069,89],[2993,99,2069,91],[2994,12,2070,12,"urlParams"],[2994,21,2070,21],[2994,22,2070,22,"push"],[2994,26,2070,26],[2994,27,2070,27],[2994,49,2070,49,"options"],[2994,56,2070,56],[2994,57,2070,57,"skipBrowserRedirect"],[2994,76,2070,76],[2994,78,2070,78],[2994,79,2070,79],[2995,10,2071,8],[2996,10,2072,8],[2996,17,2072,15],[2996,20,2072,18,"url"],[2996,23,2072,21],[2996,27,2072,25,"urlParams"],[2996,36,2072,34],[2996,37,2072,35,"join"],[2996,41,2072,39],[2996,42,2072,40],[2996,45,2072,43],[2996,46,2072,44],[2996,48,2072,46],[2997,8,2073,4],[2997,9,2073,5],[2998,8,2073,5],[2998,17,2049,10,"_getUrlForProvider"],[2998,35,2049,28,"_getUrlForProvider"],[2998,36,2049,28,"_x54"],[2998,40,2049,28],[2998,42,2049,28,"_x55"],[2998,46,2049,28],[2998,48,2049,28,"_x56"],[2998,52,2049,28],[2999,10,2049,28],[2999,17,2049,28,"_getUrlForProvider2"],[2999,36,2049,28],[2999,37,2049,28,"apply"],[2999,42,2049,28],[2999,49,2049,28,"arguments"],[2999,58,2049,28],[3000,8,2049,28],[3001,8,2049,28],[3001,15,2049,10,"_getUrlForProvider"],[3001,33,2049,28],[3002,6,2049,28],[3003,4,2049,28],[3004,6,2049,28,"key"],[3004,9,2049,28],[3005,6,2049,28,"value"],[3005,11,2049,28],[3006,8,2049,28],[3006,12,2049,28,"_unenroll2"],[3006,22,2049,28],[3006,25,2049,28,"_asyncToGenerator"],[3006,42,2049,28],[3006,43,2074,4],[3006,54,2074,20,"params"],[3006,60,2074,26],[3006,62,2074,28],[3007,10,2074,28],[3007,14,2074,28,"_this25"],[3007,21,2074,28],[3008,10,2075,8],[3008,14,2075,12],[3009,12,2076,12],[3009,25,2076,25],[3009,29,2076,29],[3009,30,2076,30,"_useSession"],[3009,41,2076,41],[3010,14,2076,41],[3010,18,2076,41,"_ref35"],[3010,24,2076,41],[3010,27,2076,41,"_asyncToGenerator"],[3010,44,2076,41],[3010,45,2076,42],[3010,56,2076,49,"result"],[3010,62,2076,55],[3010,64,2076,60],[3011,16,2077,16],[3011,20,2077,20,"_a"],[3011,22,2077,22],[3012,16,2078,16],[3012,20,2078,30,"sessionData"],[3012,31,2078,41],[3012,34,2078,67,"result"],[3012,40,2078,73],[3012,41,2078,24,"data"],[3012,45,2078,28],[3013,18,2078,50,"sessionError"],[3013,30,2078,62],[3013,33,2078,67,"result"],[3013,39,2078,73],[3013,40,2078,43,"error"],[3013,45,2078,48],[3014,16,2079,16],[3014,20,2079,20,"sessionError"],[3014,32,2079,32],[3014,34,2079,34],[3015,18,2080,20],[3015,25,2080,27],[3016,20,2080,29,"data"],[3016,24,2080,33],[3016,26,2080,35],[3016,30,2080,39],[3017,20,2080,41,"error"],[3017,25,2080,46],[3017,27,2080,48,"sessionError"],[3018,18,2080,61],[3018,19,2080,62],[3019,16,2081,16],[3020,16,2082,16],[3020,29,2082,29],[3020,30,2082,30],[3020,31,2082,31],[3020,33,2082,33,"fetch_1"],[3020,40,2082,40],[3020,41,2082,41,"_request"],[3020,49,2082,49],[3020,51,2082,51,"_this25"],[3020,58,2082,55],[3020,59,2082,56,"fetch"],[3020,64,2082,61],[3020,66,2082,63],[3020,74,2082,71],[3020,76,2082,73],[3020,79,2082,76,"_this25"],[3020,86,2082,80],[3020,87,2082,81,"url"],[3020,90,2082,84],[3020,102,2082,96,"params"],[3020,108,2082,102],[3020,109,2082,103,"factorId"],[3020,117,2082,111],[3020,119,2082,113],[3020,121,2082,115],[3021,18,2083,20,"headers"],[3021,25,2083,27],[3021,27,2083,29,"_this25"],[3021,34,2083,33],[3021,35,2083,34,"headers"],[3021,42,2083,41],[3022,18,2084,20,"jwt"],[3022,21,2084,23],[3022,23,2084,25],[3022,24,2084,26,"_a"],[3022,26,2084,28],[3022,29,2084,31,"sessionData"],[3022,40,2084,42],[3022,45,2084,47],[3022,49,2084,51],[3022,53,2084,55,"sessionData"],[3022,64,2084,66],[3022,69,2084,66,"undefined"],[3022,78,2084,77],[3022,81,2084,77,"undefined"],[3022,90,2084,77],[3022,93,2084,89,"sessionData"],[3022,104,2084,100],[3022,105,2084,101,"session"],[3022,112,2084,108],[3022,118,2084,114],[3022,122,2084,118],[3022,126,2084,122,"_a"],[3022,128,2084,124],[3022,133,2084,124,"undefined"],[3022,142,2084,135],[3022,145,2084,135,"undefined"],[3022,154,2084,135],[3022,157,2084,147,"_a"],[3022,159,2084,149],[3022,160,2084,150,"access_token"],[3023,16,2085,16],[3023,17,2085,17],[3023,18,2085,18],[3024,14,2086,12],[3024,15,2086,13],[3025,14,2086,13],[3025,31,2086,13,"_x58"],[3025,35,2086,13],[3026,16,2086,13],[3026,23,2086,13,"_ref35"],[3026,29,2086,13],[3026,30,2086,13,"apply"],[3026,35,2086,13],[3026,42,2086,13,"arguments"],[3026,51,2086,13],[3027,14,2086,13],[3028,12,2086,13],[3028,16,2086,14],[3029,10,2087,8],[3029,11,2087,9],[3029,12,2088,8],[3029,19,2088,15,"error"],[3029,24,2088,20],[3029,26,2088,22],[3030,12,2089,12],[3030,16,2089,16],[3030,17,2089,17],[3030,18,2089,18],[3030,20,2089,20,"errors_1"],[3030,28,2089,28],[3030,29,2089,29,"isAuthError"],[3030,40,2089,40],[3030,42,2089,42,"error"],[3030,47,2089,47],[3030,48,2089,48],[3030,50,2089,50],[3031,14,2090,16],[3031,21,2090,23],[3032,16,2090,25,"data"],[3032,20,2090,29],[3032,22,2090,31],[3032,26,2090,35],[3033,16,2090,37,"error"],[3034,14,2090,43],[3034,15,2090,44],[3035,12,2091,12],[3036,12,2092,12],[3036,18,2092,18,"error"],[3036,23,2092,23],[3037,10,2093,8],[3038,8,2094,4],[3038,9,2094,5],[3039,8,2094,5],[3039,17,2074,10,"_unenroll"],[3039,26,2074,19,"_unenroll"],[3039,27,2074,19,"_x57"],[3039,31,2074,19],[3040,10,2074,19],[3040,17,2074,19,"_unenroll2"],[3040,27,2074,19],[3040,28,2074,19,"apply"],[3040,33,2074,19],[3040,40,2074,19,"arguments"],[3040,49,2074,19],[3041,8,2074,19],[3042,8,2074,19],[3042,15,2074,10,"_unenroll"],[3042,24,2074,19],[3043,6,2074,19],[3044,4,2074,19],[3045,6,2074,19,"key"],[3045,9,2074,19],[3046,6,2074,19,"value"],[3046,11,2074,19],[3047,8,2074,19],[3047,12,2074,19,"_enroll2"],[3047,20,2074,19],[3047,23,2074,19,"_asyncToGenerator"],[3047,40,2074,19],[3047,41,2095,4],[3047,52,2095,18,"params"],[3047,58,2095,24],[3047,60,2095,26],[3048,10,2095,26],[3048,14,2095,26,"_this26"],[3048,21,2095,26],[3049,10,2096,8],[3049,14,2096,12],[3050,12,2097,12],[3050,25,2097,25],[3050,29,2097,29],[3050,30,2097,30,"_useSession"],[3050,41,2097,41],[3051,14,2097,41],[3051,18,2097,41,"_ref36"],[3051,24,2097,41],[3051,27,2097,41,"_asyncToGenerator"],[3051,44,2097,41],[3051,45,2097,42],[3051,56,2097,49,"result"],[3051,62,2097,55],[3051,64,2097,60],[3052,16,2098,16],[3052,20,2098,20,"_a"],[3052,22,2098,22],[3052,24,2098,24,"_b"],[3052,26,2098,26],[3053,16,2099,16],[3053,20,2099,30,"sessionData"],[3053,31,2099,41],[3053,34,2099,67,"result"],[3053,40,2099,73],[3053,41,2099,24,"data"],[3053,45,2099,28],[3054,18,2099,50,"sessionError"],[3054,30,2099,62],[3054,33,2099,67,"result"],[3054,39,2099,73],[3054,40,2099,43,"error"],[3054,45,2099,48],[3055,16,2100,16],[3055,20,2100,20,"sessionError"],[3055,32,2100,32],[3055,34,2100,34],[3056,18,2101,20],[3056,25,2101,27],[3057,20,2101,29,"data"],[3057,24,2101,33],[3057,26,2101,35],[3057,30,2101,39],[3058,20,2101,41,"error"],[3058,25,2101,46],[3058,27,2101,48,"sessionError"],[3059,18,2101,61],[3059,19,2101,62],[3060,16,2102,16],[3061,16,2103,16],[3061,20,2103,22,"body"],[3061,24,2103,26],[3061,27,2103,29,"Object"],[3061,33,2103,35],[3061,34,2103,36,"assign"],[3061,40,2103,42],[3061,41,2103,43],[3062,18,2103,45,"friendly_name"],[3062,31,2103,58],[3062,33,2103,60,"params"],[3062,39,2103,66],[3062,40,2103,67,"friendlyName"],[3062,52,2103,79],[3063,18,2103,81,"factor_type"],[3063,29,2103,92],[3063,31,2103,94,"params"],[3063,37,2103,100],[3063,38,2103,101,"factorType"],[3064,16,2103,112],[3064,17,2103,113],[3064,19,2103,116,"params"],[3064,25,2103,122],[3064,26,2103,123,"factorType"],[3064,36,2103,133],[3064,41,2103,138],[3064,48,2103,145],[3064,51,2103,148],[3065,18,2103,150,"phone"],[3065,23,2103,155],[3065,25,2103,157,"params"],[3065,31,2103,163],[3065,32,2103,164,"phone"],[3066,16,2103,170],[3066,17,2103,171],[3066,20,2103,174],[3067,18,2103,176,"issuer"],[3067,24,2103,182],[3067,26,2103,184,"params"],[3067,32,2103,190],[3067,33,2103,191,"issuer"],[3068,16,2103,198],[3068,17,2103,200],[3068,18,2103,201],[3069,16,2104,16],[3069,20,2104,16,"_yield20"],[3069,28,2104,16],[3069,37,2104,46],[3069,38,2104,47],[3069,39,2104,48],[3069,41,2104,50,"fetch_1"],[3069,48,2104,57],[3069,49,2104,58,"_request"],[3069,57,2104,66],[3069,59,2104,68,"_this26"],[3069,66,2104,72],[3069,67,2104,73,"fetch"],[3069,72,2104,78],[3069,74,2104,80],[3069,80,2104,86],[3069,82,2104,88],[3069,85,2104,91,"_this26"],[3069,92,2104,95],[3069,93,2104,96,"url"],[3069,96,2104,99],[3069,106,2104,109],[3069,108,2104,111],[3070,20,2105,20,"body"],[3070,24,2105,24],[3071,20,2106,20,"headers"],[3071,27,2106,27],[3071,29,2106,29,"_this26"],[3071,36,2106,33],[3071,37,2106,34,"headers"],[3071,44,2106,41],[3072,20,2107,20,"jwt"],[3072,23,2107,23],[3072,25,2107,25],[3072,26,2107,26,"_a"],[3072,28,2107,28],[3072,31,2107,31,"sessionData"],[3072,42,2107,42],[3072,47,2107,47],[3072,51,2107,51],[3072,55,2107,55,"sessionData"],[3072,66,2107,66],[3072,71,2107,66,"undefined"],[3072,80,2107,77],[3072,83,2107,77,"undefined"],[3072,92,2107,77],[3072,95,2107,89,"sessionData"],[3072,106,2107,100],[3072,107,2107,101,"session"],[3072,114,2107,108],[3072,120,2107,114],[3072,124,2107,118],[3072,128,2107,122,"_a"],[3072,130,2107,124],[3072,135,2107,124,"undefined"],[3072,144,2107,135],[3072,147,2107,135,"undefined"],[3072,156,2107,135],[3072,159,2107,147,"_a"],[3072,161,2107,149],[3072,162,2107,150,"access_token"],[3073,18,2108,16],[3073,19,2108,17],[3073,20,2108,18],[3074,18,2104,24,"data"],[3074,22,2104,28],[3074,25,2104,28,"_yield20"],[3074,33,2104,28],[3074,34,2104,24,"data"],[3074,38,2104,28],[3075,18,2104,30,"error"],[3075,23,2104,35],[3075,26,2104,35,"_yield20"],[3075,34,2104,35],[3075,35,2104,30,"error"],[3075,40,2104,35],[3076,16,2109,16],[3076,20,2109,20,"error"],[3076,25,2109,25],[3076,27,2109,27],[3077,18,2110,20],[3077,25,2110,27],[3078,20,2110,29,"data"],[3078,24,2110,33],[3078,26,2110,35],[3078,30,2110,39],[3079,20,2110,41,"error"],[3080,18,2110,47],[3080,19,2110,48],[3081,16,2111,16],[3082,16,2112,16],[3082,20,2112,20,"params"],[3082,26,2112,26],[3082,27,2112,27,"factorType"],[3082,37,2112,37],[3082,42,2112,42],[3082,48,2112,48],[3082,53,2112,53],[3082,54,2112,54,"_b"],[3082,56,2112,56],[3082,59,2112,59,"data"],[3082,63,2112,63],[3082,68,2112,68],[3082,72,2112,72],[3082,76,2112,76,"data"],[3082,80,2112,80],[3082,85,2112,80,"undefined"],[3082,94,2112,91],[3082,97,2112,91,"undefined"],[3082,106,2112,91],[3082,109,2112,103,"data"],[3082,113,2112,107],[3082,114,2112,108,"totp"],[3082,118,2112,112],[3082,124,2112,118],[3082,128,2112,122],[3082,132,2112,126,"_b"],[3082,134,2112,128],[3082,139,2112,128,"undefined"],[3082,148,2112,139],[3082,151,2112,139,"undefined"],[3082,160,2112,139],[3082,163,2112,151,"_b"],[3082,165,2112,153],[3082,166,2112,154,"qr_code"],[3082,173,2112,161],[3082,174,2112,162],[3082,176,2112,164],[3083,18,2113,20,"data"],[3083,22,2113,24],[3083,23,2113,25,"totp"],[3083,27,2113,29],[3083,28,2113,30,"qr_code"],[3083,35,2113,37],[3083,38,2113,40],[3083,66,2113,68,"data"],[3083,70,2113,72],[3083,71,2113,73,"totp"],[3083,75,2113,77],[3083,76,2113,78,"qr_code"],[3083,83,2113,85],[3083,85,2113,87],[3084,16,2114,16],[3085,16,2115,16],[3085,23,2115,23],[3086,18,2115,25,"data"],[3086,22,2115,29],[3087,18,2115,31,"error"],[3087,23,2115,36],[3087,25,2115,38],[3088,16,2115,43],[3088,17,2115,44],[3089,14,2116,12],[3089,15,2116,13],[3090,14,2116,13],[3090,31,2116,13,"_x60"],[3090,35,2116,13],[3091,16,2116,13],[3091,23,2116,13,"_ref36"],[3091,29,2116,13],[3091,30,2116,13,"apply"],[3091,35,2116,13],[3091,42,2116,13,"arguments"],[3091,51,2116,13],[3092,14,2116,13],[3093,12,2116,13],[3093,16,2116,14],[3094,10,2117,8],[3094,11,2117,9],[3094,12,2118,8],[3094,19,2118,15,"error"],[3094,24,2118,20],[3094,26,2118,22],[3095,12,2119,12],[3095,16,2119,16],[3095,17,2119,17],[3095,18,2119,18],[3095,20,2119,20,"errors_1"],[3095,28,2119,28],[3095,29,2119,29,"isAuthError"],[3095,40,2119,40],[3095,42,2119,42,"error"],[3095,47,2119,47],[3095,48,2119,48],[3095,50,2119,50],[3096,14,2120,16],[3096,21,2120,23],[3097,16,2120,25,"data"],[3097,20,2120,29],[3097,22,2120,31],[3097,26,2120,35],[3098,16,2120,37,"error"],[3099,14,2120,43],[3099,15,2120,44],[3100,12,2121,12],[3101,12,2122,12],[3101,18,2122,18,"error"],[3101,23,2122,23],[3102,10,2123,8],[3103,8,2124,4],[3103,9,2124,5],[3104,8,2124,5],[3104,17,2095,10,"_enroll"],[3104,24,2095,17,"_enroll"],[3104,25,2095,17,"_x59"],[3104,29,2095,17],[3105,10,2095,17],[3105,17,2095,17,"_enroll2"],[3105,25,2095,17],[3105,26,2095,17,"apply"],[3105,31,2095,17],[3105,38,2095,17,"arguments"],[3105,47,2095,17],[3106,8,2095,17],[3107,8,2095,17],[3107,15,2095,10,"_enroll"],[3107,22,2095,17],[3108,6,2095,17],[3109,6,2125,4],[3110,0,2126,0],[3111,0,2127,0],[3112,4,2125,4],[3113,6,2125,4,"key"],[3113,9,2125,4],[3114,6,2125,4,"value"],[3114,11,2125,4],[3115,8,2125,4],[3115,12,2125,4,"_verify2"],[3115,20,2125,4],[3115,23,2125,4,"_asyncToGenerator"],[3115,40,2125,4],[3115,41,2128,4],[3115,52,2128,18,"params"],[3115,58,2128,24],[3115,60,2128,26],[3116,10,2128,26],[3116,14,2128,26,"_this27"],[3116,21,2128,26],[3117,10,2129,8],[3117,17,2129,15],[3117,21,2129,19],[3117,22,2129,20,"_acquireLock"],[3117,34,2129,32],[3117,52,2129,32,"_asyncToGenerator"],[3117,69,2129,32],[3117,70,2129,37],[3117,83,2129,49],[3118,12,2130,12],[3118,16,2130,16],[3119,14,2131,16],[3119,27,2131,29,"_this27"],[3119,34,2131,33],[3119,35,2131,34,"_useSession"],[3119,46,2131,45],[3120,16,2131,45],[3120,20,2131,45,"_ref38"],[3120,26,2131,45],[3120,29,2131,45,"_asyncToGenerator"],[3120,46,2131,45],[3120,47,2131,46],[3120,58,2131,53,"result"],[3120,64,2131,59],[3120,66,2131,64],[3121,18,2132,20],[3121,22,2132,24,"_a"],[3121,24,2132,26],[3122,18,2133,20],[3122,22,2133,34,"sessionData"],[3122,33,2133,45],[3122,36,2133,71,"result"],[3122,42,2133,77],[3122,43,2133,28,"data"],[3122,47,2133,32],[3123,20,2133,54,"sessionError"],[3123,32,2133,66],[3123,35,2133,71,"result"],[3123,41,2133,77],[3123,42,2133,47,"error"],[3123,47,2133,52],[3124,18,2134,20],[3124,22,2134,24,"sessionError"],[3124,34,2134,36],[3124,36,2134,38],[3125,20,2135,24],[3125,27,2135,31],[3126,22,2135,33,"data"],[3126,26,2135,37],[3126,28,2135,39],[3126,32,2135,43],[3127,22,2135,45,"error"],[3127,27,2135,50],[3127,29,2135,52,"sessionError"],[3128,20,2135,65],[3128,21,2135,66],[3129,18,2136,20],[3130,18,2137,20],[3130,22,2137,20,"_yield21"],[3130,30,2137,20],[3130,39,2137,50],[3130,40,2137,51],[3130,41,2137,52],[3130,43,2137,54,"fetch_1"],[3130,50,2137,61],[3130,51,2137,62,"_request"],[3130,59,2137,70],[3130,61,2137,72,"_this27"],[3130,68,2137,76],[3130,69,2137,77,"fetch"],[3130,74,2137,82],[3130,76,2137,84],[3130,82,2137,90],[3130,84,2137,92],[3130,87,2137,95,"_this27"],[3130,94,2137,99],[3130,95,2137,100,"url"],[3130,98,2137,103],[3130,110,2137,115,"params"],[3130,116,2137,121],[3130,117,2137,122,"factorId"],[3130,125,2137,130],[3130,134,2137,139],[3130,136,2137,141],[3131,22,2138,24,"body"],[3131,26,2138,28],[3131,28,2138,30],[3132,24,2138,32,"code"],[3132,28,2138,36],[3132,30,2138,38,"params"],[3132,36,2138,44],[3132,37,2138,45,"code"],[3132,41,2138,49],[3133,24,2138,51,"challenge_id"],[3133,36,2138,63],[3133,38,2138,65,"params"],[3133,44,2138,71],[3133,45,2138,72,"challengeId"],[3134,22,2138,84],[3134,23,2138,85],[3135,22,2139,24,"headers"],[3135,29,2139,31],[3135,31,2139,33,"_this27"],[3135,38,2139,37],[3135,39,2139,38,"headers"],[3135,46,2139,45],[3136,22,2140,24,"jwt"],[3136,25,2140,27],[3136,27,2140,29],[3136,28,2140,30,"_a"],[3136,30,2140,32],[3136,33,2140,35,"sessionData"],[3136,44,2140,46],[3136,49,2140,51],[3136,53,2140,55],[3136,57,2140,59,"sessionData"],[3136,68,2140,70],[3136,73,2140,70,"undefined"],[3136,82,2140,81],[3136,85,2140,81,"undefined"],[3136,94,2140,81],[3136,97,2140,93,"sessionData"],[3136,108,2140,104],[3136,109,2140,105,"session"],[3136,116,2140,112],[3136,122,2140,118],[3136,126,2140,122],[3136,130,2140,126,"_a"],[3136,132,2140,128],[3136,137,2140,128,"undefined"],[3136,146,2140,139],[3136,149,2140,139,"undefined"],[3136,158,2140,139],[3136,161,2140,151,"_a"],[3136,163,2140,153],[3136,164,2140,154,"access_token"],[3137,20,2141,20],[3137,21,2141,21],[3137,22,2141,22],[3138,20,2137,28,"data"],[3138,24,2137,32],[3138,27,2137,32,"_yield21"],[3138,35,2137,32],[3138,36,2137,28,"data"],[3138,40,2137,32],[3139,20,2137,34,"error"],[3139,25,2137,39],[3139,28,2137,39,"_yield21"],[3139,36,2137,39],[3139,37,2137,34,"error"],[3139,42,2137,39],[3140,18,2142,20],[3140,22,2142,24,"error"],[3140,27,2142,29],[3140,29,2142,31],[3141,20,2143,24],[3141,27,2143,31],[3142,22,2143,33,"data"],[3142,26,2143,37],[3142,28,2143,39],[3142,32,2143,43],[3143,22,2143,45,"error"],[3144,20,2143,51],[3144,21,2143,52],[3145,18,2144,20],[3146,18,2145,20],[3146,24,2145,26,"_this27"],[3146,31,2145,30],[3146,32,2145,31,"_saveSession"],[3146,44,2145,43],[3146,45,2145,44,"Object"],[3146,51,2145,50],[3146,52,2145,51,"assign"],[3146,58,2145,57],[3146,59,2145,58],[3147,20,2145,60,"expires_at"],[3147,30,2145,70],[3147,32,2145,72,"Math"],[3147,36,2145,76],[3147,37,2145,77,"round"],[3147,42,2145,82],[3147,43,2145,83,"Date"],[3147,47,2145,87],[3147,48,2145,88,"now"],[3147,51,2145,91],[3147,52,2145,92],[3147,53,2145,93],[3147,56,2145,96],[3147,60,2145,100],[3147,61,2145,101],[3147,64,2145,104,"data"],[3147,68,2145,108],[3147,69,2145,109,"expires_in"],[3148,18,2145,120],[3148,19,2145,121],[3148,21,2145,123,"data"],[3148,25,2145,127],[3148,26,2145,128],[3148,27,2145,129],[3149,18,2146,20],[3149,24,2146,26,"_this27"],[3149,31,2146,30],[3149,32,2146,31,"_notifyAllSubscribers"],[3149,53,2146,52],[3149,54,2146,53],[3149,78,2146,77],[3149,80,2146,79,"data"],[3149,84,2146,83],[3149,85,2146,84],[3150,18,2147,20],[3150,25,2147,27],[3151,20,2147,29,"data"],[3151,24,2147,33],[3152,20,2147,35,"error"],[3153,18,2147,41],[3153,19,2147,42],[3154,16,2148,16],[3154,17,2148,17],[3155,16,2148,17],[3155,33,2148,17,"_x62"],[3155,37,2148,17],[3156,18,2148,17],[3156,25,2148,17,"_ref38"],[3156,31,2148,17],[3156,32,2148,17,"apply"],[3156,37,2148,17],[3156,44,2148,17,"arguments"],[3156,53,2148,17],[3157,16,2148,17],[3158,14,2148,17],[3158,18,2148,18],[3159,12,2149,12],[3159,13,2149,13],[3159,14,2150,12],[3159,21,2150,19,"error"],[3159,26,2150,24],[3159,28,2150,26],[3160,14,2151,16],[3160,18,2151,20],[3160,19,2151,21],[3160,20,2151,22],[3160,22,2151,24,"errors_1"],[3160,30,2151,32],[3160,31,2151,33,"isAuthError"],[3160,42,2151,44],[3160,44,2151,46,"error"],[3160,49,2151,51],[3160,50,2151,52],[3160,52,2151,54],[3161,16,2152,20],[3161,23,2152,27],[3162,18,2152,29,"data"],[3162,22,2152,33],[3162,24,2152,35],[3162,28,2152,39],[3163,18,2152,41,"error"],[3164,16,2152,47],[3164,17,2152,48],[3165,14,2153,16],[3166,14,2154,16],[3166,20,2154,22,"error"],[3166,25,2154,27],[3167,12,2155,12],[3168,10,2156,8],[3168,11,2156,9],[3168,13,2156,10],[3169,8,2157,4],[3169,9,2157,5],[3170,8,2157,5],[3170,17,2128,10,"_verify"],[3170,24,2128,17,"_verify"],[3170,25,2128,17,"_x61"],[3170,29,2128,17],[3171,10,2128,17],[3171,17,2128,17,"_verify2"],[3171,25,2128,17],[3171,26,2128,17,"apply"],[3171,31,2128,17],[3171,38,2128,17,"arguments"],[3171,47,2128,17],[3172,8,2128,17],[3173,8,2128,17],[3173,15,2128,10,"_verify"],[3173,22,2128,17],[3174,6,2128,17],[3175,6,2158,4],[3176,0,2159,0],[3177,0,2160,0],[3178,6,2158,4],[3179,4,2158,4],[3180,6,2158,4,"key"],[3180,9,2158,4],[3181,6,2158,4,"value"],[3181,11,2158,4],[3182,8,2158,4],[3182,12,2158,4,"_challenge2"],[3182,23,2158,4],[3182,26,2158,4,"_asyncToGenerator"],[3182,43,2158,4],[3182,44,2161,4],[3182,55,2161,21,"params"],[3182,61,2161,27],[3182,63,2161,29],[3183,10,2161,29],[3183,14,2161,29,"_this28"],[3183,21,2161,29],[3184,10,2162,8],[3184,17,2162,15],[3184,21,2162,19],[3184,22,2162,20,"_acquireLock"],[3184,34,2162,32],[3184,52,2162,32,"_asyncToGenerator"],[3184,69,2162,32],[3184,70,2162,37],[3184,83,2162,49],[3185,12,2163,12],[3185,16,2163,16],[3186,14,2164,16],[3186,27,2164,29,"_this28"],[3186,34,2164,33],[3186,35,2164,34,"_useSession"],[3186,46,2164,45],[3187,16,2164,45],[3187,20,2164,45,"_ref40"],[3187,26,2164,45],[3187,29,2164,45,"_asyncToGenerator"],[3187,46,2164,45],[3187,47,2164,46],[3187,58,2164,53,"result"],[3187,64,2164,59],[3187,66,2164,64],[3188,18,2165,20],[3188,22,2165,24,"_a"],[3188,24,2165,26],[3189,18,2166,20],[3189,22,2166,34,"sessionData"],[3189,33,2166,45],[3189,36,2166,71,"result"],[3189,42,2166,77],[3189,43,2166,28,"data"],[3189,47,2166,32],[3190,20,2166,54,"sessionError"],[3190,32,2166,66],[3190,35,2166,71,"result"],[3190,41,2166,77],[3190,42,2166,47,"error"],[3190,47,2166,52],[3191,18,2167,20],[3191,22,2167,24,"sessionError"],[3191,34,2167,36],[3191,36,2167,38],[3192,20,2168,24],[3192,27,2168,31],[3193,22,2168,33,"data"],[3193,26,2168,37],[3193,28,2168,39],[3193,32,2168,43],[3194,22,2168,45,"error"],[3194,27,2168,50],[3194,29,2168,52,"sessionError"],[3195,20,2168,65],[3195,21,2168,66],[3196,18,2169,20],[3197,18,2170,20],[3197,31,2170,33],[3197,32,2170,34],[3197,33,2170,35],[3197,35,2170,37,"fetch_1"],[3197,42,2170,44],[3197,43,2170,45,"_request"],[3197,51,2170,53],[3197,53,2170,55,"_this28"],[3197,60,2170,59],[3197,61,2170,60,"fetch"],[3197,66,2170,65],[3197,68,2170,67],[3197,74,2170,73],[3197,76,2170,75],[3197,79,2170,78,"_this28"],[3197,86,2170,82],[3197,87,2170,83,"url"],[3197,90,2170,86],[3197,102,2170,98,"params"],[3197,108,2170,104],[3197,109,2170,105,"factorId"],[3197,117,2170,113],[3197,129,2170,125],[3197,131,2170,127],[3198,20,2171,24,"body"],[3198,24,2171,28],[3198,26,2171,30],[3199,22,2171,32,"channel"],[3199,29,2171,39],[3199,31,2171,41,"params"],[3199,37,2171,47],[3199,38,2171,48,"channel"],[3200,20,2171,56],[3200,21,2171,57],[3201,20,2172,24,"headers"],[3201,27,2172,31],[3201,29,2172,33,"_this28"],[3201,36,2172,37],[3201,37,2172,38,"headers"],[3201,44,2172,45],[3202,20,2173,24,"jwt"],[3202,23,2173,27],[3202,25,2173,29],[3202,26,2173,30,"_a"],[3202,28,2173,32],[3202,31,2173,35,"sessionData"],[3202,42,2173,46],[3202,47,2173,51],[3202,51,2173,55],[3202,55,2173,59,"sessionData"],[3202,66,2173,70],[3202,71,2173,70,"undefined"],[3202,80,2173,81],[3202,83,2173,81,"undefined"],[3202,92,2173,81],[3202,95,2173,93,"sessionData"],[3202,106,2173,104],[3202,107,2173,105,"session"],[3202,114,2173,112],[3202,120,2173,118],[3202,124,2173,122],[3202,128,2173,126,"_a"],[3202,130,2173,128],[3202,135,2173,128,"undefined"],[3202,144,2173,139],[3202,147,2173,139,"undefined"],[3202,156,2173,139],[3202,159,2173,151,"_a"],[3202,161,2173,153],[3202,162,2173,154,"access_token"],[3203,18,2174,20],[3203,19,2174,21],[3203,20,2174,22],[3204,16,2175,16],[3204,17,2175,17],[3205,16,2175,17],[3205,33,2175,17,"_x64"],[3205,37,2175,17],[3206,18,2175,17],[3206,25,2175,17,"_ref40"],[3206,31,2175,17],[3206,32,2175,17,"apply"],[3206,37,2175,17],[3206,44,2175,17,"arguments"],[3206,53,2175,17],[3207,16,2175,17],[3208,14,2175,17],[3208,18,2175,18],[3209,12,2176,12],[3209,13,2176,13],[3209,14,2177,12],[3209,21,2177,19,"error"],[3209,26,2177,24],[3209,28,2177,26],[3210,14,2178,16],[3210,18,2178,20],[3210,19,2178,21],[3210,20,2178,22],[3210,22,2178,24,"errors_1"],[3210,30,2178,32],[3210,31,2178,33,"isAuthError"],[3210,42,2178,44],[3210,44,2178,46,"error"],[3210,49,2178,51],[3210,50,2178,52],[3210,52,2178,54],[3211,16,2179,20],[3211,23,2179,27],[3212,18,2179,29,"data"],[3212,22,2179,33],[3212,24,2179,35],[3212,28,2179,39],[3213,18,2179,41,"error"],[3214,16,2179,47],[3214,17,2179,48],[3215,14,2180,16],[3216,14,2181,16],[3216,20,2181,22,"error"],[3216,25,2181,27],[3217,12,2182,12],[3218,10,2183,8],[3218,11,2183,9],[3218,13,2183,10],[3219,8,2184,4],[3219,9,2184,5],[3220,8,2184,5],[3220,17,2161,10,"_challenge"],[3220,27,2161,20,"_challenge"],[3220,28,2161,20,"_x63"],[3220,32,2161,20],[3221,10,2161,20],[3221,17,2161,20,"_challenge2"],[3221,28,2161,20],[3221,29,2161,20,"apply"],[3221,34,2161,20],[3221,41,2161,20,"arguments"],[3221,50,2161,20],[3222,8,2161,20],[3223,8,2161,20],[3223,15,2161,10,"_challenge"],[3223,25,2161,20],[3224,6,2161,20],[3225,6,2185,4],[3226,0,2186,0],[3227,0,2187,0],[3228,6,2185,4],[3229,4,2185,4],[3230,6,2185,4,"key"],[3230,9,2185,4],[3231,6,2185,4,"value"],[3231,11,2185,4],[3232,8,2185,4],[3232,12,2185,4,"_challengeAndVerify2"],[3232,32,2185,4],[3232,35,2185,4,"_asyncToGenerator"],[3232,52,2185,4],[3232,53,2188,4],[3232,64,2188,30,"params"],[3232,70,2188,36],[3232,72,2188,38],[3233,10,2189,8],[3234,10,2190,8],[3235,10,2191,8],[3235,14,2191,8,"_yield$this$_challeng"],[3235,35,2191,8],[3235,44,2191,69],[3235,48,2191,73],[3235,49,2191,74,"_challenge"],[3235,59,2191,84],[3235,60,2191,85],[3236,14,2192,12,"factorId"],[3236,22,2192,20],[3236,24,2192,22,"params"],[3236,30,2192,28],[3236,31,2192,29,"factorId"],[3237,12,2193,8],[3237,13,2193,9],[3237,14,2193,10],[3238,12,2191,22,"challengeData"],[3238,25,2191,35],[3238,28,2191,35,"_yield$this$_challeng"],[3238,49,2191,35],[3238,50,2191,16,"data"],[3238,54,2191,20],[3239,12,2191,44,"challengeError"],[3239,26,2191,58],[3239,29,2191,58,"_yield$this$_challeng"],[3239,50,2191,58],[3239,51,2191,37,"error"],[3239,56,2191,42],[3240,10,2194,8],[3240,14,2194,12,"challengeError"],[3240,28,2194,26],[3240,30,2194,28],[3241,12,2195,12],[3241,19,2195,19],[3242,14,2195,21,"data"],[3242,18,2195,25],[3242,20,2195,27],[3242,24,2195,31],[3243,14,2195,33,"error"],[3243,19,2195,38],[3243,21,2195,40,"challengeError"],[3244,12,2195,55],[3244,13,2195,56],[3245,10,2196,8],[3246,10,2197,8],[3246,23,2197,21],[3246,27,2197,25],[3246,28,2197,26,"_verify"],[3246,35,2197,33],[3246,36,2197,34],[3247,12,2198,12,"factorId"],[3247,20,2198,20],[3247,22,2198,22,"params"],[3247,28,2198,28],[3247,29,2198,29,"factorId"],[3247,37,2198,37],[3248,12,2199,12,"challengeId"],[3248,23,2199,23],[3248,25,2199,25,"challengeData"],[3248,38,2199,38],[3248,39,2199,39,"id"],[3248,41,2199,41],[3249,12,2200,12,"code"],[3249,16,2200,16],[3249,18,2200,18,"params"],[3249,24,2200,24],[3249,25,2200,25,"code"],[3250,10,2201,8],[3250,11,2201,9],[3250,12,2201,10],[3251,8,2202,4],[3251,9,2202,5],[3252,8,2202,5],[3252,17,2188,10,"_challengeAndVerify"],[3252,36,2188,29,"_challengeAndVerify"],[3252,37,2188,29,"_x65"],[3252,41,2188,29],[3253,10,2188,29],[3253,17,2188,29,"_challengeAndVerify2"],[3253,37,2188,29],[3253,38,2188,29,"apply"],[3253,43,2188,29],[3253,50,2188,29,"arguments"],[3253,59,2188,29],[3254,8,2188,29],[3255,8,2188,29],[3255,15,2188,10,"_challengeAndVerify"],[3255,34,2188,29],[3256,6,2188,29],[3257,6,2203,4],[3258,0,2204,0],[3259,0,2205,0],[3260,6,2203,4],[3261,4,2203,4],[3262,6,2203,4,"key"],[3262,9,2203,4],[3263,6,2203,4,"value"],[3263,11,2203,4],[3264,8,2203,4],[3264,12,2203,4,"_listFactors2"],[3264,25,2203,4],[3264,28,2203,4,"_asyncToGenerator"],[3264,45,2203,4],[3264,46,2206,4],[3264,59,2206,25],[3265,10,2207,8],[3266,10,2208,8],[3266,14,2208,8,"_yield$this$getUser2"],[3266,34,2208,8],[3266,43,2208,60],[3266,47,2208,64],[3266,48,2208,65,"getUser"],[3266,55,2208,72],[3266,56,2208,73],[3266,57,2208,74],[3267,12,2208,24,"user"],[3267,16,2208,28],[3267,19,2208,28,"_yield$this$getUser2"],[3267,39,2208,28],[3267,40,2208,16,"data"],[3267,44,2208,20],[3267,45,2208,24,"user"],[3267,49,2208,28],[3268,12,2208,39,"userError"],[3268,21,2208,48],[3268,24,2208,48,"_yield$this$getUser2"],[3268,44,2208,48],[3268,45,2208,32,"error"],[3268,50,2208,37],[3269,10,2209,8],[3269,14,2209,12,"userError"],[3269,23,2209,21],[3269,25,2209,23],[3270,12,2210,12],[3270,19,2210,19],[3271,14,2210,21,"data"],[3271,18,2210,25],[3271,20,2210,27],[3271,24,2210,31],[3272,14,2210,33,"error"],[3272,19,2210,38],[3272,21,2210,40,"userError"],[3273,12,2210,50],[3273,13,2210,51],[3274,10,2211,8],[3275,10,2212,8],[3275,14,2212,14,"factors"],[3275,21,2212,21],[3275,24,2212,24],[3275,25,2212,25,"user"],[3275,29,2212,29],[3275,34,2212,34],[3275,38,2212,38],[3275,42,2212,42,"user"],[3275,46,2212,46],[3275,51,2212,46,"undefined"],[3275,60,2212,57],[3275,63,2212,57,"undefined"],[3275,72,2212,57],[3275,75,2212,69,"user"],[3275,79,2212,73],[3275,80,2212,74,"factors"],[3275,87,2212,81],[3275,92,2212,86],[3275,94,2212,88],[3276,10,2213,8],[3276,14,2213,14,"totp"],[3276,18,2213,18],[3276,21,2213,21,"factors"],[3276,28,2213,28],[3276,29,2213,29,"filter"],[3276,35,2213,35],[3276,36,2213,37,"factor"],[3276,42,2213,43],[3276,46,2213,48,"factor"],[3276,52,2213,54],[3276,53,2213,55,"factor_type"],[3276,64,2213,66],[3276,69,2213,71],[3276,75,2213,77],[3276,79,2213,81,"factor"],[3276,85,2213,87],[3276,86,2213,88,"status"],[3276,92,2213,94],[3276,97,2213,99],[3276,107,2213,109],[3276,108,2213,110],[3277,10,2214,8],[3277,14,2214,14,"phone"],[3277,19,2214,19],[3277,22,2214,22,"factors"],[3277,29,2214,29],[3277,30,2214,30,"filter"],[3277,36,2214,36],[3277,37,2214,38,"factor"],[3277,43,2214,44],[3277,47,2214,49,"factor"],[3277,53,2214,55],[3277,54,2214,56,"factor_type"],[3277,65,2214,67],[3277,70,2214,72],[3277,77,2214,79],[3277,81,2214,83,"factor"],[3277,87,2214,89],[3277,88,2214,90,"status"],[3277,94,2214,96],[3277,99,2214,101],[3277,109,2214,111],[3277,110,2214,112],[3278,10,2215,8],[3278,17,2215,15],[3279,12,2216,12,"data"],[3279,16,2216,16],[3279,18,2216,18],[3280,14,2217,16,"all"],[3280,17,2217,19],[3280,19,2217,21,"factors"],[3280,26,2217,28],[3281,14,2218,16,"totp"],[3281,18,2218,20],[3282,14,2219,16,"phone"],[3283,12,2220,12],[3283,13,2220,13],[3284,12,2221,12,"error"],[3284,17,2221,17],[3284,19,2221,19],[3285,10,2222,8],[3285,11,2222,9],[3286,8,2223,4],[3286,9,2223,5],[3287,8,2223,5],[3287,17,2206,10,"_listFactors"],[3287,29,2206,22,"_listFactors"],[3287,30,2206,22],[3288,10,2206,22],[3288,17,2206,22,"_listFactors2"],[3288,30,2206,22],[3288,31,2206,22,"apply"],[3288,36,2206,22],[3288,43,2206,22,"arguments"],[3288,52,2206,22],[3289,8,2206,22],[3290,8,2206,22],[3290,15,2206,10,"_listFactors"],[3290,27,2206,22],[3291,6,2206,22],[3292,6,2224,4],[3293,0,2225,0],[3294,0,2226,0],[3295,6,2224,4],[3296,4,2224,4],[3297,6,2224,4,"key"],[3297,9,2224,4],[3298,6,2224,4,"value"],[3298,11,2224,4],[3299,8,2224,4],[3299,12,2224,4,"_getAuthenticatorAssuranceLevel2"],[3299,44,2224,4],[3299,47,2224,4,"_asyncToGenerator"],[3299,64,2224,4],[3299,65,2227,4],[3299,78,2227,44],[3300,10,2227,44],[3300,14,2227,44,"_this29"],[3300,21,2227,44],[3301,10,2228,8],[3301,17,2228,15],[3301,21,2228,19],[3301,22,2228,20,"_acquireLock"],[3301,34,2228,32],[3301,52,2228,32,"_asyncToGenerator"],[3301,69,2228,32],[3301,70,2228,37],[3301,83,2228,49],[3302,12,2229,12],[3302,25,2229,25,"_this29"],[3302,32,2229,29],[3302,33,2229,30,"_useSession"],[3302,44,2229,41],[3303,14,2229,41],[3303,18,2229,41,"_ref42"],[3303,24,2229,41],[3303,27,2229,41,"_asyncToGenerator"],[3303,44,2229,41],[3303,45,2229,42],[3303,56,2229,49,"result"],[3303,62,2229,55],[3303,64,2229,60],[3304,16,2230,16],[3304,20,2230,20,"_a"],[3304,22,2230,22],[3304,24,2230,24,"_b"],[3304,26,2230,26],[3305,16,2231,16],[3305,20,2231,32,"session"],[3305,27,2231,39],[3305,30,2231,68,"result"],[3305,36,2231,74],[3305,37,2231,24,"data"],[3305,41,2231,28],[3305,42,2231,32,"session"],[3305,49,2231,39],[3306,18,2231,50,"sessionError"],[3306,30,2231,62],[3306,33,2231,68,"result"],[3306,39,2231,74],[3306,40,2231,43,"error"],[3306,45,2231,48],[3307,16,2232,16],[3307,20,2232,20,"sessionError"],[3307,32,2232,32],[3307,34,2232,34],[3308,18,2233,20],[3308,25,2233,27],[3309,20,2233,29,"data"],[3309,24,2233,33],[3309,26,2233,35],[3309,30,2233,39],[3310,20,2233,41,"error"],[3310,25,2233,46],[3310,27,2233,48,"sessionError"],[3311,18,2233,61],[3311,19,2233,62],[3312,16,2234,16],[3313,16,2235,16],[3313,20,2235,20],[3313,21,2235,21,"session"],[3313,28,2235,28],[3313,30,2235,30],[3314,18,2236,20],[3314,25,2236,27],[3315,20,2237,24,"data"],[3315,24,2237,28],[3315,26,2237,30],[3316,22,2237,32,"currentLevel"],[3316,34,2237,44],[3316,36,2237,46],[3316,40,2237,50],[3317,22,2237,52,"nextLevel"],[3317,31,2237,61],[3317,33,2237,63],[3317,37,2237,67],[3318,22,2237,69,"currentAuthenticationMethods"],[3318,50,2237,97],[3318,52,2237,99],[3319,20,2237,102],[3319,21,2237,103],[3320,20,2238,24,"error"],[3320,25,2238,29],[3320,27,2238,31],[3321,18,2239,20],[3321,19,2239,21],[3322,16,2240,16],[3323,16,2241,16],[3323,20,2241,16,"_ref43"],[3323,26,2241,16],[3323,29,2241,36],[3323,30,2241,37],[3323,31,2241,38],[3323,33,2241,40,"helpers_1"],[3323,42,2241,49],[3323,43,2241,50,"decodeJWT"],[3323,52,2241,59],[3323,54,2241,61,"session"],[3323,61,2241,68],[3323,62,2241,69,"access_token"],[3323,74,2241,81],[3323,75,2241,82],[3324,18,2241,24,"payload"],[3324,25,2241,31],[3324,28,2241,31,"_ref43"],[3324,34,2241,31],[3324,35,2241,24,"payload"],[3324,42,2241,31],[3325,16,2242,16],[3325,20,2242,20,"currentLevel"],[3325,32,2242,32],[3325,35,2242,35],[3325,39,2242,39],[3326,16,2243,16],[3326,20,2243,20,"payload"],[3326,27,2243,27],[3326,28,2243,28,"aal"],[3326,31,2243,31],[3326,33,2243,33],[3327,18,2244,20,"currentLevel"],[3327,30,2244,32],[3327,33,2244,35,"payload"],[3327,40,2244,42],[3327,41,2244,43,"aal"],[3327,44,2244,46],[3328,16,2245,16],[3329,16,2246,16],[3329,20,2246,20,"nextLevel"],[3329,29,2246,29],[3329,32,2246,32,"currentLevel"],[3329,44,2246,44],[3330,16,2247,16],[3330,20,2247,22,"verifiedFactors"],[3330,35,2247,37],[3330,38,2247,40],[3330,39,2247,41,"_b"],[3330,41,2247,43],[3330,44,2247,46],[3330,45,2247,47,"_a"],[3330,47,2247,49],[3330,50,2247,52,"session"],[3330,57,2247,59],[3330,58,2247,60,"user"],[3330,62,2247,64],[3330,63,2247,65,"factors"],[3330,70,2247,72],[3330,76,2247,78],[3330,80,2247,82],[3330,84,2247,86,"_a"],[3330,86,2247,88],[3330,91,2247,88,"undefined"],[3330,100,2247,99],[3330,103,2247,99,"undefined"],[3330,112,2247,99],[3330,115,2247,111,"_a"],[3330,117,2247,113],[3330,118,2247,114,"filter"],[3330,124,2247,120],[3330,125,2247,122,"factor"],[3330,131,2247,128],[3330,135,2247,133,"factor"],[3330,141,2247,139],[3330,142,2247,140,"status"],[3330,148,2247,146],[3330,153,2247,151],[3330,163,2247,161],[3330,164,2247,162],[3330,170,2247,168],[3330,174,2247,172],[3330,178,2247,176,"_b"],[3330,180,2247,178],[3330,185,2247,178,"undefined"],[3330,194,2247,189],[3330,197,2247,192,"_b"],[3330,199,2247,194],[3330,202,2247,197],[3330,204,2247,199],[3331,16,2248,16],[3331,20,2248,20,"verifiedFactors"],[3331,35,2248,35],[3331,36,2248,36,"length"],[3331,42,2248,42],[3331,45,2248,45],[3331,46,2248,46],[3331,48,2248,48],[3332,18,2249,20,"nextLevel"],[3332,27,2249,29],[3332,30,2249,32],[3332,36,2249,38],[3333,16,2250,16],[3334,16,2251,16],[3334,20,2251,22,"currentAuthenticationMethods"],[3334,48,2251,50],[3334,51,2251,53,"payload"],[3334,58,2251,60],[3334,59,2251,61,"amr"],[3334,62,2251,64],[3334,66,2251,68],[3334,68,2251,70],[3335,16,2252,16],[3335,23,2252,23],[3336,18,2252,25,"data"],[3336,22,2252,29],[3336,24,2252,31],[3337,20,2252,33,"currentLevel"],[3337,32,2252,45],[3338,20,2252,47,"nextLevel"],[3338,29,2252,56],[3339,20,2252,58,"currentAuthenticationMethods"],[3340,18,2252,87],[3340,19,2252,88],[3341,18,2252,90,"error"],[3341,23,2252,95],[3341,25,2252,97],[3342,16,2252,102],[3342,17,2252,103],[3343,14,2253,12],[3343,15,2253,13],[3344,14,2253,13],[3344,31,2253,13,"_x66"],[3344,35,2253,13],[3345,16,2253,13],[3345,23,2253,13,"_ref42"],[3345,29,2253,13],[3345,30,2253,13,"apply"],[3345,35,2253,13],[3345,42,2253,13,"arguments"],[3345,51,2253,13],[3346,14,2253,13],[3347,12,2253,13],[3347,16,2253,14],[3348,10,2254,8],[3348,11,2254,9],[3348,13,2254,10],[3349,8,2255,4],[3349,9,2255,5],[3350,8,2255,5],[3350,17,2227,10,"_getAuthenticatorAssuranceLevel"],[3350,48,2227,41,"_getAuthenticatorAssuranceLevel"],[3350,49,2227,41],[3351,10,2227,41],[3351,17,2227,41,"_getAuthenticatorAssuranceLevel2"],[3351,49,2227,41],[3351,50,2227,41,"apply"],[3351,55,2227,41],[3351,62,2227,41,"arguments"],[3351,71,2227,41],[3352,8,2227,41],[3353,8,2227,41],[3353,15,2227,10,"_getAuthenticatorAssuranceLevel"],[3353,46,2227,41],[3354,6,2227,41],[3355,4,2227,41],[3356,6,2227,41,"key"],[3356,9,2227,41],[3357,6,2227,41,"value"],[3357,11,2227,41],[3358,8,2227,41],[3358,12,2227,41,"_fetchJwk"],[3358,21,2227,41],[3358,24,2227,41,"_asyncToGenerator"],[3358,41,2227,41],[3358,42,2256,4],[3358,53,2256,19,"kid"],[3358,56,2256,22],[3358,58,2256,45],[3359,10,2256,45],[3359,14,2256,24,"jwks"],[3359,18,2256,28],[3359,21,2256,28,"arguments"],[3359,30,2256,28],[3359,31,2256,28,"length"],[3359,37,2256,28],[3359,45,2256,28,"arguments"],[3359,54,2256,28],[3359,62,2256,28,"undefined"],[3359,71,2256,28],[3359,74,2256,28,"arguments"],[3359,83,2256,28],[3359,89,2256,31],[3360,12,2256,33,"keys"],[3360,16,2256,37],[3360,18,2256,39],[3361,10,2256,42],[3361,11,2256,43],[3362,10,2257,8],[3363,10,2258,8],[3363,14,2258,12,"jwk"],[3363,17,2258,15],[3363,20,2258,18,"jwks"],[3363,24,2258,22],[3363,25,2258,23,"keys"],[3363,29,2258,27],[3363,30,2258,28,"find"],[3363,34,2258,32],[3363,35,2258,34,"key"],[3363,38,2258,37],[3363,42,2258,42,"key"],[3363,45,2258,45],[3363,46,2258,46,"kid"],[3363,49,2258,49],[3363,54,2258,54,"kid"],[3363,57,2258,57],[3363,58,2258,58],[3364,10,2259,8],[3364,14,2259,12,"jwk"],[3364,17,2259,15],[3364,19,2259,17],[3365,12,2260,12],[3365,19,2260,19,"jwk"],[3365,22,2260,22],[3366,10,2261,8],[3367,10,2262,8],[3367,14,2262,14,"now"],[3367,17,2262,17],[3367,20,2262,20,"Date"],[3367,24,2262,24],[3367,25,2262,25,"now"],[3367,28,2262,28],[3367,29,2262,29],[3367,30,2262,30],[3368,10,2263,8],[3369,10,2264,8,"jwk"],[3369,13,2264,11],[3369,16,2264,14],[3369,20,2264,18],[3369,21,2264,19,"jwks"],[3369,25,2264,23],[3369,26,2264,24,"keys"],[3369,30,2264,28],[3369,31,2264,29,"find"],[3369,35,2264,33],[3369,36,2264,35,"key"],[3369,39,2264,38],[3369,43,2264,43,"key"],[3369,46,2264,46],[3369,47,2264,47,"kid"],[3369,50,2264,50],[3369,55,2264,55,"kid"],[3369,58,2264,58],[3369,59,2264,59],[3370,10,2265,8],[3371,10,2266,8],[3371,14,2266,12,"jwk"],[3371,17,2266,15],[3371,21,2266,19],[3371,25,2266,23],[3371,26,2266,24,"jwks_cached_at"],[3371,40,2266,38],[3371,43,2266,41,"constants_1"],[3371,54,2266,52],[3371,55,2266,53,"JWKS_TTL"],[3371,63,2266,61],[3371,66,2266,64,"now"],[3371,69,2266,67],[3371,71,2266,69],[3372,12,2267,12],[3372,19,2267,19,"jwk"],[3372,22,2267,22],[3373,10,2268,8],[3374,10,2269,8],[3375,10,2270,8],[3375,14,2270,8,"_yield22"],[3375,22,2270,8],[3375,31,2270,38],[3375,32,2270,39],[3375,33,2270,40],[3375,35,2270,42,"fetch_1"],[3375,42,2270,49],[3375,43,2270,50,"_request"],[3375,51,2270,58],[3375,53,2270,60],[3375,57,2270,64],[3375,58,2270,65,"fetch"],[3375,63,2270,70],[3375,65,2270,72],[3375,70,2270,77],[3375,72,2270,79],[3375,75,2270,82],[3375,79,2270,86],[3375,80,2270,87,"url"],[3375,83,2270,90],[3375,107,2270,114],[3375,109,2270,116],[3376,14,2271,12,"headers"],[3376,21,2271,19],[3376,23,2271,21],[3376,27,2271,25],[3376,28,2271,26,"headers"],[3377,12,2272,8],[3377,13,2272,9],[3377,14,2272,10],[3378,12,2270,16,"data"],[3378,16,2270,20],[3378,19,2270,20,"_yield22"],[3378,27,2270,20],[3378,28,2270,16,"data"],[3378,32,2270,20],[3379,12,2270,22,"error"],[3379,17,2270,27],[3379,20,2270,27,"_yield22"],[3379,28,2270,27],[3379,29,2270,22,"error"],[3379,34,2270,27],[3380,10,2273,8],[3380,14,2273,12,"error"],[3380,19,2273,17],[3380,21,2273,19],[3381,12,2274,12],[3381,18,2274,18,"error"],[3381,23,2274,23],[3382,10,2275,8],[3383,10,2276,8],[3383,14,2276,12],[3383,15,2276,13,"data"],[3383,19,2276,17],[3383,20,2276,18,"keys"],[3383,24,2276,22],[3383,28,2276,26,"data"],[3383,32,2276,30],[3383,33,2276,31,"keys"],[3383,37,2276,35],[3383,38,2276,36,"length"],[3383,44,2276,42],[3383,49,2276,47],[3383,50,2276,48],[3383,52,2276,50],[3384,12,2277,12],[3384,19,2277,19],[3384,23,2277,23],[3385,10,2278,8],[3386,10,2279,8],[3386,14,2279,12],[3386,15,2279,13,"jwks"],[3386,19,2279,17],[3386,22,2279,20,"data"],[3386,26,2279,24],[3387,10,2280,8],[3387,14,2280,12],[3387,15,2280,13,"jwks_cached_at"],[3387,29,2280,27],[3387,32,2280,30,"now"],[3387,35,2280,33],[3388,10,2281,8],[3389,10,2282,8,"jwk"],[3389,13,2282,11],[3389,16,2282,14,"data"],[3389,20,2282,18],[3389,21,2282,19,"keys"],[3389,25,2282,23],[3389,26,2282,24,"find"],[3389,30,2282,28],[3389,31,2282,30,"key"],[3389,34,2282,33],[3389,38,2282,38,"key"],[3389,41,2282,41],[3389,42,2282,42,"kid"],[3389,45,2282,45],[3389,50,2282,50,"kid"],[3389,53,2282,53],[3389,54,2282,54],[3390,10,2283,8],[3390,14,2283,12],[3390,15,2283,13,"jwk"],[3390,18,2283,16],[3390,20,2283,18],[3391,12,2284,12],[3391,19,2284,19],[3391,23,2284,23],[3392,10,2285,8],[3393,10,2286,8],[3393,17,2286,15,"jwk"],[3393,20,2286,18],[3394,8,2287,4],[3394,9,2287,5],[3395,8,2287,5],[3395,17,2256,10,"fetchJwk"],[3395,25,2256,18,"fetchJwk"],[3395,26,2256,18,"_x67"],[3395,30,2256,18],[3396,10,2256,18],[3396,17,2256,18,"_fetchJwk"],[3396,26,2256,18],[3396,27,2256,18,"apply"],[3396,32,2256,18],[3396,39,2256,18,"arguments"],[3396,48,2256,18],[3397,8,2256,18],[3398,8,2256,18],[3398,15,2256,10,"fetchJwk"],[3398,23,2256,18],[3399,6,2256,18],[3400,6,2288,4],[3401,0,2289,0],[3402,0,2290,0],[3403,0,2291,0],[3404,0,2292,0],[3405,0,2293,0],[3406,0,2294,0],[3407,0,2295,0],[3408,0,2296,0],[3409,0,2297,0],[3410,0,2298,0],[3411,0,2299,0],[3412,0,2300,0],[3413,0,2301,0],[3414,0,2302,0],[3415,0,2303,0],[3416,4,2288,4],[3417,6,2288,4,"key"],[3417,9,2288,4],[3418,6,2288,4,"value"],[3418,11,2288,4],[3419,8,2288,4],[3419,12,2288,4,"_getClaims"],[3419,22,2288,4],[3419,25,2288,4,"_asyncToGenerator"],[3419,42,2288,4],[3419,43,2304,4],[3419,54,2304,20,"jwt"],[3419,57,2304,23],[3419,59,2304,39],[3420,10,2304,39],[3420,14,2304,25,"options"],[3420,21,2304,32],[3420,24,2304,32,"arguments"],[3420,33,2304,32],[3420,34,2304,32,"length"],[3420,40,2304,32],[3420,48,2304,32,"arguments"],[3420,57,2304,32],[3420,65,2304,32,"undefined"],[3420,74,2304,32],[3420,77,2304,32,"arguments"],[3420,86,2304,32],[3420,92,2304,35],[3420,93,2304,36],[3420,94,2304,37],[3421,10,2305,8],[3421,14,2305,12],[3422,12,2306,12],[3422,16,2306,16,"token"],[3422,21,2306,21],[3422,24,2306,24,"jwt"],[3422,27,2306,27],[3423,12,2307,12],[3423,16,2307,16],[3423,17,2307,17,"token"],[3423,22,2307,22],[3423,24,2307,24],[3424,14,2308,16],[3424,18,2308,16,"_yield$this$getSessio"],[3424,39,2308,16],[3424,48,2308,46],[3424,52,2308,50],[3424,53,2308,51,"getSession"],[3424,63,2308,61],[3424,64,2308,62],[3424,65,2308,63],[3425,16,2308,24,"data"],[3425,20,2308,28],[3425,23,2308,28,"_yield$this$getSessio"],[3425,44,2308,28],[3425,45,2308,24,"data"],[3425,49,2308,28],[3426,16,2308,30,"error"],[3426,21,2308,35],[3426,24,2308,35,"_yield$this$getSessio"],[3426,45,2308,35],[3426,46,2308,30,"error"],[3426,51,2308,35],[3427,14,2309,16],[3427,18,2309,20,"error"],[3427,23,2309,25],[3427,27,2309,29],[3427,28,2309,30,"data"],[3427,32,2309,34],[3427,33,2309,35,"session"],[3427,40,2309,42],[3427,42,2309,44],[3428,16,2310,20],[3428,23,2310,27],[3429,18,2310,29,"data"],[3429,22,2310,33],[3429,24,2310,35],[3429,28,2310,39],[3430,18,2310,41,"error"],[3431,16,2310,47],[3431,17,2310,48],[3432,14,2311,16],[3433,14,2312,16,"token"],[3433,19,2312,21],[3433,22,2312,24,"data"],[3433,26,2312,28],[3433,27,2312,29,"session"],[3433,34,2312,36],[3433,35,2312,37,"access_token"],[3433,47,2312,49],[3434,12,2313,12],[3435,12,2314,12],[3435,16,2314,12,"_ref44"],[3435,22,2314,12],[3435,25,2314,101],[3435,26,2314,102],[3435,27,2314,103],[3435,29,2314,105,"helpers_1"],[3435,38,2314,114],[3435,39,2314,115,"decodeJWT"],[3435,48,2314,124],[3435,50,2314,126,"token"],[3435,55,2314,131],[3435,56,2314,132],[3436,14,2314,20,"header"],[3436,20,2314,26],[3436,23,2314,26,"_ref44"],[3436,29,2314,26],[3436,30,2314,20,"header"],[3436,36,2314,26],[3437,14,2314,28,"payload"],[3437,21,2314,35],[3437,24,2314,35,"_ref44"],[3437,30,2314,35],[3437,31,2314,28,"payload"],[3437,38,2314,35],[3438,14,2314,37,"signature"],[3438,23,2314,46],[3438,26,2314,46,"_ref44"],[3438,32,2314,46],[3438,33,2314,37,"signature"],[3438,42,2314,46],[3439,14,2314,46,"_ref44$raw"],[3439,24,2314,46],[3439,27,2314,46,"_ref44"],[3439,33,2314,46],[3439,34,2314,48,"raw"],[3439,37,2314,51],[3440,14,2314,63,"rawHeader"],[3440,23,2314,72],[3440,26,2314,72,"_ref44$raw"],[3440,36,2314,72],[3440,37,2314,55,"header"],[3440,43,2314,61],[3441,14,2314,83,"rawPayload"],[3441,24,2314,93],[3441,27,2314,93,"_ref44$raw"],[3441,37,2314,93],[3441,38,2314,74,"payload"],[3441,45,2314,81],[3442,12,2315,12],[3442,16,2315,16],[3442,18,2315,18,"options"],[3442,25,2315,25],[3442,30,2315,30],[3442,34,2315,34],[3442,38,2315,38,"options"],[3442,45,2315,45],[3442,50,2315,45,"undefined"],[3442,59,2315,56],[3442,62,2315,56,"undefined"],[3442,71,2315,56],[3442,74,2315,68,"options"],[3442,81,2315,75],[3442,82,2315,76,"allowExpired"],[3442,94,2315,88],[3442,95,2315,89],[3442,97,2315,91],[3443,14,2316,16],[3444,14,2317,16],[3444,15,2317,17],[3444,16,2317,18],[3444,18,2317,20,"helpers_1"],[3444,27,2317,29],[3444,28,2317,30,"validateExp"],[3444,39,2317,41],[3444,41,2317,43,"payload"],[3444,48,2317,50],[3444,49,2317,51,"exp"],[3444,52,2317,54],[3444,53,2317,55],[3445,12,2318,12],[3446,12,2319,12],[3446,16,2319,18,"signingKey"],[3446,26,2319,28],[3446,29,2319,31],[3446,30,2319,32,"header"],[3446,36,2319,38],[3446,37,2319,39,"alg"],[3446,40,2319,42],[3446,44,2320,16,"header"],[3446,50,2320,22],[3446,51,2320,23,"alg"],[3446,54,2320,26],[3446,55,2320,27,"startsWith"],[3446,65,2320,37],[3446,66,2320,38],[3446,70,2320,42],[3446,71,2320,43],[3446,75,2321,16],[3446,76,2321,17,"header"],[3446,82,2321,23],[3446,83,2321,24,"kid"],[3446,86,2321,27],[3446,90,2322,16],[3446,92,2322,18],[3446,100,2322,26],[3446,104,2322,30,"globalThis"],[3446,114,2322,40],[3446,118,2322,44],[3446,126,2322,52],[3446,130,2322,56,"globalThis"],[3446,140,2322,66],[3446,141,2322,67,"crypto"],[3446,147,2322,73],[3446,148,2322,74],[3446,151,2323,18],[3446,155,2323,22],[3446,164,2324,24],[3446,168,2324,28],[3446,169,2324,29,"fetchJwk"],[3446,177,2324,37],[3446,178,2324,38,"header"],[3446,184,2324,44],[3446,185,2324,45,"kid"],[3446,188,2324,48],[3446,190,2324,50],[3446,191,2324,51,"options"],[3446,198,2324,58],[3446,203,2324,63],[3446,207,2324,67],[3446,211,2324,71,"options"],[3446,218,2324,78],[3446,223,2324,78,"undefined"],[3446,232,2324,89],[3446,235,2324,89,"undefined"],[3446,244,2324,89],[3446,247,2324,101,"options"],[3446,254,2324,108],[3446,255,2324,109,"keys"],[3446,259,2324,113],[3446,263,2324,117],[3447,14,2324,119,"keys"],[3447,18,2324,123],[3447,20,2324,125,"options"],[3447,27,2324,132],[3447,28,2324,133,"keys"],[3448,12,2324,138],[3448,13,2324,139],[3448,16,2324,142,"options"],[3448,23,2324,149],[3448,28,2324,154],[3448,32,2324,158],[3448,36,2324,162,"options"],[3448,43,2324,169],[3448,48,2324,169,"undefined"],[3448,57,2324,180],[3448,60,2324,180,"undefined"],[3448,69,2324,180],[3448,72,2324,192,"options"],[3448,79,2324,199],[3448,80,2324,200,"jwks"],[3448,84,2324,204],[3448,85,2324,205],[3449,12,2325,12],[3450,12,2326,12],[3450,16,2326,16],[3450,17,2326,17,"signingKey"],[3450,27,2326,27],[3450,29,2326,29],[3451,14,2327,16],[3451,18,2327,16,"_yield$this$getUser3"],[3451,38,2327,16],[3451,47,2327,40],[3451,51,2327,44],[3451,52,2327,45,"getUser"],[3451,59,2327,52],[3451,60,2327,53,"token"],[3451,65,2327,58],[3451,66,2327,59],[3452,16,2327,24,"error"],[3452,23,2327,29],[3452,26,2327,29,"_yield$this$getUser3"],[3452,46,2327,29],[3452,47,2327,24,"error"],[3452,52,2327,29],[3453,14,2328,16],[3453,18,2328,20,"error"],[3453,25,2328,25],[3453,27,2328,27],[3454,16,2329,20],[3454,22,2329,26,"error"],[3454,29,2329,31],[3455,14,2330,16],[3456,14,2331,16],[3457,14,2332,16],[3457,21,2332,23],[3458,16,2333,20,"data"],[3458,20,2333,24],[3458,22,2333,26],[3459,18,2334,24,"claims"],[3459,24,2334,30],[3459,26,2334,32,"payload"],[3459,33,2334,39],[3460,18,2335,24,"header"],[3460,24,2335,30],[3461,18,2336,24,"signature"],[3462,16,2337,20],[3462,17,2337,21],[3463,16,2338,20,"error"],[3463,21,2338,25],[3463,23,2338,27],[3464,14,2339,16],[3464,15,2339,17],[3465,12,2340,12],[3466,12,2341,12],[3466,16,2341,18,"algorithm"],[3466,25,2341,27],[3466,28,2341,30],[3466,29,2341,31],[3466,30,2341,32],[3466,32,2341,34,"helpers_1"],[3466,41,2341,43],[3466,42,2341,44,"getAlgorithm"],[3466,54,2341,56],[3466,56,2341,58,"header"],[3466,62,2341,64],[3466,63,2341,65,"alg"],[3466,66,2341,68],[3466,67,2341,69],[3467,12,2342,12],[3468,12,2343,12],[3468,16,2343,18,"publicKey"],[3468,25,2343,27],[3468,34,2343,36,"crypto"],[3468,40,2343,42],[3468,41,2343,43,"subtle"],[3468,47,2343,49],[3468,48,2343,50,"importKey"],[3468,57,2343,59],[3468,58,2343,60],[3468,63,2343,65],[3468,65,2343,67,"signingKey"],[3468,75,2343,77],[3468,77,2343,79,"algorithm"],[3468,86,2343,88],[3468,88,2343,90],[3468,92,2343,94],[3468,94,2343,96],[3468,95,2344,16],[3468,103,2344,24],[3468,104,2345,13],[3468,105,2345,14],[3469,12,2346,12],[3470,12,2347,12],[3470,16,2347,18,"isValid"],[3470,23,2347,25],[3470,32,2347,34,"crypto"],[3470,38,2347,40],[3470,39,2347,41,"subtle"],[3470,45,2347,47],[3470,46,2347,48,"verify"],[3470,52,2347,54],[3470,53,2347,55,"algorithm"],[3470,62,2347,64],[3470,64,2347,66,"publicKey"],[3470,73,2347,75],[3470,75,2347,77,"signature"],[3470,84,2347,86],[3470,86,2347,88],[3470,87,2347,89],[3470,88,2347,90],[3470,90,2347,92,"base64url_1"],[3470,101,2347,103],[3470,102,2347,104,"stringToUint8Array"],[3470,120,2347,122],[3470,122,2347,124],[3470,125,2347,127,"rawHeader"],[3470,134,2347,136],[3470,138,2347,140,"rawPayload"],[3470,148,2347,150],[3470,150,2347,152],[3470,151,2347,153],[3470,152,2347,154],[3471,12,2348,12],[3471,16,2348,16],[3471,17,2348,17,"isValid"],[3471,24,2348,24],[3471,26,2348,26],[3472,14,2349,16],[3472,20,2349,22],[3472,24,2349,26,"errors_1"],[3472,32,2349,34],[3472,33,2349,35,"AuthInvalidJwtError"],[3472,52,2349,54],[3472,53,2349,55],[3472,76,2349,78],[3472,77,2349,79],[3473,12,2350,12],[3474,12,2351,12],[3475,12,2352,12],[3475,19,2352,19],[3476,14,2353,16,"data"],[3476,18,2353,20],[3476,20,2353,22],[3477,16,2354,20,"claims"],[3477,22,2354,26],[3477,24,2354,28,"payload"],[3477,31,2354,35],[3478,16,2355,20,"header"],[3478,22,2355,26],[3479,16,2356,20,"signature"],[3480,14,2357,16],[3480,15,2357,17],[3481,14,2358,16,"error"],[3481,19,2358,21],[3481,21,2358,23],[3482,12,2359,12],[3482,13,2359,13],[3483,10,2360,8],[3483,11,2360,9],[3483,12,2361,8],[3483,19,2361,15,"error"],[3483,24,2361,20],[3483,26,2361,22],[3484,12,2362,12],[3484,16,2362,16],[3484,17,2362,17],[3484,18,2362,18],[3484,20,2362,20,"errors_1"],[3484,28,2362,28],[3484,29,2362,29,"isAuthError"],[3484,40,2362,40],[3484,42,2362,42,"error"],[3484,47,2362,47],[3484,48,2362,48],[3484,50,2362,50],[3485,14,2363,16],[3485,21,2363,23],[3486,16,2363,25,"data"],[3486,20,2363,29],[3486,22,2363,31],[3486,26,2363,35],[3487,16,2363,37,"error"],[3488,14,2363,43],[3488,15,2363,44],[3489,12,2364,12],[3490,12,2365,12],[3490,18,2365,18,"error"],[3490,23,2365,23],[3491,10,2366,8],[3492,8,2367,4],[3492,9,2367,5],[3493,8,2367,5],[3493,17,2304,10,"getClaims"],[3493,26,2304,19,"getClaims"],[3493,27,2304,19,"_x68"],[3493,31,2304,19],[3494,10,2304,19],[3494,17,2304,19,"_getClaims"],[3494,27,2304,19],[3494,28,2304,19,"apply"],[3494,33,2304,19],[3494,40,2304,19,"arguments"],[3494,49,2304,19],[3495,8,2304,19],[3496,8,2304,19],[3496,15,2304,10,"getClaims"],[3496,24,2304,19],[3497,6,2304,19],[3498,4,2304,19],[3499,2,2304,19],[3500,2,2369,0,"exports"],[3500,9,2369,7],[3500,10,2369,8,"default"],[3500,17,2369,15],[3500,20,2369,18,"GoTrueClient"],[3500,32,2369,30],[3501,2,2370,0,"GoTrueClient"],[3501,14,2370,12],[3501,15,2370,13,"nextInstanceID"],[3501,29,2370,27],[3501,32,2370,30],[3501,33,2370,31],[3502,0,2370,32],[3502,3]],"functionMap":{"names":["<global>","<anonymous>","lockNoOp","GoTrueClient","constructor","_b.addEventListener$argument_1","get__jwks","set__jwks","get__jwks_cached_at","set__jwks_cached_at","_debug","initialize","_acquireLock$argument_1","_initialize","setTimeout$argument_0","signInAnonymously","signUp","signInWithPassword","signInWithOAuth","exchangeCodeForSession","signInWithWeb3","signInWithSolana","options.signInWithSolana.resources.map$argument_0","_exchangeCodeForSession","signInWithIdToken","signInWithOtp","verifyOtp","signInWithSSO","reauthenticate","_reauthenticate","_useSession$argument_0","resend","getSession","_acquireLock","lock$argument_2","_useSession","__loadSession","Proxy$argument_1.get","getUser","_getUser","updateUser","_updateUser","setSession","_setSession","refreshSession","_refreshSession","_getSessionFromURL","_isImplicitGrantCallback","_isPKCECallback","signOut","_signOut","onAuthStateChange","subscription.unsubscribe","_emitInitialSession","resetPasswordForEmail","getUserIdentities","linkIdentity","unlinkIdentity","_refreshAccessToken","_isValidSession","_handleProviderSignIn","_recoverAndRefresh","_callRefreshToken","_notifyAllSubscribers","Array.from.map$argument_0","_saveSession","_removeSession","_removeVisibilityChangedCallback","_startAutoRefresh","setInterval$argument_0","_stopAutoRefresh","startAutoRefresh","stopAutoRefresh","_autoRefreshTokenTick","_handleVisibilityChange","visibilityChangedCallback","_onVisibilityChanged","_getUrlForProvider","_unenroll","_enroll","_verify","_challenge","_challengeAndVerify","_listFactors","factors.filter$argument_0","_getAuthenticatorAssuranceLevel","_a.filter$argument_0","fetchJwk","jwks.keys.find$argument_0","data.keys.find$argument_0","getClaims"],"mappings":"AAA;wDCC;CDE;AEyB;CFE;AGU;ICI;6GCuG;aDG;KDG;IGI;KHG;IIC;KJE;IKC;KLG;IMC;KNE;IOC;KPK;IQM;kCVI;+CWC;aXE;SUC;KRE;IUO;2BCqC;iBDO;KVmB;IYM;KZ6B;IaW;Kb6D;IcS;KdoD;IeK;KfQ;IgBI;qCPE;SOE;KhBC;IiBK;KjBM;IkBC;sECmG,6BD;KlBwC;IoBC;KpBkC;IqBK;KrBoC;IsBkB;KtB+C;IuBI;KvBmC;IwBe;KxBuB;IyBK;2ChBE;SgBE;KzBC;I0BC;0CCE;aDW;K1BQ;I4BI;K5BoC;I6BY;mDpBE;oCkBC;alBE;SoBC;K7BE;I8BI;gChCO;iBgCG;yChCC;iBgCO;8ECG;6CjCK;qBiCO;aDc;K9BK;IgCO;KhCU;IiCM;6BC2C;yBDQ;KjCe;ImCQ;mD1BK;S0BE;KnCE;IoCC;0CTS;aSe;KpCc;IqCI;2C5BE;S4BE;KrCC;IsCC;0CXE;aW4B;KtCQ;IuCM;2C9BE;S8BE;KvCC;IwCC;KxCgD;IyCO;2ChCE;SgCE;KzCC;I0CC;0CfE;aeoB;K1CQ;I2CI;K3CsF;I4CI;K5CE;I6CI;K7CG;I8CS;2CrCE;SqCE;K9CC;I+CC;sCpBC;SoBuB;K/CC;IgDK;yBCK;aDG;SlDI;wCWE;aXE;SkDC;KhDE;IkDC;sCvBC;SuBc;KlDC;ImDQ;KnD0B;IoDI;KpDc;IqDK;2D1BG;a0Be;KrDc;IsDI;0C3BE;a2BU;KtDQ;IuDK;kDzDM;ayDU,EzD;ayDM;KvDY;IwDC;KxDO;IyDC;KzDY;I0DK;K1D0F;I2DC;K3DyC;I4DC;+ECQ;aDO;K5DY;I8DK;K9DmC;I+DC;K/DS;IgEO;KhEY;IiEK;mCCG,kCD;mBtDqB;SsDG;KjEC;ImEK;KnEO;IoEuB;KpEG;IqES;KrEG;IsEI;uC7DG;sDkBI;yBlBY;a6DS;KtEU;IuEM;6CCU,kDD;KvES;IyEI;4ChEe;iBgEQ;KzEQ;I0EO;K1EwB;I2EC;0ChDE;agDU;K3EQ;I4EC;0CjDE;aiDmB;K5EQ;I6EI;qCpEC;8CkBE;iBlBiB;SoEQ;K7EC;I8EI;qCrEC;8CkBE;iBlBW;SqEQ;K9EC;I+EI;K/Ec;IgFI;oCCO,yED;qCCC,0ED;KhFS;IkFI;qCzEC;0CkBC;yHwDkB,wCxD;alBM;SyEC;KlFC;IoFC;iCCE,wBD;kCCM,wBD;6BEkB,wBF;KpFK;IuFiB;KvF+D;CHC"}},"type":"js/module"}]}