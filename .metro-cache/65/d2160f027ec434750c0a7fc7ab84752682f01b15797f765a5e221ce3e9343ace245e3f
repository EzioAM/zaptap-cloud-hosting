{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":97,"index":97}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":98},"end":{"line":2,"column":40,"index":138}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"./ExpoMediaLibrary","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":139},"end":{"line":3,"column":46,"index":185}}],"key":"yXHDHFsvtz5fKc5CK5Xe3zolTC8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.MediaType = void 0;\n  Object.defineProperty(exports, \"PermissionStatus\", {\n    enumerable: true,\n    get: function get() {\n      return _expoModulesCore.PermissionStatus;\n    }\n  });\n  exports.SortBy = void 0;\n  exports.addAssetsToAlbumAsync = addAssetsToAlbumAsync;\n  exports.addListener = addListener;\n  exports.albumNeedsMigrationAsync = albumNeedsMigrationAsync;\n  exports.createAlbumAsync = createAlbumAsync;\n  exports.createAssetAsync = createAssetAsync;\n  exports.deleteAlbumsAsync = deleteAlbumsAsync;\n  exports.deleteAssetsAsync = deleteAssetsAsync;\n  exports.getAlbumAsync = getAlbumAsync;\n  exports.getAlbumsAsync = getAlbumsAsync;\n  exports.getAssetInfoAsync = getAssetInfoAsync;\n  exports.getAssetsAsync = getAssetsAsync;\n  exports.getMomentsAsync = getMomentsAsync;\n  exports.getPermissionsAsync = getPermissionsAsync;\n  exports.isAvailableAsync = isAvailableAsync;\n  exports.migrateAlbumIfNeededAsync = migrateAlbumIfNeededAsync;\n  exports.presentPermissionsPickerAsync = presentPermissionsPickerAsync;\n  exports.removeAllListeners = removeAllListeners;\n  exports.removeAssetsFromAlbumAsync = removeAssetsFromAlbumAsync;\n  exports.removeSubscription = removeSubscription;\n  exports.requestPermissionsAsync = requestPermissionsAsync;\n  exports.saveToLibraryAsync = saveToLibraryAsync;\n  exports.usePermissions = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _reactNative = require(_dependencyMap[3], \"react-native\");\n  var _ExpoMediaLibrary = _interopRequireDefault(require(_dependencyMap[4], \"./ExpoMediaLibrary\"));\n  var _globalThis$expo;\n  var isExpoGo = typeof expo !== 'undefined' && ((_globalThis$expo = globalThis.expo) == null || (_globalThis$expo = _globalThis$expo.modules) == null ? void 0 : _globalThis$expo.ExpoGo);\n  var loggedExpoGoWarning = false;\n  if (isExpoGo && !loggedExpoGoWarning) {\n    console.warn('Due to changes in Androids permission requirements, Expo Go can no longer provide full access to the media library. To test the full functionality of this module, you can create a development build. https://docs.expo.dev/develop/development-builds/create-a-build');\n    loggedExpoGoWarning = true;\n  }\n  function arrayize(item) {\n    if (Array.isArray(item)) {\n      return item;\n    }\n    return item ? [item] : [];\n  }\n  function getId(ref) {\n    if (typeof ref === 'string') {\n      return ref;\n    }\n    return ref ? ref.id : undefined;\n  }\n  function checkAssetIds(assetIds) {\n    if (assetIds.some(function (id) {\n      return !id || typeof id !== 'string';\n    })) {\n      throw new Error('Asset ID must be a string!');\n    }\n  }\n  function checkAlbumIds(albumIds) {\n    if (albumIds.some(function (id) {\n      return !id || typeof id !== 'string';\n    })) {\n      throw new Error('Album ID must be a string!');\n    }\n  }\n  function checkMediaType(mediaType) {\n    if (Object.values(MediaType).indexOf(mediaType) === -1) {\n      throw new Error(`Invalid mediaType: ${mediaType}`);\n    }\n  }\n  function checkSortBy(sortBy) {\n    if (Array.isArray(sortBy)) {\n      checkSortByKey(sortBy[0]);\n      if (typeof sortBy[1] !== 'boolean') {\n        throw new Error('Invalid sortBy array argument. Second item must be a boolean!');\n      }\n    } else {\n      checkSortByKey(sortBy);\n    }\n  }\n  function checkSortByKey(sortBy) {\n    if (Object.values(SortBy).indexOf(sortBy) === -1) {\n      throw new Error(`Invalid sortBy key: ${sortBy}`);\n    }\n  }\n  function sortByOptionToString(sortBy) {\n    checkSortBy(sortBy);\n    if (Array.isArray(sortBy)) {\n      return `${sortBy[0]} ${sortBy[1] ? 'ASC' : 'DESC'}`;\n    }\n    return `${sortBy} DESC`;\n  }\n  function dateToNumber(value) {\n    return value instanceof Date ? value.getTime() : value;\n  }\n  // @needsAudit\n  /**\n   * Possible media types.\n   */\n  var MediaType = exports.MediaType = _ExpoMediaLibrary.default.MediaType;\n  // @needsAudit\n  /**\n   * Supported keys that can be used to sort `getAssetsAsync` results.\n   */\n  var SortBy = exports.SortBy = _ExpoMediaLibrary.default.SortBy;\n  // @needsAudit\n  /**\n   * Returns whether the Media Library API is enabled on the current device.\n   * @return A promise which fulfils with a `boolean`, indicating whether the Media Library API is\n   * available on the current device.\n   */\n  function isAvailableAsync() {\n    return _isAvailableAsync.apply(this, arguments);\n  } // @needsAudit @docsMissing\n  /**\n   * Asks the user to grant permissions for accessing media in user's media library.\n   * @param writeOnly\n   * @param granularPermissions - A list of [`GranularPermission`](#granularpermission) values. This parameter has an\n   * effect only on Android 13 and newer. By default, `expo-media-library` will ask for all possible permissions.\n   * @return A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\n   */\n  function _isAvailableAsync() {\n    _isAvailableAsync = (0, _asyncToGenerator2.default)(function* () {\n      return !!_ExpoMediaLibrary.default && 'getAssetsAsync' in _ExpoMediaLibrary.default;\n    });\n    return _isAvailableAsync.apply(this, arguments);\n  }\n  function requestPermissionsAsync() {\n    return _requestPermissionsAsync.apply(this, arguments);\n  } // @needsAudit @docsMissing\n  /**\n   * Checks user's permissions for accessing media library.\n   * @param writeOnly\n   * @param granularPermissions - A list of [`GranularPermission`](#granularpermission) values. This parameter has\n   * an effect only on Android 13 and newer. By default, `expo-media-library` will ask for all possible permissions.\n   * @return A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\n   */\n  function _requestPermissionsAsync() {\n    _requestPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      var writeOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var granularPermissions = arguments.length > 1 ? arguments[1] : undefined;\n      if (!_ExpoMediaLibrary.default.requestPermissionsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'requestPermissionsAsync');\n      }\n      if (_reactNative.Platform.OS === 'android') {\n        return yield _ExpoMediaLibrary.default.requestPermissionsAsync(writeOnly, granularPermissions);\n      }\n      return yield _ExpoMediaLibrary.default.requestPermissionsAsync(writeOnly);\n    });\n    return _requestPermissionsAsync.apply(this, arguments);\n  }\n  function getPermissionsAsync() {\n    return _getPermissionsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Check or request permissions to access the media library.\n   * This uses both `requestPermissionsAsync` and `getPermissionsAsync` to interact with the permissions.\n   *\n   * @example\n   * ```ts\n   * const [permissionResponse, requestPermission] = MediaLibrary.usePermissions();\n   * ```\n   */\n  function _getPermissionsAsync() {\n    _getPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      var writeOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var granularPermissions = arguments.length > 1 ? arguments[1] : undefined;\n      if (!_ExpoMediaLibrary.default.getPermissionsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getPermissionsAsync');\n      }\n      if (_reactNative.Platform.OS === 'android') {\n        return yield _ExpoMediaLibrary.default.getPermissionsAsync(writeOnly, granularPermissions);\n      }\n      return yield _ExpoMediaLibrary.default.getPermissionsAsync(writeOnly);\n    });\n    return _getPermissionsAsync.apply(this, arguments);\n  }\n  var usePermissions = exports.usePermissions = (0, _expoModulesCore.createPermissionHook)({\n    // TODO(cedric): permission requesters should have an options param or a different requester\n    getMethod: function getMethod(options) {\n      return getPermissionsAsync(options == null ? void 0 : options.writeOnly, options == null ? void 0 : options.granularPermissions);\n    },\n    requestMethod: function requestMethod(options) {\n      return requestPermissionsAsync(options == null ? void 0 : options.writeOnly, options == null ? void 0 : options.granularPermissions);\n    }\n  });\n  // @needsAudit\n  /**\n   * Allows the user to update the assets that your app has access to.\n   * The system modal is only displayed if the user originally allowed only `limited` access to their\n   * media library, otherwise this method is a no-op.\n   * @param mediaTypes Limits the type(s) of media that the user will be granting access to. By default, a list that shows both photos and videos is presented.\n   *\n   * @return A promise that either rejects if the method is unavailable, or resolves to `void`.\n   * > __Note:__ This method doesn't inform you if the user changes which assets your app has access to.\n   * That information is only exposed by iOS, and to obtain it, you need to subscribe for updates to the user's media library using [`addListener()`](#medialibraryaddlistenerlistener).\n   * If `hasIncrementalChanges` is `false`, the user changed their permissions.\n   *\n   * @platform android 14+\n   * @platform ios\n   */\n  function presentPermissionsPickerAsync() {\n    return _presentPermissionsPickerAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Creates an asset from existing file. The most common use case is to save a picture taken by [Camera](./camera).\n   * This method requires `CAMERA_ROLL` permission.\n   *\n   * @example\n   * ```js\n   * const { uri } = await Camera.takePictureAsync();\n   * const asset = await MediaLibrary.createAssetAsync(uri);\n   * ```\n   * @param localUri A URI to the image or video file. It must contain an extension. On Android it\n   * must be a local path, so it must start with `file:///`\n   *\n   * @param album An [Album](#album) or its ID. If provided, the asset will be added to this album upon creation, otherwise it will be added to the default album for the media type.\n   * The album has exist.\n   * @return A promise which fulfils with an object representing an [`Asset`](#asset).\n   */\n  function _presentPermissionsPickerAsync() {\n    _presentPermissionsPickerAsync = (0, _asyncToGenerator2.default)(function* () {\n      var mediaTypes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['photo', 'video'];\n      if (_reactNative.Platform.OS === 'android' && isExpoGo) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'presentPermissionsPickerAsync is unavailable in Expo Go');\n      }\n      if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= 34) {\n        yield _ExpoMediaLibrary.default.requestPermissionsAsync(false, mediaTypes);\n        return;\n      }\n      if (!_ExpoMediaLibrary.default.presentPermissionsPickerAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'presentPermissionsPickerAsync');\n      }\n      return yield _ExpoMediaLibrary.default.presentPermissionsPickerAsync();\n    });\n    return _presentPermissionsPickerAsync.apply(this, arguments);\n  }\n  function createAssetAsync(_x, _x2) {\n    return _createAssetAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Saves the file at given `localUri` to the user's media library. Unlike [`createAssetAsync()`](#medialibrarycreateassetasynclocaluri),\n   * This method doesn't return created asset.\n   * On __iOS 11+__, it's possible to use this method without asking for `CAMERA_ROLL` permission,\n   * however then yours `Info.plist` should have `NSPhotoLibraryAddUsageDescription` key.\n   * @param localUri A URI to the image or video file. It must contain an extension. On Android it\n   * must be a local path, so it must start with `file:///`.\n   */\n  function _createAssetAsync() {\n    _createAssetAsync = (0, _asyncToGenerator2.default)(function* (localUri, album) {\n      if (!_ExpoMediaLibrary.default.createAssetAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'createAssetAsync');\n      }\n      var albumId = getId(album);\n      if (!localUri || typeof localUri !== 'string') {\n        throw new Error('Invalid argument \"localUri\". It must be a string!');\n      }\n      var asset = yield _ExpoMediaLibrary.default.createAssetAsync(localUri, albumId);\n      if (Array.isArray(asset)) {\n        // Android returns an array with asset, we need to pick the first item\n        return asset[0];\n      }\n      return asset;\n    });\n    return _createAssetAsync.apply(this, arguments);\n  }\n  function saveToLibraryAsync(_x3) {\n    return _saveToLibraryAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Adds array of assets to the album.\n   *\n   * On Android, by default it copies assets from the current album to provided one, however it's also\n   * possible to move them by passing `false` as `copyAssets` argument. In case they're copied you\n   * should keep in mind that `getAssetsAsync` will return duplicated assets.\n   * @param assets An array of [Asset](#asset) or their IDs.\n   * @param album An [Album](#album) or its ID.\n   * @param copy __Android only.__ Whether to copy assets to the new album instead of move them.\n   * Defaults to `true`.\n   * @return Returns promise which fulfils with `true` if the assets were successfully added to\n   * the album.\n   */\n  function _saveToLibraryAsync() {\n    _saveToLibraryAsync = (0, _asyncToGenerator2.default)(function* (localUri) {\n      if (!_ExpoMediaLibrary.default.saveToLibraryAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'saveToLibraryAsync');\n      }\n      return yield _ExpoMediaLibrary.default.saveToLibraryAsync(localUri);\n    });\n    return _saveToLibraryAsync.apply(this, arguments);\n  }\n  function addAssetsToAlbumAsync(_x4, _x5) {\n    return _addAssetsToAlbumAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Removes given assets from album.\n   *\n   * On Android, album will be automatically deleted if there are no more assets inside.\n   * @param assets An array of [Asset](#asset) or their IDs.\n   * @param album An [Album](#album) or its ID.\n   * @return Returns promise which fulfils with `true` if the assets were successfully removed from\n   * the album.\n   */\n  function _addAssetsToAlbumAsync() {\n    _addAssetsToAlbumAsync = (0, _asyncToGenerator2.default)(function* (assets, album) {\n      var copy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (!_ExpoMediaLibrary.default.addAssetsToAlbumAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'addAssetsToAlbumAsync');\n      }\n      var assetIds = arrayize(assets).map(getId);\n      var albumId = getId(album);\n      checkAssetIds(assetIds);\n      if (!albumId || typeof albumId !== 'string') {\n        throw new Error('Invalid album ID. It must be a string!');\n      }\n      if (_reactNative.Platform.OS === 'ios') {\n        return yield _ExpoMediaLibrary.default.addAssetsToAlbumAsync(assetIds, albumId);\n      }\n      return yield _ExpoMediaLibrary.default.addAssetsToAlbumAsync(assetIds, albumId, !!copy);\n    });\n    return _addAssetsToAlbumAsync.apply(this, arguments);\n  }\n  function removeAssetsFromAlbumAsync(_x6, _x7) {\n    return _removeAssetsFromAlbumAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Deletes assets from the library. On iOS it deletes assets from all albums they belong to, while\n   * on Android it keeps all copies of them (album is strictly connected to the asset). Also, there is\n   * additional dialog on iOS that requires user to confirm this action.\n   * @param assets An array of [Asset](#asset) or their IDs.\n   * @return Returns promise which fulfils with `true` if the assets were successfully deleted.\n   */\n  function _removeAssetsFromAlbumAsync() {\n    _removeAssetsFromAlbumAsync = (0, _asyncToGenerator2.default)(function* (assets, album) {\n      if (!_ExpoMediaLibrary.default.removeAssetsFromAlbumAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'removeAssetsFromAlbumAsync');\n      }\n      var assetIds = arrayize(assets).map(getId);\n      var albumId = getId(album);\n      checkAssetIds(assetIds);\n      return yield _ExpoMediaLibrary.default.removeAssetsFromAlbumAsync(assetIds, albumId);\n    });\n    return _removeAssetsFromAlbumAsync.apply(this, arguments);\n  }\n  function deleteAssetsAsync(_x8) {\n    return _deleteAssetsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Provides more information about an asset, including GPS location, local URI and EXIF metadata.\n   * @param asset An [Asset](#asset) or its ID.\n   * @param options\n   * @return An [AssetInfo](#assetinfo) object, which is an `Asset` extended by an additional fields.\n   */\n  function _deleteAssetsAsync() {\n    _deleteAssetsAsync = (0, _asyncToGenerator2.default)(function* (assets) {\n      if (!_ExpoMediaLibrary.default.deleteAssetsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'deleteAssetsAsync');\n      }\n      var assetIds = arrayize(assets).map(getId);\n      checkAssetIds(assetIds);\n      return yield _ExpoMediaLibrary.default.deleteAssetsAsync(assetIds);\n    });\n    return _deleteAssetsAsync.apply(this, arguments);\n  }\n  function getAssetInfoAsync(_x9) {\n    return _getAssetInfoAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Queries for user-created albums in media gallery.\n   * @return A promise which fulfils with an array of [`Album`](#asset)s. Depending on Android version,\n   * root directory of your storage may be listed as album titled `\"0\"` or unlisted at all.\n   */\n  function _getAssetInfoAsync() {\n    _getAssetInfoAsync = (0, _asyncToGenerator2.default)(function* (asset) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        shouldDownloadFromNetwork: true\n      };\n      if (!_ExpoMediaLibrary.default.getAssetInfoAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAssetInfoAsync');\n      }\n      var assetId = getId(asset);\n      checkAssetIds([assetId]);\n      var assetInfo = yield _ExpoMediaLibrary.default.getAssetInfoAsync(assetId, options);\n      if (Array.isArray(assetInfo)) {\n        // Android returns an array with asset info, we need to pick the first item\n        return assetInfo[0];\n      }\n      return assetInfo;\n    });\n    return _getAssetInfoAsync.apply(this, arguments);\n  }\n  function getAlbumsAsync() {\n    return _getAlbumsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Queries for an album with a specific name.\n   * @param title Name of the album to look for.\n   * @return An object representing an [`Album`](#album), if album with given name exists, otherwise\n   * returns `null`.\n   */\n  function _getAlbumsAsync() {\n    _getAlbumsAsync = (0, _asyncToGenerator2.default)(function* () {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$includeSmartAlbu = _ref.includeSmartAlbums,\n        includeSmartAlbums = _ref$includeSmartAlbu === void 0 ? false : _ref$includeSmartAlbu;\n      if (!_ExpoMediaLibrary.default.getAlbumsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAlbumsAsync');\n      }\n      return yield _ExpoMediaLibrary.default.getAlbumsAsync({\n        includeSmartAlbums: includeSmartAlbums\n      });\n    });\n    return _getAlbumsAsync.apply(this, arguments);\n  }\n  function getAlbumAsync(_x0) {\n    return _getAlbumAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Creates an album with given name and initial asset. The asset parameter is required on Android,\n   * since it's not possible to create empty album on this platform. On Android, by default it copies\n   * given asset from the current album to the new one, however it's also possible to move it by\n   * passing `false` as `copyAsset` argument.\n   * In case it's copied you should keep in mind that `getAssetsAsync` will return duplicated asset.\n   * > On Android, it's not possible to create an empty album. You must provide an existing asset to copy or move into the album or an uri of a local file, which will be used to create an initial asset for the album.\n   * @param albumName Name of the album to create.\n   * @param asset An [Asset](#asset) or its ID. On Android you either need to provide an asset or a localUri.\n   * @param initialAssetLocalUri A URI to the local media file, which will be used to create the initial asset inside the album. It must contain an extension. On Android it\n   * must be a local path, so it must start with `file:///`. If the `asset` was provided, this parameter will be ignored.\n   * @param copyAsset __Android Only.__ Whether to copy asset to the new album instead of move it. This parameter is ignored if `asset` was not provided.\n   * Defaults to `true`.\n   * @return Newly created [`Album`](#album).\n   */\n  function _getAlbumAsync() {\n    _getAlbumAsync = (0, _asyncToGenerator2.default)(function* (title) {\n      if (!_ExpoMediaLibrary.default.getAlbumAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAlbumAsync');\n      }\n      if (typeof title !== 'string') {\n        throw new Error('Album title must be a string!');\n      }\n      return yield _ExpoMediaLibrary.default.getAlbumAsync(title);\n    });\n    return _getAlbumAsync.apply(this, arguments);\n  }\n  function createAlbumAsync(_x1, _x10) {\n    return _createAlbumAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Deletes given albums from the library. On Android by default it deletes assets belonging to given\n   * albums from the library. On iOS it doesn't delete these assets, however it's possible to do by\n   * passing `true` as `deleteAssets`.\n   * @param albums An array of [`Album`](#asset)s or their IDs.\n   * @param assetRemove __iOS Only.__ Whether to also delete assets belonging to given albums.\n   * Defaults to `false`.\n   * @return Returns a promise which fulfils with `true` if the albums were successfully deleted from\n   * the library.\n   */\n  function _createAlbumAsync() {\n    _createAlbumAsync = (0, _asyncToGenerator2.default)(function* (albumName, asset) {\n      var copyAsset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var initialAssetLocalUri = arguments.length > 3 ? arguments[3] : undefined;\n      if (!_ExpoMediaLibrary.default.createAlbumAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'createAlbumAsync');\n      }\n      var assetId = getId(asset);\n      if (_reactNative.Platform.OS === 'android' && (typeof assetId !== 'string' || assetId.length === 0) && !initialAssetLocalUri) {\n        // it's not possible to create empty album on Android, so initial asset must be provided\n        throw new Error('MediaLibrary.createAlbumAsync must be called with an asset or a localUri on Android.');\n      }\n      if (!albumName || typeof albumName !== 'string') {\n        throw new Error('Invalid argument \"albumName\". It must be a string!');\n      }\n      if (assetId != null && typeof assetId !== 'string') {\n        throw new Error('Asset ID must be a string!');\n      }\n      if (_reactNative.Platform.OS === 'ios') {\n        return yield _ExpoMediaLibrary.default.createAlbumAsync(albumName, assetId, initialAssetLocalUri);\n      }\n      return yield _ExpoMediaLibrary.default.createAlbumAsync(albumName, assetId, !!copyAsset, initialAssetLocalUri);\n    });\n    return _createAlbumAsync.apply(this, arguments);\n  }\n  function deleteAlbumsAsync(_x11) {\n    return _deleteAlbumsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Fetches a page of assets matching the provided criteria.\n   * @param assetsOptions\n   * @return A promise that fulfils with to [`PagedInfo`](#pagedinfo) object with array of [`Asset`](#asset)s.\n   */\n  function _deleteAlbumsAsync() {\n    _deleteAlbumsAsync = (0, _asyncToGenerator2.default)(function* (albums) {\n      var assetRemove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!_ExpoMediaLibrary.default.deleteAlbumsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'deleteAlbumsAsync');\n      }\n      var albumIds = arrayize(albums).map(getId);\n      checkAlbumIds(albumIds);\n      if (_reactNative.Platform.OS === 'android') {\n        return yield _ExpoMediaLibrary.default.deleteAlbumsAsync(albumIds);\n      }\n      return yield _ExpoMediaLibrary.default.deleteAlbumsAsync(albumIds, !!assetRemove);\n    });\n    return _deleteAlbumsAsync.apply(this, arguments);\n  }\n  function getAssetsAsync() {\n    return _getAssetsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Subscribes for updates in user's media library.\n   * @param listener A callback that is fired when any assets have been inserted or deleted from the\n   * library. On Android it's invoked with an empty object. On iOS, it's invoked with [`MediaLibraryAssetsChangeEvent`](#medialibraryassetschangeevent)\n   * object.\n   *\n   * Additionally, only on iOS, the listener is also invoked when the user changes access to individual assets in the media library\n   * using `presentPermissionsPickerAsync()`.\n   * @return An [`Subscription`](#subscription) object that you can call `remove()` on when you would\n   * like to unsubscribe the listener.\n   */\n  function _getAssetsAsync() {\n    _getAssetsAsync = (0, _asyncToGenerator2.default)(function* () {\n      var assetsOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!_ExpoMediaLibrary.default.getAssetsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAssetsAsync');\n      }\n      var first = assetsOptions.first,\n        after = assetsOptions.after,\n        album = assetsOptions.album,\n        sortBy = assetsOptions.sortBy,\n        mediaType = assetsOptions.mediaType,\n        createdAfter = assetsOptions.createdAfter,\n        createdBefore = assetsOptions.createdBefore;\n      var options = {\n        first: first == null ? 20 : first,\n        after: getId(after),\n        album: getId(album),\n        sortBy: arrayize(sortBy),\n        mediaType: arrayize(mediaType || [MediaType.photo]),\n        createdAfter: dateToNumber(createdAfter),\n        createdBefore: dateToNumber(createdBefore)\n      };\n      if (first != null && typeof options.first !== 'number') {\n        throw new Error('Option \"first\" must be a number!');\n      }\n      if (after != null && typeof options.after !== 'string') {\n        throw new Error('Option \"after\" must be a string!');\n      }\n      if (album != null && typeof options.album !== 'string') {\n        throw new Error('Option \"album\" must be a string!');\n      }\n      if (after != null && _reactNative.Platform.OS === 'android' && isNaN(parseInt(getId(after), 10))) {\n        throw new Error('Option \"after\" must be a valid ID!');\n      }\n      if (first != null && first < 0) {\n        throw new Error('Option \"first\" must be a positive integer!');\n      }\n      options.mediaType.forEach(checkMediaType);\n      // TODO(@kitten): Add expected native types for `MediaLibrary`\n      return yield _ExpoMediaLibrary.default.getAssetsAsync(Object.assign({}, options, {\n        sortBy: options.sortBy.map(sortByOptionToString)\n      }));\n    });\n    return _getAssetsAsync.apply(this, arguments);\n  }\n  function addListener(listener) {\n    return _ExpoMediaLibrary.default.addListener(_ExpoMediaLibrary.default.CHANGE_LISTENER_NAME, listener);\n  }\n  // @docsMissing\n  function removeSubscription(subscription) {\n    subscription.remove();\n  }\n  // @needsAudit\n  /**\n   * Removes all listeners.\n   */\n  function removeAllListeners() {\n    _ExpoMediaLibrary.default.removeAllListeners(_ExpoMediaLibrary.default.CHANGE_LISTENER_NAME);\n  }\n  // @needsAudit\n  /**\n   * Fetches a list of moments, which is a group of assets taken around the same place\n   * and time.\n   * @return An array of [albums](#album) whose type is `moment`.\n   * @platform ios\n   */\n  function getMomentsAsync() {\n    return _getMomentsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Moves album content to the special media directories on **Android R** or **above** if needed.\n   * Those new locations are in line with the Android `scoped storage` - so your application won't\n   * lose write permission to those directories in the future.\n   *\n   * This method does nothing if:\n   * - app is running on **iOS**, **web** or **Android below R**\n   * - app has **write permission** to the album folder\n   *\n   * The migration is possible when the album contains only compatible files types.\n   * For instance, movies and pictures are compatible with each other, but music and pictures are not.\n   * If automatic migration isn't possible, the function rejects.\n   * In that case, you can use methods from the `expo-file-system` to migrate all your files manually.\n   *\n   * # Why do you need to migrate files?\n   * __Android R__ introduced a lot of changes in the storage system. Now applications can't save\n   * anything to the root directory. The only available locations are from the `MediaStore` API.\n   * Unfortunately, the media library stored albums in folders for which, because of those changes,\n   * the application doesn't have permissions anymore. However, it doesn't mean you need to migrate\n   * all your albums. If your application doesn't add assets to albums, you don't have to migrate.\n   * Everything will work as it used to. You can read more about scoped storage in [the Android documentation](https://developer.android.com/about/versions/11/privacy/storage).\n   *\n   * @param album An [Album](#album) or its ID.\n   * @return A promise which fulfils to `void`.\n   */\n  function _getMomentsAsync() {\n    _getMomentsAsync = (0, _asyncToGenerator2.default)(function* () {\n      if (!_ExpoMediaLibrary.default.getMomentsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getMomentsAsync');\n      }\n      return yield _ExpoMediaLibrary.default.getMomentsAsync();\n    });\n    return _getMomentsAsync.apply(this, arguments);\n  }\n  function migrateAlbumIfNeededAsync(_x12) {\n    return _migrateAlbumIfNeededAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Checks if the album should be migrated to a different location. In other words, it checks if the\n   * application has the write permission to the album folder. If not, it returns `true`, otherwise `false`.\n   * > Note: For **Android below R**, **web** or **iOS**, this function always returns `false`.\n   * @param album An [Album](#album) or its ID.\n   * @return Returns a promise which fulfils with `true` if the album should be migrated.\n   */\n  function _migrateAlbumIfNeededAsync() {\n    _migrateAlbumIfNeededAsync = (0, _asyncToGenerator2.default)(function* (album) {\n      if (!_ExpoMediaLibrary.default.migrateAlbumIfNeededAsync) {\n        return;\n      }\n      return yield _ExpoMediaLibrary.default.migrateAlbumIfNeededAsync(getId(album));\n    });\n    return _migrateAlbumIfNeededAsync.apply(this, arguments);\n  }\n  function albumNeedsMigrationAsync(_x13) {\n    return _albumNeedsMigrationAsync.apply(this, arguments);\n  }\n  function _albumNeedsMigrationAsync() {\n    _albumNeedsMigrationAsync = (0, _asyncToGenerator2.default)(function* (album) {\n      if (!_ExpoMediaLibrary.default.albumNeedsMigrationAsync) {\n        return false;\n      }\n      return yield _ExpoMediaLibrary.default.albumNeedsMigrationAsync(getId(album));\n    });\n    return _albumNeedsMigrationAsync.apply(this, arguments);\n  }\n});","lineCount":661,"map":[[37,2,1,0],[37,6,1,0,"_expoModulesCore"],[37,22,1,0],[37,25,1,0,"require"],[37,32,1,0],[37,33,1,0,"_dependencyMap"],[37,47,1,0],[38,2,2,0],[38,6,2,0,"_reactNative"],[38,18,2,0],[38,21,2,0,"require"],[38,28,2,0],[38,29,2,0,"_dependencyMap"],[38,43,2,0],[39,2,3,0],[39,6,3,0,"_ExpoMediaLibrary"],[39,23,3,0],[39,26,3,0,"_interopRequireDefault"],[39,48,3,0],[39,49,3,0,"require"],[39,56,3,0],[39,57,3,0,"_dependencyMap"],[39,71,3,0],[40,2,3,46],[40,6,3,46,"_globalThis$expo"],[40,22,3,46],[41,2,4,0],[41,6,4,6,"isExpoGo"],[41,14,4,14],[41,17,4,17],[41,24,4,24,"expo"],[41,28,4,28],[41,33,4,33],[41,44,4,44],[41,50,4,44,"_globalThis$expo"],[41,66,4,44],[41,69,4,48,"globalThis"],[41,79,4,58],[41,80,4,59,"expo"],[41,84,4,63],[41,98,4,63,"_globalThis$expo"],[41,114,4,63],[41,117,4,48,"_globalThis$expo"],[41,133,4,48],[41,134,4,65,"modules"],[41,141,4,72],[41,162,4,48,"_globalThis$expo"],[41,178,4,48],[41,179,4,74,"ExpoGo"],[41,185,4,80],[42,2,5,0],[42,6,5,4,"loggedExpoGoWarning"],[42,25,5,23],[42,28,5,26],[42,33,5,31],[43,2,6,0],[43,6,6,4,"isExpoGo"],[43,14,6,12],[43,18,6,16],[43,19,6,17,"loggedExpoGoWarning"],[43,38,6,36],[43,40,6,38],[44,4,7,4,"console"],[44,11,7,11],[44,12,7,12,"warn"],[44,16,7,16],[44,17,7,17],[44,281,7,281],[44,282,7,282],[45,4,8,4,"loggedExpoGoWarning"],[45,23,8,23],[45,26,8,26],[45,30,8,30],[46,2,9,0],[47,2,11,0],[47,11,11,9,"arrayize"],[47,19,11,17,"arrayize"],[47,20,11,18,"item"],[47,24,11,22],[47,26,11,24],[48,4,12,4],[48,8,12,8,"Array"],[48,13,12,13],[48,14,12,14,"isArray"],[48,21,12,21],[48,22,12,22,"item"],[48,26,12,26],[48,27,12,27],[48,29,12,29],[49,6,13,8],[49,13,13,15,"item"],[49,17,13,19],[50,4,14,4],[51,4,15,4],[51,11,15,11,"item"],[51,15,15,15],[51,18,15,18],[51,19,15,19,"item"],[51,23,15,23],[51,24,15,24],[51,27,15,27],[51,29,15,29],[52,2,16,0],[53,2,17,0],[53,11,17,9,"getId"],[53,16,17,14,"getId"],[53,17,17,15,"ref"],[53,20,17,18],[53,22,17,20],[54,4,18,4],[54,8,18,8],[54,15,18,15,"ref"],[54,18,18,18],[54,23,18,23],[54,31,18,31],[54,33,18,33],[55,6,19,8],[55,13,19,15,"ref"],[55,16,19,18],[56,4,20,4],[57,4,21,4],[57,11,21,11,"ref"],[57,14,21,14],[57,17,21,17,"ref"],[57,20,21,20],[57,21,21,21,"id"],[57,23,21,23],[57,26,21,26,"undefined"],[57,35,21,35],[58,2,22,0],[59,2,23,0],[59,11,23,9,"checkAssetIds"],[59,24,23,22,"checkAssetIds"],[59,25,23,23,"assetIds"],[59,33,23,31],[59,35,23,33],[60,4,24,4],[60,8,24,8,"assetIds"],[60,16,24,16],[60,17,24,17,"some"],[60,21,24,21],[60,22,24,22],[60,32,24,23,"id"],[60,34,24,25],[61,6,24,25],[61,13,24,30],[61,14,24,31,"id"],[61,16,24,33],[61,20,24,37],[61,27,24,44,"id"],[61,29,24,46],[61,34,24,51],[61,42,24,59],[62,4,24,59],[62,6,24,60],[62,8,24,62],[63,6,25,8],[63,12,25,14],[63,16,25,18,"Error"],[63,21,25,23],[63,22,25,24],[63,50,25,52],[63,51,25,53],[64,4,26,4],[65,2,27,0],[66,2,28,0],[66,11,28,9,"checkAlbumIds"],[66,24,28,22,"checkAlbumIds"],[66,25,28,23,"albumIds"],[66,33,28,31],[66,35,28,33],[67,4,29,4],[67,8,29,8,"albumIds"],[67,16,29,16],[67,17,29,17,"some"],[67,21,29,21],[67,22,29,22],[67,32,29,23,"id"],[67,34,29,25],[68,6,29,25],[68,13,29,30],[68,14,29,31,"id"],[68,16,29,33],[68,20,29,37],[68,27,29,44,"id"],[68,29,29,46],[68,34,29,51],[68,42,29,59],[69,4,29,59],[69,6,29,60],[69,8,29,62],[70,6,30,8],[70,12,30,14],[70,16,30,18,"Error"],[70,21,30,23],[70,22,30,24],[70,50,30,52],[70,51,30,53],[71,4,31,4],[72,2,32,0],[73,2,33,0],[73,11,33,9,"checkMediaType"],[73,25,33,23,"checkMediaType"],[73,26,33,24,"mediaType"],[73,35,33,33],[73,37,33,35],[74,4,34,4],[74,8,34,8,"Object"],[74,14,34,14],[74,15,34,15,"values"],[74,21,34,21],[74,22,34,22,"MediaType"],[74,31,34,31],[74,32,34,32],[74,33,34,33,"indexOf"],[74,40,34,40],[74,41,34,41,"mediaType"],[74,50,34,50],[74,51,34,51],[74,56,34,56],[74,57,34,57],[74,58,34,58],[74,60,34,60],[75,6,35,8],[75,12,35,14],[75,16,35,18,"Error"],[75,21,35,23],[75,22,35,24],[75,44,35,46,"mediaType"],[75,53,35,55],[75,55,35,57],[75,56,35,58],[76,4,36,4],[77,2,37,0],[78,2,38,0],[78,11,38,9,"checkSortBy"],[78,22,38,20,"checkSortBy"],[78,23,38,21,"sortBy"],[78,29,38,27],[78,31,38,29],[79,4,39,4],[79,8,39,8,"Array"],[79,13,39,13],[79,14,39,14,"isArray"],[79,21,39,21],[79,22,39,22,"sortBy"],[79,28,39,28],[79,29,39,29],[79,31,39,31],[80,6,40,8,"checkSortByKey"],[80,20,40,22],[80,21,40,23,"sortBy"],[80,27,40,29],[80,28,40,30],[80,29,40,31],[80,30,40,32],[80,31,40,33],[81,6,41,8],[81,10,41,12],[81,17,41,19,"sortBy"],[81,23,41,25],[81,24,41,26],[81,25,41,27],[81,26,41,28],[81,31,41,33],[81,40,41,42],[81,42,41,44],[82,8,42,12],[82,14,42,18],[82,18,42,22,"Error"],[82,23,42,27],[82,24,42,28],[82,87,42,91],[82,88,42,92],[83,6,43,8],[84,4,44,4],[84,5,44,5],[84,11,45,9],[85,6,46,8,"checkSortByKey"],[85,20,46,22],[85,21,46,23,"sortBy"],[85,27,46,29],[85,28,46,30],[86,4,47,4],[87,2,48,0],[88,2,49,0],[88,11,49,9,"checkSortByKey"],[88,25,49,23,"checkSortByKey"],[88,26,49,24,"sortBy"],[88,32,49,30],[88,34,49,32],[89,4,50,4],[89,8,50,8,"Object"],[89,14,50,14],[89,15,50,15,"values"],[89,21,50,21],[89,22,50,22,"SortBy"],[89,28,50,28],[89,29,50,29],[89,30,50,30,"indexOf"],[89,37,50,37],[89,38,50,38,"sortBy"],[89,44,50,44],[89,45,50,45],[89,50,50,50],[89,51,50,51],[89,52,50,52],[89,54,50,54],[90,6,51,8],[90,12,51,14],[90,16,51,18,"Error"],[90,21,51,23],[90,22,51,24],[90,45,51,47,"sortBy"],[90,51,51,53],[90,53,51,55],[90,54,51,56],[91,4,52,4],[92,2,53,0],[93,2,54,0],[93,11,54,9,"sortByOptionToString"],[93,31,54,29,"sortByOptionToString"],[93,32,54,30,"sortBy"],[93,38,54,36],[93,40,54,38],[94,4,55,4,"checkSortBy"],[94,15,55,15],[94,16,55,16,"sortBy"],[94,22,55,22],[94,23,55,23],[95,4,56,4],[95,8,56,8,"Array"],[95,13,56,13],[95,14,56,14,"isArray"],[95,21,56,21],[95,22,56,22,"sortBy"],[95,28,56,28],[95,29,56,29],[95,31,56,31],[96,6,57,8],[96,13,57,15],[96,16,57,18,"sortBy"],[96,22,57,24],[96,23,57,25],[96,24,57,26],[96,25,57,27],[96,29,57,31,"sortBy"],[96,35,57,37],[96,36,57,38],[96,37,57,39],[96,38,57,40],[96,41,57,43],[96,46,57,48],[96,49,57,51],[96,55,57,57],[96,57,57,59],[97,4,58,4],[98,4,59,4],[98,11,59,11],[98,14,59,14,"sortBy"],[98,20,59,20],[98,27,59,27],[99,2,60,0],[100,2,61,0],[100,11,61,9,"dateToNumber"],[100,23,61,21,"dateToNumber"],[100,24,61,22,"value"],[100,29,61,27],[100,31,61,29],[101,4,62,4],[101,11,62,11,"value"],[101,16,62,16],[101,28,62,28,"Date"],[101,32,62,32],[101,35,62,35,"value"],[101,40,62,40],[101,41,62,41,"getTime"],[101,48,62,48],[101,49,62,49],[101,50,62,50],[101,53,62,53,"value"],[101,58,62,58],[102,2,63,0],[103,2,64,0],[104,2,65,0],[105,0,66,0],[106,0,67,0],[107,2,68,7],[107,6,68,13,"MediaType"],[107,15,68,22],[107,18,68,22,"exports"],[107,25,68,22],[107,26,68,22,"MediaType"],[107,35,68,22],[107,38,68,25,"MediaLibrary"],[107,63,68,37],[107,64,68,38,"MediaType"],[107,73,68,47],[108,2,69,0],[109,2,70,0],[110,0,71,0],[111,0,72,0],[112,2,73,7],[112,6,73,13,"SortBy"],[112,12,73,19],[112,15,73,19,"exports"],[112,22,73,19],[112,23,73,19,"SortBy"],[112,29,73,19],[112,32,73,22,"MediaLibrary"],[112,57,73,34],[112,58,73,35,"SortBy"],[112,64,73,41],[113,2,74,0],[114,2,75,0],[115,0,76,0],[116,0,77,0],[117,0,78,0],[118,0,79,0],[119,2,75,0],[119,11,80,22,"isAvailableAsync"],[119,27,80,38,"isAvailableAsync"],[119,28,80,38],[120,4,80,38],[120,11,80,38,"_isAvailableAsync"],[120,28,80,38],[120,29,80,38,"apply"],[120,34,80,38],[120,41,80,38,"arguments"],[120,50,80,38],[121,2,80,38],[121,4,83,0],[122,2,84,0],[123,0,85,0],[124,0,86,0],[125,0,87,0],[126,0,88,0],[127,0,89,0],[128,0,90,0],[129,2,84,0],[129,11,84,0,"_isAvailableAsync"],[129,29,84,0],[130,4,84,0,"_isAvailableAsync"],[130,21,84,0],[130,28,84,0,"_asyncToGenerator2"],[130,46,84,0],[130,47,84,0,"default"],[130,54,84,0],[130,56,80,7],[130,69,80,41],[131,6,81,4],[131,13,81,11],[131,14,81,12],[131,15,81,13,"MediaLibrary"],[131,40,81,25],[131,44,81,29],[131,60,81,45],[131,64,81,49,"MediaLibrary"],[131,89,81,61],[132,4,82,0],[132,5,82,1],[133,4,82,1],[133,11,82,1,"_isAvailableAsync"],[133,28,82,1],[133,29,82,1,"apply"],[133,34,82,1],[133,41,82,1,"arguments"],[133,50,82,1],[134,2,82,1],[135,2,82,1],[135,11,91,22,"requestPermissionsAsync"],[135,34,91,45,"requestPermissionsAsync"],[135,35,91,45],[136,4,91,45],[136,11,91,45,"_requestPermissionsAsync"],[136,35,91,45],[136,36,91,45,"apply"],[136,41,91,45],[136,48,91,45,"arguments"],[136,57,91,45],[137,2,91,45],[137,4,100,0],[138,2,101,0],[139,0,102,0],[140,0,103,0],[141,0,104,0],[142,0,105,0],[143,0,106,0],[144,0,107,0],[145,2,101,0],[145,11,101,0,"_requestPermissionsAsync"],[145,36,101,0],[146,4,101,0,"_requestPermissionsAsync"],[146,28,101,0],[146,35,101,0,"_asyncToGenerator2"],[146,53,101,0],[146,54,101,0,"default"],[146,61,101,0],[146,63,91,7],[146,76,91,86],[147,6,91,86],[147,10,91,46,"writeOnly"],[147,19,91,55],[147,22,91,55,"arguments"],[147,31,91,55],[147,32,91,55,"length"],[147,38,91,55],[147,46,91,55,"arguments"],[147,55,91,55],[147,63,91,55,"undefined"],[147,72,91,55],[147,75,91,55,"arguments"],[147,84,91,55],[147,90,91,58],[147,95,91,63],[148,6,91,63],[148,10,91,65,"granularPermissions"],[148,29,91,84],[148,32,91,84,"arguments"],[148,41,91,84],[148,42,91,84,"length"],[148,48,91,84],[148,55,91,84,"arguments"],[148,64,91,84],[148,70,91,84,"undefined"],[148,79,91,84],[149,6,92,4],[149,10,92,8],[149,11,92,9,"MediaLibrary"],[149,36,92,21],[149,37,92,22,"requestPermissionsAsync"],[149,60,92,45],[149,62,92,47],[150,8,93,8],[150,14,93,14],[150,18,93,18,"UnavailabilityError"],[150,54,93,37],[150,55,93,38],[150,69,93,52],[150,71,93,54],[150,96,93,79],[150,97,93,80],[151,6,94,4],[152,6,95,4],[152,10,95,8,"Platform"],[152,31,95,16],[152,32,95,17,"OS"],[152,34,95,19],[152,39,95,24],[152,48,95,33],[152,50,95,35],[153,8,96,8],[153,21,96,21,"MediaLibrary"],[153,46,96,33],[153,47,96,34,"requestPermissionsAsync"],[153,70,96,57],[153,71,96,58,"writeOnly"],[153,80,96,67],[153,82,96,69,"granularPermissions"],[153,101,96,88],[153,102,96,89],[154,6,97,4],[155,6,98,4],[155,19,98,17,"MediaLibrary"],[155,44,98,29],[155,45,98,30,"requestPermissionsAsync"],[155,68,98,53],[155,69,98,54,"writeOnly"],[155,78,98,63],[155,79,98,64],[156,4,99,0],[156,5,99,1],[157,4,99,1],[157,11,99,1,"_requestPermissionsAsync"],[157,35,99,1],[157,36,99,1,"apply"],[157,41,99,1],[157,48,99,1,"arguments"],[157,57,99,1],[158,2,99,1],[159,2,99,1],[159,11,108,22,"getPermissionsAsync"],[159,30,108,41,"getPermissionsAsync"],[159,31,108,41],[160,4,108,41],[160,11,108,41,"_getPermissionsAsync"],[160,31,108,41],[160,32,108,41,"apply"],[160,37,108,41],[160,44,108,41,"arguments"],[160,53,108,41],[161,2,108,41],[161,4,117,0],[162,2,118,0],[163,0,119,0],[164,0,120,0],[165,0,121,0],[166,0,122,0],[167,0,123,0],[168,0,124,0],[169,0,125,0],[170,0,126,0],[171,2,118,0],[171,11,118,0,"_getPermissionsAsync"],[171,32,118,0],[172,4,118,0,"_getPermissionsAsync"],[172,24,118,0],[172,31,118,0,"_asyncToGenerator2"],[172,49,118,0],[172,50,118,0,"default"],[172,57,118,0],[172,59,108,7],[172,72,108,82],[173,6,108,82],[173,10,108,42,"writeOnly"],[173,19,108,51],[173,22,108,51,"arguments"],[173,31,108,51],[173,32,108,51,"length"],[173,38,108,51],[173,46,108,51,"arguments"],[173,55,108,51],[173,63,108,51,"undefined"],[173,72,108,51],[173,75,108,51,"arguments"],[173,84,108,51],[173,90,108,54],[173,95,108,59],[174,6,108,59],[174,10,108,61,"granularPermissions"],[174,29,108,80],[174,32,108,80,"arguments"],[174,41,108,80],[174,42,108,80,"length"],[174,48,108,80],[174,55,108,80,"arguments"],[174,64,108,80],[174,70,108,80,"undefined"],[174,79,108,80],[175,6,109,4],[175,10,109,8],[175,11,109,9,"MediaLibrary"],[175,36,109,21],[175,37,109,22,"getPermissionsAsync"],[175,56,109,41],[175,58,109,43],[176,8,110,8],[176,14,110,14],[176,18,110,18,"UnavailabilityError"],[176,54,110,37],[176,55,110,38],[176,69,110,52],[176,71,110,54],[176,92,110,75],[176,93,110,76],[177,6,111,4],[178,6,112,4],[178,10,112,8,"Platform"],[178,31,112,16],[178,32,112,17,"OS"],[178,34,112,19],[178,39,112,24],[178,48,112,33],[178,50,112,35],[179,8,113,8],[179,21,113,21,"MediaLibrary"],[179,46,113,33],[179,47,113,34,"getPermissionsAsync"],[179,66,113,53],[179,67,113,54,"writeOnly"],[179,76,113,63],[179,78,113,65,"granularPermissions"],[179,97,113,84],[179,98,113,85],[180,6,114,4],[181,6,115,4],[181,19,115,17,"MediaLibrary"],[181,44,115,29],[181,45,115,30,"getPermissionsAsync"],[181,64,115,49],[181,65,115,50,"writeOnly"],[181,74,115,59],[181,75,115,60],[182,4,116,0],[182,5,116,1],[183,4,116,1],[183,11,116,1,"_getPermissionsAsync"],[183,31,116,1],[183,32,116,1,"apply"],[183,37,116,1],[183,44,116,1,"arguments"],[183,53,116,1],[184,2,116,1],[185,2,127,7],[185,6,127,13,"usePermissions"],[185,20,127,27],[185,23,127,27,"exports"],[185,30,127,27],[185,31,127,27,"usePermissions"],[185,45,127,27],[185,48,127,30],[185,52,127,30,"createPermissionHook"],[185,89,127,50],[185,91,127,51],[186,4,128,4],[187,4,129,4,"getMethod"],[187,13,129,13],[187,15,129,15],[187,24,129,4,"getMethod"],[187,33,129,13,"getMethod"],[187,34,129,16,"options"],[187,41,129,23],[188,6,129,23],[188,13,129,28,"getPermissionsAsync"],[188,32,129,47],[188,33,129,48,"options"],[188,40,129,55],[188,60,129,48,"options"],[188,67,129,55],[188,68,129,57,"writeOnly"],[188,77,129,66],[188,79,129,68,"options"],[188,86,129,75],[188,106,129,68,"options"],[188,113,129,75],[188,114,129,77,"granularPermissions"],[188,133,129,96],[188,134,129,97],[189,4,129,97],[190,4,130,4,"requestMethod"],[190,17,130,17],[190,19,130,19],[190,28,130,4,"requestMethod"],[190,41,130,17,"requestMethod"],[190,42,130,20,"options"],[190,49,130,27],[191,6,130,27],[191,13,130,32,"requestPermissionsAsync"],[191,36,130,55],[191,37,130,56,"options"],[191,44,130,63],[191,64,130,56,"options"],[191,71,130,63],[191,72,130,65,"writeOnly"],[191,81,130,74],[191,83,130,76,"options"],[191,90,130,83],[191,110,130,76,"options"],[191,117,130,83],[191,118,130,85,"granularPermissions"],[191,137,130,104],[191,138,130,105],[192,4,130,105],[193,2,131,0],[193,3,131,1],[193,4,131,2],[194,2,132,0],[195,2,133,0],[196,0,134,0],[197,0,135,0],[198,0,136,0],[199,0,137,0],[200,0,138,0],[201,0,139,0],[202,0,140,0],[203,0,141,0],[204,0,142,0],[205,0,143,0],[206,0,144,0],[207,0,145,0],[208,0,146,0],[209,2,133,0],[209,11,147,22,"presentPermissionsPickerAsync"],[209,40,147,51,"presentPermissionsPickerAsync"],[209,41,147,51],[210,4,147,51],[210,11,147,51,"_presentPermissionsPickerAsync"],[210,41,147,51],[210,42,147,51,"apply"],[210,47,147,51],[210,54,147,51,"arguments"],[210,63,147,51],[211,2,147,51],[211,4,160,0],[212,2,161,0],[213,0,162,0],[214,0,163,0],[215,0,164,0],[216,0,165,0],[217,0,166,0],[218,0,167,0],[219,0,168,0],[220,0,169,0],[221,0,170,0],[222,0,171,0],[223,0,172,0],[224,0,173,0],[225,0,174,0],[226,0,175,0],[227,0,176,0],[228,2,161,0],[228,11,161,0,"_presentPermissionsPickerAsync"],[228,42,161,0],[229,4,161,0,"_presentPermissionsPickerAsync"],[229,34,161,0],[229,41,161,0,"_asyncToGenerator2"],[229,59,161,0],[229,60,161,0,"default"],[229,67,161,0],[229,69,147,7],[229,82,147,85],[230,6,147,85],[230,10,147,52,"mediaTypes"],[230,20,147,62],[230,23,147,62,"arguments"],[230,32,147,62],[230,33,147,62,"length"],[230,39,147,62],[230,47,147,62,"arguments"],[230,56,147,62],[230,64,147,62,"undefined"],[230,73,147,62],[230,76,147,62,"arguments"],[230,85,147,62],[230,91,147,65],[230,92,147,66],[230,99,147,73],[230,101,147,75],[230,108,147,82],[230,109,147,83],[231,6,148,4],[231,10,148,8,"Platform"],[231,31,148,16],[231,32,148,17,"OS"],[231,34,148,19],[231,39,148,24],[231,48,148,33],[231,52,148,37,"isExpoGo"],[231,60,148,45],[231,62,148,47],[232,8,149,8],[232,14,149,14],[232,18,149,18,"UnavailabilityError"],[232,54,149,37],[232,55,149,38],[232,69,149,52],[232,71,149,54],[232,128,149,111],[232,129,149,112],[233,6,150,4],[234,6,151,4],[234,10,151,8,"Platform"],[234,31,151,16],[234,32,151,17,"OS"],[234,34,151,19],[234,39,151,24],[234,48,151,33],[234,52,151,37,"Platform"],[234,73,151,45],[234,74,151,46,"Version"],[234,81,151,53],[234,85,151,57],[234,87,151,59],[234,89,151,61],[235,8,152,8],[235,14,152,14,"MediaLibrary"],[235,39,152,26],[235,40,152,27,"requestPermissionsAsync"],[235,63,152,50],[235,64,152,51],[235,69,152,56],[235,71,152,58,"mediaTypes"],[235,81,152,68],[235,82,152,69],[236,8,153,8],[237,6,154,4],[238,6,155,4],[238,10,155,8],[238,11,155,9,"MediaLibrary"],[238,36,155,21],[238,37,155,22,"presentPermissionsPickerAsync"],[238,66,155,51],[238,68,155,53],[239,8,156,8],[239,14,156,14],[239,18,156,18,"UnavailabilityError"],[239,54,156,37],[239,55,156,38],[239,69,156,52],[239,71,156,54],[239,102,156,85],[239,103,156,86],[240,6,157,4],[241,6,158,4],[241,19,158,17,"MediaLibrary"],[241,44,158,29],[241,45,158,30,"presentPermissionsPickerAsync"],[241,74,158,59],[241,75,158,60],[241,76,158,61],[242,4,159,0],[242,5,159,1],[243,4,159,1],[243,11,159,1,"_presentPermissionsPickerAsync"],[243,41,159,1],[243,42,159,1,"apply"],[243,47,159,1],[243,54,159,1,"arguments"],[243,63,159,1],[244,2,159,1],[245,2,159,1],[245,11,177,22,"createAssetAsync"],[245,27,177,38,"createAssetAsync"],[245,28,177,38,"_x"],[245,30,177,38],[245,32,177,38,"_x2"],[245,35,177,38],[246,4,177,38],[246,11,177,38,"_createAssetAsync"],[246,28,177,38],[246,29,177,38,"apply"],[246,34,177,38],[246,41,177,38,"arguments"],[246,50,177,38],[247,2,177,38],[247,4,192,0],[248,2,193,0],[249,0,194,0],[250,0,195,0],[251,0,196,0],[252,0,197,0],[253,0,198,0],[254,0,199,0],[255,0,200,0],[256,2,193,0],[256,11,193,0,"_createAssetAsync"],[256,29,193,0],[257,4,193,0,"_createAssetAsync"],[257,21,193,0],[257,28,193,0,"_asyncToGenerator2"],[257,46,193,0],[257,47,193,0,"default"],[257,54,193,0],[257,56,177,7],[257,67,177,39,"localUri"],[257,75,177,47],[257,77,177,49,"album"],[257,82,177,54],[257,84,177,56],[258,6,178,4],[258,10,178,8],[258,11,178,9,"MediaLibrary"],[258,36,178,21],[258,37,178,22,"createAssetAsync"],[258,53,178,38],[258,55,178,40],[259,8,179,8],[259,14,179,14],[259,18,179,18,"UnavailabilityError"],[259,54,179,37],[259,55,179,38],[259,69,179,52],[259,71,179,54],[259,89,179,72],[259,90,179,73],[260,6,180,4],[261,6,181,4],[261,10,181,10,"albumId"],[261,17,181,17],[261,20,181,20,"getId"],[261,25,181,25],[261,26,181,26,"album"],[261,31,181,31],[261,32,181,32],[262,6,182,4],[262,10,182,8],[262,11,182,9,"localUri"],[262,19,182,17],[262,23,182,21],[262,30,182,28,"localUri"],[262,38,182,36],[262,43,182,41],[262,51,182,49],[262,53,182,51],[263,8,183,8],[263,14,183,14],[263,18,183,18,"Error"],[263,23,183,23],[263,24,183,24],[263,75,183,75],[263,76,183,76],[264,6,184,4],[265,6,185,4],[265,10,185,10,"asset"],[265,15,185,15],[265,24,185,24,"MediaLibrary"],[265,49,185,36],[265,50,185,37,"createAssetAsync"],[265,66,185,53],[265,67,185,54,"localUri"],[265,75,185,62],[265,77,185,64,"albumId"],[265,84,185,71],[265,85,185,72],[266,6,186,4],[266,10,186,8,"Array"],[266,15,186,13],[266,16,186,14,"isArray"],[266,23,186,21],[266,24,186,22,"asset"],[266,29,186,27],[266,30,186,28],[266,32,186,30],[267,8,187,8],[268,8,188,8],[268,15,188,15,"asset"],[268,20,188,20],[268,21,188,21],[268,22,188,22],[268,23,188,23],[269,6,189,4],[270,6,190,4],[270,13,190,11,"asset"],[270,18,190,16],[271,4,191,0],[271,5,191,1],[272,4,191,1],[272,11,191,1,"_createAssetAsync"],[272,28,191,1],[272,29,191,1,"apply"],[272,34,191,1],[272,41,191,1,"arguments"],[272,50,191,1],[273,2,191,1],[274,2,191,1],[274,11,201,22,"saveToLibraryAsync"],[274,29,201,40,"saveToLibraryAsync"],[274,30,201,40,"_x3"],[274,33,201,40],[275,4,201,40],[275,11,201,40,"_saveToLibraryAsync"],[275,30,201,40],[275,31,201,40,"apply"],[275,36,201,40],[275,43,201,40,"arguments"],[275,52,201,40],[276,2,201,40],[276,4,207,0],[277,2,208,0],[278,0,209,0],[279,0,210,0],[280,0,211,0],[281,0,212,0],[282,0,213,0],[283,0,214,0],[284,0,215,0],[285,0,216,0],[286,0,217,0],[287,0,218,0],[288,0,219,0],[289,0,220,0],[290,2,208,0],[290,11,208,0,"_saveToLibraryAsync"],[290,31,208,0],[291,4,208,0,"_saveToLibraryAsync"],[291,23,208,0],[291,30,208,0,"_asyncToGenerator2"],[291,48,208,0],[291,49,208,0,"default"],[291,56,208,0],[291,58,201,7],[291,69,201,41,"localUri"],[291,77,201,49],[291,79,201,51],[292,6,202,4],[292,10,202,8],[292,11,202,9,"MediaLibrary"],[292,36,202,21],[292,37,202,22,"saveToLibraryAsync"],[292,55,202,40],[292,57,202,42],[293,8,203,8],[293,14,203,14],[293,18,203,18,"UnavailabilityError"],[293,54,203,37],[293,55,203,38],[293,69,203,52],[293,71,203,54],[293,91,203,74],[293,92,203,75],[294,6,204,4],[295,6,205,4],[295,19,205,17,"MediaLibrary"],[295,44,205,29],[295,45,205,30,"saveToLibraryAsync"],[295,63,205,48],[295,64,205,49,"localUri"],[295,72,205,57],[295,73,205,58],[296,4,206,0],[296,5,206,1],[297,4,206,1],[297,11,206,1,"_saveToLibraryAsync"],[297,30,206,1],[297,31,206,1,"apply"],[297,36,206,1],[297,43,206,1,"arguments"],[297,52,206,1],[298,2,206,1],[299,2,206,1],[299,11,221,22,"addAssetsToAlbumAsync"],[299,32,221,43,"addAssetsToAlbumAsync"],[299,33,221,43,"_x4"],[299,36,221,43],[299,38,221,43,"_x5"],[299,41,221,43],[300,4,221,43],[300,11,221,43,"_addAssetsToAlbumAsync"],[300,33,221,43],[300,34,221,43,"apply"],[300,39,221,43],[300,46,221,43,"arguments"],[300,55,221,43],[301,2,221,43],[301,4,236,0],[302,2,237,0],[303,0,238,0],[304,0,239,0],[305,0,240,0],[306,0,241,0],[307,0,242,0],[308,0,243,0],[309,0,244,0],[310,0,245,0],[311,2,237,0],[311,11,237,0,"_addAssetsToAlbumAsync"],[311,34,237,0],[312,4,237,0,"_addAssetsToAlbumAsync"],[312,26,237,0],[312,33,237,0,"_asyncToGenerator2"],[312,51,237,0],[312,52,237,0,"default"],[312,59,237,0],[312,61,221,7],[312,72,221,44,"assets"],[312,78,221,50],[312,80,221,52,"album"],[312,85,221,57],[312,87,221,72],[313,6,221,72],[313,10,221,59,"copy"],[313,14,221,63],[313,17,221,63,"arguments"],[313,26,221,63],[313,27,221,63,"length"],[313,33,221,63],[313,41,221,63,"arguments"],[313,50,221,63],[313,58,221,63,"undefined"],[313,67,221,63],[313,70,221,63,"arguments"],[313,79,221,63],[313,85,221,66],[313,89,221,70],[314,6,222,4],[314,10,222,8],[314,11,222,9,"MediaLibrary"],[314,36,222,21],[314,37,222,22,"addAssetsToAlbumAsync"],[314,58,222,43],[314,60,222,45],[315,8,223,8],[315,14,223,14],[315,18,223,18,"UnavailabilityError"],[315,54,223,37],[315,55,223,38],[315,69,223,52],[315,71,223,54],[315,94,223,77],[315,95,223,78],[316,6,224,4],[317,6,225,4],[317,10,225,10,"assetIds"],[317,18,225,18],[317,21,225,21,"arrayize"],[317,29,225,29],[317,30,225,30,"assets"],[317,36,225,36],[317,37,225,37],[317,38,225,38,"map"],[317,41,225,41],[317,42,225,42,"getId"],[317,47,225,47],[317,48,225,48],[318,6,226,4],[318,10,226,10,"albumId"],[318,17,226,17],[318,20,226,20,"getId"],[318,25,226,25],[318,26,226,26,"album"],[318,31,226,31],[318,32,226,32],[319,6,227,4,"checkAssetIds"],[319,19,227,17],[319,20,227,18,"assetIds"],[319,28,227,26],[319,29,227,27],[320,6,228,4],[320,10,228,8],[320,11,228,9,"albumId"],[320,18,228,16],[320,22,228,20],[320,29,228,27,"albumId"],[320,36,228,34],[320,41,228,39],[320,49,228,47],[320,51,228,49],[321,8,229,8],[321,14,229,14],[321,18,229,18,"Error"],[321,23,229,23],[321,24,229,24],[321,64,229,64],[321,65,229,65],[322,6,230,4],[323,6,231,4],[323,10,231,8,"Platform"],[323,31,231,16],[323,32,231,17,"OS"],[323,34,231,19],[323,39,231,24],[323,44,231,29],[323,46,231,31],[324,8,232,8],[324,21,232,21,"MediaLibrary"],[324,46,232,33],[324,47,232,34,"addAssetsToAlbumAsync"],[324,68,232,55],[324,69,232,56,"assetIds"],[324,77,232,64],[324,79,232,66,"albumId"],[324,86,232,73],[324,87,232,74],[325,6,233,4],[326,6,234,4],[326,19,234,17,"MediaLibrary"],[326,44,234,29],[326,45,234,30,"addAssetsToAlbumAsync"],[326,66,234,51],[326,67,234,52,"assetIds"],[326,75,234,60],[326,77,234,62,"albumId"],[326,84,234,69],[326,86,234,71],[326,87,234,72],[326,88,234,73,"copy"],[326,92,234,77],[326,93,234,78],[327,4,235,0],[327,5,235,1],[328,4,235,1],[328,11,235,1,"_addAssetsToAlbumAsync"],[328,33,235,1],[328,34,235,1,"apply"],[328,39,235,1],[328,46,235,1,"arguments"],[328,55,235,1],[329,2,235,1],[330,2,235,1],[330,11,246,22,"removeAssetsFromAlbumAsync"],[330,37,246,48,"removeAssetsFromAlbumAsync"],[330,38,246,48,"_x6"],[330,41,246,48],[330,43,246,48,"_x7"],[330,46,246,48],[331,4,246,48],[331,11,246,48,"_removeAssetsFromAlbumAsync"],[331,38,246,48],[331,39,246,48,"apply"],[331,44,246,48],[331,51,246,48,"arguments"],[331,60,246,48],[332,2,246,48],[332,4,255,0],[333,2,256,0],[334,0,257,0],[335,0,258,0],[336,0,259,0],[337,0,260,0],[338,0,261,0],[339,0,262,0],[340,2,256,0],[340,11,256,0,"_removeAssetsFromAlbumAsync"],[340,39,256,0],[341,4,256,0,"_removeAssetsFromAlbumAsync"],[341,31,256,0],[341,38,256,0,"_asyncToGenerator2"],[341,56,256,0],[341,57,256,0,"default"],[341,64,256,0],[341,66,246,7],[341,77,246,49,"assets"],[341,83,246,55],[341,85,246,57,"album"],[341,90,246,62],[341,92,246,64],[342,6,247,4],[342,10,247,8],[342,11,247,9,"MediaLibrary"],[342,36,247,21],[342,37,247,22,"removeAssetsFromAlbumAsync"],[342,63,247,48],[342,65,247,50],[343,8,248,8],[343,14,248,14],[343,18,248,18,"UnavailabilityError"],[343,54,248,37],[343,55,248,38],[343,69,248,52],[343,71,248,54],[343,99,248,82],[343,100,248,83],[344,6,249,4],[345,6,250,4],[345,10,250,10,"assetIds"],[345,18,250,18],[345,21,250,21,"arrayize"],[345,29,250,29],[345,30,250,30,"assets"],[345,36,250,36],[345,37,250,37],[345,38,250,38,"map"],[345,41,250,41],[345,42,250,42,"getId"],[345,47,250,47],[345,48,250,48],[346,6,251,4],[346,10,251,10,"albumId"],[346,17,251,17],[346,20,251,20,"getId"],[346,25,251,25],[346,26,251,26,"album"],[346,31,251,31],[346,32,251,32],[347,6,252,4,"checkAssetIds"],[347,19,252,17],[347,20,252,18,"assetIds"],[347,28,252,26],[347,29,252,27],[348,6,253,4],[348,19,253,17,"MediaLibrary"],[348,44,253,29],[348,45,253,30,"removeAssetsFromAlbumAsync"],[348,71,253,56],[348,72,253,57,"assetIds"],[348,80,253,65],[348,82,253,67,"albumId"],[348,89,253,74],[348,90,253,75],[349,4,254,0],[349,5,254,1],[350,4,254,1],[350,11,254,1,"_removeAssetsFromAlbumAsync"],[350,38,254,1],[350,39,254,1,"apply"],[350,44,254,1],[350,51,254,1,"arguments"],[350,60,254,1],[351,2,254,1],[352,2,254,1],[352,11,263,22,"deleteAssetsAsync"],[352,28,263,39,"deleteAssetsAsync"],[352,29,263,39,"_x8"],[352,32,263,39],[353,4,263,39],[353,11,263,39,"_deleteAssetsAsync"],[353,29,263,39],[353,30,263,39,"apply"],[353,35,263,39],[353,42,263,39,"arguments"],[353,51,263,39],[354,2,263,39],[354,4,271,0],[355,2,272,0],[356,0,273,0],[357,0,274,0],[358,0,275,0],[359,0,276,0],[360,0,277,0],[361,2,272,0],[361,11,272,0,"_deleteAssetsAsync"],[361,30,272,0],[362,4,272,0,"_deleteAssetsAsync"],[362,22,272,0],[362,29,272,0,"_asyncToGenerator2"],[362,47,272,0],[362,48,272,0,"default"],[362,55,272,0],[362,57,263,7],[362,68,263,40,"assets"],[362,74,263,46],[362,76,263,48],[363,6,264,4],[363,10,264,8],[363,11,264,9,"MediaLibrary"],[363,36,264,21],[363,37,264,22,"deleteAssetsAsync"],[363,54,264,39],[363,56,264,41],[364,8,265,8],[364,14,265,14],[364,18,265,18,"UnavailabilityError"],[364,54,265,37],[364,55,265,38],[364,69,265,52],[364,71,265,54],[364,90,265,73],[364,91,265,74],[365,6,266,4],[366,6,267,4],[366,10,267,10,"assetIds"],[366,18,267,18],[366,21,267,21,"arrayize"],[366,29,267,29],[366,30,267,30,"assets"],[366,36,267,36],[366,37,267,37],[366,38,267,38,"map"],[366,41,267,41],[366,42,267,42,"getId"],[366,47,267,47],[366,48,267,48],[367,6,268,4,"checkAssetIds"],[367,19,268,17],[367,20,268,18,"assetIds"],[367,28,268,26],[367,29,268,27],[368,6,269,4],[368,19,269,17,"MediaLibrary"],[368,44,269,29],[368,45,269,30,"deleteAssetsAsync"],[368,62,269,47],[368,63,269,48,"assetIds"],[368,71,269,56],[368,72,269,57],[369,4,270,0],[369,5,270,1],[370,4,270,1],[370,11,270,1,"_deleteAssetsAsync"],[370,29,270,1],[370,30,270,1,"apply"],[370,35,270,1],[370,42,270,1,"arguments"],[370,51,270,1],[371,2,270,1],[372,2,270,1],[372,11,278,22,"getAssetInfoAsync"],[372,28,278,39,"getAssetInfoAsync"],[372,29,278,39,"_x9"],[372,32,278,39],[373,4,278,39],[373,11,278,39,"_getAssetInfoAsync"],[373,29,278,39],[373,30,278,39,"apply"],[373,35,278,39],[373,42,278,39,"arguments"],[373,51,278,39],[374,2,278,39],[374,4,291,0],[375,2,292,0],[376,0,293,0],[377,0,294,0],[378,0,295,0],[379,0,296,0],[380,2,292,0],[380,11,292,0,"_getAssetInfoAsync"],[380,30,292,0],[381,4,292,0,"_getAssetInfoAsync"],[381,22,292,0],[381,29,292,0,"_asyncToGenerator2"],[381,47,292,0],[381,48,292,0,"default"],[381,55,292,0],[381,57,278,7],[381,68,278,40,"asset"],[381,73,278,45],[381,75,278,94],[382,6,278,94],[382,10,278,47,"options"],[382,17,278,54],[382,20,278,54,"arguments"],[382,29,278,54],[382,30,278,54,"length"],[382,36,278,54],[382,44,278,54,"arguments"],[382,53,278,54],[382,61,278,54,"undefined"],[382,70,278,54],[382,73,278,54,"arguments"],[382,82,278,54],[382,88,278,57],[383,8,278,59,"shouldDownloadFromNetwork"],[383,33,278,84],[383,35,278,86],[384,6,278,91],[384,7,278,92],[385,6,279,4],[385,10,279,8],[385,11,279,9,"MediaLibrary"],[385,36,279,21],[385,37,279,22,"getAssetInfoAsync"],[385,54,279,39],[385,56,279,41],[386,8,280,8],[386,14,280,14],[386,18,280,18,"UnavailabilityError"],[386,54,280,37],[386,55,280,38],[386,69,280,52],[386,71,280,54],[386,90,280,73],[386,91,280,74],[387,6,281,4],[388,6,282,4],[388,10,282,10,"assetId"],[388,17,282,17],[388,20,282,20,"getId"],[388,25,282,25],[388,26,282,26,"asset"],[388,31,282,31],[388,32,282,32],[389,6,283,4,"checkAssetIds"],[389,19,283,17],[389,20,283,18],[389,21,283,19,"assetId"],[389,28,283,26],[389,29,283,27],[389,30,283,28],[390,6,284,4],[390,10,284,10,"assetInfo"],[390,19,284,19],[390,28,284,28,"MediaLibrary"],[390,53,284,40],[390,54,284,41,"getAssetInfoAsync"],[390,71,284,58],[390,72,284,59,"assetId"],[390,79,284,66],[390,81,284,68,"options"],[390,88,284,75],[390,89,284,76],[391,6,285,4],[391,10,285,8,"Array"],[391,15,285,13],[391,16,285,14,"isArray"],[391,23,285,21],[391,24,285,22,"assetInfo"],[391,33,285,31],[391,34,285,32],[391,36,285,34],[392,8,286,8],[393,8,287,8],[393,15,287,15,"assetInfo"],[393,24,287,24],[393,25,287,25],[393,26,287,26],[393,27,287,27],[394,6,288,4],[395,6,289,4],[395,13,289,11,"assetInfo"],[395,22,289,20],[396,4,290,0],[396,5,290,1],[397,4,290,1],[397,11,290,1,"_getAssetInfoAsync"],[397,29,290,1],[397,30,290,1,"apply"],[397,35,290,1],[397,42,290,1,"arguments"],[397,51,290,1],[398,2,290,1],[399,2,290,1],[399,11,297,22,"getAlbumsAsync"],[399,25,297,36,"getAlbumsAsync"],[399,26,297,36],[400,4,297,36],[400,11,297,36,"_getAlbumsAsync"],[400,26,297,36],[400,27,297,36,"apply"],[400,32,297,36],[400,39,297,36,"arguments"],[400,48,297,36],[401,2,297,36],[401,4,303,0],[402,2,304,0],[403,0,305,0],[404,0,306,0],[405,0,307,0],[406,0,308,0],[407,0,309,0],[408,2,304,0],[408,11,304,0,"_getAlbumsAsync"],[408,27,304,0],[409,4,304,0,"_getAlbumsAsync"],[409,19,304,0],[409,26,304,0,"_asyncToGenerator2"],[409,44,304,0],[409,45,304,0,"default"],[409,52,304,0],[409,54,297,7],[409,67,297,74],[410,6,297,74],[410,10,297,74,"_ref"],[410,14,297,74],[410,17,297,74,"arguments"],[410,26,297,74],[410,27,297,74,"length"],[410,33,297,74],[410,41,297,74,"arguments"],[410,50,297,74],[410,58,297,74,"undefined"],[410,67,297,74],[410,70,297,74,"arguments"],[410,79,297,74],[410,85,297,70],[410,86,297,71],[410,87,297,72],[411,8,297,72,"_ref$includeSmartAlbu"],[411,29,297,72],[411,32,297,72,"_ref"],[411,36,297,72],[411,37,297,39,"includeSmartAlbums"],[411,55,297,57],[412,8,297,39,"includeSmartAlbums"],[412,26,297,57],[412,29,297,57,"_ref$includeSmartAlbu"],[412,50,297,57],[412,64,297,60],[412,69,297,65],[412,72,297,65,"_ref$includeSmartAlbu"],[412,93,297,65],[413,6,298,4],[413,10,298,8],[413,11,298,9,"MediaLibrary"],[413,36,298,21],[413,37,298,22,"getAlbumsAsync"],[413,51,298,36],[413,53,298,38],[414,8,299,8],[414,14,299,14],[414,18,299,18,"UnavailabilityError"],[414,54,299,37],[414,55,299,38],[414,69,299,52],[414,71,299,54],[414,87,299,70],[414,88,299,71],[415,6,300,4],[416,6,301,4],[416,19,301,17,"MediaLibrary"],[416,44,301,29],[416,45,301,30,"getAlbumsAsync"],[416,59,301,44],[416,60,301,45],[417,8,301,47,"includeSmartAlbums"],[417,26,301,65],[417,28,301,47,"includeSmartAlbums"],[418,6,301,66],[418,7,301,67],[418,8,301,68],[419,4,302,0],[419,5,302,1],[420,4,302,1],[420,11,302,1,"_getAlbumsAsync"],[420,26,302,1],[420,27,302,1,"apply"],[420,32,302,1],[420,39,302,1,"arguments"],[420,48,302,1],[421,2,302,1],[422,2,302,1],[422,11,310,22,"getAlbumAsync"],[422,24,310,35,"getAlbumAsync"],[422,25,310,35,"_x0"],[422,28,310,35],[423,4,310,35],[423,11,310,35,"_getAlbumAsync"],[423,25,310,35],[423,26,310,35,"apply"],[423,31,310,35],[423,38,310,35,"arguments"],[423,47,310,35],[424,2,310,35],[424,4,319,0],[425,2,320,0],[426,0,321,0],[427,0,322,0],[428,0,323,0],[429,0,324,0],[430,0,325,0],[431,0,326,0],[432,0,327,0],[433,0,328,0],[434,0,329,0],[435,0,330,0],[436,0,331,0],[437,0,332,0],[438,0,333,0],[439,0,334,0],[440,2,320,0],[440,11,320,0,"_getAlbumAsync"],[440,26,320,0],[441,4,320,0,"_getAlbumAsync"],[441,18,320,0],[441,25,320,0,"_asyncToGenerator2"],[441,43,320,0],[441,44,320,0,"default"],[441,51,320,0],[441,53,310,7],[441,64,310,36,"title"],[441,69,310,41],[441,71,310,43],[442,6,311,4],[442,10,311,8],[442,11,311,9,"MediaLibrary"],[442,36,311,21],[442,37,311,22,"getAlbumAsync"],[442,50,311,35],[442,52,311,37],[443,8,312,8],[443,14,312,14],[443,18,312,18,"UnavailabilityError"],[443,54,312,37],[443,55,312,38],[443,69,312,52],[443,71,312,54],[443,86,312,69],[443,87,312,70],[444,6,313,4],[445,6,314,4],[445,10,314,8],[445,17,314,15,"title"],[445,22,314,20],[445,27,314,25],[445,35,314,33],[445,37,314,35],[446,8,315,8],[446,14,315,14],[446,18,315,18,"Error"],[446,23,315,23],[446,24,315,24],[446,55,315,55],[446,56,315,56],[447,6,316,4],[448,6,317,4],[448,19,317,17,"MediaLibrary"],[448,44,317,29],[448,45,317,30,"getAlbumAsync"],[448,58,317,43],[448,59,317,44,"title"],[448,64,317,49],[448,65,317,50],[449,4,318,0],[449,5,318,1],[450,4,318,1],[450,11,318,1,"_getAlbumAsync"],[450,25,318,1],[450,26,318,1,"apply"],[450,31,318,1],[450,38,318,1,"arguments"],[450,47,318,1],[451,2,318,1],[452,2,318,1],[452,11,335,22,"createAlbumAsync"],[452,27,335,38,"createAlbumAsync"],[452,28,335,38,"_x1"],[452,31,335,38],[452,33,335,38,"_x10"],[452,37,335,38],[453,4,335,38],[453,11,335,38,"_createAlbumAsync"],[453,28,335,38],[453,29,335,38,"apply"],[453,34,335,38],[453,41,335,38,"arguments"],[453,50,335,38],[454,2,335,38],[454,4,357,0],[455,2,358,0],[456,0,359,0],[457,0,360,0],[458,0,361,0],[459,0,362,0],[460,0,363,0],[461,0,364,0],[462,0,365,0],[463,0,366,0],[464,0,367,0],[465,2,358,0],[465,11,358,0,"_createAlbumAsync"],[465,29,358,0],[466,4,358,0,"_createAlbumAsync"],[466,21,358,0],[466,28,358,0,"_asyncToGenerator2"],[466,46,358,0],[466,47,358,0,"default"],[466,54,358,0],[466,56,335,7],[466,67,335,39,"albumName"],[466,76,335,48],[466,78,335,50,"asset"],[466,83,335,55],[466,85,335,97],[467,6,335,97],[467,10,335,57,"copyAsset"],[467,19,335,66],[467,22,335,66,"arguments"],[467,31,335,66],[467,32,335,66,"length"],[467,38,335,66],[467,46,335,66,"arguments"],[467,55,335,66],[467,63,335,66,"undefined"],[467,72,335,66],[467,75,335,66,"arguments"],[467,84,335,66],[467,90,335,69],[467,94,335,73],[468,6,335,73],[468,10,335,75,"initialAssetLocalUri"],[468,30,335,95],[468,33,335,95,"arguments"],[468,42,335,95],[468,43,335,95,"length"],[468,49,335,95],[468,56,335,95,"arguments"],[468,65,335,95],[468,71,335,95,"undefined"],[468,80,335,95],[469,6,336,4],[469,10,336,8],[469,11,336,9,"MediaLibrary"],[469,36,336,21],[469,37,336,22,"createAlbumAsync"],[469,53,336,38],[469,55,336,40],[470,8,337,8],[470,14,337,14],[470,18,337,18,"UnavailabilityError"],[470,54,337,37],[470,55,337,38],[470,69,337,52],[470,71,337,54],[470,89,337,72],[470,90,337,73],[471,6,338,4],[472,6,339,4],[472,10,339,10,"assetId"],[472,17,339,17],[472,20,339,20,"getId"],[472,25,339,25],[472,26,339,26,"asset"],[472,31,339,31],[472,32,339,32],[473,6,340,4],[473,10,340,8,"Platform"],[473,31,340,16],[473,32,340,17,"OS"],[473,34,340,19],[473,39,340,24],[473,48,340,33],[473,53,341,9],[473,60,341,16,"assetId"],[473,67,341,23],[473,72,341,28],[473,80,341,36],[473,84,341,40,"assetId"],[473,91,341,47],[473,92,341,48,"length"],[473,98,341,54],[473,103,341,59],[473,104,341,60],[473,105,341,61],[473,109,342,8],[473,110,342,9,"initialAssetLocalUri"],[473,130,342,29],[473,132,342,31],[474,8,343,8],[475,8,344,8],[475,14,344,14],[475,18,344,18,"Error"],[475,23,344,23],[475,24,344,24],[475,110,344,110],[475,111,344,111],[476,6,345,4],[477,6,346,4],[477,10,346,8],[477,11,346,9,"albumName"],[477,20,346,18],[477,24,346,22],[477,31,346,29,"albumName"],[477,40,346,38],[477,45,346,43],[477,53,346,51],[477,55,346,53],[478,8,347,8],[478,14,347,14],[478,18,347,18,"Error"],[478,23,347,23],[478,24,347,24],[478,76,347,76],[478,77,347,77],[479,6,348,4],[480,6,349,4],[480,10,349,8,"assetId"],[480,17,349,15],[480,21,349,19],[480,25,349,23],[480,29,349,27],[480,36,349,34,"assetId"],[480,43,349,41],[480,48,349,46],[480,56,349,54],[480,58,349,56],[481,8,350,8],[481,14,350,14],[481,18,350,18,"Error"],[481,23,350,23],[481,24,350,24],[481,52,350,52],[481,53,350,53],[482,6,351,4],[483,6,352,4],[483,10,352,8,"Platform"],[483,31,352,16],[483,32,352,17,"OS"],[483,34,352,19],[483,39,352,24],[483,44,352,29],[483,46,352,31],[484,8,353,8],[484,21,353,21,"MediaLibrary"],[484,46,353,33],[484,47,353,34,"createAlbumAsync"],[484,63,353,50],[484,64,353,51,"albumName"],[484,73,353,60],[484,75,353,62,"assetId"],[484,82,353,69],[484,84,353,71,"initialAssetLocalUri"],[484,104,353,91],[484,105,353,92],[485,6,354,4],[486,6,355,4],[486,19,355,17,"MediaLibrary"],[486,44,355,29],[486,45,355,30,"createAlbumAsync"],[486,61,355,46],[486,62,355,47,"albumName"],[486,71,355,56],[486,73,355,58,"assetId"],[486,80,355,65],[486,82,355,67],[486,83,355,68],[486,84,355,69,"copyAsset"],[486,93,355,78],[486,95,355,80,"initialAssetLocalUri"],[486,115,355,100],[486,116,355,101],[487,4,356,0],[487,5,356,1],[488,4,356,1],[488,11,356,1,"_createAlbumAsync"],[488,28,356,1],[488,29,356,1,"apply"],[488,34,356,1],[488,41,356,1,"arguments"],[488,50,356,1],[489,2,356,1],[490,2,356,1],[490,11,368,22,"deleteAlbumsAsync"],[490,28,368,39,"deleteAlbumsAsync"],[490,29,368,39,"_x11"],[490,33,368,39],[491,4,368,39],[491,11,368,39,"_deleteAlbumsAsync"],[491,29,368,39],[491,30,368,39,"apply"],[491,35,368,39],[491,42,368,39,"arguments"],[491,51,368,39],[492,2,368,39],[492,4,379,0],[493,2,380,0],[494,0,381,0],[495,0,382,0],[496,0,383,0],[497,0,384,0],[498,2,380,0],[498,11,380,0,"_deleteAlbumsAsync"],[498,30,380,0],[499,4,380,0,"_deleteAlbumsAsync"],[499,22,380,0],[499,29,380,0,"_asyncToGenerator2"],[499,47,380,0],[499,48,380,0,"default"],[499,55,380,0],[499,57,368,7],[499,68,368,40,"albums"],[499,74,368,46],[499,76,368,69],[500,6,368,69],[500,10,368,48,"assetRemove"],[500,21,368,59],[500,24,368,59,"arguments"],[500,33,368,59],[500,34,368,59,"length"],[500,40,368,59],[500,48,368,59,"arguments"],[500,57,368,59],[500,65,368,59,"undefined"],[500,74,368,59],[500,77,368,59,"arguments"],[500,86,368,59],[500,92,368,62],[500,97,368,67],[501,6,369,4],[501,10,369,8],[501,11,369,9,"MediaLibrary"],[501,36,369,21],[501,37,369,22,"deleteAlbumsAsync"],[501,54,369,39],[501,56,369,41],[502,8,370,8],[502,14,370,14],[502,18,370,18,"UnavailabilityError"],[502,54,370,37],[502,55,370,38],[502,69,370,52],[502,71,370,54],[502,90,370,73],[502,91,370,74],[503,6,371,4],[504,6,372,4],[504,10,372,10,"albumIds"],[504,18,372,18],[504,21,372,21,"arrayize"],[504,29,372,29],[504,30,372,30,"albums"],[504,36,372,36],[504,37,372,37],[504,38,372,38,"map"],[504,41,372,41],[504,42,372,42,"getId"],[504,47,372,47],[504,48,372,48],[505,6,373,4,"checkAlbumIds"],[505,19,373,17],[505,20,373,18,"albumIds"],[505,28,373,26],[505,29,373,27],[506,6,374,4],[506,10,374,8,"Platform"],[506,31,374,16],[506,32,374,17,"OS"],[506,34,374,19],[506,39,374,24],[506,48,374,33],[506,50,374,35],[507,8,375,8],[507,21,375,21,"MediaLibrary"],[507,46,375,33],[507,47,375,34,"deleteAlbumsAsync"],[507,64,375,51],[507,65,375,52,"albumIds"],[507,73,375,60],[507,74,375,61],[508,6,376,4],[509,6,377,4],[509,19,377,17,"MediaLibrary"],[509,44,377,29],[509,45,377,30,"deleteAlbumsAsync"],[509,62,377,47],[509,63,377,48,"albumIds"],[509,71,377,56],[509,73,377,58],[509,74,377,59],[509,75,377,60,"assetRemove"],[509,86,377,71],[509,87,377,72],[510,4,378,0],[510,5,378,1],[511,4,378,1],[511,11,378,1,"_deleteAlbumsAsync"],[511,29,378,1],[511,30,378,1,"apply"],[511,35,378,1],[511,42,378,1,"arguments"],[511,51,378,1],[512,2,378,1],[513,2,378,1],[513,11,385,22,"getAssetsAsync"],[513,25,385,36,"getAssetsAsync"],[513,26,385,36],[514,4,385,36],[514,11,385,36,"_getAssetsAsync"],[514,26,385,36],[514,27,385,36,"apply"],[514,32,385,36],[514,39,385,36,"arguments"],[514,48,385,36],[515,2,385,36],[515,4,421,0],[516,2,422,0],[517,0,423,0],[518,0,424,0],[519,0,425,0],[520,0,426,0],[521,0,427,0],[522,0,428,0],[523,0,429,0],[524,0,430,0],[525,0,431,0],[526,0,432,0],[527,2,422,0],[527,11,422,0,"_getAssetsAsync"],[527,27,422,0],[528,4,422,0,"_getAssetsAsync"],[528,19,422,0],[528,26,422,0,"_asyncToGenerator2"],[528,44,422,0],[528,45,422,0,"default"],[528,52,422,0],[528,54,385,7],[528,67,385,57],[529,6,385,57],[529,10,385,37,"assetsOptions"],[529,23,385,50],[529,26,385,50,"arguments"],[529,35,385,50],[529,36,385,50,"length"],[529,42,385,50],[529,50,385,50,"arguments"],[529,59,385,50],[529,67,385,50,"undefined"],[529,76,385,50],[529,79,385,50,"arguments"],[529,88,385,50],[529,94,385,53],[529,95,385,54],[529,96,385,55],[530,6,386,4],[530,10,386,8],[530,11,386,9,"MediaLibrary"],[530,36,386,21],[530,37,386,22,"getAssetsAsync"],[530,51,386,36],[530,53,386,38],[531,8,387,8],[531,14,387,14],[531,18,387,18,"UnavailabilityError"],[531,54,387,37],[531,55,387,38],[531,69,387,52],[531,71,387,54],[531,87,387,70],[531,88,387,71],[532,6,388,4],[533,6,389,4],[533,10,389,12,"first"],[533,15,389,17],[533,18,389,84,"assetsOptions"],[533,31,389,97],[533,32,389,12,"first"],[533,37,389,17],[534,8,389,19,"after"],[534,13,389,24],[534,16,389,84,"assetsOptions"],[534,29,389,97],[534,30,389,19,"after"],[534,35,389,24],[535,8,389,26,"album"],[535,13,389,31],[535,16,389,84,"assetsOptions"],[535,29,389,97],[535,30,389,26,"album"],[535,35,389,31],[536,8,389,33,"sortBy"],[536,14,389,39],[536,17,389,84,"assetsOptions"],[536,30,389,97],[536,31,389,33,"sortBy"],[536,37,389,39],[537,8,389,41,"mediaType"],[537,17,389,50],[537,20,389,84,"assetsOptions"],[537,33,389,97],[537,34,389,41,"mediaType"],[537,43,389,50],[538,8,389,52,"createdAfter"],[538,20,389,64],[538,23,389,84,"assetsOptions"],[538,36,389,97],[538,37,389,52,"createdAfter"],[538,49,389,64],[539,8,389,66,"createdBefore"],[539,21,389,79],[539,24,389,84,"assetsOptions"],[539,37,389,97],[539,38,389,66,"createdBefore"],[539,51,389,79],[540,6,390,4],[540,10,390,10,"options"],[540,17,390,17],[540,20,390,20],[541,8,391,8,"first"],[541,13,391,13],[541,15,391,15,"first"],[541,20,391,20],[541,24,391,24],[541,28,391,28],[541,31,391,31],[541,33,391,33],[541,36,391,36,"first"],[541,41,391,41],[542,8,392,8,"after"],[542,13,392,13],[542,15,392,15,"getId"],[542,20,392,20],[542,21,392,21,"after"],[542,26,392,26],[542,27,392,27],[543,8,393,8,"album"],[543,13,393,13],[543,15,393,15,"getId"],[543,20,393,20],[543,21,393,21,"album"],[543,26,393,26],[543,27,393,27],[544,8,394,8,"sortBy"],[544,14,394,14],[544,16,394,16,"arrayize"],[544,24,394,24],[544,25,394,25,"sortBy"],[544,31,394,31],[544,32,394,32],[545,8,395,8,"mediaType"],[545,17,395,17],[545,19,395,19,"arrayize"],[545,27,395,27],[545,28,395,28,"mediaType"],[545,37,395,37],[545,41,395,41],[545,42,395,42,"MediaType"],[545,51,395,51],[545,52,395,52,"photo"],[545,57,395,57],[545,58,395,58],[545,59,395,59],[546,8,396,8,"createdAfter"],[546,20,396,20],[546,22,396,22,"dateToNumber"],[546,34,396,34],[546,35,396,35,"createdAfter"],[546,47,396,47],[546,48,396,48],[547,8,397,8,"createdBefore"],[547,21,397,21],[547,23,397,23,"dateToNumber"],[547,35,397,35],[547,36,397,36,"createdBefore"],[547,49,397,49],[548,6,398,4],[548,7,398,5],[549,6,399,4],[549,10,399,8,"first"],[549,15,399,13],[549,19,399,17],[549,23,399,21],[549,27,399,25],[549,34,399,32,"options"],[549,41,399,39],[549,42,399,40,"first"],[549,47,399,45],[549,52,399,50],[549,60,399,58],[549,62,399,60],[550,8,400,8],[550,14,400,14],[550,18,400,18,"Error"],[550,23,400,23],[550,24,400,24],[550,58,400,58],[550,59,400,59],[551,6,401,4],[552,6,402,4],[552,10,402,8,"after"],[552,15,402,13],[552,19,402,17],[552,23,402,21],[552,27,402,25],[552,34,402,32,"options"],[552,41,402,39],[552,42,402,40,"after"],[552,47,402,45],[552,52,402,50],[552,60,402,58],[552,62,402,60],[553,8,403,8],[553,14,403,14],[553,18,403,18,"Error"],[553,23,403,23],[553,24,403,24],[553,58,403,58],[553,59,403,59],[554,6,404,4],[555,6,405,4],[555,10,405,8,"album"],[555,15,405,13],[555,19,405,17],[555,23,405,21],[555,27,405,25],[555,34,405,32,"options"],[555,41,405,39],[555,42,405,40,"album"],[555,47,405,45],[555,52,405,50],[555,60,405,58],[555,62,405,60],[556,8,406,8],[556,14,406,14],[556,18,406,18,"Error"],[556,23,406,23],[556,24,406,24],[556,58,406,58],[556,59,406,59],[557,6,407,4],[558,6,408,4],[558,10,408,8,"after"],[558,15,408,13],[558,19,408,17],[558,23,408,21],[558,27,408,25,"Platform"],[558,48,408,33],[558,49,408,34,"OS"],[558,51,408,36],[558,56,408,41],[558,65,408,50],[558,69,408,54,"isNaN"],[558,74,408,59],[558,75,408,60,"parseInt"],[558,83,408,68],[558,84,408,69,"getId"],[558,89,408,74],[558,90,408,75,"after"],[558,95,408,80],[558,96,408,81],[558,98,408,83],[558,100,408,85],[558,101,408,86],[558,102,408,87],[558,104,408,89],[559,8,409,8],[559,14,409,14],[559,18,409,18,"Error"],[559,23,409,23],[559,24,409,24],[559,60,409,60],[559,61,409,61],[560,6,410,4],[561,6,411,4],[561,10,411,8,"first"],[561,15,411,13],[561,19,411,17],[561,23,411,21],[561,27,411,25,"first"],[561,32,411,30],[561,35,411,33],[561,36,411,34],[561,38,411,36],[562,8,412,8],[562,14,412,14],[562,18,412,18,"Error"],[562,23,412,23],[562,24,412,24],[562,68,412,68],[562,69,412,69],[563,6,413,4],[564,6,414,4,"options"],[564,13,414,11],[564,14,414,12,"mediaType"],[564,23,414,21],[564,24,414,22,"forEach"],[564,31,414,29],[564,32,414,30,"checkMediaType"],[564,46,414,44],[564,47,414,45],[565,6,415,4],[566,6,416,4],[566,19,416,17,"MediaLibrary"],[566,44,416,29],[566,45,416,30,"getAssetsAsync"],[566,59,416,44],[566,60,416,44,"Object"],[566,66,416,44],[566,67,416,44,"assign"],[566,73,416,44],[566,78,417,11,"options"],[566,85,417,18],[567,8,418,8,"sortBy"],[567,14,418,14],[567,16,418,16,"options"],[567,23,418,23],[567,24,418,24,"sortBy"],[567,30,418,30],[567,31,418,31,"map"],[567,34,418,34],[567,35,418,35,"sortByOptionToString"],[567,55,418,55],[568,6,418,56],[568,8,419,5],[568,9,419,6],[569,4,420,0],[569,5,420,1],[570,4,420,1],[570,11,420,1,"_getAssetsAsync"],[570,26,420,1],[570,27,420,1,"apply"],[570,32,420,1],[570,39,420,1,"arguments"],[570,48,420,1],[571,2,420,1],[572,2,433,7],[572,11,433,16,"addListener"],[572,22,433,27,"addListener"],[572,23,433,28,"listener"],[572,31,433,36],[572,33,433,38],[573,4,434,4],[573,11,434,11,"MediaLibrary"],[573,36,434,23],[573,37,434,24,"addListener"],[573,48,434,35],[573,49,434,36,"MediaLibrary"],[573,74,434,48],[573,75,434,49,"CHANGE_LISTENER_NAME"],[573,95,434,69],[573,97,434,71,"listener"],[573,105,434,79],[573,106,434,80],[574,2,435,0],[575,2,436,0],[576,2,437,7],[576,11,437,16,"removeSubscription"],[576,29,437,34,"removeSubscription"],[576,30,437,35,"subscription"],[576,42,437,47],[576,44,437,49],[577,4,438,4,"subscription"],[577,16,438,16],[577,17,438,17,"remove"],[577,23,438,23],[577,24,438,24],[577,25,438,25],[578,2,439,0],[579,2,440,0],[580,2,441,0],[581,0,442,0],[582,0,443,0],[583,2,444,7],[583,11,444,16,"removeAllListeners"],[583,29,444,34,"removeAllListeners"],[583,30,444,34],[583,32,444,37],[584,4,445,4,"MediaLibrary"],[584,29,445,16],[584,30,445,17,"removeAllListeners"],[584,48,445,35],[584,49,445,36,"MediaLibrary"],[584,74,445,48],[584,75,445,49,"CHANGE_LISTENER_NAME"],[584,95,445,69],[584,96,445,70],[585,2,446,0],[586,2,447,0],[587,2,448,0],[588,0,449,0],[589,0,450,0],[590,0,451,0],[591,0,452,0],[592,0,453,0],[593,2,448,0],[593,11,454,22,"getMomentsAsync"],[593,26,454,37,"getMomentsAsync"],[593,27,454,37],[594,4,454,37],[594,11,454,37,"_getMomentsAsync"],[594,27,454,37],[594,28,454,37,"apply"],[594,33,454,37],[594,40,454,37,"arguments"],[594,49,454,37],[595,2,454,37],[595,4,460,0],[596,2,461,0],[597,0,462,0],[598,0,463,0],[599,0,464,0],[600,0,465,0],[601,0,466,0],[602,0,467,0],[603,0,468,0],[604,0,469,0],[605,0,470,0],[606,0,471,0],[607,0,472,0],[608,0,473,0],[609,0,474,0],[610,0,475,0],[611,0,476,0],[612,0,477,0],[613,0,478,0],[614,0,479,0],[615,0,480,0],[616,0,481,0],[617,0,482,0],[618,0,483,0],[619,0,484,0],[620,0,485,0],[621,2,461,0],[621,11,461,0,"_getMomentsAsync"],[621,28,461,0],[622,4,461,0,"_getMomentsAsync"],[622,20,461,0],[622,27,461,0,"_asyncToGenerator2"],[622,45,461,0],[622,46,461,0,"default"],[622,53,461,0],[622,55,454,7],[622,68,454,40],[623,6,455,4],[623,10,455,8],[623,11,455,9,"MediaLibrary"],[623,36,455,21],[623,37,455,22,"getMomentsAsync"],[623,52,455,37],[623,54,455,39],[624,8,456,8],[624,14,456,14],[624,18,456,18,"UnavailabilityError"],[624,54,456,37],[624,55,456,38],[624,69,456,52],[624,71,456,54],[624,88,456,71],[624,89,456,72],[625,6,457,4],[626,6,458,4],[626,19,458,17,"MediaLibrary"],[626,44,458,29],[626,45,458,30,"getMomentsAsync"],[626,60,458,45],[626,61,458,46],[626,62,458,47],[627,4,459,0],[627,5,459,1],[628,4,459,1],[628,11,459,1,"_getMomentsAsync"],[628,27,459,1],[628,28,459,1,"apply"],[628,33,459,1],[628,40,459,1,"arguments"],[628,49,459,1],[629,2,459,1],[630,2,459,1],[630,11,486,22,"migrateAlbumIfNeededAsync"],[630,36,486,47,"migrateAlbumIfNeededAsync"],[630,37,486,47,"_x12"],[630,41,486,47],[631,4,486,47],[631,11,486,47,"_migrateAlbumIfNeededAsync"],[631,37,486,47],[631,38,486,47,"apply"],[631,43,486,47],[631,50,486,47,"arguments"],[631,59,486,47],[632,2,486,47],[632,4,492,0],[633,2,493,0],[634,0,494,0],[635,0,495,0],[636,0,496,0],[637,0,497,0],[638,0,498,0],[639,0,499,0],[640,2,493,0],[640,11,493,0,"_migrateAlbumIfNeededAsync"],[640,38,493,0],[641,4,493,0,"_migrateAlbumIfNeededAsync"],[641,30,493,0],[641,37,493,0,"_asyncToGenerator2"],[641,55,493,0],[641,56,493,0,"default"],[641,63,493,0],[641,65,486,7],[641,76,486,48,"album"],[641,81,486,53],[641,83,486,55],[642,6,487,4],[642,10,487,8],[642,11,487,9,"MediaLibrary"],[642,36,487,21],[642,37,487,22,"migrateAlbumIfNeededAsync"],[642,62,487,47],[642,64,487,49],[643,8,488,8],[644,6,489,4],[645,6,490,4],[645,19,490,17,"MediaLibrary"],[645,44,490,29],[645,45,490,30,"migrateAlbumIfNeededAsync"],[645,70,490,55],[645,71,490,56,"getId"],[645,76,490,61],[645,77,490,62,"album"],[645,82,490,67],[645,83,490,68],[645,84,490,69],[646,4,491,0],[646,5,491,1],[647,4,491,1],[647,11,491,1,"_migrateAlbumIfNeededAsync"],[647,37,491,1],[647,38,491,1,"apply"],[647,43,491,1],[647,50,491,1,"arguments"],[647,59,491,1],[648,2,491,1],[649,2,491,1],[649,11,500,22,"albumNeedsMigrationAsync"],[649,35,500,46,"albumNeedsMigrationAsync"],[649,36,500,46,"_x13"],[649,40,500,46],[650,4,500,46],[650,11,500,46,"_albumNeedsMigrationAsync"],[650,36,500,46],[650,37,500,46,"apply"],[650,42,500,46],[650,49,500,46,"arguments"],[650,58,500,46],[651,2,500,46],[652,2,500,46],[652,11,500,46,"_albumNeedsMigrationAsync"],[652,37,500,46],[653,4,500,46,"_albumNeedsMigrationAsync"],[653,29,500,46],[653,36,500,46,"_asyncToGenerator2"],[653,54,500,46],[653,55,500,46,"default"],[653,62,500,46],[653,64,500,7],[653,75,500,47,"album"],[653,80,500,52],[653,82,500,54],[654,6,501,4],[654,10,501,8],[654,11,501,9,"MediaLibrary"],[654,36,501,21],[654,37,501,22,"albumNeedsMigrationAsync"],[654,61,501,46],[654,63,501,48],[655,8,502,8],[655,15,502,15],[655,20,502,20],[656,6,503,4],[657,6,504,4],[657,19,504,17,"MediaLibrary"],[657,44,504,29],[657,45,504,30,"albumNeedsMigrationAsync"],[657,69,504,54],[657,70,504,55,"getId"],[657,75,504,60],[657,76,504,61,"album"],[657,81,504,66],[657,82,504,67],[657,83,504,68],[658,4,505,0],[658,5,505,1],[659,4,505,1],[659,11,505,1,"_albumNeedsMigrationAsync"],[659,36,505,1],[659,37,505,1,"apply"],[659,42,505,1],[659,49,505,1,"arguments"],[659,58,505,1],[660,2,505,1],[661,0,505,1],[661,3]],"functionMap":{"names":["<global>","arrayize","getId","checkAssetIds","assetIds.some$argument_0","checkAlbumIds","albumIds.some$argument_0","checkMediaType","checkSortBy","checkSortByKey","sortByOptionToString","dateToNumber","isAvailableAsync","requestPermissionsAsync","getPermissionsAsync","createPermissionHook$argument_0.getMethod","createPermissionHook$argument_0.requestMethod","presentPermissionsPickerAsync","createAssetAsync","saveToLibraryAsync","addAssetsToAlbumAsync","removeAssetsFromAlbumAsync","deleteAssetsAsync","getAssetInfoAsync","getAlbumsAsync","getAlbumAsync","createAlbumAsync","deleteAlbumsAsync","getAssetsAsync","addListener","removeSubscription","removeAllListeners","getMomentsAsync","migrateAlbumIfNeededAsync","albumNeedsMigrationAsync"],"mappings":"AAA;ACU;CDK;AEC;CFK;AGC;sBCC,qCD;CHG;AKC;sBCC,qCD;CLG;AOC;CPI;AQC;CRU;ASC;CTI;AUC;CVM;AWC;CXE;OYiB;CZE;OaS;CbQ;OcS;CdQ;eea,kFf;mBgBC,sFhB;OiBiB;CjBY;OkBkB;ClBc;OmBU;CnBK;OoBe;CpBc;OqBW;CrBQ;OsBS;CtBO;OuBQ;CvBY;OwBO;CxBK;OyBQ;CzBQ;O0BiB;C1BqB;O2BY;C3BU;O4BO;C5BmC;O6Ba;C7BE;O8BE;C9BE;O+BK;C/BE;OgCQ;ChCK;OiC2B;CjCK;OkCS;ClCK"}},"type":"js/module"}]}